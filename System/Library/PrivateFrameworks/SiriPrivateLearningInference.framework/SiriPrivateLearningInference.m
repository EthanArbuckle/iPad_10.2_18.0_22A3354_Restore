uint64_t sub_213DAD794()
{
  uint64_t result;

  type metadata accessor for TimeBasedPlayMediaStitcher();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A240);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D39F48 = 91;
  unk_254D39F50 = 0xE100000000000000;
  return result;
}

uint64_t TimeBasedPlayMediaStitcher.__allocating_init(maximumTimeDeltaBetweenTurns:)(double a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a1;
  return result;
}

uint64_t TimeBasedPlayMediaStitcher.init(maximumTimeDeltaBetweenTurns:)(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = v1;
  *(double *)(v1 + 16) = a1;
  return result;
}

uint64_t sub_213DAD850(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  double v62;
  char v63;
  char v64;
  uint64_t v65;
  double v66;
  char v67;
  char v68;
  double v69;
  double v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  os_log_type_t v78;
  const char *v79;
  NSObject *v80;
  uint8_t *v81;
  uint32_t v82;
  uint64_t v83;
  os_log_type_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  void (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD v111[5];
  __int128 v112;
  uint64_t v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;

  v97 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v106 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v101 = (uint64_t)&v96 - v5;
  v6 = type metadata accessor for FeaturisedTurn(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v107 = (uint64_t)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v98 = (uint64_t)&v96 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v96 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v105 = (uint64_t)&v96 - v15;
  v16 = *a1;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 16);
  v108 = v6;
  v102 = v14;
  v103 = v16;
  if (!v17)
  {
    swift_bridgeObjectRetain();
LABEL_29:
    v31 = v102;
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
    v30 = v101;
    v32(v101, 1, 1, v6);
    goto LABEL_30;
  }
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v16
                                                          + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
  v109 = *(_QWORD *)(v14 + 72);
  swift_bridgeObjectRetain();
  v19 = 0;
  v110 = "essages.SendMessageIntent";
  v104 = 0x8000000213F04730;
  v100 = v17;
  v99 = v18;
  while (1)
  {
    sub_213DAFDB8((uint64_t)v18 + v109 * (_QWORD)v19, (uint64_t)v13);
    v20 = *(_QWORD *)&v13[*(int *)(v6 + 24)];
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = v20 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(v22, (uint64_t)&v112);
        sub_213DAFDFC((uint64_t)&v112, (uint64_t)v111);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF2214();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v112);
        v22 += 40;
        if (!--v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v112, (uint64_t)&v114);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_9:
      v116 = 0;
      v114 = 0u;
      v115 = 0u;
    }
    sub_213DAFE40((uint64_t)&v114, (uint64_t)&v112);
    if (!v113)
    {
      sub_213DAFEC4((uint64_t)&v112, &qword_253F06970);
LABEL_22:
      sub_213DAFEC4((uint64_t)&v114, &qword_253F06970);
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    sub_213EF2214();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_22;
    swift_retain();
    sub_213EF23D0();
    swift_release_n();
    v23 = v112;
    sub_213DAFEC4((uint64_t)&v114, &qword_253F06970);
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v23 + 16);
    if (!v24)
      goto LABEL_23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_213DAFF00();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_27;
    if (v24 != 1)
      break;
LABEL_20:
    swift_bridgeObjectRelease_n();
    v6 = v108;
    v17 = v100;
    v18 = v99;
LABEL_24:
    v19 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v19 + 1);
    sub_213DAFE88((uint64_t)v13);
    if (v19 == v17)
      goto LABEL_29;
  }
  v26 = v23 + 56;
  v27 = 1;
  while (1)
  {
    v28 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_97;
    }
    swift_bridgeObjectRetain();
    v29 = sub_213DAFF00();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      break;
    ++v27;
    v26 += 16;
    if (v28 == v24)
      goto LABEL_20;
  }
LABEL_27:
  swift_bridgeObjectRelease_n();
  v30 = v101;
  sub_213DB0B5C((uint64_t)v13, v101);
  v31 = v102;
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56);
  v6 = v108;
  v32(v30, 0, 1, v108);
LABEL_30:
  swift_bridgeObjectRelease();
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  v34 = v33(v30, 1, v6);
  v35 = v106;
  v36 = v107;
  if (v34 == 1)
  {
    v35 = v30;
    goto LABEL_63;
  }
  sub_213DB0B5C(v30, v105);
  v37 = *v97;
  v38 = *(_QWORD *)(*v97 + 16);
  if (!v38)
  {
    swift_bridgeObjectRetain();
    v53 = 1;
LABEL_61:
    v32(v35, v53, 1, v6);
    swift_bridgeObjectRelease();
    if (v33(v35, 1, v6) == 1)
    {
      sub_213DAFE88(v105);
LABEL_63:
      sub_213DAFEC4(v35, &qword_253F069B0);
      if (qword_253F04A88 != -1)
        goto LABEL_98;
      goto LABEL_64;
    }
    sub_213DB0B5C(v35, v98);
    v61 = swift_bridgeObjectRetain();
    v62 = COERCE_DOUBLE(sub_213DAE820(v61, (void (*)(_QWORD))MEMORY[0x24BEA51F8]));
    v64 = v63;
    swift_bridgeObjectRelease();
    if ((v64 & 1) != 0
      || (v65 = swift_bridgeObjectRetain(),
          v66 = COERCE_DOUBLE(sub_213DAE820(v65, MEMORY[0x24BEA5208])),
          v68 = v67,
          swift_bridgeObjectRelease(),
          (v68 & 1) != 0))
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v83 = sub_213EF2724();
      __swift_project_value_buffer(v83, (uint64_t)qword_253F08A00);
      v72 = sub_213EF270C();
      v84 = sub_213EF2CA0();
      if (!os_log_type_enabled(v72, v84))
        goto LABEL_85;
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      *(_QWORD *)&v114 = v75;
      *(_DWORD *)v74 = 136315138;
      if (qword_254D39F40 != -1)
        swift_once();
      v85 = qword_254D39F48;
      v86 = unk_254D39F50;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v112 = sub_213DB0570(v85, v86, (uint64_t *)&v114);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v78 = v84;
      v79 = "%s Failed to measure time between turns";
      v80 = v72;
      v81 = (uint8_t *)v74;
      v82 = 12;
    }
    else
    {
      v69 = v66 - v62;
      v70 = *(double *)(v96 + 16);
      if (v66 - v62 <= v70)
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v89 = sub_213EF2724();
        __swift_project_value_buffer(v89, (uint64_t)qword_253F08A00);
        v90 = sub_213EF270C();
        v91 = sub_213EF2C94();
        if (os_log_type_enabled(v90, v91))
        {
          v92 = (uint8_t *)swift_slowAlloc();
          v93 = swift_slowAlloc();
          *(_QWORD *)&v114 = v93;
          *(_DWORD *)v92 = 136315138;
          if (qword_254D39F40 != -1)
            swift_once();
          v94 = qword_254D39F48;
          v95 = unk_254D39F50;
          swift_bridgeObjectRetain();
          *(_QWORD *)&v112 = sub_213DB0570(v94, v95, (uint64_t *)&v114);
          sub_213EF2D9C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213DAB000, v90, v91, "%s Validation passed, stitching two relevant sessions together", v92, 0xCu);
          v87 = 1;
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v93, -1, -1);
          MEMORY[0x2199C53C4](v92, -1, -1);

          sub_213DAFE88(v98);
          sub_213DAFE88(v105);
        }
        else
        {

          sub_213DAFE88(v98);
          sub_213DAFE88(v105);
          return 1;
        }
        return v87;
      }
      if (qword_253F04A88 != -1)
        swift_once();
      v71 = sub_213EF2724();
      __swift_project_value_buffer(v71, (uint64_t)qword_253F08A00);
      swift_retain_n();
      v72 = sub_213EF270C();
      v73 = sub_213EF2C94();
      if (!os_log_type_enabled(v72, v73))
      {
        swift_release_n();
        goto LABEL_85;
      }
      v74 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      *(_QWORD *)&v114 = v75;
      *(_DWORD *)v74 = 136315650;
      if (qword_254D39F40 != -1)
        swift_once();
      v76 = qword_254D39F48;
      v77 = unk_254D39F50;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v112 = sub_213DB0570(v76, v77, (uint64_t *)&v114);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2048;
      *(double *)&v112 = v69;
      sub_213EF2D9C();
      *(_WORD *)(v74 + 22) = 2048;
      *(double *)&v112 = v70;
      sub_213EF2D9C();
      swift_release_n();
      v78 = v73;
      v79 = "%s Turns too far apart for sessions to be stitched (%fs, max: %fs)";
      v80 = v72;
      v81 = (uint8_t *)v74;
      v82 = 32;
    }
    _os_log_impl(&dword_213DAB000, v80, v78, v79, v81, v82);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v75, -1, -1);
    MEMORY[0x2199C53C4](v74, -1, -1);
LABEL_85:

    sub_213DAFE88(v98);
    sub_213DAFE88(v105);
    return 0;
  }
  v99 = v33;
  v100 = v32;
  v109 = v37 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v39 = *(_QWORD *)(v31 + 72);
  v102 = v37;
  swift_bridgeObjectRetain();
  v40 = 0;
  v41 = &qword_253F06970;
  v110 = "essages.SendMessageIntent";
  v104 = 0x8000000213F04730;
  v103 = v39;
  v101 = v38;
  while (1)
  {
    v42 = v41;
    sub_213DAFDB8(v109 + v39 * v40, v36);
    v43 = *(_QWORD *)(v36 + *(int *)(v6 + 24));
    v44 = *(_QWORD *)(v43 + 16);
    if (v44)
    {
      v45 = v43 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(v45, (uint64_t)&v112);
        sub_213DAFDFC((uint64_t)&v112, (uint64_t)v111);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF2214();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v112);
        v45 += 40;
        if (!--v44)
        {
          swift_bridgeObjectRelease();
          v6 = v108;
          goto LABEL_43;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v112, (uint64_t)&v114);
      v6 = v108;
      v41 = v42;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_43:
      v41 = v42;
      v116 = 0;
      v114 = 0u;
      v115 = 0u;
    }
    sub_213DAFE40((uint64_t)&v114, (uint64_t)&v112);
    if (v113)
      break;
    sub_213DAFEC4((uint64_t)&v112, v41);
LABEL_35:
    sub_213DAFEC4((uint64_t)&v114, v41);
    swift_bridgeObjectRelease();
LABEL_36:
    ++v40;
    sub_213DAFE88(v36);
    if (v40 == v38)
    {
      v53 = 1;
      v35 = v106;
      goto LABEL_60;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  sub_213EF2214();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_35;
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v46 = v112;
  sub_213DAFEC4((uint64_t)&v114, v41);
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(v46 + 16);
  if (!v47)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = sub_213DAFF00();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
  {
LABEL_57:
    swift_bridgeObjectRelease_n();
    v35 = v106;
    sub_213DB0B5C(v107, v106);
    v53 = 0;
    v6 = v108;
LABEL_60:
    v32 = v100;
    v33 = v99;
    goto LABEL_61;
  }
  if (v47 == 1)
  {
LABEL_54:
    swift_bridgeObjectRelease_n();
    v6 = v108;
    v36 = v107;
    v38 = v101;
    v39 = v103;
LABEL_56:
    v41 = v42;
    goto LABEL_36;
  }
  v49 = v46 + 56;
  v50 = 1;
  while (1)
  {
    v51 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    swift_bridgeObjectRetain();
    v52 = sub_213DAFF00();
    swift_bridgeObjectRelease();
    if ((v52 & 1) != 0)
      goto LABEL_57;
    ++v50;
    v49 += 16;
    if (v51 == v47)
      goto LABEL_54;
  }
LABEL_97:
  __break(1u);
LABEL_98:
  swift_once();
LABEL_64:
  v54 = sub_213EF2724();
  __swift_project_value_buffer(v54, (uint64_t)qword_253F08A00);
  v55 = sub_213EF270C();
  v56 = sub_213EF2CA0();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    *(_QWORD *)&v114 = v58;
    *(_DWORD *)v57 = 136315138;
    if (qword_254D39F40 != -1)
      swift_once();
    v59 = qword_254D39F48;
    v60 = unk_254D39F50;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v112 = sub_213DB0570(v59, v60, (uint64_t *)&v114);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v55, v56, "%s No adjacent play media turns", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v58, -1, -1);
    MEMORY[0x2199C53C4](v57, -1, -1);
  }

  return 0;
}

uint64_t TimeBasedPlayMediaStitcher.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TimeBasedPlayMediaStitcher.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213DAE7E4(uint64_t *a1, uint64_t *a2)
{
  return sub_213DAD850(a1, a2) & 1;
}

uint64_t sub_213DAE808(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))MEMORY[0x24BEA51F8]);
}

uint64_t sub_213DAE814(uint64_t a1)
{
  return sub_213DAE820(a1, MEMORY[0x24BEA5208]);
}

uint64_t sub_213DAE820(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v7);
      sub_213DAFDFC((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_213DAFE40((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_213DAFEC4((uint64_t)&v7, &qword_253F06970);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v5 = v7;
LABEL_13:
  sub_213DAFEC4((uint64_t)v9, &qword_253F06970);
  return v5;
}

uint64_t sub_213DAE9A8(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))MEMORY[0x24BEA4D30]);
}

uint64_t sub_213DAE9B4(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))type metadata accessor for CommonContactFeature.RecipientContactReferences);
}

uint64_t sub_213DAE9C0(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v7);
      sub_213DAFDFC((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_213DAFE40((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_213DAFEC4((uint64_t)&v7, &qword_253F06970);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v5 = v7;
LABEL_13:
  sub_213DAFEC4((uint64_t)v9, &qword_253F06970);
  return v5;
}

uint64_t sub_213DAEB3C(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))MEMORY[0x24BEA50A0]);
}

uint64_t sub_213DAEB48(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA5230]);
}

uint64_t sub_213DAEB54(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.BundleID);
}

double sub_213DAEB60@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v6);
      sub_213DAFDFC((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_213DAFE40((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_213EF23D0();
      swift_release_n();
      sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
      return result;
    }
  }
  else
  {
    sub_213DAFEC4((uint64_t)&v6, &qword_253F06970);
  }
  sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
  result = 0.0;
  *a2 = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *(_OWORD *)((char *)a2 + 41) = 0u;
  return result;
}

uint64_t sub_213DAECF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v6);
      sub_213DAFDFC((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_213DAFE40((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_213EF23D0();
      swift_release_n();
      return sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
    }
  }
  else
  {
    sub_213DAFEC4((uint64_t)&v6, &qword_253F06970);
  }
  result = sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_WORD *)(a2 + 16) = 768;
  return result;
}

uint64_t sub_213DAEE7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _OWORD v7[2];
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v2, (uint64_t)&v5);
      sub_213DAFDFC((uint64_t)&v5, (uint64_t)v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v5);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v5, (uint64_t)v7);
  }
  else
  {
LABEL_6:
    v8 = 0;
    memset(v7, 0, sizeof(v7));
  }
  sub_213DAFE40((uint64_t)v7, (uint64_t)&v5);
  if (!v6)
  {
    sub_213DAFEC4((uint64_t)&v5, &qword_253F06970);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  type metadata accessor for PlayMediaSELFFeatures.RequestedMediaItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v3 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v3 = v5;
LABEL_13:
  sub_213DAFEC4((uint64_t)v7, &qword_253F06970);
  return v3;
}

uint64_t sub_213DAEFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213DAF01C(a1, (void (*)(_QWORD))MEMORY[0x24BEA4D28], (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_213DAF008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213DAF01C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.OrderingTimestamp, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_213DAF01C@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v8, (uint64_t)&v12);
      sub_213DAFDFC((uint64_t)&v12, (uint64_t)v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v12, (uint64_t)v14);
  }
  else
  {
LABEL_6:
    v15 = 0;
    memset(v14, 0, sizeof(v14));
  }
  sub_213DAFE40((uint64_t)v14, (uint64_t)&v12);
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    a2(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_213EF23D0();
      swift_release_n();
      sub_213DAFEC4((uint64_t)v14, &qword_253F06970);
      v9 = a3(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a4, 0, 1, v9);
    }
  }
  else
  {
    sub_213DAFEC4((uint64_t)&v12, &qword_253F06970);
  }
  sub_213DAFEC4((uint64_t)v14, &qword_253F06970);
  v11 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a4, 1, 1, v11);
}

uint64_t sub_213DAF1EC(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t sub_213DAF1F8(uint64_t a1)
{
  return sub_213DAF670(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.DonatedBySiri);
}

uint64_t sub_213DAF204@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_213DAF9F4(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.EventOrigin, 2, a2);
}

uint64_t sub_213DAF214(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))type metadata accessor for SendMessageUSOFeature.RecipientNames);
}

uint64_t sub_213DAF220(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for USOTaskSummaryFeature);
}

uint64_t sub_213DAF22C(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v7);
      sub_213DAFDFC((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_213DAFE40((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_213DAFEC4((uint64_t)&v7, &qword_253F06970);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v5 = 0;
    goto LABEL_13;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v5 = v7;
LABEL_13:
  sub_213DAFEC4((uint64_t)v9, &qword_253F06970);
  return v5;
}

uint64_t sub_213DAF3B0(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA50E0]);
}

uint64_t sub_213DAF3BC(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))MEMORY[0x24BEA5140]);
}

uint64_t sub_213DAF3C8(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))type metadata accessor for UsoPersonRecipients);
}

uint64_t sub_213DAF3D4(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))type metadata accessor for PlayMediaFeature.AlternateMediaItems);
}

uint64_t sub_213DAF3E0(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.InteractionDirection);
}

uint64_t sub_213DAF3EC(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallDuration);
}

uint64_t sub_213DAF3F8(uint64_t a1)
{
  return sub_213DAE820(a1, MEMORY[0x24BEA5158]);
}

uint64_t sub_213DAF404(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallEndTimestamp);
}

uint64_t sub_213DAF410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213DAF01C(a1, (void (*)(_QWORD))type metadata accessor for PlusClientEventIdFeature, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

unint64_t sub_213DAF424(uint64_t a1)
{
  return sub_213DAFBC4(a1, (void (*)(_QWORD))MEMORY[0x24BEA5050]);
}

uint64_t sub_213DAF430(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA4D20]);
}

uint64_t sub_213DAF43C(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA4F88]);
}

uint64_t sub_213DAF448(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EventType);
}

uint64_t sub_213DAF454(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.UniqueIdentifier);
}

double sub_213DAF460@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v6);
      sub_213DAFDFC((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for PlayMediaFeature.NowPlayingEvent(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_213DAFE40((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    type metadata accessor for PlayMediaFeature.NowPlayingEvent(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_213EF23D0();
      swift_release_n();
      sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
      return result;
    }
  }
  else
  {
    sub_213DAFEC4((uint64_t)&v6, &qword_253F06970);
  }
  sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

uint64_t sub_213DAF5EC(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.ITunesStoreIdentifier);
}

uint64_t sub_213DAF5F8(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.TotalPlayLength);
}

uint64_t sub_213DAF604(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))MEMORY[0x24BEA4FC0]);
}

uint64_t sub_213DAF610(uint64_t a1)
{
  return sub_213DAF22C(a1, MEMORY[0x24BEA4FB8]);
}

uint64_t sub_213DAF61C(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))MEMORY[0x24BEA4F40]);
}

uint64_t sub_213DAF628(uint64_t a1)
{
  return sub_213DAF22C(a1, MEMORY[0x24BEA4F38]);
}

uint64_t sub_213DAF634(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA5028]);
}

uint64_t sub_213DAF640(uint64_t a1)
{
  return sub_213DAF22C(a1, MEMORY[0x24BEA5038]);
}

uint64_t sub_213DAF64C(uint64_t a1)
{
  return sub_213DAF22C(a1, MEMORY[0x24BEA5030]);
}

uint64_t sub_213DAF658(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))type metadata accessor for PlusRuntimeContactSuggestions);
}

uint64_t sub_213DAF664(uint64_t a1)
{
  return sub_213DAF670(a1, (void (*)(_QWORD))type metadata accessor for PlusForcePrompted);
}

uint64_t sub_213DAF670(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v7);
      sub_213DAFDFC((uint64_t)&v7, (uint64_t)v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v7);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v7, (uint64_t)v9);
  }
  else
  {
LABEL_6:
    v10 = 0;
    memset(v9, 0, sizeof(v9));
  }
  sub_213DAFE40((uint64_t)v9, (uint64_t)&v7);
  if (!v8)
  {
    sub_213DAFEC4((uint64_t)&v7, &qword_253F06970);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v5 = 2;
    goto LABEL_13;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v5 = v7;
LABEL_13:
  sub_213DAFEC4((uint64_t)v9, &qword_253F06970);
  return v5;
}

double sub_213DAF7EC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v6);
      sub_213DAFDFC((uint64_t)&v6, (uint64_t)v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for NowPlayingFeatures.MediaType(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v6, (uint64_t)v8);
  }
  else
  {
LABEL_6:
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  sub_213DAFE40((uint64_t)v8, (uint64_t)&v6);
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    type metadata accessor for NowPlayingFeatures.MediaType(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_213EF23D0();
      swift_release_n();
      sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
      return result;
    }
  }
  else
  {
    sub_213DAFEC4((uint64_t)&v6, &qword_253F06970);
  }
  sub_213DAFEC4((uint64_t)v8, &qword_253F06970);
  result = 0.0;
  *a2 = xmmword_213EF3C10;
  return result;
}

uint64_t sub_213DAF978(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.Duration);
}

uint64_t sub_213DAF984(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.Genre);
}

uint64_t sub_213DAF990(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.Album);
}

uint64_t sub_213DAF99C(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.Artist);
}

uint64_t sub_213DAF9A8(uint64_t a1)
{
  return sub_213DAF22C(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.Title);
}

uint64_t sub_213DAF9B4(uint64_t a1)
{
  return sub_213DAF670(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallAnswered);
}

uint64_t sub_213DAF9C0(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA5200]);
}

uint64_t sub_213DAF9CC(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA5238]);
}

uint64_t sub_213DAF9D8(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA5048]);
}

uint64_t sub_213DAF9E4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_213DAF9F4(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.PlaybackState, 6, a2);
}

uint64_t sub_213DAF9F4@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v8, (uint64_t)&v10);
      sub_213DAFDFC((uint64_t)&v10, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v10, (uint64_t)v12);
  }
  else
  {
LABEL_6:
    v13 = 0;
    memset(v12, 0, sizeof(v12));
  }
  sub_213DAFE40((uint64_t)v12, (uint64_t)&v10);
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    a2(0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_213EF23D0();
      swift_release_n();
      return sub_213DAFEC4((uint64_t)v12, &qword_253F06970);
    }
  }
  else
  {
    sub_213DAFEC4((uint64_t)&v10, &qword_253F06970);
  }
  result = sub_213DAFEC4((uint64_t)v12, &qword_253F06970);
  *a4 = a3;
  return result;
}

uint64_t sub_213DAFB88(uint64_t a1)
{
  return sub_213DAE9C0(a1, (void (*)(_QWORD))type metadata accessor for PlusRuntimeGenericSuggestions);
}

uint64_t sub_213DAFB94(uint64_t a1)
{
  return sub_213DAF670(a1, (void (*)(_QWORD))type metadata accessor for PlusContactSuggesterEnabled);
}

uint64_t sub_213DAFBA0(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.IntentHandlingStatus);
}

uint64_t sub_213DAFBAC(uint64_t a1)
{
  return sub_213DAE820(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallStartTimestamp);
}

unint64_t sub_213DAFBB8(uint64_t a1)
{
  return sub_213DAFBC4(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.AudioCallRoute);
}

unint64_t sub_213DAFBC4(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a1 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DAFDFC(v4, (uint64_t)&v8);
      sub_213DAFDFC((uint64_t)&v8, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      a2(0);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v8);
      v4 += 40;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v8, (uint64_t)v10);
  }
  else
  {
LABEL_6:
    v11 = 0;
    memset(v10, 0, sizeof(v10));
  }
  sub_213DAFE40((uint64_t)v10, (uint64_t)&v8);
  if (!v9)
  {
    sub_213DAFEC4((uint64_t)&v8, &qword_253F06970);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  a2(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v6 = 0;
    v5 = 1;
    goto LABEL_13;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v5 = 0;
  v6 = v8;
LABEL_13:
  sub_213DAFEC4((uint64_t)v10, &qword_253F06970);
  return v6 | ((unint64_t)v5 << 32);
}

unint64_t sub_213DAFD50(uint64_t a1)
{
  return sub_213DAFBC4(a1, (void (*)(_QWORD))type metadata accessor for PhoneCallEventFeature.CallCapability);
}

uint64_t sub_213DAFD5C(uint64_t a1)
{
  return sub_213DAE9C0(a1, MEMORY[0x24BEA5408]);
}

uint64_t sub_213DAFD68@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_213DAF9F4(a1, (void (*)(_QWORD))type metadata accessor for NowPlayingFeatures.EndReason, 6, a2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2199C52BC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_213DAFDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DAFDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_213DAFE40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DAFE88(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213DAFEC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_213DAFF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_213EF2910();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_213EF2910();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_213EF3234();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      v2 = sub_213EF2910();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_213EF2910();
  v9 = v8;
  swift_bridgeObjectRelease();
  if (!v9)
    return 1;
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_213DB0070(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_213DB007C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

id sub_213DB0090()
{
  id *v0;

  return *v0;
}

uint64_t sub_213DB0098@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

_QWORD *sub_213DB00A0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_213DB00B0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_213DB00BC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void sub_213DB00C8(_WORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_213DB00D0()
{
  sub_213EF32F4();
  sub_213EF3318();
  return sub_213EF3330();
}

uint64_t sub_213DB0114()
{
  return sub_213EF3318();
}

uint64_t sub_213DB013C()
{
  sub_213EF32F4();
  sub_213EF3318();
  return sub_213EF3330();
}

uint64_t sub_213DB017C()
{
  return sub_213EF2850();
}

uint64_t sub_213DB018C()
{
  sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
  return sub_213EF1B90();
}

uint64_t sub_213DB01CC()
{
  sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
  return sub_213EF1B60();
}

uint64_t sub_213DB020C(void *a1)
{
  id v2;

  sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
  v2 = a1;
  return sub_213EF1B54();
}

uint64_t sub_213DB0270()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_213EF2D54();

  return v2;
}

uint64_t sub_213DB02A4()
{
  sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
  return sub_213EF1B84();
}

uint64_t sub_213DB02F4()
{
  sub_213EF32F4();
  sub_213EF27F0();
  return sub_213EF3330();
}

_WORD *sub_213DB0350@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_213DB035C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

uint64_t sub_213DB036C()
{
  sub_213DB0DB4(&qword_254D3A280, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF41DC);
  return sub_213EF32A0();
}

uint64_t sub_213DB03AC()
{
  sub_213DB0DB4(&qword_254D3A280, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF41DC);
  return sub_213EF3294();
}

uint64_t sub_213DB03F0()
{
  sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
  return sub_213EF1B48();
}

uint64_t sub_213DB0430()
{
  sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
  return sub_213EF1B6C();
}

BOOL sub_213DB0488(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_213DB049C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_213DB04AC(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_213DB04E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_213DB0500(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_213DB0570(v6, v7, a3);
  v8 = *a1 + 8;
  sub_213EF2D9C();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_213DB0570(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_213DB0640(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_213DB0CCC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_213DB0CCC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_213DB0640(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_213EF2DA8();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_213DB07F8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_213EF2F40();
  if (!v8)
  {
    sub_213EF3048();
    __break(1u);
LABEL_17:
    result = sub_213EF30A8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_213DB07F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_213DB088C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_213DB0A00(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_213DB0A00(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_213DB088C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_213EA18D8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_213EF2EBC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_213EF3048();
      __break(1u);
LABEL_10:
      v2 = sub_213EF291C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_213EF30A8();
    __break(1u);
LABEL_14:
    result = sub_213EF3048();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_213DB0A00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F07038);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

_BYTE **sub_213DB0B4C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_213DB0B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeaturisedTurn(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DB0BA0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_213EF2D9C();
  *a1 = v5;
  return result;
}

uint64_t sub_213DB0BF0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for TimeBasedPlayMediaStitcher()
{
  return objc_opt_self();
}

uint64_t method lookup function for TimeBasedPlayMediaStitcher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimeBasedPlayMediaStitcher.__allocating_init(maximumTimeDeltaBetweenTurns:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of TimeBasedPlayMediaStitcher.identifyCrossSessionRestatement(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

void type metadata accessor for INMediaConfidenceLevel(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A150);
}

void type metadata accessor for INPlaybackQueueLocation(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A158);
}

void type metadata accessor for INIntentHandlingStatus(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A160);
}

void type metadata accessor for INInteractionDirection(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A168);
}

void type metadata accessor for INMediaItemType(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A170);
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_213DB0CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for CNError(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A248);
}

void type metadata accessor for PLUSSchemaPLUSContactGroundTruthSource(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A250);
}

void type metadata accessor for PLUSSchemaPLUSSuggestionOutcome(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A258);
}

void type metadata accessor for PLUSSchemaPLUSContactSuggestionOutcome(uint64_t a1)
{
  sub_213DB0EE4(a1, &qword_254D3A260);
}

uint64_t sub_213DB0D5C()
{
  return sub_213DB0DB4(&qword_254D3A268, (uint64_t (*)(uint64_t))type metadata accessor for PLUSSchemaPLUSContactGroundTruthSource, (uint64_t)&unk_213EF4080);
}

uint64_t sub_213DB0D88()
{
  return sub_213DB0DB4(&qword_254D3A270, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF40F4);
}

uint64_t sub_213DB0DB4(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2199C52D4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213DB0DF4()
{
  return sub_213DB0DB4(&qword_254D3A278, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4120);
}

uint64_t sub_213DB0E20()
{
  return sub_213DB0DB4(&qword_254D3A280, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF41DC);
}

uint64_t sub_213DB0E4C()
{
  return sub_213DB0DB4(&qword_254D3A288, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF41A8);
}

uint64_t sub_213DB0E78()
{
  return sub_213DB0DB4(&qword_254D3A290, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4164);
}

uint64_t sub_213DB0EA4()
{
  return sub_213DB0DB4(&qword_254D3A298, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_213EF42C8);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_213DB0EE4(a1, (unint64_t *)&unk_254D3A2C0);
}

void sub_213DB0EE4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_213DB0F28()
{
  return sub_213DB0DB4(&qword_254D3A2A0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_213EF428C);
}

unint64_t sub_213DB0F58()
{
  unint64_t result;

  result = qword_254D3A2A8;
  if (!qword_254D3A2A8)
  {
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_254D3A2A8);
  }
  return result;
}

uint64_t sub_213DB0F9C()
{
  return sub_213DB0DB4(&qword_254D3A2B0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_213EF4304);
}

uint64_t sub_213DB0FC8()
{
  return sub_213DB0DB4(&qword_254D3A2B8, (uint64_t (*)(uint64_t))type metadata accessor for CNError, (uint64_t)&unk_213EF4220);
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213DB1024@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[9];

  v50 = a6;
  v52 = a3;
  v51 = a1;
  v53 = a7;
  v10 = sub_213EF1D64();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for QuickHangupClassification();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a4[1];
  v48 = *a4;
  v47 = a4[2];
  v46 = a4[3];
  v18 = a5[1];
  v55 = *a5;
  v19 = a5[2];
  v20 = a5[3];
  v54 = v19;
  sub_213DAFDFC(a2, (uint64_t)v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A450);
  if (swift_dynamicCast())
  {
    sub_213DB18A4((uint64_t)v16);
    v21 = 0;
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
    v49 = v18;
    sub_213DB1508(v55, v18, v50, &qword_254D3A488, v58);
    v22 = v58[0];
    v23 = v58[1];
    v24 = v58[2];
    v25 = v58[3];
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v51, v10);
    if (v17)
    {
      v51 = v13;
      v26 = v11;
      v27 = v10;
      v28 = v20;
      v29 = v21;
      v30 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213DB1874(v22, v23);
      v22 = v48;
      v24 = v47;
      v25 = v30;
      v21 = v29;
      v20 = v28;
      v10 = v27;
      v11 = v26;
      v13 = v51;
      v23 = v17;
    }
    v31 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v53, v13, v10);
    v32 = (int *)type metadata accessor for PhoneCallGroundTruth();
    *(_BYTE *)(v31 + v32[5]) = v21;
    *(_QWORD *)(v31 + v32[6]) = v52;
    v33 = (uint64_t *)(v31 + v32[7]);
    *v33 = v22;
    v33[1] = v23;
    v33[2] = v24;
    v33[3] = v25;
    v34 = (_QWORD *)(v31 + v32[8]);
    v35 = v49;
    *v34 = v55;
    v34[1] = v35;
    v34[2] = v54;
    v34[3] = v20;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v32 - 1) + 56))(v31, 0, 1, v32);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v21 = 1;
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
  if (qword_253F04A88 != -1)
    swift_once();
  v37 = sub_213EF2724();
  __swift_project_value_buffer(v37, (uint64_t)qword_253F08A00);
  sub_213DB1804(a2, (uint64_t)v58);
  v38 = sub_213EF270C();
  v39 = sub_213EF2CA0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v57 = v41;
    *(_DWORD *)v40 = 136315138;
    sub_213DB1804((uint64_t)v58, (uint64_t)&v56);
    v42 = sub_213EF288C();
    v56 = sub_213DB0570(v42, v43, &v57);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DB1840((uint64_t)v58);
    _os_log_impl(&dword_213DAB000, v38, v39, "Failed to derive ground truth type from followup event for classification=%s", v40, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v41, -1, -1);
    MEMORY[0x2199C53C4](v40, -1, -1);
  }
  else
  {
    sub_213DB1840((uint64_t)v58);
  }

  v44 = type metadata accessor for PhoneCallGroundTruth();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v53, 1, 1, v44);
}

void sub_213DB14FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  sub_213DB1508(a1, a2, a3, &qword_254D3A480, a4);
}

void sub_213DB1508(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v9 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v10 = *(_QWORD *)(a3 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(type metadata accessor for EntityPromptClassification() - 8);
    v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v13 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    v14 = v12 + 32;
    do
    {
      v15 = swift_bridgeObjectRetain();
      sub_213DB4278(v15);
      v14 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v9 = v26;
  }
  v16 = *(_QWORD *)(v9 + 16);
  if (v16)
  {
    v17 = (uint64_t *)(v9 + 40);
    while (1)
    {
      v18 = *(v17 - 1);
      v19 = *v17;
      if (v18 == a1 && v19 == a2)
        break;
      if ((sub_213EF3234() & 1) != 0)
        goto LABEL_15;
      v17 += 2;
      if (!--v16)
        goto LABEL_13;
    }
    v18 = a1;
    v19 = a2;
LABEL_15:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v21 = sub_213EF2724();
    __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v22 = sub_213EF270C();
    v23 = sub_213EF2CA0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      *(_DWORD *)v24 = 136315138;
      v27 = v25;
      __swift_instantiateConcreteTypeFromMangledName(a4);
      sub_213EF288C();
      sub_213EF2904();
      swift_bridgeObjectRelease();
      sub_213EF2904();
      sub_213DB0570(91, 0xE100000000000000, &v27);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v22, v23, "%s Found circular entity reference - adding to ground truth", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v25, -1, -1);
      MEMORY[0x2199C53C4](v24, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *a5 = v18;
    a5[1] = v19;
    a5[2] = 0;
    a5[3] = 0;
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    *(_OWORD *)a5 = 0u;
    *((_OWORD *)a5 + 1) = 0u;
  }
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallInAppFollowupGroundTruthGenerator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213DB1804(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InAppFollowupClassification(a2, a1);
  return a2;
}

uint64_t sub_213DB1840(uint64_t a1)
{
  destroy for InAppFollowupClassification(a1);
  return a1;
}

uint64_t sub_213DB1874(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_213DB18A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for QuickHangupClassification();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213DB18E0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_213DB196C(&qword_254D3A458, a2, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallInAppFollowupGroundTruthGenerator, (uint64_t)&protocol conformance descriptor for PhoneCallInAppFollowupGroundTruthGenerator);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for PhoneCallInAppFollowupGroundTruthGenerator()
{
  return objc_opt_self();
}

uint64_t sub_213DB193C()
{
  return sub_213DB196C((unint64_t *)&qword_253F04BD0, 255, (uint64_t (*)(uint64_t))type metadata accessor for PhoneCallGroundTruth, (uint64_t)&protocol conformance descriptor for PhoneCallGroundTruth);
}

uint64_t sub_213DB196C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2199C52D4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for PhoneCallInAppFollowupGroundTruthGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoneCallInAppFollowupGroundTruthGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PhoneCallInAppFollowupGroundTruthGenerator.buildGroundTruth(id:followup:contactUSOPerson:originalContactReference:correctedContactReference:abandonedPrompts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_213DB19CC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A4A0);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3A490 = 91;
  *(_QWORD *)algn_254D3A498 = 0xE100000000000000;
  return result;
}

BOOL sub_213DB1A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEB3C(v0);
  swift_bridgeObjectRelease();
  if (!v1)
    goto LABEL_6;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_213DAEB48(v2);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    if (qword_253F04A88 != -1)
      swift_once();
    v8 = sub_213EF2724();
    __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
    v9 = sub_213EF270C();
    v10 = sub_213EF2CA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      if (qword_254D39F58 != -1)
        swift_once();
      v13 = qword_254D3A490;
      v14 = *(_QWORD *)algn_254D3A498;
      swift_bridgeObjectRetain();
      sub_213DB0570(v13, v14, &v15);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v9, v10, "%s Missing ASR turns when identifying wake word only turn", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v12, -1, -1);
      MEMORY[0x2199C53C4](v11, -1, -1);
    }

    return 0;
  }
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRelease();
  if (v4 < v5)
  {
    v6 = *(_QWORD *)(v3 + 16);
    swift_bridgeObjectRelease();
    return v6 == 0;
  }
  swift_bridgeObjectRelease();
  return 0;
}

ValueMetadata *type metadata accessor for NoOpTurnIdentifier()
{
  return &type metadata for NoOpTurnIdentifier;
}

uint64_t sub_213DB1C94()
{
  uint64_t result;

  type metadata accessor for FirstPartyEventStreamProcessor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06D58);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06D38 = 91;
  unk_253F06D40 = 0xE100000000000000;
  return result;
}

uint64_t FirstPartyEventStreamProcessor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FirstPartyEventStreamProcessor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t FirstPartyEventStreamProcessor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FirstPartyEventStreamProcessor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213DB1D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_213DB2378(a1);
  return sub_213DB26D0(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v2);
}

uint64_t sub_213DB1D80(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[5];
  uint64_t v32;

  v2 = *a1;
  v1 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = swift_bridgeObjectRetain();
  v7 = sub_213DAEB54(v6);
  v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    v10 = sub_213DAFF00();
    if (qword_253F04A88 != -1)
      swift_once();
    v11 = sub_213EF2724();
    __swift_project_value_buffer(v11, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v12 = sub_213EF270C();
    v28 = sub_213EF2C94();
    if (os_log_type_enabled(v12, v28))
    {
      v13 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31[0] = v27;
      *(_DWORD *)v13 = 136315906;
      if (qword_253F06D50 != -1)
        swift_once();
      v14 = qword_253F06D38;
      v15 = unk_253F06D40;
      swift_bridgeObjectRetain();
      v32 = sub_213DB0570(v14, v15, v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      if ((v10 & 1) != 0)
        v16 = 1953523019;
      else
        v16 = 0x6465766F6D6552;
      if ((v10 & 1) != 0)
        v17 = 0xE400000000000000;
      else
        v17 = 0xE700000000000000;
      v32 = sub_213DB0570(v16, v17, v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      v32 = sub_213DB0570(v2, v1, v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 32) = 2080;
      swift_bridgeObjectRetain();
      v32 = sub_213DB0570(v7, v9, v31);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v12, v28, "%s %s %s with bundleID '%s'", (uint8_t *)v13, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v27, -1, -1);
      MEMORY[0x2199C53C4](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v18 = sub_213EF2724();
    __swift_project_value_buffer(v18, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v19 = sub_213EF270C();
    v20 = sub_213EF2CA0();
    if (os_log_type_enabled(v19, v20))
    {
      v30 = v5;
      v21 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32 = v29;
      *(_DWORD *)v21 = 136315394;
      if (qword_253F06D50 != -1)
        swift_once();
      v22 = qword_253F06D38;
      v23 = unk_253F06D40;
      swift_bridgeObjectRetain();
      sub_213DB0570(v22, v23, &v32);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v31[1] = v1;
      v31[2] = v3;
      v31[3] = v4;
      v31[4] = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = sub_213EF288C();
      v31[0] = sub_213DB0570(v24, v25, &v32);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v19, v20, "%s Removed event due to missing bundleID %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v29, -1, -1);
      MEMORY[0x2199C53C4](v21, -1, -1);

      v10 = 0;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v10 = 0;
    }
  }
  return v10 & 1;
}

uint64_t sub_213DB2378(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_253F04A88 != -1)
    swift_once();
  v2 = sub_213EF2724();
  __swift_project_value_buffer(v2, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  v3 = sub_213EF270C();
  v4 = sub_213EF2C94();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v21 = v6;
    *(_DWORD *)v5 = 136315394;
    if (qword_253F06D50 != -1)
      swift_once();
    v7 = qword_253F06D38;
    v8 = unk_253F06D40;
    swift_bridgeObjectRetain();
    v25 = sub_213DB0570(v7, v8, &v21);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    v25 = *(_QWORD *)(a1 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v3, v4, "%s Processing %ld events", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v6, -1, -1);
    MEMORY[0x2199C53C4](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v9 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v9)
  {
    v10 = (uint64_t *)(a1 + 64);
    v11 = MEMORY[0x24BEE4AF8];
    do
    {
      v12 = *(v10 - 4);
      v20 = *(_OWORD *)(v10 - 3);
      v13 = *(v10 - 1);
      v14 = *v10;
      v21 = v12;
      v22 = v20;
      v23 = v13;
      v24 = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((sub_213DB1D80(&v21) & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v25 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_213DCD02C(0, *(_QWORD *)(v11 + 16) + 1, 1);
          v11 = v25;
        }
        v17 = *(_QWORD *)(v11 + 16);
        v16 = *(_QWORD *)(v11 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_213DCD02C(v16 > 1, v17 + 1, 1);
          v11 = v25;
        }
        *(_QWORD *)(v11 + 16) = v17 + 1;
        v18 = v11 + 40 * v17;
        *(_QWORD *)(v18 + 32) = v12;
        *(_OWORD *)(v18 + 40) = v20;
        *(_QWORD *)(v18 + 56) = v13;
        *(_QWORD *)(v18 + 64) = v14;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v10 += 5;
      --v9;
    }
    while (v9);
  }
  else
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t type metadata accessor for FirstPartyEventStreamProcessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for FirstPartyEventStreamProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FirstPartyEventStreamProcessor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FirstPartyEventStreamProcessor.process(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213DB26D0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_213DB26E4()
{
  uint64_t result;

  type metadata accessor for INPlayMediaIntentFeatureExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A878);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3A4B0 = 91;
  *(_QWORD *)algn_254D3A4B8 = 0xE100000000000000;
  return result;
}

_QWORD *INPlayMediaIntentFeatureExtractor.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (_QWORD *)swift_allocObject();
  v1 = type metadata accessor for AdamIdExtractor();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 1;
  v0[5] = v1;
  v0[6] = &off_24D108490;
  v0[2] = v2;
  return v0;
}

_QWORD *INPlayMediaIntentFeatureExtractor.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for AdamIdExtractor();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 1;
  v0[5] = v1;
  v0[6] = &off_24D108490;
  v0[2] = v2;
  return v0;
}

_QWORD *INPlayMediaIntentFeatureExtractor.__allocating_init(adamIdExtractor:)(__int128 *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (_QWORD *)swift_allocObject();
  v3 = type metadata accessor for AdamIdExtractor();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 1;
  v2[5] = v3;
  v2[6] = &off_24D108490;
  v2[2] = v4;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v2 + 2));
  sub_213DB0BF0(a1, (uint64_t)(v2 + 2));
  swift_endAccess();
  return v2;
}

_QWORD *INPlayMediaIntentFeatureExtractor.init(adamIdExtractor:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = type metadata accessor for AdamIdExtractor();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 1;
  v1[5] = v3;
  v1[6] = &off_24D108490;
  v1[2] = v4;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v1 + 2));
  sub_213DB0BF0(a1, (uint64_t)(v1 + 2));
  swift_endAccess();
  return v1;
}

_QWORD *sub_213DB294C(void *a1)
{
  __int128 v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v50;
  _QWORD *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  sub_213DB7FF0(a1, (uint64_t *)&v56);
  v2 = v56;
  if ((_QWORD)v56)
  {
    v3 = v58;
    v54 = v57;
    v4 = v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_213EF44B0;
    v6 = type metadata accessor for CommonFeature.EventType(0);
    swift_allocObject();
    *(_QWORD *)&v56 = 0xD000000000000011;
    *((_QWORD *)&v56 + 1) = 0x8000000213F048A0;
    v7 = (id)v2;
    v8 = sub_213EF23C4();
    *(_QWORD *)(v5 + 56) = v6;
    v9 = MEMORY[0x24BEA4F80];
    *(_QWORD *)(v5 + 64) = sub_213DB196C(&qword_254D3D550, 255, type metadata accessor for CommonFeature.EventType, MEMORY[0x24BEA4F80]);
    *(_QWORD *)(v5 + 32) = v8;
    v10 = objc_msgSend(a1, sel_playbackQueueLocation);
    v11 = type metadata accessor for PlayMediaFeature.PlaybackQueueLocation(0);
    swift_allocObject();
    *(_QWORD *)&v56 = v10;
    v12 = sub_213EF23C4();
    *(_QWORD *)(v5 + 96) = v11;
    v13 = v7;
    *(_QWORD *)(v5 + 104) = sub_213DB196C(&qword_254D3A4C0, 255, type metadata accessor for PlayMediaFeature.PlaybackQueueLocation, v9);
    *(_QWORD *)(v5 + 72) = v12;
    v14 = sub_213DB33A0(v7);
    *(_QWORD *)&v56 = v5;
    sub_213DB4B0C(v14, &qword_254D3D540, &qword_253F06968);
    v51 = (_QWORD *)v56;
    if (*((_QWORD *)&v2 + 1))
    {
      swift_unknownObjectRetain();
      swift_retain();
      sub_213DB8290(v54, v3, v4);
      v16 = v15;
      swift_release();
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v50 = v7;
        v18 = swift_bridgeObjectRetain() + 64;
        v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          v21 = *(_QWORD *)(v18 - 24);
          if (v21)
          {
            v22 = *(_QWORD *)(v18 - 32);
            v24 = *(_QWORD *)(v18 + 16);
            v23 = *(_QWORD *)(v18 + 24);
            v53 = *(_OWORD *)(v18 - 16);
            v55 = *(_OWORD *)(v18 + 32);
            v25 = *(_WORD *)(v18 + 48);
            v27 = *(_QWORD *)v18;
            v26 = *(_QWORD *)(v18 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v52 = v26;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_213DB59B8(0, v19[2] + 1, 1, v19);
            v29 = v19[2];
            v28 = v19[3];
            v30 = v19;
            if (v29 >= v28 >> 1)
              v30 = sub_213DB59B8((_QWORD *)(v28 > 1), v29 + 1, 1, v19);
            v30[2] = v29 + 1;
            v19 = v30;
            v20 = &v30[11 * v29];
            v20[4] = v22;
            v20[5] = v21;
            *((_OWORD *)v20 + 3) = v53;
            v20[8] = v27;
            v20[9] = v52;
            v20[10] = v24;
            *((_BYTE *)v20 + 88) = v23 & 1;
            *((_OWORD *)v20 + 6) = v55;
            *((_WORD *)v20 + 56) = v25;
          }
          v18 += 88;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease();
        v13 = v50;
      }
      else
      {
        v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      swift_bridgeObjectRelease();
      if (v19[2])
      {
        v39 = sub_213DB3004((uint64_t)v19);
        v40 = type metadata accessor for PlayMediaFeature.AlternateMediaItems(0);
        swift_allocObject();
        *(_QWORD *)&v56 = v39;
        v41 = sub_213EF23C4();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v51 = sub_213DB5B40(0, v51[2] + 1, 1, v51, &qword_254D3D540, &qword_253F06968);
        v43 = v51[2];
        v42 = v51[3];
        if (v43 >= v42 >> 1)
          v51 = sub_213DB5B40((_QWORD *)(v42 > 1), v43 + 1, 1, v51, &qword_254D3D540, &qword_253F06968);
        v58 = v40;
        v59 = sub_213DB196C(&qword_254D3A4C8, 255, type metadata accessor for PlayMediaFeature.AlternateMediaItems, MEMORY[0x24BEA4F80]);
        *(_QWORD *)&v56 = v41;
        v38 = v51;
        v51[2] = v43 + 1;
        sub_213DB0BF0(&v56, (uint64_t)&v51[5 * v43 + 4]);
        v44 = sub_213DB3130((uint64_t)v19);
        swift_bridgeObjectRelease();
        v45 = type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata(0);
        swift_allocObject();
        *(_QWORD *)&v56 = v44;
        v46 = sub_213EF23C4();
        v48 = v51[2];
        v47 = v51[3];
        if (v48 >= v47 >> 1)
          v38 = sub_213DB5B40((_QWORD *)(v47 > 1), v48 + 1, 1, v51, &qword_254D3D540, &qword_253F06968);
        v58 = v45;
        v59 = sub_213DB196C(&qword_254D3A4D0, 255, type metadata accessor for PlayMediaFeature.AlternateMediaItemsMetadata, MEMORY[0x24BEA4F80]);
        *(_QWORD *)&v56 = v46;
        v38[2] = v48 + 1;
        sub_213DB0BF0(&v56, (uint64_t)&v38[5 * v48 + 4]);
        swift_unknownObjectRelease_n();

        return v38;
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }

    return v51;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v31 = sub_213EF2724();
  __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
  v32 = sub_213EF270C();
  v33 = sub_213EF2C94();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    *(_QWORD *)&v56 = v35;
    *(_DWORD *)v34 = 136315138;
    if (qword_254D39F68 != -1)
      swift_once();
    v36 = qword_254D3A4B0;
    v37 = *(_QWORD *)algn_254D3A4B8;
    swift_bridgeObjectRetain();
    sub_213DB0570(v36, v37, (uint64_t *)&v56);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v32, v33, "%s No media item found", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v35, -1, -1);
    MEMORY[0x2199C53C4](v34, -1, -1);

  }
  else
  {

  }
  swift_unknownObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_213DB3004(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_213DCD064(0, v1, 0);
    v2 = v17;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *(v4 - 1);
      v15 = *v4;
      v16 = *(v4 - 2);
      v6 = v4[2];
      v7 = v4[4];
      v13 = v4[3];
      v14 = v4[1];
      v8 = *((_BYTE *)v4 + 40);
      v9 = *(_QWORD *)(v17 + 16);
      v10 = *(_QWORD *)(v17 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_213DCD064(v10 > 1, v9 + 1, 1);
      *(_QWORD *)(v17 + 16) = v9 + 1;
      v11 = v17 + (v9 << 6);
      *(_QWORD *)(v11 + 32) = v16;
      *(_QWORD *)(v11 + 40) = v5;
      *(_QWORD *)(v11 + 48) = v15;
      *(_QWORD *)(v11 + 56) = v14;
      *(_QWORD *)(v11 + 64) = v6;
      *(_QWORD *)(v11 + 72) = v13;
      *(_QWORD *)(v11 + 80) = v7;
      v4 += 11;
      *(_BYTE *)(v11 + 88) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_213DB3130(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  _WORD *v4;
  __int128 v5;
  __int16 v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_213DCD048(0, v2, 0);
    result = v11;
    v4 = (_WORD *)(a1 + 112);
    do
    {
      v5 = *((_OWORD *)v4 - 1);
      v6 = *v4;
      v12 = result;
      v8 = *(_QWORD *)(result + 16);
      v7 = *(_QWORD *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        v10 = *((_OWORD *)v4 - 1);
        sub_213DCD048(v7 > 1, v8 + 1, 1);
        v5 = v10;
        result = v12;
      }
      v4 += 44;
      *(_QWORD *)(result + 16) = v8 + 1;
      v9 = result + 24 * v8;
      *(_OWORD *)(v9 + 32) = v5;
      *(_WORD *)(v9 + 48) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

_QWORD *sub_213DB320C(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_213EF306C())
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2199C49B0](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_identifier);
      if (v8)
      {
        v9 = v8;
        v10 = sub_213EF2850();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_213DB553C(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_213DB553C((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_213DB33A0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD v37[3];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47[2];
  uint64_t v48[3];
  __int128 v49;
  _QWORD v50[25];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int16 v61;

  sub_213DB38E8(a1, (uint64_t)&v51);
  v2 = v52;
  if (!v52)
    return MEMORY[0x24BEE4AF8];
  v3 = v53;
  v42 = v54;
  v43 = v51;
  v4 = v55;
  v5 = v57;
  v6 = v58;
  v40 = v59;
  v41 = v56;
  v39 = v60;
  v38 = v61;
  v7 = objc_msgSend(a1, sel_privateMediaItemValueData);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_mediaSubItems);

    if (v9)
    {
      sub_213DB9CDC(0, &qword_254D3A500);
      v10 = sub_213EF2A3C();

      v11 = sub_213DB320C(v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v49 = xmmword_213EF44C0;
  v13 = type metadata accessor for PlayMediaFeature.PrimaryMediaItem(0);
  swift_allocObject();
  v51 = v43;
  v52 = v2;
  v53 = v3;
  v54 = v42;
  v55 = v4;
  v56 = v41;
  v57 = v5;
  v37[2] = v6;
  v14 = v6 & 1;
  LOBYTE(v58) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_213EF23C4();
  v50[3] = v13;
  v50[4] = sub_213DB196C(&qword_254D3A4D8, 255, type metadata accessor for PlayMediaFeature.PrimaryMediaItem, MEMORY[0x24BEA4F80]);
  v50[0] = v15;
  v16 = type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata(0);
  swift_allocObject();
  v51 = v40;
  v52 = v39;
  LOWORD(v53) = v38;
  v17 = sub_213EF23B8();
  v18 = v17;
  if (v17)
  {
    v17 = sub_213DB196C(&qword_254D3A4F8, 255, type metadata accessor for PlayMediaFeature.PrimaryMediaItemMetadata, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v16 = 0;
    v50[6] = 0;
    v50[7] = 0;
  }
  v50[5] = v18;
  v50[8] = v16;
  v50[9] = v17;
  if (!v11[2])
  {
    swift_bridgeObjectRelease();
    v11 = 0;
  }
  v37[1] = v50;
  v19 = type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers(0);
  swift_allocObject();
  v51 = (uint64_t)v11;
  v20 = sub_213EF23B8();
  v21 = v20;
  if (v20)
  {
    v20 = sub_213DB196C(&qword_254D3A4F0, 255, type metadata accessor for PlayMediaFeature.PrimaryMediaItemSubItemIdentifiers, MEMORY[0x24BEA4F80]);
  }
  else
  {
    v19 = 0;
    v50[11] = 0;
    v50[12] = 0;
  }
  v50[10] = v21;
  v50[13] = v19;
  v50[14] = v20;
  v22 = type metadata accessor for PlayMediaFeature.PrimaryMediaItemType(0);
  swift_allocObject();
  v51 = v3;
  v23 = sub_213EF23C4();
  v50[18] = v22;
  v24 = MEMORY[0x24BEA4F80];
  v50[19] = sub_213DB196C(&qword_254D3A4E0, 255, type metadata accessor for PlayMediaFeature.PrimaryMediaItemType, MEMORY[0x24BEA4F80]);
  v50[15] = v23;
  sub_213DB8408(v43, v2);
  v25 = type metadata accessor for PlayMediaFeature.EventOrigin(0);
  swift_allocObject();
  LOBYTE(v51) = v14;
  v26 = sub_213EF23C4();
  v50[23] = v25;
  v50[24] = sub_213DB196C(&qword_254D3A4E8, 255, type metadata accessor for PlayMediaFeature.EventOrigin, v24);
  v50[20] = v26;
  v48[0] = MEMORY[0x24BEE4AF8];
  for (i = 4; i != 29; i += 5)
  {
    sub_213DAFE40((uint64_t)&v48[i + 1], (uint64_t)&v51);
    sub_213DB8444((uint64_t)&v51, (uint64_t)&v44);
    if (v45)
    {
      sub_213DB0BF0(&v44, (uint64_t)v47);
      sub_213DB0BF0(v47, (uint64_t)&v44);
      v28 = (_QWORD *)v48[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v28 = sub_213DB5B40(0, v28[2] + 1, 1, v28, &qword_254D3D540, &qword_253F06968);
        v48[0] = (uint64_t)v28;
      }
      v30 = v28[2];
      v29 = v28[3];
      if (v30 >= v29 >> 1)
        v48[0] = (uint64_t)sub_213DB5B40((_QWORD *)(v29 > 1), v30 + 1, 1, v28, &qword_254D3D540, &qword_253F06968);
      v31 = v45;
      v32 = v46;
      v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v44, v45);
      MEMORY[0x24BDAC7A8](v33);
      v35 = (char *)v37 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v36 + 16))(v35);
      sub_213DB7D98(v30, (uint64_t)v35, v48, v31, v32);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v44);
    }
    else
    {
      sub_213DB848C((uint64_t)&v44);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06970);
  swift_arrayDestroy();
  return v48[0];
}

void sub_213DB38E8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int16 v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  __int16 v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int16 v78;
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;

  v5 = objc_msgSend(a1, sel_identifier);
  if (!v5)
    goto LABEL_11;
  v6 = v5;
  v7 = sub_213EF2850();
  v9 = v8;

  v82 = v7;
  v83 = v9;
  v10 = objc_msgSend(a1, sel_title);
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    *(_WORD *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    return;
  }
  v11 = v10;
  v12 = sub_213EF2850();
  v68 = v13;
  v69 = v12;

  swift_beginAccess();
  sub_213DAFDFC(v2 + 16, (uint64_t)&v73);
  v14 = v76;
  v15 = v77;
  __swift_project_boxed_opaque_existential_1(&v73, v76);
  v16 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v15 + 8);
  swift_bridgeObjectRetain();
  v17 = v16(v7, v9, v14, v15);
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
    if (qword_253F04A88 != -1)
      swift_once();
    v20 = sub_213EF2724();
    __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    v21 = sub_213EF270C();
    v22 = sub_213EF2C94();
    if (os_log_type_enabled(v21, v22))
    {
      v70 = v17;
      v23 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v73 = v66;
      *(_DWORD *)v23 = 136315650;
      if (qword_254D39F68 != -1)
        swift_once();
      v25 = qword_254D3A4B0;
      v24 = *(_QWORD *)algn_254D3A4B8;
      swift_bridgeObjectRetain();
      v79[0] = sub_213DB0570(v25, v24, &v73);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_beginAccess();
      v27 = v82;
      v26 = v83;
      swift_bridgeObjectRetain();
      v79[0] = sub_213DB0570(v27, v26, &v73);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      swift_bridgeObjectRetain();
      v17 = v70;
      v79[0] = sub_213DB0570(v70, v19, &v73);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v21, v22, "%s ID %s is SiriSyncId. Mapped AdamId will be used: %s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v66, -1, -1);
      MEMORY[0x2199C53C4](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v82 = v17;
    v83 = v19;
    swift_bridgeObjectRelease();
    v72 = 0;
    v45 = 256;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v73);
    sub_213DAFDFC(v2 + 16, (uint64_t)v79);
    v28 = v80;
    v29 = v81;
    __swift_project_boxed_opaque_existential_1(v79, v80);
    v30 = v82;
    v31 = v83;
    v32 = *(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v29 + 16);
    swift_bridgeObjectRetain();
    v32(&v73, v30, v31, v28, v29);
    swift_bridgeObjectRelease();
    v33 = v74;
    if (v74)
    {
      v34 = v73;
      v35 = v75;
      v36 = v76;
      v37 = v78;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v79);
      if (qword_253F04A88 != -1)
        swift_once();
      v67 = v37 >> 8;
      v38 = sub_213EF2724();
      __swift_project_value_buffer(v38, (uint64_t)qword_253F08A00);
      swift_bridgeObjectRetain();
      sub_213DB8518(v35, v36);
      v39 = sub_213EF270C();
      v71 = sub_213EF2C94();
      if (os_log_type_enabled(v39, v71))
      {
        v64 = v36;
        v65 = v35;
        v40 = swift_slowAlloc();
        v63 = swift_slowAlloc();
        v73 = v63;
        *(_DWORD *)v40 = 136315650;
        if (qword_254D39F68 != -1)
          swift_once();
        v42 = qword_254D3A4B0;
        v41 = *(_QWORD *)algn_254D3A4B8;
        swift_bridgeObjectRetain();
        v79[0] = sub_213DB0570(v42, v41, &v73);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        swift_beginAccess();
        v43 = v82;
        v44 = v83;
        swift_bridgeObjectRetain();
        v79[0] = sub_213DB0570(v43, v44, &v73);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 22) = 2080;
        swift_bridgeObjectRetain();
        v79[0] = sub_213DB0570(v34, v33, &v73);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v36 = v64;
        v35 = v65;
        sub_213DB854C(v34, v33, v65, v64);
        _os_log_impl(&dword_213DAB000, v39, v71, "%s ID %s is MPC Identifier. Extracted AdamId will be used: %s", (uint8_t *)v40, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v63, -1, -1);
        MEMORY[0x2199C53C4](v40, -1, -1);
      }
      else
      {
        sub_213DB854C(v34, v33, v35, v36);
      }

      v72 = 1;
      swift_beginAccess();
      v82 = v34;
      v83 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_213DB854C(v34, v33, v35, v36);
      if (v67 == 3)
      {
        v45 = 0;
      }
      else
      {
        v45 = (v67 == 1) << 8;
        v72 = 1;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v79);
      v72 = 0;
      v45 = 0;
    }
  }
  v46 = objc_msgSend(a1, sel_privateMediaItemValueData);
  if (v46)
  {
    v47 = v46;
    v48 = objc_msgSend(v46, sel_ampConfidenceLevel);

  }
  else
  {
    v48 = 0;
  }
  v49 = objc_msgSend(a1, sel_privateMediaItemValueData);
  v50 = 0;
  if (v49
    && (v51 = v49,
        v52 = objc_msgSend(v49, sel_ampConfidenceScore),
        v51,
        v52))
  {
    objc_msgSend(v52, sel_doubleValue);
    v50 = v53;

    v54 = 0;
  }
  else
  {
    v54 = 1;
  }
  swift_beginAccess();
  v56 = v82;
  v55 = v83;
  swift_bridgeObjectRetain();
  v57 = objc_msgSend(a1, sel_type);
  v58 = objc_msgSend(a1, sel_artist);
  if (v58)
  {
    v59 = v58;
    v60 = sub_213EF2850();
    v62 = v61;
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
    v60 = 0;
    v62 = 0;
  }
  *(_QWORD *)a2 = v56;
  *(_QWORD *)(a2 + 8) = v55;
  *(_QWORD *)(a2 + 16) = v57;
  *(_QWORD *)(a2 + 24) = v69;
  *(_QWORD *)(a2 + 32) = v68;
  *(_QWORD *)(a2 + 40) = v60;
  *(_QWORD *)(a2 + 48) = v62;
  *(_QWORD *)(a2 + 56) = v72;
  *(_QWORD *)(a2 + 64) = v48;
  *(_QWORD *)(a2 + 72) = v50;
  *(_WORD *)(a2 + 80) = v45 | v54;
}

uint64_t INPlayMediaIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t INPlayMediaIntentFeatureExtractor.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

_QWORD *sub_213DB41C0(void *a1)
{
  return sub_213DB294C(a1);
}

uint64_t sub_213DB41E0(uint64_t a1)
{
  MEMORY[0x2199C52D4](&protocol conformance descriptor for INPlayMediaIntentFeatureExtractor, a1);
  return sub_213EF249C();
}

uint64_t sub_213DB4214()
{
  MEMORY[0x2199C52D4](&protocol conformance descriptor for INPlayMediaIntentFeatureExtractor);
  return sub_213EF24A8();
}

_QWORD *sub_213DB4254(void **a1)
{
  return sub_213DB294C(*a1);
}

uint64_t sub_213DB4278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_213DB553C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB43C8(uint64_t a1)
{
  return sub_213DB4B0C(a1, &qword_254D3D540, &qword_253F06968);
}

uint64_t sub_213DB43DC(uint64_t a1)
{
  return sub_213DB4EFC(a1, &qword_254D3A858, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
}

uint64_t sub_213DB43F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_213DB5E8C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB4548(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_213DB5C80(isUniquelyReferenced_nonNull_native, v24, 1, v3, &qword_253F07018, &qword_253F06FA0);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB46D0(uint64_t a1)
{
  return sub_213DB4EFC(a1, &qword_254D3A6F0, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionProvidedClassification);
}

uint64_t sub_213DB46E4(uint64_t a1)
{
  return sub_213DB4EFC(a1, &qword_254D3A7D8, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
}

uint64_t sub_213DB46F8(uint64_t a1)
{
  return sub_213DB4EFC(a1, &qword_254D3A610, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
}

uint64_t sub_213DB470C(unint64_t a1)
{
  return sub_213DB4CC0(a1, (unint64_t *)MEMORY[0x24BEA04E8], &qword_254D3A828, &qword_254D3A820, (uint64_t *)sub_213DEAA54);
}

uint64_t sub_213DB4730(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  unint64_t v41;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_213DB553C(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_213E02680(v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_213DB9C58();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v3 = v38[0];
  v37 = v38[1];
  v13 = v39;
  v6 = v40;
  if (v41)
  {
    v17 = (v41 - 1) & v41;
    v18 = __clz(__rbit64(v41)) | (v40 << 6);
    v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  v32 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_66;
  v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36)
    goto LABEL_13;
  v33 = *(_QWORD *)(v37 + 8 * v32);
  v34 = v6 + 1;
  if (!v33)
  {
    v34 = v6 + 2;
    if (v6 + 2 >= v36)
      goto LABEL_13;
    v33 = *(_QWORD *)(v37 + 8 * v34);
    if (!v33)
    {
      v34 = v6 + 3;
      if (v6 + 3 >= v36)
        goto LABEL_13;
      v33 = *(_QWORD *)(v37 + 8 * v34);
      if (!v33)
      {
        v34 = v6 + 4;
        if (v6 + 4 >= v36)
          goto LABEL_13;
        v33 = *(_QWORD *)(v37 + 8 * v34);
        if (!v33)
        {
          v34 = v6 + 5;
          if (v6 + 5 >= v36)
            goto LABEL_13;
          v33 = *(_QWORD *)(v37 + 8 * v34);
          if (!v33)
          {
            v35 = v6 + 6;
            do
            {
              if (v36 == v35)
                goto LABEL_13;
              v33 = *(_QWORD *)(v37 + 8 * v35++);
            }
            while (!v33);
            v34 = v35 - 1;
          }
        }
      }
    }
  }
  v17 = (v33 - 1) & v33;
  v18 = __clz(__rbit64(v33)) + (v34 << 6);
  v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
  v21 = *v19;
  v20 = v19[1];
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v22 = v4[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
      break;
    if (v2 < v23)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_213DB553C((_QWORD *)(v22 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v23 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v23)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v24 = &v4[2 * v2 + 4];
    *v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v27 >= v36)
      goto LABEL_45;
    v28 = *(_QWORD *)(v37 + 8 * v27);
    v29 = v6 + 1;
    if (!v28)
    {
      v29 = v6 + 2;
      if (v6 + 2 >= v36)
        goto LABEL_45;
      v28 = *(_QWORD *)(v37 + 8 * v29);
      if (!v28)
      {
        v29 = v6 + 3;
        if (v6 + 3 >= v36)
          goto LABEL_45;
        v28 = *(_QWORD *)(v37 + 8 * v29);
        if (!v28)
        {
          v29 = v6 + 4;
          if (v6 + 4 >= v36)
            goto LABEL_45;
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (!v28)
          {
            v29 = v6 + 5;
            if (v6 + 5 >= v36)
              goto LABEL_45;
            v28 = *(_QWORD *)(v37 + 8 * v29);
            if (!v28)
            {
              v30 = v6 + 6;
              while (v36 != v30)
              {
                v28 = *(_QWORD *)(v37 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v26);
    v21 = *v31;
    v20 = v31[1];
    if (v2 >= v23)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_213DB4AF8(uint64_t a1)
{
  return sub_213DB4B0C(a1, &qword_254D3A650, &qword_253F06990);
}

uint64_t sub_213DB4B0C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v18 = v6 + v4;
  else
    v18 = v6;
  v5 = sub_213DB5B40(isUniquelyReferenced_nonNull_native, v18, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = v5[2];
  if ((v5[3] >> 1) - v12 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v13 = (unint64_t)&v5[5 * v12 + 4];
  if (a1 + 32 < v13 + 40 * v4 && v13 < a1 + 32 + 40 * v4)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
  v15 = v5[2];
  v16 = __OFADD__(v15, v4);
  v17 = v15 + v4;
  if (!v16)
  {
    v5[2] = v17;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB4C88(uint64_t a1)
{
  return sub_213DB4EFC(a1, &qword_254D3A840, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_213DB4C9C(unint64_t a1)
{
  return sub_213DB4CC0(a1, (unint64_t *)MEMORY[0x24BEA5330], &qword_254D3A790, &qword_254D3A788, (uint64_t *)sub_213DEAB54);
}

uint64_t sub_213DB4CC0(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t *v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_213EF306C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_213EF306C();
    swift_bridgeObjectRelease();
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_23;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v23 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v12 >> 62)
    goto LABEL_25;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x2199C49BC](v13, v17, 1, v12);
    swift_bridgeObjectRelease();
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v23;
LABEL_15:
    result = sub_213DB7554(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v17 = sub_213EF306C();
    swift_bridgeObjectRelease();
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_213EF2A54();
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB4ED0(unint64_t a1)
{
  return sub_213DB5230(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_213DB775C);
}

uint64_t sub_213DB4EDC(unint64_t a1)
{
  return sub_213DB5230(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_213DB7970);
}

uint64_t sub_213DB4EE8(uint64_t a1)
{
  return sub_213DB4EFC(a1, &qword_254D3A760, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
}

uint64_t sub_213DB4EFC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v7 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v6 <= v7)
    v27 = v6 + v4;
  else
    v27 = v6;
  v5 = sub_213DB5798(isUniquelyReferenced_nonNull_native, v27, 1, v5, a2, a3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v12 = *(_QWORD *)(v5 + 16);
  v13 = (*(_QWORD *)(v5 + 24) >> 1) - v12;
  v14 = a3(0);
  if (v13 < v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v5 + v16 + v17 * v12;
  v19 = a1 + v16;
  v20 = v17 * v4;
  v21 = v18 + v20;
  v22 = v19 + v20;
  if (v19 < v21 && v18 < v22)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v4);
  v26 = v24 + v4;
  if (!v25)
  {
    *(_QWORD *)(v5 + 16) = v26;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB507C(uint64_t a1)
{
  return sub_213DB50A4(a1, qword_253F04FB0, &qword_253F06C98);
}

uint64_t sub_213DB5090(uint64_t a1)
{
  return sub_213DB50A4(a1, &qword_254D3A750, &qword_253F06AD8);
}

uint64_t sub_213DB50A4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  int64_t v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int64_t v19;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v7 <= v5[3] >> 1)
  {
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
      goto LABEL_5;
LABEL_18:
    if (!v4)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v6 <= v7)
    v19 = v6 + v4;
  else
    v19 = v6;
  v5 = sub_213DB5B40(isUniquelyReferenced_nonNull_native, v19, 1, v5, a2, a3);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    goto LABEL_18;
LABEL_5:
  v13 = v5[2];
  if ((v5[3] >> 1) - v13 < (uint64_t)v12)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = (unint64_t)&v5[5 * v13 + 4];
  if (a1 + 32 < v14 + 40 * v12 && v14 < a1 + 32 + 40 * v12)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayInitWithCopy();
  if (v12 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v16 = v5[2];
  v17 = __OFADD__(v16, v12);
  v18 = v16 + v12;
  if (!v17)
  {
    v5[2] = v18;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v3 = v5;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB5224(unint64_t a1)
{
  return sub_213DB5230(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_213DB7B84);
}

uint64_t sub_213DB5230(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_213EF306C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_213EF306C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x2199C49BC](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_213EF306C();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_213EF2A54();
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB53EC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_213DB72E0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[3 * v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[3 * v8] && (unint64_t)v10 < a1 + 32 + 24 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 24 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

_QWORD *sub_213DB553C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB7E10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB5648(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A7F0, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
}

_QWORD *sub_213DB565C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB7F00(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB5784(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A6C0, (uint64_t (*)(_QWORD))type metadata accessor for PhoneCallGroundTruth);
}

uint64_t sub_213DB5798(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_213EF3048();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_213DB983C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_213DB59A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB5B40(a1, a2, a3, a4, &qword_254D3D540, &qword_253F06968);
}

_QWORD *sub_213DB59B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A868);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8688(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB5ADC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A7C8, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
}

uint64_t sub_213DB5AF0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A858, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
}

uint64_t sub_213DB5B04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A840, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_213DB5B18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5C80(a1, a2, a3, a4, &qword_254D3A700, &qword_253F069A0);
}

_QWORD *sub_213DB5B2C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB5B40(a1, a2, a3, a4, &qword_254D3A650, &qword_253F06990);
}

_QWORD *sub_213DB5B40(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB9B50(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB5C6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5C80(a1, a2, a3, a4, &qword_254D3A848, &qword_254D3A850);
}

uint64_t sub_213DB5C80(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_213EF3048();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_213DB9118(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_213DB5E8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB9024(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB5FAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A618);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8884(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB60CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8978(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB61F0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A6F0, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionProvidedClassification);
}

_QWORD *sub_213DB6204(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6700(a1, a2, a3, a4, &qword_254D3A658, &qword_254D3A660);
}

uint64_t sub_213DB6218(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_253F07008, type metadata accessor for FeaturisedSession);
}

_QWORD *sub_213DB622C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A698);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB9334(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB6338(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A7D8, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
}

_QWORD *sub_213DB634C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6364(a1, a2, a3, a4, &qword_254D3A7D0);
}

_QWORD *sub_213DB6358(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6364(a1, a2, a3, a4, &qword_254D3A780);
}

_QWORD *sub_213DB6364(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4])
          memmove(v14, a4 + 4, 32 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB8A84(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB646C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A610, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
}

_QWORD *sub_213DB6480(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6838(a1, a2, a3, a4, &qword_254D3A830, &qword_254D3A838);
}

uint64_t sub_213DB6494(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A628, (uint64_t (*)(_QWORD))type metadata accessor for MediaGroundTruth);
}

_QWORD *sub_213DB64A8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A770);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8790(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB65CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A620, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
}

_QWORD *sub_213DB65E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A5F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB8F3C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB66EC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6700(a1, a2, a3, a4, &qword_254D3A7E0, &qword_254D3A7E8);
}

_QWORD *sub_213DB6700(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB9230(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_213DB6818(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_213DB6E1C(a1, a2, a3, a4, &qword_253F07038);
}

_QWORD *sub_213DB6824(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6838(a1, a2, a3, a4, &qword_254D3A810, &qword_254D3A818);
}

_QWORD *sub_213DB6838(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 48);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4])
          memmove(v15, a4 + 4, 48 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB9954(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB6968(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A760, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
}

char *sub_213DB697C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A690);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8B6C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB6A74(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6700(a1, a2, a3, a4, &qword_254D3A680, &qword_254D3A688);
}

_QWORD *sub_213DB6A88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A808);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB9510(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB6B94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A600, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
}

uint64_t sub_213DB6BA8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A800, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
}

uint64_t sub_213DB6BBC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A7F8, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
}

_QWORD *sub_213DB6BD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB8C50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB6CDC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A678);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB9618(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB6DE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5C80(a1, a2, a3, a4, &qword_254D3A730, &qword_254D3A738);
}

uint64_t sub_213DB6DFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A6B8, (uint64_t (*)(_QWORD))type metadata accessor for MessagesGroundTruth);
}

char *sub_213DB6E10(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_213DB6E1C(a1, a2, a3, a4, &qword_254D3A670);
}

char *sub_213DB6E1C(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8B6C(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_213DB6F10(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_213DB6E1C(a1, a2, a3, a4, &qword_254D3A608);
}

_QWORD *sub_213DB6F1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A778);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB974C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB7028(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5C80(a1, a2, a3, a4, &qword_254D3A710, &qword_253F06920);
}

uint64_t sub_213DB703C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A668, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
}

uint64_t sub_213DB7050(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A768, (uint64_t (*)(_QWORD))type metadata accessor for MediaInAppFollowupClassification);
}

_QWORD *sub_213DB7064(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A758);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 + 31;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4])
          memmove(v13, a4 + 4, v8 << 6);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_213DB8E4C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB7170(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB8D58(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB7290(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_253F07010, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
}

_QWORD *sub_213DB72A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB6838(a1, a2, a3, a4, &qword_254D3A740, &qword_254D3A748);
}

uint64_t sub_213DB72B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A648, type metadata accessor for PlusContactSuggestionRuntimeSummary);
}

uint64_t sub_213DB72CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A708, (uint64_t (*)(_QWORD))type metadata accessor for ContactPromptGroundTruth);
}

_QWORD *sub_213DB72E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB9424(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DB7404(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_213DB5798(a1, a2, a3, a4, &qword_254D3A6F8, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionOutcomeGroundTruth);
}

_QWORD *sub_213DB7418(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4])
          memmove(v12, a4 + 4, 72 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_213DB9A5C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DB7540(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DB5B40(a1, a2, a3, a4, &qword_254D3A6D8, &qword_254D3A6E0);
}

uint64_t sub_213DB7554(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_213DB9C60(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB775C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_213DB9C60(&qword_254D3A7A8, &qword_254D3A7A0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7A0);
          v12 = sub_213DEAB00(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_213DB9CDC(0, &qword_254D3A798);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB7970(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_213DB9C60(&qword_254D3A640, &qword_254D3A638);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A638);
          v12 = sub_213DEAAAC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_213DB9CDC(0, (unint64_t *)&qword_254D3A630);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB7B84(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_213DB9C60(&qword_254D3A728, &qword_254D3A720);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A720);
          v12 = sub_213DEAAAC(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_213DB9CDC(0, (unint64_t *)&qword_254D3A718);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB7D98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_213DB0BF0(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_213DB7E10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB7F00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB7FF0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = objc_msgSend(a1, sel_mediaItems);
  if (!v4)
    goto LABEL_27;
  v5 = v4;
  sub_213DB9CDC(0, qword_254D3A880);
  v6 = sub_213EF2A3C();

  v7 = v6 >> 62;
  if (!(v6 >> 62))
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  result = sub_213EF306C();
  v8 = result;
  if (!result)
  {
LABEL_26:
    swift_bridgeObjectRelease_n();
LABEL_27:
    result = (uint64_t)objc_msgSend(a1, sel_mediaContainer);
    v11 = result;
    goto LABEL_28;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v10 = (id)MEMORY[0x2199C49B0](0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v10 = *(id *)(v6 + 32);
  }
  v11 = (uint64_t)v10;
  result = swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRetain();
    v12 = sub_213EF306C();
    result = swift_bridgeObjectRelease();
    if (v12 < 2)
      goto LABEL_9;
  }
  else if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_9:
    result = swift_bridgeObjectRelease();
LABEL_28:
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
LABEL_29:
    *a2 = v11;
    a2[1] = v16;
    a2[2] = v17;
    a2[3] = v18;
    a2[4] = v19;
    return result;
  }
  if (v8 < 1)
    goto LABEL_32;
  if (!v7)
  {
    v13 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_17;
    __break(1u);
  }
  swift_bridgeObjectRetain();
  v14 = sub_213EF306C();
  result = swift_bridgeObjectRelease();
  if (v14 >= 1)
  {
    swift_bridgeObjectRetain();
    v13 = sub_213EF306C();
    result = swift_bridgeObjectRelease();
LABEL_17:
    if (v13 >= v8)
    {
      if ((v6 & 0xC000000000000001) != 0 && v8 != 1)
      {
        result = 1;
        do
        {
          v15 = result + 1;
          sub_213EF2EF8();
          result = v15;
        }
        while (v8 != v15);
      }
      if (v7)
      {
        swift_bridgeObjectRetain();
        v16 = sub_213EF3078();
        v17 = v20;
        v18 = v21;
        v19 = v22;
        result = swift_bridgeObjectRelease_n();
      }
      else
      {
        v16 = v6 & 0xFFFFFFFFFFFFFF8;
        v17 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
        v18 = 1;
        v19 = (2 * v8) | 1;
      }
      goto LABEL_29;
    }
    goto LABEL_33;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_213DB8290(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int16 v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  int64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;
  uint64_t v32;

  v24 = a3 >> 1;
  v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_14;
  if (v3)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_213DCD080(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
LABEL_15:
      __break(1u);
      return;
    }
    v5 = 0;
    v6 = v32;
    v7 = a1 + 8 * a2;
    while (1)
    {
      v8 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      if (a2 + v5 >= v24 || v5 >= v3)
        goto LABEL_13;
      v9 = *(id *)(v7 + 8 * v5);
      sub_213DB38E8(v9, (uint64_t)&v26);

      v10 = v26;
      v11 = v27;
      v12 = v28;
      v13 = v29;
      v14 = v30;
      v15 = v31;
      v32 = v6;
      v17 = *(_QWORD *)(v6 + 16);
      v16 = *(_QWORD *)(v6 + 24);
      if (v17 >= v16 >> 1)
      {
        v22 = v27;
        v23 = v26;
        v20 = v29;
        v21 = v28;
        v19 = v30;
        sub_213DCD080(v16 > 1, v17 + 1, 1);
        v14 = v19;
        v13 = v20;
        v12 = v21;
        v11 = v22;
        v10 = v23;
        v6 = v32;
      }
      *(_QWORD *)(v6 + 16) = v17 + 1;
      v18 = v6 + 88 * v17;
      *(_OWORD *)(v18 + 32) = v10;
      *(_OWORD *)(v18 + 48) = v11;
      *(_OWORD *)(v18 + 64) = v12;
      *(_OWORD *)(v18 + 80) = v13;
      *(_OWORD *)(v18 + 96) = v14;
      *(_WORD *)(v18 + 112) = v15;
      ++v5;
      if (v8 == v3)
        return;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t sub_213DB8408(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_213DB8444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DB848C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06970);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_213DB8518(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_213DB854C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_213DB859C(a3, a4);
  }
  return result;
}

uint64_t sub_213DB859C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_213DB85D0(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_254D3A508, a2, (uint64_t (*)(uint64_t))type metadata accessor for INPlayMediaIntentFeatureExtractor, (uint64_t)&protocol conformance descriptor for INPlayMediaIntentFeatureExtractor);
}

uint64_t type metadata accessor for INPlayMediaIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t sub_213DB861C(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_254D3A510, a2, (uint64_t (*)(uint64_t))type metadata accessor for INPlayMediaIntentFeatureExtractor, (uint64_t)&protocol conformance descriptor for INPlayMediaIntentFeatureExtractor);
}

uint64_t method lookup function for INPlayMediaIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.__allocating_init(adamIdExtractor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.extractMediaItemFeatures(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of INPlayMediaIntentFeatureExtractor.buildMediaItem(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_213DB8688(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A870);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB8790(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB8884(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB8978(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6A8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

char *sub_213DB8A84(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = 32 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_213EF30A8();
  __break(1u);
  return result;
}

char *sub_213DB8B6C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB8C50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7B8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB8D58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB8E4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

char *sub_213DB8F3C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9024(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9118(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9230(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9334(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

char *sub_213DB9424(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9510(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F00);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9618(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2199C52C8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_213DB974C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + (a1 << 6) + 32;
    v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB983C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9954(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 48 * a1 + 32;
    v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9A5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 72 * a1 + 32;
    v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9B50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DB9C58()
{
  return swift_release();
}

uint64_t sub_213DB9C60(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_213DB9CDC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t static SiriKitTaskType.startCall.getter()
{
  return 0xD000000000000023;
}

unint64_t static SiriKitTaskType.sendMessage.getter()
{
  return 0xD000000000000029;
}

unint64_t static SiriKitTaskType.playMedia.getter()
{
  return 0xD000000000000024;
}

ValueMetadata *type metadata accessor for SiriKitTaskType()
{
  return &type metadata for SiriKitTaskType;
}

uint64_t sub_213DB9D78(uint64_t a1)
{
  sub_213EF2AE4();
  return a1;
}

uint64_t OneShotSuccessfulGroundTruthGenerator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  OneShotSuccessfulGroundTruthGenerator.init(_:)(a1, v3, v4, v5);
  return v2;
}

char *OneShotSuccessfulGroundTruthGenerator.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  type metadata accessor for OneShotSuccessfulGroundTruthGenerator(0, v6, *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  *((_QWORD *)v4 + 2) = static InferenceLogUtils.loggerTag<A>(_:)();
  *((_QWORD *)v4 + 3) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 104)], a1, v6);
  return v4;
}

uint64_t type metadata accessor for OneShotSuccessfulGroundTruthGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OneShotSuccessfulGroundTruthGenerator);
}

uint64_t sub_213DB9E50(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_213EF2D6C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v17 - v11;
  sub_213DB9FD8(a1, a2, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return sub_213EF2A90();
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v14(v12, v9, AssociatedTypeWitness);
    sub_213DBB2DC(AssociatedTypeWitness, AssociatedTypeWitness);
    swift_allocObject();
    v13 = sub_213EF2A60();
    v14(v15, v12, AssociatedTypeWitness);
    sub_213EF2AE4();
  }
  return v13;
}

uint64_t sub_213DB9FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint8_t *v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  char *v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  _QWORD *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;

  v138 = a2;
  v131 = a1;
  v133 = a3;
  v4 = (_QWORD *)*v3;
  v120 = sub_213EF1D64();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v118 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v4[10];
  v7 = v4[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v116 = sub_213EF2D6C();
  v115 = *(_QWORD *)(v116 - 8);
  v9 = MEMORY[0x24BDAC7A8](v116);
  v142 = (char *)&v114 - v10;
  v122 = AssociatedTypeWitness;
  v130 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v121 = (char *)&v114 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v124 = sub_213EF2D6C();
  v123 = *(_QWORD *)(v124 - 8);
  v13 = MEMORY[0x24BDAC7A8](v124);
  v117 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v132 = (char *)&v114 - v16;
  v127 = v12;
  v126 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v125 = (char *)&v114 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(qword_253F06DC0);
  MEMORY[0x24BDAC7A8](v18);
  v141 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for TurnPairRestatementClassification();
  v147 = *(uint8_t **)(v145 - 8);
  v20 = MEMORY[0x24BDAC7A8](v145);
  v144 = (uint64_t)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v140 = (uint64_t)&v114 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for EntityPromptClassification();
  v146 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v143 = (uint64_t)&v114 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v139 = (uint64_t)&v114 - v29;
  v30 = swift_getAssociatedTypeWitness();
  v31 = sub_213EF2D6C();
  v129 = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v114 - v33;
  v35 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v135 = (char *)&v114 - v36;
  v149 = v138;
  v37 = v4[13];
  v134 = v3;
  v128 = (char *)v3 + v37;
  v136 = v6;
  v137 = v7;
  sub_213DBB16C((uint64_t)v3 + v37, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA8);
  sub_213DBB3E4();
  v38 = sub_213EF29B8();
  swift_release();
  v149 = v38;
  v39 = sub_213EF2AE4();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v39);
  sub_213EF2C40();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v34, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v129 + 8))(v34, v31);
    if (qword_253F04A88 != -1)
      swift_once();
    v40 = sub_213EF2724();
    __swift_project_value_buffer(v40, (uint64_t)qword_253F08A00);
    v41 = v134;
    swift_retain();
    v42 = sub_213EF270C();
    v43 = sub_213EF2C94();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = swift_slowAlloc();
      v149 = v45;
      *(_DWORD *)v44 = 136315138;
      v47 = v41[2];
      v46 = v41[3];
      swift_bridgeObjectRetain();
      v148 = sub_213DB0570(v47, v46, &v149);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v42, v43, "%s No successful event associated with session. Skipping one shot successful event GT generation.", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v45, -1, -1);
      MEMORY[0x2199C53C4](v44, -1, -1);

    }
    else
    {

      swift_release();
    }
LABEL_37:
    v84 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v133, 1, 1, v84);
  }
  v114 = v35;
  v48 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v129 = v30;
  v48(v135, v34, v30);
  v49 = v138;
  v50 = *(_QWORD *)(v138 + 16);
  if (v50)
  {
    v51 = v138 + 32;
    swift_bridgeObjectRetain();
    v52 = MEMORY[0x24BEE4AF8];
    v53 = v49 + 32;
    v54 = v50;
    do
    {
      sub_213DAFDFC(v53, (uint64_t)&v149);
      sub_213DAFDFC((uint64_t)&v149, (uint64_t)&v148);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v55 = swift_dynamicCast();
      v56 = v146;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v25, v55 ^ 1u, 1, v26);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v149);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v25, 1, v26) == 1)
      {
        sub_213DAFEC4((uint64_t)v25, &qword_253F06C68);
      }
      else
      {
        v57 = v139;
        sub_213DBB430((uint64_t)v25, v139, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DBB430(v57, v143, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v52 = sub_213DB5648(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
        v59 = *(_QWORD *)(v52 + 16);
        v58 = *(_QWORD *)(v52 + 24);
        v60 = v52;
        if (v59 >= v58 >> 1)
          v60 = sub_213DB5648(v58 > 1, v59 + 1, 1, v52);
        *(_QWORD *)(v60 + 16) = v59 + 1;
        v52 = v60;
        sub_213DBB430(v143, v60+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(_QWORD *)(v146 + 72) * v59, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
      }
      v53 += 40;
      --v54;
    }
    while (v54);
    v146 = v52;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v61 = MEMORY[0x24BEE4AF8];
    v63 = (uint64_t)v141;
    v62 = v142;
    v64 = v145;
    v65 = v147;
    do
    {
      sub_213DAFDFC(v51, (uint64_t)&v149);
      sub_213DAFDFC((uint64_t)&v149, (uint64_t)&v148);
      v66 = swift_dynamicCast();
      (*((void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v65 + 7))(v63, v66 ^ 1u, 1, v64);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v149);
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v65 + 6))(v63, 1, v64) == 1)
      {
        sub_213DAFEC4(v63, qword_253F06DC0);
      }
      else
      {
        v67 = v140;
        sub_213DBB430(v63, v140, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        sub_213DBB430(v67, v144, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v61 = sub_213DB5AF0(0, *(_QWORD *)(v61 + 16) + 1, 1, v61);
        v69 = *(_QWORD *)(v61 + 16);
        v68 = *(_QWORD *)(v61 + 24);
        if (v69 >= v68 >> 1)
          v61 = sub_213DB5AF0(v68 > 1, v69 + 1, 1, v61);
        *(_QWORD *)(v61 + 16) = v69 + 1;
        sub_213DBB430(v144, v61 + ((v147[80] + 32) & ~(unint64_t)v147[80]) + *((_QWORD *)v147 + 9) * v69, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        v63 = (uint64_t)v141;
        v62 = v142;
      }
      v51 += 40;
      --v50;
    }
    while (v50);
    v49 = v138;
    swift_bridgeObjectRelease();
    v70 = v146;
  }
  else
  {
    v61 = MEMORY[0x24BEE4AF8];
    v70 = MEMORY[0x24BEE4AF8];
    v62 = v142;
  }
  v71 = *(_QWORD *)(v70 + 16);
  swift_bridgeObjectRelease();
  v72 = v137;
  v73 = v134;
  v74 = v131;
  v75 = v130;
  if (v71)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    if (qword_253F04A88 != -1)
      swift_once();
    v77 = sub_213EF2724();
    __swift_project_value_buffer(v77, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v78 = sub_213EF270C();
    v79 = sub_213EF2C94();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v81 = swift_slowAlloc();
      v149 = v81;
      *(_DWORD *)v80 = 136315138;
      v83 = v73[2];
      v82 = v73[3];
      swift_bridgeObjectRetain();
      v148 = sub_213DB0570(v83, v82, &v149);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v78, v79, "%s Prompt or restatement present in conversation. Skipping positive ground truth generation.", v80, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v81, -1, -1);
      MEMORY[0x2199C53C4](v80, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v114 + 8))(v135, v129);
    goto LABEL_37;
  }
  v76 = *(_QWORD *)(v61 + 16);
  swift_bridgeObjectRelease();
  if (v76)
    goto LABEL_31;
  v86 = v49;
  v87 = v135;
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v72 + 80))(v74, v135, v136, v72);
  v88 = v132;
  v89 = v126;
  v90 = v127;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v132, 1, v127) == 1)
  {
    (*(void (**)(char *, uint64_t))(v123 + 8))(v88, v124);
    if (qword_253F04A88 != -1)
      swift_once();
    v91 = sub_213EF2724();
    __swift_project_value_buffer(v91, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v92 = sub_213EF270C();
    v93 = sub_213EF2C94();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      v95 = swift_slowAlloc();
      v149 = v95;
      *(_DWORD *)v94 = 136315138;
      v147 = v94 + 4;
      v96 = v73[2];
      v97 = v73[3];
      swift_bridgeObjectRetain();
      v148 = sub_213DB0570(v96, v97, &v149);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v92, v93, "%s Could not extract exactly one entity reference. Skipping positive ground truth generation.", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v95, -1, -1);
      MEMORY[0x2199C53C4](v94, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v114 + 8))(v87, v129);
    goto LABEL_37;
  }
  v98 = v125;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v125, v88, v90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 88))(v74, v136, v72);
  v99 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v62, 1, v122) == 1)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v62, v116);
    if (qword_253F04A88 != -1)
      swift_once();
    v100 = sub_213EF2724();
    __swift_project_value_buffer(v100, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v101 = sub_213EF270C();
    v102 = sub_213EF2C94();
    v103 = os_log_type_enabled(v101, v102);
    v104 = v125;
    if (v103)
    {
      v105 = (uint8_t *)swift_slowAlloc();
      v106 = swift_slowAlloc();
      v149 = v106;
      *(_DWORD *)v105 = 136315138;
      v147 = v105 + 4;
      v107 = v73[2];
      v108 = v73[3];
      swift_bridgeObjectRetain();
      v148 = sub_213DB0570(v107, v108, &v149);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v101, v102, "%s Could not extract exactly one uso entity. Skipping positive ground truth generation.", v105, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v106, -1, -1);
      MEMORY[0x2199C53C4](v105, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(char *, uint64_t))(v126 + 8))(v104, v127);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v135, v129);
    goto LABEL_37;
  }
  v109 = v121;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v121, v62, v99);
  type metadata accessor for SuccessfulTaskMetadata();
  v110 = v89;
  v111 = swift_allocObject();
  *(_QWORD *)(v111 + 16) = v74;
  *(_QWORD *)(v111 + 24) = v86;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v112 = v118;
  sub_213EF1D58();
  v113 = v117;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v117, v98, v90);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v113, 0, 1, v90);
  (*(void (**)(char *, char *, char *, char *, uint64_t, uint64_t, uint64_t))(v72 + 96))(v112, v109, v113, v98, v111, v136, v72);
  swift_release();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v113, v124);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v112, v120);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v121, v99);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v98, v90);
  return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v135, v129);
}

uint64_t (*sub_213DBB16C(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_213DBB4CC;
}

uint64_t *OneShotSuccessfulGroundTruthGenerator.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return v0;
}

uint64_t OneShotSuccessfulGroundTruthGenerator.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return swift_deallocClassInstance();
}

uint64_t sub_213DBB2BC(uint64_t a1, uint64_t a2)
{
  return sub_213DB9E50(a1, a2);
}

uint64_t sub_213DBB2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
  else
    return sub_213EF3204();
}

uint64_t sub_213DBB328()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_213DBB348()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OneShotSuccessfulGroundTruthGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OneShotSuccessfulGroundTruthGenerator.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of OneShotSuccessfulGroundTruthGenerator.generate(session:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

unint64_t sub_213DBB3E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F06FB0;
  if (!qword_253F06FB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F06FA8);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_253F06FB0);
  }
  return result;
}

uint64_t sub_213DBB430(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_213DBB474()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_213DBB4CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 64))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x2199C5244](a1, v6, a5);
}

BOOL static MediaGroundTruthSource.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v2 = *a1;
  v3 = *a2;
  if ((v2 & 0x80u) == 0)
    v4 = v3 >= 0;
  else
    v4 = v3 < 0;
  return v2 == v3 && v4;
}

BOOL static MediaCorrectionGroundTruthSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MediaGroundTruthSource.hash(into:)()
{
  sub_213EF3300();
  return sub_213EF3300();
}

BOOL sub_213DBB5B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s28SiriPrivateLearningInference23SuggestionSurfacedStateO9hashValueSivg_0()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t sub_213DBB60C()
{
  return sub_213EF3300();
}

uint64_t sub_213DBB634()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t sub_213DBB674()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B63616264656566;
  else
    return 0x6974636572726F63;
}

uint64_t sub_213DBB6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DC00C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213DBB6D8()
{
  return 0;
}

void sub_213DBB6E4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_213DBB6F0()
{
  sub_213DBD9D8();
  return sub_213EF3354();
}

uint64_t sub_213DBB718()
{
  sub_213DBD9D8();
  return sub_213EF3360();
}

uint64_t sub_213DBB740()
{
  return 1;
}

uint64_t sub_213DBB750()
{
  return 12383;
}

void sub_213DBB760(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_213DBB76C()
{
  sub_213DBDAA4();
  return sub_213EF3354();
}

uint64_t sub_213DBB794()
{
  sub_213DBDAA4();
  return sub_213EF3360();
}

uint64_t sub_213DBB7BC()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t sub_213DBB7FC()
{
  return sub_213EF3300();
}

uint64_t sub_213DBB820()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t sub_213DBB85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_213EF3234();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_213DBB8D8()
{
  sub_213DBDA1C();
  return sub_213EF3354();
}

uint64_t sub_213DBB900()
{
  sub_213DBDA1C();
  return sub_213EF3360();
}

uint64_t MediaGroundTruthSource.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  char v12;
  char *v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A8A8);
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v16 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A8B0);
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A8B8);
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DBD9D8();
  sub_213EF3348();
  if (v11 < 0)
  {
    v12 = v11 & 0x7F;
    v24 = 1;
    sub_213DBDA1C();
    v13 = v16;
    sub_213EF3168();
    v23 = v12;
    sub_213DBDA60();
    v14 = v18;
    sub_213EF31BC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v14);
  }
  else
  {
    v22 = 0;
    sub_213DBDAA4();
    sub_213EF3168();
    v21 = v11;
    sub_213DBDAE8();
    sub_213EF31BC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v8);
}

uint64_t MediaGroundTruthSource.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t MediaGroundTruthSource.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;

  v26 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A8E8);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A8F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A8F8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_213DBD9D8();
  v13 = v31;
  sub_213EF333C();
  if (!v13)
  {
    v24 = v4;
    v25 = v5;
    v14 = v28;
    v15 = v29;
    v31 = v9;
    v16 = sub_213EF3150();
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      v17 = v11;
      if ((*(_BYTE *)(v16 + 32) & 1) != 0)
      {
        v35 = 1;
        sub_213DBDA1C();
        sub_213EF30E4();
        sub_213DBDB2C();
        sub_213EF3144();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
        v18 = v34 | 0x80;
      }
      else
      {
        v33 = 0;
        sub_213DBDAA4();
        sub_213EF30E4();
        sub_213DBDB70();
        v23 = v24;
        sub_213EF3144();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v23);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v8);
        v18 = v32;
      }
      *v26 = v18;
    }
    else
    {
      v19 = sub_213EF2F34();
      swift_allocError();
      v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
      *v21 = &type metadata for MediaGroundTruthSource;
      sub_213EF30F0();
      sub_213EF2F28();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
}

uint64_t sub_213DBBF7C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MediaGroundTruthSource.init(from:)(a1, a2);
}

uint64_t sub_213DBBF90(_QWORD *a1)
{
  return MediaGroundTruthSource.encode(to:)(a1);
}

BOOL sub_213DBBFA4(unsigned __int8 *a1, char *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v2 = *a1;
  v3 = *a2;
  if ((v2 & 0x80u) == 0)
    v4 = v3 >= 0;
  else
    v4 = v3 < 0;
  return v2 == v3 && v4;
}

uint64_t sub_213DBBFD0()
{
  sub_213EF32F4();
  sub_213EF3300();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t sub_213DBC024()
{
  sub_213EF3300();
  return sub_213EF3300();
}

uint64_t sub_213DBC064()
{
  sub_213EF32F4();
  sub_213EF3300();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t MediaCorrectionGroundTruthSource.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t sub_213DBC0DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213DBC118 + 4 * byte_213EF46B0[a1]))(0xD000000000000021, 0x8000000213F05C40);
}

uint64_t sub_213DBC118()
{
  uint64_t v0;

  return v0 + 11;
}

unint64_t sub_213DBC140()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_213DBC15C()
{
  return 0x6C6F467070416E69;
}

uint64_t sub_213DBC188()
{
  unsigned __int8 *v0;

  return sub_213DBC0DC(*v0);
}

uint64_t sub_213DBC190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DC01BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_213DBC1B4(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_213DBC1C0()
{
  sub_213DBDBB4();
  return sub_213EF3354();
}

uint64_t sub_213DBC1E8()
{
  sub_213DBDBB4();
  return sub_213EF3360();
}

uint64_t sub_213DBC210()
{
  return 0;
}

uint64_t sub_213DBC21C()
{
  sub_213DBDBF8();
  return sub_213EF3354();
}

uint64_t sub_213DBC244()
{
  sub_213DBDBF8();
  return sub_213EF3360();
}

uint64_t sub_213DBC26C()
{
  sub_213DBDC3C();
  return sub_213EF3354();
}

uint64_t sub_213DBC294()
{
  sub_213DBDC3C();
  return sub_213EF3360();
}

uint64_t sub_213DBC2BC()
{
  sub_213DBDC80();
  return sub_213EF3354();
}

uint64_t sub_213DBC2E4()
{
  sub_213DBDC80();
  return sub_213EF3360();
}

uint64_t sub_213DBC30C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_213DBC338()
{
  sub_213DBDD08();
  return sub_213EF3354();
}

uint64_t sub_213DBC360()
{
  sub_213DBDD08();
  return sub_213EF3360();
}

uint64_t sub_213DBC388()
{
  sub_213DBDCC4();
  return sub_213EF3354();
}

uint64_t sub_213DBC3B0()
{
  sub_213DBDCC4();
  return sub_213EF3360();
}

void *static MediaCorrectionGroundTruthSource.allCases.getter()
{
  return &unk_24D0FFC38;
}

void MediaCorrectionGroundTruthSource.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A918);
  v14[11] = *(_QWORD *)(v3 - 8);
  v14[12] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v14[10] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A920);
  v14[8] = *(_QWORD *)(v5 - 8);
  v14[9] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A928);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A930);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A938);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A940);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DBDBB4();
  sub_213EF3348();
  __asm { BR              X9 }
}

uint64_t sub_213DBC5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_213DBDD08();
  v5 = *(_QWORD *)(v4 - 88);
  sub_213EF3168();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

uint64_t MediaCorrectionGroundTruthSource.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t MediaCorrectionGroundTruthSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A978);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A980);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A988);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A990);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A998);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A9A0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_213DBDBB4();
  v19 = v44;
  sub_213EF333C();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_213EF3150();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_213EF2F34();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v23 = &type metadata for MediaCorrectionGroundTruthSource;
    v24 = v28;
    v25 = v29;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
}

uint64_t sub_213DBCCA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaCorrectionGroundTruthSource.init(from:)(a1, a2);
}

void sub_213DBCCBC(_QWORD *a1)
{
  MediaCorrectionGroundTruthSource.encode(to:)(a1);
}

BOOL sub_213DBCCD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_213DBCCE4(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D0FFC60;
}

uint64_t sub_213DBCCF4@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v14 = sub_213EF1D64();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v19 = a4[1];
  v20 = *a5;
  v47 = a5[1];
  v48 = v20;
  v21 = a5[2];
  v45 = a5[3];
  v46 = v21;
  v22 = a5[4];
  v43 = a5[5];
  v44 = v22;
  LODWORD(v16) = *((unsigned __int8 *)a5 + 48);
  v41 = v18;
  v42 = v16;
  v23 = *((unsigned __int8 *)a5 + 49);
  if (v19)
  {
    v39 = v23;
    v23 = *((unsigned __int16 *)a4 + 24);
    v24 = a4[5];
    v40 = a6;
    v37 = a4[4];
    v38 = v24;
    v35 = *((_OWORD *)a4 + 1);
    v25 = a3;
    v26 = *a4;
    v36 = v23 >> 8;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A770);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_213EF53E0;
    *(_QWORD *)(v27 + 32) = v26;
    *(_QWORD *)(v27 + 40) = v19;
    a3 = v25;
    *(_OWORD *)(v27 + 48) = v35;
    a6 = v40;
    v28 = v38;
    *(_QWORD *)(v27 + 64) = v37;
    *(_QWORD *)(v27 + 72) = v28;
    *(_BYTE *)(v27 + 80) = v23;
    LOBYTE(v23) = v39;
    *(_BYTE *)(v27 + 81) = v36;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
    v27 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a7, v17, v14);
  v29 = (int *)type metadata accessor for MediaGroundTruth();
  *(_BYTE *)(a7 + v29[5]) = v41;
  *(_QWORD *)(a7 + v29[6]) = a3;
  *(_QWORD *)(a7 + v29[7]) = v27;
  v30 = a7 + v29[8];
  v31 = v47;
  *(_QWORD *)v30 = v48;
  *(_QWORD *)(v30 + 8) = v31;
  v32 = v45;
  *(_QWORD *)(v30 + 16) = v46;
  *(_QWORD *)(v30 + 24) = v32;
  v33 = v43;
  *(_QWORD *)(v30 + 32) = v44;
  *(_QWORD *)(v30 + 40) = v33;
  *(_BYTE *)(v30 + 48) = v42;
  *(_BYTE *)(v30 + 49) = v23;
  return sub_213DC0630(a6, a7 + v29[9], &qword_253F04828);
}

uint64_t MediaGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MediaGroundTruth.source.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t MediaGroundTruth.usoEntity.getter()
{
  type metadata accessor for MediaGroundTruth();
  return swift_retain();
}

uint64_t MediaGroundTruth.originalEntityReference.getter()
{
  type metadata accessor for MediaGroundTruth();
  return swift_bridgeObjectRetain();
}

uint64_t MediaGroundTruth.correctedEntityReference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaGroundTruth() + 32));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  LOWORD(v3) = *((_WORD *)v3 + 24);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_WORD *)(a1 + 48) = (_WORD)v3;
  swift_bridgeObjectRetain();
  return sub_213DB8518(v6, v7);
}

uint64_t MediaGroundTruth.originalRequestID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for MediaGroundTruth() + 36);
  return sub_213DBDD88(v3, a1);
}

uint64_t sub_213DBD064(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213DBD08C + 4 * byte_213EF46BF[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_213DBD08C()
{
  return 0x656372756F73;
}

uint64_t sub_213DBD0A0()
{
  return 0x7469746E456F7375;
}

unint64_t sub_213DBD0BC()
{
  return 0xD000000000000017;
}

unint64_t sub_213DBD0F4()
{
  return 0xD000000000000011;
}

uint64_t sub_213DBD110()
{
  unsigned __int8 *v0;

  return sub_213DBD064(*v0);
}

uint64_t sub_213DBD118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DC03DC(a1, a2);
  *a3 = result;
  return result;
}

void sub_213DBD13C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_213DBD148()
{
  sub_213DBE38C();
  return sub_213EF3354();
}

uint64_t sub_213DBD170()
{
  sub_213DBE38C();
  return sub_213EF3360();
}

uint64_t MediaGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  __int16 v12;
  __int128 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int16 v20;
  char v21;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A9A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DBE38C();
  sub_213EF3348();
  LOBYTE(v16) = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for MediaGroundTruth();
    LOBYTE(v16) = *(_BYTE *)(v3 + v9[5]);
    v21 = 1;
    sub_213DBDAE8();
    sub_213EF31BC();
    v16 = *(_QWORD *)(v3 + v9[6]);
    v21 = 2;
    sub_213EF1ED8();
    sub_213DB0DB4(&qword_254D3A9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F778]);
    sub_213EF31BC();
    v16 = *(_QWORD *)(v3 + v9[7]);
    v21 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A9C8);
    sub_213DBE414(&qword_254D3A9D0, (uint64_t (*)(void))sub_213DBE3D0, MEMORY[0x24BEE12A0]);
    sub_213EF31BC();
    v10 = (uint64_t *)(v3 + v9[8]);
    v11 = v10[1];
    v12 = *((_WORD *)v10 + 24);
    v16 = *v10;
    v17 = v11;
    v13 = *((_OWORD *)v10 + 2);
    v18 = *((_OWORD *)v10 + 1);
    v19 = v13;
    v20 = v12;
    v21 = 4;
    sub_213DBE3D0();
    sub_213EF31BC();
    LOBYTE(v16) = 5;
    sub_213EF3180();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MediaGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int16 v36;
  char v37;

  v25 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_213EF1D64();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A9E0);
  v7 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for MediaGroundTruth();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DBE38C();
  v30 = v9;
  v13 = v31;
  sub_213EF333C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v31 = v7;
  v14 = (uint64_t)v12;
  LOBYTE(v32) = 0;
  v15 = sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v16 = v27;
  sub_213EF3144();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v29, v16);
  v37 = 1;
  sub_213DBDB70();
  sub_213EF3144();
  v29 = (char *)v15;
  *(_BYTE *)(v14 + v10[5]) = v32;
  sub_213EF1ED8();
  v37 = 2;
  sub_213DB0DB4(&qword_254D3A9F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], MEMORY[0x24BE9F780]);
  sub_213EF3144();
  v17 = v31;
  *(_QWORD *)(v14 + v10[6]) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A9C8);
  v37 = 3;
  sub_213DBE414(&qword_254D3A9F8, (uint64_t (*)(void))sub_213DBE47C, MEMORY[0x24BEE12D0]);
  sub_213EF3144();
  *(_QWORD *)(v14 + v10[7]) = v32;
  v37 = 4;
  sub_213DBE47C();
  v24[1] = 0;
  sub_213EF3144();
  v18 = v33;
  v19 = v36;
  v20 = v14 + v10[8];
  *(_QWORD *)v20 = v32;
  *(_QWORD *)(v20 + 8) = v18;
  v21 = v35;
  *(_OWORD *)(v20 + 16) = v34;
  *(_OWORD *)(v20 + 32) = v21;
  *(_WORD *)(v20 + 48) = v19;
  LOBYTE(v32) = 5;
  v22 = (uint64_t)v26;
  sub_213EF3108();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v28);
  sub_213DC0630(v22, v14 + v10[9], &qword_253F04828);
  sub_213DBE4C0(v14, v25);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_213DBE504(v14);
}

uint64_t sub_213DBD974@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_213DBD9B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213DBD9C4(_QWORD *a1)
{
  return MediaGroundTruth.encode(to:)(a1);
}

unint64_t sub_213DBD9D8()
{
  unint64_t result;

  result = qword_254D3A8C0;
  if (!qword_254D3A8C0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF538C, &type metadata for MediaGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A8C0);
  }
  return result;
}

unint64_t sub_213DBDA1C()
{
  unint64_t result;

  result = qword_254D3A8C8;
  if (!qword_254D3A8C8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF533C, &type metadata for MediaGroundTruthSource.FeedbackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A8C8);
  }
  return result;
}

unint64_t sub_213DBDA60()
{
  unint64_t result;

  result = qword_254D3A8D0;
  if (!qword_254D3A8D0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaFeedbackGroundTruthSource, &type metadata for MediaFeedbackGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3A8D0);
  }
  return result;
}

unint64_t sub_213DBDAA4()
{
  unint64_t result;

  result = qword_254D3A8D8;
  if (!qword_254D3A8D8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF52EC, &type metadata for MediaGroundTruthSource.CorrectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A8D8);
  }
  return result;
}

unint64_t sub_213DBDAE8()
{
  unint64_t result;

  result = qword_254D3A8E0;
  if (!qword_254D3A8E0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaCorrectionGroundTruthSource, &type metadata for MediaCorrectionGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3A8E0);
  }
  return result;
}

unint64_t sub_213DBDB2C()
{
  unint64_t result;

  result = qword_254D3A908;
  if (!qword_254D3A908)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaFeedbackGroundTruthSource, &type metadata for MediaFeedbackGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3A908);
  }
  return result;
}

unint64_t sub_213DBDB70()
{
  unint64_t result;

  result = qword_254D3A910;
  if (!qword_254D3A910)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaCorrectionGroundTruthSource, &type metadata for MediaCorrectionGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3A910);
  }
  return result;
}

unint64_t sub_213DBDBB4()
{
  unint64_t result;

  result = qword_254D3A948;
  if (!qword_254D3A948)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF529C, &type metadata for MediaCorrectionGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A948);
  }
  return result;
}

unint64_t sub_213DBDBF8()
{
  unint64_t result;

  result = qword_254D3A950;
  if (!qword_254D3A950)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF524C, &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A950);
  }
  return result;
}

unint64_t sub_213DBDC3C()
{
  unint64_t result;

  result = qword_254D3A958;
  if (!qword_254D3A958)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF51FC, &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A958);
  }
  return result;
}

unint64_t sub_213DBDC80()
{
  unint64_t result;

  result = qword_254D3A960;
  if (!qword_254D3A960)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF51AC, &type metadata for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A960);
  }
  return result;
}

unint64_t sub_213DBDCC4()
{
  unint64_t result;

  result = qword_254D3A968;
  if (!qword_254D3A968)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF515C, &type metadata for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A968);
  }
  return result;
}

unint64_t sub_213DBDD08()
{
  unint64_t result;

  result = qword_254D3A970;
  if (!qword_254D3A970)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF510C, &type metadata for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A970);
  }
  return result;
}

uint64_t type metadata accessor for MediaGroundTruth()
{
  uint64_t result;

  result = qword_253F06AC8;
  if (!qword_253F06AC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213DBDD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL _s28SiriPrivateLearningInference16MediaGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD v64[2];
  __int128 v65;
  __int128 v66;
  __int16 v67;
  _QWORD v68[2];
  __int128 v69;
  __int128 v70;
  __int16 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92[10];
  uint64_t v93[10];
  _QWORD v94[10];
  char v95[8];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v4 = sub_213EF1D64();
  v63 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v41 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v41 - v17;
  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v62 = v9;
  v19 = type metadata accessor for MediaGroundTruth();
  if (*(unsigned __int8 *)(a1 + *(int *)(v19 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v19 + 20)))
    return 0;
  v20 = (int *)v19;
  v42 = v4;
  v21 = *(int *)(v19 + 24);
  v22 = *(_QWORD *)(a2 + v21);
  sub_213E6EFF8(*(_QWORD *)(a1 + v21), v92);
  v43 = v92[0];
  v44 = v92[1];
  v45 = v92[2];
  v46 = v92[3];
  v47 = v92[4];
  v49 = v92[5];
  v51 = v92[6];
  v53 = v92[7];
  v55 = v92[8];
  v57 = v92[9];
  sub_213E6EFF8(v22, v93);
  v23 = v93[0];
  v48 = v93[1];
  v50 = v93[2];
  v52 = v93[3];
  v54 = v93[4];
  v56 = v93[5];
  v58 = v93[6];
  v59 = v93[7];
  v60 = v93[8];
  v61 = v93[9];
  sub_213DC0630((uint64_t)v92, (uint64_t)v95, &qword_254D3AB00);
  if (v96 != 1)
  {
    sub_213DC0630((uint64_t)v93, (uint64_t)v94, &qword_254D3AB00);
    if (v94[1] != 1)
    {
      v97 = v43;
      v98 = v44;
      v99 = v45;
      v100 = v46;
      v101 = v47;
      v102 = v49;
      v103 = v51;
      v104 = v53;
      v105 = v55;
      v106 = v57;
      v72 = v23;
      v73 = v48;
      v74 = v50;
      v75 = v52;
      v76 = v54;
      v77 = v56;
      v78 = v58;
      v79 = v59;
      v80 = v60;
      v81 = v61;
      v24 = sub_213E54FC4(&v97, &v72);
      sub_213DC077C(v93);
      sub_213DC077C(v92);
      if ((v24 & 1) == 0)
        return 0;
      goto LABEL_9;
    }
LABEL_7:
    v72 = v43;
    v73 = v44;
    v74 = v45;
    v75 = v46;
    v76 = v47;
    v77 = v49;
    v78 = v51;
    v79 = v53;
    v80 = v55;
    v81 = v57;
    v82 = v23;
    v83 = v48;
    v84 = v50;
    v85 = v52;
    v86 = v54;
    v87 = v56;
    v88 = v58;
    v89 = v59;
    v90 = v60;
    v91 = v61;
    sub_213DC0674(&v72);
    return 0;
  }
  sub_213DC0630((uint64_t)v93, (uint64_t)&v97, &qword_254D3AB00);
  if (v98 != 1)
    goto LABEL_7;
LABEL_9:
  if (!sub_213E29610(*(_QWORD *)(a1 + v20[7]), *(_QWORD *)(a2 + v20[7])))
    return 0;
  v25 = a1 + v20[8];
  v26 = *(_QWORD *)(v25 + 8);
  v27 = *(_WORD *)(v25 + 48);
  v68[0] = *(_QWORD *)v25;
  v68[1] = v26;
  v28 = *(_OWORD *)(v25 + 32);
  v69 = *(_OWORD *)(v25 + 16);
  v70 = v28;
  v71 = v27;
  v29 = a2 + v20[8];
  v30 = *(_QWORD *)(v29 + 8);
  v31 = *(_WORD *)(v29 + 48);
  v64[0] = *(_QWORD *)v29;
  v64[1] = v30;
  v32 = *(_OWORD *)(v29 + 32);
  v65 = *(_OWORD *)(v29 + 16);
  v66 = v32;
  v67 = v31;
  if (!_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v68, (uint64_t)v64))
    return 0;
  sub_213DBDD88(a1 + v20[9], (uint64_t)v18);
  sub_213DBDD88(a2 + v20[9], (uint64_t)v16);
  v33 = (uint64_t)v62;
  v34 = (uint64_t)&v62[*(int *)(v7 + 48)];
  sub_213DBDD88((uint64_t)v18, (uint64_t)v62);
  sub_213DBDD88((uint64_t)v16, v34);
  v35 = v63;
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v37 = v42;
  if (v36(v33, 1, v42) == 1)
  {
    sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
    sub_213DAFEC4((uint64_t)v18, &qword_253F04828);
    if (v36(v34, 1, v37) == 1)
    {
      sub_213DAFEC4((uint64_t)v62, &qword_253F04828);
      return 1;
    }
    goto LABEL_16;
  }
  sub_213DBDD88(v33, (uint64_t)v13);
  if (v36(v34, 1, v37) == 1)
  {
    sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
    sub_213DAFEC4((uint64_t)v18, &qword_253F04828);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v37);
LABEL_16:
    sub_213DAFEC4((uint64_t)v62, &qword_253F04838);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v6, v34, v37);
  sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
  v39 = sub_213EF2838();
  v40 = *(void (**)(char *, uint64_t))(v35 + 8);
  v40(v6, v37);
  sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
  sub_213DAFEC4((uint64_t)v18, &qword_253F04828);
  v40(v13, v37);
  sub_213DAFEC4(v33, &qword_253F04828);
  return (v39 & 1) != 0;
}

unint64_t sub_213DBE38C()
{
  unint64_t result;

  result = qword_254D3A9B0;
  if (!qword_254D3A9B0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF50BC, &type metadata for MediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3A9B0);
  }
  return result;
}

unint64_t sub_213DBE3D0()
{
  unint64_t result;

  result = qword_254D3A9D8;
  if (!qword_254D3A9D8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReference, &type metadata for MediaReference);
    atomic_store(result, (unint64_t *)&qword_254D3A9D8);
  }
  return result;
}

uint64_t sub_213DBE414(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3A9C8);
    v8 = a2();
    result = MEMORY[0x2199C52D4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_213DBE47C()
{
  unint64_t result;

  result = qword_254D3AA00;
  if (!qword_254D3AA00)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReference, &type metadata for MediaReference);
    atomic_store(result, (unint64_t *)&qword_254D3AA00);
  }
  return result;
}

uint64_t sub_213DBE4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DBE504(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213DBE544()
{
  unint64_t result;

  result = qword_254D3AA08;
  if (!qword_254D3AA08)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaGroundTruthSource, &type metadata for MediaGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3AA08);
  }
  return result;
}

unint64_t sub_213DBE58C()
{
  unint64_t result;

  result = qword_254D3AA10;
  if (!qword_254D3AA10)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaCorrectionGroundTruthSource, &type metadata for MediaCorrectionGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3AA10);
  }
  return result;
}

unint64_t sub_213DBE5D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3AA18;
  if (!qword_254D3AA18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3AA20);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3AA18);
  }
  return result;
}

uint64_t sub_213DBE620(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_213DB0DB4(&qword_254D3AA28, (uint64_t (*)(uint64_t))type metadata accessor for MediaGroundTruth, (uint64_t)&protocol conformance descriptor for MediaGroundTruth);
  result = sub_213DB0DB4(&qword_254D3AA30, (uint64_t (*)(uint64_t))type metadata accessor for MediaGroundTruth, (uint64_t)&protocol conformance descriptor for MediaGroundTruth);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediaGroundTruthSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1F)
    goto LABEL_17;
  if (a2 + 225 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 225) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 225;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 225;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 225;
  }
LABEL_17:
  v6 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v6 >= 0x1E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruthSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 225 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 225) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1E)
    return ((uint64_t (*)(void))((char *)&loc_213DBE778 + 4 * byte_213EF46CA[v4]))();
  *a1 = a2 - 31;
  return ((uint64_t (*)(void))((char *)sub_213DBE7AC + 4 * byte_213EF46C5[v4]))();
}

uint64_t sub_213DBE7AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBE7B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DBE7BCLL);
  return result;
}

uint64_t sub_213DBE7D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DBE7DCLL);
  *(_BYTE *)result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_213DBE7E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBE7E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBE7F4(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_213DBE800(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_213DBE810(_BYTE *result, char a2)
{
  *result = *result & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource()
{
  return &type metadata for MediaGroundTruthSource;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource()
{
  return &type metadata for MediaCorrectionGroundTruthSource;
}

char *initializeBufferWithCopyOfBuffer for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v23)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(_QWORD *)(v7 - 8);
    v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v23(a1, a2, v7);
    v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
    v10 = a3[8];
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = *(_QWORD *)&a2[v10 + 8];
    *(_QWORD *)v11 = *(_QWORD *)&a2[v10];
    *((_QWORD *)v11 + 1) = v13;
    v14 = *(_QWORD *)&a2[v10 + 24];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14 == 1)
    {
      v15 = *((_OWORD *)v12 + 2);
      *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
      *((_OWORD *)v11 + 2) = v15;
    }
    else
    {
      *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
      *((_QWORD *)v11 + 3) = v14;
      v17 = *((_QWORD *)v12 + 5);
      *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
      *((_QWORD *)v11 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
    v18 = a3[9];
    v19 = &a1[v18];
    v20 = &a2[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v20, 1, v7))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v23(v19, v20, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for MediaGroundTruth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v9(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v6 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = a1 + *(int *)(a2 + 36);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v4);
  return result;
}

char *initializeWithCopy for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v21)(void *, const void *, uint64_t);

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v21 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v21(a1, a2, v6);
  v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  v9 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)&a2[v9 + 8];
  *(_QWORD *)v10 = *(_QWORD *)&a2[v9];
  *((_QWORD *)v10 + 1) = v12;
  v13 = *(_QWORD *)&a2[v9 + 24];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    v14 = *((_OWORD *)v11 + 2);
    *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
    *((_OWORD *)v10 + 2) = v14;
  }
  else
  {
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v15 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 5) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_WORD *)v10 + 24) = *((_WORD *)v11 + 24);
  v16 = a3[9];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v21(v17, v18, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  void (*v24)(void *, const void *, uint64_t);

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v24 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v24(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  swift_retain();
  swift_release();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = a3[8];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)v9 = *(_QWORD *)&a2[v8];
  *((_QWORD *)v9 + 1) = *(_QWORD *)&a2[v8 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = v9 + 16;
  v12 = v10 + 16;
  v13 = *((_QWORD *)v10 + 3);
  if (*((_QWORD *)v9 + 3) == 1)
  {
    if (v13 == 1)
    {
      v14 = *((_OWORD *)v10 + 2);
      *v11 = *v12;
      *((_OWORD *)v9 + 2) = v14;
    }
    else
    {
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v13 == 1)
  {
    sub_213DBEEB0((uint64_t)(v9 + 16));
    v15 = *((_OWORD *)v10 + 2);
    *v11 = *v12;
    *((_OWORD *)v9 + 2) = v15;
  }
  else
  {
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v9[48] = v10[48];
  v9[49] = v10[49];
  v16 = a3[9];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v20 = v19(&a1[v16], 1, v6);
  v21 = v19(v18, 1, v6);
  if (!v20)
  {
    if (!v21)
    {
      v24(v17, v18, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
    goto LABEL_13;
  }
  if (v21)
  {
LABEL_13:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v18, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  return a1;
}

uint64_t sub_213DBEEB0(uint64_t a1)
{
  destroy for Storefront();
  return a1;
}

char *initializeWithTake for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_OWORD *)v11 + 2) = *((_OWORD *)v12 + 2);
  *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
  v14 = a3[9];
  v15 = &a1[v14];
  v16 = &a2[v14];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v8(v15, v16, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for MediaGroundTruth(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t (*v20)(const void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_release();
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = *(_QWORD *)&a2[v10 + 8];
  *(_QWORD *)v11 = *(_QWORD *)&a2[v10];
  *((_QWORD *)v11 + 1) = v13;
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v11 + 3) == 1)
    goto LABEL_4;
  v14 = *((_QWORD *)v12 + 3);
  if (v14 == 1)
  {
    sub_213DBEEB0((uint64_t)(v11 + 16));
LABEL_4:
    v15 = *((_OWORD *)v12 + 2);
    *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
    *((_OWORD *)v11 + 2) = v15;
    goto LABEL_6;
  }
  *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
  *((_QWORD *)v11 + 3) = v14;
  swift_bridgeObjectRelease();
  v16 = *((_QWORD *)v12 + 5);
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *((_QWORD *)v11 + 5) = v16;
  swift_bridgeObjectRelease();
LABEL_6:
  *((_WORD *)v11 + 24) = *((_WORD *)v12 + 24);
  v17 = a3[9];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v21 = v20(&a1[v17], 1, v6);
  v22 = v20(v19, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      v8(v18, v19, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
    goto LABEL_11;
  }
  if (v22)
  {
LABEL_11:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DBF1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    v10 = a1 + *(int *)(a3 + 36);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DBF278(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_213DBF320()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DBF3D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_213DBF3D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F04830)
  {
    sub_213EF1D64();
    v0 = sub_213EF2D6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F04830);
  }
}

uint64_t getEnumTagSinglePayload for MediaGroundTruth.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_213DBF504 + 4 * byte_213EF46D4[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_213DBF538 + 4 * byte_213EF46CF[v4]))();
}

uint64_t sub_213DBF538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DBF548);
  return result;
}

uint64_t sub_213DBF554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DBF55CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_213DBF560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF574(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_213DBF57C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruth.CodingKeys()
{
  return &type metadata for MediaGroundTruth.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ContactSuggestionTag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s28SiriPrivateLearningInference32MediaCorrectionGroundTruthSourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213DBF670 + 4 * byte_213EF46DE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213DBF6A4 + 4 * byte_213EF46D9[v4]))();
}

uint64_t sub_213DBF6A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF6AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DBF6B4);
  return result;
}

uint64_t sub_213DBF6C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DBF6C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213DBF6CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF6D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.CodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys;
}

ValueMetadata *type metadata accessor for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys()
{
  return &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys;
}

uint64_t getEnumTagSinglePayload for MediaReferenceSourceApp(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruthSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213DBF81C + 4 * byte_213EF46E8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213DBF850 + 4 * byte_213EF46E3[v4]))();
}

uint64_t sub_213DBF850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DBF860);
  return result;
}

uint64_t sub_213DBF86C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DBF874);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213DBF878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DBF880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_213DBF88C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource.CodingKeys()
{
  return &type metadata for MediaGroundTruthSource.CodingKeys;
}

uint64_t sub_213DBF8B4()
{
  return 0;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource.CorrectionCodingKeys()
{
  return &type metadata for MediaGroundTruthSource.CorrectionCodingKeys;
}

uint64_t getEnumTagSinglePayload for SuggestionDonationError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s28SiriPrivateLearningInference22MediaGroundTruthSourceO20CorrectionCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213DBF95C + 4 * byte_213EF46ED[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213DBF97C + 4 * byte_213EF46F2[v4]))();
}

_BYTE *sub_213DBF95C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213DBF97C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213DBF984(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213DBF98C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213DBF994(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213DBF99C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSource.FeedbackCodingKeys()
{
  return &type metadata for MediaGroundTruthSource.FeedbackCodingKeys;
}

unint64_t sub_213DBF9BC()
{
  unint64_t result;

  result = qword_254D3AA38;
  if (!qword_254D3AA38)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4C24, &type metadata for MediaGroundTruthSource.FeedbackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA38);
  }
  return result;
}

unint64_t sub_213DBFA04()
{
  unint64_t result;

  result = qword_254D3AA40;
  if (!qword_254D3AA40)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4CDC, &type metadata for MediaGroundTruthSource.CorrectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA40);
  }
  return result;
}

unint64_t sub_213DBFA4C()
{
  unint64_t result;

  result = qword_254D3AA48;
  if (!qword_254D3AA48)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4D94, &type metadata for MediaGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA48);
  }
  return result;
}

unint64_t sub_213DBFA94()
{
  unint64_t result;

  result = qword_254D3AA50;
  if (!qword_254D3AA50)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4FDC, &type metadata for MediaCorrectionGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA50);
  }
  return result;
}

unint64_t sub_213DBFADC()
{
  unint64_t result;

  result = qword_254D3AA58;
  if (!qword_254D3AA58)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF5094, &type metadata for MediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA58);
  }
  return result;
}

unint64_t sub_213DBFB24()
{
  unint64_t result;

  result = qword_254D3AA60;
  if (!qword_254D3AA60)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF5004, &type metadata for MediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA60);
  }
  return result;
}

unint64_t sub_213DBFB6C()
{
  unint64_t result;

  result = qword_254D3AA68;
  if (!qword_254D3AA68)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF502C, &type metadata for MediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA68);
  }
  return result;
}

unint64_t sub_213DBFBB4()
{
  unint64_t result;

  result = qword_254D3AA70;
  if (!qword_254D3AA70)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4EFC, &type metadata for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA70);
  }
  return result;
}

unint64_t sub_213DBFBFC()
{
  unint64_t result;

  result = qword_254D3AA78;
  if (!qword_254D3AA78)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4F24, &type metadata for MediaCorrectionGroundTruthSource.RestatementAndSuccessfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA78);
  }
  return result;
}

unint64_t sub_213DBFC44()
{
  unint64_t result;

  result = qword_254D3AA80;
  if (!qword_254D3AA80)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4EAC, &type metadata for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA80);
  }
  return result;
}

unint64_t sub_213DBFC8C()
{
  unint64_t result;

  result = qword_254D3AA88;
  if (!qword_254D3AA88)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4ED4, &type metadata for MediaCorrectionGroundTruthSource.RestatementToTopNAndSuccessfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA88);
  }
  return result;
}

unint64_t sub_213DBFCD4()
{
  unint64_t result;

  result = qword_254D3AA90;
  if (!qword_254D3AA90)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4E5C, &type metadata for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA90);
  }
  return result;
}

unint64_t sub_213DBFD1C()
{
  unint64_t result;

  result = qword_254D3AA98;
  if (!qword_254D3AA98)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4E84, &type metadata for MediaCorrectionGroundTruthSource.ReformulationAddedSlotSpecializationAndSuccesfulPlayMediaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AA98);
  }
  return result;
}

unint64_t sub_213DBFD64()
{
  unint64_t result;

  result = qword_254D3AAA0;
  if (!qword_254D3AAA0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4E0C, &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAA0);
  }
  return result;
}

unint64_t sub_213DBFDAC()
{
  unint64_t result;

  result = qword_254D3AAA8;
  if (!qword_254D3AAA8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4E34, &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupUnrelatedEntityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAA8);
  }
  return result;
}

unint64_t sub_213DBFDF4()
{
  unint64_t result;

  result = qword_254D3AAB0;
  if (!qword_254D3AAB0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4DBC, &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAB0);
  }
  return result;
}

unint64_t sub_213DBFE3C()
{
  unint64_t result;

  result = qword_254D3AAB8;
  if (!qword_254D3AAB8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4DE4, &type metadata for MediaCorrectionGroundTruthSource.InAppFollowupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAB8);
  }
  return result;
}

unint64_t sub_213DBFE84()
{
  unint64_t result;

  result = qword_254D3AAC0;
  if (!qword_254D3AAC0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4F4C, &type metadata for MediaCorrectionGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAC0);
  }
  return result;
}

unint64_t sub_213DBFECC()
{
  unint64_t result;

  result = qword_254D3AAC8;
  if (!qword_254D3AAC8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4F74, &type metadata for MediaCorrectionGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAC8);
  }
  return result;
}

unint64_t sub_213DBFF14()
{
  unint64_t result;

  result = qword_254D3AAD0;
  if (!qword_254D3AAD0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4C4C, &type metadata for MediaGroundTruthSource.CorrectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAD0);
  }
  return result;
}

unint64_t sub_213DBFF5C()
{
  unint64_t result;

  result = qword_254D3AAD8;
  if (!qword_254D3AAD8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4C74, &type metadata for MediaGroundTruthSource.CorrectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAD8);
  }
  return result;
}

unint64_t sub_213DBFFA4()
{
  unint64_t result;

  result = qword_254D3AAE0;
  if (!qword_254D3AAE0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4B94, &type metadata for MediaGroundTruthSource.FeedbackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAE0);
  }
  return result;
}

unint64_t sub_213DBFFEC()
{
  unint64_t result;

  result = qword_254D3AAE8;
  if (!qword_254D3AAE8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4BBC, &type metadata for MediaGroundTruthSource.FeedbackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAE8);
  }
  return result;
}

unint64_t sub_213DC0034()
{
  unint64_t result;

  result = qword_254D3AAF0;
  if (!qword_254D3AAF0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4D04, &type metadata for MediaGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAF0);
  }
  return result;
}

unint64_t sub_213DC007C()
{
  unint64_t result;

  result = qword_254D3AAF8;
  if (!qword_254D3AAF8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF4D2C, &type metadata for MediaGroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AAF8);
  }
  return result;
}

uint64_t sub_213DC00C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974636572726F63 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213DC01BC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000021 && a2 == 0x8000000213F05C40 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000027 && a2 == 0x8000000213F05C70 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000039 && a2 == 0x8000000213F05CA0 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000213F05CE0 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F467070416E69 && a2 == 0xED00007075776F6CLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_213DC03DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7469746E456F7375 && a2 == 0xE900000000000079 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000213F05D00 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000213F05D20 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000213F05D40)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_213DC0630(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_213DC0674(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1[10];
  v2 = a1[11];
  sub_213DC071C(*a1, a1[1]);
  sub_213DC071C(v4, v2);
  return a1;
}

uint64_t sub_213DC071C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_213DC077C(uint64_t *a1)
{
  sub_213DC071C(*a1, a1[1]);
  return a1;
}

uint64_t InAppFollowupClassification.init(priorEvent:followupEventId:followupEventType:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;

  sub_213DAFDFC((uint64_t)a1, (uint64_t)v26);
  *((_QWORD *)&v27 + 1) = a2;
  *(_QWORD *)&v28 = a3;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = *(_QWORD *)(v13 + 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  *((_QWORD *)&v29 + 1) = v15(v12, v14);
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v16 + 8) + 24))(v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v18;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_213DB553C(0, v18[2] + 1, 1, v18);
  v21 = v19[2];
  v20 = v19[3];
  if (v21 >= v20 >> 1)
    v19 = sub_213DB553C((_QWORD *)(v20 > 1), v21 + 1, 1, v19);
  v19[2] = v21 + 1;
  v22 = &v19[2 * v21];
  v22[4] = a2;
  v22[5] = a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v19;
  *((_QWORD *)&v28 + 1) = a4;
  *(_QWORD *)&v29 = a5;
  *(_QWORD *)(a6 + 80) = v19;
  v23 = v26[1];
  *(_OWORD *)a6 = v26[0];
  *(_OWORD *)(a6 + 16) = v23;
  v24 = v28;
  *(_OWORD *)(a6 + 32) = v27;
  *(_OWORD *)(a6 + 48) = v24;
  *(_OWORD *)(a6 + 64) = v29;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t InAppFollowupClassification.priorEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_213DAFDFC(v1, a1);
}

uint64_t InAppFollowupClassification.followupEventId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InAppFollowupClassification.followupEventType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t InAppFollowupClassification.referencedTurns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t InAppFollowupClassification.referencedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213DC09CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213DC09D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for Storefront(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for InAppFollowupClassification(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InAppFollowupClassification(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v8 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for InAppFollowupClassification(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for InAppFollowupClassification(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InAppFollowupClassification(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InAppFollowupClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for InAppFollowupClassification()
{
  return &type metadata for InAppFollowupClassification;
}

BOOL static ContactSuggestionDomain.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ContactSuggestionDomain.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t sub_213DC0E4C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736567617373656DLL;
  if (*v0 != 1)
    v1 = 0x73746361746E6F63;
  if (*v0)
    return v1;
  else
    return 0x6C6143656E6F6870;
}

uint64_t sub_213DC0EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DC1CB4(a1, a2);
  *a3 = result;
  return result;
}

void sub_213DC0ED0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_213DC0EDC()
{
  sub_213DC1280();
  return sub_213EF3354();
}

uint64_t sub_213DC0F04()
{
  sub_213DC1280();
  return sub_213EF3360();
}

uint64_t sub_213DC0F2C()
{
  sub_213DC12C4();
  return sub_213EF3354();
}

uint64_t sub_213DC0F54()
{
  sub_213DC12C4();
  return sub_213EF3360();
}

uint64_t sub_213DC0F7C()
{
  sub_213DC1308();
  return sub_213EF3354();
}

uint64_t sub_213DC0FA4()
{
  sub_213DC1308();
  return sub_213EF3360();
}

uint64_t sub_213DC0FCC()
{
  sub_213DC134C();
  return sub_213EF3354();
}

uint64_t sub_213DC0FF4()
{
  sub_213DC134C();
  return sub_213EF3360();
}

uint64_t ContactSuggestionDomain.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB08);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB10);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB18);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB20);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DC1280();
  sub_213EF3348();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_213DC1308();
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_213DC12C4();
      v16 = v21;
      sub_213EF3168();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_213DC134C();
    sub_213EF3168();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_213DC1280()
{
  unint64_t result;

  result = qword_254D3AB28;
  if (!qword_254D3AB28)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF586C, &type metadata for ContactSuggestionDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB28);
  }
  return result;
}

unint64_t sub_213DC12C4()
{
  unint64_t result;

  result = qword_254D3AB30;
  if (!qword_254D3AB30)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF581C, &type metadata for ContactSuggestionDomain.ContactsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB30);
  }
  return result;
}

unint64_t sub_213DC1308()
{
  unint64_t result;

  result = qword_254D3AB38;
  if (!qword_254D3AB38)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF57CC, &type metadata for ContactSuggestionDomain.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB38);
  }
  return result;
}

unint64_t sub_213DC134C()
{
  unint64_t result;

  result = qword_254D3AB40;
  if (!qword_254D3AB40)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF577C, &type metadata for ContactSuggestionDomain.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB40);
  }
  return result;
}

uint64_t ContactSuggestionDomain.hashValue.getter()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t ContactSuggestionDomain.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB48);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB50);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB58);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB60);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DC1280();
  v13 = v41;
  sub_213EF333C();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_213EF3150();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_213EF2F34();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v25 = &type metadata for ContactSuggestionDomain;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_213DC1308();
      v20 = v9;
      sub_213EF30E4();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_213DC12C4();
      v28 = v15;
      sub_213EF30E4();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_213DC134C();
    sub_213EF30E4();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1Tm(v26);
}

uint64_t sub_213DC1818@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return ContactSuggestionDomain.init(from:)(a1, a2);
}

uint64_t sub_213DC182C(_QWORD *a1)
{
  return ContactSuggestionDomain.encode(to:)(a1);
}

unint64_t sub_213DC1844()
{
  unint64_t result;

  result = qword_254D3AB68;
  if (!qword_254D3AB68)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionDomain, &type metadata for ContactSuggestionDomain);
    atomic_store(result, (unint64_t *)&qword_254D3AB68);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain()
{
  return &type metadata for ContactSuggestionDomain;
}

uint64_t getEnumTagSinglePayload for ScoreChange.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s28SiriPrivateLearningInference23ContactSuggestionDomainOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213DC197C + 4 * byte_213EF5465[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213DC19B0 + 4 * asc_213EF5460[v4]))();
}

uint64_t sub_213DC19B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DC19B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DC19C0);
  return result;
}

uint64_t sub_213DC19CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DC19D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213DC19D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DC19E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.CodingKeys()
{
  return &type metadata for ContactSuggestionDomain.CodingKeys;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.PhoneCallCodingKeys()
{
  return &type metadata for ContactSuggestionDomain.PhoneCallCodingKeys;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.MessagesCodingKeys()
{
  return &type metadata for ContactSuggestionDomain.MessagesCodingKeys;
}

ValueMetadata *type metadata accessor for ContactSuggestionDomain.ContactsCodingKeys()
{
  return &type metadata for ContactSuggestionDomain.ContactsCodingKeys;
}

unint64_t sub_213DC1A30()
{
  unint64_t result;

  result = qword_254D3AB70;
  if (!qword_254D3AB70)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF5754, &type metadata for ContactSuggestionDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB70);
  }
  return result;
}

unint64_t sub_213DC1A78()
{
  unint64_t result;

  result = qword_254D3AB78;
  if (!qword_254D3AB78)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF5674, &type metadata for ContactSuggestionDomain.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB78);
  }
  return result;
}

unint64_t sub_213DC1AC0()
{
  unint64_t result;

  result = qword_254D3AB80;
  if (!qword_254D3AB80)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF569C, &type metadata for ContactSuggestionDomain.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB80);
  }
  return result;
}

unint64_t sub_213DC1B08()
{
  unint64_t result;

  result = qword_254D3AB88;
  if (!qword_254D3AB88)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF5624, &type metadata for ContactSuggestionDomain.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB88);
  }
  return result;
}

unint64_t sub_213DC1B50()
{
  unint64_t result;

  result = qword_254D3AB90;
  if (!qword_254D3AB90)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF564C, &type metadata for ContactSuggestionDomain.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB90);
  }
  return result;
}

unint64_t sub_213DC1B98()
{
  unint64_t result;

  result = qword_254D3AB98;
  if (!qword_254D3AB98)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF55D4, &type metadata for ContactSuggestionDomain.ContactsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3AB98);
  }
  return result;
}

unint64_t sub_213DC1BE0()
{
  unint64_t result;

  result = qword_254D3ABA0;
  if (!qword_254D3ABA0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF55FC, &type metadata for ContactSuggestionDomain.ContactsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3ABA0);
  }
  return result;
}

unint64_t sub_213DC1C28()
{
  unint64_t result;

  result = qword_254D3ABA8;
  if (!qword_254D3ABA8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF56C4, &type metadata for ContactSuggestionDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3ABA8);
  }
  return result;
}

unint64_t sub_213DC1C70()
{
  unint64_t result;

  result = qword_254D3ABB0;
  if (!qword_254D3ABB0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF56EC, &type metadata for ContactSuggestionDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3ABB0);
  }
  return result;
}

uint64_t sub_213DC1CB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6143656E6F6870 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xE800000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746361746E6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t dispatch thunk of UserCanFollowup.endTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HasContactQuery.usoQuery.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HasRelatedCall.callEventId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_213DC1E48(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v18 = MEMORY[0x24BEE4AF8];
    result = sub_213DCD02C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v18;
    v15 = v1 & 0xC000000000000001;
    v16 = v2;
    v17 = v1;
    while (v2 != v5)
    {
      if (v15)
      {
        v6 = (_QWORD *)MEMORY[0x2199C49B0](v5, v1);
      }
      else
      {
        v6 = *(_QWORD **)(v1 + 8 * v5 + 32);
        swift_retain();
      }
      v7 = v6[2];
      v8 = v6[3];
      v10 = v6[4];
      v9 = v6[5];
      v11 = v6[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v13 = *(_QWORD *)(v18 + 16);
      v12 = *(_QWORD *)(v18 + 24);
      if (v13 >= v12 >> 1)
        sub_213DCD02C(v12 > 1, v13 + 1, 1);
      ++v5;
      *(_QWORD *)(v18 + 16) = v13 + 1;
      v14 = (_QWORD *)(v18 + 40 * v13);
      v14[4] = v7;
      v14[5] = v8;
      v14[6] = v10;
      v14[7] = v9;
      v14[8] = v11;
      v2 = v16;
      v1 = v17;
      if (v16 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_213EF306C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_213DC1FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessor();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_213DCA93C(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADB8);
  swift_allocObject();
  result = sub_213EF26A0();
  *(_QWORD *)(v2 + 24) = result;
  *a1 = v2;
  return result;
}

uint64_t sub_213DC2050()
{
  uint64_t result;

  type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADB0);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3ABB8 = 91;
  unk_254D3ABC0 = 0xE100000000000000;
  return result;
}

uint64_t sub_213DC20D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[5];
  uint64_t v76;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v63 - v8;
  v10 = sub_213EF1CF8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v70 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  v16 = a1[4];
  v72 = *a1;
  v73 = v16;
  v17 = swift_bridgeObjectRetain();
  sub_213DAF008(v17, (uint64_t)v7);
  swift_bridgeObjectRelease();
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v19 = v18(v7, 1, v10);
  v71 = v2;
  if (v19 == 1)
  {
    v20 = v10;
    v21 = swift_bridgeObjectRetain();
    sub_213DAF1EC(v21);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
    {
      v24 = 1;
    }
    else
    {
      sub_213EF1CC8();
      v24 = 0;
    }
    v25 = v72;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v24, 1, v20);
    v10 = v20;
    sub_213DC3ED8((uint64_t)v7);
    v2 = v71;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v9, v7, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    v25 = v72;
  }
  if (v18(v9, 1, v10) != 1)
  {
    v66 = v15;
    v67 = v13;
    v68 = v14;
    v64 = v11;
    v26 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v27 = v70;
    v65 = v10;
    v26(v70, v9, v10);
    v28 = (uint64_t *)(v2 + 16);
    v29 = swift_beginAccess();
    v30 = *(_QWORD *)(v2 + 16);
    MEMORY[0x24BDAC7A8](v29);
    *(&v63 - 2) = (uint64_t)v27;
    swift_bridgeObjectRetain();
    v31 = sub_213DC3C9C((uint64_t)sub_213DC3F18, (uint64_t)(&v63 - 4), v30);
    v69 = 0;
    swift_bridgeObjectRelease();
    v32 = 0;
    v33 = *(_QWORD *)(v31 + 64);
    v74 = v31 + 64;
    v34 = 1 << *(_BYTE *)(v31 + 32);
    v35 = -1;
    if (v34 < 64)
      v35 = ~(-1 << v34);
    v36 = v35 & v33;
    v37 = (unint64_t)(v34 + 63) >> 6;
    while (1)
    {
      if (v36)
      {
        v38 = __clz(__rbit64(v36));
        v36 &= v36 - 1;
        v39 = v38 | (v32 << 6);
      }
      else
      {
        v40 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        if (v40 >= v37)
          goto LABEL_33;
        v41 = *(_QWORD *)(v74 + 8 * v40);
        ++v32;
        if (!v41)
        {
          v32 = v40 + 1;
          if (v40 + 1 >= v37)
            goto LABEL_33;
          v41 = *(_QWORD *)(v74 + 8 * v32);
          if (!v41)
          {
            v32 = v40 + 2;
            if (v40 + 2 >= v37)
              goto LABEL_33;
            v41 = *(_QWORD *)(v74 + 8 * v32);
            if (!v41)
            {
              v42 = v40 + 3;
              if (v42 >= v37)
              {
LABEL_33:
                swift_release();
                (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v65);
                v25 = v72;
                v14 = v68;
                v15 = v66;
                v13 = v67;
                goto LABEL_34;
              }
              v41 = *(_QWORD *)(v74 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  v32 = v42 + 1;
                  if (__OFADD__(v42, 1))
                    break;
                  if (v32 >= v37)
                    goto LABEL_33;
                  v41 = *(_QWORD *)(v74 + 8 * v32);
                  ++v42;
                  if (v41)
                    goto LABEL_29;
                }
LABEL_46:
                __break(1u);
LABEL_47:
                swift_once();
LABEL_40:
                v56 = sub_213EF2724();
                __swift_project_value_buffer(v56, (uint64_t)qword_253F08A00);
                v57 = sub_213EF270C();
                v58 = sub_213EF2CA0();
                if (os_log_type_enabled(v57, v58))
                {
                  v59 = (uint8_t *)swift_slowAlloc();
                  v60 = swift_slowAlloc();
                  v75[0] = v60;
                  *(_DWORD *)v59 = 136315138;
                  if (qword_254D39F70 != -1)
                    swift_once();
                  v61 = qword_254D3ABB8;
                  v62 = unk_254D3ABC0;
                  swift_bridgeObjectRetain();
                  v76 = sub_213DB0570(v61, v62, v75);
                  sub_213EF2D9C();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_213DAB000, v57, v58, "%s Unexpected event discarded", v59, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x2199C53C4](v60, -1, -1);
                  MEMORY[0x2199C53C4](v59, -1, -1);

                }
                else
                {

                }
                goto LABEL_38;
              }
              v32 = v42;
            }
          }
        }
LABEL_29:
        v36 = (v41 - 1) & v41;
        v39 = __clz(__rbit64(v41)) + (v32 << 6);
      }
      v43 = (uint64_t *)(*(_QWORD *)(v31 + 48) + 16 * v39);
      v44 = *v43;
      v45 = v43[1];
      v46 = *(_QWORD *)(*(_QWORD *)(v31 + 56) + 8 * v39);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v47 = sub_213DFA220(v44, v45);
      LOBYTE(v44) = v48;
      swift_bridgeObjectRelease();
      if ((v44 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v50 = *v28;
        v76 = *v28;
        *v28 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_213E002D8();
          v50 = v76;
        }
        swift_bridgeObjectRelease();
        sub_213DFF778(v47, v50);
        *v28 = v50;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
      *(_QWORD *)(v46 + 56) = 0;
      *(_QWORD *)(v46 + 64) = 0;
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  sub_213DC3ED8((uint64_t)v9);
LABEL_34:
  v51 = v73;
  if (v15 != 0xD000000000000011 || v73 != 0x8000000213F048A0)
  {
    v52 = sub_213EF3234();
    v51 = v73;
    if ((v52 & 1) == 0)
    {
      if (qword_253F04A88 != -1)
        goto LABEL_47;
      goto LABEL_40;
    }
  }
  v75[0] = v25;
  v75[1] = v13;
  v75[2] = v14;
  v75[3] = v15;
  v75[4] = v51;
  sub_213DC278C(v75);
LABEL_38:
  v53 = sub_213EF2658();
  v54 = sub_213DC1E48(v53);
  swift_bridgeObjectRelease();
  return v54;
}

void sub_213DC278C(uint64_t *a1)
{
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t *v28;
  Class isa;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  __int128 v71;
  os_log_t oslog;
  NSObject *osloga;
  os_log_t oslogb;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = swift_bridgeObjectRetain();
  sub_213DAEB60(v7, &v76);
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)&v76 + 1);
  if (!*((_QWORD *)&v76 + 1))
    goto LABEL_5;
  *((_QWORD *)&v71 + 1) = v2;
  oslog = v1;
  v70 = v5;
  *(_QWORD *)&v71 = v3;
  v9 = v76;
  swift_bridgeObjectRetain();
  sub_213DB8408(v9, v8);
  v10 = swift_bridgeObjectRetain();
  v11 = sub_213DAF1F8(v10);
  swift_bridgeObjectRelease();
  if (v11 != 2)
  {
    v12 = swift_bridgeObjectRetain();
    sub_213DAF204(v12, &v76);
    swift_bridgeObjectRelease();
    v13 = v76;
    if (v76 != 2)
    {
      v69 = v11 & 1;
      if (qword_253F04A88 != -1)
        swift_once();
      v20 = sub_213EF2724();
      __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
      v21 = sub_213EF270C();
      v22 = sub_213EF2C94();
      if (os_log_type_enabled(v21, v22))
      {
        v67 = v6;
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        *(_QWORD *)&v76 = v24;
        *(_DWORD *)v23 = 136315394;
        if (qword_254D39F70 != -1)
          swift_once();
        v25 = qword_254D3ABB8;
        v26 = unk_254D3ABC0;
        swift_bridgeObjectRetain();
        HIDWORD(v75) = (unint64_t)sub_213DB0570(v25, v26, (uint64_t *)&v76) >> 32;
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 1024;
        LODWORD(v75) = v69;
        sub_213EF2D9C();
        _os_log_impl(&dword_213DAB000, v21, v22, "%s Play media event isSiriDonated =  %{BOOL}d / event origin = eventOrigin.rawValue", (uint8_t *)v23, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v24, -1, -1);
        MEMORY[0x2199C53C4](v23, -1, -1);

        v6 = v67;
        v27 = oslog;
      }
      else
      {

        v27 = oslog;
      }
      v28 = (uint64_t *)&v27[2];
      swift_beginAccess();
      isa = v27[2].isa;
      if (*((_QWORD *)isa + 2))
      {
        swift_bridgeObjectRetain();
        v30 = sub_213DFA220(v9, v8);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD *)(*((_QWORD *)isa + 7) + 8 * v30);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v32 + 56) = 0;
          *(_QWORD *)(v32 + 64) = 0;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_213DC3E0C(v9, v8);
          swift_endAccess();
          swift_release();
          if (!v69)
          {
            swift_bridgeObjectRelease();
            if ((v13 & 1) != 0)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v33 = sub_213EF3234();
              swift_bridgeObjectRelease();
              if ((v33 & 1) == 0)
              {
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                v34 = sub_213EF270C();
                v35 = sub_213EF2C94();
                if (os_log_type_enabled(v34, v35))
                {
                  v36 = v6;
                  v37 = swift_slowAlloc();
                  v38 = swift_slowAlloc();
                  v75 = v38;
                  *(_DWORD *)v37 = 136315394;
                  if (qword_254D39F70 != -1)
                    swift_once();
                  v39 = qword_254D3ABB8;
                  v40 = unk_254D3ABC0;
                  swift_bridgeObjectRetain();
                  *(_QWORD *)&v76 = sub_213DB0570(v39, v40, &v75);
                  sub_213EF2D9C();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v37 + 12) = 2080;
                  v76 = v71;
                  v77 = v4;
                  v78 = v70;
                  v79 = v36;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v41 = sub_213EF288C();
                  *(_QWORD *)&v76 = sub_213DB0570(v41, v42, &v75);
                  sub_213EF2D9C();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_213DAB000, v34, v35, "%s follow on INPlayMediaIntent suppressed %s", (uint8_t *)v37, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x2199C53C4](v38, -1, -1);
                  MEMORY[0x2199C53C4](v37, -1, -1);

                }
                else
                {

                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                }
                goto LABEL_54;
              }
            }
            v58 = sub_213EF270C();
            v59 = sub_213EF2C94();
            if (os_log_type_enabled(v58, v59))
            {
              v60 = v6;
              v61 = (uint8_t *)swift_slowAlloc();
              v62 = swift_slowAlloc();
              *(_QWORD *)&v76 = v62;
              *(_DWORD *)v61 = 136315138;
              if (qword_254D39F70 != -1)
                swift_once();
              v63 = qword_254D3ABB8;
              v64 = unk_254D3ABC0;
              swift_bridgeObjectRetain();
              v75 = sub_213DB0570(v63, v64, (uint64_t *)&v76);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, v58, v59, "%s This is not a siri related event - call queueUntrackedEvent", v61, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v62, -1, -1);
              MEMORY[0x2199C53C4](v61, -1, -1);

              v6 = v60;
            }
            else
            {

            }
            type metadata accessor for QueuedEvent();
            v65 = swift_allocObject();
            *(_OWORD *)(v65 + 16) = v71;
            *(_QWORD *)(v65 + 32) = v4;
            *(_QWORD *)(v65 + 40) = v70;
            *(_QWORD *)(v65 + 48) = v6;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v65 + 56) = 0;
            *(_QWORD *)(v65 + 64) = 0;
            swift_bridgeObjectRelease();
            *(_QWORD *)&v76 = v65;
            sub_213EF2670();
            swift_release();
            goto LABEL_54;
          }
          v76 = v71;
          v77 = v4;
          v78 = v70;
          v79 = v6;
          sub_213DC3584(v9, v8, (uint64_t *)&v76);
          swift_release();
          goto LABEL_40;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      if (!v69)
      {
        if ((v13 & 1) != 0)
        {
          v43 = sub_213EF3234();
          swift_bridgeObjectRelease();
          if ((v43 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            v51 = sub_213EF270C();
            v52 = sub_213EF2C94();
            if (os_log_type_enabled(v51, v52))
            {
              v53 = v6;
              v54 = (uint8_t *)swift_slowAlloc();
              v55 = swift_slowAlloc();
              *(_QWORD *)&v76 = v55;
              *(_DWORD *)v54 = 136315138;
              if (qword_254D39F70 != -1)
                swift_once();
              v56 = qword_254D3ABB8;
              v57 = unk_254D3ABC0;
              swift_bridgeObjectRetain();
              v75 = sub_213DB0570(v56, v57, (uint64_t *)&v76);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, v51, v52, "%s This is not a siri related event - call queueUntrackedEvent", v54, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v55, -1, -1);
              MEMORY[0x2199C53C4](v54, -1, -1);

              v6 = v53;
            }
            else
            {

            }
            type metadata accessor for QueuedEvent();
            v66 = swift_allocObject();
            *(_OWORD *)(v66 + 16) = v71;
            *(_QWORD *)(v66 + 32) = v4;
            *(_QWORD *)(v66 + 40) = v70;
            *(_QWORD *)(v66 + 48) = v6;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(v66 + 56) = 0;
            *(_QWORD *)(v66 + 64) = 0;
            swift_bridgeObjectRelease();
            *(_QWORD *)&v76 = v66;
            sub_213EF2670();
            goto LABEL_54;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v68 = v6;
        v44 = sub_213EF270C();
        v45 = sub_213EF2C94();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = (uint8_t *)swift_slowAlloc();
          oslogb = (os_log_t)swift_slowAlloc();
          *(_QWORD *)&v76 = oslogb;
          *(_DWORD *)v46 = 136315138;
          if (qword_254D39F70 != -1)
            swift_once();
          v47 = qword_254D3ABB8;
          v48 = unk_254D3ABC0;
          swift_bridgeObjectRetain();
          v75 = sub_213DB0570(v47, v48, (uint64_t *)&v76);
          sub_213EF2D9C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213DAB000, v44, v45, "%s This is a siri-triggered app donation - track this media id", v46, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](oslogb, -1, -1);
          MEMORY[0x2199C53C4](v46, -1, -1);
        }

        type metadata accessor for QueuedEvent();
        v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = v71;
        *(_QWORD *)(v49 + 32) = v4;
        *(_QWORD *)(v49 + 40) = v70;
        *(_QWORD *)(v49 + 48) = v68;
        *(_QWORD *)(v49 + 56) = v9;
        *(_QWORD *)(v49 + 64) = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v75 = *v28;
        *v28 = 0x8000000000000000;
        sub_213E24128(v49, v9, v8, isUniquelyReferenced_nonNull_native);
        *v28 = v75;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
LABEL_54:
        swift_release();
        return;
      }
      v76 = v71;
      v77 = v4;
      v78 = v70;
      v79 = v6;
      sub_213DC3584(v9, v8, (uint64_t *)&v76);
LABEL_40:
      swift_bridgeObjectRelease();
      return;
    }
  }
  swift_bridgeObjectRelease();
LABEL_5:
  if (qword_253F04A88 != -1)
    swift_once();
  v14 = sub_213EF2724();
  __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
  osloga = sub_213EF270C();
  v15 = sub_213EF2CA0();
  if (os_log_type_enabled(osloga, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)&v76 = v17;
    *(_DWORD *)v16 = 136315138;
    if (qword_254D39F70 != -1)
      swift_once();
    v18 = qword_254D3ABB8;
    v19 = unk_254D3ABC0;
    swift_bridgeObjectRetain();
    v75 = sub_213DB0570(v18, v19, (uint64_t *)&v76);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, osloga, v15, "%s INPlayMediaIntent features missing", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v17, -1, -1);
    MEMORY[0x2199C53C4](v16, -1, -1);

  }
  else
  {

  }
}

BOOL sub_213DC3570(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 64) == 0;
}

uint64_t sub_213DC3584(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v4 = v3;
  v8 = *a3;
  v7 = a3[1];
  v9 = a3[2];
  v10 = a3[3];
  v11 = a3[4];
  type metadata accessor for QueuedEvent();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v8;
  v12[3] = v7;
  v12[4] = v9;
  v12[5] = v10;
  v12[6] = v11;
  v12[7] = a1;
  v12[8] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v4 + 16) = 0x8000000000000000;
  sub_213E24128((uint64_t)v12, a1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + 16) = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_213EF2670();
  return swift_release();
}

uint64_t sub_213DC36BC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v1 = sub_213EF267C();
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v2 = sub_213EF306C();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v17 = MEMORY[0x24BEE4AF8];
  result = sub_213DCD02C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v17;
    v15 = v1 & 0xC000000000000001;
    v16 = v1;
    do
    {
      if (v15)
      {
        v6 = (_QWORD *)MEMORY[0x2199C49B0](v4, v1);
      }
      else
      {
        v6 = *(_QWORD **)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      v8 = v6[2];
      v7 = v6[3];
      v10 = v6[4];
      v9 = v6[5];
      v11 = v6[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v13 = *(_QWORD *)(v17 + 16);
      v12 = *(_QWORD *)(v17 + 24);
      if (v13 >= v12 >> 1)
        sub_213DCD02C(v12 > 1, v13 + 1, 1);
      ++v4;
      *(_QWORD *)(v17 + 16) = v13 + 1;
      v14 = (_QWORD *)(v17 + 40 * v13);
      v14[4] = v8;
      v14[5] = v7;
      v14[6] = v10;
      v14[7] = v9;
      v14[8] = v11;
      v1 = v16;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DC3870()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessor()
{
  return objc_opt_self();
}

uint64_t sub_213DC38BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_213DC20D4(a1);
  return sub_213DB26D0(*(uint64_t (**)(uint64_t))(v1 + 8), v1, v2);
}

uint64_t sub_213DC38F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_213DC36BC();
  return sub_213DB26D0(*(uint64_t (**)(uint64_t))(v0 + 8), v0, v1);
}

uint64_t sub_213DC3934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];
  char *v26;
  char *v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v25 - v7;
  v9 = sub_213EF1CF8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v27 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v26 = (char *)v25 - v13;
  v14 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_213DAF008(v14, (uint64_t)v6);
  swift_bridgeObjectRelease();
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v15(v6, 1, v9) == 1)
  {
    v25[1] = a1;
    v16 = swift_bridgeObjectRetain();
    sub_213DAF1EC(v16);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      v19 = 1;
    }
    else
    {
      sub_213EF1CC8();
      v19 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    sub_213DC3ED8((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v8, v6, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15(v8, 1, v9) == 1)
  {
    sub_213DC3ED8((uint64_t)v8);
    v20 = 0;
  }
  else
  {
    v21 = v26;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v26, v8, v9);
    v22 = v27;
    sub_213EF1CB0();
    v20 = sub_213EF1C98();
    v23 = *(void (**)(char *, uint64_t))(v10 + 8);
    v23(v22, v9);
    v23(v21, v9);
  }
  return v20 & 1;
}

uint64_t sub_213DC3BA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QueuedEvent()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for INPlayMediaIntentEventAsyncStreamProcessorFactory()
{
  return &type metadata for INPlayMediaIntentEventAsyncStreamProcessorFactory;
}

uint64_t sub_213DC3C24()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_213DC3C34(uint64_t a1)
{
  unint64_t result;

  result = sub_213DC3C58();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_213DC3C58()
{
  unint64_t result;

  result = qword_254D3AD68;
  if (!qword_254D3AD68)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF59C4, &type metadata for INPlayMediaIntentEventAsyncStreamProcessorFactory);
    atomic_store(result, (unint64_t *)&qword_254D3AD68);
  }
  return result;
}

uint64_t sub_213DC3C9C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_QWORD *, uint64_t *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(_QWORD *, uint64_t *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_213DC4240((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_213DC4240((uint64_t)v11, v8, a3, v6);
    MEMORY[0x2199C53C4](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_213DC3E0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_213DFA220(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_213E002D8();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_213DFF778(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_213DC3ED8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213DC3F18()
{
  uint64_t v0;

  return sub_213DC3934(*(_QWORD *)(v0 + 16)) & 1;
}

uint64_t sub_213DC3F48(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_213DFA220(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_213E00CA0();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_213DFF778(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_213DC4014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_213DFA284(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_213E01454();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_213EF1D64();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
    v14 = *(_QWORD *)(v13 - 8);
    sub_213DC4990(v12 + *(_QWORD *)(v14 + 72) * v6, a2);
    sub_213DFFDDC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

double sub_213DC4148@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_213DFA734(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_213E01FEC();
      v11 = v13;
    }
    sub_213DC497C(*(_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v8), *(_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v8 + 8));
    sub_213DB0BF0((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_213E000B0(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_213DC4240(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t *))
{
  uint64_t v4;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  _QWORD v25[2];
  uint64_t v26;

  v20 = (unint64_t *)result;
  v6 = 0;
  v21 = 0;
  v22 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v23 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
LABEL_17:
    v15 = *(_QWORD *)(a3 + 56);
    v16 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v17 = v16[1];
    v25[0] = *v16;
    v25[1] = v17;
    v26 = *(_QWORD *)(v15 + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = a4(v25, &v26);
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v4)
      return result;
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)v20 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = __OFADD__(v21++, 1);
      if (v12)
        goto LABEL_30;
    }
  }
  v12 = __OFADD__(v6++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v6 >= v23)
    return sub_213DC444C(v20, a2, v21, a3);
  v13 = *(_QWORD *)(v22 + 8 * v6);
  if (v13)
  {
LABEL_16:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_17;
  }
  v14 = v6 + 1;
  if (v6 + 1 >= v23)
    return sub_213DC444C(v20, a2, v21, a3);
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 2;
  if (v6 + 2 >= v23)
    return sub_213DC444C(v20, a2, v21, a3);
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 3;
  if (v6 + 3 >= v23)
    return sub_213DC444C(v20, a2, v21, a3);
  v13 = *(_QWORD *)(v22 + 8 * v14);
  if (v13)
  {
LABEL_15:
    v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v23)
      return sub_213DC444C(v20, a2, v21, a3);
    v13 = *(_QWORD *)(v22 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_213DC444C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t *v32;
  uint64_t v33;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADA8);
  result = sub_213EF309C();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v33)
            return v9;
          v16 = v32[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v33)
              return v9;
            v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v33)
                  return v9;
                v16 = v32[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_213EF28BC();
    result = sub_213EF3330();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v25);
    *v30 = v20;
    v30[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_213DC46E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t *v32;
  uint64_t v33;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADC0);
  result = sub_213EF309C();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v33)
            return v9;
          v16 = v32[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v33)
              return v9;
            v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v33)
                  return v9;
                v16 = v32[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    result = sub_213EF3330();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v25);
    *v30 = v20;
    v30[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_213DC497C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_213DC4990(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_213DC49D4()
{
  return &off_254D3AD80;
}

uint64_t SuggestionStoreUpdate.source.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SuggestionStoreUpdate.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SuggestionStoreUpdate() + 20);
  v4 = sub_213EF1CF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for SuggestionStoreUpdate()
{
  uint64_t result;

  result = qword_254D3AE20;
  if (!qword_254D3AE20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SuggestionStoreUpdate.init(source:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for SuggestionStoreUpdate() + 20);
  v6 = sub_213EF1CF8();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for SuggestionStoreUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_213EF1CF8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for SuggestionStoreUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_213EF1CF8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for SuggestionStoreUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_213EF1CF8();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for SuggestionStoreUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_213EF1CF8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for SuggestionStoreUpdate(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_213EF1CF8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for SuggestionStoreUpdate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_213EF1CF8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SuggestionStoreUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DC4D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SuggestionStoreUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DC4E0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_213DC4E80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1CF8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_213DC4EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t sub_213DC4EFC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_213DC4F04(uint64_t a1, uint64_t a2)
{
  return sub_213DC4F34(a1, a2, (uint64_t)sub_213DC7B9C, (uint64_t (*)(_QWORD))sub_213E43A74);
}

uint64_t sub_213DC4F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _BYTE v55[16];
  uint64_t v56;

  v40 = a3;
  v39 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for EntityPromptClassification();
  v37 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v41 = (uint64_t)&v35 - v14;
  v56 = v4;
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v36 = a4;
    v16 = a2 + 32;
    v38 = a2;
    swift_bridgeObjectRetain();
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v18 = a2 + 32;
    v19 = v15;
    do
    {
      sub_213DAFDFC(v18, (uint64_t)v55);
      sub_213DAFDFC((uint64_t)v55, (uint64_t)&v43);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v54 = 0;
        v52 = 0u;
        v53 = 0u;
        v50 = 0u;
        v51 = 0u;
        v49 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v55);
      if (*((_QWORD *)&v50 + 1))
      {
        v45 = v51;
        v46 = v52;
        v47 = v53;
        v48 = v54;
        v43 = v49;
        v44 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_213DB565C(0, v17[2] + 1, 1, v17);
        v21 = v17[2];
        v20 = v17[3];
        if (v21 >= v20 >> 1)
          v17 = sub_213DB565C((_QWORD *)(v20 > 1), v21 + 1, 1, v17);
        v17[2] = v21 + 1;
        v22 = &v17[11 * v21];
        v23 = v44;
        *((_OWORD *)v22 + 2) = v43;
        *((_OWORD *)v22 + 3) = v23;
        v24 = v45;
        v25 = v46;
        v26 = v47;
        v22[14] = v48;
        *((_OWORD *)v22 + 5) = v25;
        *((_OWORD *)v22 + 6) = v26;
        *((_OWORD *)v22 + 4) = v24;
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v49, &qword_254D3AE58);
      }
      v18 += 40;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v27 = MEMORY[0x24BEE4AF8];
    v28 = v37;
    do
    {
      sub_213DAFDFC(v16, (uint64_t)&v49);
      sub_213DAFDFC((uint64_t)&v49, (uint64_t)&v43);
      v29 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v9, v29 ^ 1u, 1, v10);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v49);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v9, 1, v10) == 1)
      {
        sub_213DAFEC4((uint64_t)v9, &qword_253F06C68);
      }
      else
      {
        v30 = v41;
        sub_213DC79FC((uint64_t)v9, v41);
        sub_213DC79FC(v30, v42);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_213DB5648(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v32 = *(_QWORD *)(v27 + 16);
        v31 = *(_QWORD *)(v27 + 24);
        if (v32 >= v31 >> 1)
          v27 = sub_213DB5648(v31 > 1, v32 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v32 + 1;
        sub_213DC79FC(v42, v27+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v32);
      }
      v16 += 40;
      --v15;
    }
    while (v15);
    v13 = swift_bridgeObjectRelease();
    a4 = v36;
  }
  else
  {
    v27 = MEMORY[0x24BEE4AF8];
  }
  MEMORY[0x24BDAC7A8](v13);
  *(&v35 - 4) = (uint64_t)&v56;
  *(&v35 - 3) = v39;
  *(&v35 - 2) = v27;
  v33 = a4(v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_213DC53B4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100[3];
  uint64_t v101;
  uint64_t v102;

  v5 = v4;
  v89 = a3;
  v83 = a4;
  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EntityPromptClassification();
  v87 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v88 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v90 = (uint64_t *)((char *)&v68 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v68 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v68 - v20;
  if ((*(_QWORD *)(a2 + 56) != 0xD000000000000011 || *(_QWORD *)(a2 + 64) != 0x8000000213F04860)
    && (sub_213EF3234() & 1) == 0)
  {
    v31 = type metadata accessor for PhoneCallGroundTruth();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v83, 1, 1, v31);
  }
  v86 = v19;
  sub_213DAFDFC(a2, (uint64_t)&v97);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A450);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AE60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v96 = 0;
    v94 = 0u;
    v95 = 0u;
    sub_213DAFEC4((uint64_t)&v94, &qword_254D3AE68);
LABEL_13:
    if (qword_253F04A88 != -1)
LABEL_73:
      swift_once();
    v33 = sub_213EF2724();
    __swift_project_value_buffer(v33, (uint64_t)qword_253F08A00);
    sub_213DB1804(a2, (uint64_t)&v97);
    swift_retain_n();
    v34 = sub_213EF270C();
    v35 = sub_213EF2CA0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v100[0] = v37;
      *(_DWORD *)v36 = 136315394;
      *(_QWORD *)&v94 = 91;
      *((_QWORD *)&v94 + 1) = 0xE100000000000000;
      *(_QWORD *)&v91 = *(_QWORD *)v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A488);
      sub_213EF288C();
      sub_213EF2904();
      swift_bridgeObjectRelease();
      sub_213EF2904();
      *(_QWORD *)&v94 = sub_213DB0570(v94, *((unint64_t *)&v94 + 1), v100);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      sub_213DB1804((uint64_t)&v97, (uint64_t)&v94);
      v38 = sub_213EF288C();
      *(_QWORD *)&v94 = sub_213DB0570(v38, v39, v100);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      sub_213DB1840((uint64_t)&v97);
      _os_log_impl(&dword_213DAB000, v34, v35, "%s Classification that supports followup is missing a USO person associated with the query=%s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v37, -1, -1);
      MEMORY[0x2199C53C4](v36, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_213DB1840((uint64_t)&v97);
    }

    v40 = type metadata accessor for PhoneCallGroundTruth();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v83, 1, 1, v40);
  }
  v77 = v11;
  v78 = v9;
  v79 = v8;
  v81 = v4;
  v82 = a2;
  sub_213DB0BF0(&v94, (uint64_t)v100);
  v22 = v101;
  v23 = v102;
  __swift_project_boxed_opaque_existential_1(v100, v101);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v100);
    v5 = v81;
    a2 = v82;
    goto LABEL_13;
  }
  v25 = v24;
  v5 = v81;
  v26 = v82;
  sub_213DC6BE0(*(_QWORD *)(v82 + 40), *(_QWORD *)(v82 + 48), a1, &v97);
  if (!*((_QWORD *)&v97 + 1))
  {
    if (qword_253F04A88 != -1)
      goto LABEL_75;
    goto LABEL_19;
  }
  v73 = *((_QWORD *)&v97 + 1);
  v72 = v98;
  v70 = v97;
  v71 = *((_QWORD *)&v98 + 1);
  sub_213DAFDFC(v26, (uint64_t)&v94);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AE70);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v27 = *((_QWORD *)&v98 + 1);
    v28 = v99;
    __swift_project_boxed_opaque_existential_1(&v97, *((uint64_t *)&v98 + 1));
    v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
    if (v30)
    {
      sub_213DC6BE0(v29, v30, a1, &v91);
      swift_bridgeObjectRelease();
      v69 = *((_QWORD *)&v91 + 1);
      v75 = v92;
      v76 = v91;
      v74 = *((_QWORD *)&v92 + 1);
    }
    else
    {
      v74 = 0;
      v75 = 0;
      v69 = 0;
      v76 = 0;
      v91 = 0u;
      v92 = 0u;
    }
    v49 = (uint64_t)v86;
    v50 = v89;
    v48 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v97);
  }
  else
  {
    v99 = 0;
    v97 = 0u;
    v98 = 0u;
    v48 = sub_213DAFEC4((uint64_t)&v97, &qword_254D3AE78);
    v75 = 0;
    v76 = 0;
    v69 = 0;
    v74 = 0;
    v49 = (uint64_t)v86;
    v50 = v89;
  }
  MEMORY[0x24BDAC7A8](v48);
  *(&v68 - 2) = v82;
  swift_bridgeObjectRetain();
  v52 = v50;
  a2 = 0;
  v53 = sub_213DD1D48((uint64_t (*)(char *))sub_213DC7BF0, (uint64_t)(&v68 - 4), v52);
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v97 = MEMORY[0x24BEE4AF8];
  v85 = *(_QWORD *)(v53 + 16);
  if (!v85)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    v64 = v77;
    sub_213EF1D58();
    v65 = v69;
    v66 = v70;
    *(_QWORD *)&v97 = v76;
    *((_QWORD *)&v97 + 1) = v69;
    v67 = v73;
    *(_QWORD *)&v98 = v75;
    *((_QWORD *)&v98 + 1) = v74;
    *(_QWORD *)&v94 = v70;
    *((_QWORD *)&v94 + 1) = v73;
    *(_QWORD *)&v95 = v72;
    *((_QWORD *)&v95 + 1) = v71;
    sub_213DB1024(v64, v82, v25, (uint64_t *)&v97, (uint64_t *)&v94, v5, v83);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v64, v79);
    sub_213DB1874(v66, v67);
    sub_213DB1874(v76, v65);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v100);
  }
  v68 = v25;
  v25 = 0;
  v54 = MEMORY[0x24BEE4AF8];
  v84 = v53;
  while (1)
  {
    if (v25 >= *(_QWORD *)(v53 + 16))
    {
      __break(1u);
      goto LABEL_73;
    }
    v55 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    a2 = *(_QWORD *)(v87 + 72);
    sub_213DC7A5C(v53 + v55 + a2 * v25, (uint64_t)v21);
    v56 = *((_QWORD *)v21 + 2) == 0x73746361746E6F63 && *((_QWORD *)v21 + 3) == 0xE800000000000000;
    v89 = a2;
    if (v56)
    {
      sub_213DC7A5C((uint64_t)v21, v49);
LABEL_41:
      sub_213DC7AA0(v49);
      sub_213DC7A5C((uint64_t)v21, (uint64_t)v90);
      goto LABEL_42;
    }
    v5 = sub_213EF3234();
    sub_213DC7A5C((uint64_t)v21, v49);
    if ((v5 & 1) != 0 || *(_QWORD *)(v49 + 16) == 0x6E65697069636572 && *(_QWORD *)(v49 + 24) == 0xE900000000000074)
      goto LABEL_41;
    v5 = sub_213EF3234();
    sub_213DC7AA0(v49);
    sub_213DC7A5C((uint64_t)v21, (uint64_t)v90);
    if ((v5 & 1) == 0)
      goto LABEL_28;
LABEL_42:
    if (qword_254D3A080 != -1)
      swift_once();
    v57 = qword_254D54F28;
    a2 = *(_QWORD *)(qword_254D54F28 + 16);
    if (a2)
    {
      v5 = *v90;
      v58 = v90[1];
      v59 = *(_QWORD *)(qword_254D54F28 + 32) == *v90 && *(_QWORD *)(qword_254D54F28 + 40) == v58;
      if (v59 || (sub_213EF3234() & 1) != 0)
      {
LABEL_50:
        sub_213DC7AA0((uint64_t)v90);
        sub_213DC79FC((uint64_t)v21, v88);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD000(0, *(_QWORD *)(v54 + 16) + 1, 1);
        v54 = v97;
        a2 = *(_QWORD *)(v97 + 16);
        v60 = *(_QWORD *)(v97 + 24);
        v5 = a2 + 1;
        v49 = (uint64_t)v86;
        if (a2 >= v60 >> 1)
        {
          sub_213DCD000(v60 > 1, a2 + 1, 1);
          v54 = v97;
        }
        *(_QWORD *)(v54 + 16) = v5;
        sub_213DC79FC(v88, v54 + v55 + a2 * v89);
        goto LABEL_29;
      }
      if (a2 != 1)
      {
        if (*(_QWORD *)(v57 + 48) == v5 && *(_QWORD *)(v57 + 56) == v58 || (sub_213EF3234() & 1) != 0)
          goto LABEL_50;
        if (a2 != 2)
          break;
      }
    }
LABEL_28:
    sub_213DC7AA0((uint64_t)v90);
    sub_213DC7AA0((uint64_t)v21);
    v49 = (uint64_t)v86;
LABEL_29:
    ++v25;
    v53 = v84;
    if (v25 == v85)
    {
      v5 = v97;
      v25 = v68;
      goto LABEL_70;
    }
  }
  v61 = (_QWORD *)(v57 + 72);
  v62 = 2;
  while (!__OFADD__(v62, 1))
  {
    if (*(v61 - 1) == v5 && *v61 == v58)
      goto LABEL_50;
    v80 = v62 + 1;
    if ((sub_213EF3234() & 1) != 0)
      goto LABEL_50;
    v61 += 2;
    ++v62;
    if (v80 == a2)
      goto LABEL_28;
  }
  __break(1u);
LABEL_75:
  swift_once();
LABEL_19:
  v41 = sub_213EF2724();
  __swift_project_value_buffer(v41, (uint64_t)qword_253F08A00);
  sub_213DB1804(v82, (uint64_t)&v97);
  swift_retain_n();
  v42 = sub_213EF270C();
  v43 = sub_213EF2CA0();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    v45 = swift_slowAlloc();
    *(_QWORD *)&v91 = v45;
    *(_DWORD *)v44 = 136315394;
    *(_QWORD *)&v94 = 91;
    *((_QWORD *)&v94 + 1) = 0xE100000000000000;
    v93 = *(_QWORD *)v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A488);
    sub_213EF288C();
    v68 = v25;
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    *(_QWORD *)&v94 = sub_213DB0570(v94, *((unint64_t *)&v94 + 1), (uint64_t *)&v91);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    sub_213DB1804((uint64_t)&v97, (uint64_t)&v94);
    v46 = sub_213EF288C();
    *(_QWORD *)&v94 = sub_213DB0570(v46, v47, (uint64_t *)&v91);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DB1840((uint64_t)&v97);
    _os_log_impl(&dword_213DAB000, v42, v43, "%s Failed to extract the contact reference from followup event in classification=%s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v45, -1, -1);
    MEMORY[0x2199C53C4](v44, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_213DB1840((uint64_t)&v97);
  }

  swift_release();
  v51 = type metadata accessor for PhoneCallGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v83, 1, 1, v51);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v100);
}

uint64_t sub_213DC5FB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v62;
  uint64_t v63;
  BOOL v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105[3];
  uint64_t v106;
  uint64_t v107;

  v5 = v4;
  v91 = a1;
  v89 = a4;
  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EntityPromptClassification();
  v93 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v94 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v95 = (uint64_t *)((char *)&v73 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v73 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v73 - v20;
  if ((*(_QWORD *)(a2 + 56) != 0xD000000000000013 || *(_QWORD *)(a2 + 64) != 0x8000000213F04880)
    && (sub_213EF3234() & 1) == 0)
  {
    v35 = type metadata accessor for MessagesGroundTruth();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v89, 1, 1, v35);
  }
  v92 = v19;
  sub_213DAFDFC(a2, (uint64_t)&v102);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A450);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AE60);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v84 = v11;
    v85 = v9;
    v86 = v8;
    v87 = (uint64_t *)v4;
    v88 = a2;
    sub_213DB0BF0(&v99, (uint64_t)v105);
    v22 = v106;
    v23 = v107;
    __swift_project_boxed_opaque_existential_1(v105, v106);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    if (v24)
    {
      v25 = v24;
      v27 = v87;
      v26 = v88;
      sub_213DC7134(*(_QWORD *)(v88 + 40), *(_QWORD *)(v88 + 48), v91, &v102);
      if (*((_QWORD *)&v102 + 1))
      {
        v80 = *((_QWORD *)&v102 + 1);
        v28 = v102;
        v29 = v103;
        sub_213DAFDFC(v26, (uint64_t)&v99);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AE70);
        v30 = swift_dynamicCast();
        v78 = *((_QWORD *)&v29 + 1);
        v79 = v29;
        v77 = v28;
        if ((v30 & 1) != 0)
        {
          v31 = *((_QWORD *)&v103 + 1);
          v32 = v104;
          __swift_project_boxed_opaque_existential_1(&v102, *((uint64_t *)&v103 + 1));
          v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
          if (v34)
          {
            sub_213DC7134(v33, v34, v91, &v96);
            swift_bridgeObjectRelease();
            v76 = *((_QWORD *)&v96 + 1);
            v82 = v97;
            v83 = v96;
            v81 = *((_QWORD *)&v97 + 1);
          }
          else
          {
            v81 = 0;
            v82 = 0;
            v76 = 0;
            v83 = 0;
            v96 = 0u;
            v97 = 0u;
          }
          v53 = (uint64_t)v92;
          v52 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v102);
        }
        else
        {
          v104 = 0;
          v102 = 0u;
          v103 = 0u;
          v52 = sub_213DAFEC4((uint64_t)&v102, &qword_254D3AE78);
          v82 = 0;
          v83 = 0;
          v76 = 0;
          v81 = 0;
          v53 = (uint64_t)v92;
        }
        MEMORY[0x24BDAC7A8](v52);
        *(&v73 - 2) = v88;
        swift_bridgeObjectRetain();
        a2 = 0;
        v55 = sub_213DD1D48((uint64_t (*)(char *))sub_213DC7A40, (uint64_t)(&v73 - 4), a3);
        v56 = v55;
        v5 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)&v102 = MEMORY[0x24BEE4AF8];
        v91 = *(_QWORD *)(v55 + 16);
        if (v91)
        {
          v75 = v25;
          v57 = 0;
          v58 = MEMORY[0x24BEE4AF8];
          v90 = v55;
          while (1)
          {
            if (v57 >= *(_QWORD *)(v56 + 16))
            {
              __break(1u);
              goto LABEL_78;
            }
            v59 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
            v60 = *(_QWORD *)(v93 + 72);
            sub_213DC7A5C(v56 + v59 + v60 * v57, (uint64_t)v21);
            if (*((_QWORD *)v21 + 2) == 0x73746361746E6F63 && *((_QWORD *)v21 + 3) == 0xE800000000000000)
            {
              sub_213DC7A5C((uint64_t)v21, v53);
            }
            else
            {
              v5 = sub_213EF3234();
              sub_213DC7A5C((uint64_t)v21, v53);
              if ((v5 & 1) == 0
                && (*(_QWORD *)(v53 + 16) != 0x6E65697069636572 || *(_QWORD *)(v53 + 24) != 0xE900000000000074))
              {
                v5 = sub_213EF3234();
                sub_213DC7AA0(v53);
                sub_213DC7A5C((uint64_t)v21, (uint64_t)v95);
                if ((v5 & 1) == 0)
                  goto LABEL_29;
                goto LABEL_43;
              }
            }
            sub_213DC7AA0(v53);
            sub_213DC7A5C((uint64_t)v21, (uint64_t)v95);
LABEL_43:
            if (qword_254D3A080 != -1)
              swift_once();
            v62 = (_QWORD *)qword_254D54F28;
            a2 = *(_QWORD *)(qword_254D54F28 + 16);
            if (a2)
            {
              v5 = *v95;
              v63 = v95[1];
              v64 = *(_QWORD *)(qword_254D54F28 + 32) == *v95 && *(_QWORD *)(qword_254D54F28 + 40) == v63;
              if (v64 || (sub_213EF3234() & 1) != 0)
              {
LABEL_51:
                sub_213DC7AA0((uint64_t)v95);
                sub_213DC79FC((uint64_t)v21, v94);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  sub_213DCD000(0, *(_QWORD *)(v58 + 16) + 1, 1);
                v58 = v102;
                a2 = *(_QWORD *)(v102 + 16);
                v65 = *(_QWORD *)(v102 + 24);
                v5 = a2 + 1;
                v53 = (uint64_t)v92;
                v56 = v90;
                if (a2 >= v65 >> 1)
                {
                  sub_213DCD000(v65 > 1, a2 + 1, 1);
                  v58 = v102;
                }
                *(_QWORD *)(v58 + 16) = v5;
                sub_213DC79FC(v94, v58 + v59 + a2 * v60);
                goto LABEL_30;
              }
              if (a2 != 1)
              {
                if (v62[6] == v5 && v62[7] == v63 || (sub_213EF3234() & 1) != 0)
                  goto LABEL_51;
                if (a2 != 2)
                {
                  if (v62[8] == v5 && v62[9] == v63)
                    goto LABEL_51;
                  result = sub_213EF3234();
                  if ((result & 1) != 0)
                    goto LABEL_51;
                  if (a2 != 3)
                  {
                    v66 = v62 + 11;
                    v67 = 3;
                    while (!__OFADD__(v67, 1))
                    {
                      v73 = v67 + 1;
                      v74 = v67;
                      if (*(v66 - 1) == v5 && *v66 == v63)
                        goto LABEL_51;
                      result = sub_213EF3234();
                      if ((result & 1) != 0)
                        goto LABEL_51;
                      v66 += 2;
                      v67 = v74 + 1;
                      if (v73 == a2)
                        goto LABEL_29;
                    }
                    __break(1u);
                    return result;
                  }
                }
              }
            }
LABEL_29:
            sub_213DC7AA0((uint64_t)v95);
            sub_213DC7AA0((uint64_t)v21);
            v53 = (uint64_t)v92;
            v56 = v90;
LABEL_30:
            if (++v57 == v91)
            {
              v5 = v102;
              v25 = v75;
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        v69 = (uint64_t)v84;
        sub_213EF1D58();
        v70 = v76;
        v71 = v77;
        *(_QWORD *)&v102 = v83;
        *((_QWORD *)&v102 + 1) = v76;
        v72 = v80;
        *(_QWORD *)&v103 = v82;
        *((_QWORD *)&v103 + 1) = v81;
        *(_QWORD *)&v99 = v77;
        *((_QWORD *)&v99 + 1) = v80;
        *(_QWORD *)&v100 = v79;
        *((_QWORD *)&v100 + 1) = v78;
        sub_213E468A0(v69, v88, v25, (uint64_t *)&v102, (uint64_t *)&v99, v5, v89);
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v69, v86);
        sub_213DB1874(v71, v72);
        sub_213DB1874(v83, v70);
      }
      else
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v45 = sub_213EF2724();
        __swift_project_value_buffer(v45, (uint64_t)qword_253F08A00);
        sub_213DB1804(v88, (uint64_t)&v102);
        swift_retain_n();
        v46 = sub_213EF270C();
        v47 = sub_213EF2CA0();
        if (os_log_type_enabled(v46, v47))
        {
          v48 = swift_slowAlloc();
          v49 = swift_slowAlloc();
          *(_QWORD *)&v96 = v49;
          *(_DWORD *)v48 = 136315394;
          *(_QWORD *)&v99 = 91;
          *((_QWORD *)&v99 + 1) = 0xE100000000000000;
          v98 = *v27;
          __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A480);
          sub_213EF288C();
          v75 = v25;
          sub_213EF2904();
          swift_bridgeObjectRelease();
          sub_213EF2904();
          *(_QWORD *)&v99 = sub_213DB0570(v99, *((unint64_t *)&v99 + 1), (uint64_t *)&v96);
          sub_213EF2D9C();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v48 + 12) = 2080;
          sub_213DB1804((uint64_t)&v102, (uint64_t)&v99);
          v50 = sub_213EF288C();
          *(_QWORD *)&v99 = sub_213DB0570(v50, v51, (uint64_t *)&v96);
          sub_213EF2D9C();
          swift_bridgeObjectRelease();
          sub_213DB1840((uint64_t)&v102);
          _os_log_impl(&dword_213DAB000, v46, v47, "%s Failed to extract the contact reference from followup event in classification=%s", (uint8_t *)v48, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v49, -1, -1);
          MEMORY[0x2199C53C4](v48, -1, -1);

          swift_release();
        }
        else
        {
          swift_release_n();
          swift_release();
          sub_213DB1840((uint64_t)&v102);

        }
        v54 = type metadata accessor for MessagesGroundTruth();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v89, 1, 1, v54);
      }
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v105);
    v5 = (uint64_t)v87;
    a2 = v88;
  }
  else
  {
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    sub_213DAFEC4((uint64_t)&v99, &qword_254D3AE68);
  }
  if (qword_253F04A88 != -1)
LABEL_78:
    swift_once();
  v37 = sub_213EF2724();
  __swift_project_value_buffer(v37, (uint64_t)qword_253F08A00);
  sub_213DB1804(a2, (uint64_t)&v102);
  swift_retain_n();
  v38 = sub_213EF270C();
  v39 = sub_213EF2CA0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v105[0] = v41;
    *(_DWORD *)v40 = 136315394;
    *(_QWORD *)&v99 = 91;
    *((_QWORD *)&v99 + 1) = 0xE100000000000000;
    *(_QWORD *)&v96 = *(_QWORD *)v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A480);
    sub_213EF288C();
    sub_213EF2904();
    swift_bridgeObjectRelease();
    sub_213EF2904();
    *(_QWORD *)&v99 = sub_213DB0570(v99, *((unint64_t *)&v99 + 1), v105);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_213DB1804((uint64_t)&v102, (uint64_t)&v99);
    v42 = sub_213EF288C();
    *(_QWORD *)&v99 = sub_213DB0570(v42, v43, v105);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DB1840((uint64_t)&v102);
    _os_log_impl(&dword_213DAB000, v38, v39, "%s Classification that supports followup is missing a USO person associated with the query=%s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v41, -1, -1);
    MEMORY[0x2199C53C4](v40, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_213DB1840((uint64_t)&v102);
  }

  v44 = type metadata accessor for MessagesGroundTruth();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v89, 1, 1, v44);
}

double sub_213DC6BE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  Array<A>.findEvent(eventId:)(a1, a2, a3, &v27);
  v5 = v28;
  if (v28)
  {
    v6 = v27;
    v8 = v29;
    v7 = v30;
    v9 = v31;
    v10 = swift_bridgeObjectRetain();
    v11 = sub_213DAE9B4(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      v12 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRelease();
      if (v12 == 1)
      {
        v27 = v6;
        v28 = v5;
        v29 = v8;
        v30 = v7;
        v31 = v9;
        extractContactReference(event:)((uint64_t)a4);
        sub_213DC7B60(v6, v5);
        return result;
      }
      sub_213DC7B60(v6, v5);
      if (qword_253F04A88 != -1)
        swift_once();
      v20 = sub_213EF2724();
      __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
      swift_retain_n();
      v21 = sub_213EF270C();
      v22 = sub_213EF2CA0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        *(_DWORD *)v23 = 136315394;
        v26 = v24;
        v27 = 91;
        v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A488);
        sub_213EF288C();
        sub_213EF2904();
        swift_bridgeObjectRelease();
        sub_213EF2904();
        v27 = sub_213DB0570(v27, v28, &v26);
        sub_213EF2D9C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2048;
        v27 = v12;
        sub_213EF2D9C();
        _os_log_impl(&dword_213DAB000, v21, v22, "%s Event does not have a single contact (has %ld)", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v24, -1, -1);
        MEMORY[0x2199C53C4](v23, -1, -1);

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v14 = sub_213EF2724();
      __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
      swift_retain_n();
      sub_213DC7B24(v6, v5);
      v15 = sub_213EF270C();
      v16 = sub_213EF2CA0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_DWORD *)v17 = 136315394;
        v26 = v25;
        v27 = 91;
        v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A488);
        sub_213EF288C();
        sub_213EF2904();
        swift_bridgeObjectRelease();
        sub_213EF2904();
        v27 = sub_213DB0570(v27, v28, &v26);
        sub_213EF2D9C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        v27 = v6;
        v28 = v5;
        v29 = v8;
        v30 = v7;
        v31 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = sub_213EF288C();
        v27 = sub_213DB0570(v18, v19, &v26);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        sub_213DC7B60(v6, v5);
        sub_213DC7B60(v6, v5);
        _os_log_impl(&dword_213DAB000, v15, v16, "%s Failed to get contact count from event=%s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v25, -1, -1);
        MEMORY[0x2199C53C4](v17, -1, -1);

      }
      else
      {
        swift_release_n();
        sub_213DC7B60(v6, v5);
        sub_213DC7B60(v6, v5);

      }
    }
  }
  result = 0.0;
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

double sub_213DC7134@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  Array<A>.findEvent(eventId:)(a1, a2, a3, &v27);
  v5 = v28;
  if (v28)
  {
    v6 = v27;
    v8 = v29;
    v7 = v30;
    v9 = v31;
    v10 = swift_bridgeObjectRetain();
    v11 = sub_213DAE9B4(v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
      v12 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRelease();
      if (v12 == 1)
      {
        v27 = v6;
        v28 = v5;
        v29 = v8;
        v30 = v7;
        v31 = v9;
        extractContactReference(event:)((uint64_t)a4);
        sub_213DC7B60(v6, v5);
        return result;
      }
      sub_213DC7B60(v6, v5);
      if (qword_253F04A88 != -1)
        swift_once();
      v20 = sub_213EF2724();
      __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
      swift_retain_n();
      v21 = sub_213EF270C();
      v22 = sub_213EF2CA0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        *(_DWORD *)v23 = 136315394;
        v26 = v24;
        v27 = 91;
        v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A480);
        sub_213EF288C();
        sub_213EF2904();
        swift_bridgeObjectRelease();
        sub_213EF2904();
        v27 = sub_213DB0570(v27, v28, &v26);
        sub_213EF2D9C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2048;
        v27 = v12;
        sub_213EF2D9C();
        _os_log_impl(&dword_213DAB000, v21, v22, "%s Event does not have a single contact (has %ld)", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v24, -1, -1);
        MEMORY[0x2199C53C4](v23, -1, -1);

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v14 = sub_213EF2724();
      __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
      swift_retain_n();
      sub_213DC7B24(v6, v5);
      v15 = sub_213EF270C();
      v16 = sub_213EF2CA0();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_DWORD *)v17 = 136315394;
        v26 = v25;
        v27 = 91;
        v28 = 0xE100000000000000;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A480);
        sub_213EF288C();
        sub_213EF2904();
        swift_bridgeObjectRelease();
        sub_213EF2904();
        v27 = sub_213DB0570(v27, v28, &v26);
        sub_213EF2D9C();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        v27 = v6;
        v28 = v5;
        v29 = v8;
        v30 = v7;
        v31 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = sub_213EF288C();
        v27 = sub_213DB0570(v18, v19, &v26);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        sub_213DC7B60(v6, v5);
        sub_213DC7B60(v6, v5);
        _os_log_impl(&dword_213DAB000, v15, v16, "%s Failed to get contact count from event=%s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v25, -1, -1);
        MEMORY[0x2199C53C4](v17, -1, -1);

      }
      else
      {
        swift_release_n();
        sub_213DC7B60(v6, v5);
        sub_213DC7B60(v6, v5);

      }
    }
  }
  result = 0.0;
  *a4 = 0u;
  a4[1] = 0u;
  return result;
}

uint64_t sub_213DC7688(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t *v24;
  char v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = sub_213EF1D64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v32 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v17 = type metadata accessor for EntityPromptClassification();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v18(v16, a1 + *(int *)(v17 + 44), v3);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v20 = 1;
  v19(v16, 0, 1, v3);
  v21 = *(_QWORD *)(v33 + 72);
  if (*(_QWORD *)(v21 + 16))
  {
    v18(v14, v21 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v3);
    v20 = 0;
  }
  v19(v14, v20, 1, v3);
  v22 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_213DBDD88((uint64_t)v16, (uint64_t)v8);
  sub_213DBDD88((uint64_t)v14, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v23((uint64_t)v8, 1, v3) == 1)
  {
    v24 = &qword_253F04828;
    sub_213DAFEC4((uint64_t)v14, &qword_253F04828);
    sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
    if (v23(v22, 1, v3) == 1)
    {
      v25 = -1;
    }
    else
    {
      v24 = &qword_253F04838;
      v25 = 0;
    }
  }
  else
  {
    v26 = v32;
    sub_213DBDD88((uint64_t)v8, v32);
    if (v23(v22, 1, v3) == 1)
    {
      sub_213DAFEC4((uint64_t)v14, &qword_253F04828);
      sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v3);
      v25 = 0;
      v24 = &qword_253F04838;
    }
    else
    {
      v27 = v31;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v31, v22, v3);
      sub_213DC7ADC();
      v25 = sub_213EF2838();
      v28 = *(void (**)(char *, uint64_t))(v4 + 8);
      v28(v27, v3);
      v24 = &qword_253F04828;
      sub_213DAFEC4((uint64_t)v14, &qword_253F04828);
      sub_213DAFEC4((uint64_t)v16, &qword_253F04828);
      v28((char *)v26, v3);
    }
  }
  sub_213DAFEC4((uint64_t)v8, v24);
  return v25 & 1;
}

uint64_t sub_213DC79B0(uint64_t a1, uint64_t a2)
{
  return sub_213DC4F34(a1, a2, (uint64_t)sub_213DC79E0, (uint64_t (*)(_QWORD))sub_213E44710);
}

uint64_t sub_213DC79E0(uint64_t a1)
{
  return sub_213DC7BB8(a1, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_213DC5FB0);
}

uint64_t sub_213DC79FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DC7A40(uint64_t a1)
{
  uint64_t v1;

  return sub_213DC7688(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_213DC7A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DC7AA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213DC7ADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F06930;
  if (!qword_253F06930)
  {
    v1 = sub_213EF1D64();
    result = MEMORY[0x2199C52D4](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_253F06930);
  }
  return result;
}

uint64_t sub_213DC7B24(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_213DC7B60(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_213DC7B9C(uint64_t a1)
{
  return sub_213DC7BB8(a1, (uint64_t (*)(_QWORD, uint64_t, _QWORD))sub_213DC53B4);
}

uint64_t sub_213DC7BB8(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 + 24), a1, *(_QWORD *)(v2 + 32));
}

uint64_t sub_213DC7BF0(uint64_t a1)
{
  return sub_213DC7A40(a1) & 1;
}

uint64_t PartialRepetitionGroundTruthGenerator.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  PartialRepetitionGroundTruthGenerator.init(_:)(a1, v3, v4, v5);
  return v2;
}

char *PartialRepetitionGroundTruthGenerator.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  type metadata accessor for PartialRepetitionGroundTruthGenerator(0, v6, *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  *((_QWORD *)v4 + 2) = static InferenceLogUtils.loggerTag<A>(_:)();
  *((_QWORD *)v4 + 3) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 104)], a1, v6);
  return v4;
}

uint64_t type metadata accessor for PartialRepetitionGroundTruthGenerator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PartialRepetitionGroundTruthGenerator);
}

uint64_t sub_213DC7CB8(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[5];
  uint64_t v102[6];

  LODWORD(v97) = a3;
  v99 = a2;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  v7 = *(_QWORD *)(*v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v85 = sub_213EF2D6C();
  v84 = *(_QWORD *)(v85 - 8);
  v9 = MEMORY[0x24BDAC7A8](v85);
  v89 = (char *)&v83 - v10;
  v91 = AssociatedTypeWitness;
  v95 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v86 = (char *)&v83 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v88 = sub_213EF2D6C();
  v87 = *(_QWORD *)(v88 - 8);
  v13 = MEMORY[0x24BDAC7A8](v88);
  v93 = (char *)&v83 - v14;
  v96 = v12;
  v94 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v92 = (char *)&v83 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_253F06DC0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TurnPairRestatementClassification();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v83 - v24;
  v26 = *(_QWORD *)(v5 + 104);
  v27 = v99;
  v98 = v3;
  v28 = (uint64_t)v3 + v26;
  v29 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 160);
  v30 = v97;
  v97 = (_QWORD *)v28;
  v100 = v7;
  if ((v29(a1, v99, v30, v6, v7) & 1) == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v37 = sub_213EF2724();
    __swift_project_value_buffer(v37, (uint64_t)qword_253F08A00);
    v38 = v98;
    swift_retain();
    v39 = sub_213EF270C();
    v40 = sub_213EF2C94();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v102[0] = v42;
      *(_DWORD *)v41 = 136315138;
      v44 = v38[2];
      v43 = v38[3];
      swift_bridgeObjectRetain();
      v101[0] = sub_213DB0570(v44, v43, v102);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v39, v40, "%s Validation not passed. Skipping partial repetition ground truth generation", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v42, -1, -1);
      MEMORY[0x2199C53C4](v41, -1, -1);

LABEL_31:
      swift_getAssociatedTypeWitness();
      return sub_213EF2A90();
    }
    goto LABEL_30;
  }
  v90 = v6;
  v31 = *(_QWORD *)(v27 + 16);
  v83 = a1;
  if (v31)
  {
    v32 = v27 + 32;
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v32, (uint64_t)v102);
      sub_213DAFDFC((uint64_t)v102, (uint64_t)v101);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v34 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, v34 ^ 1u, 1, v19);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v102);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
      {
        sub_213DAFEC4((uint64_t)v18, qword_253F06DC0);
      }
      else
      {
        sub_213DBB430((uint64_t)v18, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        sub_213DBB430((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_213DB5AF0(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
        v36 = *(_QWORD *)(v33 + 16);
        v35 = *(_QWORD *)(v33 + 24);
        if (v36 >= v35 >> 1)
          v33 = sub_213DB5AF0(v35 > 1, v36 + 1, 1, v33);
        *(_QWORD *)(v33 + 16) = v36 + 1;
        sub_213DBB430((uint64_t)v23, v33+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v36, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      }
      v32 += 40;
      --v31;
    }
    while (v31);
    v27 = v99;
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = MEMORY[0x24BEE4AF8];
  }
  v45 = v90;
  v46 = v98;
  v48 = v95;
  v47 = v96;
  if (!*(_QWORD *)(v33 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v60 = sub_213EF2724();
    __swift_project_value_buffer(v60, (uint64_t)qword_253F08A00);
    swift_retain();
    v39 = sub_213EF270C();
    v54 = sub_213EF2C94();
    if (os_log_type_enabled(v39, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v102[0] = v56;
      *(_DWORD *)v55 = 136315138;
      v61 = v46[2];
      v62 = v46[3];
      swift_bridgeObjectRetain();
      v101[0] = sub_213DB0570(v61, v62, v102);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      v59 = "%s No restatement classifications. Skipping partial repetition ground truth generation";
      goto LABEL_29;
    }
LABEL_30:

    swift_release();
    goto LABEL_31;
  }
  v102[0] = v27;
  sub_213DC8964((uint64_t)v97, v90, v100);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA8);
  sub_213DCA20C((unint64_t *)&qword_253F06FB0, &qword_253F06FA8, MEMORY[0x24BEE12C8]);
  v49 = sub_213EF29B8();
  v99 = 0;
  swift_release();
  v102[0] = v49;
  v50 = sub_213EF2AE4();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v50);
  v51 = v93;
  sub_213EF2C40();
  swift_bridgeObjectRelease();
  v52 = v94;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v51, 1, v47) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v51, v88);
    if (qword_253F04A88 != -1)
      swift_once();
    v53 = sub_213EF2724();
    __swift_project_value_buffer(v53, (uint64_t)qword_253F08A00);
    swift_retain();
    v39 = sub_213EF270C();
    v54 = sub_213EF2C94();
    if (os_log_type_enabled(v39, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v102[0] = v56;
      *(_DWORD *)v55 = 136315138;
      v57 = v46[2];
      v58 = v46[3];
      swift_bridgeObjectRetain();
      v101[0] = sub_213DB0570(v57, v58, v102);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      v59 = "%s No successful event associated with session. Skipping partial repetition ground truth generation";
LABEL_29:
      _os_log_impl(&dword_213DAB000, v39, v54, v59, v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v56, -1, -1);
      MEMORY[0x2199C53C4](v55, -1, -1);

      goto LABEL_31;
    }
    goto LABEL_30;
  }
  v65 = v92;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v92, v51, v47);
  v66 = v45;
  v67 = v89;
  v68 = v83;
  (*(void (**)(uint64_t *, char *, uint64_t))(v100 + 128))(v83, v65, v66);
  v69 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v67, 1, v91) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v67, v85);
    if (qword_253F04A88 != -1)
      swift_once();
    v70 = sub_213EF2724();
    __swift_project_value_buffer(v70, (uint64_t)qword_253F08A00);
    v71 = v98;
    swift_retain();
    v72 = sub_213EF270C();
    v73 = sub_213EF2C94();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      v102[0] = v75;
      *(_DWORD *)v74 = 136315138;
      v76 = v71[2];
      v77 = v71[3];
      swift_bridgeObjectRetain();
      v101[0] = sub_213DB0570(v76, v77, v102);
      v65 = v92;
      sub_213EF2D9C();
      swift_release();
      v47 = v96;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v72, v73, "%s Failed to extract successClassification entity. Skipping partial repetition ground truth generation", v74, 0xCu);
      swift_arrayDestroy();
      v78 = v75;
      v52 = v94;
      MEMORY[0x2199C53C4](v78, -1, -1);
      MEMORY[0x2199C53C4](v74, -1, -1);

    }
    else
    {

      swift_release();
    }
    swift_getAssociatedTypeWitness();
    v63 = sub_213EF2A90();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v65, v47);
  }
  else
  {
    v79 = v86;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v86, v67, v69);
    v80 = v98;
    v81 = sub_213DC9C78(v68, v33);
    v82 = swift_bridgeObjectRelease();
    v97 = &v83;
    v102[0] = v81;
    MEMORY[0x24BDAC7A8](v82);
    *(&v83 - 4) = v80;
    *(&v83 - 3) = v68;
    *(&v83 - 2) = (uint64_t *)v79;
    *(&v83 - 1) = (uint64_t *)v65;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AE80);
    swift_getAssociatedTypeWitness();
    sub_213DCA20C(&qword_254D3AE88, &qword_254D3AE80, MEMORY[0x24BEE12C8]);
    v63 = sub_213EF29B8();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v79, v91);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v47);
    swift_bridgeObjectRelease();
  }
  return v63;
}

uint64_t (*sub_213DC8964(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_213DCA904;
}

uint64_t sub_213DC8A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t, _QWORD);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t *);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t AssociatedConformanceWitness;
  uint64_t v114;
  void (*v115)(char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  char *v116;
  char *v117;
  _QWORD v118[2];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;

  v124 = a4;
  v127 = a3;
  v139 = a5;
  v8 = *v5;
  v9 = type metadata accessor for FeaturisedSession(0);
  MEMORY[0x24BDAC7A8](v9);
  v122 = (uint64_t)v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_213EF1D64();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126);
  v123 = (char *)v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 88);
  v118[1] = swift_getAssociatedTypeWitness();
  v133 = sub_213EF2D6C();
  v121 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v132 = (char *)v118 - v14;
  v145 = v13;
  v143 = v12;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)&v131 = sub_213EF2D6C();
  v130 = *(_QWORD *)(v131 - 8);
  v16 = MEMORY[0x24BDAC7A8](v131);
  *(_QWORD *)&v136 = (char *)v118 - v17;
  v138 = AssociatedTypeWitness;
  v141 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v137 = (char *)v118 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v129 = (uint64_t)v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v118 - v22;
  *(_QWORD *)&v140 = type metadata accessor for FeaturisedTurn(0);
  v24 = *(_QWORD *)(v140 - 8);
  v25 = MEMORY[0x24BDAC7A8](v140);
  v120 = (uint64_t)v118 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v119 = (uint64_t)v118 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v118 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29);
  v134 = (uint64_t)v118 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)v118 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v144 = (uint64_t)v118 - v37;
  v135 = a1;
  v38 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v38)
  {
    v39 = *(_QWORD *)a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v40 = *(_QWORD *)(v24 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DCA7E4(v39, (uint64_t)v36, type metadata accessor for FeaturisedTurn);
      if ((sub_213EF1D28() & 1) != 0)
        break;
      sub_213DCA828((uint64_t)v36, type metadata accessor for FeaturisedTurn);
      v39 += v40;
      if (!--v38)
        goto LABEL_7;
    }
    sub_213DBB430((uint64_t)v36, (uint64_t)v23, type metadata accessor for FeaturisedTurn);
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v24 + 56);
    v42 = v23;
    v43 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v24 + 56);
    v42 = v23;
    v43 = 1;
  }
  v44 = v140;
  v128 = v41;
  v41((uint64_t)v42, v43, 1, v140);
  swift_bridgeObjectRelease();
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v46 = v45(v23, 1, v44);
  v47 = v143;
  v48 = v145;
  v49 = v144;
  v50 = (_QWORD *)v142;
  v51 = v141;
  if (v46 == 1)
  {
    sub_213DAFEC4((uint64_t)v23, &qword_253F069B0);
    if (qword_253F04A88 != -1)
      swift_once();
    v52 = sub_213EF2724();
    __swift_project_value_buffer(v52, (uint64_t)qword_253F08A00);
    swift_retain();
    v53 = sub_213EF270C();
    v54 = sub_213EF2CA0();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      *(_QWORD *)&v154 = v56;
      *(_DWORD *)v55 = 136315138;
      v57 = v50[2];
      v58 = v50[3];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v149 = sub_213DB0570(v57, v58, (uint64_t *)&v154);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v53, v54, "%s First turn missing. Partial repetion ground truth not generated", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v56, -1, -1);
      MEMORY[0x2199C53C4](v55, -1, -1);

    }
    else
    {

      swift_release();
    }
    goto LABEL_30;
  }
  sub_213DBB430((uint64_t)v23, v144, type metadata accessor for FeaturisedTurn);
  v59 = (char *)v50 + *(_QWORD *)(*v50 + 104);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 104))(v49, v47, v48) & 1) == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v72 = sub_213EF2724();
    __swift_project_value_buffer(v72, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v65 = sub_213EF270C();
    v66 = sub_213EF2CA0();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      *(_QWORD *)&v154 = v68;
      *(_DWORD *)v67 = 136315138;
      v73 = v50[2];
      v74 = v50[3];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v149 = sub_213DB0570(v73, v74, (uint64_t *)&v154);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v71 = "%s First turn failed isInitiatingSiriTurn test. Partial repetion ground truth not generated";
      goto LABEL_25;
    }
    goto LABEL_27;
  }
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 144);
  v61 = v47;
  v62 = v136;
  v118[0] = v59;
  v60(v49, v61, v48);
  v63 = v138;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v62, 1, v138) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(v130 + 8))(v62, v131);
    if (qword_253F04A88 != -1)
      swift_once();
    v64 = sub_213EF2724();
    __swift_project_value_buffer(v64, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v65 = sub_213EF270C();
    v66 = sub_213EF2CA0();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      *(_QWORD *)&v154 = v68;
      *(_DWORD *)v67 = 136315138;
      v69 = v50[2];
      v70 = v50[3];
      swift_bridgeObjectRetain();
      *(_QWORD *)&v149 = sub_213DB0570(v69, v70, (uint64_t *)&v154);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      v71 = "%s extractUsoEntity failed for first turn. Partial repetion ground truth not generated";
LABEL_25:
      _os_log_impl(&dword_213DAB000, v65, v66, v71, v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v68, -1, -1);
      MEMORY[0x2199C53C4](v67, -1, -1);

LABEL_26:
      v75 = v144;
LABEL_29:
      sub_213DCA828(v75, type metadata accessor for FeaturisedTurn);
LABEL_30:
      v76 = swift_getAssociatedTypeWitness();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v139, 1, 1, v76);
    }
LABEL_27:
    swift_release_n();

    goto LABEL_28;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v137, v62, v63);
  v78 = *(_QWORD *)(*(_QWORD *)v135 + 16);
  if (v78)
  {
    v79 = *(_QWORD *)v135
        + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    type metadata accessor for TurnPairRestatementClassification();
    v80 = *(_QWORD *)(v24 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_213DCA7E4(v79, (uint64_t)v31, type metadata accessor for FeaturisedTurn);
      if ((sub_213EF1D28() & 1) != 0)
        break;
      sub_213DCA828((uint64_t)v31, type metadata accessor for FeaturisedTurn);
      v79 += v80;
      if (!--v78)
      {
        v81 = 1;
        v82 = v143;
        v48 = v145;
        v49 = v144;
        v83 = v129;
        goto LABEL_38;
      }
    }
    v84 = (uint64_t)v31;
    v83 = v129;
    sub_213DBB430(v84, v129, type metadata accessor for FeaturisedTurn);
    v81 = 0;
    v82 = v143;
    v48 = v145;
    v49 = v144;
  }
  else
  {
    swift_bridgeObjectRetain();
    v81 = 1;
    v83 = v129;
    v82 = v143;
  }
LABEL_38:
  v85 = v140;
  v128(v83, v81, 1, v140);
  swift_bridgeObjectRelease();
  v86 = v45((char *)v83, 1, v85);
  v87 = v142;
  v88 = v118[0];
  if (v86 == 1)
  {
    sub_213DAFEC4(v83, &qword_253F069B0);
    if (qword_253F04A88 != -1)
      swift_once();
    v89 = sub_213EF2724();
    __swift_project_value_buffer(v89, (uint64_t)qword_253F08A00);
    swift_retain_n();
    v90 = sub_213EF270C();
    v91 = sub_213EF2CA0();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      v93 = swift_slowAlloc();
      *(_QWORD *)&v154 = v93;
      *(_DWORD *)v92 = 136315138;
      v94 = *(_QWORD *)(v87 + 16);
      v95 = *(_QWORD *)(v87 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)&v149 = sub_213DB0570(v94, v95, (uint64_t *)&v154);
      sub_213EF2D9C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v90, v91, "%s Second turn missing. Partial repetion ground truth not generated", v92, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v93, -1, -1);
      MEMORY[0x2199C53C4](v92, -1, -1);

      (*(void (**)(char *, uint64_t))(v141 + 8))(v137, v138);
      goto LABEL_26;
    }
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v141 + 8))(v137, v138);
LABEL_28:
    v75 = v49;
    goto LABEL_29;
  }
  sub_213DBB430(v83, v134, type metadata accessor for FeaturisedTurn);
  v96 = *(_QWORD *)(v49 + *(int *)(v85 + 28));
  v97 = sub_213DC9B00(v88, v82, v48);
  *(_QWORD *)&v149 = v96;
  *((_QWORD *)&v149 + 1) = v97;
  *(_QWORD *)&v150 = v98;
  sub_213DC9BBC(v88, v82, v48);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AE90);
  v99 = v49;
  sub_213DCA20C(&qword_254D3AE98, &qword_254D3AE90, MEMORY[0x24BEE3008]);
  sub_213EF30CC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v142 = v154;
  v140 = v155;
  v149 = v154;
  v150 = v155;
  v136 = v156;
  v131 = v157;
  v151 = v156;
  v152 = v157;
  v153 = v158;
  v100 = MEMORY[0x24BEE2FF8];
  sub_213DCA20C(&qword_254D3AEA0, &qword_254D3AE90, MEMORY[0x24BEE2FF8]);
  v101 = sub_213EF2FC4();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE2B40], v101);
  v102 = sub_213EF3060();
  MEMORY[0x2199C52D4](v100, v102);
  v103 = sub_213EF2FC4();
  v148 = sub_213DCA190();
  v104 = MEMORY[0x24BEE2B50];
  v147 = MEMORY[0x2199C52D4](MEMORY[0x24BEE2B50], v101, &v148);
  v146 = MEMORY[0x2199C52D4](MEMORY[0x24BEE3000], v102, &v147);
  MEMORY[0x2199C52D4](v104, v103, &v146);
  sub_213EF2C40();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v105 = v123;
  sub_213EF1D58();
  *(_QWORD *)&v142 = type metadata accessor for PartialRepetitionMetadata();
  v106 = v122;
  sub_213DCA7E4(v135, v122, type metadata accessor for FeaturisedSession);
  v107 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for TurnPairRestatementClassification() + 24));
  v108 = v119;
  sub_213DCA7E4(v99, v119, type metadata accessor for FeaturisedTurn);
  v109 = v120;
  sub_213DCA7E4(v134, v120, type metadata accessor for FeaturisedTurn);
  v110 = v145;
  v111 = v143;
  v112 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v114 = sub_213E431C4(v106, v124, v107, v108, v109, v142, v112, AssociatedConformanceWitness);
  v115 = *(void (**)(char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 120);
  swift_bridgeObjectRetain();
  v116 = v137;
  v117 = v132;
  v115(v105, v137, v132, v127, v114, v111, v110);
  swift_release();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v105, v126);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v117, v133);
  sub_213DCA828(v134, type metadata accessor for FeaturisedTurn);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v116, v138);
  return sub_213DCA828(v144, type metadata accessor for FeaturisedTurn);
}

uint64_t (*sub_213DC9B00(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_213DCA784;
}

uint64_t (*sub_213DC9BBC(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t *a1)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_213DCA724;
}

uint64_t sub_213DC9C78(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = *v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeaturisedTurn(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - v13;
  v16 = *a1;
  v17 = *(_QWORD *)(*a1 + 16);
  if (!v17)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v21 = sub_213EF2724();
    __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
    swift_retain();
    v22 = sub_213EF270C();
    v23 = sub_213EF2CA0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v37 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = v3[2];
      v27 = v3[3];
      swift_bridgeObjectRetain();
      v36 = sub_213DB0570(v26, v27, &v37);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v22, v23, "%s Couldn't extract final turn in session as session contains no turns.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v25, -1, -1);
      MEMORY[0x2199C53C4](v24, -1, -1);

    }
    else
    {

      swift_release();
    }
    return MEMORY[0x24BEE4AF8];
  }
  v34 = v14;
  v35 = v6;
  v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = *(_QWORD *)(v11 + 72);
  sub_213DCA7E4(v16 + v18 + v19 * (v17 - 1), (uint64_t)&v32 - v13, type metadata accessor for FeaturisedTurn);
  v20 = sub_213DCA24C((uint64_t)v15, a2);
  if (!*(_QWORD *)(v20 + 16))
  {
    v33 = a2;
    swift_bridgeObjectRelease();
    v28 = (*(uint64_t (**)(uint64_t *, _QWORD))(*(_QWORD *)(v35 + 88) + 152))(a1, *(_QWORD *)(v35 + 80));
    v29 = *(_QWORD *)(v28 + 16);
    if (v29)
    {
      sub_213DCA7E4(v28 + v18 + (v29 - 1) * v19, (uint64_t)v9, type metadata accessor for FeaturisedTurn);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        v31 = v34;
        sub_213DBB430((uint64_t)v9, v34, type metadata accessor for FeaturisedTurn);
        v20 = sub_213DCA24C(v31, v33);
        sub_213DCA828(v31, type metadata accessor for FeaturisedTurn);
        sub_213DCA828((uint64_t)v15, type metadata accessor for FeaturisedTurn);
        return v20;
      }
      sub_213DAFEC4((uint64_t)v9, &qword_253F069B0);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_213DCA828((uint64_t)v15, type metadata accessor for FeaturisedTurn);
    return MEMORY[0x24BEE4AF8];
  }
  sub_213DCA828((uint64_t)v15, type metadata accessor for FeaturisedTurn);
  return v20;
}

uint64_t *PartialRepetitionGroundTruthGenerator.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return v0;
}

uint64_t PartialRepetitionGroundTruthGenerator.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return swift_deallocClassInstance();
}

uint64_t sub_213DCA0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_213DC8A20(v2[3], a1, v2[4], v2[5], a2);
}

uint64_t sub_213DCA0F4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for PartialRepetitionGroundTruthGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PartialRepetitionGroundTruthGenerator.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PartialRepetitionGroundTruthGenerator.generate(session:classifications:isComposite:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

unint64_t sub_213DCA190()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254D3AEA8;
  if (!qword_254D3AEA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3AE90);
    v2 = sub_213DCA20C(&qword_254D3AEB0, &qword_254D3AEB8, MEMORY[0x24BEE12E0]);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE3000], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254D3AEA8);
  }
  return result;
}

uint64_t sub_213DCA20C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2199C52D4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213DCA24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t result;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v61 = type metadata accessor for TurnPairRestatementClassification();
  v4 = *(_QWORD *)(v61 - 8);
  v5 = MEMORY[0x24BDAC7A8](v61);
  v57 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v56 = (char *)v53 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v60 = (uint64_t)v53 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)v53 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)v53 - v13;
  v14 = sub_213EF1D64();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v59 = (char *)v53 - v20;
  v21 = *(_QWORD *)(a2 + 16);
  v64 = v19;
  if (v21)
  {
    v54 = a1;
    v55 = v4;
    v22 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v23 = *(_QWORD *)(v4 + 72);
    v53[1] = a2;
    swift_bridgeObjectRetain();
    v24 = (_QWORD *)MEMORY[0x24BEE4B00];
    v25 = v62;
    while (1)
    {
      v65 = v21;
      sub_213DCA7E4(v22, v25, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      v26 = v25 + *(int *)(v61 + 20);
      v27 = v15;
      v63 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      v63(v18, v26, v14);
      sub_213DCA7E4(v25, v66, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v67 = v24;
      v30 = sub_213DFA284((uint64_t)v18);
      v31 = v24[2];
      v32 = (v29 & 1) == 0;
      v33 = v31 + v32;
      if (__OFADD__(v31, v32))
        break;
      v34 = v29;
      if (v24[3] >= v33)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_213E0048C();
      }
      else
      {
        sub_213DFB844(v33, isUniquelyReferenced_nonNull_native);
        v35 = sub_213DFA284((uint64_t)v18);
        if ((v34 & 1) != (v36 & 1))
          goto LABEL_26;
        v30 = v35;
      }
      v15 = v27;
      v24 = v67;
      if ((v34 & 1) != 0)
      {
        sub_213DCA864(v66, v67[7] + v30 * v23);
        v14 = v64;
      }
      else
      {
        v67[(v30 >> 6) + 8] |= 1 << v30;
        v14 = v64;
        v63((char *)(v24[6] + *(_QWORD *)(v27 + 72) * v30), (uint64_t)v18, v64);
        sub_213DBB430(v66, v24[7] + v30 * v23, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
        v37 = v24[2];
        v38 = __OFADD__(v37, 1);
        v39 = v37 + 1;
        if (v38)
          goto LABEL_25;
        v24[2] = v39;
        v24 = v67;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v14);
      v25 = v62;
      sub_213DCA828(v62, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      v22 += v23;
      v21 = v65 - 1;
      if (v65 == 1)
      {
        swift_bridgeObjectRelease();
        a1 = v54;
        v4 = v55;
        v40 = v63;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v24 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_16:
    v58 = v15;
    v41 = (uint64_t)v59;
    v40(v59, a1, v14);
    v43 = (uint64_t)v56;
    v42 = (uint64_t)v57;
    v44 = MEMORY[0x24BEE4AF8];
    while (v24[2])
    {
      v45 = sub_213DFA284(v41);
      if ((v46 & 1) == 0)
        break;
      v47 = *(_QWORD *)(v4 + 72);
      sub_213DCA7E4(v24[7] + v47 * v45, v43, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      v48 = v60;
      sub_213DBB430(v43, v60, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      sub_213DCA7E4(v48, v42, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v44 = sub_213DB5AF0(0, *(_QWORD *)(v44 + 16) + 1, 1, v44);
      v50 = *(_QWORD *)(v44 + 16);
      v49 = *(_QWORD *)(v44 + 24);
      if (v50 >= v49 >> 1)
        v44 = sub_213DB5AF0(v49 > 1, v50 + 1, 1, v44);
      *(_QWORD *)(v44 + 16) = v50 + 1;
      sub_213DBB430(v42, v44 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v50 * v47, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
      v41 = (uint64_t)v59;
      v14 = v64;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v64);
      v51 = v60;
      v40((char *)v41, v60, v14);
      sub_213DCA828(v51, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
    }
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v14);
    swift_bridgeObjectRelease();
    return v44;
  }
  return result;
}

uint64_t sub_213DCA724(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = a1[3];
  v4 = a1[4];
  v6 = *a1;
  v7 = *(_OWORD *)(a1 + 1);
  v8 = v3;
  v9 = v4;
  return (*(uint64_t (**)(uint64_t *))(v2 + 136))(&v6);
}

uint64_t sub_213DCA784(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = a1[3];
  v4 = a1[4];
  v6 = *a1;
  v7 = *(_OWORD *)(a1 + 1);
  v8 = v3;
  v9 = v4;
  return (*(uint64_t (**)(uint64_t *))(v2 + 112))(&v6) & 1;
}

uint64_t sub_213DCA7E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_213DCA828(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_213DCA864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TurnPairRestatementClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_213DCA904()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 96))();
}

unint64_t sub_213DCA93C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADA8);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_213DFA220(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCAA54(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EB0);
  v2 = sub_213EF309C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_213DCC3D8(v6, (uint64_t)&v15, &qword_253F04E38);
    v7 = v15;
    v8 = v16;
    result = sub_213DFA220(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_213DB0BF0(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCAB94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int16 v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AED0);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_QWORD *)(a1 + 88);
  while (1)
  {
    v5 = *(v4 - 6);
    v6 = *(v4 - 5);
    v7 = *(v4 - 4);
    v8 = *(v4 - 3);
    v9 = *(v4 - 2);
    v10 = *((_WORD *)v4 - 4);
    v11 = *v4;
    *(_QWORD *)&v19 = *(v4 - 7);
    *((_QWORD *)&v19 + 1) = v5;
    *(_QWORD *)&v20 = v6;
    *((_QWORD *)&v20 + 1) = v7;
    *(_QWORD *)&v21 = v8;
    *((_QWORD *)&v21 + 1) = v9;
    v22 = v10;
    swift_bridgeObjectRetain();
    sub_213DB8518(v6, v7);
    swift_bridgeObjectRetain();
    result = sub_213DFA31C((uint64_t)&v19);
    if ((v13 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v14 = v2[6] + 56 * result;
    v15 = v20;
    *(_OWORD *)v14 = v19;
    *(_OWORD *)(v14 + 16) = v15;
    *(_OWORD *)(v14 + 32) = v21;
    *(_WORD *)(v14 + 48) = v22;
    *(_QWORD *)(v2[7] + 8 * result) = v11;
    v16 = v2[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v2[2] = v18;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCAD00(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  char v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  __int128 v16;
  _BYTE *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int16 v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEC8);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 83);
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 43);
    v6 = *(_QWORD *)(v4 - 35);
    v7 = *(_QWORD *)(v4 - 27);
    v8 = *(_QWORD *)(v4 - 19);
    v9 = *(_QWORD *)(v4 - 11);
    v10 = *(_WORD *)(v4 - 3);
    v11 = *(v4 - 1);
    v12 = *v4;
    *(_QWORD *)&v21 = *(_QWORD *)(v4 - 51);
    *((_QWORD *)&v21 + 1) = v5;
    *(_QWORD *)&v22 = v6;
    *((_QWORD *)&v22 + 1) = v7;
    *(_QWORD *)&v23 = v8;
    *((_QWORD *)&v23 + 1) = v9;
    v24 = v10;
    swift_bridgeObjectRetain();
    sub_213DB8518(v6, v7);
    result = sub_213DFA31C((uint64_t)&v21);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v15 = v2[6] + 56 * result;
    v16 = v22;
    *(_OWORD *)v15 = v21;
    *(_OWORD *)(v15 + 16) = v16;
    *(_OWORD *)(v15 + 32) = v23;
    *(_WORD *)(v15 + 48) = v24;
    v17 = (_BYTE *)(v2[7] + 2 * result);
    *v17 = v11;
    v17[1] = v12;
    v18 = v2[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v4 += 56;
    v2[2] = v20;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCAE7C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  int v12;
  unint64_t result;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEE0);
  v2 = sub_213EF309C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v20 = v2 + 64;
  swift_retain();
  v5 = (unsigned __int16 *)(a1 + 65);
  while (1)
  {
    v6 = *(_QWORD *)((char *)v5 - 33);
    v7 = *(_QWORD *)((char *)v5 - 25);
    v8 = *(_QWORD *)((char *)v5 - 17);
    v9 = *(_QWORD *)((char *)v5 - 9);
    v10 = *((_BYTE *)v5 - 1);
    v11 = *((unsigned __int8 *)v5 + 2);
    v12 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213DFA374(v6, v7, v8, v9);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v20 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v15 = (uint64_t *)(v3[6] + 32 * result);
    *v15 = v6;
    v15[1] = v7;
    v15[2] = v8;
    v15[3] = v9;
    v16 = v3[7] + 4 * result;
    *(_BYTE *)v16 = v10;
    *(_BYTE *)(v16 + 3) = (v12 | (v11 << 16)) >> 16;
    *(_WORD *)(v16 + 1) = v12;
    v17 = v3[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v3[2] = v19;
    v5 += 20;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCAFE0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AED8);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    v5 = *(v4 - 4);
    v6 = *(v4 - 3);
    v7 = *(v4 - 2);
    v8 = *(v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213DFA374(v5, v6, v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 32 * result);
    *v12 = v5;
    v12[1] = v6;
    v12[2] = v7;
    v12[3] = v8;
    *(_QWORD *)(v2[7] + 8 * result) = v9;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07168);
  v6 = sub_213EF309C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_213DCC3D8(v12, (uint64_t)v5, &qword_253F070B8);
    result = sub_213DFA5E0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_213EF26F4();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_213EF2610();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB2D8(uint64_t a1)
{
  return sub_213DCB680(a1, &qword_253F06940, &qword_254D3AF40);
}

unint64_t sub_213DCB2EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF38);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213DFA220(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB40C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF30);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    v5 = *(v4 - 5);
    v6 = *(v4 - 4);
    v7 = *(v4 - 3);
    v8 = *(v4 - 2);
    v10 = *(v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213DFA220(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = (_QWORD *)(v2[7] + 32 * result);
    *v14 = v7;
    v14[1] = v8;
    v14[2] = v10;
    v14[3] = v9;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB548(uint64_t a1)
{
  return sub_213DCBAB0(a1, &qword_254D3AF28, (uint64_t (*)(uint64_t))sub_213DFA4DC);
}

unint64_t sub_213DCB55C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF20);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_213DFA220(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB66C(uint64_t a1)
{
  return sub_213DCB680(a1, &qword_253F04840, &qword_253F06FE8);
}

unint64_t sub_213DCB680(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v10 = sub_213EF309C();
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  v13 = *(int *)(v6 + 48);
  v14 = v10 + 64;
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_213DCC3D8(v16, (uint64_t)v9, a2);
    result = sub_213DFA284((uint64_t)v9);
    if ((v19 & 1) != 0)
      break;
    v20 = result;
    *(_QWORD *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v21 = v11[6];
    v22 = sub_213EF1D64();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v20, v9, v22);
    *(_QWORD *)(v11[7] + 8 * v20) = *(_QWORD *)&v9[v13];
    v23 = v11[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_11;
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB80C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF18);
  v2 = (_QWORD *)sub_213EF309C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213DFA220(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCB924(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF10);
  v2 = sub_213EF309C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v9 = *(v5 - 1);
    v8 = *v5;
    v11 = v5[1];
    v10 = v5[2];
    v12 = v5[4];
    v13 = v5[6];
    v23 = v5[5];
    v24 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_213DFA220(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = (_QWORD *)(v3[7] + (result << 6));
    *v17 = v9;
    v17[1] = v8;
    v17[2] = v11;
    v17[3] = v10;
    v17[4] = v24;
    v17[5] = v12;
    v17[6] = v23;
    v17[7] = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 10;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCBA9C(uint64_t a1)
{
  return sub_213DCBAB0(a1, &qword_254D3AF08, (uint64_t (*)(uint64_t))sub_213DFA3F0);
}

unint64_t sub_213DCBAB0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)sub_213EF309C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v9 = *(v7 - 1);
    v8 = *v7;
    swift_retain();
    swift_bridgeObjectRetain();
    result = a3(v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v5[6] + v12) = v9;
    *(_QWORD *)(v5[7] + v12) = v8;
    v13 = v5[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v5[2] = v15;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCBBC0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA8);
  v2 = sub_213EF309C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_213DCC3D8(v6, (uint64_t)&v15, &qword_254D3AEF8);
    v7 = v15;
    v8 = v16;
    result = sub_213DFA734(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_213DB0BF0(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_213DCBD00(uint64_t a1)
{
  return sub_213DCB680(a1, &qword_254D3AEE8, &qword_254D3AEF0);
}

unint64_t sub_213DCBD14(uint64_t a1)
{
  return sub_213DCB680(a1, &qword_253F06948, &qword_253F06FF0);
}

uint64_t PIMSProcessingState.eventName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIMSProcessingState.eventName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PIMSProcessingState.eventName.modify())()
{
  return nullsub_1;
}

SiriPrivateLearningInference::PIMSProcessingState __swiftcall PIMSProcessingState.init(state:)(SiriPrivateLearningInference::PIMSProcessingStateCode state)
{
  uint64_t v1;
  char v2;
  SiriPrivateLearningInference::PIMSProcessingState result;

  v2 = *(_BYTE *)state;
  *(_QWORD *)v1 = 0xD000000000000013;
  *(_QWORD *)(v1 + 8) = 0x8000000213EF5B40;
  *(_BYTE *)(v1 + 16) = v2;
  LOBYTE(result.eventName._countAndFlagsBits) = state;
  return result;
}

void PIMSProcessingState.getLoggableProperties()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;

  v1 = *(unsigned __int8 *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04ED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x8000000213EF5B40;
  __asm { BR              X11 }
}

unint64_t sub_213DCBE40(_QWORD *a1)
{
  uint64_t v1;

  v1 = MEMORY[0x24BEA5438];
  a1[9] = MEMORY[0x24BEE0D00];
  a1[10] = v1;
  a1[6] = 0xD000000000000021;
  a1[7] = 0x8000000213F04780;
  return sub_213DCAA54((uint64_t)a1);
}

uint64_t PIMSProcessingStateCode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213DCBF00 + 4 * byte_213EF5B46[*v0]))(0xD000000000000016, 0x8000000213F04760);
}

unint64_t sub_213DCBF00()
{
  return 0xD000000000000021;
}

uint64_t sub_213DCBF60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

SiriPrivateLearningInference::PIMSProcessingStateCode_optional __swiftcall PIMSProcessingStateCode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::PIMSProcessingStateCode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_213DCBFE8(char *a1)
{
  sub_213E29C20(*a1);
}

unint64_t sub_213DCBFF8()
{
  unint64_t result;

  result = qword_254D3AEC0;
  if (!qword_254D3AEC0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PIMSProcessingStateCode, &type metadata for PIMSProcessingStateCode);
    atomic_store(result, (unint64_t *)&qword_254D3AEC0);
  }
  return result;
}

void sub_213DCC03C()
{
  char *v0;

  sub_213ED65D4(*v0);
}

void sub_213DCC044(uint64_t a1)
{
  char *v1;

  sub_213E2ABFC(a1, *v1);
}

void sub_213DCC04C(uint64_t a1)
{
  char *v1;

  sub_213E2B29C(a1, *v1);
}

SiriPrivateLearningInference::PIMSProcessingStateCode_optional sub_213DCC054(Swift::String *a1)
{
  return PIMSProcessingStateCode.init(rawValue:)(*a1);
}

uint64_t sub_213DCC060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PIMSProcessingStateCode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t destroy for PIMSProcessingState()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s28SiriPrivateLearningInference19PIMSProcessingStateVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PIMSProcessingState(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PIMSProcessingState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PIMSProcessingState(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PIMSProcessingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PIMSProcessingState()
{
  return &type metadata for PIMSProcessingState;
}

uint64_t storeEnumTagSinglePayload for PIMSProcessingStateCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_213DCC24C + 4 * byte_213EF5B51[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_213DCC280 + 4 * byte_213EF5B4C[v4]))();
}

uint64_t sub_213DCC280(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DCC288(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DCC290);
  return result;
}

uint64_t sub_213DCC29C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DCC2A4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_213DCC2A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DCC2B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PIMSProcessingStateCode()
{
  return &type metadata for PIMSProcessingStateCode;
}

unint64_t sub_213DCC2CC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF00);
  v3 = (_QWORD *)sub_213EF309C();
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  result = sub_213DFA578(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = (uint64_t *)(a1 + 72);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v6;
    v10[1] = v5;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *((unsigned __int8 *)v9 - 16);
    v6 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_213DFA578(v4);
    v9 = v14;
    v5 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DCC3D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_213DCC41C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t inited;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v7 = type metadata accessor for FeaturisedSession(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return MEMORY[0x24BEE4AF8];
  if (v11 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F07000);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_213EF53E0;
    *(_QWORD *)(v12 + 32) = a1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    sub_213DCA7E4(a1 + v13, (uint64_t)v10, type metadata accessor for FeaturisedSession);
    sub_213DCC6E4(2, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A658);
    inited = swift_initStackObject();
    v24 = xmmword_213EF53E0;
    *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F07008);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v24;
    sub_213DCA7E4((uint64_t)v10, v15 + v13, type metadata accessor for FeaturisedSession);
    *(_QWORD *)(inited + 32) = v15;
    v27 = inited;
    swift_retain();
    sub_213EF2FDC();
    swift_release();
    sub_213EF30C0();
    v16 = v25;
    if ((_QWORD)v25)
    {
      v17 = v26;
      do
      {
        v24 = v16;
        v25 = v16;
        v26 = v17;
        sub_213DCC914(&v27, &v25, v3, a2, a3);
        swift_unknownObjectRelease();
        sub_213EF30C0();
        v16 = v25;
        v17 = v26;
      }
      while ((_QWORD)v25);
      inited = v27;
    }
    swift_release();
    swift_release();
    v18 = *(_QWORD *)(inited + 16);
    v12 = MEMORY[0x24BEE4AF8];
    if (v18)
    {
      *(_QWORD *)&v25 = MEMORY[0x24BEE4AF8];
      sub_213DCD0E4(0, v18, 0);
      v12 = v25;
      v19 = (uint64_t *)(inited + 32);
      do
      {
        v20 = *v19;
        *(_QWORD *)&v25 = v12;
        v21 = *(_QWORD *)(v12 + 16);
        v22 = *(_QWORD *)(v12 + 24);
        swift_bridgeObjectRetain();
        if (v21 >= v22 >> 1)
        {
          sub_213DCD0E4(v22 > 1, v21 + 1, 1);
          v12 = v25;
        }
        *(_QWORD *)(v12 + 16) = v21 + 1;
        *(_QWORD *)(v12 + 8 * v21 + 32) = v20;
        ++v19;
        --v18;
      }
      while (v18);
    }
    sub_213DCD1F8((uint64_t)v10);
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_213DCC6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    if (v2 >= a1)
      v4 = a1;
    else
      v4 = *(_QWORD *)(a2 + 16);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a2;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_213DD09D4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF80);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = v4;
    *(_WORD *)(v8 + 32) = 256;
    *(_QWORD *)(v8 + 40) = sub_213DD082C;
    *(_QWORD *)(v8 + 48) = v6;
    *(_BYTE *)(v8 + 56) = 0;
    *(_QWORD *)(v8 + 64) = sub_213DD0834;
    *(_QWORD *)(v8 + 72) = v7;
    swift_bridgeObjectRetain_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF88);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = MEMORY[0x24BEE4AF8];
  }
  return v8;
}

uint64_t sub_213DCC7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    if (v2 >= a1)
      v4 = a1;
    else
      v4 = *(_QWORD *)(a2 + 16);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a2;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_213DD08A4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFD8);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = v4;
    *(_WORD *)(v8 + 32) = 256;
    *(_QWORD *)(v8 + 40) = sub_213DD09D8;
    *(_QWORD *)(v8 + 48) = v6;
    *(_BYTE *)(v8 + 56) = 0;
    *(_QWORD *)(v8 + 64) = sub_213DD0964;
    *(_QWORD *)(v8 + 72) = v7;
    swift_bridgeObjectRetain_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FD0);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = MEMORY[0x24BEE4AF8];
  }
  return v8;
}

uint64_t sub_213DCC914(_QWORD *a1, _QWORD *a2, _QWORD *a3, unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, unint64_t, _QWORD *);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;

  v40 = a1;
  v10 = type metadata accessor for FeaturisedSession(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v13 = MEMORY[0x24BDAC7A8](v12);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t)&v36 - v15;
  v19 = a2[2];
  v20 = a2[3] >> 1;
  if (v19 != v20)
  {
    if (v19 < v20)
    {
      v37 = v16;
      v39 = v5;
      v21 = a2[1];
      v22 = v17;
      a2 = (_QWORD *)a5;
      v23 = *(_QWORD *)(v11 + 72);
      sub_213DCA7E4(v21 + v23 * v19, (uint64_t)&v36 - v15, type metadata accessor for FeaturisedSession);
      v24 = v20 - 1;
      v20 = v23;
      a5 = v22;
      sub_213DCA7E4(v21 + v20 * v24, v22, type metadata accessor for FeaturisedSession);
      v25 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD *))a2[1];
      v38 = v18;
      if ((v25(v18, v22, a4, a2) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F07008);
        v32 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_213EF53E0;
        sub_213DCA7E4(a5, v33 + v32, type metadata accessor for FeaturisedSession);
        v29 = v40;
        a3 = (_QWORD *)*v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a3 = sub_213DB6204(0, a3[2] + 1, 1, a3);
        v35 = a3[2];
        v34 = a3[3];
        if (v35 >= v34 >> 1)
          a3 = sub_213DB6204((_QWORD *)(v34 > 1), v35 + 1, 1, a3);
        a3[2] = v35 + 1;
        a3[v35 + 4] = v33;
        goto LABEL_18;
      }
      v36 = v11;
      a3 = (_QWORD *)*v40;
      a4 = *(_QWORD *)(*v40 + 16);
      sub_213DCA7E4(v22, v37, type metadata accessor for FeaturisedSession);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        if (!a4)
        {
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_7:
        if (a4 <= a3[2])
        {
          v18 = v20;
          v11 = a4 - 1;
          a2 = a3 + 4;
          v26 = a4 - 1;
          a4 = a3[v26 + 4];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          a3[v26 + 4] = a4;
          v39 = a3 + 4;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v28 = v11;
LABEL_10:
            v29 = v40;
            v31 = *(_QWORD *)(a4 + 16);
            v30 = *(_QWORD *)(a4 + 24);
            if (v31 >= v30 >> 1)
            {
              a4 = sub_213DB6218(v30 > 1, v31 + 1, 1, a4);
              v39[v28] = a4;
            }
            *(_QWORD *)(a4 + 16) = v31 + 1;
            sub_213DBB430(v37, a4+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ v31 * v18, type metadata accessor for FeaturisedSession);
LABEL_18:
            *v29 = a3;
            sub_213DCD1F8(a5);
            return sub_213DCD1F8(v38);
          }
LABEL_23:
          a4 = sub_213DB6218(0, *(_QWORD *)(a4 + 16) + 1, 1, a4);
          v28 = v11;
          a2[v11] = a4;
          goto LABEL_10;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    a3 = sub_213DD02D0(a3);
    if (!a4)
      goto LABEL_21;
    goto LABEL_7;
  }
  return result;
}

uint64_t CompositeSession.componentSessions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompositeSession.combinedSession.getter@<X0>(size_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t *v30;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  size_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_213EF1D64();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeaturisedSession(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v15 = *v1;
  v16 = *(_QWORD *)(*v1 + 16);
  if (v16)
  {
    v40 = v8;
    v41 = v5;
    v43 = v9;
    v44 = a1;
    v17 = v15 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v39 = (char *)&v38 - v14;
    sub_213DCA7E4(v17, (uint64_t)&v38 - v14, type metadata accessor for FeaturisedSession);
    v47 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_213DCD1CC(0, v16, 0);
    v42 = v10;
    v18 = *(_QWORD *)(v10 + 72);
    v19 = v47;
    do
    {
      sub_213DCA7E4(v17, (uint64_t)v13, type metadata accessor for FeaturisedSession);
      v20 = *v13;
      swift_bridgeObjectRetain();
      sub_213DCD1F8((uint64_t)v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_213DCD1CC(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v47;
      }
      v22 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_213DCD1CC(v21 > 1, v22 + 1, 1);
        v19 = v47;
      }
      *(_QWORD *)(v19 + 16) = v22 + 1;
      *(_QWORD *)(v19 + 8 * v22 + 32) = v20;
      v17 += v18;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v23 = sub_213DD0320(v19);
    swift_release();
    v24 = v43;
    v25 = (uint64_t)v39;
    v26 = v40;
    v28 = v45;
    v27 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v40, &v39[*(int *)(v43 + 20)], v46);
    v29 = (uint64_t)v41;
    sub_213DBDD88(v25 + *(int *)(v24 + 24), (uint64_t)v41);
    sub_213DCD1F8(v25);
    v30 = v44;
    *v44 = v23;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))((char *)v30 + *(int *)(v24 + 20), v26, v27);
    sub_213DC0630(v29, (uint64_t)v30 + *(int *)(v24 + 24), &qword_253F04828);
    return (*(uint64_t (**)(size_t *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v30, 0, 1, v24);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v32 = sub_213EF2724();
    __swift_project_value_buffer(v32, (uint64_t)qword_253F08A00);
    v33 = sub_213EF270C();
    v34 = sub_213EF2CA0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = v10;
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_213DAB000, v33, v34, "Zero sessions in CompositeSession", v36, 2u);
      v37 = v36;
      v10 = v35;
      MEMORY[0x2199C53C4](v37, -1, -1);
    }

    return (*(uint64_t (**)(size_t *, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_213DCD000(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A7F0, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD02C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCD860(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD048(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCD9E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD064(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCDB4C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD080(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCDCB0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD09C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_253F06FF8, type metadata accessor for FeaturisedTurn);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD0C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCDE60(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD0E4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCDFC8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD100(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCE854(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A650, &qword_253F06990);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD12C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A858, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD158(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFF68(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A848, &qword_254D3A850);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD184(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCE130(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD1A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A7C8, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD1CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCF62C(a1, a2, a3, (_QWORD *)*v3, &qword_253F07020, &qword_253F06FB8);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD1F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeaturisedSession(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213DCD234(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCE854(a1, a2, a3, (_QWORD *)*v3, &qword_254D3D540, &qword_253F06968);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD260(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCE558(a1, a2, a3, *v3, &qword_254D3B058);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD284(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A600, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD2B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCE28C(a1, a2, a3, *v3, &qword_254D3A7D0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD2D4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A7D8, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD300(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A760, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD32C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCE28C(a1, a2, a3, *v3, &qword_254D3A780);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD350(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A610, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD37C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCE3E0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD398(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCF924(a1, a2, a3, *v3, &qword_254D3A770);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD3C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCE558(a1, a2, a3, *v3, &qword_254D3A5F8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD3E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCE6B0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD404(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCF62C(a1, a2, a3, (_QWORD *)*v3, &qword_254D3AF90, &qword_254D3AF98);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD430(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCE854(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A750, &qword_253F06AD8);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD45C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCE9F8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD478(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCEB90(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD494(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCED34(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD4B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCEEB8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD4CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFAA4(a1, a2, a3, (_QWORD *)*v3, &qword_254D3B048, &qword_254D3B050);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD4F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCF020(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD514(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A840, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD540(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A648, type metadata accessor for PlusContactSuggestionRuntimeSummary);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD56C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCF62C(a1, a2, a3, (_QWORD *)*v3, &qword_254D3B018, &qword_254D3B020);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD598(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCF62C(a1, a2, a3, (_QWORD *)*v3, &qword_254D3B028, &qword_254D3B030);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD5C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCF1A4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD5E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCF348(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD5FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A7F8, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD628(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFF68(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A730, &qword_254D3A738);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD654(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCF4B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD670(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCF62C(a1, a2, a3, (_QWORD *)*v3, &qword_254D3AFE0, &qword_254D3AFE8);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD69C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCF7B8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD6B8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFF68(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A710, &qword_253F06920);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD6E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A668, (uint64_t (*)(_QWORD))type metadata accessor for ResolvedPlusContactSuggestionRuntimeSummary);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD710(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCF924(a1, a2, a3, *v3, &qword_254D3B000);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD73C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFAA4(a1, a2, a3, (_QWORD *)*v3, &qword_254D3AFC0, &qword_254D3AFC8);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD768(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFF68(a1, a2, a3, (_QWORD *)*v3, &qword_254D3AFD0, &qword_253F04828);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD794(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_254D3A6F0, (uint64_t (*)(_QWORD))type metadata accessor for ContactSuggestionProvidedClassification);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD7C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFC30(a1, a2, a3, (_QWORD *)*v3, &qword_253F07010, (uint64_t (*)(_QWORD))type metadata accessor for SessionGroundTruths);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD7EC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_213DCFE10(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_213DCD808(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFF68(a1, a2, a3, (_QWORD *)*v3, &qword_254D3AF60, &qword_254D3AF68);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD834(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_213DCFF68(a1, a2, a3, (_QWORD *)*v3, &qword_254D3AF70, &qword_254D3AF78);
  *v3 = result;
  return result;
}

uint64_t sub_213DCD860(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCD9E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B060);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCDB4C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B068);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = v8 << 6;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCDCB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B070);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 11 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B078);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCDE4C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_213DCFC30(a1, a2, a3, a4, &qword_253F06FF8, type metadata accessor for FeaturisedTurn);
}

uint64_t sub_213DCDE60(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCDFC8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F07000);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE130(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F07028);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE28C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 32 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE3E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A6D0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE558(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE6B0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A810);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A818);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE854(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCE9F8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFB0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 3 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFB8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCEB90(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFA0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFA8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCED34(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EE0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  v15 = 2 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v10 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F04F08);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCEEB8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B040);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF020(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B038);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF1A4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B008);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B010);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF348(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A678);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF4B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 72 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF62C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF7B8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCF924(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 56 * v9;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCFAA4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11)
      memmove(v13 + 4, a4 + 4, 16 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCFC30(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCFE10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 8 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DCFF68(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t sub_213DD0148(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF48);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

_QWORD *sub_213DD02D0(_QWORD *a1)
{
  return sub_213DB6204(0, a1[2], 0, a1);
}

_QWORD *sub_213DD02E4(_QWORD *a1)
{
  return sub_213DB65E0(0, a1[2], 0, a1);
}

_QWORD *sub_213DD02F8(_QWORD *a1)
{
  return sub_213DB66EC(0, a1[2], 0, a1);
}

char *sub_213DD030C(uint64_t a1)
{
  return sub_213DB6818(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

size_t sub_213DD0320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v48 = (uint64_t)&v43 - v6;
  v7 = type metadata accessor for FeaturisedTurn(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v46 = (v10 + 32) & ~v10;
  v51 = MEMORY[0x24BEE4AF8] + v46;
  v52 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v43 = v10 | 7;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  v13 = 0;
LABEL_4:
  v15 = *(_QWORD *)(a1 + 16);
  if (v13 != v15)
  {
    if (v13 < v15)
    {
      while (1)
      {
        v16 = *(_QWORD *)(a1 + 32 + 8 * v13);
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRelease();
        if (v16)
          break;
LABEL_9:
        ++v13;
        v17 = *(_QWORD *)(a1 + 16);
        if (v13 == v17)
          goto LABEL_37;
        if (v13 >= v17)
          goto LABEL_43;
      }
      v14 = *(_QWORD *)(v16 + 16);
      if (!v14)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v7);
        result = sub_213DD0984((uint64_t)v5);
        goto LABEL_9;
      }
      v18 = 0;
      ++v13;
      while (1)
      {
        if (v18 >= v14)
          goto LABEL_44;
        v44 = v18;
        v45 = v12;
        v47 = *(_QWORD *)(v8 + 72);
        sub_213DCA7E4(v16 + v46 + v47 * v18, (uint64_t)v5, type metadata accessor for FeaturisedTurn);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
        v19 = v48;
        sub_213DC0630((uint64_t)v5, v48, &qword_253F069B0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v19, 1, v7) == 1)
        {
          swift_bridgeObjectRelease();
          v39 = v52;
          v12 = v45;
          goto LABEL_38;
        }
        result = sub_213DBB430(v19, v50, type metadata accessor for FeaturisedTurn);
        v20 = v45;
        if (!v45)
          break;
        v49 = v52;
        v21 = v44;
LABEL_35:
        v37 = __OFSUB__(v20, 1);
        v12 = v20 - 1;
        if (v37)
          goto LABEL_45;
        v18 = v21 + 1;
        v38 = v51;
        result = sub_213DBB430(v50, v51, type metadata accessor for FeaturisedTurn);
        v51 = v38 + v47;
        v52 = v49;
        v14 = *(_QWORD *)(v16 + 16);
        if (v18 == v14)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v5, 1, 1, v7);
          result = sub_213DD0984((uint64_t)v5);
          goto LABEL_4;
        }
      }
      v22 = v52[3];
      v21 = v44;
      if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0)
        goto LABEL_47;
      v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
      if (v23 <= 1)
        v24 = 1;
      else
        v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FF8);
      v25 = v46;
      v51 = v24;
      v26 = v47;
      v49 = (_QWORD *)swift_allocObject();
      result = _swift_stdlib_malloc_size(v49);
      if (!v26)
        goto LABEL_48;
      v27 = v26;
      v28 = result - v25;
      if (result - v25 == 0x8000000000000000 && v26 == -1)
        goto LABEL_49;
      v30 = v25;
      v31 = v28 / v26;
      v32 = v49;
      v33 = (unint64_t)v52;
      v49[2] = v51;
      v32[3] = 2 * (v28 / v27);
      v34 = (unint64_t)v32 + v25;
      v35 = *(_QWORD *)(v33 + 24) >> 1;
      v36 = v35 * v27;
      if (!*(_QWORD *)(v33 + 16))
      {
LABEL_34:
        v51 = v34 + v36;
        v20 = (v31 & 0x7FFFFFFFFFFFFFFFLL) - v35;
        result = swift_release();
        goto LABEL_35;
      }
      if ((unint64_t)v49 < v33 || v34 >= v33 + v30 + v36)
      {
        v51 = v34;
        v45 = v36;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        if (v49 == v52)
        {
LABEL_33:
          v52[2] = 0;
          goto LABEL_34;
        }
        v51 = v34;
        v45 = v36;
        swift_arrayInitWithTakeBackToFront();
      }
      v36 = v45;
      v34 = v51;
      goto LABEL_33;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_37:
  v19 = v48;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v48, 1, 1, v7);
  swift_bridgeObjectRelease();
  v39 = v52;
LABEL_38:
  swift_bridgeObjectRelease();
  result = sub_213DD0984(v19);
  v40 = v39[3];
  if (v40 < 2)
    return (size_t)v39;
  v41 = v40 >> 1;
  v37 = __OFSUB__(v41, v12);
  v42 = v41 - v12;
  if (!v37)
  {
    v39[2] = v42;
    return (size_t)v39;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of SessionStitcher.identifyCrossSessionRestatement(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for CompositeSession()
{
  return &type metadata for CompositeSession;
}

uint64_t sub_213DD0784()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_213DD07A8@<X0>(_QWORD *result@<X0>, _QWORD *(*a2)(_QWORD *__return_ptr, _QWORD *)@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD v8[2];
  _QWORD v9[2];
  char v10;

  v3 = result;
  v5 = *result;
  v6 = result[1];
  v7 = *((_BYTE *)result + 16);
  if (*((_BYTE *)result + 17) == 1)
  {
    *((_BYTE *)result + 17) = 0;
  }
  else if (*((_BYTE *)result + 16))
  {
    v7 = 1;
  }
  else
  {
    v8[0] = *result;
    v8[1] = v6;
    result = a2(v9, v8);
    v5 = v9[0];
    v6 = v9[1];
    v7 = v10;
    *v3 = v9[0];
    v3[1] = v6;
    *((_BYTE *)v3 + 16) = v7;
  }
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7;
  return result;
}

_QWORD *sub_213DD082C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213DD07A8(a1, *(_QWORD *(**)(_QWORD *__return_ptr, _QWORD *))(v2 + 16), a2);
}

unint64_t *sub_213DD0834@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_213DD08E0(a1, (uint64_t *)(v2 + 16), type metadata accessor for FeaturisedSession, a2);
}

_QWORD *sub_213DD0854@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = result[1];
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (v3 == v4)
  {
    v5 = 0;
    v6 = 0;
LABEL_5:
    *(_QWORD *)a3 = v5;
    *(_QWORD *)(a3 + 8) = v6;
    *(_BYTE *)(a3 + 16) = v3 == v4;
    return result;
  }
  v5 = *result + 1;
  if (__OFADD__(*result, 1))
  {
    __break(1u);
  }
  else
  {
    v6 = v3 + 1;
    if (!__OFADD__(v3, 1))
      goto LABEL_5;
  }
  __break(1u);
  return result;
}

_QWORD *sub_213DD08A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213DD0854(a1, v2 + 16, a2);
}

uint64_t sub_213DD08BC()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t *sub_213DD08E0@<X0>(unint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, _QWORD *a4@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v4 = *result;
  v5 = result[1];
  if (v5 < (uint64_t)*result)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = *a2;
  v8 = *(_QWORD *)(*a2 + 16);
  if (v8 >= v4 && (uint64_t)v8 >= v5)
  {
    v10 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
    *a4 = v7;
    a4[1] = v7 + ((v10 + 32) & ~v10);
    a4[2] = v4;
    a4[3] = (2 * v5) | 1;
    return (unint64_t *)swift_bridgeObjectRetain();
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t *sub_213DD0964@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_213DD08E0(a1, (uint64_t *)(v2 + 16), type metadata accessor for FeaturisedTurn, a2);
}

uint64_t sub_213DD0984(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213DD09E0()
{
  unint64_t result;

  result = qword_254D3B080;
  if (!qword_254D3B080)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaSuggestionTag, &type metadata for MediaSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3B080);
  }
  return result;
}

unint64_t sub_213DD0A28()
{
  unint64_t result;

  result = qword_254D3B0A8;
  if (!qword_254D3B0A8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionTag, &type metadata for ContactSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3B0A8);
  }
  return result;
}

uint64_t sub_213DD0A6C()
{
  return swift_initClassMetadata2();
}

void sub_213DD0AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2);
  v8 = (char *)sub_213DD0B94 + 4 * byte_213EF5D00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_213DD0B94()
{
  char v0;

  swift_getAssociatedConformanceWitness();
  v0 = sub_213EF2BF8();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

BOOL sub_213DD0CFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
  type metadata accessor for TagNominationFilter.TagMatchRule(255, v3, *(_QWORD *)(v1 + 88), v2);
  v4 = sub_213EF2AE4();
  swift_bridgeObjectRetain();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v4);
  v5 = sub_213EF29AC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

uint64_t sub_213DD0DE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_213DD0DFC()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TagNominationFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TagNominationFilter);
}

uint64_t sub_213DD0E2C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_213DD0E34()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_213DD0EC4(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    switch(*((_BYTE *)a2 + v6))
    {
      case 0:
        *a1 = *a2;
        *((_BYTE *)a1 + v6) = 0;
        swift_bridgeObjectRetain();
        break;
      case 1:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((_BYTE *)a1 + v6) = 1;
        break;
      case 2:
        *a1 = *a2;
        *((_BYTE *)a1 + v6) = 2;
        swift_bridgeObjectRetain();
        break;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((_BYTE *)a1 + v6) = 3;
        break;
      default:
        if (v6 <= 3)
          v11 = v6;
        else
          v11 = 4;
        __asm { BR              X13 }
        return result;
    }
  }
  return a1;
}

uint64_t sub_213DD1054(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 8)
    v4 = 8;
  switch(*(_BYTE *)(a1 + v4))
  {
    case 0:
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 1:
    case 3:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
      break;
    default:
      if (*(unsigned __int8 *)(a1 + v4) <= 3u)
        v5 = *(unsigned __int8 *)(a1 + v4);
      else
        v5 = 4;
      __asm { BR              X14 }
      return result;
  }
  return result;
}

_QWORD *sub_213DD1150(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  switch(*((_BYTE *)a2 + v6))
  {
    case 0:
      *a1 = *a2;
      *((_BYTE *)a1 + v6) = 0;
      swift_bridgeObjectRetain();
      return a1;
    case 1:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v8 = 1;
      goto LABEL_13;
    case 2:
      *a1 = *a2;
      *((_BYTE *)a1 + v6) = 2;
      swift_bridgeObjectRetain();
      return a1;
    case 3:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v8 = 3;
LABEL_13:
      *((_BYTE *)a1 + v6) = v8;
      return a1;
    default:
      if (v6 <= 3)
        v7 = v6;
      else
        v7 = 4;
      __asm { BR              X13 }
      return result;
  }
}

_QWORD *sub_213DD129C(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *result;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 8uLL)
      v6 = 8;
    else
      v6 = *(_QWORD *)(v5 + 64);
    switch(*((_BYTE *)a1 + v6))
    {
      case 0:
      case 2:
        swift_bridgeObjectRelease();
        break;
      case 1:
      case 3:
        (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        break;
      default:
        if (v6 <= 3)
          v7 = v6;
        else
          v7 = 4;
        __asm { BR              X12 }
        return result;
    }
    switch(*((_BYTE *)a2 + v6))
    {
      case 0:
        *a1 = *a2;
        *((_BYTE *)a1 + v6) = 0;
        swift_bridgeObjectRetain();
        return a1;
      case 1:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v9 = 1;
        goto LABEL_22;
      case 2:
        *a1 = *a2;
        *((_BYTE *)a1 + v6) = 2;
        swift_bridgeObjectRetain();
        return a1;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        v9 = 3;
LABEL_22:
        *((_BYTE *)a1 + v6) = v9;
        break;
      default:
        if (v6 <= 3)
          v8 = v6;
        else
          v8 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  return a1;
}

_QWORD *sub_213DD14A8(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  switch(*((_BYTE *)a2 + v6))
  {
    case 0:
      v8 = 0;
      *a1 = *a2;
      break;
    case 1:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v8 = 1;
      break;
    case 2:
      *a1 = *a2;
      v8 = 2;
      break;
    case 3:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v8 = 3;
      break;
    default:
      if (v6 <= 3)
        v7 = v6;
      else
        v7 = 4;
      __asm { BR              X13 }
      return result;
  }
  *((_BYTE *)a1 + v6) = v8;
  return a1;
}

_QWORD *sub_213DD15E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *result;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 8uLL)
      v6 = 8;
    else
      v6 = *(_QWORD *)(v5 + 64);
    switch(*((_BYTE *)a1 + v6))
    {
      case 0:
      case 2:
        swift_bridgeObjectRelease();
        break;
      case 1:
      case 3:
        (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        break;
      default:
        if (v6 <= 3)
          v7 = v6;
        else
          v7 = 4;
        __asm { BR              X12 }
        return result;
    }
    switch(*((_BYTE *)a2 + v6))
    {
      case 0:
        v9 = 0;
        *a1 = *a2;
        break;
      case 1:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v9 = 1;
        break;
      case 2:
        *a1 = *a2;
        v9 = 2;
        break;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v9 = 3;
        break;
      default:
        if (v6 <= 3)
          v8 = v6;
        else
          v8 = 4;
        __asm { BR              X12 }
        return result;
    }
    *((_BYTE *)a1 + v6) = v9;
  }
  return a1;
}

uint64_t sub_213DD17E8(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = 8;
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) > 8uLL)
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_21;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 252) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_21:
      v12 = *(unsigned __int8 *)(a1 + v5);
      if (v12 >= 4)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_21;
LABEL_14:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  return (v11 + 253);
}

void sub_213DD1930(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8)
    v6 = 8;
  v7 = v6 + 1;
  if (a3 < 0xFD)
  {
    v8 = 0;
  }
  else if (v7 <= 3)
  {
    v10 = ((a3 + ~(-1 << (8 * v7)) - 252) >> (8 * v7)) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v9 = a2 - 253;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v11 = v9 & ~(-1 << (8 * v7));
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_213DD1AFC(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 8)
    v2 = 8;
  result = *(unsigned __int8 *)(a1 + v2);
  if (result >= 4)
  {
    if (v2 <= 3)
      v4 = v2;
    else
      v4 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_213DD1BC0(_BYTE *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (a2 > 3)
  {
    v6 = a2 - 4;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 4;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 4;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for TagNominationFilter.TagMatchRule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TagNominationFilter.TagMatchRule);
}

uint64_t sub_213DD1CB4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

BOOL sub_213DD1CBC()
{
  return sub_213DD0CFC();
}

uint64_t sub_213DD1CE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t matched;
  char v6;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  matched = type metadata accessor for TagNominationFilter.TagMatchRule(0, v1, v2, v3);
  sub_213DD0AB0(v4, matched);
  return v6 & 1;
}

uint64_t dispatch thunk of ContactSuggestionOutcomeExtractor.init(picsStore:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ContactSuggestionOutcomeExtractor.extractSessionSuggestionOutcomes(session:classifications:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_213DD1D40(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_213DD1D48(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_213DD1DB4(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification, (void (*)(BOOL, uint64_t, uint64_t))sub_213DCD000);
}

uint64_t sub_213DD1D6C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_213DD1DB4(a1, a2, a3, type metadata accessor for FeaturisedTurn, (void (*)(BOOL, uint64_t, uint64_t))sub_213DCD09C);
}

uint64_t sub_213DD1D90(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_213DD1DB4(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification, (void (*)(BOOL, uint64_t, uint64_t))sub_213DCD1A0);
}

uint64_t sub_213DD1DB4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *);
  uint64_t v29;
  uint64_t v30;

  v22 = a5;
  v6 = a4;
  v28 = a1;
  v29 = a2;
  v8 = a4(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v26 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - v12;
  v14 = MEMORY[0x24BEE4AF8];
  v30 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
    v23 = v6;
    v24 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v18 = *(_QWORD *)(v27 + 72);
      sub_213DCA7E4(a3 + v17 + v18 * v15, (uint64_t)v13, v6);
      v14 = v29;
      v19 = v28(v13);
      if (v5)
      {
        sub_213DCA828((uint64_t)v13, v6);
        swift_release();
        swift_bridgeObjectRelease();
        return v14;
      }
      if ((v19 & 1) != 0)
      {
        sub_213DBB430((uint64_t)v13, v26, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v30;
        v21 = *(_QWORD *)(v30 + 16);
        v20 = *(_QWORD *)(v30 + 24);
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v16 = v30;
        }
        *(_QWORD *)(v16 + 16) = v21 + 1;
        v6 = v23;
        result = sub_213DBB430(v26, v16 + v17 + v21 * v18, v23);
        a3 = v24;
      }
      else
      {
        result = sub_213DCA828((uint64_t)v13, v6);
      }
      if (v25 == ++v15)
      {
        v14 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t CoreDuetEvent.getTimestamp()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_bridgeObjectRetain();
  sub_213DAF008(v5, (uint64_t)v4);
  swift_bridgeObjectRelease();
  v6 = sub_213EF1CF8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    v8 = swift_bridgeObjectRetain();
    sub_213DAF1EC(v8);
    v10 = v9;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      sub_213EF1CC8();
      v11 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v11, 1, v6);
    return sub_213DAFEC4((uint64_t)v4, &qword_253F04800);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v4, v6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
}

uint64_t FeaturisedSession.init(turns:sessionId:originalPlusId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;

  *a4 = a1;
  v7 = type metadata accessor for FeaturisedSession(0);
  v8 = (char *)a4 + *(int *)(v7 + 20);
  v9 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a2, v9);
  return sub_213DC0630(a3, (uint64_t)a4 + *(int *)(v7 + 24), &qword_253F04828);
}

uint64_t type metadata accessor for FeaturisedSession(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F06AE0);
}

uint64_t CoreDuetEvent.init(eventId:features:eventType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t CoreDuetEvent.eventId.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CoreDuetEvent.features.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoreDuetEvent.eventType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

double CoreDuetEvent.init(features:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t DynamicType;
  unint64_t v17;
  unint64_t v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25[2];
  uint64_t v26;
  uint64_t v27;

  v4 = sub_213DAF448(a1);
  if (!v5)
    goto LABEL_17;
  v6 = v4;
  v7 = v5;
  v8 = sub_213DAF454(a1);
  if (!v9)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v10 = v8;
  v11 = v9;
  v27 = MEMORY[0x24BEE4B08];
  v12 = MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  v13 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    v20 = v10;
    v21 = v6;
    v22 = v7;
    v14 = MEMORY[0x24BEE4AF8];
    v15 = a1 + 32;
    do
    {
      sub_213DAFDFC(v15, (uint64_t)v25);
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      *(_QWORD *)&v23 = swift_allocObject();
      sub_213DAFDFC((uint64_t)v25, v23 + 16);
      __swift_project_boxed_opaque_existential_1(&v23, v24);
      DynamicType = swift_getDynamicType();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      if ((sub_213DD5E5C((uint64_t *)&v23, DynamicType) & 1) != 0)
      {
        sub_213DB0BF0(v25, (uint64_t)&v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD234(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v26;
        v18 = *(_QWORD *)(v26 + 16);
        v17 = *(_QWORD *)(v26 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_213DCD234(v17 > 1, v18 + 1, 1);
          v14 = v26;
        }
        *(_QWORD *)(v14 + 16) = v18 + 1;
        sub_213DB0BF0(&v23, v14 + 40 * v18 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      }
      v15 += 40;
      --v13;
    }
    while (v13);
    v12 = v26;
    v6 = v21;
    v7 = v22;
    v10 = v20;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  return result;
}

uint64_t CoreDuetEvent.with(eventId:removedFeatures:newFeatures:eventType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t *v7;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t DynamicType;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  uint64_t v43;
  uint64_t v44;

  v9 = v7[2];
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  v35 = v7[1];
  v33 = v7[3];
  v32 = *v7;
  if (!v10)
  {
    swift_bridgeObjectRetain();
    if (!*(_QWORD *)(a4 + 16))
      goto LABEL_22;
    goto LABEL_9;
  }
  *(_QWORD *)&v42[0] = MEMORY[0x24BEE4AF8];
  sub_213DCD260(0, v10, 0);
  v13 = *(_QWORD *)&v42[0];
  v14 = (uint64_t *)(a3 + 32);
  v15 = *(_QWORD *)(*(_QWORD *)&v42[0] + 16);
  do
  {
    v16 = *v14;
    *(_QWORD *)&v42[0] = v13;
    v17 = *(_QWORD *)(v13 + 24);
    if (v15 >= v17 >> 1)
    {
      sub_213DCD260(v17 > 1, v15 + 1, 1);
      v13 = *(_QWORD *)&v42[0];
    }
    *(_QWORD *)(v13 + 16) = v15 + 1;
    *(_QWORD *)(v13 + 8 * v15 + 32) = v16;
    v14 += 2;
    ++v15;
    --v10;
  }
  while (v10);
  v18 = sub_213DDE11C(v13);
  swift_release();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_213DDDA90(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v20;
  if (*(_QWORD *)(a4 + 16))
  {
LABEL_9:
    *(_QWORD *)&v42[0] = a4;
    swift_bridgeObjectRetain();
    sub_213DB43C8(v9);
    v43 = v11;
    v44 = MEMORY[0x24BEE4B08];
    v21 = *(_QWORD *)(a4 + 16);
    swift_bridgeObjectRetain();
    if (v21)
    {
      v22 = MEMORY[0x24BEE4AF8];
      v23 = a4 + 32;
      do
      {
        sub_213DAFDFC(v23, (uint64_t)v42);
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        *(_QWORD *)&v40 = swift_allocObject();
        sub_213DAFDFC((uint64_t)v42, v40 + 16);
        __swift_project_boxed_opaque_existential_1(&v40, v41);
        DynamicType = swift_getDynamicType();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v40);
        if ((sub_213DD5E5C((uint64_t *)&v40, DynamicType) & 1) != 0)
        {
          sub_213DB0BF0(v42, (uint64_t)&v40);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_213DCD234(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v43;
          v26 = *(_QWORD *)(v43 + 16);
          v25 = *(_QWORD *)(v43 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_213DCD234(v25 > 1, v26 + 1, 1);
            v22 = v43;
          }
          *(_QWORD *)(v22 + 16) = v26 + 1;
          sub_213DB0BF0(&v40, v22 + 40 * v26 + 32);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
        }
        v23 += 40;
        --v21;
      }
      while (v21);
      v9 = v43;
    }
    else
    {
      v9 = v11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_22:
  v28 = v35;
  v27 = a5;
  v29 = a1;
  if (!a2)
  {
    swift_bridgeObjectRetain();
    v29 = v32;
    v30 = a6;
    if (a6)
      goto LABEL_25;
    goto LABEL_24;
  }
  v28 = a2;
  v30 = a6;
  if (!a6)
  {
LABEL_24:
    v27 = v33;
    v30 = swift_bridgeObjectRetain();
  }
LABEL_25:
  *a7 = v29;
  a7[1] = v28;
  a7[2] = v9;
  a7[3] = v27;
  a7[4] = v30;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213DD2778(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  sub_213DDF8F8();
  result = sub_213EF2BB0();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_213DD6CF0(&v14, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t FeaturisedTurn.init(turnId:features:coreDuetEvents:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  int *v11;

  v10 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v11 = (int *)type metadata accessor for FeaturisedTurn(0);
  *(_QWORD *)(a5 + v11[6]) = a2;
  *(_QWORD *)(a5 + v11[7]) = a3;
  return sub_213DC0630(a4, a5 + v11[5], &qword_253F04800);
}

uint64_t FeaturisedTurn.turnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FeaturisedTurn.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeaturisedTurn(0);
  return sub_213DCC3D8(v1 + *(int *)(v3 + 20), a1, &qword_253F04800);
}

uint64_t FeaturisedTurn.features.getter()
{
  type metadata accessor for FeaturisedTurn(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeaturisedTurn.coreDuetEvents.getter()
{
  type metadata accessor for FeaturisedTurn(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeaturisedTurn.friendlyName.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_213EF2EB0();
  swift_bridgeObjectRelease();
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06938, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_213EF31F8();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEB3C(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B030);
    sub_213DDE1D4();
    sub_213EF2820();
    swift_bridgeObjectRelease();
  }
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  return 0x7369727574616546;
}

uint64_t FeaturisedTurn.postITNUtterance.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEB3C(v0);
  swift_bridgeObjectRelease();
  if (!v1)
    return 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B030);
  sub_213DDE1D4();
  v2 = sub_213EF2820();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Array<A>.getSessionId()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8) + 80);
    v5 = a1 + ((v4 + 32) & ~v4);
    v6 = sub_213EF1D64();
    v7 = *(_QWORD *)(v6 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v5, v6);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v9 = a2;
    v10 = 0;
    v11 = v6;
  }
  else
  {
    v11 = sub_213EF1D64();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  return v8(v9, v10, 1, v11);
}

uint64_t Array<A>.getOriginalPlusId()@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t result;
  void (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;

  v48 = a2;
  v55 = sub_213EF1D64();
  v3 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for FeaturisedTurn(0);
  v6 = *(_QWORD *)(v54 - 8);
  v7 = MEMORY[0x24BDAC7A8](v54);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v42 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v42 - v19;
  v53 = *(_QWORD *)(a1 + 16);
  if (!v53)
  {
    v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
    swift_bridgeObjectRetain();
    v32((uint64_t)v48, 1, 1, v55);
    return swift_bridgeObjectRelease();
  }
  v44 = v18;
  v45 = v17;
  v46 = v9;
  v47 = v16;
  v52 = v3;
  v43 = v5;
  v51 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v50 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v21 = 0;
  while (1)
  {
    v22 = a1;
    v49 = v51 + v50 * v21;
    sub_213DCA7E4(v49, (uint64_t)v11, type metadata accessor for FeaturisedTurn);
    v23 = *(_QWORD *)&v11[*(int *)(v54 + 24)];
    v24 = *(_QWORD *)(v23 + 16);
    if (v24)
    {
      v25 = v23 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v25, (uint64_t)&v56);
        sub_213DAFDFC((uint64_t)&v56, (uint64_t)v58);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for PlusClientEventIdFeature(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v56);
        v25 += 40;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          a1 = v22;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v56, (uint64_t)v58);
      a1 = v22;
    }
    else
    {
      a1 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_9:
      v59 = 0;
      memset(v58, 0, sizeof(v58));
    }
    v26 = v55;
    v27 = v52;
    sub_213DCC3D8((uint64_t)v58, (uint64_t)&v56, &qword_253F06970);
    if (v57)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for PlusClientEventIdFeature(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain();
        sub_213EF23D0();
        swift_release_n();
        sub_213DAFEC4((uint64_t)v58, &qword_253F06970);
        v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
        v26 = v55;
        v28(v20, 0, 1, v55);
        goto LABEL_17;
      }
      v26 = v55;
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v56, &qword_253F06970);
    }
    sub_213DAFEC4((uint64_t)v58, &qword_253F06970);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
    v28(v20, 1, 1, v26);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_213DCA828((uint64_t)v11, type metadata accessor for FeaturisedTurn);
    swift_bridgeObjectRelease();
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
    v30 = v29(v20, 1, v26);
    result = sub_213DAFEC4((uint64_t)v20, &qword_253F04828);
    if (v30 != 1)
      break;
    if (++v21 == v53)
      goto LABEL_22;
  }
  if (v21 == v53)
  {
LABEL_22:
    v28(v48, 1, 1, v55);
    return swift_bridgeObjectRelease();
  }
  if (v21 >= v53)
  {
    __break(1u);
    goto LABEL_28;
  }
  v33 = (uint64_t)v46;
  sub_213DCA7E4(v49, (uint64_t)v46, type metadata accessor for FeaturisedTurn);
  v34 = swift_bridgeObjectRetain();
  v35 = v44;
  sub_213DAF410(v34, v44);
  swift_bridgeObjectRelease();
  sub_213DCA828(v33, type metadata accessor for FeaturisedTurn);
  v36 = v45;
  sub_213DC0630(v35, v45, &qword_253F04828);
  v37 = v47;
  sub_213DCC3D8(v36, v47, &qword_253F04828);
  v38 = v55;
  result = v29((char *)v37, 1, v55);
  if ((_DWORD)result == 1)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
  v40 = v43;
  v39(v43, v37, v38);
  sub_213DAFEC4(v36, &qword_253F04828);
  v41 = v48;
  v39(v48, (uint64_t)v40, v38);
  v28(v41, 0, 1, v38);
  return swift_bridgeObjectRelease();
}

uint64_t Array<A>.getOriginalRequestID(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  void (*v49)(uint64_t, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  unint64_t v75;
  char *v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t result;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, unint64_t, uint64_t);
  void (*v114)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v115;
  uint64_t v116;
  _OWORD v117[2];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v95 = a3;
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v106 = (uint64_t)&v89 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v110 = (char *)&v89 - v12;
  v97 = type metadata accessor for FeaturisedTurn(0);
  v13 = *(_QWORD *)(v97 - 8);
  v14 = MEMORY[0x24BDAC7A8](v97);
  v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v89 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v111 = (uint64_t)&v89 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v99 = (uint64_t)&v89 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v93 = (uint64_t)&v89 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v94 = (uint64_t)&v89 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v109 = (char *)&v89 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v89 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v96 = (uint64_t)&v89 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v98 = (char *)&v89 - v38;
  sub_213DAFDFC(a1, (uint64_t)&v119);
  v103 = *(_QWORD *)(a2 + 16);
  v100 = a2;
  if (v103)
  {
    v89 = v26;
    v90 = v16;
    v91 = v9;
    v105 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v104 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain();
    v39 = 0;
    v40 = v6;
    v41 = v109;
    v92 = v35;
    while (1)
    {
      v107 = v39;
      sub_213DCA7E4(v105 + v104 * v39, (uint64_t)v19, type metadata accessor for FeaturisedTurn);
      v42 = v120;
      v43 = v121;
      __swift_project_boxed_opaque_existential_1(&v119, v120);
      v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
      v45 = *(_QWORD *)(v44 + 16);
      v102 = v44;
      if (v45)
        break;
      v114 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
LABEL_10:
      v114(v41, 1, 1, v5);
LABEL_11:
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v19, type metadata accessor for FeaturisedTurn);
      v39 = v107 + 1;
      if (v107 + 1 == v103)
        goto LABEL_45;
    }
    v101 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v46 = v44 + v101;
    v47 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v112 = *(_QWORD *)(v40 + 72);
    v113 = v47;
    while (1)
    {
      v113(v41, v46, v5);
      v114 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
      v114(v41, 0, 1, v5);
      v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v48(v41, 1, v5) == 1)
        goto LABEL_11;
      v108 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v48;
      v49 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
      v50 = v5;
      v51 = v106;
      v49(v106, v41, v50);
      sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v52 = (uint64_t)v19;
      v53 = sub_213EF2838();
      v54 = v40;
      v55 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v56 = v51;
      v5 = v50;
      v55(v56, v50);
      if ((v53 & 1) != 0)
        break;
      v46 += v112;
      --v45;
      v40 = v54;
      v19 = (char *)v52;
      v41 = v109;
      if (!v45)
        goto LABEL_10;
    }
    v109 = (char *)v49;
    swift_bridgeObjectRelease();
    sub_213DCA828(v52, type metadata accessor for FeaturisedTurn);
    v57 = v103;
    v58 = v107;
    if (v107 == v103)
      goto LABEL_45;
    v59 = v92;
LABEL_16:
    if (v58 >= v57)
      goto LABEL_52;
    v107 = v58;
    v106 = v105 + v58 * v104;
    v60 = v99;
    sub_213DCA7E4(v106, v99, type metadata accessor for FeaturisedTurn);
    v61 = *(_QWORD *)(v60 + *(int *)(v97 + 24));
    v62 = *(_QWORD *)(v61 + 16);
    if (v62)
    {
      v63 = v61 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v63, (uint64_t)&v115);
        sub_213DAFDFC((uint64_t)&v115, (uint64_t)v117);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF2208();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v115);
        v63 += 40;
        if (!--v62)
        {
          swift_bridgeObjectRelease();
          v57 = v103;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v115, (uint64_t)v117);
      v57 = v103;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_23:
      v118 = 0;
      memset(v117, 0, sizeof(v117));
    }
    sub_213DCC3D8((uint64_t)v117, (uint64_t)&v115, &qword_253F06970);
    if (v116)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      sub_213EF2208();
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain();
        sub_213EF23D0();
        swift_release_n();
        v64 = 0;
LABEL_30:
        sub_213DAFEC4((uint64_t)v117, &qword_253F06970);
        v65 = v98;
        v114(v98, v64, 1, v5);
        swift_bridgeObjectRelease();
        sub_213DCA828(v99, type metadata accessor for FeaturisedTurn);
        v66 = (uint64_t)v65;
        v67 = v96;
        sub_213DC0630(v66, v96, &qword_253F04828);
        swift_bridgeObjectRelease();
        v68 = v108(v67, 1, v5);
        sub_213DAFEC4(v67, &qword_253F04828);
        if (v68 != 1)
        {
          v81 = v91;
          v82 = (uint64_t)v90;
          v83 = (uint64_t)v89;
          v84 = (void (*)(char *, uint64_t, uint64_t))v109;
          if (v107 == v57)
            goto LABEL_45;
          sub_213DCA7E4(v106, (uint64_t)v90, type metadata accessor for FeaturisedTurn);
          v85 = swift_bridgeObjectRetain();
          v86 = v93;
          sub_213DAEFF4(v85, v93);
          swift_bridgeObjectRelease();
          sub_213DCA828(v82, type metadata accessor for FeaturisedTurn);
          v87 = v94;
          sub_213DC0630(v86, v94, &qword_253F04828);
          sub_213DCC3D8(v87, v83, &qword_253F04828);
          if (v108(v83, 1, v5) != 1)
          {
            v84(v81, v83, v5);
            sub_213DAFEC4(v87, &qword_253F04828);
            v88 = v95;
            v84(v95, (uint64_t)v81, v5);
            v78 = v88;
            v79 = 0;
            goto LABEL_46;
          }
          goto LABEL_55;
        }
        if (v107 == v57)
          goto LABEL_53;
        v69 = v107 + 1;
        if (__OFADD__(v107, 1))
        {
LABEL_54:
          __break(1u);
LABEL_55:
          result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
          __break(1u);
          return result;
        }
        if (v69 == v57)
          goto LABEL_45;
        while (v69 < v57)
        {
          v107 = v69;
          sub_213DCA7E4(v105 + v69 * v104, v111, type metadata accessor for FeaturisedTurn);
          v70 = v120;
          v71 = v121;
          __swift_project_boxed_opaque_existential_1(&v119, v120);
          v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 16))(v70, v71);
          v73 = *(_QWORD *)(v72 + 16);
          v74 = (unsigned int (*)(char *, uint64_t, uint64_t))v108;
          if (v73)
          {
            v75 = v72 + v101;
            while (1)
            {
              v113(v59, v75, v5);
              v114(v59, 0, 1, v5);
              if (v74(v59, 1, v5) == 1)
                break;
              v76 = v110;
              ((void (*)(char *, char *, uint64_t))v109)(v110, v59, v5);
              v77 = sub_213EF2838();
              v55((uint64_t)v76, v5);
              if ((v77 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                sub_213DCA828(v111, type metadata accessor for FeaturisedTurn);
                v57 = v103;
                v58 = v107;
                if (v107 == v103)
                  goto LABEL_45;
                goto LABEL_16;
              }
              v75 += v112;
              if (!--v73)
                goto LABEL_40;
            }
          }
          else
          {
LABEL_40:
            v114(v59, 1, 1, v5);
          }
          swift_bridgeObjectRelease();
          sub_213DCA828(v111, type metadata accessor for FeaturisedTurn);
          v69 = v107 + 1;
          if (__OFADD__(v107, 1))
            goto LABEL_51;
          v57 = v103;
          if (v69 == v103)
            goto LABEL_45;
        }
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v115, &qword_253F06970);
    }
    v64 = 1;
    goto LABEL_30;
  }
  v114 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
LABEL_45:
  v78 = v95;
  v79 = 1;
LABEL_46:
  v114(v78, v79, 1, v5);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
}

uint64_t sub_213DD3D0C()
{
  uint64_t result;

  type metadata accessor for FeaturisedSession(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B288);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3B1F0 = 91;
  *(_QWORD *)algn_254D3B1F8 = 0xE100000000000000;
  return result;
}

uint64_t FeaturisedSession.turns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeaturisedSession.sessionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeaturisedSession(0) + 20);
  v4 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FeaturisedSession.originalPlusId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeaturisedSession(0);
  return sub_213DCC3D8(v1 + *(int *)(v3 + 24), a1, &qword_253F04828);
}

uint64_t FeaturisedSession.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - v7;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeaturisedSession(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)(a1 + 16))
  {
    v17 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8) + 80);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v18(v8, a1 + ((v17 + 32) & ~v17), v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v18((char *)v16 + *(int *)(v13 + 20), (uint64_t)v12, v9);
      Array<A>.getOriginalPlusId()(a1, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_213DC0630((uint64_t)v6, (uint64_t)v16 + *(int *)(v13 + 24), &qword_253F04828);
      *v16 = a1;
      v19 = v31;
      sub_213DBB430((uint64_t)v16, v31, type metadata accessor for FeaturisedSession);
      v20 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, v20, 1, v13);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_213DAFEC4((uint64_t)v8, &qword_253F04828);
  if (qword_253F04A88 != -1)
    swift_once();
  v21 = sub_213EF2724();
  __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
  v22 = sub_213EF270C();
  v23 = sub_213EF2CA0();
  v24 = os_log_type_enabled(v22, v23);
  v19 = v31;
  if (v24)
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v33 = v26;
    *(_DWORD *)v25 = 136315138;
    if (qword_254D39F78 != -1)
      swift_once();
    v27 = qword_254D3B1F0;
    v28 = *(_QWORD *)algn_254D3B1F8;
    swift_bridgeObjectRetain();
    v32 = sub_213DB0570(v27, v28, &v33);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v22, v23, "%s FeaturisedSession not created, no sessionId available", v25, 0xCu);
    v20 = 1;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v26, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);

  }
  else
  {

    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v19, v20, 1, v13);
}

uint64_t FeaturisedSession.filter(_:)@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v8 = *v3;
  swift_bridgeObjectRetain();
  result = sub_213DD1DB4(a1, a2, v8, type metadata accessor for FeaturisedTurn, (void (*)(BOOL, uint64_t, uint64_t))sub_213DCD09C);
  if (!v4)
  {
    v10 = result;
    v11 = type metadata accessor for FeaturisedSession(0);
    v12 = *(int *)(v11 + 20);
    v13 = (char *)v3 + v12;
    v14 = (char *)a3 + v12;
    v15 = sub_213EF1D64();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, v13, v15);
    result = sub_213DCC3D8((uint64_t)v3 + *(int *)(v11 + 24), (uint64_t)a3 + *(int *)(v11 + 24), &qword_253F04828);
    *a3 = v10;
  }
  return result;
}

uint64_t FeaturisedSession.findEvent(eventId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _OWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v34 = a3;
  v6 = type metadata accessor for FeaturisedTurn(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v35 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v36 = (uint64_t)&v34 - v11;
  v41 = *v3;
  result = swift_bridgeObjectRetain_n();
  v40 = 0;
  while (1)
  {
    v22 = v40;
    v23 = *(_QWORD *)(v41 + 16);
    if (v40 == v23)
    {
      v24 = 1;
      v26 = v38;
      v25 = v39;
      v28 = v36;
      v27 = (uint64_t)v37;
      goto LABEL_15;
    }
    v26 = v38;
    v25 = v39;
    v28 = v36;
    v27 = (uint64_t)v37;
    if (v40 >= v23)
      break;
    sub_213DCA7E4(v41+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v40, v36, type metadata accessor for FeaturisedTurn);
    v24 = 0;
    ++v22;
LABEL_15:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v28, v24, 1, v25);
    sub_213DC0630(v28, v27, &qword_253F069B0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v25) == 1)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      v33 = v34;
      v34[4] = 0;
      *v33 = 0u;
      v33[1] = 0u;
      return result;
    }
    v40 = v22;
    v29 = v35;
    sub_213DBB430(v27, v35, type metadata accessor for FeaturisedTurn);
    v30 = *(_QWORD *)(v29 + *(int *)(v25 + 28));
    swift_bridgeObjectRetain();
    sub_213DCA828(v29, type metadata accessor for FeaturisedTurn);
    result = swift_bridgeObjectRelease();
    v31 = v30;
    if (v30)
    {
      v13 = 0;
      v14 = (uint64_t *)(v30 + 64);
      while (1)
      {
        v15 = *(_QWORD *)(v31 + 16);
        if (v13 == v15)
          break;
        if (v13 >= v15)
        {
          __break(1u);
          goto LABEL_22;
        }
        v17 = *(v14 - 4);
        v16 = *(v14 - 3);
        v19 = *(v14 - 2);
        v18 = *(v14 - 1);
        v20 = *v14;
        if (v17 == a1 && v16 == a2)
        {
          v17 = a1;
          v16 = a2;
LABEL_19:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease_n();
          v32 = v34;
          *v34 = v17;
          v32[1] = v16;
          v32[2] = v19;
          v32[3] = v18;
          v32[4] = v20;
          return result;
        }
        v14 += 5;
        ++v13;
        result = sub_213EF3234();
        if ((result & 1) != 0)
          goto LABEL_19;
      }
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t FeaturisedSession.getOriginalRequestID(for:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  void (*v48)(uint64_t, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char v78;
  uint64_t result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  void (*v87)(uint64_t, char *, uint64_t);
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t, uint64_t, uint64_t);
  uint64_t v108;
  unint64_t v109;
  void (*v110)(uint64_t, char *, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, unint64_t, uint64_t);
  void (*v115)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v116;
  uint64_t v117;
  _OWORD v118[2];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  v96 = a2;
  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v92 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v108 = (uint64_t)&v90 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v111 = (char *)&v90 - v10;
  v98 = type metadata accessor for FeaturisedTurn(0);
  v11 = *(_QWORD *)(v98 - 8);
  v12 = MEMORY[0x24BDAC7A8](v98);
  v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v90 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v112 = (uint64_t)&v90 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v100 = (uint64_t)&v90 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v95 = (uint64_t)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v93 = (uint64_t)&v90 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v94 = (uint64_t)&v90 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v90 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v90 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31);
  v97 = (uint64_t)&v90 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v99 = (char *)&v90 - v36;
  v37 = *v2;
  sub_213DAFDFC(a1, (uint64_t)&v120);
  v38 = *(_QWORD *)(v37 + 16);
  v103 = v37;
  v106 = v38;
  if (v38)
  {
    v90 = v14;
    v105 = v37 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v104 = *(_QWORD *)(v11 + 72);
    swift_bridgeObjectRetain();
    v39 = 0;
    v40 = v5;
    v91 = v33;
    while (1)
    {
      v109 = v39;
      sub_213DCA7E4(v105 + v104 * v39, (uint64_t)v17, type metadata accessor for FeaturisedTurn);
      v42 = v121;
      v41 = v122;
      __swift_project_boxed_opaque_existential_1(&v120, v121);
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v42, v41);
      v44 = *(_QWORD *)(v43 + 16);
      v102 = v43;
      if (v44)
        break;
      v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
LABEL_10:
      v115(v30, 1, 1, v4);
LABEL_11:
      swift_bridgeObjectRelease();
      sub_213DCA828((uint64_t)v17, type metadata accessor for FeaturisedTurn);
      v39 = v109 + 1;
      if (v109 + 1 == v106)
        goto LABEL_47;
    }
    v101 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v45 = v43 + v101;
    v46 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v113 = *(_QWORD *)(v40 + 72);
    v114 = v46;
    while (1)
    {
      v114(v30, v45, v4);
      v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
      v115(v30, 0, 1, v4);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      if (v47(v30, 1, v4) == 1)
        goto LABEL_11;
      v107 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v47;
      v48 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
      v49 = v4;
      v50 = v108;
      v51 = v30;
      v48(v108, v30, v49);
      sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v52 = (uint64_t)v17;
      LODWORD(v110) = sub_213EF2838();
      v53 = v40;
      v54 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v55 = v50;
      v4 = v49;
      v54(v55, v49);
      if ((v110 & 1) != 0)
        break;
      v45 += v113;
      --v44;
      v40 = v53;
      v17 = (char *)v52;
      v30 = v51;
      if (!v44)
        goto LABEL_10;
    }
    v110 = v48;
    swift_bridgeObjectRelease();
    sub_213DCA828(v52, type metadata accessor for FeaturisedTurn);
    v56 = v109;
    if (v109 == v106)
      goto LABEL_47;
    v57 = v103;
    v58 = v107;
    v59 = v91;
LABEL_16:
    if ((v56 & 0x8000000000000000) != 0)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    if (v56 >= *(_QWORD *)(v57 + 16))
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v108 = v105 + v56 * v104;
    v60 = v100;
    v61 = v56;
    sub_213DCA7E4(v108, v100, type metadata accessor for FeaturisedTurn);
    v62 = *(_QWORD *)(v60 + *(int *)(v98 + 24));
    v63 = *(_QWORD *)(v62 + 16);
    v109 = v61;
    if (v63)
    {
      v64 = v62 + 32;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v64, (uint64_t)&v116);
        sub_213DAFDFC((uint64_t)&v116, (uint64_t)v118);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF2208();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v116);
        v64 += 40;
        if (!--v63)
        {
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v116, (uint64_t)v118);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_24:
      v119 = 0;
      memset(v118, 0, sizeof(v118));
    }
    sub_213DCC3D8((uint64_t)v118, (uint64_t)&v116, &qword_253F06970);
    if (v117)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      sub_213EF2208();
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain();
        sub_213EF23D0();
        swift_release_n();
        v65 = 0;
LABEL_31:
        sub_213DAFEC4((uint64_t)v118, &qword_253F06970);
        v66 = v99;
        v115(v99, v65, 1, v4);
        swift_bridgeObjectRelease();
        sub_213DCA828(v100, type metadata accessor for FeaturisedTurn);
        v67 = (uint64_t)v66;
        v68 = v97;
        sub_213DC0630(v67, v97, &qword_253F04828);
        swift_bridgeObjectRelease();
        v69 = v58(v68, 1, v4);
        sub_213DAFEC4(v68, &qword_253F04828);
        if (v69 != 1)
        {
          if (v109 == v106)
            goto LABEL_47;
          if (v109 < *(_QWORD *)(v57 + 16))
          {
            v80 = (uint64_t)v90;
            sub_213DCA7E4(v108, (uint64_t)v90, type metadata accessor for FeaturisedTurn);
            v81 = swift_bridgeObjectRetain();
            v82 = v93;
            sub_213DAEFF4(v81, v93);
            swift_bridgeObjectRelease();
            sub_213DCA828(v80, type metadata accessor for FeaturisedTurn);
            v83 = v82;
            v84 = v94;
            sub_213DC0630(v83, v94, &qword_253F04828);
            v85 = v95;
            sub_213DCC3D8(v84, v95, &qword_253F04828);
            v86 = v58(v85, 1, v4);
            v87 = v110;
            if (v86 != 1)
            {
              v88 = v92;
              v110((uint64_t)v92, (char *)v85, v4);
              sub_213DAFEC4(v84, &qword_253F04828);
              v89 = v96;
              v87((uint64_t)v96, v88, v4);
              v115(v89, 0, 1, v4);
              goto LABEL_48;
            }
            goto LABEL_61;
          }
LABEL_60:
          __break(1u);
LABEL_61:
          result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v120);
          __break(1u);
          return result;
        }
        if (v109 == v106)
          goto LABEL_58;
        v70 = v109 + 1;
        if (__OFADD__(v109, 1))
        {
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        v71 = v109 + 1;
        v108 = v109 + 1;
        if (v70 == v106)
          goto LABEL_47;
        while ((v70 & 0x8000000000000000) == 0)
        {
          if (v71 >= *(_QWORD *)(v57 + 16))
            goto LABEL_54;
          v109 = v71;
          sub_213DCA7E4(v105 + v71 * v104, v112, type metadata accessor for FeaturisedTurn);
          v72 = v121;
          v73 = v122;
          __swift_project_boxed_opaque_existential_1(&v120, v121);
          v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73);
          v75 = *(_QWORD *)(v74 + 16);
          if (v75)
          {
            v76 = v74 + v101;
            while (1)
            {
              v114(v59, v76, v4);
              v115(v59, 0, 1, v4);
              if (v58((uint64_t)v59, 1, v4) == 1)
                break;
              v77 = v111;
              v110((uint64_t)v111, v59, v4);
              v78 = sub_213EF2838();
              v54((uint64_t)v77, v4);
              if ((v78 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                sub_213DCA828(v112, type metadata accessor for FeaturisedTurn);
                v56 = v109;
                v57 = v103;
                if (v109 == v106)
                  goto LABEL_47;
                goto LABEL_16;
              }
              v76 += v113;
              if (!--v75)
                goto LABEL_42;
            }
          }
          else
          {
LABEL_42:
            v115(v59, 1, 1, v4);
          }
          swift_bridgeObjectRelease();
          sub_213DCA828(v112, type metadata accessor for FeaturisedTurn);
          v71 = v109 + 1;
          v57 = v103;
          if (__OFADD__(v109, 1))
            goto LABEL_55;
          v70 = v108;
          if (v71 == v106)
            goto LABEL_47;
        }
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v116, &qword_253F06970);
    }
    v65 = 1;
    goto LABEL_31;
  }
  v115 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
LABEL_47:
  v115(v96, 1, 1, v4);
LABEL_48:
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v120);
}

uint64_t FeaturisedSession.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_213DD507C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_213EF2E44();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_213EF1E30();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_213EF2E38();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v10 = sub_213DD6E0C(v7, result + 1);
    v22 = v10;
    if (*(_QWORD *)(v10 + 24) <= *(_QWORD *)(v10 + 16))
    {
      swift_retain();
      sub_213DD7260();
      v11 = v22;
    }
    else
    {
      v11 = v10;
      swift_retain();
    }
    sub_213DD9194(a2, v11);
    *v3 = v11;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_213EF32F4();
  swift_bridgeObjectRetain();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v20 = v2;
  v12 = sub_213EF3330();
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v20;
    *v20 = 0x8000000000000000;
    v19 = swift_retain();
    sub_213DD93B8(v19, v14, isUniquelyReferenced_nonNull_native);
    *v20 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v15 = ~v13;
  while (1)
  {
    sub_213EF32F4();
    swift_retain();
    if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    {
      sub_213EF330C();
      sub_213EF28BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_213EF330C();
    }
    v16 = sub_213EF3330();
    sub_213EF32F4();
    if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    {
      sub_213EF330C();
      sub_213EF28BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_213EF330C();
    }
    v17 = sub_213EF3330();
    swift_release();
    if (v16 == v17)
      break;
    v14 = (v14 + 1) & v15;
    if (((*(_QWORD *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_23;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v20 + 48) + 8 * v14);
  swift_retain();
  return 0;
}

uint64_t sub_213DD5404(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56[20];
  uint64_t v57[10];
  uint64_t v58[10];
  uint64_t v59[10];
  char v60[8];
  uint64_t v61;
  char v62[8];
  uint64_t v63;
  char v64[8];
  uint64_t v65;
  char v66[8];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_213EF2E44();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v68 = v8;
      sub_213EF1ED8();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v56[0];
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_213EF2E38();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v20 = sub_213DD6FD8(v7, result + 1);
    v56[0] = v20;
    if (*(_QWORD *)(v20 + 24) <= *(_QWORD *)(v20 + 16))
    {
      swift_retain();
      sub_213DD74FC();
      v21 = v56[0];
    }
    else
    {
      v21 = v20;
      swift_retain();
    }
    sub_213DD9278(a2, v21);
    *v3 = v21;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v38 = v2;
  sub_213EF32F4();
  v41 = v6;
  swift_bridgeObjectRetain();
  v42 = a2;
  sub_213E6EFF8(a2, v57);
  v10 = v57[0];
  v11 = v57[1];
  v12 = v57[2];
  v13 = v57[3];
  v14 = v57[4];
  v15 = v57[5];
  v16 = v57[6];
  v17 = v57[7];
  v18 = v57[8];
  v19 = v57[9];
  sub_213DC0630((uint64_t)v57, (uint64_t)v66, &qword_254D3AB00);
  if (v67 == 1)
  {
    sub_213EF330C();
  }
  else
  {
    v68 = v10;
    v69 = v11;
    v70 = v12;
    v71 = v13;
    v72 = v14;
    v73 = v15;
    v74 = v16;
    v75 = v17;
    v76 = v18;
    v77 = v19;
    sub_213EF330C();
    sub_213E54A84();
    sub_213DC077C(v57);
  }
  v22 = sub_213EF3330();
  v23 = v42;
  v24 = -1 << *(_BYTE *)(v41 + 32);
  v25 = v22 & ~v24;
  if (((*(_QWORD *)(v41 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v56[0] = *v38;
    *v38 = 0x8000000000000000;
    swift_retain();
    sub_213DD9634(v23, v25, isUniquelyReferenced_nonNull_native);
    *v38 = v56[0];
    swift_bridgeObjectRelease();
    *a1 = v23;
    return 1;
  }
  v40 = ~v24;
  while (1)
  {
    v55 = v25;
    v54 = swift_retain();
    sub_213E6EFF8(v54, v58);
    v26 = v58[0];
    v27 = v58[1];
    v29 = v58[2];
    v28 = v58[3];
    v50 = v58[4];
    v45 = v58[6];
    v52 = v58[7];
    v53 = v58[5];
    v43 = v58[8];
    v48 = v58[9];
    sub_213E6EFF8(v23, v59);
    v30 = v59[0];
    v31 = v59[1];
    v33 = v59[2];
    v32 = v59[3];
    v34 = v59[5];
    v49 = v59[4];
    v51 = v59[7];
    v44 = v59[8];
    v46 = v59[6];
    v47 = v59[9];
    sub_213DC0630((uint64_t)v58, (uint64_t)v64, &qword_254D3AB00);
    if (v65 == 1)
    {
      sub_213DC0630((uint64_t)v59, (uint64_t)v62, &qword_254D3AB00);
      if (v63 == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v37 = v55;
        goto LABEL_65;
      }
LABEL_19:
      v56[0] = v26;
      v56[1] = v27;
      v56[2] = v29;
      v56[3] = v28;
      v56[4] = v50;
      v56[5] = v53;
      v56[6] = v45;
      v56[7] = v52;
      v56[8] = v43;
      v56[9] = v48;
      v56[10] = v30;
      v56[11] = v31;
      v56[12] = v33;
      v56[13] = v32;
      v56[14] = v49;
      v56[15] = v34;
      v56[16] = v46;
      v56[17] = v51;
      v56[18] = v44;
      v56[19] = v47;
      sub_213DC0674(v56);
LABEL_47:
      swift_release();
      v23 = v42;
      v37 = v55;
      goto LABEL_48;
    }
    sub_213DC0630((uint64_t)v59, (uint64_t)v60, &qword_254D3AB00);
    if (v61 == 1)
      goto LABEL_19;
    if (v27)
    {
      if (!v31 || (v26 != v30 || v27 != v31) && (sub_213EF3234() & 1) == 0)
      {
LABEL_46:
        sub_213DC077C(v59);
        sub_213DC077C(v58);
        goto LABEL_47;
      }
    }
    else if (v31)
    {
      goto LABEL_46;
    }
    if (v28)
    {
      if (!v32 || (v29 != v33 || v28 != v32) && (sub_213EF3234() & 1) == 0)
        goto LABEL_46;
    }
    else if (v32)
    {
      goto LABEL_46;
    }
    if (v53)
    {
      if (!v34 || (v50 != v49 || v53 != v34) && (sub_213EF3234() & 1) == 0)
        goto LABEL_46;
    }
    else if (v34)
    {
      goto LABEL_46;
    }
    if (v52)
    {
      v23 = v42;
      v37 = v55;
      if (!v51 || (v45 != v46 || v52 != v51) && (sub_213EF3234() & 1) == 0)
      {
LABEL_57:
        sub_213DC077C(v59);
        sub_213DC077C(v58);
LABEL_58:
        swift_release();
        goto LABEL_48;
      }
    }
    else
    {
      v23 = v42;
      v37 = v55;
      if (v51)
        goto LABEL_57;
    }
    if (!v48)
    {
      sub_213DC077C(v59);
      sub_213DC077C(v58);
      if (!v47)
        goto LABEL_67;
      goto LABEL_58;
    }
    if (!v47)
      goto LABEL_57;
    if (v43 == v44 && v48 == v47)
      break;
    v35 = sub_213EF3234();
    sub_213DC077C(v59);
    sub_213DC077C(v58);
    swift_release();
    if ((v35 & 1) != 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_65;
    }
LABEL_48:
    v25 = (v37 + 1) & v40;
    if (((*(_QWORD *)(v41 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      goto LABEL_61;
  }
  sub_213DC077C(v59);
  sub_213DC077C(v58);
LABEL_67:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_65:
  *a1 = *(_QWORD *)(*(_QWORD *)(*v38 + 48) + 8 * v37);
  swift_retain();
  return 0;
}

uint64_t sub_213DD5A54(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_213EF32F4();
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  v8 = sub_213EF3330();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_213EF3234() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_213EF3234() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_213DD9B00(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_213DD5C00(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_213DB0DB4((unint64_t *)&qword_253F06928, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_213EF27E4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_213EF2838();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_213DD9C98((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_213DD5E5C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_213EF32E8();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_213DD9EEC(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_213DD5F54(char *a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v10;
  uint64_t v12;

  v4 = *v2;
  v5 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain();
  sub_213E2B4BC(v5, a2);
  v7 = v6 & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v10;
  *v10 = 0x8000000000000000;
  sub_213DDA00C(a2, v7, isUniquelyReferenced_nonNull_native);
  *v10 = v12;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

void sub_213DD62CC(uint64_t a1, char a2)
{
  sub_213EF32F4();
  __asm { BR              X10 }
}

uint64_t sub_213DD6344()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  v2 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_213DDA3CC(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_213DD6684(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  char isUniquelyReferenced_nonNull_native;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int16 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int16 v33;

  v5 = *(_OWORD *)(a2 + 16);
  v6 = *(_OWORD *)(a2 + 32);
  v30 = *(_OWORD *)a2;
  v31 = v5;
  v32 = v6;
  v33 = *(_WORD *)(a2 + 48);
  v7 = *v2;
  sub_213EF32F4();
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  v8 = sub_213EF3330();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = *(_QWORD *)(v7 + 48) + 56 * v10;
      v13 = *(_QWORD *)(v12 + 8);
      v14 = *(_WORD *)(v12 + 48);
      *(_QWORD *)&v26 = *(_QWORD *)v12;
      *((_QWORD *)&v26 + 1) = v13;
      v27 = *(_OWORD *)(v12 + 16);
      v28 = *(_OWORD *)(v12 + 32);
      v29 = v14;
      if (_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)&v26, (uint64_t)&v30))
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_213DDF8A4(a2);
    v18 = *(_QWORD *)(*v2 + 48) + 56 * v10;
    v20 = *(_QWORD *)v18;
    v19 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_QWORD *)(v18 + 32);
    v24 = *(_QWORD *)(v18 + 40);
    LOWORD(v18) = *(_WORD *)(v18 + 48);
    *(_QWORD *)a1 = v20;
    *(_QWORD *)(a1 + 8) = v19;
    *(_QWORD *)(a1 + 16) = v21;
    *(_QWORD *)(a1 + 24) = v22;
    *(_QWORD *)(a1 + 32) = v23;
    *(_QWORD *)(a1 + 40) = v24;
    *(_WORD *)(a1 + 48) = v18;
    swift_bridgeObjectRetain();
    sub_213DB8518(v21, v22);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = v30;
    v27 = v31;
    v28 = v32;
    v29 = v33;
    v25 = *v2;
    *v2 = 0x8000000000000000;
    sub_213DDF850((uint64_t)&v26);
    sub_213DDA7C8((uint64_t)&v26, v10, isUniquelyReferenced_nonNull_native);
    *v2 = v25;
    swift_bridgeObjectRelease();
    v16 = v27;
    *(_OWORD *)a1 = v26;
    *(_OWORD *)(a1 + 16) = v16;
    *(_OWORD *)(a1 + 32) = v28;
    *(_WORD *)(a1 + 48) = v29;
    return 1;
  }
}

uint64_t sub_213DD687C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_213EF26E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_213DB0DB4(&qword_254D3B250, v11, MEMORY[0x24BEA53B8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_213EF27E4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_213DB0DB4(&qword_254D3B258, (uint64_t (*)(uint64_t))MEMORY[0x24BEA53A8], MEMORY[0x24BEA53C0]);
      v21 = sub_213EF2838();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_213DDA974((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_213DD6AD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;

  v6 = v5;
  v12 = *v5;
  sub_213EF32F4();
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  v13 = sub_213EF3330();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  v16 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v30 = v5;
    v31 = a1;
    v17 = ~v14;
    v18 = *(_QWORD *)(v12 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 32 * v15);
      v21 = v19[2];
      v20 = v19[3];
      v22 = *v19 == a2 && v19[1] == a3;
      if (v22 || (sub_213EF3234() & 1) != 0)
      {
        if (v20)
        {
          if (a5)
          {
            v23 = v21 == a4 && v20 == a5;
            if (v23 || (sub_213EF3234() & 1) != 0)
            {
LABEL_21:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v26 = (uint64_t *)(*(_QWORD *)(*v30 + 48) + 32 * v15);
              v27 = v26[1];
              v29 = v26[2];
              v28 = v26[3];
              *v31 = *v26;
              v31[1] = v27;
              v31[2] = v29;
              v31[3] = v28;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              return 0;
            }
          }
        }
        else if (!a5)
        {
          goto LABEL_21;
        }
      }
      v15 = (v15 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v6 = v30;
        a1 = v31;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_20:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32 = *v6;
  *v6 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_213DDABC8(a2, a3, a4, a5, v15, isUniquelyReferenced_nonNull_native);
  *v6 = v32;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  result = 1;
  a1[2] = a4;
  a1[3] = a5;
  return result;
}

uint64_t sub_213DD6CF0(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_213EF32F4();
  sub_213EF3300();
  v6 = sub_213EF3330();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_213DDAD88(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_213DD6E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B270);
    v2 = sub_213EF2E98();
    v6 = v2;
    sub_213EF2E2C();
    if (sub_213EF2E50())
    {
      sub_213EF1E30();
      do
      {
        swift_dynamicCast();
        v2 = v6;
        if (*(_QWORD *)(v6 + 24) <= *(_QWORD *)(v6 + 16))
        {
          sub_213DD7260();
          v2 = v6;
        }
        sub_213EF32F4();
        if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
        {
          sub_213EF330C();
          sub_213EF28BC();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_213EF330C();
        }
        sub_213EF3330();
        v3 = sub_213EF2E20();
        *(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v3) = v5;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_213EF2E50());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_213DD6FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[10];
  char v26[8];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B280);
    v2 = sub_213EF2E98();
    v24 = v2;
    sub_213EF2E2C();
    if (sub_213EF2E50())
    {
      sub_213EF1ED8();
      do
      {
        swift_dynamicCast();
        v2 = v24;
        if (*(_QWORD *)(v24 + 24) <= *(_QWORD *)(v24 + 16))
        {
          sub_213DD74FC();
          v2 = v24;
        }
        sub_213EF32F4();
        sub_213E6EFF8(v23, v25);
        v4 = v25[0];
        v5 = v25[1];
        v6 = v25[2];
        v7 = v25[3];
        v8 = v25[4];
        v9 = v25[5];
        v10 = v25[6];
        v11 = v25[7];
        v12 = v25[8];
        v22 = v25[9];
        sub_213DC0630((uint64_t)v25, (uint64_t)v26, &qword_254D3AB00);
        if (v27 == 1)
        {
          sub_213EF330C();
        }
        else
        {
          v28 = v4;
          v29 = v5;
          v30 = v6;
          v31 = v7;
          v32 = v8;
          v33 = v9;
          v34 = v10;
          v35 = v11;
          v36 = v12;
          v37 = v22;
          sub_213EF330C();
          sub_213E54A84();
          sub_213DC077C(v25);
        }
        result = sub_213EF3330();
        v14 = v2 + 56;
        v15 = -1 << *(_BYTE *)(v2 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v2 + 56 + 8 * (v16 >> 6))) != 0)
        {
          v3 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v2 + 56 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v17 == v19;
            if (v17 == v19)
              v17 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v21 == -1);
          v3 = __clz(__rbit64(~v21)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v3) = v23;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_213EF2E50());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

unint64_t sub_213DD7260()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B270);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v19 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v14 >= v8)
          goto LABEL_26;
        v15 = v19[v14];
        ++v11;
        if (!v15)
        {
          v11 = v14 + 1;
          if (v14 + 1 >= v8)
            goto LABEL_26;
          v15 = v19[v11];
          if (!v15)
          {
            v11 = v14 + 2;
            if (v14 + 2 >= v8)
              goto LABEL_26;
            v15 = v19[v11];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v8)
              {
LABEL_26:
                swift_release();
                v18 = 1 << *(_BYTE *)(v2 + 32);
                if (v18 > 63)
                  bzero(v19, ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v19 = -1 << v18;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v19[v16];
              if (!v15)
              {
                while (1)
                {
                  v11 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_32;
                  if (v11 >= v8)
                    goto LABEL_26;
                  v15 = v19[v11];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v11 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_213EF32F4();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_213EF330C();
        sub_213EF28BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF330C();
      }
      sub_213EF3330();
      result = sub_213EF2E20();
      *(_QWORD *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_213DD74FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44[10];
  char v45[8];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B280);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v37 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v35 = v0;
    v36 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    v38 = v4;
    v39 = v2;
    while (1)
    {
      if (v7)
      {
        v42 = v10;
        v43 = (v7 - 1) & v7;
        v12 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v13 >= v36)
          goto LABEL_36;
        v14 = v37[v13];
        v15 = v10 + 1;
        if (!v14)
        {
          v15 = v10 + 2;
          if (v10 + 2 >= v36)
            goto LABEL_36;
          v14 = v37[v15];
          if (!v14)
          {
            v15 = v10 + 3;
            if (v10 + 3 >= v36)
              goto LABEL_36;
            v14 = v37[v15];
            if (!v14)
            {
              v16 = v10 + 4;
              if (v10 + 4 >= v36)
              {
LABEL_36:
                swift_release();
                v1 = v35;
                v34 = 1 << *(_BYTE *)(v2 + 32);
                if (v34 > 63)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v14 = v37[v16];
              if (!v14)
              {
                while (1)
                {
                  v15 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_42;
                  if (v15 >= v36)
                    goto LABEL_36;
                  v14 = v37[v15];
                  ++v16;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v15 = v10 + 4;
            }
          }
        }
LABEL_23:
        v42 = v15;
        v43 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v15 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v12);
      sub_213EF32F4();
      v41 = v17;
      sub_213E6EFF8(v17, v44);
      v18 = v44[0];
      v19 = v44[1];
      v21 = v44[2];
      v20 = v44[3];
      v22 = v44[4];
      v23 = v44[5];
      v24 = v44[6];
      v25 = v44[7];
      v26 = v44[8];
      v40 = v44[9];
      sub_213DC0630((uint64_t)v44, (uint64_t)v45, &qword_254D3AB00);
      if (v46 == 1)
      {
        sub_213EF330C();
      }
      else
      {
        v47 = v18;
        v48 = v19;
        v49 = v21;
        v50 = v20;
        v51 = v22;
        v52 = v23;
        v53 = v24;
        v54 = v25;
        v55 = v26;
        v56 = v40;
        sub_213EF330C();
        sub_213E54A84();
        sub_213DC077C(v44);
      }
      v4 = v38;
      v2 = v39;
      v7 = v43;
      result = sub_213EF3330();
      v27 = -1 << *(_BYTE *)(v38 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v8 + 8 * (v28 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v8 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v8 + 8 * v29);
        }
        while (v33 == -1);
        v11 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v38 + 48) + 8 * v11) = v41;
      ++*(_QWORD *)(v38 + 16);
      v10 = v42;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_213DD7888()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA0);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_213EF32F4();
      sub_213EF28BC();
      result = sub_213EF3330();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_213DD7B64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B290);
  result = sub_213EF2E8C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_213EF32E8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_213DD7DE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B208);
  v3 = sub_213EF2E8C();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x213DD81A4);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_213EF32F4();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_213DD81C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B210);
  v3 = sub_213EF2E8C();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x213DD8528);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_213EF32F4();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v14 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_213DD853C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t i;
  char v38;
  uint64_t v39;
  int64_t v40;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B230);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v36 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v34 = v1;
    v35 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    for (i = v2; ; v2 = i)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v40 = v10;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v35)
          goto LABEL_33;
        v16 = v36[v15];
        v17 = v10 + 1;
        if (!v16)
        {
          v17 = v10 + 2;
          if (v10 + 2 >= v35)
            goto LABEL_33;
          v16 = v36[v17];
          if (!v16)
          {
            v17 = v10 + 3;
            if (v10 + 3 >= v35)
              goto LABEL_33;
            v16 = v36[v17];
            if (!v16)
            {
              v18 = v10 + 4;
              if (v10 + 4 >= v35)
              {
LABEL_33:
                swift_release();
                v1 = v34;
                v33 = 1 << *(_BYTE *)(v2 + 32);
                if (v33 > 63)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v36[v18];
              if (!v16)
              {
                while (1)
                {
                  v17 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v17 >= v35)
                    goto LABEL_33;
                  v16 = v36[v17];
                  ++v18;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v40 = v17;
        v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      v19 = *(_QWORD *)(v2 + 48) + 56 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 24);
      v39 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 32);
      v23 = *(_QWORD *)(v19 + 40);
      v25 = *(_BYTE *)(v19 + 48);
      v38 = *(_BYTE *)(v19 + 49);
      sub_213EF32F4();
      sub_213EF28BC();
      result = sub_213EF3330();
      v26 = -1 << *(_BYTE *)(v4 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 56 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      v10 = v40;
      *(_QWORD *)(v12 + 16) = v39;
      *(_QWORD *)(v12 + 24) = v22;
      *(_QWORD *)(v12 + 32) = v24;
      *(_QWORD *)(v12 + 40) = v23;
      *(_BYTE *)(v12 + 48) = v25;
      *(_BYTE *)(v12 + 49) = v38;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_213DD8884(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_213EF2E8C();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_213DB0DB4(v45, v44, v46);
      result = sub_213EF27E4();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_213DD8BE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B220);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
      v20 = *v19;
      v21 = v19[1];
      v23 = v19[2];
      v22 = v19[3];
      sub_213EF32F4();
      sub_213EF28BC();
      result = sub_213EF3330();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v23;
      v12[3] = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_213DD8EEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B240);
  result = sub_213EF2E8C();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
      sub_213EF32F4();
      sub_213EF3300();
      result = sub_213EF3330();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_213DD9194(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  sub_213EF3330();
  result = sub_213EF2E20();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_213DD9278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[10];
  _BYTE v17[8];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_213EF32F4();
  v15 = a1;
  sub_213E6EFF8(a1, v16);
  v4 = v16[0];
  v5 = v16[1];
  v6 = v16[2];
  v7 = v16[3];
  v8 = v16[4];
  v9 = v16[5];
  v10 = v16[6];
  v11 = v16[7];
  v12 = v16[8];
  v14 = v16[9];
  sub_213DC0630((uint64_t)v16, (uint64_t)v17, &qword_254D3AB00);
  if (v18 == 1)
  {
    sub_213EF330C();
  }
  else
  {
    v19 = v4;
    v20 = v5;
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v24 = v9;
    v25 = v10;
    v26 = v11;
    v27 = v12;
    v28 = v14;
    sub_213EF330C();
    sub_213E54A84();
    sub_213DC077C(v16);
  }
  sub_213EF3330();
  result = sub_213EF2E20();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = v15;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_213DD93B8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t *v17;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_21;
  if ((a3 & 1) != 0)
  {
    sub_213DD7260();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_213DDAEE4(&qword_254D3B270);
      goto LABEL_21;
    }
    sub_213DDBB2C();
  }
  v8 = *v3;
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  result = sub_213EF3330();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_213EF1E30();
    do
    {
      sub_213EF32F4();
      swift_retain();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_213EF330C();
        sub_213EF28BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF330C();
      }
      v11 = sub_213EF3330();
      sub_213EF32F4();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_213EF330C();
        sub_213EF28BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF330C();
      }
      v12 = sub_213EF3330();
      result = swift_release();
      if (v11 == v12)
        goto LABEL_24;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_21:
  v13 = *v17;
  *(_QWORD *)(*v17 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (!v15)
  {
    *(_QWORD *)(v13 + 16) = v16;
    return result;
  }
  __break(1u);
LABEL_24:
  result = sub_213EF327C();
  __break(1u);
  return result;
}

uint64_t sub_213DD9634(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[20];
  uint64_t v49[10];
  uint64_t v50[10];
  uint64_t v51[10];
  _BYTE v52[8];
  uint64_t v53;
  _BYTE v54[8];
  uint64_t v55;
  _BYTE v56[8];
  uint64_t v57;
  _BYTE v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v34 = result;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 <= v5 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_213DD74FC();
    }
    else
    {
      if (v6 > v5)
      {
        result = (uint64_t)sub_213DDAEE4(&qword_254D3B280);
        goto LABEL_56;
      }
      sub_213DDBD90();
    }
    v33 = *v3;
    sub_213EF32F4();
    sub_213E6EFF8(v34, v49);
    v7 = v49[0];
    v8 = v49[1];
    v9 = v49[2];
    v10 = v49[3];
    v11 = v49[4];
    v12 = v49[5];
    v13 = v49[6];
    v14 = v49[7];
    v15 = v49[8];
    v16 = v49[9];
    sub_213DC0630((uint64_t)v49, (uint64_t)v58, &qword_254D3AB00);
    if (v59 == 1)
    {
      sub_213EF330C();
    }
    else
    {
      v60 = v7;
      v61 = v8;
      v62 = v9;
      v63 = v10;
      v64 = v11;
      v65 = v12;
      v66 = v13;
      v67 = v14;
      v68 = v15;
      v69 = v16;
      sub_213EF330C();
      sub_213E54A84();
      sub_213DC077C(v49);
    }
    result = sub_213EF3330();
    v17 = -1 << *(_BYTE *)(v33 + 32);
    a2 = result & ~v17;
    if (((*(_QWORD *)(v33 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v32 = ~v17;
      sub_213EF1ED8();
      while (1)
      {
        v47 = swift_retain();
        sub_213E6EFF8(v47, v50);
        v18 = v50[0];
        v19 = v50[1];
        v20 = v50[2];
        v21 = v50[3];
        v42 = v50[4];
        v46 = v50[5];
        v37 = v50[6];
        v44 = v50[7];
        v35 = v50[8];
        v40 = v50[9];
        sub_213E6EFF8(v34, v51);
        v23 = v51[0];
        v22 = v51[1];
        v24 = v51[2];
        v25 = v51[3];
        v41 = v51[4];
        v45 = v51[5];
        v43 = v51[7];
        v36 = v51[8];
        v38 = v51[6];
        v39 = v51[9];
        sub_213DC0630((uint64_t)v50, (uint64_t)v56, &qword_254D3AB00);
        if (v57 == 1)
          break;
        sub_213DC0630((uint64_t)v51, (uint64_t)v52, &qword_254D3AB00);
        if (v53 == 1)
          goto LABEL_17;
        if (v19)
        {
          if (!v22 || (v18 != v23 || v19 != v22) && (sub_213EF3234() & 1) == 0)
            goto LABEL_53;
        }
        else if (v22)
        {
          goto LABEL_53;
        }
        if (v21)
        {
          if (!v25 || (v20 != v24 || v21 != v25) && (sub_213EF3234() & 1) == 0)
            goto LABEL_53;
        }
        else if (v25)
        {
          goto LABEL_53;
        }
        if (v46)
        {
          if (!v45 || (v42 != v41 || v46 != v45) && (sub_213EF3234() & 1) == 0)
            goto LABEL_53;
        }
        else if (v45)
        {
          goto LABEL_53;
        }
        if (v44)
        {
          if (!v43 || (v37 != v38 || v44 != v43) && (sub_213EF3234() & 1) == 0)
            goto LABEL_53;
        }
        else if (v43)
        {
          goto LABEL_53;
        }
        if (!v40)
        {
          if (!v39)
            goto LABEL_59;
LABEL_53:
          sub_213DC077C(v51);
          sub_213DC077C(v50);
LABEL_54:
          result = swift_release();
          goto LABEL_55;
        }
        if (!v39)
          goto LABEL_53;
        if (v35 == v36 && v40 == v39)
          goto LABEL_59;
        v26 = sub_213EF3234();
        sub_213DC077C(v51);
        sub_213DC077C(v50);
        result = swift_release();
        if ((v26 & 1) != 0)
          goto LABEL_61;
LABEL_55:
        a2 = (a2 + 1) & v32;
        if (((*(_QWORD *)(v33 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_56;
      }
      sub_213DC0630((uint64_t)v51, (uint64_t)v54, &qword_254D3AB00);
      if (v55 == 1)
        goto LABEL_60;
LABEL_17:
      v48[0] = v18;
      v48[1] = v19;
      v48[2] = v20;
      v48[3] = v21;
      v48[4] = v42;
      v48[5] = v46;
      v48[6] = v37;
      v48[7] = v44;
      v48[8] = v35;
      v48[9] = v40;
      v48[10] = v23;
      v48[11] = v22;
      v48[12] = v24;
      v48[13] = v25;
      v48[14] = v41;
      v48[15] = v45;
      v48[16] = v38;
      v48[17] = v43;
      v48[18] = v36;
      v48[19] = v39;
      sub_213DC0674(v48);
      goto LABEL_54;
    }
  }
LABEL_56:
  v27 = *v31;
  *(_QWORD *)(*v31 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v27 + 48) + 8 * a2) = v34;
  v28 = *(_QWORD *)(v27 + 16);
  v29 = __OFADD__(v28, 1);
  v30 = v28 + 1;
  if (v29)
  {
    __break(1u);
LABEL_59:
    sub_213DC077C(v51);
    sub_213DC077C(v50);
LABEL_60:
    swift_release();
LABEL_61:
    result = sub_213EF327C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v27 + 16) = v30;
  }
  return result;
}

uint64_t sub_213DD9B00(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_213DD7888();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_213DDB084();
      goto LABEL_22;
    }
    sub_213DDC0E8();
  }
  v11 = *v4;
  sub_213EF32F4();
  sub_213EF28BC();
  result = sub_213EF3330();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_213EF3234(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_213EF327C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_213EF3234();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_213DD9C98(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_213DD8884(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_254D3B238, (unint64_t *)&qword_253F06928, MEMORY[0x24BDCEA88]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_213DDB5C0((uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &qword_254D3B238);
      goto LABEL_12;
    }
    sub_213DDD008(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], &qword_254D3B238, (unint64_t *)&qword_253F06928, MEMORY[0x24BDCEA88]);
  }
  v13 = *v3;
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_213EF27E4();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_213EF2838();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_213EF327C();
  __break(1u);
  return result;
}

uint64_t sub_213DD9EEC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_213DD7B64();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_213DDB234();
      goto LABEL_14;
    }
    sub_213DDC394();
  }
  v8 = *v3;
  result = sub_213EF32E8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_213EF327C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void sub_213DDA00C(char a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  char v15;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_213DD7DE4();
    }
    else
    {
      if (v7 > v6)
      {
        sub_213DDB9A4(&qword_254D3B208);
        goto LABEL_10;
      }
      sub_213DDC5F4();
    }
    v8 = *v3;
    sub_213E2B4BC(*(_QWORD *)(*v3 + 40), a1);
    a2 = v9 & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v10 = *v14;
  *(_QWORD *)(*v14 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v10 + 48) + a2) = v15;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x213DDA370);
  }
  *(_QWORD *)(v10 + 16) = v13;
}

void *sub_213DDA3CC(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_213DD81C4();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_213DDC9A0();
LABEL_8:
      sub_213EF32F4();
      __asm { BR              X10 }
    }
    result = sub_213DDB9A4(&qword_254D3B210);
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x213DDA770);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_213DDA7C8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  __int128 v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;
  __int16 v25;
  _OWORD v26[3];
  __int16 v27;

  v5 = result;
  v6 = *(_OWORD *)(result + 16);
  v26[0] = *(_OWORD *)result;
  v26[1] = v6;
  v26[2] = *(_OWORD *)(result + 32);
  v27 = *(_WORD *)(result + 48);
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_213DD853C();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_213DDB3C8();
      goto LABEL_12;
    }
    sub_213DDCCE4();
  }
  v9 = *v3;
  sub_213EF32F4();
  sub_213EF28BC();
  result = sub_213EF3330();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = ~v10;
    do
    {
      v12 = *(_QWORD *)(v9 + 48) + 56 * a2;
      v13 = *(_QWORD *)(v12 + 8);
      v14 = *(_WORD *)(v12 + 48);
      v22[0] = *(_QWORD *)v12;
      v22[1] = v13;
      v15 = *(_OWORD *)(v12 + 32);
      v23 = *(_OWORD *)(v12 + 16);
      v24 = v15;
      v25 = v14;
      result = _s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v26);
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v11;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v17 = *(_QWORD *)(v16 + 48) + 56 * a2;
  v18 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)v17 = *(_OWORD *)v5;
  *(_OWORD *)(v17 + 16) = v18;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v5 + 32);
  *(_WORD *)(v17 + 48) = *(_WORD *)(v5 + 48);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v16 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_213EF327C();
  __break(1u);
  return result;
}

uint64_t sub_213DDA974(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_213EF26E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_213DD8884(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BEA53A8], &qword_254D3B260, &qword_254D3B250, MEMORY[0x24BEA53B8]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_213DDB5C0((uint64_t (*)(_QWORD))MEMORY[0x24BEA53A8], &qword_254D3B260);
      goto LABEL_12;
    }
    sub_213DDD008(v12, (uint64_t (*)(uint64_t))MEMORY[0x24BEA53A8], &qword_254D3B260, &qword_254D3B250, MEMORY[0x24BEA53B8]);
  }
  v13 = *v3;
  sub_213DB0DB4(&qword_254D3B250, (uint64_t (*)(uint64_t))MEMORY[0x24BEA53A8], MEMORY[0x24BEA53B8]);
  v14 = sub_213EF27E4();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_213DB0DB4(&qword_254D3B258, (uint64_t (*)(uint64_t))MEMORY[0x24BEA53A8], MEMORY[0x24BEA53C0]);
      v19 = sub_213EF2838();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_213EF327C();
  __break(1u);
  return result;
}

uint64_t sub_213DDABC8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_25;
  if ((a6 & 1) != 0)
  {
    sub_213DD8BE4();
  }
  else
  {
    if (v13 > v12)
    {
      result = (uint64_t)sub_213DDB7E4();
      goto LABEL_25;
    }
    sub_213DDD324();
  }
  v14 = *v6;
  sub_213EF32F4();
  sub_213EF28BC();
  result = sub_213EF3330();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a5 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0)
  {
    v17 = ~v15;
    v18 = *(_QWORD *)(v14 + 48);
    do
    {
      v19 = (uint64_t *)(v18 + 32 * a5);
      result = *v19;
      v21 = v19[2];
      v20 = v19[3];
      v22 = *v19 == v11 && v19[1] == a2;
      if (v22 || (result = sub_213EF3234(), (result & 1) != 0))
      {
        if (v20)
        {
          if (a4)
          {
            v23 = v21 == a3 && v20 == a4;
            if (v23 || (result = sub_213EF3234(), (result & 1) != 0))
            {
LABEL_24:
              result = sub_213EF327C();
              __break(1u);
              break;
            }
          }
        }
        else if (!a4)
        {
          goto LABEL_24;
        }
      }
      a5 = (a5 + 1) & v17;
    }
    while (((*(_QWORD *)(v16 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_25:
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  v25 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 32 * a5);
  *v25 = v11;
  v25[1] = a2;
  v25[2] = a3;
  v25[3] = a4;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
  return result;
}

uint64_t sub_213DDAD88(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_213DD8EEC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_213DDB9A4(&qword_254D3B240);
      goto LABEL_14;
    }
    sub_213DDD5FC();
  }
  v8 = *v3;
  sub_213EF32F4();
  sub_213EF3300();
  result = sub_213EF3330();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      result = sub_213EF327C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v10 + a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_213DDAEE4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_213EF2E80();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    result = (void *)swift_retain();
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213DDB084()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA0);
  v2 = *v0;
  v3 = sub_213EF2E80();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213DDB234()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B290);
  v2 = *v0;
  v3 = sub_213EF2E80();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213DDB3C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B230);
  v27 = v0;
  v1 = *v0;
  v2 = sub_213EF2E80();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v27 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = v1 + 56;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 56), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v24 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v12)
      goto LABEL_28;
    v25 = *(_QWORD *)(v5 + 8 * v24);
    ++v8;
    if (!v25)
    {
      v8 = v24 + 1;
      if (v24 + 1 >= v12)
        goto LABEL_28;
      v25 = *(_QWORD *)(v5 + 8 * v8);
      if (!v25)
      {
        v8 = v24 + 2;
        if (v24 + 2 >= v12)
          goto LABEL_28;
        v25 = *(_QWORD *)(v5 + 8 * v8);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v11 = (v25 - 1) & v25;
    v14 = __clz(__rbit64(v25)) + (v8 << 6);
LABEL_12:
    v15 = 56 * v14;
    v16 = *(_QWORD *)(v1 + 48) + v15;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    v22 = *(_QWORD *)(v16 + 40);
    LOWORD(v16) = *(_WORD *)(v16 + 48);
    v23 = *(_QWORD *)(v3 + 48) + v15;
    *(_QWORD *)v23 = v18;
    *(_QWORD *)(v23 + 8) = v17;
    *(_QWORD *)(v23 + 16) = v19;
    *(_QWORD *)(v23 + 24) = v20;
    *(_QWORD *)(v23 + 32) = v21;
    *(_QWORD *)(v23 + 40) = v22;
    *(_WORD *)(v23 + 48) = v16;
    swift_bridgeObjectRetain();
    result = (void *)sub_213DB8518(v19, v20);
  }
  v26 = v24 + 3;
  if (v26 >= v12)
    goto LABEL_28;
  v25 = *(_QWORD *)(v5 + 8 * v26);
  if (v25)
  {
    v8 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v8 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v8 >= v12)
      goto LABEL_28;
    v25 = *(_QWORD *)(v5 + 8 * v8);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213DDB5C0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_213EF2E80();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_213DDB7E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B220);
  v2 = *v0;
  v3 = sub_213EF2E80();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v20 = v17[2];
    v19 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v20;
    v21[3] = v19;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213DDB9A4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_213EF2E80();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_213DDBB2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B270);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_27:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v18 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_24;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v14 >= v8)
      goto LABEL_26;
    v15 = *(_QWORD *)(v18 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_26;
      v15 = *(_QWORD *)(v18 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_26;
        v15 = *(_QWORD *)(v18 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_213EF32F4();
    swift_retain();
    if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    {
      sub_213EF330C();
      sub_213EF28BC();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_213EF330C();
    }
    sub_213EF3330();
    result = sub_213EF2E20();
    *(_QWORD *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v17;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v8)
  {
LABEL_26:
    swift_release();
    v1 = v0;
    goto LABEL_27;
  }
  v15 = *(_QWORD *)(v18 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v8)
      goto LABEL_26;
    v15 = *(_QWORD *)(v18 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_213DDBD90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44[10];
  char v45[8];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B280);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_38:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v35 = v0;
  v36 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v37 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v38 = v2;
  v39 = v4;
  while (1)
  {
    if (v7)
    {
      v42 = v10;
      v43 = (v7 - 1) & v7;
      v12 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v13 >= v37)
      goto LABEL_36;
    v14 = *(_QWORD *)(v36 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v37)
        goto LABEL_36;
      v14 = *(_QWORD *)(v36 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v37)
          goto LABEL_36;
        v14 = *(_QWORD *)(v36 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v42 = v15;
    v43 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v12);
    sub_213EF32F4();
    v18 = swift_retain();
    v41 = v17;
    sub_213E6EFF8(v18, v44);
    v19 = v44[0];
    v20 = v44[1];
    v21 = v44[2];
    v22 = v44[3];
    v23 = v44[4];
    v24 = v44[5];
    v25 = v44[6];
    v26 = v44[7];
    v27 = v44[8];
    v40 = v44[9];
    sub_213DC0630((uint64_t)v44, (uint64_t)v45, &qword_254D3AB00);
    if (v46 == 1)
    {
      sub_213EF330C();
    }
    else
    {
      v47 = v19;
      v48 = v20;
      v49 = v21;
      v50 = v22;
      v51 = v23;
      v52 = v24;
      v53 = v25;
      v54 = v26;
      v55 = v27;
      v56 = v40;
      sub_213EF330C();
      sub_213E54A84();
      sub_213DC077C(v44);
    }
    v2 = v38;
    v4 = v39;
    v7 = v43;
    result = sub_213EF3330();
    v28 = -1 << *(_BYTE *)(v39 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v8 + 8 * v30);
      }
      while (v34 == -1);
      v11 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v39 + 48) + 8 * v11) = v41;
    ++*(_QWORD *)(v39 + 16);
    v10 = v42;
  }
  v16 = v10 + 4;
  if (v10 + 4 >= v37)
  {
LABEL_36:
    result = swift_release_n();
    v1 = v35;
    goto LABEL_38;
  }
  v14 = *(_QWORD *)(v36 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v37)
      goto LABEL_36;
    v14 = *(_QWORD *)(v36 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_213DDC0E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA0);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    result = sub_213EF3330();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_213DDC394()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B290);
  result = sub_213EF2E8C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_213EF32E8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_213DDC5F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B208);
  v3 = sub_213EF2E8C();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x213DDC980);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_213EF32F4();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_213DDC9A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B210);
  v3 = sub_213EF2E8C();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x213DDCCD0);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_213EF32F4();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

uint64_t sub_213DDCCE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  int64_t v38;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B230);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v33 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v34 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  v35 = v2;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v38 = v10;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_33;
      v16 = *(_QWORD *)(v33 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_33;
        v16 = *(_QWORD *)(v33 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v38 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    v19 = *(_QWORD *)(v2 + 48) + 56 * v14;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    v36 = *(_BYTE *)(v19 + 49);
    v37 = *(_BYTE *)(v19 + 48);
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    sub_213DB8518(v22, v23);
    sub_213EF28BC();
    result = sub_213EF3330();
    v26 = -1 << *(_BYTE *)(v4 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 56 * v11;
    *(_QWORD *)v12 = v20;
    *(_QWORD *)(v12 + 8) = v21;
    *(_QWORD *)(v12 + 16) = v22;
    *(_QWORD *)(v12 + 24) = v23;
    *(_QWORD *)(v12 + 32) = v24;
    *(_QWORD *)(v12 + 40) = v25;
    *(_BYTE *)(v12 + 48) = v37;
    *(_BYTE *)(v12 + 49) = v36;
    ++*(_QWORD *)(v4 + 16);
    v2 = v35;
    v10 = v38;
  }
  v18 = v10 + 4;
  if (v10 + 4 >= v34)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v33 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v34)
      goto LABEL_33;
    v16 = *(_QWORD *)(v33 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_213DDD008(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_213EF2E8C();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_213DB0DB4(v40, v39, v41);
    result = sub_213EF27E4();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_213DDD324()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B220);
  v3 = sub_213EF2E8C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v14);
    v19 = *v18;
    v20 = v18[1];
    v22 = v18[2];
    v21 = v18[3];
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    result = sub_213EF3330();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 32 * v11);
    *v12 = v19;
    v12[1] = v20;
    v12[2] = v22;
    v12[3] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_213DDD5FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B240);
  result = sub_213EF2E8C();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v14);
    sub_213EF32F4();
    sub_213EF3300();
    result = sub_213EF3330();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t _s28SiriPrivateLearningInference13CoreDuetEventV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  BOOL v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  __int128 v19[5];
  __int128 v20;
  __int128 v21;
  _OWORD v22[3];

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_213EF3234(), result = 0, (v9 & 1) != 0))
  {
    v11 = v3 == v6 && v4 == v7;
    if (v11 || (v12 = sub_213EF3234(), result = 0, (v12 & 1) != 0))
    {
      v13 = *(_QWORD *)(v2 + 16);
      if (v13 == *(_QWORD *)(v5 + 16))
      {
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        if (v13)
        {
          v14 = 0;
          v15 = 32;
          while (v14 < *(_QWORD *)(v2 + 16))
          {
            result = sub_213DAFDFC(v2 + v15, (uint64_t)v19);
            v16 = *(_QWORD *)(v5 + 16);
            if (v14 == v16)
            {
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
              goto LABEL_22;
            }
            if (v14 >= v16)
              goto LABEL_28;
            sub_213DB0BF0(v19, (uint64_t)&v20);
            sub_213DAFDFC(v5 + v15, (uint64_t)v22 + 8);
            v19[2] = v22[0];
            v19[3] = v22[1];
            v19[4] = v22[2];
            v19[0] = v20;
            v19[1] = v21;
            __swift_project_boxed_opaque_existential_1(v19, *((uint64_t *)&v21 + 1));
            v17 = sub_213EF21A8();
            if (v17 == 2)
            {
              sub_213DAFEC4((uint64_t)v19, &qword_254D3B298);
LABEL_24:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
            v18 = v17;
            result = sub_213DAFEC4((uint64_t)v19, &qword_254D3B298);
            if ((v18 & 1) == 0)
              goto LABEL_24;
            ++v14;
            v15 += 40;
            if (v13 == v14)
              goto LABEL_22;
          }
          __break(1u);
LABEL_28:
          __break(1u);
        }
        else
        {
LABEL_22:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_213DDDA6C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_213DDDA90(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t DynamicType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19[2];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  result = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = 0;
    v7 = a1 + 32;
    v8 = a2 + 56;
    v9 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_213DAFDFC(v7 + 40 * v6, (uint64_t)&v20);
      __swift_project_boxed_opaque_existential_1(&v20, v21);
      DynamicType = swift_getDynamicType();
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_12;
      v11 = DynamicType;
      v12 = sub_213EF32E8();
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_12;
      v15 = *(_QWORD *)(a2 + 48);
      if (*(_QWORD *)(v15 + 8 * v14) != v11)
        break;
LABEL_3:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
LABEL_4:
      if (++v6 == v4)
        return v22;
    }
    v16 = ~v13;
    while (1)
    {
      v14 = (v14 + 1) & v16;
      if (((*(_QWORD *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        break;
      if (*(_QWORD *)(v15 + 8 * v14) == v11)
        goto LABEL_3;
    }
LABEL_12:
    sub_213DB0BF0(&v20, (uint64_t)v19);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_213DCD234(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v9 = v22;
    v18 = *(_QWORD *)(v22 + 16);
    v17 = *(_QWORD *)(v22 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_213DCD234(v17 > 1, v18 + 1, 1);
      v9 = v22;
    }
    *(_QWORD *)(v9 + 16) = v18 + 1;
    sub_213DB0BF0(v19, v9 + 40 * v18 + 32);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_213DDDC48(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];
  uint64_t v9;
  _OWORD v10[3];
  __int16 v11;

  v2 = *(_QWORD *)(a1 + 16);
  sub_213DDF80C();
  result = sub_213EF2BB0();
  v9 = result;
  if (v2)
  {
    v4 = a1 + 32;
    do
    {
      v5 = *(_OWORD *)(v4 + 16);
      v10[0] = *(_OWORD *)v4;
      v10[1] = v5;
      v10[2] = *(_OWORD *)(v4 + 32);
      v11 = *(_WORD *)(v4 + 48);
      sub_213DDF850((uint64_t)v10);
      sub_213DD6684((uint64_t)v8, (uint64_t)v10);
      v6 = v8[2];
      v7 = v8[3];
      swift_bridgeObjectRelease();
      sub_213DB859C(v6, v7);
      v4 += 56;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_213DDDD08(unint64_t a1)
{
  return sub_213DDDD50(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BEA0A48], &qword_254D3B278, (uint64_t)&protocol conformance descriptor for UsoEntity_common_MediaItem, (void (*)(uint64_t *, uint64_t))sub_213DD5404);
}

uint64_t sub_213DDDD2C(unint64_t a1)
{
  return sub_213DDDD50(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], &qword_254D3B268, (uint64_t)&protocol conformance descriptor for UsoEntity_common_Person, (void (*)(uint64_t *, uint64_t))sub_213DD507C);
}

uint64_t sub_213DDDD50(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t))
{
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_213EF306C();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_213DB0DB4(a3, a2, a4);
  result = sub_213EF2BB0();
  v12 = result;
  v17 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    v13 = sub_213EF306C();
    result = swift_bridgeObjectRelease();
    if (!v13)
      return v12;
  }
  else
  {
    v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
      return v12;
  }
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v15 = MEMORY[0x2199C49B0](i, a1);
      }
      else
      {
        v15 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      a5(&v16, v15);
      swift_release();
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DDDEB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_213EF2BB0();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_213DD5A54(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_213DDDF4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_213EF1D64();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_213DB0DB4((unint64_t *)&qword_253F06928, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_213EF2BB0();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_213DD5C00((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_213DDE11C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_213EF2BB0();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_213DD5E5C(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t type metadata accessor for FeaturisedTurn(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F04AB8);
}

uint64_t sub_213DDE1A0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_213DDE1D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3B200;
  if (!qword_254D3B200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3B030);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3B200);
  }
  return result;
}

uint64_t destroy for CoreDuetEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CoreDuetEvent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CoreDuetEvent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CoreDuetEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CoreDuetEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDuetEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDuetEvent()
{
  return &type metadata for CoreDuetEvent;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeaturisedTurn(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_213EF1CF8();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeaturisedTurn(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_213EF1CF8();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_213EF1CF8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_213EF1CF8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_213EF1CF8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for FeaturisedTurn(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_213EF1CF8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeaturisedTurn()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DDEAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeaturisedTurn()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DDEB80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_213DDEC28()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DDF4EC(319, &qword_253F04808, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for FeaturisedSession(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_213EF1D64();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t destroy for FeaturisedSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  return result;
}

_QWORD *initializeWithCopy for FeaturisedSession(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

char *assignWithCopy for FeaturisedSession(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&a1[v12], 1, v9);
  v16 = v15(v14, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  return a1;
}

_QWORD *initializeWithTake for FeaturisedSession(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for FeaturisedSession(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v12];
  v14 = (char *)a2 + v12;
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v15(&a1[v12], 1, v9);
  v16 = v15(v14, 1, v9);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      v11(v13, v14, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeaturisedSession()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DDF2F8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213EF1D64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeaturisedSession()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_213DDF3A8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_213EF1D64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_213DDF448()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DDF4EC(319, (unint64_t *)&qword_253F04830, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_213DDF4EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_213EF2D6C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_213DDF538(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v2 = sub_213EF26E8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_213DB0DB4(&qword_254D3B250, v10, MEMORY[0x24BEA53B8]);
  result = sub_213EF2BB0();
  v16 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_213DD687C((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v16;
  }
  return result;
}

uint64_t sub_213DDF660(uint64_t a1)
{
  return sub_213DDF698(a1, (void (*)(void))sub_213DD0A28, (uint64_t)&type metadata for ContactSuggestionTag, (void (*)(char *, _QWORD))sub_213DD62CC);
}

uint64_t sub_213DDF67C(uint64_t a1)
{
  return sub_213DDF698(a1, (void (*)(void))sub_213DD09E0, (uint64_t)&type metadata for MediaSuggestionTag, (void (*)(char *, _QWORD))sub_213DD5F54);
}

uint64_t sub_213DDF698(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_213EF2BB0();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_213DDF70C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  sub_213DDF7C8();
  result = sub_213EF2BB0();
  v10 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_213DD6AD8(&v9, v5, v6, v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 4;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

unint64_t sub_213DDF7C8()
{
  unint64_t result;

  result = qword_254D3B218;
  if (!qword_254D3B218)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactReference, &type metadata for ContactReference);
    atomic_store(result, (unint64_t *)&qword_254D3B218);
  }
  return result;
}

unint64_t sub_213DDF80C()
{
  unint64_t result;

  result = qword_254D3B228;
  if (!qword_254D3B228)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaReference, &type metadata for MediaReference);
    atomic_store(result, (unint64_t *)&qword_254D3B228);
  }
  return result;
}

uint64_t sub_213DDF850(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_213DB8518(v2, v3);
  return a1;
}

uint64_t sub_213DDF8A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_213DB859C(v2, v3);
  return a1;
}

unint64_t sub_213DDF8F8()
{
  unint64_t result;

  result = qword_254D3B248;
  if (!qword_254D3B248)
  {
    result = MEMORY[0x2199C52D4](&unk_213EFFB54, &type metadata for MediaEntityField);
    atomic_store(result, (unint64_t *)&qword_254D3B248);
  }
  return result;
}

uint64_t sub_213DDF93C()
{
  uint64_t result;

  type metadata accessor for MessagesDeadEndClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C38);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06C20 = 91;
  *(_QWORD *)algn_253F06C28 = 0xE100000000000000;
  return result;
}

uint64_t sub_213DDF9BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v18;

  v2 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07018);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_213EF5FF0;
  v10 = (_QWORD *)(v9 + v8);
  *v10 = 0xD00000000000001DLL;
  v10[1] = 0x8000000213F05F00;
  sub_213DE4CEC();
  swift_storeEnumTagMultiPayload();
  sub_213DBB430((uint64_t)v4, v9 + v8 + *(int *)(v5 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
  v11 = (_QWORD *)(v9 + v8 + v7);
  v12 = (uint64_t)v11 + *(int *)(v5 + 48);
  *v11 = 0xD00000000000002BLL;
  v11[1] = 0x8000000213F05F20;
  sub_213DDFB78(v12);
  v13 = (_QWORD *)(v9 + v8 + 2 * v7);
  v14 = (_QWORD *)((char *)v13 + *(int *)(v5 + 48));
  *v13 = 0xD00000000000001CLL;
  v13[1] = 0x8000000213F05F50;
  sub_213EA3E5C(v14);
  v15 = (_QWORD *)(v9 + v8 + 3 * v7);
  v16 = (_QWORD *)((char *)v15 + *(int *)(v5 + 48));
  *v15 = 0xD00000000000001BLL;
  v15[1] = 0x8000000213F05F70;
  sub_213E9EC28(a1, v16);
  return v9;
}

uint64_t sub_213DDFB78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[4];
  unsigned int v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v61 = a1;
  v60 = sub_213EF2388();
  v1 = *(_QWORD *)(v60 - 8);
  v2 = MEMORY[0x24BDAC7A8](v60);
  v57 = &v55[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = &v55[-v5];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v55[-v7];
  v9 = sub_213EF2514();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for FeaturisedTurn(0);
  v13 = swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_213DAF430(v13);
  swift_bridgeObjectRelease();
  v58 = v6;
  v59 = v1;
  if (!v14)
    goto LABEL_5;
  if (!v14[2])
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v16 = 0;
    v15 = 0;
    goto LABEL_6;
  }
  v16 = v14[4];
  v15 = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEA50F0], v9);
  v17 = sub_213EF2508();
  v19 = v18;
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  if (!v15)
    goto LABEL_13;
  if (v16 == v17 && v15 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = sub_213EF3234();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_18;
  }
  v22 = swift_bridgeObjectRetain();
  v23 = sub_213DAF43C(v22);
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_18:
    type metadata accessor for RuleResult();
    return swift_storeEnumTagMultiPayload();
  }
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v25 = v23 + 16 * v24;
    v27 = *(_QWORD *)(v25 + 16);
    v26 = *(_QWORD *)(v25 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v27 = 0;
    v26 = 0;
  }
  v29 = v59;
  v30 = v60;
  v31 = *(void (**)(_BYTE *))(v59 + 104);
  v56 = *MEMORY[0x24BEA4F10];
  v31(v8);
  v32 = sub_213EF237C();
  v34 = v33;
  v35 = *(void (**)(_BYTE *, uint64_t))(v29 + 8);
  v35(v8, v30);
  if (v26)
  {
    if (v27 == v32 && v26 == v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      type metadata accessor for RuleResult();
      swift_storeEnumTagMultiPayload();
      return swift_bridgeObjectRelease();
    }
    v36 = sub_213EF3234();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v36 & 1) != 0)
      goto LABEL_26;
  }
  else
  {
    result = swift_bridgeObjectRelease();
  }
  if (v24)
  {
    if (v24 > *(_QWORD *)(v23 + 16))
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v37 = v23 + 16 * v24;
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v39 = 0;
    v38 = 0;
  }
  v40 = v58;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v31)(v58, *MEMORY[0x24BEA4F08], v30);
  v41 = sub_213EF237C();
  v43 = v42;
  v35(v40, v30);
  if (!v38)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v39 == v41 && v38 == v43)
  {
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  v44 = sub_213EF3234();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_37:
  v45 = v24 - 2;
  if (v24 < 2)
    v45 = 0;
  v46 = *(_QWORD *)(v23 + 16);
  if (v46 < v45 || v46 < v24)
    goto LABEL_52;
  if (v45 == v24)
  {
    swift_bridgeObjectRelease();
    v47 = 0;
    v48 = 0;
    goto LABEL_45;
  }
  if (v45 < v24)
  {
    v49 = v23 + 16 * v45;
    v47 = *(_QWORD *)(v49 + 32);
    v48 = *(_QWORD *)(v49 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_45:
    v50 = v57;
    v51 = v60;
    ((void (*)(_BYTE *, _QWORD, uint64_t))v31)(v57, v56, v60);
    v52 = sub_213EF237C();
    v54 = v53;
    v35(v50, v51);
    if (v48)
    {
      if (v47 == v52 && v48 == v54)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF3234();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_18;
    }
    goto LABEL_13;
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t MessagesDeadEndClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MessagesDeadEndClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213DE00A0(uint64_t a1)
{
  return sub_213DE00C0(a1);
}

uint64_t sub_213DE00C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;

  v2 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeaturisedTurn(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213EA4050(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_213DD0984((uint64_t)v7);
    if (*(_QWORD *)(a1 + 16))
    {
LABEL_3:
      v12 = sub_213EF1D10();
      v14 = v13;
LABEL_14:
      if (qword_253F04A88 != -1)
        swift_once();
      v27 = sub_213EF2724();
      __swift_project_value_buffer(v27, (uint64_t)qword_253F08A00);
      swift_bridgeObjectRetain();
      v28 = sub_213EF270C();
      v29 = sub_213EF2C94();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = swift_slowAlloc();
        v59 = v31;
        *(_DWORD *)v30 = 136315394;
        if (qword_253F06C30 != -1)
          swift_once();
        v32 = qword_253F06C20;
        v33 = *(_QWORD *)algn_253F06C28;
        swift_bridgeObjectRetain();
        v58 = sub_213DB0570(v32, v33, &v59);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        swift_bridgeObjectRetain();
        v58 = sub_213DB0570(v12, v14, &v59);
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213DAB000, v28, v29, "%s Skipping conversation with id=%s with no dismissal features", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v31, -1, -1);
        MEMORY[0x2199C53C4](v30, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x24BEE4AF8];
    }
LABEL_13:
    v14 = 0x8000000213F05F90;
    v12 = 0xD000000000000014;
    goto LABEL_14;
  }
  sub_213DBB430((uint64_t)v7, (uint64_t)v11, type metadata accessor for FeaturisedTurn);
  v15 = swift_bridgeObjectRetain();
  v16 = sub_213DAE808(v15);
  v18 = v17;
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
    sub_213DCA828((uint64_t)v11, type metadata accessor for FeaturisedTurn);
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_3;
    goto LABEL_13;
  }
  v56 = v16;
  v19 = sub_213DDF9BC((uint64_t)v11);
  if (qword_253F06C30 != -1)
    swift_once();
  sub_213EE84EC(qword_253F06C20, *(unint64_t *)algn_253F06C28, v19);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    *(_QWORD *)&v57 = v11;
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = v19 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v24 = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v25 = v23 + *(int *)(v21 + 48);
      swift_storeEnumTagMultiPayload();
      sub_213E81FE0(v25, (uint64_t)v4);
      LOBYTE(v25) = v26;
      sub_213DCA828((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
      if ((v25 & 1) == 0)
        break;
      v23 += v24;
      if (!--v20)
      {
        swift_bridgeObjectRelease_n();
        v11 = (char *)v57;
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
    v44 = v57;
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  v34 = swift_bridgeObjectRetain();
  v35 = sub_213DAF3C8(v34);
  swift_bridgeObjectRelease();
  if (!v35)
  {
LABEL_36:
    if (qword_253F04A88 != -1)
      swift_once();
    v48 = sub_213EF2724();
    __swift_project_value_buffer(v48, (uint64_t)qword_253F08A00);
    v49 = sub_213EF270C();
    v50 = sub_213EF2C94();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = swift_slowAlloc();
      v59 = v52;
      *(_DWORD *)v51 = 136315138;
      v53 = qword_253F06C20;
      v54 = *(_QWORD *)algn_253F06C28;
      swift_bridgeObjectRetain();
      v58 = sub_213DB0570(v53, v54, &v59);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v49, v50, "%s message does not have 1 recipient, rejecting", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v52, -1, -1);
      MEMORY[0x2199C53C4](v51, -1, -1);
    }

    v44 = (uint64_t)v11;
LABEL_41:
    sub_213DCA828(v44, type metadata accessor for FeaturisedTurn);
    return MEMORY[0x24BEE4AF8];
  }
  if (!(v35 >> 62))
  {
    if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_25;
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  v47 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (v47 != 1)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_25:
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A650);
  v36 = swift_allocObject();
  v57 = xmmword_213EF53E0;
  *(_OWORD *)(v36 + 16) = xmmword_213EF53E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
  v37 = sub_213EF1D64();
  v38 = (uint64_t)v11;
  v39 = *(_QWORD *)(v37 - 8);
  v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v57;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v39 + 16))(v41 + v40, v38, v37);
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v43 = sub_213EF306C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v43 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v45 = v56;
  if (!v43)
    goto LABEL_33;
  if ((v35 & 0xC000000000000001) != 0)
  {
    v43 = MEMORY[0x2199C49B0](0, v35);
    goto LABEL_33;
  }
  if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v43 = *(_QWORD *)(v35 + 32);
    swift_retain();
LABEL_33:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v36 + 56) = &type metadata for MessagesAbandonmentClassification;
    *(_QWORD *)(v36 + 64) = &protocol witness table for MessagesAbandonmentClassification;
    v46 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v36 + 32) = v46;
    v46[2] = v45;
    v46[3] = v41;
    v46[4] = MEMORY[0x24BEE4AF8];
    v46[5] = v43;
    sub_213DCA828(v38, type metadata accessor for FeaturisedTurn);
    return v36;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MessagesDeadEndClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessagesDeadEndClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesDeadEndClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213DE08C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_213DE08F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaSignalScorer()
{
  return objc_opt_self();
}

uint64_t CoreDuetEventType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213DE0974
                                                                     + 4 * asc_213EF60A0[*v0]))(0xD000000000000011, 0x8000000213F04860);
}

uint64_t sub_213DE0974(uint64_t a1)
{
  return a1 + 2;
}

SiriPrivateLearningInference::CoreDuetEventType_optional __swiftcall CoreDuetEventType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::CoreDuetEventType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_213DE09FC(char *a1)
{
  sub_213E2A550(*a1);
}

unint64_t sub_213DE0A0C()
{
  unint64_t result;

  result = qword_254D3B360;
  if (!qword_254D3B360)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for CoreDuetEventType, &type metadata for CoreDuetEventType);
    atomic_store(result, (unint64_t *)&qword_254D3B360);
  }
  return result;
}

void sub_213DE0A50()
{
  char *v0;

  sub_213ED66BC(*v0);
}

void sub_213DE0A58(uint64_t a1)
{
  char *v1;

  sub_213E2AEE8(a1, *v1);
}

void sub_213DE0A60(uint64_t a1)
{
  char *v1;

  sub_213E2B5F0(a1, *v1);
}

SiriPrivateLearningInference::CoreDuetEventType_optional sub_213DE0A68(Swift::String *a1)
{
  return CoreDuetEventType.init(rawValue:)(*a1);
}

uint64_t sub_213DE0A74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CoreDuetEventType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for CoreDuetEventType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreDuetEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213DE0B74 + 4 * byte_213EF60A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213DE0BA8 + 4 * byte_213EF60A4[v4]))();
}

uint64_t sub_213DE0BA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE0BB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DE0BB8);
  return result;
}

uint64_t sub_213DE0BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DE0BCCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213DE0BD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE0BD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CoreDuetEventType()
{
  return &type metadata for CoreDuetEventType;
}

uint64_t sub_213DE0BF4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B530);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DE2720();
  sub_213EF3348();
  v8[15] = 0;
  sub_213EF31A4();
  if (!v1)
  {
    v8[14] = 1;
    sub_213EF31A4();
    v8[13] = 2;
    sub_213EF31A4();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_213DE0D48()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6581861;
  if (*v0 != 1)
    v1 = 0x61566C616E676973;
  if (*v0)
    return v1;
  else
    return 0x7472617473;
}

uint64_t sub_213DE0DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DE2440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213DE0DC4()
{
  sub_213DE2720();
  return sub_213EF3354();
}

uint64_t sub_213DE0DEC()
{
  sub_213DE2720();
  return sub_213EF3360();
}

void sub_213DE0E14(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_213DE2594(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
}

uint64_t sub_213DE0E40(_QWORD *a1)
{
  return sub_213DE0BF4(a1);
}

BOOL sub_213DE0E5C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t static ScoreStep.== infix(_:_:)(double *a1, double *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2])
    type metadata accessor for ScoreStep();
  return 0;
}

void type metadata accessor for ScoreStep()
{
  JUMPOUT(0x2199C5244);
}

BOOL sub_213DE0F40(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_213DE0F50()
{
  return sub_213EF3300();
}

uint64_t sub_213DE0F74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61684365726F6373 && a2 == 0xEB0000000065676ELL;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E676973 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_213DE1074()
{
  sub_213EF32F4();
  sub_213EF3300();
  return sub_213EF3330();
}

uint64_t sub_213DE10B8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C616E676973;
  else
    return 0x61684365726F6373;
}

BOOL sub_213DE10F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213DE0F40(*a1, *a2);
}

uint64_t sub_213DE110C()
{
  return sub_213DE1074();
}

uint64_t sub_213DE1120()
{
  return sub_213DE0F50();
}

uint64_t sub_213DE1134()
{
  sub_213EF32F4();
  sub_213DE0F50();
  return sub_213EF3330();
}

uint64_t sub_213DE117C()
{
  char *v0;

  return sub_213DE10B8(*v0);
}

uint64_t sub_213DE1190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DE0F74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213DE11C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213DE2718();
  *a1 = result;
  return result;
}

uint64_t sub_213DE11F0(uint64_t a1)
{
  MEMORY[0x2199C52D4](&unk_213EF6418, a1);
  return sub_213EF3354();
}

uint64_t sub_213DE1224(uint64_t a1)
{
  MEMORY[0x2199C52D4](&unk_213EF6418, a1);
  return sub_213EF3360();
}

void ScoreStep.encode(to:)()
{
  type metadata accessor for ScoreStep.CodingKeys();
}

uint64_t sub_213DE12A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x2199C52D4](&unk_213EF6418, a1);
  v3 = sub_213EF31C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v7 = *(_QWORD *)(v2 - 128);
  sub_213EF3348();
  v8 = *(_QWORD *)(v7 + 16);
  *(_OWORD *)(v2 - 112) = *(_OWORD *)v7;
  *(_QWORD *)(v2 - 96) = v8;
  *(_BYTE *)(v2 - 65) = 0;
  sub_213DE142C();
  v9 = *(_QWORD *)(v2 - 120);
  sub_213EF31BC();
  if (!v9)
  {
    *(_BYTE *)(v2 - 65) = 1;
    v10 = *(_QWORD *)(v2 - 144);
    *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 136);
    *(_QWORD *)(v2 - 104) = v10;
    v11 = *(_QWORD *)(v2 - 160);
    *(_QWORD *)(v2 - 96) = *(_QWORD *)(v2 - 152);
    *(_QWORD *)(v2 - 88) = v11;
    type metadata accessor for DomainSuggestionSignal();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void type metadata accessor for ScoreStep.CodingKeys()
{
  JUMPOUT(0x2199C5244);
}

unint64_t sub_213DE142C()
{
  unint64_t result;

  result = qword_254D3B368;
  if (!qword_254D3B368)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF63F0, &type metadata for ScoreChange);
    atomic_store(result, (unint64_t *)&qword_254D3B368);
  }
  return result;
}

void ScoreStep.init(from:)()
{
  type metadata accessor for DomainSuggestionSignal();
}

void sub_213DE14C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 144) = a1;
  *(_QWORD *)(v13 - 184) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 152) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  *(_QWORD *)(v13 - 88) = v9;
  type metadata accessor for ScoreStep.CodingKeys();
}

void sub_213DE1508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x2199C52D4](&unk_213EF6418, a1);
  v6 = sub_213EF315C();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 112) = v3;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for ScoreStep();
}

uint64_t sub_213DE1574(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v3 - 168) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v17 - v5;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v3 - 136) = v1;
  v7 = *(_QWORD *)(v3 - 120);
  sub_213EF333C();
  if (v7)
  {
    v16 = (uint64_t)v2;
  }
  else
  {
    v8 = v6;
    *(_QWORD *)(v3 - 192) = v4;
    v9 = *(_QWORD *)(v3 - 168);
    v10 = *(_QWORD *)(v3 - 160);
    *(_QWORD *)(v3 - 120) = v2;
    v12 = *(_QWORD *)(v3 - 152);
    v11 = *(_QWORD *)(v3 - 144);
    *(_BYTE *)(v3 - 65) = 0;
    sub_213DE170C();
    v13 = *(_QWORD *)(v3 - 136);
    sub_213EF3144();
    v14 = *(_QWORD *)(v3 - 96);
    *(_OWORD *)v8 = *(_OWORD *)(v3 - 112);
    *((_QWORD *)v8 + 2) = v14;
    *(_BYTE *)(v3 - 112) = 1;
    MEMORY[0x2199C52D4](&protocol conformance descriptor for DomainSuggestionSignal<A>, v11);
    sub_213EF3144();
    (*(void (**)(uint64_t, _QWORD))(v10 + 8))(v13, *(_QWORD *)(v3 - 128));
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 184) + 32))(&v8[*(int *)(v9 + 52)], v12, v11);
    (*(void (**)(_QWORD, char *, uint64_t))(*(_QWORD *)(v3 - 192) + 32))(*(_QWORD *)(v3 - 176), v8, v9);
    v16 = *(_QWORD *)(v3 - 120);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v16);
}

unint64_t sub_213DE170C()
{
  unint64_t result;

  result = qword_254D3B370[0];
  if (!qword_254D3B370[0])
  {
    result = MEMORY[0x2199C52D4](&unk_213EF63C8, &type metadata for ScoreChange);
    atomic_store(result, qword_254D3B370);
  }
  return result;
}

void sub_213DE1750(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  type metadata accessor for ScoreStep();
}

void sub_213DE179C()
{
  type metadata accessor for DomainSuggestionSignal();
}

uint64_t sub_213DE17B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

void sub_213DE17E8()
{
  ScoreStep.init(from:)();
}

void sub_213DE1808()
{
  ScoreStep.encode(to:)();
}

uint64_t sub_213DE181C(double *a1, double *a2)
{
  return static ScoreStep.== infix(_:_:)(a1, a2);
}

uint64_t sub_213DE182C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_213DE1834()
{
  type metadata accessor for DomainSuggestionSignal();
}

uint64_t *sub_213DE18B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  int v10;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  void *v17;
  const void *v18;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = v6 + 1;
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  v10 = v6 & 0x100000;
  if (v7 > 7 || v10 != 0 || ((v7 + 1) & ~v7) + v9 + ((v7 + 24) & ~v7) > 0x18)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v14 = ~v7;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v15 = (_BYTE *)(((unint64_t)a1 + v7 + 24) & ~v7);
    v16 = (_BYTE *)(((unint64_t)a2 + v7 + 24) & ~v7);
    *v15 = *v16;
    v17 = (void *)((unint64_t)&v15[v8] & v14);
    v18 = (const void *)((unint64_t)&v16[v8] & v14);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v18, 1, v4))
    {
      memcpy(v17, v18, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v17, v18, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
    }
  }
  return v3;
}

uint64_t sub_213DE19EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (((a1 + *(unsigned __int8 *)(v3 + 80) + 24) | *(unsigned __int8 *)(v3 + 80)) + 1) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  return result;
}

uint64_t sub_213DE1A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  void *v9;
  const void *v10;
  size_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (_BYTE *)((v6 + 24 + a1) & ~v6);
  v8 = (_BYTE *)((v6 + 24 + a2) & ~v6);
  *v7 = *v8;
  v9 = (void *)((unint64_t)&v7[v6 + 1] & ~v6);
  v10 = (const void *)((unint64_t)&v8[v6 + 1] & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v11 = *(_QWORD *)(v5 + 64);
    else
      v11 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v9, v10, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_213DE1B40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (_BYTE *)(((unint64_t)a1 + v6 + 24) & ~v6);
  v8 = (_BYTE *)(((unint64_t)a2 + v6 + 24) & ~v6);
  *v7 = *v8;
  v9 = (void *)((unint64_t)&v7[v6 + 1] & ~v6);
  v10 = (void *)((unint64_t)&v8[v6 + 1] & ~v6);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v12 = v11(v9, 1, v4);
  v13 = v11(v10, 1, v4);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v9, v10, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v9, v10, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v9, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v14 = *(_QWORD *)(v5 + 64);
  else
    v14 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v9, v10, v14);
  return a1;
}

uint64_t sub_213DE1C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  void *v9;
  const void *v10;
  size_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (_BYTE *)((v6 + 24 + a1) & ~v6);
  v8 = (_BYTE *)((v6 + 24 + a2) & ~v6);
  *v7 = *v8;
  v9 = (void *)((unint64_t)&v7[v6 + 1] & ~v6);
  v10 = (const void *)((unint64_t)&v8[v6 + 1] & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84))
      v11 = *(_QWORD *)(v5 + 64);
    else
      v11 = *(_QWORD *)(v5 + 64) + 1;
    memcpy(v9, v10, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v9, v10, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_213DE1D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (_BYTE *)((v6 + 24 + a1) & ~v6);
  v8 = (_BYTE *)((v6 + 24 + a2) & ~v6);
  *v7 = *v8;
  v9 = (void *)((unint64_t)&v7[v6 + 1] & ~v6);
  v10 = (void *)((unint64_t)&v8[v6 + 1] & ~v6);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v12 = v11(v9, 1, v4);
  v13 = v11(v10, 1, v4);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v9, v10, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v9, v10, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v9, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v14 = *(_QWORD *)(v5 + 64);
  else
    v14 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v9, v10, v14);
  return a1;
}

uint64_t sub_213DE1E80(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v16;
  int v17;
  unsigned __int8 *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0xF7)
    v7 = 247;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = v9 + 1;
  v11 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v12 = v8 + (v10 & ~v9) + ((v9 + 24) & ~v9);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v16 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v16 < 2)
    {
LABEL_28:
      v18 = (unsigned __int8 *)((a1 + v9 + 24) & ~v9);
      if (v6 > 0xF7)
      {
        v21 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&v18[v10] & ~v9);
        if (v21 >= 2)
          return v21 - 1;
        else
          return 0;
      }
      else
      {
        v19 = *v18;
        if (v19 >= 3)
          v20 = v19 - 2;
        else
          v20 = 0;
        if (v20 >= 7)
          return v20 - 6;
        else
          return 0;
      }
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_28;
LABEL_21:
  v17 = (v14 - 1) << v13;
  if (v12 > 3)
    v17 = 0;
  if ((_DWORD)v12)
  {
    if (v12 > 3)
      LODWORD(v12) = 4;
    __asm { BR              X12 }
  }
  return v7 + v17 + 1;
}

void sub_213DE201C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0xF7)
    v10 = 247;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + v11
      + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X16 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_213DE2278()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_213DE2280()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_213DE22A0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_213DE22B0()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_213DE22B8()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for SignalScorer()
{
  return objc_opt_self();
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ScoreChange(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScoreChange(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ScoreChange()
{
  return &type metadata for ScoreChange;
}

uint64_t sub_213DE2354(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213DE23A0 + 4 * byte_213EF61C7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_213DE23D4 + 4 * byte_213EF61C2[v4]))();
}

uint64_t sub_213DE23D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE23DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DE23E4);
  return result;
}

uint64_t sub_213DE23F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DE23F8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213DE23FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE2404(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_213DE2410()
{
  JUMPOUT(0x2199C52D4);
}

void sub_213DE2420()
{
  JUMPOUT(0x2199C52D4);
}

void sub_213DE2430()
{
  JUMPOUT(0x2199C52D4);
}

uint64_t sub_213DE2440(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61566C616E676973 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

double sub_213DE2594(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B540);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DE2720();
  sub_213EF333C();
  v12 = 0;
  sub_213EF312C();
  v7 = v6;
  v11 = 1;
  sub_213EF312C();
  v10 = 2;
  sub_213EF312C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

uint64_t sub_213DE2718()
{
  return 2;
}

unint64_t sub_213DE2720()
{
  unint64_t result;

  result = qword_254D3B538;
  if (!qword_254D3B538)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6520, &type metadata for ScoreChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3B538);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ScoreChange.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213DE27B0 + 4 * byte_213EF61D1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213DE27E4 + 4 * byte_213EF61CC[v4]))();
}

uint64_t sub_213DE27E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE27EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DE27F4);
  return result;
}

uint64_t sub_213DE2800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DE2808);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213DE280C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE2814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScoreChange.CodingKeys()
{
  return &type metadata for ScoreChange.CodingKeys;
}

unint64_t sub_213DE2834()
{
  unint64_t result;

  result = qword_254D3B548;
  if (!qword_254D3B548)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF64F8, &type metadata for ScoreChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3B548);
  }
  return result;
}

unint64_t sub_213DE287C()
{
  unint64_t result;

  result = qword_254D3B550;
  if (!qword_254D3B550)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6468, &type metadata for ScoreChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3B550);
  }
  return result;
}

unint64_t sub_213DE28C4()
{
  unint64_t result;

  result = qword_254D3B558;
  if (!qword_254D3B558)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6490, &type metadata for ScoreChange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3B558);
  }
  return result;
}

uint64_t MediaPlayClassifier.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  *(_QWORD *)(v0 + 16) = 91;
  *(_QWORD *)(v0 + 24) = 0xE100000000000000;
  return v0;
}

uint64_t MediaPlayClassifier.init()()
{
  uint64_t v0;

  type metadata accessor for MediaPlayClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B30);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  *(_QWORD *)(v0 + 16) = 91;
  *(_QWORD *)(v0 + 24) = 0xE100000000000000;
  return v0;
}

uint64_t type metadata accessor for MediaPlayClassifier()
{
  return objc_opt_self();
}

uint64_t sub_213DE2A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)a1;
  v16 = *(_OWORD *)(a1 + 8);
  v17 = v9;
  v18 = v10;
  sub_213DE2B54(&v15, a2, (uint64_t)v8);
  v11 = type metadata accessor for MediaPlayClassification();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v8, 1, v11) == 1)
  {
    result = sub_213DAFEC4((uint64_t)v8, &qword_254D3B568);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_QWORD *)(a3 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(a3 + 24) = v11;
    *(_QWORD *)(a3 + 32) = &protocol witness table for MediaPlayClassification;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
    return sub_213DE4A40((uint64_t)v8, (uint64_t)boxed_opaque_existential_1);
  }
  return result;
}

uint64_t sub_213DE2B54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  ValueMetadata *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v119;
  uint64_t *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  ValueMetadata *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t v143;
  ValueMetadata *v144;
  unint64_t v145;
  unint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;

  v4 = v3;
  v133 = a2;
  v141 = a3;
  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v134 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MediaPlayClassification();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v119 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (uint64_t *)((char *)&v119 - v17);
  v19 = a1[1];
  v135 = *a1;
  v136 = v19;
  v20 = swift_bridgeObjectRetain();
  sub_213DAF460(v20, (uint64_t)&v142);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v142 + 1))
  {
    v137 = *((_QWORD *)&v142 + 1);
    v138 = v4;
    v127 = v7;
    v139 = v9;
    v140 = v10;
    v21 = v142;
    v22 = v143;
    v23 = v144;
    v24 = v145;
    v25 = swift_bridgeObjectRetain();
    sub_213DAEB60(v25, &v142);
    swift_bridgeObjectRelease();
    v26 = *((_QWORD *)&v142 + 1);
    if (*((_QWORD *)&v142 + 1))
    {
      v131 = v21;
      v130 = v23;
      v132 = v24;
      v122 = v6;
      v121 = v13;
      v123 = v16;
      v27 = v142;
      v129 = v146;
      LODWORD(v128) = v147;
      v28 = swift_bridgeObjectRetain();
      v125 = sub_213DAF5EC(v28);
      v30 = v29;
      v31 = swift_bridgeObjectRelease();
      v126 = v30;
      if (v30)
      {
        v124 = v22;
        v120 = v18;
        *(_QWORD *)&v142 = 47;
        *((_QWORD *)&v142 + 1) = 0xE100000000000000;
        MEMORY[0x24BDAC7A8](v31);
        *(&v119 - 2) = (uint64_t)&v142;
        swift_bridgeObjectRetain_n();
        v32 = sub_213DE3B38(0x7FFFFFFFFFFFFFFFLL, 1, sub_213DE48F8, (uint64_t)(&v119 - 4), v27, v26);
        swift_bridgeObjectRelease();
        sub_213DB8408(v27, v26);
        v33 = *(_QWORD *)(v32 + 16);
        if (v33)
        {
          v34 = (unint64_t *)(v32 + 32 * v33);
          v36 = *v34;
          v35 = v34[1];
          v37 = v34[2];
          v38 = v34[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v129 = v35;
          v39 = v35;
          v128 = v37;
          v40 = v126;
          v41 = sub_213DE494C(v36, v39, v37, v38, v125, v126);
          v42 = v138;
          v43 = v131;
          if ((v41 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v44 = swift_bridgeObjectRetain();
            v45 = sub_213DAF5F8(v44);
            v47 = v46;
            swift_bridgeObjectRelease();
            if ((v47 & 1) == 0)
            {
              v48 = swift_bridgeObjectRetain();
              v49 = sub_213DAF1F8(v48);
              swift_bridgeObjectRelease();
              v50 = v127;
              v51 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
              v52 = v43;
              v53 = v134;
              v54 = v122;
              v51(v134, v133, v122);
              v55 = v120;
              *v120 = v45;
              *((_BYTE *)v55 + 8) = v49 & 1;
              v56 = v136;
              v57 = v137;
              v55[2] = v135;
              v55[3] = v56;
              v55[4] = v52;
              v55[5] = v57;
              v9 = v139;
              v58 = (char *)v55 + *(int *)(v139 + 32);
              v51(v58, (uint64_t)v53, v54);
              __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
              v59 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
              v60 = swift_allocObject();
              *(_OWORD *)(v60 + 16) = xmmword_213EF53E0;
              v51((char *)(v60 + v59), (uint64_t)v58, v54);
              *(uint64_t *)((char *)v55 + *(int *)(v9 + 36)) = v60;
              __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
              v61 = swift_allocObject();
              *(_OWORD *)(v61 + 16) = xmmword_213EF44B0;
              *(_QWORD *)(v61 + 32) = v135;
              v62 = v131;
              *(_QWORD *)(v61 + 40) = v136;
              *(_QWORD *)(v61 + 48) = v62;
              *(_QWORD *)(v61 + 56) = v57;
              v63 = *(void (**)(char *, uint64_t))(v50 + 8);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              v63(v53, v54);
              sub_213DC7B60(v62, v57);
              *(uint64_t *)((char *)v55 + *(int *)(v9 + 40)) = v61;
              if (qword_253F04A88 != -1)
                swift_once();
              v64 = sub_213EF2724();
              __swift_project_value_buffer(v64, (uint64_t)qword_253F08A00);
              v65 = (uint64_t)v55;
              v66 = (uint64_t)v123;
              sub_213DE49C0(v65, (uint64_t)v123);
              v67 = v138;
              swift_retain();
              v68 = sub_213EF270C();
              v69 = sub_213EF2C94();
              if (os_log_type_enabled(v68, v69))
              {
                v70 = swift_slowAlloc();
                v71 = swift_slowAlloc();
                *(_QWORD *)&v142 = v71;
                *(_DWORD *)v70 = 136315394;
                v72 = *(_QWORD *)(v67 + 16);
                v73 = *(_QWORD *)(v67 + 24);
                swift_bridgeObjectRetain();
                v148 = sub_213DB0570(v72, v73, (uint64_t *)&v142);
                sub_213EF2D9C();
                swift_release();
                swift_bridgeObjectRelease();
                *(_WORD *)(v70 + 12) = 2080;
                sub_213DE49C0(v66, (uint64_t)v121);
                v74 = sub_213EF288C();
                v148 = sub_213DB0570(v74, v75, (uint64_t *)&v142);
                sub_213EF2D9C();
                v9 = v139;
                swift_bridgeObjectRelease();
                sub_213DE4A04(v66);
                _os_log_impl(&dword_213DAB000, v68, v69, "%s classification generated: %s", (uint8_t *)v70, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x2199C53C4](v71, -1, -1);
                MEMORY[0x2199C53C4](v70, -1, -1);
              }
              else
              {
                swift_release();
                sub_213DE4A04(v66);
              }

              v10 = v140;
              sub_213DE4A40((uint64_t)v120, v141);
              v85 = 0;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v141, v85, 1, v9);
            }
            sub_213DC7B60(v43, v137);
            if (qword_253F04BB0 != -1)
              swift_once();
            v144 = &type metadata for PIMSConstraintMismatch;
            v145 = sub_213DE48B4();
            *(_QWORD *)&v142 = 0xD000000000000016;
            *((_QWORD *)&v142 + 1) = 0x8000000213F06090;
            LOBYTE(v143) = 2;
            sub_213EF210C();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v142);
            if (qword_253F04A88 != -1)
              swift_once();
            v110 = sub_213EF2724();
            __swift_project_value_buffer(v110, (uint64_t)qword_253F08A00);
            swift_retain();
            v111 = sub_213EF270C();
            v112 = sub_213EF2CA0();
            if (os_log_type_enabled(v111, v112))
            {
              v113 = (uint8_t *)swift_slowAlloc();
              v114 = v42;
              v115 = swift_slowAlloc();
              *(_QWORD *)&v142 = v115;
              *(_DWORD *)v113 = 136315138;
              v116 = *(_QWORD *)(v114 + 16);
              v117 = *(_QWORD *)(v114 + 24);
              swift_bridgeObjectRetain();
              v148 = sub_213DB0570(v116, v117, (uint64_t *)&v142);
              sub_213EF2D9C();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, v111, v112, "%s Cannot extract TotalPlayLength from NowPlayingEvent", v113, 0xCu);
              v85 = 1;
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v115, -1, -1);
              MEMORY[0x2199C53C4](v113, -1, -1);

LABEL_44:
              v9 = v139;
              v10 = v140;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v141, v85, 1, v9);
            }

            swift_release();
          }
          else
          {
            v136 = v36;
            sub_213DC7B60(v131, v137);
            if (qword_253F04BB0 != -1)
              swift_once();
            v144 = &type metadata for PIMSConstraintMismatch;
            v145 = sub_213DE48B4();
            *(_QWORD *)&v142 = 0xD000000000000016;
            *((_QWORD *)&v142 + 1) = 0x8000000213F06090;
            LOBYTE(v143) = 1;
            sub_213EF210C();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v142);
            if (qword_253F04A88 != -1)
              swift_once();
            v98 = sub_213EF2724();
            __swift_project_value_buffer(v98, (uint64_t)qword_253F08A00);
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v99 = sub_213EF270C();
            v100 = sub_213EF2CA0();
            if (os_log_type_enabled(v99, v100))
            {
              v101 = v42;
              v102 = swift_slowAlloc();
              v103 = swift_slowAlloc();
              *(_QWORD *)&v142 = v103;
              *(_DWORD *)v102 = 136315650;
              v104 = v40;
              v105 = *(_QWORD *)(v101 + 16);
              v106 = *(_QWORD *)(v101 + 24);
              swift_bridgeObjectRetain();
              v148 = sub_213DB0570(v105, v106, (uint64_t *)&v142);
              sub_213EF2D9C();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v102 + 12) = 2080;
              swift_bridgeObjectRetain();
              v148 = sub_213DB0570(v125, v104, (uint64_t *)&v142);
              sub_213EF2D9C();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v102 + 22) = 2080;
              swift_bridgeObjectRetain();
              v107 = MEMORY[0x2199C4344](v136, v129, v128, v38);
              v109 = v108;
              swift_bridgeObjectRelease();
              v148 = sub_213DB0570(v107, v109, (uint64_t *)&v142);
              sub_213EF2D9C();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_213DAB000, v99, v100, "%s NowPlayingEvent (%s) and PlayMediaIntent (%s) media ids do not match", (uint8_t *)v102, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x2199C53C4](v103, -1, -1);
              MEMORY[0x2199C53C4](v102, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_release_n();
            }
          }
          v85 = 1;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v131;
        v87 = v137;
      }
      else
      {
        sub_213DB8408(v27, v26);
        v86 = v131;
        v87 = v137;
      }
    }
    else
    {
      v86 = v21;
      v87 = v137;
    }
    sub_213DC7B60(v86, v87);
    v88 = v138;
    v9 = v139;
    if (qword_253F04A88 != -1)
      swift_once();
    v89 = sub_213EF2724();
    __swift_project_value_buffer(v89, (uint64_t)qword_253F08A00);
    swift_retain();
    v90 = sub_213EF270C();
    v91 = sub_213EF2CA0();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      v93 = swift_slowAlloc();
      *(_QWORD *)&v142 = v93;
      *(_DWORD *)v92 = 136315138;
      v94 = v9;
      v95 = *(_QWORD *)(v88 + 16);
      v96 = *(_QWORD *)(v88 + 24);
      swift_bridgeObjectRetain();
      v97 = v95;
      v9 = v94;
      v148 = sub_213DB0570(v97, v96, (uint64_t *)&v142);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v90, v91, "%s Cannot extract media ids from NowPlayingEvent/PlayMediaIntent", v92, 0xCu);
      v85 = 1;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v93, -1, -1);
      MEMORY[0x2199C53C4](v92, -1, -1);

    }
    else
    {

      swift_release();
      v85 = 1;
    }
    v10 = v140;
  }
  else
  {
    if (qword_253F04BB0 != -1)
      swift_once();
    v144 = &type metadata for PIMSConstraintMismatch;
    v145 = sub_213DE48B4();
    *(_QWORD *)&v142 = 0xD000000000000016;
    *((_QWORD *)&v142 + 1) = 0x8000000213F06090;
    LOBYTE(v143) = 0;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v142);
    if (qword_253F04A88 != -1)
      swift_once();
    v76 = sub_213EF2724();
    __swift_project_value_buffer(v76, (uint64_t)qword_253F08A00);
    swift_retain();
    v77 = sub_213EF270C();
    v78 = sub_213EF2C94();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc();
      v80 = swift_slowAlloc();
      *(_QWORD *)&v142 = v80;
      v140 = v10;
      *(_DWORD *)v79 = 136315138;
      v81 = v9;
      v82 = *(_QWORD *)(v4 + 16);
      v83 = *(_QWORD *)(v4 + 24);
      swift_bridgeObjectRetain();
      v84 = v82;
      v9 = v81;
      v148 = sub_213DB0570(v84, v83, (uint64_t *)&v142);
      v10 = v140;
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v77, v78, "%s Can't classify media play, attached now playing event not found", v79, 0xCu);
      v85 = 1;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v80, -1, -1);
      MEMORY[0x2199C53C4](v79, -1, -1);

    }
    else
    {

      swift_release();
      v85 = 1;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v141, v85, 1, v9);
}

uint64_t MediaPlayClassifier.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MediaPlayClassifier.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213DE3B18(uint64_t a1)
{
  return sub_213DE44D4(a1);
}

uint64_t sub_213DE3B38(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_213DE3FD4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_213EF2964();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_213EF28D4();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_213EF28D4();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_213EF2988();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_213DB622C(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_213DB622C((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_213EF28D4();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_213EF2988();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_213DB622C(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_213DB622C((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_213EF3048();
  __break(1u);
LABEL_42:
  result = sub_213EF3048();
  __break(1u);
  return result;
}

uint64_t sub_213DE3FD4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_213EF2988();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_213DB622C(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_213DB622C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_213EF3048();
  __break(1u);
  return result;
}

uint64_t sub_213DE412C(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_213EF3234() & 1;
}

uint64_t sub_213DE4180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v17[3];
  unint64_t v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A850);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v17 - v8;
  result = MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v17[1] = v1;
    v12 = *(_QWORD *)(v7 + 72);
    v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v13 = a1 + v18;
    v14 = MEMORY[0x24BEE4AF8];
    v17[2] = "INSendMessageIntent";
    do
    {
      sub_213DE4B08(v13, (uint64_t)v9);
      if (*((_QWORD *)v9 + 3) == 0xD000000000000011 && *((_QWORD *)v9 + 4) == 0x8000000213F048A0
        || (sub_213EF3234() & 1) != 0)
      {
        sub_213DE4AB8((uint64_t)v9, (uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD158(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v19;
        v16 = *(_QWORD *)(v19 + 16);
        v15 = *(_QWORD *)(v19 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_213DCD158(v15 > 1, v16 + 1, 1);
          v14 = v19;
        }
        *(_QWORD *)(v14 + 16) = v16 + 1;
        sub_213DE4AB8((uint64_t)v6, v14 + v18 + v16 * v12);
      }
      else
      {
        sub_213DAFEC4((uint64_t)v9, &qword_254D3A850);
      }
      v13 += v12;
      --v11;
    }
    while (v11);
    return v19;
  }
  return result;
}

_QWORD *sub_213DE4358(uint64_t a1, void (*a2)(__int128 *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  __int128 v15[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A850);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    a2(&v13, v7, v7 + *(int *)(v5 + 48));
    if (v14)
    {
      sub_213DB0BF0(&v13, (uint64_t)v15);
      sub_213DB0BF0(v15, (uint64_t)&v13);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_213DB5B2C(0, v9[2] + 1, 1, v9);
      v11 = v9[2];
      v10 = v9[3];
      if (v11 >= v10 >> 1)
        v9 = sub_213DB5B2C((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
      v9[2] = v11 + 1;
      sub_213DB0BF0(&v13, (uint64_t)&v9[5 * v11 + 4]);
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v13, &qword_253F06998);
    }
    v7 += v8;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_213DE44D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  char isUniquelyReferenced_nonNull_native;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A850);
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BEE4AF8];
  v45 = *(_QWORD *)(a1 + 16);
  if (!v45)
  {
    v9 = MEMORY[0x24BEE4AF8];
LABEL_32:
    v37 = sub_213DE4180(v9);
    v38 = swift_bridgeObjectRelease();
    MEMORY[0x24BDAC7A8](v38);
    v39 = sub_213DE4358(v37, (void (*)(__int128 *__return_ptr, uint64_t, uint64_t))sub_213DE4B00);
    swift_bridgeObjectRelease();
    return (uint64_t)v39;
  }
  v6 = type metadata accessor for FeaturisedTurn(0);
  v7 = *(_QWORD *)(v6 - 8);
  v43 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v44 = v6;
  v42 = *(_QWORD *)(v7 + 72);
  v41 = a1;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v5;
  while (1)
  {
    v10 = *(int *)(v44 + 28);
    v53 = v43 + v42 * v8;
    v11 = *(_QWORD *)(v53 + v10);
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v47 = v8;
      v48 = v9;
      v54 = v5;
      swift_bridgeObjectRetain();
      sub_213DCD158(0, v12, 0);
      v13 = v54;
      v14 = sub_213EF1D64();
      v49 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      v50 = v14;
      v46 = v11;
      v15 = (uint64_t *)(v11 + 64);
      do
      {
        v16 = *(v15 - 3);
        v18 = *(v15 - 2);
        v17 = *(v15 - 1);
        v19 = *v15;
        v20 = v53;
        v21 = (char *)v4 + *(int *)(v52 + 48);
        *v4 = *(v15 - 4);
        v4[1] = v16;
        v4[2] = v18;
        v4[3] = v17;
        v4[4] = v19;
        v49(v21, v20, v50);
        v54 = v13;
        v22 = *(_QWORD *)(v13 + 16);
        v23 = *(_QWORD *)(v13 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22 >= v23 >> 1)
        {
          sub_213DCD158(v23 > 1, v22 + 1, 1);
          v13 = v54;
        }
        v15 += 5;
        *(_QWORD *)(v13 + 16) = v22 + 1;
        sub_213DE4AB8((uint64_t)v4, v13+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v22);
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      v5 = MEMORY[0x24BEE4AF8];
      v8 = v47;
      v9 = v48;
    }
    else
    {
      v13 = v5;
    }
    v24 = *(_QWORD *)(v13 + 16);
    v25 = *(_QWORD *)(v9 + 16);
    v26 = v25 + v24;
    if (__OFADD__(v25, v24))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v26 <= *(_QWORD *)(v9 + 24) >> 1)
    {
      if (*(_QWORD *)(v13 + 16))
        goto LABEL_21;
    }
    else
    {
      if (v25 <= v26)
        v28 = v25 + v24;
      else
        v28 = v25;
      v9 = sub_213DB5C6C(isUniquelyReferenced_nonNull_native, v28, 1, v9);
      if (*(_QWORD *)(v13 + 16))
      {
LABEL_21:
        v29 = *(_QWORD *)(v9 + 16);
        if ((*(_QWORD *)(v9 + 24) >> 1) - v29 < v24)
          goto LABEL_35;
        v30 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
        v31 = *(_QWORD *)(v51 + 72);
        v32 = v9 + v30 + v31 * v29;
        if (v13 + v30 < v32 + v31 * v24 && v32 < v13 + v30 + v31 * v24)
          goto LABEL_37;
        swift_arrayInitWithCopy();
        if (v24)
        {
          v34 = *(_QWORD *)(v9 + 16);
          v35 = __OFADD__(v34, v24);
          v36 = v34 + v24;
          if (v35)
            goto LABEL_36;
          *(_QWORD *)(v9 + 16) = v36;
        }
        goto LABEL_4;
      }
    }
    if (v24)
      goto LABEL_34;
LABEL_4:
    ++v8;
    swift_bridgeObjectRelease();
    if (v8 == v45)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

uint64_t method lookup function for MediaPlayClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaPlayClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MediaPlayClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

unint64_t sub_213DE48B4()
{
  unint64_t result;

  result = qword_254D3B560;
  if (!qword_254D3B560)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PIMSConstraintMismatch, &type metadata for PIMSConstraintMismatch);
    atomic_store(result, (unint64_t *)&qword_254D3B560);
  }
  return result;
}

uint64_t sub_213DE48F8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_213EF3234() & 1;
}

uint64_t sub_213DE494C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;

  if ((a6 & 0x2000000000000000) != 0)
    v6 = HIBYTE(a6) & 0xF;
  else
    v6 = a5 & 0xFFFFFFFFFFFFLL;
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6)
    return 1;
  else
    return sub_213EF31E0() & 1;
}

uint64_t sub_213DE49C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaPlayClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DE4A04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaPlayClassification();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_213DE4A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaPlayClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DE4A84()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213DE4AA8()
{
  return swift_deallocObject();
}

uint64_t sub_213DE4AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DE4B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_213DE2A48(a1, a2, a3);
}

uint64_t sub_213DE4B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DE4B50@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];
  uint64_t v7;
  _BYTE v8[40];

  v3 = *(_QWORD *)(a1 + *MEMORY[0x24BEA4F70]);
  sub_213EF29C4();
  sub_213DAFE40((uint64_t)v8, (uint64_t)v6);
  if (!v7)
  {
    sub_213DB848C((uint64_t)v6);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v4 = 1;
    goto LABEL_6;
  }
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v4 = 0;
LABEL_6:
  sub_213DB848C((uint64_t)v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, v4, 1, v3);
}

uint64_t sub_213DE4C5C(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[40];

  sub_213DAFDFC(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  v1 = swift_dynamicCast();
  if ((_DWORD)v1)
    swift_release();
  return v1;
}

uint64_t sub_213DE4CC8(uint64_t a1)
{
  return sub_213DE4C5C(a1) & 1;
}

uint64_t sub_213DE4CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAF220(v0);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
  {
    if (v1 != 0xD000000000000014 || v3 != 0x8000000213F06140)
    {
      v4 = sub_213EF3234();
LABEL_20:
      swift_bridgeObjectRelease();
      return v4 & 1;
    }
LABEL_19:
    v4 = 1;
    goto LABEL_20;
  }
  v5 = swift_bridgeObjectRetain();
  v6 = sub_213DAF3B0(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8 = sub_213DAFF00();
      result = swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      if (v7 != 1)
      {
        v10 = v6 + 56;
        v11 = 1;
        while (1)
        {
          v12 = v11 + 1;
          if (__OFADD__(v11, 1))
            break;
          swift_bridgeObjectRetain();
          v13 = sub_213DAFF00();
          result = swift_bridgeObjectRelease();
          if ((v13 & 1) != 0)
            goto LABEL_18;
          ++v11;
          v10 += 16;
          if (v12 == v7)
            goto LABEL_13;
        }
        __break(1u);
        goto LABEL_31;
      }
LABEL_13:
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v14 = swift_bridgeObjectRetain();
  v15 = sub_213DAF3BC(v14);
  swift_bridgeObjectRelease();
  if (!v15)
  {
    v4 = 0;
    return v4 & 1;
  }
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
    v4 = 0;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_213DAFF00();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_18;
  if (v16 == 1)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    v4 = 0;
    goto LABEL_20;
  }
  v18 = v15 + 56;
  v19 = 1;
  while (1)
  {
    v20 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    swift_bridgeObjectRetain();
    v21 = sub_213DAFF00();
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_18;
    ++v19;
    v18 += 16;
    if (v20 == v16)
      goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_213DE4FA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  __int128 v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;

  v19 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v19);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return 0;
  v6 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v7 = *(_QWORD *)(v2 + 72);
  v18[1] = a1;
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v19;
  v20 = v6;
  v21 = v7;
  while (1)
  {
    sub_213DAFDB8(v6 + v7 * v8, (uint64_t)v4);
    if ((sub_213DE4CEC() & 1) != 0)
      break;
    sub_213DAFE88((uint64_t)v4);
LABEL_4:
    if (++v8 == v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v10 = *(_QWORD *)&v4[*(int *)(v9 + 24)];
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + 32;
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_213DAFDFC(v12, (uint64_t)&v23);
      sub_213DAFDFC((uint64_t)&v23, (uint64_t)v22);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      sub_213EF2544();
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      v12 += 40;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        v6 = v20;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_213DB0BF0(&v23, (uint64_t)v25);
    v6 = v20;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_12:
    v26 = 0;
    memset(v25, 0, sizeof(v25));
  }
  sub_213DAFE40((uint64_t)v25, (uint64_t)&v23);
  if (!v24)
  {
    sub_213DB848C((uint64_t)&v23);
LABEL_23:
    sub_213DB848C((uint64_t)v25);
    swift_bridgeObjectRelease();
    sub_213DAFE88((uint64_t)v4);
    v7 = v21;
    goto LABEL_4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
  sub_213EF2544();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_23;
  swift_retain();
  sub_213EF23D0();
  swift_release_n();
  v13 = v23;
  sub_213DB848C((uint64_t)v25);
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_21:
    sub_213DAFE88((uint64_t)v4);
    swift_bridgeObjectRelease();
    v6 = v20;
    v7 = v21;
    goto LABEL_4;
  }
  sub_213DE52C8();
  swift_bridgeObjectRetain();
  v15 = (uint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    *(_QWORD *)&v25[0] = *(v15 - 1);
    *((_QWORD *)&v25[0] + 1) = v16;
    *(_QWORD *)&v23 = 0x6F724764656D614ELL;
    *((_QWORD *)&v23 + 1) = 0xEA00000000007075;
    if ((sub_213EF2DE4() & 1) != 0)
      break;
    v15 += 2;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      v9 = v19;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  sub_213DAFE88((uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_213DE52C8()
{
  unint64_t result;

  result = qword_254D3B570[0];
  if (!qword_254D3B570[0])
  {
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, qword_254D3B570);
  }
  return result;
}

uint64_t sub_213DE530C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213DE5350()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for CandidateNominator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CandidateNominator);
}

uint64_t PIMSFatalError.eventName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIMSFatalError.eventName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PIMSFatalError.eventName.modify())()
{
  return nullsub_1;
}

SiriPrivateLearningInference::PIMSFatalError __swiftcall PIMSFatalError.init(errorReason:)(SiriPrivateLearningInference::PIMSFatalErrorReason errorReason)
{
  char *v1;
  char v2;
  SiriPrivateLearningInference::PIMSFatalError result;

  v2 = *(_BYTE *)errorReason;
  strcpy(v1, "PIMSFatalError");
  v1[15] = -18;
  v1[16] = v2;
  LOBYTE(result.eventName._countAndFlagsBits) = errorReason;
  return result;
}

unint64_t PIMSFatalError.getLoggableProperties()()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04ED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = 0x616552726F727265;
  *(_QWORD *)(inited + 40) = 0xEB000000006E6F73;
  v1 = PIMSFatalErrorReason.rawValue.getter();
  v2 = MEMORY[0x24BEA5438];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v2;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v3;
  return sub_213DCAA54(inited);
}

uint64_t PIMSFatalErrorReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213DE54E8 + 4 * byte_213EF66B0[*v0]))(0xD00000000000003ELL, 0x8000000213F048E0);
}

unint64_t sub_213DE5598()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04ED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = 0x616552726F727265;
  *(_QWORD *)(inited + 40) = 0xEB000000006E6F73;
  v1 = PIMSFatalErrorReason.rawValue.getter();
  v2 = MEMORY[0x24BEA5438];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v2;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v3;
  return sub_213DCAA54(inited);
}

SiriPrivateLearningInference::PIMSFatalErrorReason_optional __swiftcall PIMSFatalErrorReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::PIMSFatalErrorReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_213DE5684(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213E2A270(*a1, *a2);
}

unint64_t sub_213DE5694()
{
  unint64_t result;

  result = qword_254D3B5F8[0];
  if (!qword_254D3B5F8[0])
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PIMSFatalErrorReason, &type metadata for PIMSFatalErrorReason);
    atomic_store(result, qword_254D3B5F8);
  }
  return result;
}

uint64_t sub_213DE56D8()
{
  sub_213EF32F4();
  PIMSFatalErrorReason.rawValue.getter();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213DE573C()
{
  PIMSFatalErrorReason.rawValue.getter();
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213DE578C()
{
  sub_213EF32F4();
  PIMSFatalErrorReason.rawValue.getter();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

SiriPrivateLearningInference::PIMSFatalErrorReason_optional sub_213DE57EC(Swift::String *a1)
{
  return PIMSFatalErrorReason.init(rawValue:)(*a1);
}

uint64_t sub_213DE57F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PIMSFatalErrorReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for PIMSFatalError()
{
  return &type metadata for PIMSFatalError;
}

uint64_t getEnumTagSinglePayload for PIMSFatalErrorReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PIMSFatalErrorReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_213DE5908 + 4 * byte_213EF66C1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_213DE593C + 4 * byte_213EF66BC[v4]))();
}

uint64_t sub_213DE593C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE5944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DE594CLL);
  return result;
}

uint64_t sub_213DE5958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DE5960);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_213DE5964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DE596C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PIMSFatalErrorReason()
{
  return &type metadata for PIMSFatalErrorReason;
}

uint64_t sub_213DE5988@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v54;
  char v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int16 v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int16 v112;

  v9 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v10);
  v96 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ThinMediaGroundTruth();
  v97 = *(_QWORD *)(v95 - 8);
  v12 = MEMORY[0x24BDAC7A8](v95);
  v94 = (uint64_t)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (uint64_t)&v84 - v14;
  v99 = (int *)type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v99);
  v92 = (uint64_t)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B710);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for MediaFeedbackGroundTruth();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B718);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v98 = (uint64_t)&v84 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  if (v9 == 8)
    return sub_213DE6348(a1, a5);
  v86 = v30;
  v87 = v35;
  v88 = v34;
  v89 = v29;
  v90 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&v84 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A838);
  if (!swift_dynamicCast())
  {
    v110 = 0u;
    v111 = 0u;
    v109 = 0u;
    sub_213DAFEC4((uint64_t)&v109, &qword_254D3B720);
    return sub_213DE6348(a1, a5);
  }
  v85 = a5;
  sub_213DE638C(&v109, &v105);
  v37 = a1;
  v38 = v106;
  v39 = v107;
  __swift_project_boxed_opaque_existential_1(&v105, v106);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
  v41 = v99[6];
  v91 = v37;
  v42 = (_QWORD *)(v37 + v41);
  v43 = *(_OWORD *)(v37 + v41 + 32);
  v112 = *(_WORD *)(v37 + v41 + 48);
  v44 = *(_OWORD *)(v37 + v41);
  v110 = *(_OWORD *)(v37 + v41 + 16);
  v111 = v43;
  v109 = v44;
  v45 = *(_QWORD *)(v40 + 16);
  sub_213DDF850((uint64_t)&v109);
  if (v45 && (v46 = sub_213DFA31C((uint64_t)&v109), (v47 & 1) != 0))
  {
    v48 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v46);
    swift_bridgeObjectRetain();
  }
  else
  {
    v48 = MEMORY[0x24BEE4B08];
  }
  v49 = v85;
  swift_bridgeObjectRelease();
  sub_213DDF8A4((uint64_t)&v109);
  v104 = v48;
  if (*(double *)(v91 + v99[8]) <= 0.0 && (v9 & 0xFE) == 6)
    sub_213DD5F54((char *)&v100, 5);
  v50 = v106;
  v51 = v108;
  v52 = __swift_project_boxed_opaque_existential_1(&v105, v106);
  *((_QWORD *)&v101 + 1) = v50;
  *(_QWORD *)&v102 = v51;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v100);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(boxed_opaque_existential_1, v52, v50);
  v54 = v98;
  ThinMediaGroundTruth.init(completeGroundTruth:)(&v100, v98);
  sub_213DE63A4((uint64_t)&v105, (uint64_t)&v100);
  v55 = swift_dynamicCast();
  v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if ((v55 & 1) != 0)
  {
    v56(v18, 0, 1, v19);
    sub_213DBB430((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
    v57 = &v22[*(int *)(v19 + 28)];
    if (*v42 == *(_QWORD *)v57 && v42[1] == *((_QWORD *)v57 + 1))
    {
      v58 = v91;
      v59 = v92;
      sub_213DE6348(v91, v92);
      v60 = v95;
    }
    else
    {
      v61 = sub_213EF3234();
      v58 = v91;
      v59 = v92;
      sub_213DE6348(v91, v92);
      v60 = v95;
      if ((v61 & 1) == 0)
      {
        sub_213DCA828(v59, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
LABEL_21:
        sub_213DCA828((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
        goto LABEL_22;
      }
    }
    v62 = PlusMediaSuggestion.isCorrection.getter();
    sub_213DCA828(v59, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
    if ((v62 & 1) != 0)
      sub_213DD5F54((char *)&v100, 7);
    goto LABEL_21;
  }
  v56(v18, 1, 1, v19);
  sub_213DAFEC4((uint64_t)v18, &qword_254D3B710);
  v58 = v91;
  v60 = v95;
LABEL_22:
  v63 = *(_QWORD *)(v58 + v99[7]);
  __swift_instantiateConcreteTypeFromMangledName(qword_254D3B728);
  v64 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_213EF53E0;
  v66 = v65 + v64;
  sub_213DE63E8(v54, v66);
  v67 = v87;
  sub_213DE63E8(v66, v87);
  v68 = v67;
  v69 = v88;
  sub_213DE6430(v68, v88);
  v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
  if (v70(v69, 1, v60) == 1)
  {
    sub_213DAFEC4(v69, &qword_254D3B718);
    v71 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v72 = v69;
    v73 = v93;
    sub_213DBB430(v72, v93, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    sub_213DBB430(v73, v94, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    v71 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v71 = sub_213DB6338(0, *(_QWORD *)(v71 + 16) + 1, 1, v71);
    v75 = *(_QWORD *)(v71 + 16);
    v74 = *(_QWORD *)(v71 + 24);
    if (v75 >= v74 >> 1)
      v71 = sub_213DB6338(v74 > 1, v75 + 1, 1, v71);
    *(_QWORD *)(v71 + 16) = v75 + 1;
    sub_213DBB430(v94, v71+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(_QWORD *)(v97 + 72) * v75, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    v54 = v98;
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)&v100 = v63;
  swift_bridgeObjectRetain();
  sub_213DB46E4(v71);
  v76 = v100;
  v77 = v90;
  sub_213DE63E8(v54, v90);
  if (v70(v77, 1, v60) == 1)
  {
    sub_213DAFEC4(v77, &qword_254D3B718);
  }
  else
  {
    v78 = *(unsigned __int8 *)(v77 + *(int *)(v60 + 28));
    sub_213DCA828(v77, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    if (v78 == 1)
      sub_213DD5F54((char *)&v100, 4);
  }
  v79 = sub_213EF1D64();
  v80 = (uint64_t)v96;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v96, 1, 1, v79);
  v103 = 0;
  v101 = 0u;
  v102 = 0u;
  v100 = 0u;
  v81 = *(_QWORD *)(v58 + v99[11]);
  v82 = v104;
  swift_bridgeObjectRetain();
  v83 = sub_213ECD034(v82, v81);
  sub_213E2BA18(v80, 0, (char **)&v100, v76, 0, 1, v83, 0, v49, 1, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_213DAFEC4(v80, &qword_253F04828);
  sub_213DAFEC4(v54, &qword_254D3B718);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v105);
}

uint64_t sub_213DE62A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaSuggestionCandidateProcessor()
{
  uint64_t result;

  result = qword_254D3B628;
  if (!qword_254D3B628)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213DE6314()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213DE6348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusMediaSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_213DE638C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_213DE63A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_213DE63E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DE6430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EntityPromptClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t EntityPromptClassifier.init()()
{
  uint64_t v0;

  return v0;
}

_QWORD *sub_213DE6490(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;

  swift_retain();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_213DE7D34(v3, v1, a1);
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213DE64F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X8>)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v47 = a5;
  v49 = a4;
  v45 = a3;
  v48 = a2;
  v10 = (uint64_t *)sub_213EF1D64();
  v11 = *(v10 - 1);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FeaturisedTurn(0);
  v50 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v54 = (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a6;
  v17 = *(_QWORD *)(a6 + 16);
  v52 = v15;
  if (!v17)
  {
LABEL_5:
    if (qword_253F04A88 != -1)
      goto LABEL_72;
    goto LABEL_6;
  }
  v18 = 0;
  v19 = v46 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
  v20 = *(_QWORD *)(v50 + 72);
  v51 = v19;
  while (1)
  {
    result = sub_213EF1D28();
    if ((result & 1) != 0)
      break;
    ++v18;
    v19 += v20;
    if (v17 == v18)
      goto LABEL_5;
  }
  v44 = a7;
  if (v17 == v18)
    a7 = v17;
  else
    a7 = v18 + 1;
  if (v17 < a7)
  {
    __break(1u);
    return result;
  }
  if (a7 == v17)
  {
    v29 = 1;
    a7 = v44;
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
  }
  swift_bridgeObjectRetain_n();
  v10 = &qword_253F06968;
  while (a7 < v17)
  {
    a1 = v54;
    sub_213DAFDB8(v51 + a7 * v20, v54);
    v30 = *(int *)(v14 + 24);
    v31 = *(_QWORD *)(a1 + v30);
    v32 = *(_QWORD *)(v31 + 16);
    if (v32)
    {
      a1 = v31 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(a1, (uint64_t)&v57);
        sub_213DAFDFC((uint64_t)&v57, (uint64_t)v56);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF240C();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v57);
        a1 += 40;
        if (!--v32)
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
      a1 = v55;
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v57, (uint64_t)&v59);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_29:
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
    }
    sub_213DCC3D8((uint64_t)&v59, (uint64_t)&v57, &qword_253F06970);
    v53 = v30;
    if (!v58)
    {
      sub_213DAFEC4((uint64_t)&v57, &qword_253F06970);
LABEL_38:
      sub_213DAFEC4((uint64_t)&v59, &qword_253F06970);
      swift_bridgeObjectRelease();
      v13 = 0;
      goto LABEL_47;
    }
    a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    sub_213EF240C();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_38;
    swift_retain();
    sub_213EF23D0();
    swift_release_n();
    a1 = *((_QWORD *)&v57 + 1);
    v33 = v57;
    sub_213DAFEC4((uint64_t)&v59, &qword_253F06970);
    swift_bridgeObjectRelease();
    v34 = swift_bridgeObjectRetain();
    v35 = sub_213DAF610(v34);
    v13 = v36;
    swift_bridgeObjectRelease();
    if (v13)
    {
      if (v35 == v49 && v13 == v47)
      {
        swift_bridgeObjectRelease();
        v14 = v52;
LABEL_41:
        if (v33 == v48 && a1 == v45)
        {
          swift_bridgeObjectRelease();
          v13 = 1;
        }
        else
        {
          v13 = sub_213EF3234();
          swift_bridgeObjectRelease();
        }
        goto LABEL_46;
      }
      v37 = sub_213EF3234();
      swift_bridgeObjectRelease();
      v14 = v52;
      if ((v37 & 1) != 0)
        goto LABEL_41;
      swift_bridgeObjectRelease();
      v13 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      v14 = v52;
    }
LABEL_46:
    v30 = v53;
LABEL_47:
    v11 = *(_QWORD *)(v54 + v30);
    v38 = *(_QWORD *)(v11 + 16);
    if (v38)
    {
      a1 = v11 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(a1, (uint64_t)&v57);
        sub_213DAFDFC((uint64_t)&v57, (uint64_t)v56);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF23A0();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v57);
        a1 += 40;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
      }
      a1 = v55;
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v57, (uint64_t)&v59);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_53:
      v61 = 0;
      v59 = 0u;
      v60 = 0u;
    }
    sub_213DCC3D8((uint64_t)&v59, (uint64_t)&v57, &qword_253F06970);
    if (!v58)
    {
      sub_213DAFEC4((uint64_t)&v57, &qword_253F06970);
LABEL_19:
      sub_213DAFEC4((uint64_t)&v59, &qword_253F06970);
      swift_bridgeObjectRelease();
LABEL_20:
      sub_213DAFE88(v54);
      if ((v13 & 1) != 0)
        goto LABEL_68;
      goto LABEL_21;
    }
    a1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    sub_213EF23A0();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_19;
    swift_retain();
    sub_213EF23D0();
    swift_release_n();
    v39 = v57;
    sub_213DAFEC4((uint64_t)&v59, &qword_253F06970);
    swift_bridgeObjectRelease();
    v40 = swift_bridgeObjectRetain();
    v11 = sub_213DAF628(v40);
    a1 = v41;
    swift_bridgeObjectRelease();
    if (!a1)
    {
      swift_bridgeObjectRelease();
      v14 = v52;
      goto LABEL_20;
    }
    if (v39 == __PAIR128__(v45, v48))
    {
      swift_bridgeObjectRelease();
      v14 = v52;
LABEL_62:
      if (v11 == v49 && a1 == v47)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_70;
      }
      v43 = sub_213EF3234();
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
      {
        swift_bridgeObjectRelease_n();
LABEL_70:
        a7 = v44;
        sub_213DBB430(v54, v44, type metadata accessor for FeaturisedTurn);
        v29 = 0;
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
      }
      goto LABEL_67;
    }
    v42 = sub_213EF3234();
    swift_bridgeObjectRelease();
    v14 = v52;
    if ((v42 & 1) != 0)
      goto LABEL_62;
    swift_bridgeObjectRelease();
LABEL_67:
    sub_213DAFE88(v54);
LABEL_21:
    if (++a7 == v17)
    {
LABEL_68:
      swift_bridgeObjectRelease_n();
      v29 = 1;
      a7 = v44;
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
    }
  }
  __break(1u);
LABEL_72:
  swift_once();
LABEL_6:
  v22 = sub_213EF2724();
  __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
  (*(void (**)(uint64_t, uint64_t, uint64_t *))(v11 + 16))(v13, a1, v10);
  v23 = sub_213EF270C();
  v24 = sub_213EF2C94();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_QWORD *)&v59 = v26;
    v44 = a7;
    *(_DWORD *)v25 = 136315138;
    sub_213DE8A88((unint64_t *)&qword_253F06938, MEMORY[0x24BDCEAB8]);
    v27 = sub_213EF31F8();
    *(_QWORD *)&v57 = sub_213DB0570(v27, v28, (uint64_t *)&v59);
    a7 = v44;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t *))(v11 + 8))(v13, v10);
    _os_log_impl(&dword_213DAB000, v23, v24, "Failed to find prompt turn in session for turnId=%s", v25, 0xCu);
    v29 = 1;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v26, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);

  }
  else
  {
    (*(void (**)(uint64_t, uint64_t *))(v11 + 8))(v13, v10);

    v29 = 1;
  }
  v14 = v52;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(a7, v29, 1, v14);
}

uint64_t sub_213DE6DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v68 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v60 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v60 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v60 - v20;
  v22 = type metadata accessor for FeaturisedTurn(0);
  v23 = *(int *)(v22 + 24);
  v71 = a1;
  v24 = swift_bridgeObjectRetain();
  v70 = sub_213DAF604(v24);
  v26 = v25;
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_8;
  v65 = v23;
  v27 = swift_bridgeObjectRetain();
  v67 = sub_213DAF610(v27);
  v29 = v28;
  swift_bridgeObjectRelease();
  v69 = v29;
  if (!v29)
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    v33 = type metadata accessor for EntityPromptClassification();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a3, 1, 1, v33);
  }
  v30 = swift_bridgeObjectRetain();
  v31 = sub_213DAF634(v30);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_213DE64F4(v71, v70, v26, v67, v69, a2, (unint64_t)v21);
  sub_213DCC3D8((uint64_t)v21, (uint64_t)v19, &qword_253F069B0);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48);
  if (v32(v19, 1, v22) == 1)
  {
    sub_213DAFEC4((uint64_t)v19, &qword_253F069B0);
    v62 = 0;
    v63 = 0;
  }
  else
  {
    v35 = *(_QWORD *)&v19[*(int *)(v22 + 24)];
    swift_bridgeObjectRetain();
    sub_213DAFE88((uint64_t)v19);
    v36 = sub_213DAF640(v35);
    v62 = v37;
    v63 = v36;
    swift_bridgeObjectRelease();
  }
  sub_213DCC3D8((uint64_t)v21, (uint64_t)v16, &qword_253F069B0);
  if (v32(v16, 1, v22) == 1)
  {
    sub_213DAFEC4((uint64_t)v16, &qword_253F069B0);
    v60 = 0;
    v61 = 0;
  }
  else
  {
    v38 = *(_QWORD *)&v16[*(int *)(v22 + 24)];
    swift_bridgeObjectRetain();
    sub_213DAFE88((uint64_t)v16);
    v39 = sub_213DAF64C(v38);
    v60 = v40;
    v61 = v39;
    swift_bridgeObjectRelease();
  }
  sub_213DCC3D8((uint64_t)v21, (uint64_t)v13, &qword_253F069B0);
  v41 = v32(v13, 1, v22);
  v64 = v31;
  if (v41 == 1)
  {
LABEL_16:
    sub_213DAFEC4((uint64_t)v13, &qword_253F069B0);
    goto LABEL_17;
  }
  v42 = *(_QWORD *)&v13[*(int *)(v22 + 24)];
  swift_bridgeObjectRetain();
  sub_213DAFE88((uint64_t)v13);
  sub_213DAF61C(v42);
  v44 = v43;
  swift_bridgeObjectRelease();
  if (v44)
  {
    swift_bridgeObjectRelease();
    v13 = v66;
    sub_213DCC3D8((uint64_t)v21, (uint64_t)v66, &qword_253F069B0);
    if (v32(v13, 1, v22) != 1)
    {
      v45 = sub_213EF1D64();
      v59 = *(_QWORD *)(v45 - 8);
      v46 = (uint64_t)v68;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v68, v13, v45);
      sub_213DAFE88((uint64_t)v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v46, 0, 1, v45);
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_17:
  v45 = sub_213EF1D64();
  v46 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v68, 1, 1, v45);
LABEL_18:
  v47 = v71;
  v48 = swift_bridgeObjectRetain();
  v49 = sub_213DAF658(v48);
  swift_bridgeObjectRelease();
  if (v49)
    v50 = v49;
  else
    v50 = MEMORY[0x24BEE4AF8];
  v51 = swift_bridgeObjectRetain();
  v52 = sub_213DAF664(v51);
  swift_bridgeObjectRelease();
  v53 = v52 & 1;
  v54 = (int *)type metadata accessor for EntityPromptClassification();
  v55 = a3 + v54[11];
  sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v55, v47, v45);
  sub_213DCC3D8(v46, a3 + v54[12], &qword_253F04828);
  *(_QWORD *)a3 = v70;
  *(_QWORD *)(a3 + 8) = v26;
  v56 = v69;
  *(_QWORD *)(a3 + 16) = v67;
  *(_QWORD *)(a3 + 24) = v56;
  v57 = v63;
  *(_QWORD *)(a3 + 32) = v64;
  *(_QWORD *)(a3 + 40) = v57;
  v58 = v61;
  *(_QWORD *)(a3 + 48) = v62;
  *(_QWORD *)(a3 + 56) = v58;
  *(_QWORD *)(a3 + 64) = v60;
  *(_QWORD *)(a3 + 72) = v50;
  *(_BYTE *)(a3 + 80) = v53;
  *(_QWORD *)(a3 + v54[13]) = MEMORY[0x24BEE4AF8];
  sub_213DAFEC4(v46, &qword_253F04828);
  sub_213DAFEC4((uint64_t)v21, &qword_253F069B0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v54 - 1) + 56))(a3, 0, 1, v54);
}

uint64_t EntityPromptClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EntityPromptClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *sub_213DE7334(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *v1;
  swift_retain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_213DE7D34(v4, v3, a1);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t EntityPromptClassification.promptTask.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.promptSlot.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.promptEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityPromptClassification.selectedEntity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.promptEndResult.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EntityPromptClassification.plusSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EntityPromptClassification.plusForcePrompted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t EntityPromptClassification.promptStartTurnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EntityPromptClassification() + 44);
  v4 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t EntityPromptClassification.promptEndTurnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for EntityPromptClassification();
  return sub_213DCC3D8(v1 + *(int *)(v3 + 48), a1, &qword_253F04828);
}

unint64_t EntityPromptClassification.referencedTurns.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  unint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v1 = sub_213EF1D64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v31 - v6;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v8 = *(_QWORD *)(v36 - 8);
  v9 = MEMORY[0x24BDAC7A8](v36);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AFD0);
  v14 = *(_QWORD *)(v8 + 72);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_213EF44B0;
  v34 = v16;
  v17 = v16 + v15;
  v18 = type metadata accessor for EntityPromptClassification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v17, v0 + *(int *)(v18 + 44), v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v17, 0, 1, v1);
  v19 = v17 + v14;
  sub_213DCC3D8(v0 + *(int *)(v18 + 48), v19, &qword_253F04828);
  v33 = v17;
  sub_213DCC3D8(v17, (uint64_t)v13, &qword_253F04828);
  sub_213DE7F6C((uint64_t)v13, (uint64_t)v11);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48);
  v21 = v20(v11, 1, v1);
  v35 = v5;
  if (v21 == 1)
  {
    sub_213DAFEC4((uint64_t)v11, &qword_253F04828);
    v22 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v31 = v19;
    v23 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v23(v7, v11, v1);
    v32 = v7;
    v23(v5, v7, v1);
    v22 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_213DB5B04(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    v25 = *(_QWORD *)(v22 + 16);
    v24 = *(_QWORD *)(v22 + 24);
    if (v25 >= v24 >> 1)
      v22 = sub_213DB5B04(v24 > 1, v25 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v25 + 1;
    v23((char *)(v22+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v25), v35, v1);
    v19 = v31;
    v7 = v32;
  }
  sub_213DCC3D8(v19, (uint64_t)v13, &qword_253F04828);
  sub_213DE7F6C((uint64_t)v13, (uint64_t)v11);
  if (v20(v11, 1, v1) == 1)
  {
    sub_213DAFEC4((uint64_t)v11, &qword_253F04828);
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v26(v7, v11, v1);
    v27 = v35;
    v26(v35, v7, v1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v22 = sub_213DB5B04(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    v29 = *(_QWORD *)(v22 + 16);
    v28 = *(_QWORD *)(v22 + 24);
    if (v29 >= v28 >> 1)
      v22 = sub_213DB5B04(v28 > 1, v29 + 1, 1, v22);
    *(_QWORD *)(v22 + 16) = v29 + 1;
    v26((char *)(v22+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v29), v27, v1);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v22;
}

uint64_t EntityPromptClassification.referencedEvents.getter()
{
  type metadata accessor for EntityPromptClassification();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213DE78DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s28SiriPrivateLearningInference26EntityPromptClassificationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v34 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v20 = sub_213EF3234();
    v21 = 0;
    if ((v20 & 1) == 0)
      return v21 & 1;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
  {
    v22 = sub_213EF3234();
    v21 = 0;
    if ((v22 & 1) == 0)
      return v21 & 1;
  }
  if ((sub_213E28344(*(_QWORD **)(a1 + 32), *(_QWORD **)(a2 + 32)) & 1) == 0)
    goto LABEL_31;
  v23 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a2 + 48);
  if (v23)
  {
    if (!v24)
      goto LABEL_31;
    if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v23 != v24)
    {
      v25 = sub_213EF3234();
      v21 = 0;
      if ((v25 & 1) == 0)
        return v21 & 1;
    }
  }
  else if (v24)
  {
    goto LABEL_31;
  }
  v26 = *(_QWORD *)(a1 + 64);
  v27 = *(_QWORD *)(a2 + 64);
  if (!v26)
  {
    if (v27)
      goto LABEL_31;
LABEL_22:
    if ((sub_213E28408(*(_QWORD *)(a1 + 72), *(_QWORD *)(a2 + 72)) & 1) != 0
      && *(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
    {
      v35 = type metadata accessor for EntityPromptClassification();
      if ((sub_213EF1D28() & 1) != 0)
      {
        sub_213DCC3D8(a1 + *(int *)(v35 + 48), (uint64_t)v19, &qword_253F04828);
        sub_213DCC3D8(a2 + *(int *)(v35 + 48), (uint64_t)v17, &qword_253F04828);
        v29 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_213DCC3D8((uint64_t)v19, (uint64_t)v10, &qword_253F04828);
        v34 = v29;
        sub_213DCC3D8((uint64_t)v17, v29, &qword_253F04828);
        v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v30((uint64_t)v10, 1, v4) == 1)
        {
          sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
          sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
          if (v30(v34, 1, v4) == 1)
          {
            sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
LABEL_34:
            v21 = sub_213E28344(*(_QWORD **)(a1 + *(int *)(v35 + 52)), *(_QWORD **)(a2 + *(int *)(v35 + 52)));
            return v21 & 1;
          }
        }
        else
        {
          sub_213DCC3D8((uint64_t)v10, (uint64_t)v14, &qword_253F04828);
          if (v30(v34, 1, v4) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v34, v4);
            sub_213DE8A88((unint64_t *)&qword_253F06930, MEMORY[0x24BDCEA98]);
            v32 = sub_213EF2838();
            v33 = *(void (**)(char *, uint64_t))(v5 + 8);
            v33(v7, v4);
            sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
            sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
            v33(v14, v4);
            sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
            if ((v32 & 1) != 0)
              goto LABEL_34;
            goto LABEL_31;
          }
          sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
          sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
        }
        sub_213DAFEC4((uint64_t)v10, &qword_253F04838);
      }
    }
LABEL_31:
    v21 = 0;
    return v21 & 1;
  }
  if (!v27)
    goto LABEL_31;
  if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && v26 == v27)
    goto LABEL_22;
  v28 = sub_213EF3234();
  v21 = 0;
  if ((v28 & 1) != 0)
    goto LABEL_22;
  return v21 & 1;
}

_QWORD *sub_213DE7D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  __int128 v23[2];
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v24 = v3;
  v10 = *(_QWORD *)(type metadata accessor for FeaturisedTurn(0) - 8);
  v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v12 = *(_QWORD *)(v10 + 72);
  v19[1] = a1;
  swift_bridgeObjectRetain();
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    sub_213DE6DE0(v11, a3, (uint64_t)v8);
    v14 = type metadata accessor for EntityPromptClassification();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14) == 1)
    {
      sub_213DAFEC4((uint64_t)v8, &qword_253F06C68);
    }
    else
    {
      v21 = v14;
      v22 = &protocol witness table for EntityPromptClassification;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
      sub_213DBB430((uint64_t)v8, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
      sub_213DB0BF0(&v20, (uint64_t)v23);
      sub_213DB0BF0(v23, (uint64_t)&v20);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_213DB5B2C(0, v13[2] + 1, 1, v13);
      v17 = v13[2];
      v16 = v13[3];
      if (v17 >= v16 >> 1)
        v13 = sub_213DB5B2C((_QWORD *)(v16 > 1), v17 + 1, 1, v13);
      v13[2] = v17 + 1;
      sub_213DB0BF0(&v20, (uint64_t)&v13[5 * v17 + 4]);
    }
    v11 += v12;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for EntityPromptClassification()
{
  uint64_t result;

  result = qword_253F06C58;
  if (!qword_253F06C58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213DE7F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for EntityPromptClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for EntityPromptClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityPromptClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of EntityPromptClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

_QWORD *initializeBufferWithCopyOfBuffer for EntityPromptClassification(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v24;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v11 = a2[8];
    v10 = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    v12 = a3[11];
    v23 = (uint64_t)a2 + v12;
    v24 = a1 + v12;
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v10;
    v13 = sub_213EF1D64();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v24, v23, v13);
    v16 = a3[12];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))((uint64_t)a2 + v16, 1, v13))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v17, (uint64_t)v18, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
    }
    *(_QWORD *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EntityPromptClassification(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v8 = a1 + *(int *)(a2 + 48);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EntityPromptClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, const void *, uint64_t);
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  const void *v21;
  void *v22;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v10 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = a3[11];
  v22 = (void *)(a1 + v11);
  v21 = (const void *)(a2 + v11);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v9;
  v12 = sub_213EF1D64();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v22, v21, v12);
  v15 = a3[12];
  v16 = (void *)(a1 + v15);
  v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(a2 + v15, 1, v12))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EntityPromptClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void *, const void *, uint64_t);
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t (*v15)(const void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v6 = a3[11];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[12];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15((const void *)(a1 + v12), 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EntityPromptClassification(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(void *, const void *, uint64_t);
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v8 = a3[11];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 56) = v7;
  v11 = sub_213EF1D64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(void *, const void *, uint64_t))(v12 + 32);
  v13(v9, v10, v11);
  v14 = a3[12];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2 + v14, 1, v11))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v13(v15, v16, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for EntityPromptClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(const void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v10 = a3[11];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_213EF1D64();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 40);
  v15(v11, v12, v13);
  v16 = a3[12];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19((const void *)(a1 + v16), 1, v13);
  v21 = v19(v18, 1, v13);
  if (!v20)
  {
    if (!v21)
    {
      v15(v17, v18, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v17, v13);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v17, v18, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
LABEL_7:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EntityPromptClassification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DE887C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_213EF1D64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 44);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EntityPromptClassification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DE892C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_213EF1D64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 44);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_213DE89CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DBF3D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_213DE8A88(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_213EF1D64();
    result = MEMORY[0x2199C52D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.groundTruthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.picsStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.logTarget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.featureManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.pimsStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SiriPrivateLearningInferenceContext.uflCoreAnalyticsLogLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_213DE8AF8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213DE8B2C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213DE8B34()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SinglePositiveCandidateFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SinglePositiveCandidateFilter);
}

uint64_t sub_213DE8B50(uint64_t a1, uint64_t a2)
{
  return sub_213DE8B5C(a1, *(_QWORD *)(a2 + 80));
}

uint64_t sub_213DE8B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_213EF2AE4();
  swift_bridgeObjectRetain();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12F0], v3);
  v4 = sub_213EF2F4C();
  if (MEMORY[0x2199C4560](v4, a2) != 1)
  {
    swift_bridgeObjectRelease();
    return sub_213EF2A90();
  }
  return v4;
}

BOOL sub_213DE8C08()
{
  uint64_t v0;

  return (*(double (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 96))(*(_QWORD *)(v0 + 16)) > 0.0;
}

uint64_t dispatch thunk of TurnComparison.isMatch.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TurnComparator.compareTurns(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TurnComparator.turnMeetsFeatureFilterCriteria(turn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_213DE8C5C()
{
  uint64_t result;

  type metadata accessor for AdaptiveMediaSuggestionGenerator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B8C8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3B7D0 = 91;
  *(_QWORD *)algn_254D3B7D8 = 0xE100000000000000;
  return result;
}

uint64_t AdaptiveMediaSuggestionGenerator.__allocating_init(candidateProvider:domainTags:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  AdaptiveMediaSuggestionGenerator.init(candidateProvider:domainTags:)(a1, a2);
  return v4;
}

_QWORD *AdaptiveMediaSuggestionGenerator.init(candidateProvider:domainTags:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  type metadata accessor for MediaSignalScorer();
  v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B7E0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v6 + 56) = &type metadata for NoReferenceDecayModifier;
  *(_QWORD *)(v6 + 64) = &off_24D108DA8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B7E8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_213EF44B0;
  *(_QWORD *)(v7 + 56) = &type metadata for ScoreRoundingModifier;
  *(_QWORD *)(v7 + 64) = &off_24D109748;
  *(_QWORD *)(v7 + 32) = 1;
  *(_QWORD *)(v7 + 96) = &type metadata for ScoreLimitModifier;
  *(_QWORD *)(v7 + 104) = &off_24D1071B0;
  v8 = swift_allocObject();
  *(_QWORD *)(v7 + 72) = v8;
  *(_QWORD *)(v8 + 16) = 0x3FF0000000000000;
  *(_BYTE *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0xBFF0000000000000;
  *(_BYTE *)(v8 + 40) = 0;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 24) = v7;
  type metadata accessor for MediaSuggestionCandidateProcessor();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = a1;
  v2[2] = v9;
  v2[3] = a1;
  v2[4] = a2;
  swift_retain();
  return v2;
}

uint64_t sub_213DE8E68()
{
  return swift_deallocObject();
}

uint64_t sub_213DE8E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12[3];
  _BYTE v13[48];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v2, (uint64_t)v13);
      sub_213DAFDFC((uint64_t)v13, (uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A838);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v10 = 0u;
        v11 = 0u;
        v9 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      if (*((_QWORD *)&v10 + 1))
      {
        sub_213DE638C(&v9, v12);
        sub_213DE638C(v12, &v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_213DB6480(0, v3[2] + 1, 1, v3);
        v5 = v3[2];
        v4 = v3[3];
        if (v5 >= v4 >> 1)
          v3 = sub_213DB6480((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
        v3[2] = v5 + 1;
        sub_213DE638C(&v9, &v3[6 * v5 + 4]);
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v9, &qword_254D3B720);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_retain();
  v6 = sub_213DEA290((uint64_t)v3);
  swift_bridgeObjectRelease();
  swift_release();
  v7 = sub_213DDDD08(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_213DE905C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  _BOOL4 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  os_log_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[12];

  v5 = v4;
  v53 = a4;
  v54 = sub_213EF1D64();
  v9 = *(_QWORD *)(v54 - 8);
  v10 = MEMORY[0x24BDAC7A8](v54);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v44 - v17;
  if (sub_213DE9D88((uint64_t)a1, v5, a2, a3))
  {
    v49 = a3;
    if (qword_253F04A88 != -1)
      swift_once();
    v19 = sub_213EF2724();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
    (*(void (**)(char *, NSObject *, uint64_t))(v13 + 16))(v18, a1, a2);
    v21 = sub_213EF270C();
    v48 = sub_213EF2C94();
    v22 = os_log_type_enabled(v21, (os_log_type_t)v48);
    v51 = v5;
    v52 = a1;
    if (v22)
    {
      v46 = v21;
      v47 = v20;
      v50 = v9;
      v23 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v56[0] = v45;
      *(_DWORD *)v23 = 136315394;
      if (qword_254D39F88 != -1)
        swift_once();
      v25 = qword_254D3B7D0;
      v24 = *(_QWORD *)algn_254D3B7D8;
      swift_bridgeObjectRetain();
      v55 = sub_213DB0570(v25, v24, v56);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      (*(void (**)(uint64_t))(v53 + 24))(a2);
      v26 = sub_213EF1D10();
      v27 = a2;
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v54);
      v55 = sub_213DB0570(v26, v29, v56);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v27);
      v30 = v46;
      _os_log_impl(&dword_213DAB000, v46, (os_log_type_t)v48, "%s Processing ground truth with id=%s", (uint8_t *)v23, 0x16u);
      v31 = v45;
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v31, -1, -1);
      MEMORY[0x2199C53C4](v23, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, a2);

    }
    sub_213E0BA2C();
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v32 = sub_213EF2724();
  __swift_project_value_buffer(v32, (uint64_t)qword_253F08A00);
  (*(void (**)(char *, NSObject *, uint64_t))(v13 + 16))(v16, a1, a2);
  v33 = sub_213EF270C();
  v34 = sub_213EF2C94();
  if (os_log_type_enabled(v33, (os_log_type_t)v34))
  {
    LODWORD(v51) = v34;
    v52 = v33;
    v50 = v9;
    v35 = a2;
    v36 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v56[0] = v49;
    *(_DWORD *)v36 = 136315394;
    if (qword_254D39F88 != -1)
      swift_once();
    v38 = qword_254D3B7D0;
    v37 = *(_QWORD *)algn_254D3B7D8;
    swift_bridgeObjectRetain();
    v55 = sub_213DB0570(v38, v37, v56);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    (*(void (**)(uint64_t))(v53 + 24))(v35);
    v39 = sub_213EF1D10();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v54);
    v55 = sub_213DB0570(v39, v41, v56);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v35);
    v33 = v52;
    _os_log_impl(&dword_213DAB000, v52, (os_log_type_t)v51, "%s Skipping non applicable ground truth with id=%s", (uint8_t *)v36, 0x16u);
    v42 = v49;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v42, -1, -1);
    MEMORY[0x2199C53C4](v36, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, a2);
  }

  return 0;
}

uint64_t sub_213DE9930@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int16 v45;

  v39 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for PlusMediaSuggestion();
  MEMORY[0x24BDAC7A8](v40);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v37 = *a1;
  v12 = a1[2];
  v13 = a1[3];
  if (qword_253F04A88 != -1)
    swift_once();
  v14 = sub_213EF2724();
  __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
  sub_213DE6348(a2, (uint64_t)v10);
  swift_bridgeObjectRetain();
  sub_213DB8518(v12, v13);
  v15 = sub_213EF270C();
  v16 = sub_213EF2C94();
  if (os_log_type_enabled(v15, v16))
  {
    v35 = a4;
    v36 = a2;
    v17 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v41 = v34;
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v42 = sub_213DB0570(v37, v11, &v41);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    sub_213DB859C(v12, v13);
    *(_WORD *)(v17 + 12) = 2080;
    v18 = v40;
    v19 = *(_QWORD *)&v10[*(int *)(v40 + 36)];
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (__int128 *)(v19 + 32 * v20);
      v22 = *v21;
      v23 = *((_QWORD *)v21 + 2);
    }
    else
    {
      v23 = 0;
      v22 = 0uLL;
    }
    v24 = v39;
    v42 = v22;
    *(_QWORD *)&v43 = v23;
    BYTE8(v43) = v20 == 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B8C0);
    v25 = sub_213EF288C();
    *(_QWORD *)&v42 = sub_213DB0570(v25, v26, &v41);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DEA4CC((uint64_t)v10);
    _os_log_impl(&dword_213DAB000, v15, v16, "    %s: %s", (uint8_t *)v17, 0x16u);
    v27 = v34;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v27, -1, -1);
    MEMORY[0x2199C53C4](v17, -1, -1);

    a4 = v35;
    a2 = v36;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_213DB859C(v12, v13);
    sub_213DEA4CC((uint64_t)v10);

    v24 = v39;
    v18 = v40;
  }
  v28 = *(_QWORD *)(a2 + *(int *)(v18 + 44));
  if ((sub_213EA78A8(v28, *(_QWORD *)(v24 + 32)) & 1) != 0)
    return sub_213DE6348(a2, a4);
  v30 = sub_213EF1D64();
  v31 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v38, 1, 1, v30);
  v45 = 0;
  v43 = 0u;
  v44 = 0u;
  v42 = 0u;
  swift_bridgeObjectRetain();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_213ECD034(v32, v28);
  sub_213E2BA18(v31, 0, (char **)&v42, 0, 0, 1, v33, 0, a4, 1, 0);
  swift_bridgeObjectRelease();
  return sub_213DAFEC4(v31, &qword_253F04828);
}

uint64_t AdaptiveMediaSuggestionGenerator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AdaptiveMediaSuggestionGenerator.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL sub_213DE9D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(v10 + 16))
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
    swift_bridgeObjectRetain();
    v12 = sub_213DF29D0(v11, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    swift_release();
    v14 = v13 != 0;
  }
  else
  {
    v14 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  return v14;
}

unint64_t sub_213DE9E6C(uint64_t a1, void (*a2)(_BYTE *, _BYTE *), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _BYTE v49[16];
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _QWORD *v57;
  _BYTE *v58;
  void (*v59)(_BYTE *, _BYTE *);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;

  v59 = a2;
  v60 = a3;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B8B8);
  v4 = MEMORY[0x24BDAC7A8](v70);
  v58 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  v57 = &v49[-v7];
  MEMORY[0x24BDAC7A8](v6);
  v56 = &v49[-v8];
  v9 = type metadata accessor for PlusMediaSuggestion();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (!v13)
    return v14;
  v15 = v12;
  v71 = MEMORY[0x24BEE4AF8];
  sub_213DCD284(0, v13, 0);
  result = sub_213EA6F20(a1);
  v18 = 0;
  v19 = a1 + 64;
  v61 = a1 + 80;
  v54 = v10;
  v55 = a1;
  v52 = a1 + 64;
  v53 = (uint64_t)v15;
  v50 = v13;
  v51 = v17;
  v20 = (uint64_t)v56;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(a1 + 32))
  {
    if ((*(_QWORD *)(v19 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v63 = 1 << result;
    v64 = result >> 6;
    v62 = v18;
    v24 = *(_QWORD *)(a1 + 56);
    v25 = *(_QWORD *)(a1 + 48) + 56 * result;
    v27 = *(_QWORD *)v25;
    v26 = *(_QWORD *)(v25 + 8);
    v29 = *(_QWORD *)(v25 + 16);
    v28 = *(_QWORD *)(v25 + 24);
    v65 = v20 + *(int *)(v70 + 48);
    v23 = v65;
    v66 = v28;
    v30 = *(_QWORD *)(v25 + 32);
    v31 = *(_QWORD *)(v25 + 40);
    v32 = *(_BYTE *)(v25 + 48);
    v33 = *(_BYTE *)(v25 + 49);
    *(_QWORD *)v20 = v27;
    *(_QWORD *)(v20 + 8) = v26;
    *(_QWORD *)(v20 + 16) = v29;
    *(_QWORD *)(v20 + 24) = v28;
    *(_QWORD *)(v20 + 32) = v30;
    *(_QWORD *)(v20 + 40) = v31;
    *(_BYTE *)(v20 + 48) = v32;
    *(_BYTE *)(v20 + 49) = v33;
    v34 = *(_QWORD *)(v10 + 72);
    v69 = result;
    v67 = v31;
    v68 = v34;
    sub_213DE6348(v24 + v34 * result, v23);
    v35 = (uint64_t)v57;
    *v57 = v27;
    *(_QWORD *)(v35 + 8) = v26;
    v36 = v65;
    v37 = v66;
    *(_QWORD *)(v35 + 16) = v29;
    *(_QWORD *)(v35 + 24) = v37;
    *(_QWORD *)(v35 + 32) = v30;
    *(_QWORD *)(v35 + 40) = v31;
    *(_BYTE *)(v35 + 48) = v32;
    *(_BYTE *)(v35 + 49) = v33;
    v38 = v70;
    sub_213DE6348(v36, v35 + *(int *)(v70 + 48));
    v39 = v58;
    sub_213DC0630(v35, (uint64_t)v58, &qword_254D3B8B8);
    swift_bridgeObjectRetain();
    sub_213DB8518(v29, v37);
    swift_bridgeObjectRetain();
    sub_213DB8518(v29, v37);
    sub_213DAFEC4(v20, &qword_254D3B8B8);
    v40 = v53;
    v59(v39, &v39[*(int *)(v38 + 48)]);
    sub_213DAFEC4((uint64_t)v39, &qword_254D3B8B8);
    v14 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_213DCD284(0, *(_QWORD *)(v14 + 16) + 1, 1);
      v14 = v71;
    }
    v42 = *(_QWORD *)(v14 + 16);
    v41 = *(_QWORD *)(v14 + 24);
    v10 = v54;
    if (v42 >= v41 >> 1)
    {
      sub_213DCD284(v41 > 1, v42 + 1, 1);
      v14 = v71;
    }
    *(_QWORD *)(v14 + 16) = v42 + 1;
    result = sub_213DEA488(v40, v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ v42 * v68);
    a1 = v55;
    v21 = 1 << *(_BYTE *)(v55 + 32);
    if (v69 >= v21)
      goto LABEL_27;
    v19 = v52;
    v43 = v64;
    v44 = *(_QWORD *)(v52 + 8 * v64);
    if ((v44 & v63) == 0)
      goto LABEL_28;
    LODWORD(v17) = v51;
    if (*(_DWORD *)(v55 + 36) != (_DWORD)v51)
      goto LABEL_29;
    v45 = v44 & (-2 << (v69 & 0x3F));
    if (v45)
    {
      v21 = __clz(__rbit64(v45)) | v69 & 0xFFFFFFFFFFFFFFC0;
      v22 = v50;
    }
    else
    {
      v46 = v64 + 1;
      v47 = (unint64_t)(v21 + 63) >> 6;
      v22 = v50;
      if (v64 + 1 < v47)
      {
        v48 = *(_QWORD *)(v52 + 8 * v46);
        if (v48)
        {
LABEL_22:
          v21 = __clz(__rbit64(v48)) + (v46 << 6);
        }
        else
        {
          while (v47 - 2 != v43)
          {
            v48 = *(_QWORD *)(v61 + 8 * v43++);
            if (v48)
            {
              v46 = v43 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v18 = v62 + 1;
    result = v21;
    if (v62 + 1 == v22)
      return v14;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_213DEA290(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;

  result = MEMORY[0x24BEE4AF8];
  v9 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (uint64_t *)(a1 + 72);
    do
    {
      v5 = *(v4 - 2);
      v6 = *(v4 - 1);
      v7 = *v4;
      v8 = __swift_project_boxed_opaque_existential_1(v4 - 5, v5);
      if (sub_213DE905C(v8, v5, v6, v7))
      {
        MEMORY[0x2199C44C4]();
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v4 += 6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t type metadata accessor for AdaptiveMediaSuggestionGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdaptiveMediaSuggestionGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdaptiveMediaSuggestionGenerator.__allocating_init(candidateProvider:domainTags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AdaptiveMediaSuggestionGenerator.processGroundTruths(groundTruthList:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_213DEA3D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_213DEA434(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t sub_213DEA480@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213DE9930(a1, a2, v3, a3);
}

uint64_t sub_213DEA488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusMediaSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DEA4CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlusMediaSuggestion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SuccessfulTaskMetadata.__allocating_init(session:classifications:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t SuccessfulTaskMetadata.init(session:classifications:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t SuccessfulTaskMetadata.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SuccessfulTaskMetadata.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SuccessfulTaskDefinition.generator()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OneShotSuccessfulGroundTruthGenerator(0, a1, v8, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  v11 = OneShotSuccessfulGroundTruthGenerator.__allocating_init(_:)((uint64_t)v7);
  a2[3] = v10;
  result = MEMORY[0x2199C52D4](&protocol conformance descriptor for OneShotSuccessfulGroundTruthGenerator<A>, v10);
  a2[4] = result;
  *a2 = v11;
  return result;
}

uint64_t SuccessfulTaskDefinition.extractUsoPerson(_:)(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[5];
  __int128 v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  unint64_t v23;

  v1 = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    goto LABEL_19;
  v4 = type metadata accessor for FeaturisedTurn(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  for (i = 0; i != v2; ++i)
  {
    v10 = *(_QWORD *)(v6 + v7 * i + *(int *)(v4 + 24));
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(v12, (uint64_t)&v19);
        sub_213DAFDFC((uint64_t)&v19, (uint64_t)v18);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for UsoPersonRecipients();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
        v12 += 40;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v19, (uint64_t)v21);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_11:
      v22 = 0;
      memset(v21, 0, sizeof(v21));
    }
    sub_213DAFE40((uint64_t)v21, (uint64_t)&v19);
    if (v20)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for UsoPersonRecipients();
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain();
        sub_213EF23D0();
        swift_release_n();
        v9 = v19;
        sub_213DB848C((uint64_t)v21);
        swift_bridgeObjectRelease();
        sub_213DB470C(v9);
        continue;
      }
    }
    else
    {
      sub_213DB848C((uint64_t)&v19);
    }
    sub_213DB848C((uint64_t)v21);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v1 = v23;
LABEL_19:
  v13 = swift_bridgeObjectRetain();
  v14 = sub_213DDDD2C(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 0xC000000000000001) != 0)
    v15 = sub_213EF2E38();
  else
    v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (v15 != 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_213EF306C();
    v16 = result;
    if (!result)
      goto LABEL_28;
LABEL_25:
    if ((v1 & 0xC000000000000001) != 0)
    {
      v16 = MEMORY[0x2199C49B0](0, v1);
      goto LABEL_28;
    }
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v16 = *(_QWORD *)(v1 + 32);
      swift_retain();
      goto LABEL_28;
    }
    __break(1u);
  }
  else
  {
    v16 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_25;
LABEL_28:
    swift_bridgeObjectRelease_n();
    return v16;
  }
  return result;
}

SiriPrivateLearningInference::ContactReference_optional __swiftcall SuccessfulTaskDefinition.extractReferencedEntity(session:eventId:)(Swift::OpaquePointer session, Swift::String eventId)
{
  _OWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  SiriPrivateLearningInference::ContactReference_optional result;

  v3 = v2;
  v4 = Array<A>.findEvent(eventId:)(eventId._countAndFlagsBits, (uint64_t)eventId._object, (uint64_t)session._rawValue, &v16);
  v8 = v17;
  if (!v17)
    goto LABEL_6;
  v9 = v16;
  v11 = v18;
  v10 = v19;
  v12 = v20;
  v13 = swift_bridgeObjectRetain();
  v14 = sub_213DAE9B4(v13);
  swift_bridgeObjectRelease();
  if (!v14 || (v15 = *(_QWORD *)(v14 + 16), swift_bridgeObjectRelease(), v15 != 1))
  {
    v4 = sub_213DC7B60(v9, v8);
LABEL_6:
    *v3 = 0u;
    v3[1] = 0u;
    goto LABEL_7;
  }
  v16 = v9;
  v17 = v8;
  v18 = v11;
  v19 = v10;
  v20 = v12;
  extractContactReference(event:)((uint64_t)v3);
  v4 = sub_213DC7B60(v9, v8);
LABEL_7:
  result.value.contactLabel.value._object = v7;
  result.value.contactLabel.value._countAndFlagsBits = v6;
  result.value.contactId._object = v5;
  result.value.contactId._countAndFlagsBits = v4;
  return result;
}

uint64_t (*sub_213DEAA54(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_213DEABD4(v6, a2, a3);
  return sub_213DEAAA8;
}

uint64_t (*sub_213DEAAAC(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_213DEAC48(v6, a2, a3);
  return sub_213DEAAA8;
}

uint64_t (*sub_213DEAB00(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_213DEACB4(v6, a2, a3);
  return sub_213DEAAA8;
}

uint64_t (*sub_213DEAB54(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_213DEAD28(v6, a2, a3);
  return sub_213DEAAA8;
}

void sub_213DEABA8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_213DEABD4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2199C49B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_213DEAC40;
  }
  __break(1u);
  return result;
}

uint64_t sub_213DEAC40()
{
  return swift_release();
}

void (*sub_213DEAC48(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2199C49B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_213DEADF8;
  }
  __break(1u);
  return result;
}

void (*sub_213DEACB4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x2199C49B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_213DEAD20;
  }
  __break(1u);
  return result;
}

void sub_213DEAD20(id *a1)
{

}

uint64_t (*sub_213DEAD28(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x2199C49B0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_213DEADFC;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.successClassifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.identifySuccessClassification(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.isInitiatingEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.extractReferencedEntity(session:successClassification:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.extractUsoEntityFromSessionSlice(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of SuccessfulTaskDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 96))();
}

uint64_t type metadata accessor for SuccessfulTaskMetadata()
{
  return objc_opt_self();
}

uint64_t method lookup function for SuccessfulTaskMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuccessfulTaskMetadata.__allocating_init(session:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t ThinMediaGroundTruth.init(completeGroundTruth:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];

  v35 = a2;
  v33 = type metadata accessor for MediaFeedbackGroundTruth();
  v3 = MEMORY[0x24BDAC7A8](v33);
  v32 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v31 - v5;
  v7 = type metadata accessor for MediaGroundTruth();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = (int *)type metadata accessor for ThinMediaGroundTruth();
  v34 = *((_QWORD *)v13 - 1);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
  v21 = (uint64_t *)&v15[v13[5]];
  *v21 = v20;
  v21[1] = v22;
  sub_213DAFDFC((uint64_t)a1, (uint64_t)v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
  if (swift_dynamicCast())
  {
    sub_213DBB430((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for MediaGroundTruth);
    v15[v13[6]] = v10[*(int *)(v7 + 20)];
    v23 = v10[*(int *)(v7 + 32) + 49];
    v24 = (uint64_t)v10;
    v25 = type metadata accessor for MediaGroundTruth;
LABEL_5:
    sub_213DCA828(v24, (uint64_t (*)(_QWORD))v25);
    v15[v13[7]] = v23;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
    v28 = v35;
    sub_213DEB148((uint64_t)v15, v35);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v34 + 56))(v28, 0, 1, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_213DCA828((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
  }
  v26 = v33;
  if (swift_dynamicCast())
  {
    v27 = v32;
    sub_213DBB430((uint64_t)v6, v32, (uint64_t (*)(_QWORD))type metadata accessor for MediaFeedbackGroundTruth);
    v15[v13[6]] = *(_BYTE *)(v27 + *(int *)(v26 + 20)) | 0x80;
    v23 = *(_BYTE *)(v27 + *(int *)(v26 + 28) + 49);
    v24 = v27;
    v25 = type metadata accessor for MediaFeedbackGroundTruth;
    goto LABEL_5;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v30 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v15, v30);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v34 + 56))(v35, 1, 1, v13);
}

uint64_t type metadata accessor for ThinMediaGroundTruth()
{
  uint64_t result;

  result = qword_254D3BA10;
  if (!qword_254D3BA10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213DEB148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThinMediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ThinMediaGroundTruth.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ThinMediaGroundTruth.groundTruthType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ThinMediaGroundTruth() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ThinMediaGroundTruth.groundTruthSource.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ThinMediaGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ThinMediaGroundTruth.suggestionLocality.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ThinMediaGroundTruth();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

int *ThinMediaGroundTruth.init(id:groundTruthType:groundTruthSource:suggestionLocality:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  char v10;
  char v11;
  uint64_t v12;
  int *result;
  _QWORD *v14;

  v10 = *a4;
  v11 = *a5;
  v12 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = (int *)type metadata accessor for ThinMediaGroundTruth();
  v14 = (_QWORD *)(a6 + result[5]);
  *v14 = a2;
  v14[1] = a3;
  *(_BYTE *)(a6 + result[6]) = v10;
  *(_BYTE *)(a6 + result[7]) = v11;
  return result;
}

uint64_t ThinMediaGroundTruth.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  v1 = type metadata accessor for ThinMediaGroundTruth();
  swift_bridgeObjectRetain();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  sub_213EF3300();
  sub_213EF3300();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 28)) == 3)
    return sub_213EF330C();
  sub_213EF330C();
  return sub_213EF3300();
}

uint64_t sub_213DEB3DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213DEB400 + 4 * byte_213EF6C40[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_213DEB400()
{
  return 0x7254646E756F7267;
}

unint64_t sub_213DEB424()
{
  return 0xD000000000000011;
}

unint64_t sub_213DEB440()
{
  return 0xD000000000000012;
}

uint64_t sub_213DEB460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DEC540(a1, a2);
  *a3 = result;
  return result;
}

void sub_213DEB484(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_213DEB490()
{
  sub_213DEBD94();
  return sub_213EF3354();
}

uint64_t sub_213DEB4B8()
{
  sub_213DEBD94();
  return sub_213EF3360();
}

uint64_t ThinMediaGroundTruth.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B978);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DEBD94();
  sub_213EF3348();
  v11[15] = 0;
  sub_213EF1D64();
  sub_213DB0DB4(&qword_254D3A9B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_213EF31BC();
  if (!v2)
  {
    v9 = type metadata accessor for ThinMediaGroundTruth();
    v11[14] = 1;
    sub_213EF318C();
    v11[13] = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_213DEBDD8();
    sub_213EF31BC();
    v11[11] = *(_BYTE *)(v3 + *(int *)(v9 + 28));
    v11[10] = 3;
    sub_213DEBE1C();
    sub_213EF3180();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ThinMediaGroundTruth.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_213EF32F4();
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  v1 = type metadata accessor for ThinMediaGroundTruth();
  sub_213EF28BC();
  sub_213EF3300();
  sub_213EF3300();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 28)) == 3)
  {
    sub_213EF330C();
  }
  else
  {
    sub_213EF330C();
    sub_213EF3300();
  }
  return sub_213EF3330();
}

uint64_t ThinMediaGroundTruth.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v19 = a2;
  v20 = sub_213EF1D64();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B998);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for ThinMediaGroundTruth();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DEBD94();
  v22 = v7;
  v11 = (uint64_t)v24;
  sub_213EF333C();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v12 = v5;
  v24 = a1;
  v30 = 0;
  sub_213DB0DB4(&qword_254D3A9E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v20;
  v14 = v21;
  sub_213EF3144();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v23, v13);
  v29 = 1;
  v15 = sub_213EF3114();
  v16 = (uint64_t *)&v10[v8[5]];
  *v16 = v15;
  v16[1] = v17;
  v27 = 2;
  sub_213DEBE60();
  sub_213EF3144();
  v10[v8[6]] = v28;
  v25 = 3;
  sub_213DEBEA4();
  sub_213EF3108();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v14);
  *(_BYTE *)v8[7] = v26;
  sub_213DEB148(0, v19);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  return sub_213DCA828(0, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
}

uint64_t sub_213DEBAD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ThinMediaGroundTruth.init(from:)(a1, a2);
}

uint64_t sub_213DEBAE4(_QWORD *a1)
{
  return ThinMediaGroundTruth.encode(to:)(a1);
}

uint64_t sub_213DEBB00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  sub_213EF28BC();
  sub_213EF3300();
  sub_213EF3300();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 28)) == 3)
    return sub_213EF330C();
  sub_213EF330C();
  return sub_213EF3300();
}

uint64_t sub_213DEBBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_213EF32F4();
  sub_213EF1D64();
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_213EF27F0();
  sub_213EF28BC();
  sub_213EF3300();
  sub_213EF3300();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 28)) == 3)
  {
    sub_213EF330C();
  }
  else
  {
    sub_213EF330C();
    sub_213EF3300();
  }
  return sub_213EF3330();
}

uint64_t _s28SiriPrivateLearningInference20ThinMediaGroundTruthV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;

  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for ThinMediaGroundTruth();
  v5 = v4[5];
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_213EF3234(), result = 0, (v10 & 1) != 0))
  {
    v12 = v4[6];
    v13 = *(char *)(a1 + v12);
    v14 = *(unsigned __int8 *)(a1 + v12);
    v15 = *(unsigned __int8 *)(a2 + v12);
    result = 0;
    if ((v13 & 0x80000000) == 0)
    {
      if ((v15 & 0x80) != 0 || v14 != v15)
        return result;
LABEL_13:
      v16 = v4[7];
      v17 = *(unsigned __int8 *)(a1 + v16);
      v18 = *(unsigned __int8 *)(a2 + v16);
      if (v17 == 3)
      {
        if (v18 != 3)
          return 0;
      }
      else if (v18 == 3 || v17 != v18)
      {
        return 0;
      }
      return 1;
    }
    if ((v15 & 0x80) != 0 && ((v15 ^ v14) & 0x7F) == 0)
      goto LABEL_13;
  }
  return result;
}

unint64_t sub_213DEBD94()
{
  unint64_t result;

  result = qword_254D3B980;
  if (!qword_254D3B980)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6E74, &type metadata for ThinMediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3B980);
  }
  return result;
}

unint64_t sub_213DEBDD8()
{
  unint64_t result;

  result = qword_254D3B988;
  if (!qword_254D3B988)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaGroundTruthSource, &type metadata for MediaGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3B988);
  }
  return result;
}

unint64_t sub_213DEBE1C()
{
  unint64_t result;

  result = qword_254D3B990;
  if (!qword_254D3B990)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PimsLocality, &type metadata for PimsLocality);
    atomic_store(result, (unint64_t *)&qword_254D3B990);
  }
  return result;
}

unint64_t sub_213DEBE60()
{
  unint64_t result;

  result = qword_254D3B9A0;
  if (!qword_254D3B9A0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MediaGroundTruthSource, &type metadata for MediaGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3B9A0);
  }
  return result;
}

unint64_t sub_213DEBEA4()
{
  unint64_t result;

  result = qword_254D3B9A8;
  if (!qword_254D3B9A8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PimsLocality, &type metadata for PimsLocality);
    atomic_store(result, (unint64_t *)&qword_254D3B9A8);
  }
  return result;
}

uint64_t sub_213DEBEE8()
{
  return sub_213DB0DB4(&qword_254D3B9B0, (uint64_t (*)(uint64_t))type metadata accessor for ThinMediaGroundTruth, (uint64_t)&protocol conformance descriptor for ThinMediaGroundTruth);
}

_QWORD *initializeBufferWithCopyOfBuffer for ThinMediaGroundTruth(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ThinMediaGroundTruth(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ThinMediaGroundTruth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThinMediaGroundTruth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DEC210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ThinMediaGroundTruth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DEC29C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_213DEC318()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ThinMediaGroundTruth.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213DEC3E8 + 4 * byte_213EF6C49[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213DEC41C + 4 * byte_213EF6C44[v4]))();
}

uint64_t sub_213DEC41C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DEC424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DEC42CLL);
  return result;
}

uint64_t sub_213DEC438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DEC440);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213DEC444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DEC44C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ThinMediaGroundTruth.CodingKeys()
{
  return &type metadata for ThinMediaGroundTruth.CodingKeys;
}

unint64_t sub_213DEC46C()
{
  unint64_t result;

  result = qword_254D3BA50;
  if (!qword_254D3BA50)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6E4C, &type metadata for ThinMediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA50);
  }
  return result;
}

unint64_t sub_213DEC4B4()
{
  unint64_t result;

  result = qword_254D3BA58;
  if (!qword_254D3BA58)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6DBC, &type metadata for ThinMediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA58);
  }
  return result;
}

unint64_t sub_213DEC4FC()
{
  unint64_t result;

  result = qword_254D3BA60;
  if (!qword_254D3BA60)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6DE4, &type metadata for ThinMediaGroundTruth.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA60);
  }
  return result;
}

uint64_t sub_213DEC540(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7254646E756F7267 && a2 == 0xEF65707954687475 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000213F06320 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000213F06340)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_213DEC6F8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  unsigned __int8 v27[8];
  uint64_t v28;
  char v29[8];
  __int128 v30;
  uint64_t v31;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v31 = MEMORY[0x24BEE4AF8];
  sub_213DCD37C(0, v1, 0);
  v2 = v31;
  result = sub_213EA6F20(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v24 = v1;
  v25 = v5;
  v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v27[0] = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v6);
    v28 = v12;
    swift_bridgeObjectRetain();
    sub_213DECD20(v27, v12, (uint64_t)v29);
    result = swift_bridgeObjectRelease();
    v13 = v29[0];
    v14 = v30;
    v31 = v2;
    v16 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v2 + 24);
    if (v16 >= v15 >> 1)
    {
      v23 = v30;
      result = sub_213DCD37C(v15 > 1, v16 + 1, 1);
      v14 = v23;
      v2 = v31;
    }
    *(_QWORD *)(v2 + 16) = v16 + 1;
    v17 = v2 + 24 * v16;
    *(_BYTE *)(v17 + 32) = v13;
    *(_OWORD *)(v17 + 40) = v14;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v18 = *(_QWORD *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_213DEC930(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v11[0] = *((_QWORD *)v1 + 2);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DED4C0();
  sub_213EF3348();
  v15 = v8;
  v14 = 0;
  sub_213DEBDD8();
  sub_213EF31BC();
  if (!v2)
  {
    v13 = 1;
    sub_213EF31B0();
    v12 = 2;
    sub_213EF31B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_213DECA94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213DED4C0();
  sub_213EF333C();
  if (!v2)
  {
    v16 = 0;
    sub_213DEBE60();
    sub_213EF3144();
    v9 = v17;
    v15 = 1;
    v11 = sub_213EF3138();
    v14 = 2;
    v12 = sub_213EF3138();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_213DECC20()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x656372756F73;
}

uint64_t sub_213DECC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213DECFC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213DECCA4()
{
  sub_213DED4C0();
  return sub_213EF3354();
}

uint64_t sub_213DECCCC()
{
  sub_213DED4C0();
  return sub_213EF3360();
}

uint64_t sub_213DECCF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213DECA94(a1, a2);
}

uint64_t sub_213DECD08(_QWORD *a1)
{
  return sub_213DEC930(a1);
}

uint64_t sub_213DECD20@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v35 = type metadata accessor for MediaGroundTruth();
  MEMORY[0x24BDAC7A8](v35);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = MEMORY[0x24BEE4B08];
  v39 = MEMORY[0x24BEE4B08];
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v30 = v9;
    v12 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v13 = *(_QWORD *)(v6 + 72);
    v32 = a3;
    v33 = v13;
    v31 = a2;
    swift_bridgeObjectRetain();
    v29 = v11;
    v14 = v11;
    v34 = v8;
    do
    {
      sub_213DBE4C0(v12, (uint64_t)v8);
      v15 = *(_QWORD **)&v8[*(int *)(v35 + 28)];
      v16 = &v8[*(int *)(v35 + 32)];
      v17 = *((_QWORD *)v16 + 1);
      v38 = *(_QWORD *)v16;
      v18 = *((_QWORD *)v16 + 2);
      v19 = *((_QWORD *)v16 + 3);
      v20 = *((_QWORD *)v16 + 4);
      v21 = *((_QWORD *)v16 + 5);
      v22 = v16[48];
      v36 = v16[49];
      v37 = v22;
      swift_bridgeObjectRetain();
      sub_213DB8518(v18, v19);
      swift_bridgeObjectRetain();
      sub_213DB8518(v18, v19);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_213DB64A8(0, v15[2] + 1, 1, v15);
      v24 = v15[2];
      v23 = v15[3];
      if (v24 >= v23 >> 1)
        v15 = sub_213DB64A8((_QWORD *)(v23 > 1), v24 + 1, 1, v15);
      v15[2] = v24 + 1;
      v25 = &v15[7 * v24];
      v25[4] = v38;
      v25[5] = v17;
      v25[6] = v18;
      v25[7] = v19;
      v25[8] = v20;
      v25[9] = v21;
      *((_BYTE *)v25 + 80) = v37;
      *((_BYTE *)v25 + 81) = v36;
      swift_bridgeObjectRelease();
      sub_213DB859C(v18, v19);
      v26 = sub_213DDDC48((uint64_t)v15);
      swift_bridgeObjectRelease();
      sub_213DF5A28(v26);
      v8 = v34;
      sub_213DBE504((uint64_t)v34);
      v12 += v33;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v10 = v39;
    a3 = v32;
    LOBYTE(v9) = v30;
    v11 = v29;
  }
  v27 = *(_QWORD *)(v10 + 16);
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a3 = v9;
  *(_QWORD *)(a3 + 8) = v11;
  *(_QWORD *)(a3 + 16) = v27;
  return result;
}

BOOL sub_213DECF70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BOOL8 result;

  v2 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a1 + 2);
  v5 = *a2;
  v6 = *((_QWORD *)a2 + 1);
  if (((char)*a1 & 0x80000000) == 0)
  {
    if ((v5 & 0x80) != 0)
      return 0;
    if (v2 != v5 || v4 != v6)
      return 0;
    return v3 == *((_QWORD *)a2 + 2);
  }
  result = 0;
  if ((v5 & 0x80) != 0 && ((v5 ^ v2) & 0x7F) == 0 && v4 == v6)
    return v3 == *((_QWORD *)a2 + 2);
  return result;
}

uint64_t sub_213DECFC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000213F06360 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000213F06380)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_213DED108(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;

  v2 = type metadata accessor for MediaGroundTruth();
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v35 - v6;
  v8 = (_QWORD *)MEMORY[0x24BEE4B00];
  v42 = (_QWORD *)MEMORY[0x24BEE4B00];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v41 = v5;
    v10 = *(unsigned __int8 *)(v4 + 80);
    v11 = (v10 + 32) & ~v10;
    v12 = a1 + v11;
    v13 = *(_QWORD *)(v4 + 72);
    v38 = v10 | 7;
    v39 = v13 + v11;
    v35 = a1;
    swift_bridgeObjectRetain();
    v37 = xmmword_213EF53E0;
    v40 = v11;
    v36 = v2;
    while (1)
    {
      sub_213DBE4C0(v12, (uint64_t)v7);
      v14 = v2;
      v15 = v7[*(int *)(v2 + 20)];
      v17 = sub_213DFA578(v15);
      v18 = v8[2];
      v19 = (v16 & 1) == 0;
      v20 = v18 + v19;
      if (__OFADD__(v18, v19))
        break;
      v21 = v16;
      if (v8[3] < v20)
      {
        sub_213DFBF40(v20, 1);
        v8 = v42;
        v22 = sub_213DFA578(v15);
        if ((v21 & 1) != (v23 & 1))
          goto LABEL_20;
        v17 = v22;
      }
      if ((v21 & 1) != 0)
      {
        v24 = v8[7];
        sub_213DED3C8((uint64_t)v7, v41);
        v25 = *(_QWORD *)(v24 + 8 * v17);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v24 + 8 * v17) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v25 = sub_213DB6494(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
          *(_QWORD *)(v24 + 8 * v17) = v25;
        }
        v28 = *(_QWORD *)(v25 + 16);
        v27 = *(_QWORD *)(v25 + 24);
        if (v28 >= v27 >> 1)
        {
          v25 = sub_213DB6494(v27 > 1, v28 + 1, 1, v25);
          *(_QWORD *)(v24 + 8 * v17) = v25;
        }
        v2 = v36;
        *(_QWORD *)(v25 + 16) = v28 + 1;
        v11 = v40;
        sub_213DED3C8(v41, v25 + v40 + v28 * v13);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A628);
        v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v37;
        sub_213DED3C8((uint64_t)v7, v29 + v11);
        v8[(v17 >> 6) + 8] |= 1 << v17;
        *(_BYTE *)(v8[6] + v17) = v15;
        *(_QWORD *)(v8[7] + 8 * v17) = v29;
        v30 = v8[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_19;
        v8[2] = v32;
        v2 = v14;
      }
      v12 += v13;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
LABEL_17:
    v33 = sub_213DEC6F8((uint64_t)v8);
    swift_release();
    return v33;
  }
  return result;
}

uint64_t sub_213DED3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaGroundTruth();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for MediaGroundTruthSummary(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1F && a1[24])
    return (*(_DWORD *)a1 + 31);
  v3 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v3 >= 0x1E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruthSummary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 31;
    if (a3 >= 0x1F)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x1F)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSummary()
{
  return &type metadata for MediaGroundTruthSummary;
}

unint64_t sub_213DED4C0()
{
  unint64_t result;

  result = qword_254D3BA70;
  if (!qword_254D3BA70)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF7054, &type metadata for MediaGroundTruthSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MediaGroundTruthSummary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213DED550 + 4 * byte_213EF6ED5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213DED584 + 4 * byte_213EF6ED0[v4]))();
}

uint64_t sub_213DED584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DED58C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DED594);
  return result;
}

uint64_t sub_213DED5A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DED5A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213DED5AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DED5B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaGroundTruthSummary.CodingKeys()
{
  return &type metadata for MediaGroundTruthSummary.CodingKeys;
}

unint64_t sub_213DED5D4()
{
  unint64_t result;

  result = qword_254D3BA80;
  if (!qword_254D3BA80)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF702C, &type metadata for MediaGroundTruthSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA80);
  }
  return result;
}

unint64_t sub_213DED61C()
{
  unint64_t result;

  result = qword_254D3BA88;
  if (!qword_254D3BA88)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6F9C, &type metadata for MediaGroundTruthSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA88);
  }
  return result;
}

unint64_t sub_213DED664()
{
  unint64_t result;

  result = qword_254D3BA90;
  if (!qword_254D3BA90)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF6FC4, &type metadata for MediaGroundTruthSummary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3BA90);
  }
  return result;
}

uint64_t sub_213DED6A8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_213EF2C28();
  if (!v18)
    return sub_213EF2A90();
  v19 = v18;
  v25 = v15;
  v39 = sub_213EF2FAC();
  v32 = sub_213EF2FB8();
  sub_213EF2F70();
  v36 = v17;
  result = sub_213EF2C1C();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_213EF2C4C();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_213EF2FA0();
      sub_213EF2C34();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t INInteraction.getTimestamp()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA98);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v16 - v8;
  v10 = objc_msgSend(v2, sel_dateInterval);
  if (v10)
  {
    v11 = v10;
    sub_213EF1A64();

    v12 = sub_213EF1AA0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
  }
  else
  {
    v12 = sub_213EF1AA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  }
  sub_213DEDB10((uint64_t)v7, (uint64_t)v9);
  sub_213EF1AA0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
  {
    sub_213DAFEC4((uint64_t)v9, &qword_254D3BA98);
    v13 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    sub_213EF1A88();
    sub_213DAFEC4((uint64_t)v9, &qword_254D3BA98);
    v15 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
}

uint64_t sub_213DEDB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DEDB58@<X0>(uint64_t a1@<X8>)
{
  return INInteraction.getTimestamp()(a1);
}

uint64_t AppInteraction.getTimestamp()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BA98);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v14 - v6;
  v8 = (void *)sub_213EF2220();
  v9 = objc_msgSend(v8, sel_dateInterval);

  if (v9)
  {
    sub_213EF1A64();

    v10 = sub_213EF1AA0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    v10 = sub_213EF1AA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_213DEDB10((uint64_t)v5, (uint64_t)v7);
  sub_213EF1AA0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10))
  {
    sub_213DAFEC4((uint64_t)v7, &qword_254D3BA98);
    v11 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_213EF1A88();
    sub_213DAFEC4((uint64_t)v7, &qword_254D3BA98);
    v13 = sub_213EF1CF8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 0, 1, v13);
  }
}

uint64_t sub_213DEDD20()
{
  uint64_t v0;

  sub_213EF2AE4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_213EF2A90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FE0);
  v0 = sub_213EF2AE4();
  swift_getTupleTypeMetadata2();
  sub_213DEE444();
  sub_213EF29DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v0);
  return sub_213EF29F4();
}

uint64_t sub_213DEDE54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  v34 = a6;
  v33 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213EF1CF8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  sub_213DEE490(a2, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_213DAFEC4((uint64_t)v12, &qword_253F04800);
    v18 = v34;
    *v34 = a3;
    sub_213EF2AE4();
    sub_213EF3204();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v19 = sub_213EF2A60();
    *v20 = sub_213EF2A90();
    sub_213DB9D78(v19);
    v21 = sub_213EF2A84();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v35 = v17;
    MEMORY[0x24BDAC7A8](v23);
    v24 = v33;
    *(&v32 - 4) = a4;
    *(&v32 - 3) = v24;
    *(&v32 - 2) = (uint64_t)v16;
    v25 = sub_213EF2AE4();
    v26 = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v25);
    v27 = sub_213E82DF4((void (*)(char *))sub_213DEE4D8, (uint64_t)(&v32 - 6), v25, v26);
    v29 = v28;
    v18 = v34;
    *v34 = v27;
    sub_213EF3204();
    swift_allocObject();
    v30 = sub_213EF2A60();
    *v31 = v29;
    sub_213DB9D78(v30);
    v21 = sub_213EF2A84();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  v18[1] = v21;
  return result;
}

uint64_t sub_213DEE0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213EF1CF8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_213DAFEC4((uint64_t)v8, &qword_253F04800);
    v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_213DEE4E4();
    v13 = sub_213EF282C() ^ 1;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v13 & 1;
}

uint64_t static TimeEventUtils.groupAndJoinEvents<A, B>(milestoneEvents:eventsToJoin:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v18[5] = a6;
  v19 = a1;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v7 = sub_213EF2AE4();
  v8 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v9 = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v7);
  sub_213DED6A8((void (*)(char *, char *))sub_213DEE3D8, (uint64_t)v18, v7, v8, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v10);
  v11 = sub_213DEDD20();
  swift_bridgeObjectRelease();
  v19 = a1;
  *(_QWORD *)&v23 = v11;
  sub_213EF2AE4();
  v12 = sub_213EF2AE4();
  v13 = MEMORY[0x24BEE12C8];
  v14 = MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v7);
  v15 = MEMORY[0x2199C52D4](v13, v12);
  sub_213EF3270();
  swift_bridgeObjectRelease();
  v23 = v24;
  swift_getTupleTypeMetadata2();
  v19 = v7;
  v20 = v12;
  v21 = v14;
  v22 = v15;
  v16 = sub_213EF2ED4();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE2620], v16);
  return sub_213EF2AF0();
}

uint64_t sub_213DEE3D8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t dispatch thunk of TimeBasedEvent.getTimestamp()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for TimeEventUtils()
{
  return &type metadata for TimeEventUtils;
}

uint64_t sub_213DEE428@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  return sub_213DEDE54(a1, a2, v3[4], v3[2], v3[3], a3);
}

unint64_t sub_213DEE444()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F06FD8;
  if (!qword_253F06FD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F06FE0);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE3048], v1);
    atomic_store(result, (unint64_t *)&qword_253F06FD8);
  }
  return result;
}

uint64_t sub_213DEE490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213DEE4D8(uint64_t a1)
{
  uint64_t *v1;

  return sub_213DEE0DC(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_213DEE4E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3BAA0;
  if (!qword_254D3BAA0)
  {
    v1 = sub_213EF1CF8();
    result = MEMORY[0x2199C52D4](MEMORY[0x24BDCE948], v1);
    atomic_store(result, (unint64_t *)&qword_254D3BAA0);
  }
  return result;
}

SiriPrivateLearningInference::PIMSConstraintMismatch __swiftcall PIMSConstraintMismatch.init(mismatchReason:)(SiriPrivateLearningInference::PIMSConstraintMismatchReason mismatchReason)
{
  uint64_t v1;
  char v2;
  SiriPrivateLearningInference::PIMSConstraintMismatch result;

  v2 = *(_BYTE *)mismatchReason;
  *(_QWORD *)v1 = 0xD000000000000016;
  *(_QWORD *)(v1 + 8) = 0x8000000213EF7160;
  *(_BYTE *)(v1 + 16) = v2;
  LOBYTE(result.eventName._countAndFlagsBits) = mismatchReason;
  return result;
}

uint64_t PIMSConstraintMismatch.eventName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PIMSConstraintMismatch.eventName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PIMSConstraintMismatch.eventName.modify())()
{
  return nullsub_1;
}

unint64_t PIMSConstraintMismatch.getLoggableProperties()()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04ED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  strcpy((char *)(inited + 32), "mismatchReason");
  *(_BYTE *)(inited + 47) = -18;
  v1 = PIMSConstraintMismatchReason.rawValue.getter();
  v2 = MEMORY[0x24BEA5438];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v2;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v3;
  return sub_213DCAA54(inited);
}

uint64_t PIMSConstraintMismatchReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213DEE694
                                                                     + 4 * aS[*v0]))(0xD000000000000027, 0x8000000213F04C20);
}

uint64_t sub_213DEE694@<X0>(uint64_t a1@<X8>)
{
  return a1 - 9;
}

unint64_t sub_213DEE880()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04ED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  strcpy((char *)(inited + 32), "mismatchReason");
  *(_BYTE *)(inited + 47) = -18;
  v1 = PIMSConstraintMismatchReason.rawValue.getter();
  v2 = MEMORY[0x24BEA5438];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 80) = v2;
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v3;
  return sub_213DCAA54(inited);
}

SiriPrivateLearningInference::PIMSConstraintMismatchReason_optional __swiftcall PIMSConstraintMismatchReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SiriPrivateLearningInference::PIMSConstraintMismatchReason_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_213EF3258();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 13;
  switch(v3)
  {
    case 0:
      goto LABEL_15;
    case 1:
      v5 = 1;
      goto LABEL_15;
    case 2:
      v5 = 2;
      goto LABEL_15;
    case 3:
      v5 = 3;
      goto LABEL_15;
    case 4:
      v5 = 4;
      goto LABEL_15;
    case 5:
      v5 = 5;
      goto LABEL_15;
    case 6:
      v5 = 6;
      goto LABEL_15;
    case 7:
      v5 = 7;
      goto LABEL_15;
    case 8:
      v5 = 8;
      goto LABEL_15;
    case 9:
      v5 = 9;
      goto LABEL_15;
    case 10:
      v5 = 10;
      goto LABEL_15;
    case 11:
      v5 = 11;
      goto LABEL_15;
    case 12:
      v5 = 12;
LABEL_15:
      v6 = v5;
      break;
    case 13:
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    case 24:
      v6 = 24;
      break;
    case 25:
      v6 = 25;
      break;
    case 26:
      v6 = 26;
      break;
    case 27:
      v6 = 27;
      break;
    case 28:
      v6 = 28;
      break;
    case 29:
      v6 = 29;
      break;
    case 30:
      v6 = 30;
      break;
    default:
      v6 = 31;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_213DEEA84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213E29858(*a1, *a2);
}

unint64_t sub_213DEEA94()
{
  unint64_t result;

  result = qword_254D3BAA8;
  if (!qword_254D3BAA8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PIMSConstraintMismatchReason, &type metadata for PIMSConstraintMismatchReason);
    atomic_store(result, (unint64_t *)&qword_254D3BAA8);
  }
  return result;
}

uint64_t sub_213DEEAD8()
{
  sub_213EF32F4();
  PIMSConstraintMismatchReason.rawValue.getter();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213DEEB3C()
{
  PIMSConstraintMismatchReason.rawValue.getter();
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213DEEB8C()
{
  sub_213EF32F4();
  PIMSConstraintMismatchReason.rawValue.getter();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

SiriPrivateLearningInference::PIMSConstraintMismatchReason_optional sub_213DEEBEC(Swift::String *a1)
{
  return PIMSConstraintMismatchReason.init(rawValue:)(*a1);
}

uint64_t sub_213DEEBF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PIMSConstraintMismatchReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for PIMSConstraintMismatch()
{
  return &type metadata for PIMSConstraintMismatch;
}

uint64_t getEnumTagSinglePayload for PIMSConstraintMismatchReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE2)
    goto LABEL_17;
  if (a2 + 30 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 30) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 30;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 30;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 30;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v8 = v6 - 31;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PIMSConstraintMismatchReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_213DEED08 + 4 * byte_213EF7173[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_213DEED3C + 4 * byte_213EF716E[v4]))();
}

uint64_t sub_213DEED3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DEED44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213DEED4CLL);
  return result;
}

uint64_t sub_213DEED58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213DEED60);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_213DEED64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213DEED6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PIMSConstraintMismatchReason()
{
  return &type metadata for PIMSConstraintMismatchReason;
}

ValueMetadata *type metadata accessor for NowPlayingEventHelpers()
{
  return &type metadata for NowPlayingEventHelpers;
}

uint64_t sub_213DEED98(uint64_t a1, char a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  sub_213DAF7EC(a3, &v14);
  sub_213DAF7EC(a1, &v13);
  v5 = v14;
  v6 = v13;
  if ((a2 & 1) != 0)
  {
    if (*((_QWORD *)&v14 + 1) != 5)
    {
      if (*((_QWORD *)&v13 + 1) == 5)
      {
        v8 = *((_QWORD *)&v14 + 1);
        v7 = v14;
LABEL_12:
        sub_213DEF76C(v7, v8);
        v9 = 0;
        return v9 & 1;
      }
      v12 = v14;
LABEL_14:
      v11 = v13;
      sub_213DEF7A4(v14, *((unint64_t *)&v14 + 1));
      sub_213DEF7A4(v5, *((unint64_t *)&v5 + 1));
      v9 = _s28SiriPrivateLearningInference19NowPlayingMediaTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v12, (uint64_t *)&v11);
      sub_213DEF76C(v6, *((unint64_t *)&v6 + 1));
      sub_213DEF76C(v5, *((unint64_t *)&v5 + 1));
      sub_213DEF77C(v12, *((unint64_t *)&v12 + 1));
      sub_213DEF76C(v5, *((unint64_t *)&v5 + 1));
      return v9 & 1;
    }
LABEL_11:
    v8 = *((_QWORD *)&v6 + 1);
    v7 = v6;
    goto LABEL_12;
  }
  if (*((_QWORD *)&v14 + 1) != 5)
  {
    v12 = v14;
    if (*((_QWORD *)&v13 + 1) != 5)
      goto LABEL_14;
    sub_213DEF790(v14, *((unint64_t *)&v14 + 1));
    sub_213DEF77C(v5, *((unint64_t *)&v5 + 1));
    goto LABEL_10;
  }
  if (*((_QWORD *)&v13 + 1) != 5)
  {
LABEL_10:
    sub_213DEF76C(v5, *((unint64_t *)&v5 + 1));
    goto LABEL_11;
  }
  v9 = 1;
  return v9 & 1;
}

uint64_t sub_213DEEEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEB54(v0);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_4:
    if (qword_253F04A88 != -1)
      swift_once();
    v6 = sub_213EF2724();
    __swift_project_value_buffer(v6, (uint64_t)qword_253F08A00);
    v7 = sub_213EF270C();
    v8 = sub_213EF2CA0();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_213DAB000, v7, v8, "Missing bundleId or mediaType", v9, 2u);
      MEMORY[0x2199C53C4](v9, -1, -1);
    }

    return 0;
  }
  v4 = swift_bridgeObjectRetain();
  sub_213DAF7EC(v4, &v16);
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1) == 5)
  {
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v12 = v16;
  if (v1 == 0x6C7070612E6D6F63 && v3 == 0xEF636973754D2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_213DEF76C(v12, v5);
      return 1;
    }
  }
  switch(v5)
  {
    case 0uLL:
      sub_213DEF77C(v12, 0);
      sub_213DEF77C(0, 0);
      return 0;
    case 1uLL:
      v10 = 1;
      sub_213DEF77C(v12, 1uLL);
      sub_213DEF77C(0, 0);
      return v10;
    case 2uLL:
      v14 = v12;
      v15 = 2;
      goto LABEL_23;
    case 3uLL:
      v14 = v12;
      v15 = 3;
      goto LABEL_23;
    case 4uLL:
      v14 = v12;
      v15 = 4;
      goto LABEL_23;
    default:
      v14 = v12;
      v15 = v5;
LABEL_23:
      sub_213DEF77C(v14, v15);
      sub_213DEF77C(0, 0);
      v10 = 1;
      break;
  }
  return v10;
}

uint64_t sub_213DEF128(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  double v45;
  char v46;
  char v47;
  double v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_213DAEB54(v2);
  v6 = v5;
  v7 = sub_213DAEB54(v3);
  v9 = v8;
  if (v6)
  {
    if (!v8)
      goto LABEL_51;
    if (v4 == v7 && v6 == v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_213EF3234();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v9) = 0;
      if ((v11 & 1) == 0)
        return v9 & 1;
    }
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_213DAF9A8(v2);
    v14 = v13;
    v15 = sub_213DAF9A8(v3);
    LOBYTE(v9) = v16;
    if (!v14)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    if (v16)
    {
      if (v12 == v15 && v14 == v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_213EF3234();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        LOBYTE(v9) = 0;
        if ((v17 & 1) == 0)
          return v9 & 1;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_213DAF99C(v2);
      v20 = v19;
      v21 = sub_213DAF99C(v3);
      v9 = v22;
      if (v20)
      {
        if (!v22)
          goto LABEL_51;
        if (v18 == v21 && v20 == v22)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v23 = sub_213EF3234();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v23 & 1) == 0)
            return v9 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9)
          goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = sub_213DAF990(v2);
      v26 = v25;
      v27 = sub_213DAF990(v3);
      v9 = v28;
      if (v26)
      {
        if (!v28)
          goto LABEL_51;
        if (v24 == v27 && v26 == v28)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v29 = sub_213EF3234();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v29 & 1) == 0)
            return v9 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9)
          goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30 = sub_213DAF984(v2);
      v32 = v31;
      v33 = sub_213DAF984(v3);
      v9 = v34;
      if (v32)
      {
        if (!v34)
          goto LABEL_51;
        if (v30 == v33 && v32 == v34)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v35 = sub_213EF3234();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v35 & 1) == 0)
            return v9 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9)
          goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      v36 = swift_bridgeObjectRetain();
      v37 = sub_213DEED98(v36, 0, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v9) = 0;
      if ((v37 & 1) == 0)
        return v9 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38 = sub_213DAF9A8(v2);
      v40 = v39;
      v41 = sub_213DAF9A8(v3);
      v9 = v42;
      if (!v40)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9)
          goto LABEL_18;
        goto LABEL_57;
      }
      if (v42)
      {
        if (v38 == v41 && v40 == v42)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v44 = sub_213EF3234();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v9) = 0;
          if ((v44 & 1) == 0)
            return v9 & 1;
        }
LABEL_57:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = COERCE_DOUBLE(sub_213DAF978(v2));
        v47 = v46;
        v48 = COERCE_DOUBLE(sub_213DAF978(v3));
        v50 = v49;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v47 & 1) != 0)
        {
          if ((v50 & 1) == 0)
            goto LABEL_19;
        }
        else if ((v50 & 1) != 0 || v45 != v48)
        {
          goto LABEL_19;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51 = sub_213DAF5EC(v2);
        v53 = v52;
        v54 = sub_213DAF5EC(v3);
        v56 = v55;
        if (!v53)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v56)
          {
            LOBYTE(v9) = 1;
            return v9 & 1;
          }
          goto LABEL_18;
        }
        if (v55)
        {
          if (v51 == v54 && v53 == v55)
            LOBYTE(v9) = 1;
          else
            LOBYTE(v9) = sub_213EF3234();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_52;
        }
        goto LABEL_17;
      }
    }
LABEL_51:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_12;
LABEL_18:
  swift_bridgeObjectRelease();
LABEL_19:
  LOBYTE(v9) = 0;
  return v9 & 1;
}

uint64_t sub_213DEF76C(uint64_t a1, unint64_t a2)
{
  if (a2 != 5)
    return sub_213DEF77C(a1, a2);
  return a1;
}

uint64_t sub_213DEF77C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 5)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_213DEF790(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 5)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_213DEF7A4(uint64_t a1, unint64_t a2)
{
  if (a2 != 5)
    return sub_213DEF790(a1, a2);
  return a1;
}

uint64_t InferenceFeatures.InferenceFeatureManager.__allocating_init()()
{
  swift_allocObject();
  return InferenceFeatures.InferenceFeatureManager.init()();
}

uint64_t InferenceFeatures.InferenceFeatureManager.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  uint64_t v6[5];
  uint64_t v7[10];

  v0 = sub_213EF1D7C();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_213EF2250();
  MEMORY[0x24BDAC7A8](v1);
  v2 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 276);
  v7[8] = sub_213DEF970();
  v7[9] = MEMORY[0x24BEA5448];
  v7[5] = (uint64_t)v2;
  v7[3] = sub_213EF24F0();
  v7[4] = MEMORY[0x24BEA50A8];
  __swift_allocate_boxed_opaque_existential_1(v7);
  sub_213EF24E4();
  v3 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_213EF1D70();

  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedPreferences);
  sub_213EF2244();
  v6[3] = sub_213EF2298();
  v6[4] = MEMORY[0x24BEA4D98];
  __swift_allocate_boxed_opaque_existential_1(v6);
  sub_213EF228C();
  return sub_213EF2274();
}

unint64_t sub_213DEF970()
{
  unint64_t result;

  result = qword_253F07160;
  if (!qword_253F07160)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253F07160);
  }
  return result;
}

void InferenceFeatures.InferenceFeatureManager.__allocating_init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void InferenceFeatures.InferenceFeatureManager.init(trialStatus:featureFlags:currentLocales:osResolver:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t InferenceFeatures.InferenceFeatureManager.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference0D8FeaturesO0D14FeatureManagerCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213DEFA24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BAD8);
  sub_213EF26E8();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF7380;
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  sub_213EF26DC();
  v1 = sub_213DDF538(v0);
  swift_setDeallocating();
  swift_arrayDestroy();
  result = swift_deallocClassInstance();
  qword_254D3BAB0 = v1;
  return result;
}

uint64_t static InferenceFeatures.top13Locales.getter()
{
  if (qword_254D39F90 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213DEFC84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  void (*v17)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v0 = sub_213EF2268();
  MEMORY[0x24BDAC7A8](v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07178);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF53E0;
  v5 = v4 + v3;
  v6 = (uint64_t *)(v5 + *(int *)(v1 + 48));
  v7 = *MEMORY[0x24BEA53C8];
  v8 = sub_213EF26F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v5, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07170);
  v9 = sub_213EF24FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213EF44B0;
  v14 = (uint64_t *)(v13 + v12);
  v15 = sub_213EF2148();
  v14[3] = v15;
  v14[4] = sub_213DF0DC8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEA4C28], v15);
  v17 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104);
  v17(v14, *MEMORY[0x24BEA50C0], v9);
  v18 = (uint64_t *)((char *)v14 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F070A8);
  *v18 = sub_213EF22EC();
  sub_213EF22A4();
  v17(v18, *MEMORY[0x24BEA50C8], v9);
  *v6 = v13;
  v19 = *MEMORY[0x24BEA5280];
  v20 = sub_213EF2610();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v6, v19, v20);
  sub_213DCB120(v4);
  sub_213EF225C();
  sub_213EF2160();
  swift_allocObject();
  result = sub_213EF2154();
  qword_253F04A38 = result;
  return result;
}

uint64_t static InferenceFeatures.PartialRepetitionsInPhoneCall.getter()
{
  return sub_213DEFF50(&qword_253F04A48);
}

uint64_t sub_213DEFF08(uint64_t a1)
{
  return sub_213DF06E4(a1, MEMORY[0x24BEA4C30], 0xD000000000000016, 0x8000000213F053C0, &qword_254D3BAB8);
}

uint64_t static InferenceFeatures.AdaptivePICSGeneration.getter()
{
  return sub_213DEFF50(&qword_254D39FA0);
}

uint64_t sub_213DEFF50(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_213DEFF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v0 = sub_213EF2268();
  MEMORY[0x24BDAC7A8](v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07178);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF53E0;
  v5 = v4 + v3;
  v6 = (uint64_t *)(v5 + *(int *)(v1 + 48));
  v7 = *MEMORY[0x24BEA53C8];
  v8 = sub_213EF26F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v5, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07170);
  v9 = sub_213EF24FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_213EF53E0;
  v13 = (uint64_t *)(v12 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F070A8);
  *v13 = sub_213EF22E0();
  sub_213EF22A4();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BEA50C8], v9);
  *v6 = v12;
  v14 = *MEMORY[0x24BEA5280];
  v15 = sub_213EF2610();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v6, v14, v15);
  sub_213DCB120(v4);
  sub_213EF225C();
  sub_213EF2160();
  swift_allocObject();
  result = sub_213EF2154();
  qword_253F04A00 = result;
  return result;
}

uint64_t static InferenceFeatures.PICSRuntimeInSiriVocab.getter()
{
  return sub_213DEFF50(&qword_253F04A08);
}

uint64_t sub_213DF01B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  void (*v17)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v0 = sub_213EF2268();
  MEMORY[0x24BDAC7A8](v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07178);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF53E0;
  v5 = v4 + v3;
  v6 = (uint64_t *)(v5 + *(int *)(v1 + 48));
  v7 = *MEMORY[0x24BEA53C8];
  v8 = sub_213EF26F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v5, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07170);
  v9 = sub_213EF24FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213EF44B0;
  v14 = (uint64_t *)(v13 + v12);
  v15 = sub_213EF2148();
  v14[3] = v15;
  v14[4] = sub_213DF0DC8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEA4C20], v15);
  v17 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104);
  v17(v14, *MEMORY[0x24BEA50C0], v9);
  v18 = (uint64_t *)((char *)v14 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F070A8);
  *v18 = sub_213EF22B0();
  sub_213EF22D4();
  v17(v18, *MEMORY[0x24BEA50C8], v9);
  *v6 = v13;
  v19 = *MEMORY[0x24BEA5280];
  v20 = sub_213EF2610();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v6, v19, v20);
  sub_213DCB120(v4);
  sub_213EF225C();
  sub_213EF2160();
  swift_allocObject();
  result = sub_213EF2154();
  qword_253F070C0 = result;
  return result;
}

uint64_t static InferenceFeatures.PIMSShadowLogging.getter()
{
  return sub_213DEFF50(&qword_253F070D0);
}

uint64_t sub_213DF0434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;
  void (*v17)(uint64_t *, _QWORD, uint64_t);
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v0 = sub_213EF2268();
  MEMORY[0x24BDAC7A8](v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07178);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF53E0;
  v5 = v4 + v3;
  v6 = (uint64_t *)(v5 + *(int *)(v1 + 48));
  v7 = *MEMORY[0x24BEA53C8];
  v8 = sub_213EF26F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v5, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07170);
  v9 = sub_213EF24FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_213EF44B0;
  v14 = (uint64_t *)(v13 + v12);
  v15 = sub_213EF2148();
  v14[3] = v15;
  v14[4] = sub_213DF0DC8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x24BEA4C10], v15);
  v17 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104);
  v17(v14, *MEMORY[0x24BEA50C0], v9);
  v18 = (uint64_t *)((char *)v14 + v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F070A8);
  *v18 = sub_213EF22BC();
  sub_213EF22D4();
  v17(v18, *MEMORY[0x24BEA50C8], v9);
  *v6 = v13;
  v19 = *MEMORY[0x24BEA5280];
  v20 = sub_213EF2610();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v6, v19, v20);
  sub_213DCB120(v4);
  sub_213EF225C();
  sub_213EF2160();
  swift_allocObject();
  result = sub_213EF2154();
  qword_253F04F10 = result;
  return result;
}

uint64_t static InferenceFeatures.PIMSSuggestionSurfacing.getter()
{
  return sub_213DEFF50(&qword_253F04F18);
}

uint64_t sub_213DF06B8(uint64_t a1)
{
  return sub_213DF06E4(a1, MEMORY[0x24BEA4C18], 0xD000000000000011, 0x8000000213F05360, &qword_253F04A10);
}

uint64_t sub_213DF06E4(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  v6 = sub_213EF2268();
  MEMORY[0x24BDAC7A8](v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07178);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_213EF53E0;
  v11 = (uint64_t *)(v10 + v9 + *(int *)(v7 + 48));
  v12 = *MEMORY[0x24BEA53C8];
  v13 = sub_213EF26F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10 + v9, v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07170);
  v14 = sub_213EF24FC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_213EF53E0;
  v18 = (uint64_t *)(v17 + v16);
  v19 = sub_213EF2148();
  v18[3] = v19;
  v18[4] = sub_213DF0DC8();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(boxed_opaque_existential_1, *a2, v19);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v18, *MEMORY[0x24BEA50C0], v14);
  *v11 = v17;
  v21 = *MEMORY[0x24BEA5280];
  v22 = sub_213EF2610();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v11, v21, v22);
  sub_213DCB120(v10);
  sub_213EF225C();
  sub_213EF2160();
  swift_allocObject();
  result = sub_213EF2154();
  *a5 = result;
  return result;
}

uint64_t static InferenceFeatures.PIMSInAppFollowup.getter()
{
  return sub_213DEFF50(&qword_253F04A20);
}

uint64_t sub_213DF0924()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_213EF2370();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_213EF2490();
  __swift_allocate_value_buffer(v1, qword_253F04A60);
  __swift_project_value_buffer(v1, (uint64_t)qword_253F04A60);
  sub_213EF22C8();
  sub_213EF22D4();
  return sub_213EF2484();
}

uint64_t static InferenceFeatures.pimsPartialRepetitionSimilarityThreshold.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_253F04A78 != -1)
    swift_once();
  v2 = sub_213EF2490();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_253F04A60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_213DF0A38(uint64_t a1)
{
  return sub_213DF0A64(a1, MEMORY[0x24BEA4DE8], 0xD00000000000001BLL, 0x8000000213F05380, &qword_253F04A28);
}

uint64_t sub_213DF0A64(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v6 = sub_213EF2268();
  MEMORY[0x24BDAC7A8](v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07178);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F070B8);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_213EF53E0;
  v11 = (uint64_t *)(v10 + v9 + *(int *)(v7 + 48));
  v12 = *MEMORY[0x24BEA53C8];
  v13 = sub_213EF26F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v10 + v9, v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07170);
  v14 = sub_213EF24FC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_213EF53E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F070A8);
  *(_QWORD *)(v17 + v16) = a2();
  sub_213EF22D4();
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x24BEA50C8], v14);
  *v11 = v17;
  v18 = *MEMORY[0x24BEA5280];
  v19 = sub_213EF2610();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v11, v18, v19);
  sub_213DCB120(v10);
  sub_213EF225C();
  sub_213EF2160();
  swift_allocObject();
  result = sub_213EF2154();
  *a5 = result;
  return result;
}

uint64_t static InferenceFeatures.pimsWakeWordTrimmingEnabled.getter()
{
  return sub_213DEFF50(&qword_253F04A30);
}

uint64_t sub_213DF0C94(uint64_t a1)
{
  return sub_213DF0A64(a1, MEMORY[0x24BEA4DF0], 0xD00000000000001DLL, 0x8000000213F053A0, &qword_253F04A50);
}

uint64_t static InferenceFeatures.pimsPhantomTurnRemovalEnabled.getter()
{
  return sub_213DEFF50(&qword_253F04A58);
}

ValueMetadata *type metadata accessor for InferenceFeatures()
{
  return &type metadata for InferenceFeatures;
}

uint64_t type metadata accessor for InferenceFeatures.InferenceFeatureManager()
{
  uint64_t result;

  result = qword_253F07090;
  if (!qword_253F07090)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213DF0D28()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for InferenceFeatures.InferenceFeatureManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InferenceFeatures.InferenceFeatureManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + class metadata base offset for InferenceFeatures.InferenceFeatureManager))();
}

uint64_t sub_213DF0D80()
{
  return type metadata accessor for InferenceFeatures.InferenceFeatureManager();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_213DF0DC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F070A0;
  if (!qword_253F070A0)
  {
    v1 = sub_213EF2148();
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEA4C08], v1);
    atomic_store(result, (unint64_t *)&qword_253F070A0);
  }
  return result;
}

uint64_t ContactSuggestionProvidedClassification.turnId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ContactSuggestionProvidedClassification.contactSuggestion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ContactSuggestionProvidedClassification() + 20);
  return sub_213DF0EB4(v3, a1);
}

uint64_t type metadata accessor for ContactSuggestionProvidedClassification()
{
  uint64_t result;

  result = qword_253F06F60;
  if (!qword_253F06F60)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213DF0EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactSuggestionProvidedClassification.userPrompt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ContactSuggestionProvidedClassification() + 24);
  return sub_213DF0F28(v3, a1);
}

uint64_t sub_213DF0F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactSuggestionProvidedClassification.referencedTurns.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
  v1 = sub_213EF1D64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF53E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0, v1);
  return v4;
}

uint64_t ContactSuggestionProvidedClassification.referencedEvents.getter()
{
  type metadata accessor for ContactSuggestionProvidedClassification();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213DF1020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
  v1 = sub_213EF1D64();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_213EF53E0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0, v1);
  return v4;
}

uint64_t sub_213DF10B0()
{
  return swift_bridgeObjectRetain();
}

char *initializeBufferWithCopyOfBuffer for ContactSuggestionProvidedClassification(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t, int *);
  char *v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, char *, uint64_t);
  _QWORD *v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v43 = a2;
    v12 = &a2[v10];
    v9(&a1[v10], v12, v7);
    v13 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
    v14 = v13[5];
    v15 = &v11[v14];
    v16 = &v12[v14];
    v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v42 = v9;
    if (v41(&v12[v14], 1, v7))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v9(v15, v16, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    v11[v13[6]] = v12[v13[6]];
    v11[v13[7]] = v12[v13[7]];
    v19 = a3[6];
    v20 = &a1[v19];
    v21 = v43;
    v22 = (_QWORD *)((char *)v43 + v19);
    v23 = (int *)type metadata accessor for EntityPromptClassification();
    v24 = *((_QWORD *)v23 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
      memcpy(v20, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v40 = v24;
      v26 = v22[1];
      *(_QWORD *)v20 = *v22;
      *((_QWORD *)v20 + 1) = v26;
      v27 = v22[3];
      *((_QWORD *)v20 + 2) = v22[2];
      *((_QWORD *)v20 + 3) = v27;
      v28 = v22[5];
      *((_QWORD *)v20 + 4) = v22[4];
      *((_QWORD *)v20 + 5) = v28;
      v29 = v22[7];
      *((_QWORD *)v20 + 6) = v22[6];
      *((_QWORD *)v20 + 7) = v29;
      v30 = v22[9];
      *((_QWORD *)v20 + 8) = v22[8];
      *((_QWORD *)v20 + 9) = v30;
      v20[80] = *((_BYTE *)v22 + 80);
      v31 = v23[11];
      v38 = (char *)v22 + v31;
      v39 = &v20[v31];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v39, v38, v7);
      v32 = v23[12];
      v33 = &v20[v32];
      v34 = (char *)v22 + v32;
      if (v41((char *)v22 + v32, 1, v7))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v42(v33, v34, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v33, 0, 1, v7);
      }
      *(_QWORD *)&v20[v23[13]] = *(_QWORD *)((char *)v22 + v23[13]);
      v36 = *(void (**)(char *, _QWORD, uint64_t, int *))(v40 + 56);
      swift_bridgeObjectRetain();
      v36(v20, 0, 1, v23);
      v21 = v43;
    }
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)((char *)v21 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  v6(v7, v4);
  v8 = v7 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 20);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v9(v8, 1, v4))
    v6(v8, v4);
  v10 = a1 + *(int *)(a2 + 24);
  v11 = type metadata accessor for EntityPromptClassification();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v10 + *(int *)(v11 + 44), v4);
    v12 = v10 + *(int *)(v11 + 48);
    if (!v9(v12, 1, v4))
      v6(v12, v4);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(_QWORD *, _QWORD, uint64_t, int *);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v42 = a1;
  v10 = a1 + v9;
  v11 = a2 + v9;
  v8(v10, a2 + v9, v6);
  v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v13 = v12[5];
  v14 = (void *)(v10 + v13);
  v15 = (const void *)(v11 + v13);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v41 = (void (*)(char *, char *, uint64_t))v8;
  if (v40(v11 + v13, 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  *(_BYTE *)(v10 + v12[6]) = *(_BYTE *)(v11 + v12[6]);
  *(_BYTE *)(v10 + v12[7]) = *(_BYTE *)(v11 + v12[7]);
  v17 = a3[6];
  v18 = v42;
  v19 = (_QWORD *)(v42 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = (int *)type metadata accessor for EntityPromptClassification();
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v38 = v22;
    v39 = a2;
    v24 = v20[1];
    *v19 = *v20;
    v19[1] = v24;
    v25 = v20[3];
    v19[2] = v20[2];
    v19[3] = v25;
    v26 = v20[5];
    v19[4] = v20[4];
    v19[5] = v26;
    v27 = v20[7];
    v19[6] = v20[6];
    v19[7] = v27;
    v28 = v20[9];
    v19[8] = v20[8];
    v19[9] = v28;
    *((_BYTE *)v19 + 80) = *((_BYTE *)v20 + 80);
    v29 = v21[11];
    v30 = (char *)v19 + v29;
    v37 = (char *)v20 + v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41(v30, v37, v6);
    v31 = v21[12];
    v32 = (char *)v19 + v31;
    v33 = (char *)v20 + v31;
    if (v40((uint64_t)v20 + v31, 1, v6))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v41(v32, v33, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v32, 0, 1, v6);
    }
    *(_QWORD *)((char *)v19 + v21[13]) = *(_QWORD *)((char *)v20 + v21[13]);
    v35 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v38 + 56);
    swift_bridgeObjectRetain();
    v35(v19, 0, 1, v21);
    a2 = v39;
    v18 = v42;
  }
  *(_QWORD *)(v18 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return v18;
}

char *assignWithCopy for ContactSuggestionProvidedClassification(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, int *);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  int v39;
  int v40;
  void (*v41)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v42;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(void *, const void *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v51 = a3;
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v46 = v8;
  v8(&a1[v9], &a2[v9], v6);
  v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v13 = v12[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v48 = v7;
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  LODWORD(v7) = v16(&v10[v13], 1, v6);
  v17 = v16(v15, 1, v6);
  if ((_DWORD)v7)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v14, v15, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v6);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v46(v14, v15, v6);
LABEL_7:
  v19 = v51;
  v10[v12[6]] = v11[v12[6]];
  v10[v12[7]] = v11[v12[7]];
  v20 = *(int *)(v51 + 24);
  v49 = a2;
  v50 = a1;
  v21 = (uint64_t)&a1[v20];
  v22 = (uint64_t)&a2[v20];
  v23 = (int *)type metadata accessor for EntityPromptClassification();
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_213DC7AA0(v21);
      goto LABEL_13;
    }
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
    *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
    *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
    v46((void *)(v21 + v23[11]), (const void *)(v22 + v23[11]), v6);
    v36 = v23[12];
    v37 = (void *)(v21 + v36);
    v38 = (char *)(v22 + v36);
    v39 = v16((char *)(v21 + v36), 1, v6);
    v40 = v16(v38, 1, v6);
    if (v39)
    {
      if (!v40)
      {
        (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v37, v38, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v37, 0, 1, v6);
LABEL_23:
        v35 = v49;
        v34 = v50;
        *(_QWORD *)(v21 + v23[13]) = *(_QWORD *)(v22 + v23[13]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v19 = v51;
        goto LABEL_24;
      }
    }
    else
    {
      if (!v40)
      {
        v46(v37, v38, v6);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v48 + 8))(v37, v6);
    }
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_23;
  }
  if (v27)
  {
LABEL_13:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
    memcpy((void *)v21, (const void *)v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v35 = v49;
    v34 = v50;
    goto LABEL_24;
  }
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v21 + 24) = *(_QWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v22 + 48);
  *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
  *(_QWORD *)(v21 + 64) = *(_QWORD *)(v22 + 64);
  *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
  *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
  v28 = v23[11];
  v45 = v22 + v28;
  v47 = v21 + v28;
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v47, v45, v6);
  v29 = v23[12];
  v30 = (void *)(v21 + v29);
  v31 = (const void *)(v22 + v29);
  if (v16((char *)(v22 + v29), 1, v6))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v44((uint64_t)v30, (uint64_t)v31, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v30, 0, 1, v6);
  }
  v35 = v49;
  *(_QWORD *)(v21 + v23[13]) = *(_QWORD *)(v22 + v23[13]);
  v41 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v24 + 56);
  swift_bridgeObjectRetain();
  v41(v21, 0, 1, v23);
  v34 = v50;
  v19 = v51;
LABEL_24:
  *(_QWORD *)&v34[*(int *)(v19 + 28)] = *(_QWORD *)&v35[*(int *)(v19 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t initializeWithTake for ContactSuggestionProvidedClassification(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *__dst;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v31 = a3;
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v8(a1 + v9, a2 + v9, v6);
  v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v13 = v12[5];
  v14 = (void *)(v10 + v13);
  v15 = (const void *)(v11 + v13);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v30(v11 + v13, 1, v6))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  *(_BYTE *)(v10 + v12[6]) = *(_BYTE *)(v11 + v12[6]);
  *(_BYTE *)(v10 + v12[7]) = *(_BYTE *)(v11 + v12[7]);
  v17 = v31;
  v18 = *(int *)(v31 + 24);
  v19 = (_OWORD *)(a1 + v18);
  v20 = (_OWORD *)(a2 + v18);
  v21 = (int *)type metadata accessor for EntityPromptClassification();
  v22 = *((_QWORD *)v21 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v20[1];
    *v19 = *v20;
    v19[1] = v24;
    *((_QWORD *)v19 + 4) = *((_QWORD *)v20 + 4);
    *(_OWORD *)((char *)v19 + 40) = *(_OWORD *)((char *)v20 + 40);
    *(_OWORD *)((char *)v19 + 56) = *(_OWORD *)((char *)v20 + 56);
    *((_QWORD *)v19 + 9) = *((_QWORD *)v20 + 9);
    *((_BYTE *)v19 + 80) = *((_BYTE *)v20 + 80);
    v8((uint64_t)v19 + v21[11], (uint64_t)v20 + v21[11], v6);
    v25 = v21[12];
    __dst = (char *)v19 + v25;
    v26 = (char *)v20 + v25;
    if (v30((uint64_t)v20 + v25, 1, v6))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v8((uint64_t)__dst, (uint64_t)v26, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(__dst, 0, 1, v6);
    }
    *(_QWORD *)((char *)v19 + v21[13]) = *(_QWORD *)((char *)v20 + v21[13]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
    v17 = v31;
  }
  *(_QWORD *)(a1 + *(int *)(v17 + 28)) = *(_QWORD *)(a2 + *(int *)(v17 + 28));
  return a1;
}

char *assignWithTake for ContactSuggestionProvidedClassification(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, int *);
  int v26;
  int v27;
  __int128 v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  int v41;
  int v42;
  uint64_t v43;
  void (*__dst)(void *, const void *, uint64_t);
  void *__dsta;
  uint64_t v47;
  char *v48;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v47 = a3;
  v48 = a2;
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  __dst = v8;
  v8(&a1[v9], &a2[v9], v6);
  v12 = (int *)type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v13 = v12[5];
  v14 = &v10[v13];
  v15 = &v11[v13];
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v17 = v16(&v10[v13], 1, v6);
  v18 = v16(v15, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v15, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  __dst(v14, v15, v6);
LABEL_7:
  v10[v12[6]] = v11[v12[6]];
  v10[v12[7]] = v11[v12[7]];
  v20 = *(int *)(v47 + 24);
  v21 = (uint64_t)&a1[v20];
  v22 = (uint64_t)&v48[v20];
  v23 = (int *)type metadata accessor for EntityPromptClassification();
  v24 = *((_QWORD *)v23 - 1);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_213DC7AA0(v21);
      goto LABEL_13;
    }
    v34 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = v34;
    swift_bridgeObjectRelease();
    v35 = *(_QWORD *)(v22 + 24);
    *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
    *(_QWORD *)(v21 + 24) = v35;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
    swift_bridgeObjectRelease();
    v36 = *(_QWORD *)(v22 + 48);
    *(_QWORD *)(v21 + 40) = *(_QWORD *)(v22 + 40);
    *(_QWORD *)(v21 + 48) = v36;
    swift_bridgeObjectRelease();
    v37 = *(_QWORD *)(v22 + 64);
    *(_QWORD *)(v21 + 56) = *(_QWORD *)(v22 + 56);
    *(_QWORD *)(v21 + 64) = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
    swift_bridgeObjectRelease();
    *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
    __dst((void *)(v21 + v23[11]), (const void *)(v22 + v23[11]), v6);
    v38 = v23[12];
    v39 = (void *)(v21 + v38);
    v40 = (char *)(v22 + v38);
    v41 = v16((char *)(v21 + v38), 1, v6);
    v42 = v16(v40, 1, v6);
    if (v41)
    {
      if (!v42)
      {
        (*(void (**)(void *, char *, uint64_t))(v7 + 32))(v39, v40, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v39, 0, 1, v6);
LABEL_23:
        *(_QWORD *)(v21 + v23[13]) = *(_QWORD *)(v22 + v23[13]);
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      if (!v42)
      {
        __dst(v39, v40, v6);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v7 + 8))(v39, v6);
    }
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_23;
  }
  if (v27)
  {
LABEL_13:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
    memcpy((void *)v21, (const void *)v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_24;
  }
  v28 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v28;
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(v22 + 32);
  *(_OWORD *)(v21 + 40) = *(_OWORD *)(v22 + 40);
  *(_OWORD *)(v21 + 56) = *(_OWORD *)(v22 + 56);
  *(_QWORD *)(v21 + 72) = *(_QWORD *)(v22 + 72);
  *(_BYTE *)(v21 + 80) = *(_BYTE *)(v22 + 80);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v29(v21 + v23[11], v22 + v23[11], v6);
  v30 = v23[12];
  __dsta = (void *)(v21 + v30);
  v31 = (const void *)(v22 + v30);
  if (v16((char *)(v22 + v30), 1, v6))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(__dsta, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v29((uint64_t)__dsta, (uint64_t)v31, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(__dsta, 0, 1, v6);
  }
  *(_QWORD *)(v21 + v23[13]) = *(_QWORD *)(v22 + v23[13]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
LABEL_24:
  *(_QWORD *)&a1[*(int *)(v47 + 28)] = *(_QWORD *)&v48[*(int *)(v47 + 28)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactSuggestionProvidedClassification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DF23B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactSuggestionProvidedClassification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213DF2490(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

void sub_213DF255C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PlusContactSuggestionRuntimeSummary(319);
    if (v1 <= 0x3F)
    {
      sub_213DF2608();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_213DF2608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F06C70)
  {
    type metadata accessor for EntityPromptClassification();
    v0 = sub_213EF2D6C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F06C70);
  }
}

uint64_t static EntityNodeComparison.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24))
    return (*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32) ^ 1) & 1;
  else
    return 0;
}

uint64_t EntityNodeComparison.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t EntityNodeComparison.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213DF26B4()
{
  uint64_t result;

  type metadata accessor for EntityNodeComparator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BBB8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3BAE0 = 91;
  *(_QWORD *)algn_254D3BAE8 = 0xE100000000000000;
  return result;
}

uint64_t EntityNodeComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 32) = a1;
  *(double *)(result + 16) = a3;
  *(_BYTE *)(result + 24) = a2;
  return result;
}

uint64_t EntityNodeComparator.init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a1;
  *(double *)(v3 + 16) = a3;
  *(_BYTE *)(v3 + 24) = a2;
  return v3;
}

unint64_t sub_213DF279C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  type metadata accessor for FeaturisedTurn(0);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_213DAE9A8(v3);
  result = swift_bridgeObjectRelease();
  if (v4)
  {
    v6 = swift_bridgeObjectRetain();
    v7 = sub_213DAE9A8(v6);
    swift_bridgeObjectRelease();
    if (v7)
    {
      v8 = *(_QWORD *)(v1 + 32);
      swift_bridgeObjectRetain();
      v9 = sub_213DDDEB8(v4);
      swift_bridgeObjectRelease();
      v10 = sub_213DF2A68(v9, v8, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213DF2BF4);
      swift_bridgeObjectRelease();
      v11 = sub_213DDDEB8(v7);
      swift_bridgeObjectRelease();
      v12 = sub_213DF2A68(v11, v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213DF2BF4);
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v12 + 16);
      result = swift_release();
      if (v13 == 1)
      {
        result = sub_213DF55DC();
        if ((v14 & 1) == 0)
        {
          v15 = result;
          v16 = *(_QWORD *)(v1 + 16);
          v17 = *(_BYTE *)(v1 + 24);
          v18 = type metadata accessor for EntityNodeComparison();
          v19 = swift_allocObject();
          *(_QWORD *)(v19 + 16) = v15;
          *(_QWORD *)(v19 + 24) = v16;
          *(_BYTE *)(v19 + 32) = v17;
          *(_QWORD *)(a1 + 24) = v18;
          result = sub_213DF58A0();
          *(_QWORD *)(a1 + 32) = result;
          *(_QWORD *)a1 = v19;
          return result;
        }
      }
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
  }
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t EntityNodeComparator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EntityNodeComparator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_213DF2964@<X0>(uint64_t a1@<X8>)
{
  return sub_213DF279C(a1);
}

uint64_t sub_213DF2984(uint64_t a1, uint64_t a2)
{
  return sub_213DF2A68(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213DF2BF4);
}

uint64_t sub_213DF29D0(uint64_t a1, uint64_t a2)
{
  return sub_213DF2A68(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213DF3130);
}

uint64_t sub_213DF2A1C(uint64_t a1, uint64_t a2)
{
  return sub_213DF2A68(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_213DF3C6C);
}

uint64_t sub_213DF2A68(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a2 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x2199C53C4](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_213DF2BF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_213EF32F4();
        swift_bridgeObjectRetain();
        sub_213EF28BC();
        v20 = sub_213EF3330();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_213EF3234() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_213EF3234() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    v47 = sub_213EF3330();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_213EF3234() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_213DF45F0(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_213EF3234() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_213DF3130(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v23;
  int64_t v25;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v13 = *(_QWORD *)(a3 + 56);
    v14 = 1 << *(_BYTE *)(a3 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v23 = (unint64_t)(v14 + 63) >> 6;
    if ((v15 & v13) != 0)
    {
      v16 = __clz(__rbit64(v15 & v13));
    }
    else
    {
      if ((unint64_t)(v14 + 63) >> 6 <= 1)
        goto LABEL_40;
      v17 = *(_QWORD *)(a3 + 64);
      v18 = 1;
      if (!v17)
      {
        v18 = 2;
        if ((unint64_t)(v14 + 63) >> 6 <= 2)
          goto LABEL_40;
        v17 = *(_QWORD *)(a3 + 72);
        if (!v17)
        {
          v18 = 3;
          if ((unint64_t)(v14 + 63) >> 6 <= 3)
            goto LABEL_40;
          v17 = *(_QWORD *)(a3 + 80);
          if (!v17)
          {
            v19 = 4;
            if (v23 <= 4)
              goto LABEL_40;
            v17 = *(_QWORD *)(a3 + 88);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v18 >= v23)
                  goto LABEL_40;
                v17 = *(_QWORD *)(a3 + 56 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_38;
              }
            }
            v18 = 4;
          }
        }
      }
LABEL_38:
      v16 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v16);
    sub_213EF32F4();
    __asm { BR              X8 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v25 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_20;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_40;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
      goto LABEL_19;
    v10 = 3;
    if ((unint64_t)(v6 + 63) >> 6 <= 3)
      goto LABEL_40;
    v9 = *(_QWORD *)(a4 + 80);
    if (v9)
    {
LABEL_19:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
      v12 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v8);
      sub_213EF32F4();
      __asm { BR              X8 }
    }
    v11 = 4;
    if (v25 > 4)
    {
      v9 = *(_QWORD *)(a4 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_19;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v25)
          goto LABEL_40;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_19;
      }
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x213DF3BACLL);
    }
  }
LABEL_40:
  swift_retain();
  return sub_213DF4884(a1, a2, 0, a3);
}

uint64_t sub_213DF3C6C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v23;
  int64_t v25;

  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v13 = *(_QWORD *)(a3 + 56);
    v14 = 1 << *(_BYTE *)(a3 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v23 = (unint64_t)(v14 + 63) >> 6;
    if ((v15 & v13) != 0)
    {
      v16 = __clz(__rbit64(v15 & v13));
    }
    else
    {
      if ((unint64_t)(v14 + 63) >> 6 <= 1)
        goto LABEL_40;
      v17 = *(_QWORD *)(a3 + 64);
      v18 = 1;
      if (!v17)
      {
        v18 = 2;
        if ((unint64_t)(v14 + 63) >> 6 <= 2)
          goto LABEL_40;
        v17 = *(_QWORD *)(a3 + 72);
        if (!v17)
        {
          v18 = 3;
          if ((unint64_t)(v14 + 63) >> 6 <= 3)
            goto LABEL_40;
          v17 = *(_QWORD *)(a3 + 80);
          if (!v17)
          {
            v19 = 4;
            if (v23 <= 4)
              goto LABEL_40;
            v17 = *(_QWORD *)(a3 + 88);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v18 >= v23)
                  goto LABEL_40;
                v17 = *(_QWORD *)(a3 + 56 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_38;
              }
            }
            v18 = 4;
          }
        }
      }
LABEL_38:
      v16 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 48) + v16);
    sub_213EF32F4();
    __asm { BR              X8 }
  }
  v5 = *(_QWORD *)(a4 + 56);
  v6 = 1 << *(_BYTE *)(a4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v25 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0)
  {
    v8 = __clz(__rbit64(v7 & v5));
    goto LABEL_20;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = *(_QWORD *)(a4 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if ((unint64_t)(v6 + 63) >> 6 <= 2)
      goto LABEL_40;
    v9 = *(_QWORD *)(a4 + 72);
    if (v9)
      goto LABEL_19;
    v10 = 3;
    if ((unint64_t)(v6 + 63) >> 6 <= 3)
      goto LABEL_40;
    v9 = *(_QWORD *)(a4 + 80);
    if (v9)
    {
LABEL_19:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
      v12 = *(unsigned __int8 *)(*(_QWORD *)(a4 + 48) + v8);
      sub_213EF32F4();
      __asm { BR              X8 }
    }
    v11 = 4;
    if (v25 > 4)
    {
      v9 = *(_QWORD *)(a4 + 88);
      if (v9)
      {
        v10 = 4;
        goto LABEL_19;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v10 >= v25)
          goto LABEL_40;
        v9 = *(_QWORD *)(a4 + 56 + 8 * v10);
        ++v11;
        if (v9)
          goto LABEL_19;
      }
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x213DF4578);
    }
  }
LABEL_40:
  swift_retain();
  return sub_213DF4C14(a1, a2, 0, a3);
}

uint64_t sub_213DF45F0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA0);
  result = sub_213EF2EA4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    result = sub_213EF3330();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_213DF4884(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x24BEE4B08];
    goto LABEL_23;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B208);
    v7 = sub_213EF2EA4();
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      goto LABEL_22;
    }
    if (a2 > 1)
    {
      v10 = a1[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (a2 > 2)
      {
        v10 = a1[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (a2 > 3)
        {
          v10 = a1[3];
          if (!v10)
          {
            v12 = 4;
            if (a2 > 4)
            {
              v10 = a1[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x213DF4BF4);
                }
                if (v11 >= a2)
                  break;
                v10 = a1[v11];
                ++v12;
                if (v10)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
          v13 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v9);
          sub_213EF32F4();
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    swift_release();
    return v7;
  }
  return v4;
}

uint64_t sub_213DF4C14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x24BEE4B08];
    goto LABEL_23;
  }
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B210);
    v7 = sub_213EF2EA4();
    if (a2 < 1)
      v8 = 0;
    else
      v8 = *a1;
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      goto LABEL_22;
    }
    if (a2 > 1)
    {
      v10 = a1[1];
      v11 = 1;
      if (v10)
        goto LABEL_21;
      v11 = 2;
      if (a2 > 2)
      {
        v10 = a1[2];
        if (v10)
          goto LABEL_21;
        v11 = 3;
        if (a2 > 3)
        {
          v10 = a1[3];
          if (!v10)
          {
            v12 = 4;
            if (a2 > 4)
            {
              v10 = a1[4];
              if (v10)
              {
                v11 = 4;
                goto LABEL_21;
              }
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  JUMPOUT(0x213DF4F28);
                }
                if (v11 >= a2)
                  break;
                v10 = a1[v11];
                ++v12;
                if (v10)
                  goto LABEL_21;
              }
            }
            goto LABEL_23;
          }
LABEL_21:
          v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
          v13 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v9);
          sub_213EF32F4();
          __asm { BR              X8 }
        }
      }
    }
LABEL_23:
    swift_release();
    return v7;
  }
  return v4;
}

uint64_t sub_213DF4F3C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;

  v4 = a4;
  if (!a3)
  {
    v7 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v7;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B230);
  result = sub_213EF2EA4();
  v7 = result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 56;
  v35 = v4;
  while (1)
  {
    if (v8)
    {
      v36 = (v8 - 1) & v8;
      v37 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v12 >= a2)
      goto LABEL_36;
    v13 = a1[v12];
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= a2)
        goto LABEL_36;
      v13 = a1[v14];
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= a2)
          goto LABEL_36;
        v13 = a1[v14];
        if (!v13)
          break;
      }
    }
LABEL_23:
    v36 = (v13 - 1) & v13;
    v37 = v14;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_24:
    v16 = *(_QWORD *)(v4 + 48) + 56 * v11;
    v17 = *(_QWORD *)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v22 = *(_QWORD *)(v16 + 32);
    v21 = *(_QWORD *)(v16 + 40);
    v38 = *(_BYTE *)(v16 + 49);
    v39 = *(_BYTE *)(v16 + 48);
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    sub_213DB8518(v19, v20);
    sub_213EF28BC();
    result = sub_213EF3330();
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = *(_QWORD *)(v7 + 48) + 56 * v26;
    *(_QWORD *)v31 = v17;
    *(_QWORD *)(v31 + 8) = v18;
    *(_QWORD *)(v31 + 16) = v19;
    *(_QWORD *)(v31 + 24) = v20;
    *(_QWORD *)(v31 + 32) = v22;
    *(_QWORD *)(v31 + 40) = v21;
    *(_BYTE *)(v31 + 48) = v39;
    *(_BYTE *)(v31 + 49) = v38;
    ++*(_QWORD *)(v7 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v35;
    v8 = v36;
    v9 = v37;
    if (!v5)
      goto LABEL_36;
  }
  v15 = v9 + 4;
  if (v9 + 4 >= a2)
    goto LABEL_36;
  v13 = a1[v15];
  if (v13)
  {
    v14 = v9 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= a2)
      goto LABEL_36;
    v13 = a1[v14];
    ++v15;
    if (v13)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_213DF5238(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B220);
  result = sub_213EF2EA4();
  v9 = result;
  v35 = a1;
  v36 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v37 = v11;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v36)
      goto LABEL_36;
    v16 = v35[v15];
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v36)
        goto LABEL_36;
      v16 = v35[v17];
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v36)
          goto LABEL_36;
        v16 = v35[v17];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v37 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    v19 = v4;
    v20 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * v14);
    v21 = *v20;
    v22 = v20[1];
    v23 = v20[2];
    v24 = v20[3];
    sub_213EF32F4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213EF28BC();
    result = sub_213EF3330();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v28 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v27 == v30;
        if (v27 == v30)
          v27 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v32 == -1);
      v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    v33 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 32 * v28);
    *v33 = v21;
    v33[1] = v22;
    v33[2] = v23;
    v33[3] = v24;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v19;
    v11 = v37;
    if (!v5)
      goto LABEL_36;
  }
  v18 = v11 + 4;
  if (v11 + 4 >= v36)
    goto LABEL_36;
  v16 = v35[v18];
  if (v16)
  {
    v17 = v11 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v36)
      goto LABEL_36;
    v16 = v35[v17];
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_213DF54DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_213DAF214(v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_213DAFDB8(a1, (uint64_t)v4);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease();
  sub_213DAFDB8(a1, (uint64_t)v4);
  if (!v7)
  {
LABEL_6:
    v9 = 0;
    goto LABEL_7;
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_213DAEB3C(v8);
  swift_bridgeObjectRelease();
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRelease();
    v9 = v10 != 0;
  }
LABEL_7:
  sub_213DAFE88((uint64_t)v4);
  return v9;
}

uint64_t sub_213DF55DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  Swift::Double_optional v17;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAF214(v0);
  swift_bridgeObjectRelease();
  if (v1)
  {
    if (*(_QWORD *)(v1 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2 = swift_bridgeObjectRetain();
      v3 = (_QWORD *)sub_213DAF214(v2);
      swift_bridgeObjectRelease();
      if (v3)
      {
        if (v3[2])
        {
          v4 = v3[4];
          v5 = (void *)v3[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v6._countAndFlagsBits = v4;
          v6._object = v5;
          v17 = String.scoreRatcliffObershelp(between:)(v6);
          v7 = *(_QWORD *)&v17.is_nil;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7;
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v8 = sub_213EF2724();
  __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
  v9 = sub_213EF270C();
  v10 = sub_213EF2CA0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136315138;
    if (qword_254D39FB0 != -1)
      swift_once();
    v13 = qword_254D3BAE0;
    v14 = *(_QWORD *)algn_254D3BAE8;
    swift_bridgeObjectRetain();
    sub_213DB0570(v13, v14, &v16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v9, v10, "%s No match for USOPerson found in turns", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v12, -1, -1);
    MEMORY[0x2199C53C4](v11, -1, -1);

    return 0;
  }
  else
  {

    return 0;
  }
}

uint64_t type metadata accessor for EntityNodeComparison()
{
  return objc_opt_self();
}

unint64_t sub_213DF58A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3BAF0;
  if (!qword_254D3BAF0)
  {
    v1 = type metadata accessor for EntityNodeComparison();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ThresholdedTurnComparison, v1);
    atomic_store(result, (unint64_t *)&qword_254D3BAF0);
  }
  return result;
}

uint64_t type metadata accessor for EntityNodeComparator()
{
  return objc_opt_self();
}

uint64_t method lookup function for EntityNodeComparator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EntityNodeComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of EntityNodeComparator.turnMeetsFeatureFilterCriteria(turn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of EntityNodeComparator.compareTurns(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t SELFPlusSuggestionIdMapper.__allocating_init(picsIds:)(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = swift_allocObject();
  v3 = sub_213DCB2D8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return v2;
}

uint64_t SELFPlusSuggestionIdMapper.init(picsIds:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = sub_213DCB2D8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  return v1;
}

uint64_t SELFPlusSuggestionIdMapper.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SELFPlusSuggestionIdMapper.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SELFPlusSuggestionIdMapper()
{
  return objc_opt_self();
}

uint64_t method lookup function for SELFPlusSuggestionIdMapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SELFPlusSuggestionIdMapper.__allocating_init(picsIds:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_213DF5A28(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _BYTE v19[8];
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  __int16 v23;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v16 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v7)
      return swift_release();
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v2;
    if (!v17)
    {
      v2 = v16 + 1;
      if (v16 + 1 >= v7)
        return swift_release();
      v17 = *(_QWORD *)(v3 + 8 * v2);
      if (!v17)
      {
        v2 = v16 + 2;
        if (v16 + 2 >= v7)
          return swift_release();
        v17 = *(_QWORD *)(v3 + 8 * v2);
        if (!v17)
        {
          v2 = v16 + 3;
          if (v16 + 3 >= v7)
            return swift_release();
          v17 = *(_QWORD *)(v3 + 8 * v2);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v17 - 1) & v17;
    v9 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 56 * v9;
    v12 = *(_OWORD *)(v10 + 16);
    v11 = *(_OWORD *)(v10 + 32);
    v13 = *(_OWORD *)v10;
    v23 = *(_WORD *)(v10 + 48);
    v22[1] = v12;
    v22[2] = v11;
    v22[0] = v13;
    sub_213DDF850((uint64_t)v22);
    sub_213DD6684((uint64_t)v19, (uint64_t)v22);
    v14 = v20;
    v15 = v21;
    swift_bridgeObjectRelease();
    result = sub_213DB859C(v14, v15);
  }
  v18 = v16 + 4;
  if (v18 >= v7)
    return swift_release();
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v2 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v17 = *(_QWORD *)(v3 + 8 * v2);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_213DF5BD0(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  char v13;

  v2 = 0;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_213DD62CC((uint64_t)&v13, *(_BYTE *)(*(_QWORD *)(a1 + 48) + v9));
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_213DF5D18()
{
  uint64_t result;

  type metadata accessor for PlusContactSuggestionGenerator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BCE0);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3BBC0 = 91;
  *(_QWORD *)algn_254D3BBC8 = 0xE100000000000000;
  return result;
}

double PlusContactSuggestionGenerator.__allocating_init()()
{
  id v0;
  uint64_t v1;
  double result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  type metadata accessor for PlusContactSuggestionGenerator();
  v1 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v1 + 24) = xmmword_213EF7580;
  *(_QWORD *)(v1 + 16) = v0;
  return result;
}

double PlusContactSuggestionGenerator.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v2;
  double result;

  v2 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v2 + 24) = xmmword_213EF7580;
  *(_QWORD *)(v2 + 16) = a1;
  return result;
}

uint64_t type metadata accessor for PlusContactSuggestionGenerator()
{
  return objc_opt_self();
}

uint64_t PlusContactSuggestionGenerator.init(store:)(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(v1 + 24) = xmmword_213EF7580;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_213DF5E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17[3];
  _BYTE v18[48];

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a1 + 32;
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DAFDFC(v5, (uint64_t)v18);
      sub_213DAFDFC((uint64_t)v18, (uint64_t)v17);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06AD8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A818);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v15 = 0u;
        v16 = 0u;
        v14 = 0u;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      if (*((_QWORD *)&v15 + 1))
      {
        sub_213DE638C(&v14, v17);
        sub_213DE638C(v17, &v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_213DB6824(0, v6[2] + 1, 1, v6);
        v8 = v6[2];
        v7 = v6[3];
        if (v8 >= v7 >> 1)
          v6 = sub_213DB6824((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
        v6[2] = v8 + 1;
        sub_213DE638C(&v14, &v6[6 * v8 + 4]);
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v14, &qword_254D3BBD0);
      }
      v5 += 40;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v2 = v13;
  }
  else
  {
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = sub_213DF7E28((uint64_t)v6, a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = sub_213DF87CC(v9);
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  v11 = sub_213DF8474(v10, v2, a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_213DF6090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  Swift::String_optional v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  os_log_type_t v37;
  const char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  unint64_t v68;
  char v70;
  os_log_type_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t i;
  uint64_t v76;
  os_log_type_t v77;
  uint64_t v78;
  unint64_t v79;
  os_log_type_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, char *, uint64_t);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  int *v123;
  uint64_t *v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t);
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  int *v141;
  unint64_t v142;
  uint64_t v143;
  __int128 v144[3];
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  v136 = a3;
  v143 = a2;
  v6 = type metadata accessor for PlusContactSuggestion();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_213EF1CF8();
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135);
  v133 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_213EF1D64();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v137 = (char *)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v128 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v138 = (char *)&v128 - v18;
  v19 = UsoEntity_common_Person.convertUSOPersonToString()();
  if (!v19.value._object)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v30 = sub_213EF2724();
    __swift_project_value_buffer(v30, (uint64_t)qword_253F08A00);
    v31 = sub_213EF270C();
    v32 = sub_213EF2CA0();
    if (!os_log_type_enabled(v31, v32))
      goto LABEL_38;
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    *(_QWORD *)&v145 = v34;
    *(_DWORD *)v33 = 136315138;
    if (qword_254D39FB8 != -1)
      swift_once();
    v35 = qword_254D3BBC0;
    v36 = *(_QWORD *)algn_254D3BBC8;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v144[0] = sub_213DB0570(v35, v36, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v37 = v32;
    v38 = "%s Failed to convert contact query to string. Unable to generate PICS for non string convertible cases.";
    goto LABEL_37;
  }
  v139 = v7;
  v140 = a4;
  v141 = (int *)v6;
  if (qword_253F04A88 != -1)
    swift_once();
  v128 = v17;
  v129 = v12;
  v130 = v11;
  v131 = v9;
  v132 = a1;
  v20 = sub_213EF2724();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
  v22 = v143;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v142 = v21;
  v23 = sub_213EF270C();
  v24 = sub_213EF2C94();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_QWORD *)&v145 = v26;
    *(_DWORD *)v25 = 136315650;
    if (qword_254D39FB8 != -1)
      swift_once();
    v27 = qword_254D3BBC0;
    v28 = *(_QWORD *)algn_254D3BBC8;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v144[0] = sub_213DB0570(v27, v28, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2048;
    v22 = v143;
    v29 = *(_QWORD *)(v143 + 16);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v144[0] = v29;
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v144[0] = sub_213DB0570(v19.value._countAndFlagsBits, (unint64_t)v19.value._object, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213DAB000, v23, v24, "%s Reviewing %ld Ground truth events related to query %s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v26, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v39 = sub_213DF7F84(v22);
  swift_bridgeObjectRetain_n();
  v40 = sub_213EF270C();
  v41 = sub_213EF2C94();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v43 = swift_slowAlloc();
    *(_QWORD *)&v145 = v43;
    *(_DWORD *)v42 = 136315650;
    if (qword_254D39FB8 != -1)
      swift_once();
    v44 = qword_254D3BBC0;
    v45 = *(_QWORD *)algn_254D3BBC8;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v144[0] = sub_213DB0570(v44, v45, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2048;
    *(_QWORD *)&v144[0] = *(_QWORD *)(v39 + 16);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 22) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BCD8);
    v46 = sub_213EF2778();
    v48 = v47;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v144[0] = sub_213DB0570(v46, v48, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v40, v41, "%s Found %ld potential contact mappings based on supplied ground truth. Ground Truth Summary=%s", (uint8_t *)v42, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v43, -1, -1);
    MEMORY[0x2199C53C4](v42, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v49 = sub_213DF7A7C(v39);
  swift_bridgeObjectRelease();
  swift_retain();
  v50 = sub_213EF270C();
  v51 = sub_213EF2C94();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    *(_QWORD *)&v145 = v53;
    *(_DWORD *)v52 = 136315394;
    if (qword_254D39FB8 != -1)
      swift_once();
    v54 = qword_254D3BBC0;
    v55 = *(_QWORD *)algn_254D3BBC8;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v144[0] = sub_213DB0570(v54, v55, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2048;
    *(_QWORD *)&v144[0] = v49[2];
    sub_213EF2D9C();
    swift_release();
    _os_log_impl(&dword_213DAB000, v50, v51, "%s Found %ld contact mapping with positive signals", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v53, -1, -1);
    MEMORY[0x2199C53C4](v52, -1, -1);

  }
  else
  {

    swift_release();
  }
  v56 = sub_213EDF3B0((uint64_t)v49);
  if (!v57)
  {
    swift_release();
LABEL_33:
    v31 = sub_213EF270C();
    v65 = sub_213EF2C94();
    v66 = os_log_type_enabled(v31, v65);
    a4 = v140;
    v6 = (uint64_t)v141;
    v7 = v139;
    if (!v66)
    {
LABEL_38:

      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a4, 1, 1, v6);
    }
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    *(_QWORD *)&v145 = v34;
    *(_DWORD *)v33 = 136315138;
    if (qword_254D39FB8 != -1)
      swift_once();
    v67 = qword_254D3BBC0;
    v68 = *(_QWORD *)algn_254D3BBC8;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v144[0] = sub_213DB0570(v67, v68, (uint64_t *)&v145);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v37 = v65;
    v38 = "%s Skipping PICS generation as not all ground truth maps to the same contact";
LABEL_37:
    _os_log_impl(&dword_213DAB000, v31, v37, v38, v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v34, -1, -1);
    MEMORY[0x2199C53C4](v33, -1, -1);
    goto LABEL_38;
  }
  v59 = (uint64_t)v56;
  v60 = v57;
  v61 = v58;
  v62 = v49[2];
  swift_release();
  if (v62 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  swift_bridgeObjectRetain_n();
  v63 = sub_213DF7674();
  if (v64)
  {
    if ((void *)v59 == v63 && v60 == v64)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_43;
    }
    v70 = sub_213EF3234();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v70 & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v31 = sub_213EF270C();
      v71 = sub_213EF2C94();
      if (os_log_type_enabled(v31, v71))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        *(_QWORD *)&v145 = v34;
        *(_DWORD *)v33 = 136315138;
        a4 = v140;
        v6 = (uint64_t)v141;
        v7 = v139;
        if (qword_254D39FB8 != -1)
          swift_once();
        v72 = qword_254D3BBC0;
        v73 = *(_QWORD *)algn_254D3BBC8;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v144[0] = sub_213DB0570(v72, v73, (uint64_t *)&v145);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v37 = v71;
        v38 = "%s Skipping PICS generation as resolved contact is meCard";
        goto LABEL_37;
      }
LABEL_62:

      a4 = v140;
      v6 = (uint64_t)v141;
      v7 = v139;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a4, 1, 1, v6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v74 = *(_QWORD *)(v61 + 16);
  if (!v74)
  {
LABEL_54:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v31 = sub_213EF270C();
    v77 = sub_213EF2C94();
    if (os_log_type_enabled(v31, v77))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_QWORD *)&v145 = v34;
      *(_DWORD *)v33 = 136315138;
      a4 = v140;
      v6 = (uint64_t)v141;
      v7 = v139;
      if (qword_254D39FB8 != -1)
        swift_once();
      v78 = qword_254D3BBC0;
      v79 = *(_QWORD *)algn_254D3BBC8;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v144[0] = sub_213DB0570(v78, v79, (uint64_t *)&v145);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v37 = v77;
      v38 = "%s Skipping PICS generation as mapping has no strong positive signals.";
      goto LABEL_37;
    }
    goto LABEL_62;
  }
  for (i = 0; i != v74; ++i)
  {
    if (*(_BYTE *)(v61 + i + 32) == 6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v31 = sub_213EF270C();
      v80 = sub_213EF2C94();
      if (os_log_type_enabled(v31, v80))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v34 = swift_slowAlloc();
        *(_QWORD *)&v145 = v34;
        *(_DWORD *)v33 = 136315138;
        a4 = v140;
        v6 = (uint64_t)v141;
        v7 = v139;
        if (qword_254D39FB8 != -1)
          swift_once();
        v81 = qword_254D3BBC0;
        v82 = *(_QWORD *)algn_254D3BBC8;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v144[0] = sub_213DB0570(v81, v82, (uint64_t *)&v145);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        v37 = v80;
        v38 = "%s Skipping PICS generation as negative signals exist for the only provided contact mapping.";
        goto LABEL_37;
      }
      goto LABEL_62;
    }
  }
  v76 = 0;
  while (*(_BYTE *)(v61 + v76 + 32) != 3)
  {
    if (v74 == ++v76)
      goto LABEL_54;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v83 = *(_QWORD *)(v143 + 16);
  v84 = MEMORY[0x24BEE4AF8];
  if (v83)
  {
    v142 = 0;
    v85 = v59;
    v86 = (_QWORD *)(v143 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v87 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v88 = v83;
    while (1)
    {
      v89 = v86[3];
      v90 = v86[4];
      __swift_project_boxed_opaque_existential_1(v86, v89);
      v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 32))(v89, v90);
      if (*(_QWORD *)(v91 + 16))
      {
        swift_bridgeObjectRetain();
        v92 = sub_213DFA220(v85, v60);
        if ((v93 & 1) != 0)
        {
          v94 = *(_QWORD *)(*(_QWORD *)(v91 + 56) + 8 * v92);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v87 = sub_213DB6A74(0, v87[2] + 1, 1, v87);
          v96 = v87[2];
          v95 = v87[3];
          if (v96 >= v95 >> 1)
            v87 = sub_213DB6A74((_QWORD *)(v95 > 1), v96 + 1, 1, v87);
          v87[2] = v96 + 1;
          v87[v96 + 4] = v94;
          goto LABEL_67;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
LABEL_67:
      v86 += 6;
      if (!--v88)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v59 = v85;
        v84 = MEMORY[0x24BEE4AF8];
        goto LABEL_77;
      }
    }
  }
  v87 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_77:
  *(_QWORD *)&v145 = MEMORY[0x24BEE4B08];
  v97 = v87[2];
  if (v97)
  {
    v98 = v87 + 4;
    do
    {
      ++v98;
      v99 = swift_bridgeObjectRetain();
      sub_213DF5BD0(v99);
      --v97;
    }
    while (v97);
  }
  swift_bridgeObjectRelease();
  v100 = sub_213ECE3E0((uint64_t)&unk_24D0FFB48, v145);
  sub_213EF1D58();
  v148 = v84;
  v101 = v143;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v83)
  {
    v142 = v100;
    v102 = v101 + 32;
    v103 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_213DE63A4(v102, (uint64_t)&v145);
      v104 = v146;
      v105 = v147;
      __swift_project_boxed_opaque_existential_1(&v145, v146);
      if (*(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v105 + 16))(v104, v105) + 16))
      {
        swift_bridgeObjectRetain();
        sub_213DFA220(v59, v60);
        v107 = v106;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v107 & 1) != 0)
        {
          sub_213DE638C(&v145, v144);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_213DCD3E8(0, *(_QWORD *)(v103 + 16) + 1, 1);
          v103 = v148;
          v109 = *(_QWORD *)(v148 + 16);
          v108 = *(_QWORD *)(v148 + 24);
          if (v109 >= v108 >> 1)
          {
            sub_213DCD3E8(v108 > 1, v109 + 1, 1);
            v103 = v148;
          }
          *(_QWORD *)(v103 + 16) = v109 + 1;
          sub_213DE638C(v144, (_OWORD *)(v103 + 48 * v109 + 32));
          goto LABEL_84;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v145);
LABEL_84:
      v102 += 48;
      if (!--v83)
      {
        v84 = v148;
        v100 = v142;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v110 = sub_213EC5F7C(v84);
  swift_release();
  v111 = v136;
  swift_bridgeObjectRetain();
  v143 = sub_213ECD040(v100, v111);
  v112 = v133;
  sub_213EF1CEC();
  sub_213EF1CD4();
  v114 = v113;
  (*(void (**)(char *, uint64_t))(v134 + 8))(v112, v135);
  swift_bridgeObjectRetain();
  v115 = v132;
  swift_retain();
  v142 = sub_213E7E3DC(v110, v59, v60, 0, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v116 = v129;
  v117 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
  v118 = v128;
  v119 = v130;
  v117(v128, v138, v130);
  v120 = v59;
  v121 = v137;
  v117(v137, v118, v119);
  v122 = (uint64_t)v131;
  v117(v131, v121, v119);
  v123 = v141;
  *(_QWORD *)(v122 + v141[5]) = v115;
  swift_retain();
  swift_bridgeObjectRelease();
  v124 = (uint64_t *)(v122 + v123[6]);
  *v124 = v120;
  v124[1] = v60;
  v124[2] = 0;
  v124[3] = 0;
  *(_QWORD *)(v122 + v123[7]) = sub_213E7B1FC(50, v142);
  *(_QWORD *)(v122 + v123[8]) = v114;
  *(_QWORD *)(v122 + v123[9]) = v143;
  *(_QWORD *)(v122 + v123[10]) = 0;
  v125 = sub_213E7B500(50, MEMORY[0x24BEE4AF8]);
  swift_release();
  v126 = *(void (**)(char *, uint64_t))(v116 + 8);
  v126(v121, v119);
  *(_QWORD *)(v122 + v123[11]) = v125;
  v127 = v140;
  sub_213DF8B18(v122, v140);
  v126(v118, v119);
  v126(v138, v119);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v139 + 56))(v127, 0, 1, v123);
}

Swift::String_optional __swiftcall UsoEntity_common_Person.convertUSOPersonToString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  Swift::String_optional result;

  v0 = sub_213EF2880();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_213EF1A10();
  MEMORY[0x24BDAC7A8](v1);
  sub_213EF1A40();
  swift_allocObject();
  sub_213EF1A34();
  sub_213EF1A04();
  sub_213EF1A1C();
  sub_213EF1E30();
  sub_213DF8AA4(&qword_254D3BBD8, MEMORY[0x24BE9F778]);
  v2 = sub_213EF1A28();
  v4 = v3;
  sub_213EF2874();
  v5 = sub_213EF2868();
  v7 = v6;
  sub_213DF8A28(v2, v4);
  swift_release();
  v8 = v5;
  v9 = v7;
  result.value._object = v9;
  result.value._countAndFlagsBits = v8;
  return result;
}

void *sub_213DF7674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = (void *)v2;
  if (v3 == 1)
  {
    v5 = sub_213E1E5F8();
    v4 = v5;
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_identifier);

      v4 = (void *)sub_213EF2850();
      v8 = v7;

    }
    else
    {
      v8 = 0;
    }
    v9 = *(_QWORD *)(v1 + 24);
    v10 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 24) = v4;
    *(_QWORD *)(v1 + 32) = v8;
    swift_bridgeObjectRetain();
    sub_213DF8A6C(v9, v10);
  }
  sub_213DF8B04(v2, v3);
  return v4;
}

uint64_t PlusContactSuggestionGenerator.deinit()
{
  uint64_t v0;

  sub_213DF8A6C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t PlusContactSuggestionGenerator.__deallocating_deinit()
{
  uint64_t v0;

  sub_213DF8A6C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t UsoEntity_common_Person.description.getter()
{
  uint64_t result;
  Swift::String_optional v1;

  v1 = UsoEntity_common_Person.convertUSOPersonToString()();
  result = v1.value._countAndFlagsBits;
  if (!v1.value._object)
    return 0x6E776F6E6B6E553CLL;
  return result;
}

uint64_t UsoEntity_common_Person.hash(into:)()
{
  if (!(unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    return sub_213EF330C();
  sub_213EF330C();
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t UsoEntity_common_Person.hashValue.getter()
{
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  return sub_213EF3330();
}

uint64_t sub_213DF78B4()
{
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  return sub_213EF3330();
}

uint64_t sub_213DF7938()
{
  if (!(unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
    return sub_213EF330C();
  sub_213EF330C();
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213DF79AC()
{
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  return sub_213EF3330();
}

uint64_t sub_213DF7A2C()
{
  uint64_t result;
  Swift::String_optional v1;

  v1 = UsoEntity_common_Person.convertUSOPersonToString()();
  result = v1.value._countAndFlagsBits;
  if (!v1.value._object)
    return 0x6E776F6E6B6E553CLL;
  return result;
}

BOOL sub_213DF7A70()
{
  return _s12SiriOntology23UsoEntity_common_PersonC0A24PrivateLearningInferenceE2eeoiySbAC_ACtFZ_0();
}

unint64_t *sub_213DF7A7C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t *v6;
  void *v7;
  _QWORD v9[2];

  v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_213DF7BCC((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_213DF7BCC((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x2199C53C4](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_213DF7BCC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_21;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v14 >= v10)
      return (unint64_t *)sub_213DC46E4(result, a2, v4, a3);
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        return (unint64_t *)sub_213DC46E4(result, a2, v4, a3);
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          return (unint64_t *)sub_213DC46E4(result, a2, v4, a3);
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_21:
    v17 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v13);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (unsigned __int8 *)(v17 + 32);
      while (1)
      {
        v20 = *v19++;
        if ((v20 - 3) < 2)
          break;
        if (!--v18)
          goto LABEL_5;
      }
      *(unint64_t *)((char *)result + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v4++, 1))
        goto LABEL_28;
    }
  }
  v16 = v14 + 3;
  if (v16 >= v10)
    return (unint64_t *)sub_213DC46E4(result, a2, v4, a3);
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_213DC46E4(result, a2, v4, a3);
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

BOOL _s12SiriOntology23UsoEntity_common_PersonC0A24PrivateLearningInferenceE2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;

  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v0 = sub_213EF3330();
  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  return v0 == sub_213EF3330();
}

uint64_t sub_213DF7E28(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v14[3];
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_213DE63A4(v6, (uint64_t)&v15);
      if (*(_QWORD *)(a2 + 16)
        && (v8 = v16,
            v9 = v17,
            __swift_project_boxed_opaque_existential_1(&v15, v16),
            v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9),
            v11 = *(_QWORD *)(sub_213DF2A1C(a2, v10) + 16),
            swift_release(),
            !v11))
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v15);
      }
      else
      {
        sub_213DE638C(&v15, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD3E8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v18;
        v13 = *(_QWORD *)(v18 + 16);
        v12 = *(_QWORD *)(v18 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_213DCD3E8(v12 > 1, v13 + 1, 1);
          v7 = v18;
        }
        *(_QWORD *)(v7 + 16) = v13 + 1;
        sub_213DE638C(v14, (_OWORD *)(v7 + 48 * v13 + 32));
      }
      v6 += 48;
      --v4;
    }
    while (v4);
    return v18;
  }
  return result;
}

uint64_t sub_213DF7F84(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v54 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_213DCD404(0, v2, 0);
    v3 = a1 + 32;
    v4 = v54;
    do
    {
      sub_213DE63A4(v3, (uint64_t)v51);
      v5 = v52;
      v6 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_213DCD404(0, v4[2] + 1, 1);
        v4 = v54;
      }
      v9 = v4[2];
      v8 = v4[3];
      if (v9 >= v8 >> 1)
      {
        sub_213DCD404(v8 > 1, v9 + 1, 1);
        v4 = v54;
      }
      v4[2] = v9 + 1;
      v4[v9 + 4] = v7;
      v3 += 48;
      --v2;
    }
    while (v2);
    v45 = v9 + 1;
LABEL_11:
    v46 = v4 + 4;
    swift_bridgeObjectRetain();
    v10 = 0;
    v11 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_13:
    v12 = v46[v10];
    v47 = v10 + 1;
    v48 = v12 + 64;
    v13 = 1 << *(_BYTE *)(v12 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & *(_QWORD *)(v12 + 64);
    v49 = (unint64_t)(v13 + 63) >> 6;
    v50 = v12;
    swift_bridgeObjectRetain_n();
    v16 = 0;
    if (v15)
    {
LABEL_17:
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_36;
    }
    while (1)
    {
      v19 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_56;
      if (v19 >= v49)
        goto LABEL_12;
      v20 = *(_QWORD *)(v48 + 8 * v19);
      ++v16;
      if (!v20)
      {
        v16 = v19 + 1;
        if (v19 + 1 >= v49)
          goto LABEL_12;
        v20 = *(_QWORD *)(v48 + 8 * v16);
        if (!v20)
        {
          v16 = v19 + 2;
          if (v19 + 2 >= v49)
            goto LABEL_12;
          v20 = *(_QWORD *)(v48 + 8 * v16);
          if (!v20)
          {
            v16 = v19 + 3;
            if (v19 + 3 >= v49)
              goto LABEL_12;
            v20 = *(_QWORD *)(v48 + 8 * v16);
            if (!v20)
            {
              v16 = v19 + 4;
              if (v19 + 4 >= v49)
                goto LABEL_12;
              v20 = *(_QWORD *)(v48 + 8 * v16);
              if (!v20)
              {
                v21 = v19 + 5;
                if (v21 >= v49)
                {
LABEL_12:
                  swift_release();
                  swift_bridgeObjectRelease();
                  v10 = v47;
                  if (v47 != v45)
                    goto LABEL_13;
                  swift_bridgeObjectRelease();
                  goto LABEL_54;
                }
                v20 = *(_QWORD *)(v48 + 8 * v21);
                if (!v20)
                {
                  while (1)
                  {
                    v16 = v21 + 1;
                    if (__OFADD__(v21, 1))
                      goto LABEL_57;
                    if (v16 >= v49)
                      goto LABEL_12;
                    v20 = *(_QWORD *)(v48 + 8 * v16);
                    ++v21;
                    if (v20)
                      goto LABEL_35;
                  }
                }
                v16 = v21;
              }
            }
          }
        }
      }
LABEL_35:
      v15 = (v20 - 1) & v20;
      v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_36:
      v22 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = *(_BYTE *)(*(_QWORD *)(v50 + 56) + v18);
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v54 = v11;
      v28 = sub_213DFA220(v24, v23);
      v29 = v11[2];
      v30 = (v27 & 1) == 0;
      v31 = v29 + v30;
      if (__OFADD__(v29, v30))
      {
        __break(1u);
        goto LABEL_53;
      }
      v32 = v27;
      if (v11[3] >= v31)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_213E00CA0();
      }
      else
      {
        sub_213DFC8CC(v31, isUniquelyReferenced_nonNull_native);
        v33 = sub_213DFA220(v24, v23);
        if ((v32 & 1) != (v34 & 1))
          goto LABEL_58;
        v28 = v33;
      }
      v11 = v54;
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        v11[(v28 >> 6) + 8] |= 1 << v28;
        v35 = (uint64_t *)(v11[6] + 16 * v28);
        *v35 = v24;
        v35[1] = v23;
        *(_QWORD *)(v11[7] + 8 * v28) = MEMORY[0x24BEE4AF8];
        v36 = v11[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          result = sub_213EF3288();
          __break(1u);
          return result;
        }
        v11[2] = v38;
        swift_bridgeObjectRetain();
      }
      v39 = v11[7];
      v40 = *(char **)(v39 + 8 * v28);
      v41 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v39 + 8 * v28) = v40;
      if ((v41 & 1) == 0)
      {
        v40 = sub_213DB697C(0, *((_QWORD *)v40 + 2) + 1, 1, v40);
        *(_QWORD *)(v39 + 8 * v28) = v40;
      }
      v43 = *((_QWORD *)v40 + 2);
      v42 = *((_QWORD *)v40 + 3);
      if (v43 >= v42 >> 1)
      {
        v40 = sub_213DB697C((char *)(v42 > 1), v43 + 1, 1, v40);
        *(_QWORD *)(v39 + 8 * v28) = v40;
      }
      *((_QWORD *)v40 + 2) = v43 + 1;
      v40[v43 + 32] = v25;
      swift_bridgeObjectRelease_n();
      if (v15)
        goto LABEL_17;
    }
  }
  if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
    v45 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_11;
  }
LABEL_53:
  v11 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_54:
  swift_bridgeObjectRelease();
  v51[0] = v11;
  sub_213DC3F48(0xD000000000000013, 0x8000000213F06630);
  swift_bridgeObjectRelease();
  return v51[0];
}

uint64_t sub_213DF8474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;

  v37 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06B28);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlusContactSuggestion();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v33 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v32 = (uint64_t)&v31 - v11;
  v12 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v36 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v34 = MEMORY[0x24BEE4AF8];
  if (!v15)
    goto LABEL_7;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v24)) + (v17 << 6))
  {
    v20 = 8 * i;
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v20);
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v20);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_213DF6090(v21, v22, v37, (uint64_t)v6);
    swift_bridgeObjectRelease();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      result = sub_213DAFEC4((uint64_t)v6, &qword_253F06B28);
      if (v15)
        goto LABEL_4;
    }
    else
    {
      v26 = v32;
      sub_213DF8B18((uint64_t)v6, v32);
      sub_213DF8B18(v26, v33);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_213DB6968(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
      v28 = *(_QWORD *)(v34 + 16);
      v27 = *(_QWORD *)(v34 + 24);
      if (v28 >= v27 >> 1)
        v34 = sub_213DB6968(v27 > 1, v28 + 1, 1, v34);
      v29 = v33;
      v30 = v34;
      *(_QWORD *)(v34 + 16) = v28 + 1;
      result = sub_213DF8B18(v29, v30+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28);
      if (v15)
        goto LABEL_4;
    }
LABEL_7:
    v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v36)
      goto LABEL_29;
    v24 = *(_QWORD *)(v35 + 8 * v23);
    ++v17;
    if (!v24)
    {
      v17 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_29;
      v24 = *(_QWORD *)(v35 + 8 * v17);
      if (!v24)
      {
        v17 = v23 + 2;
        if (v23 + 2 >= v36)
          goto LABEL_29;
        v24 = *(_QWORD *)(v35 + 8 * v17);
        if (!v24)
        {
          v17 = v23 + 3;
          if (v23 + 3 >= v36)
            goto LABEL_29;
          v24 = *(_QWORD *)(v35 + 8 * v17);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v15 = (v24 - 1) & v24;
  }
  v25 = v23 + 4;
  if (v25 >= v36)
  {
LABEL_29:
    swift_release();
    return v34;
  }
  v24 = *(_QWORD *)(v35 + 8 * v25);
  if (v24)
  {
    v17 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v36)
      goto LABEL_29;
    v24 = *(_QWORD *)(v35 + 8 * v17);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_213DF87CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t result;
  __int128 v25[3];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1 + 32;
    swift_bridgeObjectRetain();
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    while (1)
    {
      sub_213DE63A4(v2, (uint64_t)v26);
      v4 = v27;
      v5 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      sub_213DE63A4((uint64_t)v26, (uint64_t)v25);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = sub_213DFA4DC(v6);
      v10 = v3[2];
      v11 = (v8 & 1) == 0;
      v12 = v10 + v11;
      if (__OFADD__(v10, v11))
        break;
      v13 = v8;
      if (v3[3] >= v12)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_213E00AF4();
      }
      else
      {
        sub_213DFC608(v12, isUniquelyReferenced_nonNull_native);
        v14 = sub_213DFA4DC(v6);
        if ((v13 & 1) != (v15 & 1))
          goto LABEL_22;
        v9 = v14;
      }
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v3[(v9 >> 6) + 8] |= 1 << v9;
        *(_QWORD *)(v3[6] + 8 * v9) = v6;
        *(_QWORD *)(v3[7] + 8 * v9) = MEMORY[0x24BEE4AF8];
        v16 = v3[2];
        v17 = __OFADD__(v16, 1);
        v18 = v16 + 1;
        if (v17)
          goto LABEL_21;
        v3[2] = v18;
        swift_retain();
      }
      v19 = v3[7];
      v20 = *(_QWORD **)(v19 + 8 * v9);
      v21 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v19 + 8 * v9) = v20;
      if ((v21 & 1) == 0)
      {
        v20 = sub_213DB6824(0, v20[2] + 1, 1, v20);
        *(_QWORD *)(v19 + 8 * v9) = v20;
      }
      v23 = v20[2];
      v22 = v20[3];
      if (v23 >= v22 >> 1)
      {
        v20 = sub_213DB6824((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
        *(_QWORD *)(v19 + 8 * v9) = v20;
      }
      v20[2] = v23 + 1;
      sub_213DE638C(v25, &v20[6 * v23 + 4]);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
      v2 += 48;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v3;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_213EF1E30();
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_213DF8A28(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_213DF8A6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_213DF8A80()
{
  return sub_213DF8AA4(&qword_254D3BBE0, (uint64_t)&protocol conformance descriptor for UsoEntity_common_Person);
}

uint64_t sub_213DF8AA4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_213EF1E30();
    result = MEMORY[0x2199C52D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for PlusContactSuggestionGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlusContactSuggestionGenerator.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PlusContactSuggestionGenerator.generate(groundTruths:suggestionTags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_213DF8B04(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_213DF8B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusContactSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_213DF8B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = type metadata accessor for MediaFeedbackGroundTruth();
  if (*(_BYTE *)(v0 + *(int *)(v1 + 20)))
  {
    if (*(_BYTE *)(v0 + *(int *)(v1 + 20)) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
      v3 = (uint64_t *)(v0 + *(int *)(v1 + 28));
      v5 = *v3;
      v4 = v3[1];
      v6 = v3[2];
      v7 = v3[3];
      v8 = v3[4];
      v9 = v3[5];
      LOWORD(v3) = *((_WORD *)v3 + 24);
      *(_QWORD *)(inited + 32) = v5;
      *(_QWORD *)(inited + 40) = v4;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v7;
      *(_QWORD *)(inited + 64) = v8;
      *(_QWORD *)(inited + 72) = v9;
      *(_WORD *)(inited + 80) = (_WORD)v3;
      v10 = -32508;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD28);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
      v16 = (uint64_t *)(v0 + *(int *)(v1 + 28));
      v18 = *v16;
      v17 = v16[1];
      v6 = v16[2];
      v7 = v16[3];
      v19 = v16[4];
      v20 = v16[5];
      LOWORD(v16) = *((_WORD *)v16 + 24);
      *(_QWORD *)(inited + 32) = v18;
      *(_QWORD *)(inited + 40) = v17;
      *(_QWORD *)(inited + 48) = v6;
      *(_QWORD *)(inited + 56) = v7;
      *(_QWORD *)(inited + 64) = v19;
      *(_QWORD *)(inited + 72) = v20;
      *(_WORD *)(inited + 80) = (_WORD)v16;
      v10 = -32250;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD28);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
    v11 = (uint64_t *)(v0 + *(int *)(v1 + 28));
    v13 = *v11;
    v12 = v11[1];
    v6 = v11[2];
    v7 = v11[3];
    v14 = v11[4];
    v15 = v11[5];
    LOWORD(v11) = *((_WORD *)v11 + 24);
    *(_QWORD *)(inited + 32) = v13;
    *(_QWORD *)(inited + 40) = v12;
    *(_QWORD *)(inited + 48) = v6;
    *(_QWORD *)(inited + 56) = v7;
    *(_QWORD *)(inited + 64) = v14;
    *(_QWORD *)(inited + 72) = v15;
    *(_WORD *)(inited + 80) = (_WORD)v11;
    v10 = -32761;
  }
  *(_WORD *)(inited + 82) = v10;
  swift_bridgeObjectRetain();
  sub_213DB8518(v6, v7);
  return sub_213DCAD00(inited);
}

uint64_t sub_213DF8CC0()
{
  return sub_213E1B62C((uint64_t)&unk_24D0FFA30);
}

uint64_t sub_213DF8CCC(uint64_t a1)
{
  uint64_t result;

  result = sub_213DB0DB4(&qword_254D3BCE8, (uint64_t (*)(uint64_t))type metadata accessor for MediaFeedbackGroundTruth, (uint64_t)&unk_213EF76AC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_213DF8D08()
{
  return sub_213DB0DB4((unint64_t *)&qword_254D3BCF0, (uint64_t (*)(uint64_t))type metadata accessor for PlusMediaSuggestion, (uint64_t)&protocol conformance descriptor for PlusMediaSuggestion);
}

uint64_t sub_213DF8D34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 24));
  return swift_retain();
}

SiriPrivateLearningInference::TurnSlotValue __swiftcall TurnSlotValue.init(stringValue:)(SiriPrivateLearningInference::TurnSlotValue stringValue)
{
  SiriPrivateLearningInference::TurnSlotValue *v1;

  *v1 = stringValue;
  return stringValue;
}

uint64_t TurnSlotValue.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall TurnSlotValue.aboveSimilarityThreshold(_:threshold:ignoreCase:)(SiriPrivateLearningInference::TurnSlotValue _, Swift::Double threshold, Swift::Bool ignoreCase)
{
  uint64_t v3;
  void *v4;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  double v9;
  char v10;
  char v11;
  Swift::Double_optional v13;

  if (!*(_QWORD *)(v3 + 8))
    return 0;
  v4 = *(void **)(_.stringValue.value._countAndFlagsBits + 8);
  if (!v4)
    return 0;
  v6 = *(_QWORD *)_.stringValue.value._countAndFlagsBits;
  if (((uint64_t)_.stringValue.value._object & 1) != 0)
  {
    sub_213EF2898();
    v6 = sub_213EF2898();
    v4 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v8._countAndFlagsBits = v6;
  v8._object = v4;
  v13 = String.scoreRatcliffObershelp(between:)(v8);
  v9 = *(double *)&v13.is_nil;
  v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v11 & 1) == 0 && v9 >= threshold;
}

Swift::Double_optional __swiftcall TurnSlotValue.similarityScore(_:)(SiriPrivateLearningInference::TurnSlotValue a1)
{
  uint64_t v1;
  BOOL v2;
  Swift::Double_optional result;

  a1.stringValue.value._object = *(void **)(a1.stringValue.value._countAndFlagsBits + 8);
  if (*(_QWORD *)(v1 + 8))
    v2 = a1.stringValue.value._object == 0;
  else
    v2 = 1;
  if (v2)
  {
    result.is_nil = 0;
  }
  else
  {
    a1.stringValue.value._countAndFlagsBits = *(_QWORD *)a1.stringValue.value._countAndFlagsBits;
    return String.scoreRatcliffObershelp(between:)(a1.stringValue.value);
  }
  return result;
}

uint64_t static TurnSlotValue.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;

  v4 = a1[1];
  v5 = a2[1];
  result = (v4 | v5) == 0;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    if (*a1 == *a2 && v4 == v5)
      return 1;
    else
      return sub_213EF3234();
  }
  return result;
}

uint64_t TurnSlotValue.description.getter()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return 0xD000000000000019;
  sub_213EF2EB0();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  sub_213EF2904();
  return 0x746F6C536E727554;
}

uint64_t sub_213DF8F90(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;

  v4 = a1[1];
  v5 = a2[1];
  result = (v4 | v5) == 0;
  if (v4)
    v7 = v5 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    if (*a1 == *a2 && v4 == v5)
      return 1;
    else
      return sub_213EF3234();
  }
  return result;
}

uint64_t sub_213DF8FE0()
{
  uint64_t result;

  type metadata accessor for ReformulationSpecializationClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BDD0);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3BD30 = 91;
  *(_QWORD *)algn_254D3BD38 = 0xE100000000000000;
  return result;
}

uint64_t SlotsClassification.initialTurn.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.followOnTurn.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.added.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.removed.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.identical.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.similar.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.dissimilar.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.match.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.changed.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall SlotsClassification.init(_:_:)(SiriPrivateLearningInference::SlotsClassification *__return_ptr retstr, Swift::OpaquePointer a2, Swift::OpaquePointer a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  SiriPrivateLearningInference::SlotsClassification *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  SiriPrivateLearningInference::SlotsClassification *v24;
  unint64_t v25;
  void **v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  char v35;
  char v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  SiriPrivateLearningInference::SlotsClassification *v44;
  uint64_t v45;
  char v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  void *v61;
  char v62;
  uint64_t *v63;
  BOOL v64;
  char v65;
  os_log_type_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  void *v70;
  char v71;
  SiriPrivateLearningInference::SlotsClassification *v72;
  SiriPrivateLearningInference::SlotsClassification **v73;
  Swift::OpaquePointer *v74;
  uint64_t *v75;
  char *v76;
  BOOL v77;
  void *v78;
  SiriPrivateLearningInference::SlotsClassification *v79;
  uint64_t v80;
  SiriPrivateLearningInference::SlotsClassification *v81;
  Swift::OpaquePointer *v82;
  uint64_t *v83;
  char *v84;
  void *v85;
  char v86;
  char v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char v91;
  void *v92;
  char v93;
  uint64_t *v94;
  Swift::OpaquePointer *v95;
  uint64_t *v96;
  char *v97;
  Swift::String v98;
  double v99;
  char v100;
  char v101;
  char v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  _BOOL8 v106;
  uint64_t v107;
  char v108;
  unint64_t v109;
  char v110;
  SiriPrivateLearningInference::SlotsClassification *v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  Swift::OpaquePointer *v115;
  uint64_t *v116;
  char *v117;
  void *v118;
  Swift::OpaquePointer *v119;
  uint64_t *v120;
  char *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  SiriPrivateLearningInference::SlotsClassification *v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  SiriPrivateLearningInference::SlotsClassification *v131;
  SiriPrivateLearningInference::SlotsClassification *v132;
  uint64_t v133;
  void *rawValue;
  void *v135;
  SiriPrivateLearningInference::SlotsClassification *v136;
  Swift::Double_optional v137;

  if (qword_253F04A88 != -1)
LABEL_100:
    swift_once();
  v6 = sub_213EF2724();
  __swift_project_value_buffer(v6, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v7 = sub_213EF270C();
  v8 = sub_213EF2CAC();
  rawValue = a2._rawValue;
  v135 = a3._rawValue;
  v126 = retstr;
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    retstr = (SiriPrivateLearningInference::SlotsClassification *)swift_slowAlloc();
    v136 = retstr;
    *(_DWORD *)v9 = 136315650;
    if (qword_254D39FC0 != -1)
LABEL_101:
      swift_once();
    v10 = qword_254D3BD30;
    v11 = *(_QWORD *)algn_254D3BD38;
    swift_bridgeObjectRetain();
    sub_213DB0570(v10, v11, (uint64_t *)&v136);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    a2._rawValue = rawValue;
    swift_bridgeObjectRetain();
    v12 = sub_213EF2778();
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_213DB0570(v12, v14, (uint64_t *)&v136);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    swift_bridgeObjectRetain();
    v15 = sub_213EF2778();
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_213DB0570(v15, v17, (uint64_t *)&v136);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v7, v8, "%s Comparing %s to %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](retstr, -1, -1);
    MEMORY[0x2199C53C4](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v18 = swift_bridgeObjectRetain();
  v19 = (SiriPrivateLearningInference::SlotsClassification *)sub_213DF9E98(v18);
  swift_bridgeObjectRelease();
  v136 = v19;
  v20 = swift_bridgeObjectRetain();
  sub_213DB4730(v20);
  v136 = (SiriPrivateLearningInference::SlotsClassification *)MEMORY[0x24BEE4B08];
  v21 = swift_bridgeObjectRetain();
  v22 = sub_213E02BA0(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = MEMORY[0x24BEE4AF8];
  v129 = sub_213DCB2EC(MEMORY[0x24BEE4AF8]);
  v24 = (SiriPrivateLearningInference::SlotsClassification *)sub_213DCB2EC(v23);
  v128 = sub_213DCB40C(v23);
  v127 = sub_213DCB40C(v23);
  v25 = sub_213DCB40C(v23);
  v7 = *(NSObject **)(v22 + 16);
  v130 = v25;
  if (!v7)
  {
LABEL_92:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v123 = sub_213DF9DF8(v130, v127);
    swift_bridgeObjectRetain();
    v124 = swift_bridgeObjectRetain();
    v125 = sub_213DF9DF8(v124, v128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v126->initialTurn = a2;
    v126->followOnTurn._rawValue = v135;
    v126->added._rawValue = (void *)v129;
    v126->removed._rawValue = v24;
    v126->identical._rawValue = (void *)v128;
    v126->similar._rawValue = (void *)v127;
    v126->dissimilar._rawValue = (void *)v130;
    v126->match._rawValue = (void *)v125;
    v126->changed._rawValue = (void *)v123;
    return;
  }
  v26 = (void **)(v22 + 40);
  while (1)
  {
    retstr = (SiriPrivateLearningInference::SlotsClassification *)*(v26 - 1);
    a3._rawValue = *v26;
    v27 = *((_QWORD *)a2._rawValue + 2);
    swift_bridgeObjectRetain();
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
      if ((v29 & 1) != 0)
      {
        v30 = (uint64_t *)(*((_QWORD *)a2._rawValue + 7) + 16 * v28);
        v31 = *v30;
        v32 = v30[1];
        swift_bridgeObjectRetain();
      }
      else
      {
        v31 = 0;
        v32 = 1;
      }
      v33 = v135;
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)v135 + 2))
      {
LABEL_14:
        if (v32 == 1)
          goto LABEL_15;
        goto LABEL_29;
      }
    }
    else
    {
      v31 = 0;
      v32 = 1;
      v33 = v135;
      if (!*((_QWORD *)v135 + 2))
        goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    v38 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (v32 == 1)
      {
LABEL_15:
        swift_bridgeObjectRetain();
        v34 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
        v36 = v35;
        swift_bridgeObjectRelease();
        if ((v36 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v136 = v24;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_213E01040();
            v24 = v136;
          }
          swift_bridgeObjectRelease();
          sub_213DFFC08(v34, (uint64_t)v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        sub_213DF8A6C(v31, 1);
        sub_213DF8A6C(0, 1);
        goto LABEL_9;
      }
LABEL_29:
      swift_bridgeObjectRetain();
      v54 = (uint64_t)v24;
      v55 = swift_isUniquelyReferenced_nonNull_native();
      v136 = (SiriPrivateLearningInference::SlotsClassification *)v54;
      a2._rawValue = (void *)sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
      v57 = *(_QWORD *)(v54 + 16);
      v58 = (v56 & 1) == 0;
      v59 = v57 + v58;
      if (__OFADD__(v57, v58))
      {
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
        goto LABEL_100;
      }
      v60 = v56;
      if (*(_QWORD *)(v54 + 24) < v59)
      {
        sub_213DFCF30(v59, v55);
        v61 = (void *)sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
        if ((v60 & 1) != (v62 & 1))
          goto LABEL_104;
        a2._rawValue = v61;
        v24 = v136;
        if ((v60 & 1) == 0)
          goto LABEL_89;
LABEL_36:
        v63 = (uint64_t *)((char *)v24->match._rawValue + 16 * (uint64_t)a2._rawValue);
        swift_bridgeObjectRelease();
        *v63 = v31;
        v63[1] = v32;
LABEL_91:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_213DF8A6C(v31, v32);
        sub_213DF8A6C(0, 1);
        a2._rawValue = rawValue;
        goto LABEL_9;
      }
      if ((v55 & 1) != 0)
      {
        v24 = v136;
        if ((v56 & 1) != 0)
          goto LABEL_36;
      }
      else
      {
        sub_213E01040();
        v24 = v136;
        if ((v60 & 1) != 0)
          goto LABEL_36;
      }
LABEL_89:
      *((_QWORD *)&v24->changed._rawValue + ((unint64_t)a2._rawValue >> 6)) |= 1 << SLOBYTE(a2._rawValue);
      v119 = (Swift::OpaquePointer *)((char *)v24->dissimilar._rawValue + 16 * (uint64_t)a2._rawValue);
      v119->_rawValue = retstr;
      v119[1]._rawValue = a3._rawValue;
      v120 = (uint64_t *)((char *)v24->match._rawValue + 16 * (uint64_t)a2._rawValue);
      *v120 = v31;
      v120[1] = v32;
      v121 = (char *)v24->added._rawValue;
      v77 = __OFADD__(v121, 1);
      v122 = v121 + 1;
      if (v77)
        goto LABEL_94;
      v24->added._rawValue = v122;
      swift_bridgeObjectRetain();
      goto LABEL_91;
    }
    v132 = v24;
    v40 = (uint64_t *)(v33[7] + 16 * v38);
    v41 = *v40;
    v42 = (void *)v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v133 = v31;
    if (!v32)
    {
      if (v42)
      {
        v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
        swift_bridgeObjectRetain();
        goto LABEL_63;
      }
LABEL_45:
      v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
      swift_bridgeObjectRetain();
      sub_213DF8B04(v31, v32);
      v65 = swift_isUniquelyReferenced_nonNull_native();
      v136 = (SiriPrivateLearningInference::SlotsClassification *)v128;
      a2._rawValue = (void *)sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
      v67 = *(_QWORD *)(v128 + 16);
      v68 = (v66 & 1) == 0;
      v69 = v67 + v68;
      if (__OFADD__(v67, v68))
        goto LABEL_97;
      v8 = v66;
      if (*(_QWORD *)(v128 + 24) >= v69)
      {
        if ((v65 & 1) == 0)
          sub_213E00E60();
      }
      else
      {
        sub_213DFCBEC(v69, v65);
        v70 = (void *)sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
        if ((v8 & 1) != (v71 & 1))
          goto LABEL_104;
        a2._rawValue = v70;
      }
      v81 = v136;
      v128 = (unint64_t)v136;
      if ((v8 & 1) == 0)
      {
        *((_QWORD *)&v136->changed._rawValue + ((unint64_t)a2._rawValue >> 6)) |= 1 << SLOBYTE(a2._rawValue);
        v82 = (Swift::OpaquePointer *)((char *)v81->dissimilar._rawValue + 16 * (uint64_t)a2._rawValue);
        v82->_rawValue = retstr;
        v82[1]._rawValue = a3._rawValue;
        v83 = (uint64_t *)((char *)v81->match._rawValue + 32 * (uint64_t)a2._rawValue);
        v9 = v133;
        *v83 = v133;
        v83[1] = v32;
        retstr = v131;
        v83[2] = (uint64_t)v131;
        v83[3] = (uint64_t)v42;
        v84 = (char *)v81->added._rawValue;
        v77 = __OFADD__(v84, 1);
        v85 = v84 + 1;
        if (v77)
        {
          __break(1u);
          goto LABEL_101;
        }
        goto LABEL_72;
      }
LABEL_70:
      v94 = (uint64_t *)((char *)v81->match._rawValue + 32 * (uint64_t)a2._rawValue);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v133;
      *v94 = v133;
      v94[1] = v32;
      retstr = v131;
      v94[2] = (uint64_t)v131;
      v94[3] = (uint64_t)v42;
LABEL_73:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_213DF8A6C(v9, v32);
      v79 = retstr;
      v80 = (uint64_t)v42;
LABEL_74:
      sub_213DF8A6C((uint64_t)v79, v80);
      a2._rawValue = rawValue;
      v24 = v132;
      goto LABEL_9;
    }
    if (v32 == 1)
    {
      v43 = (uint64_t)v42;
      v44 = (SiriPrivateLearningInference::SlotsClassification *)v41;
      v45 = v43;
      swift_bridgeObjectRetain();
      v46 = swift_isUniquelyReferenced_nonNull_native();
      v136 = (SiriPrivateLearningInference::SlotsClassification *)v129;
      v48 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
      v49 = *(_QWORD *)(v129 + 16);
      v50 = (v47 & 1) == 0;
      v51 = v49 + v50;
      if (__OFADD__(v49, v50))
        goto LABEL_96;
      a2._rawValue = v47;
      if (*(_QWORD *)(v129 + 24) >= v51)
      {
        if ((v46 & 1) == 0)
          sub_213E01040();
      }
      else
      {
        sub_213DFCF30(v51, v46);
        v52 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
        if (((uint64_t)a2._rawValue & 1) != (v53 & 1))
          goto LABEL_104;
        v48 = v52;
      }
      v72 = v136;
      v129 = (unint64_t)v136;
      if (((uint64_t)a2._rawValue & 1) != 0)
      {
        v73 = (SiriPrivateLearningInference::SlotsClassification **)((char *)v136->match._rawValue + 16 * v48);
        swift_bridgeObjectRelease();
        *v73 = v44;
        v73[1] = (SiriPrivateLearningInference::SlotsClassification *)v45;
      }
      else
      {
        *((_QWORD *)&v136->changed._rawValue + (v48 >> 6)) |= 1 << v48;
        v74 = (Swift::OpaquePointer *)((char *)v72->dissimilar._rawValue + 16 * v48);
        v74->_rawValue = retstr;
        v74[1]._rawValue = a3._rawValue;
        v75 = (uint64_t *)((char *)v72->match._rawValue + 16 * v48);
        *v75 = v41;
        v75[1] = v45;
        v76 = (char *)v72->added._rawValue;
        v77 = __OFADD__(v76, 1);
        v78 = v76 + 1;
        if (v77)
          goto LABEL_99;
        v72->added._rawValue = v78;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_213DF8A6C(v133, 1);
      v79 = v44;
      v80 = v45;
      goto LABEL_74;
    }
    if (!v42)
    {
      v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
      swift_bridgeObjectRetain();
      sub_213DF8B04(v31, v32);
LABEL_63:
      v86 = swift_isUniquelyReferenced_nonNull_native();
      v136 = (SiriPrivateLearningInference::SlotsClassification *)v130;
      a2._rawValue = (void *)sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
      v88 = *(_QWORD *)(v130 + 16);
      v89 = (v87 & 1) == 0;
      v90 = v88 + v89;
      if (__OFADD__(v88, v89))
        goto LABEL_95;
      v91 = v87;
      if (*(_QWORD *)(v130 + 24) >= v90)
      {
        if ((v86 & 1) == 0)
          sub_213E00E60();
      }
      else
      {
        sub_213DFCBEC(v90, v86);
        v92 = (void *)sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
        if ((v91 & 1) != (v93 & 1))
          goto LABEL_104;
        a2._rawValue = v92;
      }
      v81 = v136;
      v130 = (uint64_t)v136;
      if ((v91 & 1) != 0)
        goto LABEL_70;
      *((_QWORD *)&v136->changed._rawValue + ((unint64_t)a2._rawValue >> 6)) |= 1 << SLOBYTE(a2._rawValue);
      v95 = (Swift::OpaquePointer *)((char *)v81->dissimilar._rawValue + 16 * (uint64_t)a2._rawValue);
      v95->_rawValue = retstr;
      v95[1]._rawValue = a3._rawValue;
      v96 = (uint64_t *)((char *)v81->match._rawValue + 32 * (uint64_t)a2._rawValue);
      v9 = v133;
      *v96 = v133;
      v96[1] = v32;
      retstr = v131;
      v96[2] = (uint64_t)v131;
      v96[3] = (uint64_t)v42;
      v97 = (char *)v81->added._rawValue;
      v77 = __OFADD__(v97, 1);
      v85 = v97 + 1;
      if (v77)
        goto LABEL_98;
LABEL_72:
      v81->added._rawValue = v85;
      swift_bridgeObjectRetain();
      goto LABEL_73;
    }
    v64 = v31 == v41 && v32 == (_QWORD)v42;
    if (v64 || (sub_213EF3234() & 1) != 0)
      goto LABEL_45;
    swift_bridgeObjectRetain();
    sub_213DF8B04(v31, v32);
    swift_bridgeObjectRetain();
    sub_213DF8B04(v31, v32);
    v131 = (SiriPrivateLearningInference::SlotsClassification *)v41;
    v98._countAndFlagsBits = v41;
    v98._object = v42;
    v137 = String.scoreRatcliffObershelp(between:)(v98);
    v99 = *(double *)&v137.is_nil;
    v101 = v100;
    swift_bridgeObjectRelease();
    sub_213DF8A6C(v31, v32);
    if ((v101 & 1) != 0 || v99 < 0.75)
      goto LABEL_63;
    v102 = swift_isUniquelyReferenced_nonNull_native();
    v136 = (SiriPrivateLearningInference::SlotsClassification *)v127;
    v104 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
    v105 = *(_QWORD *)(v127 + 16);
    v106 = (v103 & 1) == 0;
    v107 = v105 + v106;
    if (__OFADD__(v105, v106))
      break;
    v108 = v103;
    if (*(_QWORD *)(v127 + 24) >= v107)
    {
      if ((v102 & 1) == 0)
        sub_213E00E60();
    }
    else
    {
      sub_213DFCBEC(v107, v102);
      v109 = sub_213DFA220((uint64_t)retstr, (uint64_t)a3._rawValue);
      if ((v108 & 1) != (v110 & 1))
        goto LABEL_104;
      v104 = v109;
    }
    v111 = v136;
    v127 = (unint64_t)v136;
    if ((v108 & 1) != 0)
    {
      v112 = (uint64_t *)((char *)v136->match._rawValue + 32 * v104);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v113 = v133;
      a2._rawValue = rawValue;
      *v112 = v133;
      v112[1] = v32;
      v114 = (uint64_t)v131;
      v112[2] = (uint64_t)v131;
      v112[3] = (uint64_t)v42;
    }
    else
    {
      *((_QWORD *)&v136->changed._rawValue + (v104 >> 6)) |= 1 << v104;
      v115 = (Swift::OpaquePointer *)((char *)v111->dissimilar._rawValue + 16 * v104);
      v115->_rawValue = retstr;
      v115[1]._rawValue = a3._rawValue;
      v116 = (uint64_t *)((char *)v111->match._rawValue + 32 * v104);
      v113 = v133;
      *v116 = v133;
      v116[1] = v32;
      v116[2] = (uint64_t)v131;
      v116[3] = (uint64_t)v42;
      v117 = (char *)v111->added._rawValue;
      v77 = __OFADD__(v117, 1);
      v118 = v117 + 1;
      if (v77)
        goto LABEL_103;
      v111->added._rawValue = v118;
      swift_bridgeObjectRetain();
      a2._rawValue = rawValue;
      v114 = (uint64_t)v131;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213DF8A6C(v113, v32);
    sub_213DF8A6C(v114, (uint64_t)v42);
    v24 = v132;
LABEL_9:
    v26 += 2;
    v7 = ((char *)v7 - 1);
    if (!v7)
      goto LABEL_92;
  }
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  sub_213EF3288();
  __break(1u);
}

SiriPrivateLearningInference::SlotsClassification::TurnSlotValuePair __swiftcall SlotsClassification.TurnSlotValuePair.init(_:_:)(SiriPrivateLearningInference::TurnSlotValue a1, SiriPrivateLearningInference::TurnSlotValue a2)
{
  _OWORD *v2;
  __int128 v3;
  SiriPrivateLearningInference::SlotsClassification::TurnSlotValuePair result;

  v3 = *(_OWORD *)a1.stringValue.value._object;
  *v2 = *(_OWORD *)a1.stringValue.value._countAndFlagsBits;
  v2[1] = v3;
  result.followOn = a2;
  result.initial = a1;
  return result;
}

uint64_t sub_213DF9DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_213E02420(a1, (uint64_t)sub_213E02AA0, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t SlotsClassification.TurnSlotValuePair.initial.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SlotsClassification.TurnSlotValuePair.followOn.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_213DF9E98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_213E02684((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_213DB9C58();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_213DF9F7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_213DF9FA4(a1, a2, a3, a4, (unint64_t *)&qword_254D3A718);
}

uint64_t sub_213DF9F90(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_213DF9FA4(a1, a2, a3, a4, (unint64_t *)&qword_254D3A630);
}

uint64_t sub_213DF9FA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6)
      return MEMORY[0x24BEE4AF8];
    v10 = v6;
    if (v6 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0)
          goto LABEL_19;
        v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8)
          goto LABEL_19;
        sub_213DB9CDC(0, a5);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_213EF30A8();
  __break(1u);
  return result;
}

_QWORD *sub_213DFA13C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF48);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_213E02880((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_213DB9C58();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

unint64_t sub_213DFA220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_213EF32F4();
  sub_213EF28BC();
  v4 = sub_213EF3330();
  return sub_213DFA804(a1, a2, v4);
}

unint64_t sub_213DFA284(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_213EF1D64();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v3 = sub_213EF27E4();
  return sub_213DFAFA4(a1, v3, v2, (unint64_t *)&qword_253F06930, MEMORY[0x24BDCEA98]);
}

unint64_t sub_213DFA31C(uint64_t a1)
{
  uint64_t v2;

  sub_213EF32F4();
  sub_213EF28BC();
  v2 = sub_213EF3330();
  return sub_213DFA8E4(a1, v2);
}

unint64_t sub_213DFA374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_213EF32F4();
  sub_213EF28BC();
  v8 = sub_213EF3330();
  return sub_213DFA9BC(a1, a2, a3, a4, v8);
}

unint64_t sub_213DFA3F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15[10];
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_213EF32F4();
  v14 = a1;
  sub_213E6EFF8(a1, v15);
  v2 = v15[0];
  v3 = v15[1];
  v4 = v15[2];
  v5 = v15[3];
  v6 = v15[4];
  v7 = v15[5];
  v8 = v15[6];
  v9 = v15[7];
  v10 = v15[8];
  v11 = v15[9];
  sub_213E033BC((uint64_t)v15, (uint64_t)v16);
  if (v17 == 1)
  {
    sub_213EF330C();
  }
  else
  {
    v18 = v2;
    v19 = v3;
    v20 = v4;
    v21 = v5;
    v22 = v6;
    v23 = v7;
    v24 = v8;
    v25 = v9;
    v26 = v10;
    v27 = v11;
    sub_213EF330C();
    sub_213E54A84();
    sub_213DC077C(v15);
  }
  v12 = sub_213EF3330();
  return sub_213DFAAC4(v14, v12);
}

unint64_t sub_213DFA4DC(uint64_t a1)
{
  uint64_t v2;

  sub_213EF32F4();
  if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
  {
    sub_213EF330C();
    sub_213EF28BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_213EF330C();
  }
  v2 = sub_213EF3330();
  return sub_213DFAE24(a1, v2);
}

unint64_t sub_213DFA57C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_213EF32F4();
  sub_213EF3300();
  v2 = sub_213EF3330();
  return sub_213DFB490(a1, v2);
}

unint64_t sub_213DFA5E0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_213EF26F4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BEA53D0];
  sub_213DB0DB4(&qword_253F070B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA53D0], MEMORY[0x24BEA53E0]);
  v3 = sub_213EF27E4();
  return sub_213DFAFA4(a1, v3, v2, &qword_254D3BDE0, MEMORY[0x24BEA53E8]);
}

unint64_t sub_213DFA678(unsigned __int8 a1)
{
  uint64_t v2;

  sub_213EF32F4();
  sub_213EF3300();
  sub_213EF3300();
  v2 = sub_213EF3330();
  return sub_213DFB0D4(a1, v2);
}

unint64_t sub_213DFA6DC(int a1)
{
  uint64_t v2;

  sub_213EF32F4();
  sub_213EF3318();
  v2 = sub_213EF3330();
  return sub_213DFB168(a1, v2);
}

unint64_t sub_213DFA734(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_213EF32F4();
  sub_213EF3300();
  if (a2 > 2)
    sub_213EF28BC();
  v4 = sub_213EF3330();
  return sub_213DFB204(a1, a2, v4);
}

unint64_t sub_213DFA7D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_213EF2E5C();
  return sub_213DFB3CC(a1, v2);
}

unint64_t sub_213DFA804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_213EF3234() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_213EF3234() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_213DFA8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  __int128 v10;
  _QWORD v12[2];
  __int128 v13;
  __int128 v14;
  __int16 v15;
  _OWORD v16[3];
  __int16 v17;

  v3 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v3;
  v16[2] = *(_OWORD *)(a1 + 32);
  v17 = *(_WORD *)(a1 + 48);
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = *(_QWORD *)(v2 + 48) + 56 * v5;
      v8 = *(_QWORD *)(v7 + 8);
      v9 = *(_WORD *)(v7 + 48);
      v12[0] = *(_QWORD *)v7;
      v12[1] = v8;
      v10 = *(_OWORD *)(v7 + 32);
      v13 = *(_OWORD *)(v7 + 16);
      v14 = v10;
      v15 = v9;
      if (_s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v16))
        break;
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_213DFA9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v17 = v15[2];
      v16 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_213EF3234() & 1) != 0)
      {
        if (v16)
        {
          if (a4)
          {
            v19 = v17 == a3 && v16 == a4;
            if (v19 || (sub_213EF3234() & 1) != 0)
              return v8;
          }
        }
        else if (!a4)
        {
          return v8;
        }
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_213DFAAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[20];
  uint64_t v32[10];
  uint64_t v33[10];
  _BYTE v34[8];
  uint64_t v35;
  _BYTE v36[8];
  uint64_t v37;
  _BYTE v38[8];
  uint64_t v39;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  v17 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
    return v4;
  v16 = ~v3;
  while (1)
  {
    v30 = swift_retain();
    sub_213E6EFF8(v30, v32);
    v6 = v32[0];
    v5 = v32[1];
    v7 = v32[2];
    v8 = v32[3];
    v26 = v32[4];
    v22 = v32[6];
    v28 = v32[7];
    v29 = v32[5];
    v19 = v32[8];
    v24 = v32[9];
    sub_213E6EFF8(a1, v33);
    v10 = v33[0];
    v9 = v33[1];
    v12 = v33[2];
    v11 = v33[3];
    v13 = v33[5];
    v25 = v33[4];
    v27 = v33[7];
    v20 = v33[8];
    v21 = v33[6];
    v23 = v33[9];
    sub_213E033BC((uint64_t)v32, (uint64_t)v38);
    if (v39 == 1)
    {
      sub_213E033BC((uint64_t)v33, (uint64_t)v36);
      if (v37 == 1)
        goto LABEL_48;
      goto LABEL_7;
    }
    sub_213E033BC((uint64_t)v33, (uint64_t)v34);
    if (v35 != 1)
      break;
LABEL_7:
    v31[0] = v6;
    v31[1] = v5;
    v31[2] = v7;
    v31[3] = v8;
    v31[4] = v26;
    v31[5] = v29;
    v31[6] = v22;
    v31[7] = v28;
    v31[8] = v19;
    v31[9] = v24;
    v31[10] = v10;
    v31[11] = v9;
    v31[12] = v12;
    v31[13] = v11;
    v31[14] = v25;
    v31[15] = v13;
    v31[16] = v21;
    v31[17] = v27;
    v31[18] = v20;
    v31[19] = v23;
    sub_213DC0674(v31);
LABEL_44:
    swift_release();
LABEL_45:
    v4 = (v4 + 1) & v16;
    if (((*(_QWORD *)(v17 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
      return v4;
  }
  if (!v5)
  {
    if (!v9)
      goto LABEL_15;
    goto LABEL_43;
  }
  if (!v9 || (v6 != v10 || v5 != v9) && (sub_213EF3234() & 1) == 0)
    goto LABEL_43;
LABEL_15:
  if (!v8)
  {
    if (!v11)
      goto LABEL_22;
    goto LABEL_43;
  }
  if (!v11 || (v7 != v12 || v8 != v11) && (sub_213EF3234() & 1) == 0)
    goto LABEL_43;
LABEL_22:
  if (!v29)
  {
    if (!v13)
      goto LABEL_29;
    goto LABEL_43;
  }
  if (!v13 || (v26 != v25 || v29 != v13) && (sub_213EF3234() & 1) == 0)
    goto LABEL_43;
LABEL_29:
  if (!v28)
  {
    if (!v27)
      goto LABEL_36;
    goto LABEL_43;
  }
  if (!v27 || (v22 != v21 || v28 != v27) && (sub_213EF3234() & 1) == 0)
    goto LABEL_43;
LABEL_36:
  if (!v24)
  {
    if (!v23)
      goto LABEL_47;
    goto LABEL_43;
  }
  if (!v23)
  {
LABEL_43:
    sub_213DC077C(v33);
    sub_213DC077C(v32);
    goto LABEL_44;
  }
  if (v19 != v20 || v24 != v23)
  {
    v14 = sub_213EF3234();
    sub_213DC077C(v33);
    sub_213DC077C(v32);
    swift_release();
    if ((v14 & 1) != 0)
      return v4;
    goto LABEL_45;
  }
LABEL_47:
  sub_213DC077C(v33);
  sub_213DC077C(v32);
LABEL_48:
  swift_release();
  return v4;
}

unint64_t sub_213DFAE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      sub_213EF32F4();
      swift_retain();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_213EF330C();
        sub_213EF28BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF330C();
      }
      v7 = sub_213EF3330();
      sub_213EF32F4();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_213EF330C();
        sub_213EF28BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF330C();
      }
      v8 = sub_213EF3330();
      swift_release();
      if (v7 == v8)
        break;
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_213DFAFA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_213DB0DB4(v21, v20, v22);
      v17 = sub_213EF2838();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_213DFB0D4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    v7 = *(_QWORD *)(v2 + 48);
    do
    {
      v8 = *(unsigned __int8 *)(v7 + result);
      if (*(char *)(v7 + result) < 0)
      {
        if ((a1 & 0x80) != 0 && ((v8 ^ a1) & 0x7F) == 0)
          return result;
      }
      else if ((a1 & 0x80) == 0 && v8 == a1)
      {
        return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_213DFB168(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_213DFB204(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  uint64_t v14;
  unint64_t v15;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
    return v5;
  v8 = ~v4;
  while (1)
  {
    v9 = *(_QWORD *)(v3 + 48) + 16 * v5;
    v10 = *(_QWORD *)v9;
    v11 = *(_QWORD *)(v9 + 8);
    switch(v11)
    {
      case 0uLL:
        if (!a2)
        {
          v14 = *(_QWORD *)v9;
          v15 = 0;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 1uLL:
        if (a2 == 1)
        {
          v14 = *(_QWORD *)v9;
          v15 = 1;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 2uLL:
        if (a2 == 2)
        {
          v14 = *(_QWORD *)v9;
          v15 = 2;
          goto LABEL_24;
        }
LABEL_13:
        sub_213E03404(*(_QWORD *)v9, *(_QWORD *)(v9 + 8));
        sub_213E03404(a1, a2);
        sub_213DC497C(v10, v11);
        sub_213DC497C(a1, a2);
        goto LABEL_14;
    }
    if (a2 < 3)
      goto LABEL_13;
    if (v10 == a1 && v11 == a2)
      break;
    v13 = sub_213EF3234();
    sub_213E03404(v10, v11);
    sub_213E03404(a1, a2);
    sub_213DC497C(v10, v11);
    sub_213DC497C(a1, a2);
    if ((v13 & 1) != 0)
      return v5;
LABEL_14:
    v5 = (v5 + 1) & v8;
    if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
      return v5;
  }
  sub_213E03404(a1, a2);
  sub_213E03404(a1, a2);
  v14 = a1;
  v15 = a2;
LABEL_24:
  sub_213DC497C(v14, v15);
  sub_213DC497C(a1, a2);
  return v5;
}

unint64_t sub_213DFB3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_213E03418(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x2199C4908](v9, a1);
      sub_213E03454((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_213DFB490(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_213DFB530(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADA8);
  v36 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFB844(uint64_t a1, int a2)
{
  return sub_213DFDC98(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification, &qword_254D3BDE8);
}

uint64_t sub_213DFB858(uint64_t a1, char a2)
{
  return sub_213DFE3A0(a1, a2, &qword_254D3BD58);
}

uint64_t sub_213DFB864(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char v43;
  int64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEC8);
  v43 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    v42 = v5;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v44 = v13;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v40)
          goto LABEL_33;
        v23 = v41[v22];
        v24 = v13 + 1;
        if (!v23)
        {
          v24 = v13 + 2;
          if (v13 + 2 >= v40)
            goto LABEL_33;
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v43 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v5 + 32);
                if (v39 >= 64)
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v39;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v24 >= v40)
                  goto LABEL_33;
                v23 = v41[v24];
                ++v25;
                if (v23)
                  goto LABEL_30;
              }
            }
            v24 = v13 + 3;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v44 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v30 = *(_QWORD *)(v5 + 56);
      v31 = *(_QWORD *)(v5 + 48) + 56 * v21;
      v33 = *(_QWORD *)v31;
      v32 = *(_QWORD *)(v31 + 8);
      v35 = *(_QWORD *)(v31 + 16);
      v34 = *(_QWORD *)(v31 + 24);
      v37 = *(_QWORD *)(v31 + 32);
      v36 = *(_QWORD *)(v31 + 40);
      v45 = *(_BYTE *)(v31 + 48);
      v46 = *(_BYTE *)(v31 + 49);
      v38 = (char *)(v30 + 2 * v21);
      v47 = *v38;
      v48 = v38[1];
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_213DB8518(v35, v34);
      }
      sub_213EF32F4();
      sub_213EF28BC();
      result = sub_213EF3330();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v7 + 48) + 56 * v17;
      *(_QWORD *)v18 = v33;
      *(_QWORD *)(v18 + 8) = v32;
      *(_QWORD *)(v18 + 16) = v35;
      *(_QWORD *)(v18 + 24) = v34;
      *(_QWORD *)(v18 + 32) = v37;
      *(_QWORD *)(v18 + 40) = v36;
      *(_BYTE *)(v18 + 48) = v45;
      *(_BYTE *)(v18 + 49) = v46;
      v19 = (_BYTE *)(*(_QWORD *)(v7 + 56) + 2 * v17);
      *v19 = v47;
      v19[1] = v48;
      ++*(_QWORD *)(v7 + 16);
      v5 = v42;
      v13 = v44;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFBBD4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  char v42;
  uint64_t v43;
  char v44;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEE0);
  v42 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_33;
      v24 = v40[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v39)
              goto LABEL_33;
            v24 = v40[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = v30[3];
    v43 = v30[2];
    v34 = *(_QWORD *)(v5 + 56) + 4 * v21;
    v44 = *(_BYTE *)v34;
    v35 = *(unsigned __int8 *)(v34 + 3);
    v36 = *(unsigned __int16 *)(v34 + 1);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 32 * v17);
    *v18 = v32;
    v18[1] = v31;
    v18[2] = v43;
    v18[3] = v33;
    v19 = *(_QWORD *)(v7 + 56) + 4 * v17;
    *(_BYTE *)v19 = v44;
    *(_BYTE *)(v19 + 3) = (v36 | (v35 << 16)) >> 16;
    *(_WORD *)(v19 + 1) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v5 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFBF28(uint64_t a1, char a2)
{
  return sub_213DFF0C0(a1, a2, &qword_254D3AF08);
}

unint64_t sub_213DFBF34(uint64_t a1, char a2)
{
  return sub_213DFC614(a1, a2, &qword_254D3AF28);
}

uint64_t sub_213DFBF40(uint64_t a1, char a2)
{
  return sub_213DFBF58(a1, a2, &qword_254D3BD88);
}

uint64_t sub_213DFBF4C(uint64_t a1, char a2)
{
  return sub_213DFBF58(a1, a2, &qword_254D3BD80);
}

uint64_t sub_213DFBF58(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_213EF3090();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_213EF32F4();
      sub_213EF3300();
      result = sub_213EF3330();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_213DFC224(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_254D3AF40);
}

uint64_t sub_213DFC230(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _BYTE *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(_BYTE *, unint64_t, uint64_t);
  unint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v5 = sub_213EF1D64();
  v55 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v47[-v9];
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BDB8);
  v12 = sub_213EF3090();
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v49 = v2;
  v50 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11;
  v18 = v12 + 64;
  v54 = v17;
  result = swift_retain();
  v20 = 0;
  v48 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v52 = v21;
  v53 = v8;
  while (1)
  {
    if (v16)
    {
      v26 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v27 = v26 | (v20 << 6);
      goto LABEL_24;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v50)
      break;
    v29 = v51;
    v30 = v51[v28];
    ++v20;
    if (!v30)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v50)
        goto LABEL_34;
      v30 = v51[v20];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v50)
        {
LABEL_34:
          v45 = v54;
          swift_release();
          v3 = v49;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v51[v31];
        if (!v30)
        {
          while (1)
          {
            v20 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v20 >= v50)
              goto LABEL_34;
            v30 = v51[v20];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v20 = v31;
      }
    }
LABEL_23:
    v16 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v20 << 6);
LABEL_24:
    v32 = v54;
    v33 = *(_QWORD *)(v55 + 72);
    v34 = v33 * v27;
    v35 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v55 + v52);
    v35(v10, *(_QWORD *)(v54 + 48) + v33 * v27, v5);
    v36 = *(_QWORD *)(v32 + 56) + v34;
    v37 = v53;
    v35(v53, v36, v5);
    sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_213EF27E4();
    v38 = -1 << *(_BYTE *)(v12 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v18 + 8 * v40);
      }
      while (v44 == -1);
      v22 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v33 * v22;
    v24 = *(_QWORD *)(v12 + 48) + v33 * v22;
    v25 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32);
    v25(v24, v10, v5);
    result = ((uint64_t (*)(unint64_t, _BYTE *, uint64_t))v25)(*(_QWORD *)(v12 + 56) + v23, v37, v5);
    ++*(_QWORD *)(v12 + 16);
  }
  v45 = v54;
  swift_release();
  v3 = v49;
  v29 = v51;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v46 = 1 << *(_BYTE *)(v45 + 32);
  if (v46 >= 64)
    bzero(v29, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v46;
  *(_QWORD *)(v45 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

unint64_t sub_213DFC608(uint64_t a1, char a2)
{
  return sub_213DFC614(a1, a2, &qword_254D3BDD8);
}

unint64_t sub_213DFC614(uint64_t a1, char a2, uint64_t *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;
  char v27;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v27 = a2;
  v7 = sub_213EF3090();
  v8 = (_QWORD *)v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v26 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v25 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v18 >= v25)
          goto LABEL_26;
        v19 = v26[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v25)
            goto LABEL_26;
          v19 = v26[v14];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v25)
            {
LABEL_26:
              swift_release();
              v4 = v3;
              if ((v27 & 1) != 0)
              {
                v24 = 1 << *(_BYTE *)(v6 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v19 = v26[v20];
            if (!v19)
            {
              while (1)
              {
                v14 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_33;
                if (v14 >= v25)
                  goto LABEL_26;
                v19 = v26[v14];
                ++v20;
                if (v19)
                  goto LABEL_23;
              }
            }
            v14 = v20;
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = 8 * v17;
      v22 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v21);
      v23 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v21);
      if ((v27 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      sub_213EF32F4();
      if ((unint64_t)UsoEntity_common_Person.convertUSOPersonToString()().value._object)
      {
        sub_213EF330C();
        sub_213EF28BC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_213EF330C();
      }
      sub_213EF3330();
      result = sub_213EF2E20();
      *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v15 = 8 * result;
      *(_QWORD *)(v8[6] + v15) = v22;
      *(_QWORD *)(v8[7] + v15) = v23;
      ++v8[2];
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_213DFC8CC(uint64_t a1, char a2)
{
  return sub_213DFF468(a1, a2, &qword_254D3ADC0);
}

uint64_t sub_213DFC8D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD78);
  v37 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFCBE0(uint64_t a1, char a2)
{
  return sub_213DFF468(a1, a2, &qword_254D3BD70);
}

uint64_t sub_213DFCBEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF30);
  v40 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_33;
      v24 = *(_QWORD *)(v39 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v38)
              goto LABEL_33;
            v24 = *(_QWORD *)(v39 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v34 = *(_QWORD *)v33;
    v41 = *(_OWORD *)(v33 + 8);
    v35 = *(_QWORD *)(v33 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v41;
    *(_QWORD *)(v19 + 24) = v35;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFCF30(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF38);
  v6 = a2;
  v7 = sub_213EF3090();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_213EF32F4();
      sub_213EF28BC();
      result = sub_213EF3330();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_213DFD238(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  char v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD68);
  v31 = a2;
  result = sub_213EF3090();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((v31 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((v31 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_213EF32F4();
      sub_213EF3300();
      sub_213EF3300();
      result = sub_213EF3330();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_213DFD524(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_254D3BDA8);
}

uint64_t sub_213DFD530(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;

  v5 = v3;
  v7 = sub_213EF1D64();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v44 = a2;
  v12 = sub_213EF3090();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v42 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v40 = v3;
  v41 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = v42;
    v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_34;
      v26 = v42[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v5 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v41)
              goto LABEL_34;
            v26 = v42[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v30 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_213EF27E4();
    v31 = -1 << *(_BYTE *)(v13 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21) = v30;
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v5 = v40;
  v25 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v11 + 32);
  if (v38 >= 64)
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v38;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v5 = v13;
  return result;
}

uint64_t sub_213DFD8C8(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_254D3BDC0);
}

uint64_t sub_213DFD8D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  uint64_t v46;

  v46 = sub_213EF1D64();
  v4 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v2;
  v6 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BDC8);
  v7 = sub_213EF3090();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
    v35 = v39;
LABEL_42:
    *v35 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 64);
  v41 = (_QWORD *)(v6 + 64);
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v40 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  v38 = a2;
  v16 = 16;
  if ((a2 & 1) != 0)
    v16 = 32;
  v42 = v6;
  v43 = v16;
  while (1)
  {
    if (v12)
    {
      v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v20 = v19 | (v15 << 6);
      goto LABEL_24;
    }
    v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v40)
    {
      swift_release();
      v35 = v39;
      v22 = v41;
      if ((v38 & 1) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v6 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v6 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v41;
    v23 = v41[v21];
    ++v15;
    if (!v23)
    {
      v15 = v21 + 1;
      if (v21 + 1 >= v40)
        goto LABEL_34;
      v23 = v41[v15];
      if (!v23)
        break;
    }
LABEL_23:
    v12 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v4 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + v43))(v45, *(_QWORD *)(v6 + 48) + v25 * v20, v46);
    v26 = (char *)(*(_QWORD *)(v6 + 56) + 2 * v20);
    v44 = v26[1];
    v27 = *v26;
    sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_213EF27E4();
    v28 = -1 << *(_BYTE *)(v8 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v13 + 8 * (v29 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v13 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v13 + 8 * v30);
      }
      while (v34 == -1);
      v17 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v8 + 48) + v25 * v17, v45, v46);
    v18 = (_BYTE *)(*(_QWORD *)(v8 + 56) + 2 * v17);
    *v18 = v27;
    v18[1] = v44;
    ++*(_QWORD *)(v8 + 16);
    v6 = v42;
  }
  v24 = v21 + 2;
  if (v24 >= v40)
  {
LABEL_34:
    swift_release();
    v35 = v39;
    if ((v38 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v41[v24];
  if (v23)
  {
    v15 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v40)
      goto LABEL_34;
    v23 = v41[v15];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_213DFDC84(uint64_t a1, int a2)
{
  return sub_213DFDC98(a1, a2, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata, &qword_254D3BDB0);
}

uint64_t sub_213DFDC98(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = sub_213EF1D64();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_213EF3090();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v46 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v44 = v4;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45)
      break;
    v28 = v46;
    v29 = v46[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_34;
      v29 = v46[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v45)
              goto LABEL_34;
            v29 = v46[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_213DBB430(v33 + v34 * v26, v50, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_213DCA7E4(v35 + v34 * v26, v50, v51);
    }
    sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_213EF27E4();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    result = sub_213DBB430(v50, *(_QWORD *)(v16 + 56) + v34 * v24, v51);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v6 = v44;
  v28 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v16;
  return result;
}

uint64_t sub_213DFE08C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF20);
  v37 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFE394(uint64_t a1, char a2)
{
  return sub_213DFE3A0(a1, a2, &qword_254D3BD60);
}

uint64_t sub_213DFE3A0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_213EF3090();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_DWORD *)(*(_QWORD *)(v6 + 56) + 4 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_213DFE6A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD90);
  result = sub_213EF3090();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v30 = a2;
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_31;
        v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_31;
          v18 = v31[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v12)
                  goto LABEL_31;
                v18 = v31[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_DWORD *)(*(_QWORD *)(v5 + 48) + 4 * v16);
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_213EF32F4();
      sub_213EF3318();
      result = sub_213EF3330();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v14) = v20;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_213DFE968(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF10);
  v42 = a2;
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v14 = v5;
  v41 = v5;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v39)
      break;
    v24 = v40;
    v25 = v40[v23];
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v39)
        goto LABEL_34;
      v25 = v40[v13];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_35;
        }
        v25 = v40[v26];
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v13 >= v39)
              goto LABEL_34;
            v25 = v40[v13];
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v14 + 56) + (v22 << 6);
    v35 = *(_QWORD *)(v34 + 8);
    v43 = *(_QWORD *)v34;
    v44 = *(_QWORD *)(v34 + 16);
    v45 = *(_OWORD *)(v34 + 40);
    v46 = *(_OWORD *)(v34 + 24);
    v36 = *(_QWORD *)(v34 + 56);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = v41;
      swift_bridgeObjectRetain();
    }
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = *(_QWORD *)(v7 + 56) + (v18 << 6);
    *(_QWORD *)v20 = v43;
    *(_QWORD *)(v20 + 8) = v35;
    *(_QWORD *)(v20 + 16) = v44;
    *(_OWORD *)(v20 + 24) = v46;
    *(_OWORD *)(v20 + 40) = v45;
    *(_QWORD *)(v20 + 56) = v36;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v24 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_35:
  v37 = 1 << *(_BYTE *)(v41 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v41 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFED00(uint64_t a1, char a2)
{
  return sub_213DFF468(a1, a2, &qword_254D3AF18);
}

uint64_t sub_213DFED0C(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_253F06FE8);
}

uint64_t sub_213DFED18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  __int128 *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37[3];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA8);
  v6 = sub_213EF3090();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = v2;
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v34)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v35 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v34)
        goto LABEL_36;
      v20 = *(_QWORD *)(v35 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_36:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_45;
            if (v13 >= v34)
              goto LABEL_36;
            v20 = *(_QWORD *)(v35 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(v5 + 48);
    v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    v24 = *(_QWORD *)(v22 + 16 * v17 + 8);
    v36 = *(_OWORD *)(v22 + 16 * v17);
    if ((a2 & 1) != 0)
    {
      sub_213DB0BF0(v23, (uint64_t)v37);
    }
    else
    {
      sub_213DAFDFC((uint64_t)v23, (uint64_t)v37);
      sub_213E03404(v36, v24);
    }
    sub_213EF32F4();
    sub_213EF3300();
    if (v24 > 2)
      sub_213EF28BC();
    result = sub_213EF3330();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      v15 = v36;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      v15 = v36;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v15;
    result = sub_213DB0BF0(v37, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_213DFF078(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_254D3AEF0);
}

uint64_t sub_213DFF084(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_254D3BDA0);
}

uint64_t sub_213DFF090(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_253F06FF0);
}

uint64_t sub_213DFF09C(uint64_t a1, int a2)
{
  return sub_213DFD530(a1, a2, &qword_254D3BD98);
}

uint64_t sub_213DFF0A8(uint64_t a1, char a2)
{
  return sub_213DFF0C0(a1, a2, &qword_254D3BD50);
}

uint64_t sub_213DFF0B4(uint64_t a1, char a2)
{
  return sub_213DFF0C0(a1, a2, &qword_254D3BD48);
}

uint64_t sub_213DFF0C0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55[10];
  char v56[8];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v49 = a2;
  v7 = sub_213EF3090();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v44 = v3;
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v46 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v45 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    v47 = v8;
    v48 = v6;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v18 = (v11 - 1) & v11;
        v53 = v14;
        v19 = v17 | (v14 << 6);
      }
      else
      {
        v20 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v20 >= v45)
          goto LABEL_36;
        v21 = v46[v20];
        v22 = v14 + 1;
        if (!v21)
        {
          v22 = v20 + 1;
          if (v20 + 1 >= v45)
            goto LABEL_36;
          v21 = v46[v22];
          if (!v21)
          {
            v23 = v20 + 2;
            if (v23 >= v45)
            {
LABEL_36:
              swift_release();
              v4 = v44;
              if ((v49 & 1) != 0)
              {
                v43 = 1 << *(_BYTE *)(v6 + 32);
                if (v43 >= 64)
                  bzero(v46, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v46 = -1 << v43;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v21 = v46[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_43;
                if (v22 >= v45)
                  goto LABEL_36;
                v21 = v46[v22];
                ++v23;
                if (v21)
                  goto LABEL_21;
              }
            }
            v22 = v23;
          }
        }
LABEL_21:
        v18 = (v21 - 1) & v21;
        v53 = v22;
        v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      v54 = v18;
      v24 = 8 * v19;
      v25 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v24);
      v26 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v24);
      if ((v49 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      v52 = v26;
      sub_213EF32F4();
      v51 = v25;
      sub_213E6EFF8(v25, v55);
      v27 = v55[0];
      v28 = v55[1];
      v30 = v55[2];
      v29 = v55[3];
      v32 = v55[4];
      v31 = v55[5];
      v34 = v55[6];
      v33 = v55[7];
      v35 = v55[8];
      v50 = v55[9];
      sub_213E033BC((uint64_t)v55, (uint64_t)v56);
      if (v57 == 1)
      {
        sub_213EF330C();
      }
      else
      {
        v58 = v27;
        v59 = v28;
        v60 = v30;
        v61 = v29;
        v62 = v32;
        v63 = v31;
        v64 = v34;
        v65 = v33;
        v66 = v35;
        v67 = v50;
        sub_213EF330C();
        sub_213E54A84();
        sub_213DC077C(v55);
      }
      v8 = v47;
      v6 = v48;
      v11 = v54;
      result = sub_213EF3330();
      v36 = -1 << *(_BYTE *)(v47 + 32);
      v37 = result & ~v36;
      v38 = v37 >> 6;
      if (((-1 << v37) & ~*(_QWORD *)(v12 + 8 * (v37 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v12 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
        v14 = v53;
      }
      else
      {
        v39 = 0;
        v40 = (unint64_t)(63 - v36) >> 6;
        v14 = v53;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v41 = v38 == v40;
          if (v38 == v40)
            v38 = 0;
          v39 |= v41;
          v42 = *(_QWORD *)(v12 + 8 * v38);
        }
        while (v42 == -1);
        v15 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v47 + 48) + v16) = v51;
      *(_QWORD *)(*(_QWORD *)(v47 + 56) + v16) = v52;
      ++*(_QWORD *)(v47 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_213DFF45C(uint64_t a1, char a2)
{
  return sub_213DFF468(a1, a2, &qword_254D3BD40);
}

uint64_t sub_213DFF468(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_213EF3090();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_213EF32F4();
    sub_213EF28BC();
    result = sub_213EF3330();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_213DFF778(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213EF2E14();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_213EF32F4();
        swift_bridgeObjectRetain();
        sub_213EF28BC();
        v9 = sub_213EF3330();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213DFF94C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;

  v4 = sub_213EF1D64();
  v33 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_213EF2E14();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v32 = (result + 1) & v11;
      v12 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12 * v10;
        v16 = v13;
        v31(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v17 = sub_213EF27E4();
        result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v32)
        {
          if (v18 >= v32 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            v21 = v12 * a1;
            if (v12 * a1 < v15
              || *(_QWORD *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v21 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            result = v22 + v21;
            if (v21 < v15 || result >= v22 + v15 + v12)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v8 = v14;
              v13 = v16;
            }
            else
            {
              a1 = v10;
              v23 = v21 == v15;
              v8 = v14;
              v13 = v16;
              if (!v23)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v16;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v32 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213DFFC08(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213EF2E14();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_213EF32F4();
        swift_bridgeObjectRetain();
        sub_213EF28BC();
        v9 = sub_213EF3330();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213DFFDDC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_213EF1D64();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_213EF2E14();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_213DB0DB4((unint64_t *)&qword_253F06928, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_213EF27E4();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0)
                                        - 8)
                            + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_213E000B0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  unint64_t v20;
  __int128 *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_213EF2E14();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v13 = *v11;
        v12 = v11[1];
        sub_213EF32F4();
        sub_213EF3300();
        if (v12 > 2)
        {
          swift_bridgeObjectRetain();
          sub_213EF28BC();
        }
        v14 = sub_213EF3330();
        result = sub_213DC497C(v13, v12);
        v15 = v14 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v15 < v8)
            goto LABEL_5;
        }
        else if (v15 >= v8)
        {
          goto LABEL_13;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_13:
          v16 = *(_QWORD *)(a2 + 48);
          v17 = (_OWORD *)(v16 + 16 * v3);
          v18 = (_OWORD *)(v16 + 16 * v6);
          if (v3 != v6 || v17 >= v18 + 1)
            *v17 = *v18;
          v19 = *(_QWORD *)(a2 + 56);
          v20 = v19 + 40 * v3;
          v21 = (__int128 *)(v19 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v20 >= (unint64_t)v21 + 40))
          {
            v9 = *v21;
            v10 = v21[1];
            *(_QWORD *)(v20 + 32) = *((_QWORD *)v21 + 4);
            *(_OWORD *)v20 = v9;
            *(_OWORD *)(v20 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_213E002D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3ADA8);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E0048C()
{
  return sub_213E01468((uint64_t (*)(_QWORD))type metadata accessor for TurnPairRestatementClassification, &qword_254D3BDE8);
}

void *sub_213E004A0()
{
  return sub_213E018E0(&qword_254D3BD58);
}

void *sub_213E004AC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEC8);
  v29 = v0;
  v1 = *v0;
  v2 = sub_213EF3084();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v26 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v12)
      goto LABEL_26;
    v27 = *(_QWORD *)(v5 + 8 * v26);
    ++v8;
    if (!v27)
    {
      v8 = v26 + 1;
      if (v26 + 1 >= v12)
        goto LABEL_26;
      v27 = *(_QWORD *)(v5 + 8 * v8);
      if (!v27)
        break;
    }
LABEL_25:
    v11 = (v27 - 1) & v27;
    v14 = __clz(__rbit64(v27)) + (v8 << 6);
LABEL_12:
    v15 = 56 * v14;
    v16 = *(_QWORD *)(v1 + 48) + 56 * v14;
    v18 = *(_QWORD *)v16;
    v17 = *(_QWORD *)(v16 + 8);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = *(_QWORD *)(v16 + 32);
    v22 = *(_QWORD *)(v16 + 40);
    LOWORD(v16) = *(_WORD *)(v16 + 48);
    v23 = 2 * v14;
    v24 = *(_WORD *)(*(_QWORD *)(v1 + 56) + v23);
    v25 = *(_QWORD *)(v3 + 48) + v15;
    *(_QWORD *)v25 = v18;
    *(_QWORD *)(v25 + 8) = v17;
    *(_QWORD *)(v25 + 16) = v19;
    *(_QWORD *)(v25 + 24) = v20;
    *(_QWORD *)(v25 + 32) = v21;
    *(_QWORD *)(v25 + 40) = v22;
    *(_WORD *)(v25 + 48) = v16;
    *(_WORD *)(*(_QWORD *)(v3 + 56) + v23) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_213DB8518(v19, v20);
  }
  v28 = v26 + 2;
  if (v28 >= v12)
    goto LABEL_26;
  v27 = *(_QWORD *)(v5 + 8 * v28);
  if (v27)
  {
    v8 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v27 = *(_QWORD *)(v5 + 8 * v8);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E006A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int16 v25;
  _QWORD *v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AEE0);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v15);
    v18 = *v17;
    v19 = v17[1];
    v21 = v17[2];
    v20 = v17[3];
    v22 = 4 * v15;
    v23 = *(_QWORD *)(v2 + 56) + v22;
    v24 = *(_BYTE *)v23;
    v25 = *(_WORD *)(v23 + 1);
    LOBYTE(v23) = *(_BYTE *)(v23 + 3);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v18;
    v26[1] = v19;
    v26[2] = v21;
    v26[3] = v20;
    v27 = *(_QWORD *)(v4 + 56) + v22;
    *(_BYTE *)v27 = v24;
    *(_BYTE *)(v27 + 3) = v23;
    *(_WORD *)(v27 + 1) = v25;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E00874()
{
  return sub_213E00B00(&qword_254D3AF08);
}

void *sub_213E00880()
{
  return sub_213E00B00(&qword_254D3AF28);
}

void *sub_213E0088C()
{
  return sub_213E021F0(&qword_254D3AF40);
}

void *sub_213E00898()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(unint64_t, char *, uint64_t);
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v1 = sub_213EF1D64();
  v2 = *(_QWORD **)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BDB8);
  v26 = v0;
  v8 = *v0;
  v9 = sub_213EF3084();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_23;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v19 = v2[9] * v18;
    v20 = (void (*)(char *, unint64_t, uint64_t))v2[2];
    v20(v7, *(_QWORD *)(v8 + 48) + v19, v1);
    v20(v5, *(_QWORD *)(v8 + 56) + v19, v1);
    v21 = (void (*)(unint64_t, char *, uint64_t))v2[4];
    v21(*(_QWORD *)(v10 + 48) + v19, v7, v1);
    result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v21)(*(_QWORD *)(v10 + 56) + v19, v5, v1);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_23;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_213E00AF4()
{
  return sub_213E00B00(&qword_254D3BDD8);
}

void *sub_213E00B00(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_213EF3084();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E00CA0()
{
  return sub_213E01E34(&qword_254D3ADC0);
}

void *sub_213E00CAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD78);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E00E54()
{
  return sub_213E01E34(&qword_254D3BD70);
}

void *sub_213E00E60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF30);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 24);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 8);
    *v24 = v18;
    v24[1] = v19;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(_QWORD *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E01040()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF38);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v21 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *v20 = v18;
    v20[1] = v19;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E011F4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  _BYTE *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = sub_213EF1D64();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BDC8);
  v31 = v0;
  v3 = *v0;
  v4 = sub_213EF3084();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = (void *)swift_release();
    v29 = v31;
LABEL_28:
    *v29 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  v9 = 0;
  v10 = *(_QWORD *)(v3 + 16);
  v36 = v5;
  v37 = v3;
  *(_QWORD *)(v5 + 16) = v10;
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v32 = v3 + 64;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v34;
  v14 = v35;
  v16 = v5;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v9 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v9 + 1;
    v19 = v37;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *(_QWORD *)(v32 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 2 * v18;
    v22 = (char *)(*(_QWORD *)(v19 + 56) + v21);
    v23 = *v22;
    v24 = v22[1];
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_BYTE *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v31;
    v5 = v36;
    goto LABEL_28;
  }
  v27 = *(_QWORD *)(v32 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v33)
      goto LABEL_26;
    v27 = *(_QWORD *)(v32 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213E01454()
{
  return sub_213E01468(type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata, &qword_254D3BDB0);
}

void *sub_213E01468(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v5;
  v38 = sub_213EF1D64();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v8 = *v2;
  v9 = sub_213EF3084();
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; result = (void *)sub_213DBB430(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_213DCA7E4(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_213E0172C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF20);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E018D4()
{
  return sub_213E018E0(&qword_254D3BD60);
}

void *sub_213E018E0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_213EF3084();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 4 * v16;
    LODWORD(v18) = *(_DWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = v20;
    v22[1] = v19;
    *(_DWORD *)(*(_QWORD *)(v5 + 56) + v21) = (_DWORD)v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E01A84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3BD90);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E01C14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF10);
  v32 = v0;
  v1 = *v0;
  v2 = sub_213EF3084();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v32 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v29 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v12)
      goto LABEL_26;
    v30 = *(_QWORD *)(v5 + 8 * v29);
    ++v8;
    if (!v30)
    {
      v8 = v29 + 1;
      if (v29 + 1 >= v12)
        goto LABEL_26;
      v30 = *(_QWORD *)(v5 + 8 * v8);
      if (!v30)
        break;
    }
LABEL_25:
    v11 = (v30 - 1) & v30;
    v14 = __clz(__rbit64(v30)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = v14 << 6;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 56);
    v25 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    v26 = *(_OWORD *)(v20 + 24);
    v27 = *(_OWORD *)(v20 + 40);
    *v25 = v17;
    v25[1] = v18;
    v28 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v28 = v21;
    *(_QWORD *)(v28 + 8) = v22;
    *(_QWORD *)(v28 + 16) = v23;
    *(_OWORD *)(v28 + 24) = v26;
    *(_OWORD *)(v28 + 40) = v27;
    *(_QWORD *)(v28 + 56) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v12)
    goto LABEL_26;
  v30 = *(_QWORD *)(v5 + 8 * v31);
  if (v30)
  {
    v8 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v30 = *(_QWORD *)(v5 + 8 * v8);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E01E28()
{
  return sub_213E01E34(&qword_254D3AF18);
}

void *sub_213E01E34(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_213EF3084();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_213E01FE0()
{
  return sub_213E021F0(&qword_253F06FE8);
}

void *sub_213E01FEC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA8);
  v2 = *v0;
  v3 = sub_213EF3084();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 40 * v15;
    sub_213DAFDFC(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v18;
    v21[1] = v19;
    sub_213DB0BF0(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)sub_213E03404(v18, v19);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_213E021D8()
{
  return sub_213E021F0(&qword_254D3AEF0);
}

void *sub_213E021E4()
{
  return sub_213E021F0(&qword_253F06FF0);
}

void *sub_213E021F0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v3 = sub_213EF1D64();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v26 = v1;
  v7 = *v1;
  v8 = sub_213EF3084();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v26 = v9;
    return result;
  }
  result = (void *)(v8 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11)
    result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  v27 = v7 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_26;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_25:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 48) + v19, v3);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v9 + 48) + v19, v6, v3);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_26;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_26;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_213E02420(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v52 = a5;
  v6 = -1 << *(_BYTE *)(a1 + 32);
  v7 = ~v6;
  v8 = *(_QWORD *)(a1 + 64);
  v9 = -v6;
  v45 = a1;
  v46 = a1 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v47 = v7;
  v48 = 0;
  v49 = v10 & v8;
  v50 = a2;
  v51 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_213EB9E68(&v40);
  v11 = *((_QWORD *)&v40 + 1);
  if (*((_QWORD *)&v40 + 1))
  {
    while (1)
    {
      v20 = v40;
      v21 = v41;
      v22 = v42;
      v23 = v43;
      v39 = v44;
      v24 = (_QWORD *)*v52;
      v26 = sub_213DFA220(v40, v11);
      v27 = v24[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        break;
      v30 = v25;
      if (v24[3] >= v29)
      {
        if ((a4 & 1) == 0)
          sub_213E00E60();
      }
      else
      {
        sub_213DFCBEC(v29, a4 & 1);
        v31 = sub_213DFA220(v20, v11);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_19;
        v26 = v31;
      }
      v33 = (_QWORD *)*v52;
      if ((v30 & 1) != 0)
      {
        v13 = 32 * v26;
        v14 = (uint64_t *)(v33[7] + v13);
        v16 = *v14;
        v15 = v14[1];
        v18 = v14[2];
        v17 = v14[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v19 = (_QWORD *)(v33[7] + v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v19 = v16;
        v19[1] = v15;
        v19[2] = v18;
        v19[3] = v17;
      }
      else
      {
        v33[(v26 >> 6) + 8] |= 1 << v26;
        v34 = (uint64_t *)(v33[6] + 16 * v26);
        *v34 = v20;
        v34[1] = v11;
        v35 = (_QWORD *)(v33[7] + 32 * v26);
        *v35 = v21;
        v35[1] = v22;
        v35[2] = v23;
        v35[3] = v39;
        v36 = v33[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_18;
        v33[2] = v38;
      }
      sub_213EB9E68(&v40);
      v11 = *((_QWORD *)&v40 + 1);
      a4 = 1;
      if (!*((_QWORD *)&v40 + 1))
        goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_213DB9C58();
    return swift_release();
  }
  return result;
}

uint64_t sub_213E02684(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_213E02880(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v27 = -1 << *(_BYTE *)(a4 + 32);
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = 16 * v16;
    v21 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v22 = *v21;
    v23 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(a4 + 56) + v20);
    v26 = *v24;
    v25 = v24[1];
    *v11 = v22;
    v11[1] = v23;
    v11[2] = v26;
    v11[3] = v25;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        v9 = 0;
        v12 = v17;
      }
      else
      {
        v18 = *(_QWORD *)(v6 + 8 * v12);
        if (v18)
          goto LABEL_14;
        v19 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_33;
        v18 = *(_QWORD *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          v17 = v19;
          goto LABEL_18;
        }
        v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          v18 = *(_QWORD *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            v17 = v12;
            goto LABEL_18;
          }
          v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v18 = *(_QWORD *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              v17 = v19 + 1;
              if (__OFADD__(v19, 1))
                goto LABEL_42;
              if (v17 >= v14)
              {
                v9 = 0;
                v12 = v14 - 1;
                goto LABEL_37;
              }
              v18 = *(_QWORD *)(v6 + 8 * v17);
              ++v19;
              if (v18)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v17 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_213E02AA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[5];
  *(_QWORD *)(a2 + 8) = a1[1];
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 3);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)a2 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s28SiriPrivateLearningInference19SlotsClassificationV17TurnSlotValuePairV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_213EF3234(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_213EF3234() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_213E02BA0(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = 0;
  v3 = result + 40;
  v4 = -(uint64_t)v1;
  v5 = MEMORY[0x24BEE4AF8];
  v15 = result + 40;
  v16 = *(_QWORD *)(result + 16);
  do
  {
    if (v2 <= v1)
      v6 = v1;
    else
      v6 = v2;
    v7 = -(uint64_t)v6;
    for (i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *(i - 1);
      v9 = *i;
      swift_bridgeObjectRetain_n();
      v11 = sub_213DD5A54(&v17, v10, v9);
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v5;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    v18 = v5;
    if ((result & 1) == 0)
    {
      result = sub_213DCD0C8(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v5 = v18;
    }
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    if (v13 >= v12 >> 1)
    {
      result = sub_213DCD0C8(v12 > 1, v13 + 1, 1);
      v5 = v18;
    }
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v9;
    v3 = v15;
    v1 = v16;
  }
  while (v4 + v2);
  return v5;
}

_QWORD *initializeBufferWithCopyOfBuffer for TurnSlotValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for TurnSlotValue(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for TurnSlotValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TurnSlotValue(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TurnSlotValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TurnSlotValue()
{
  return &type metadata for TurnSlotValue;
}

uint64_t destroy for SlotsClassification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SlotsClassification(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SlotsClassification(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SlotsClassification(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SlotsClassification(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SlotsClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotsClassification()
{
  return &type metadata for SlotsClassification;
}

uint64_t destroy for Storefront()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Storefront(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Storefront(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for Storefront(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Storefront(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Storefront(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SlotsClassification.TurnSlotValuePair()
{
  return &type metadata for SlotsClassification.TurnSlotValuePair;
}

uint64_t sub_213E033BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E03404(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_213E03418(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_213E03454(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_213E03490()
{
  uint64_t result;

  type metadata accessor for MediaInAppFollowupClassifier();
  __swift_instantiateConcreteTypeFromMangledName(qword_254D3BEB8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3BDF0 = 91;
  *(_QWORD *)algn_254D3BDF8 = 0xE100000000000000;
  return result;
}

uint64_t MediaInAppFollowupClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MediaInAppFollowupClassifier.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t MediaInAppFollowupClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MediaInAppFollowupClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E03544(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - v7;
  if (*(_QWORD *)(a2 + 8))
  {
    v9 = swift_bridgeObjectRetain();
    sub_213DAF008(v9, (uint64_t)v6);
    swift_bridgeObjectRelease();
    v10 = sub_213EF1CF8();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v6, 1, v10) == 1)
    {
      v13 = swift_bridgeObjectRetain();
      sub_213DAF1EC(v13);
      v15 = v14;
      swift_bridgeObjectRelease();
      if ((v15 & 1) != 0)
      {
        v16 = 1;
      }
      else
      {
        sub_213EF1CC8();
        v16 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, v16, 1, v10);
      sub_213DAFEC4((uint64_t)v6, &qword_253F04800);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v6, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    if (v12(v8, 1, v10) == 1)
    {
      sub_213DAFEC4((uint64_t)v8, &qword_253F04800);
      return 0;
    }
    else
    {
      sub_213EF1CD4();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
      return v27;
    }
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v17 = sub_213EF2724();
    __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
    v18 = sub_213EF270C();
    v19 = sub_213EF2C94();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v30 = v21;
      *(_DWORD *)v20 = 136315138;
      if (qword_254D39FC8 != -1)
        swift_once();
      v22 = qword_254D3BDF0;
      v23 = *(_QWORD *)algn_254D3BDF8;
      swift_bridgeObjectRetain();
      v29 = sub_213DB0570(v22, v23, &v30);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v18, v19, "%s No Siri play event found. Using the last UEI timestamp of the final turn.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v21, -1, -1);
      MEMORY[0x2199C53C4](v20, -1, -1);
    }

    type metadata accessor for FeaturisedTurn(0);
    v24 = swift_bridgeObjectRetain();
    v25 = sub_213DAE808(v24);
    swift_bridgeObjectRelease();
  }
  return v25;
}

uint64_t sub_213E038AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  double v17;
  char v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  double v32;
  double v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v42 - v9;
  v11 = sub_213EF1CF8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 + 32);
  v16 = *(_OWORD *)(a3 + 16);
  v44[0] = *(_OWORD *)a3;
  v44[1] = v16;
  v45 = v15;
  v17 = COERCE_DOUBLE(sub_213E03544(a1, (uint64_t)v44));
  if ((v18 & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v25 = sub_213EF2724();
    __swift_project_value_buffer(v25, (uint64_t)qword_253F08A00);
    v26 = sub_213EF270C();
    v27 = sub_213EF2C94();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      *(_QWORD *)&v44[0] = v29;
      *(_DWORD *)v28 = 136315138;
      if (qword_254D39FC8 != -1)
        swift_once();
      v30 = qword_254D3BDF0;
      v31 = *(_QWORD *)algn_254D3BDF8;
      swift_bridgeObjectRetain();
      v43 = sub_213DB0570(v30, v31, (uint64_t *)v44);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v26, v27, "%s Unable to find start timestamp to use when computing time to followup", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v29, -1, -1);
      MEMORY[0x2199C53C4](v28, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v19 = swift_bridgeObjectRetain();
    sub_213DAF008(v19, (uint64_t)v8);
    swift_bridgeObjectRelease();
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v20(v8, 1, v11) == 1)
    {
      v21 = swift_bridgeObjectRetain();
      sub_213DAF1EC(v21);
      v23 = v22;
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        v24 = 1;
      }
      else
      {
        sub_213EF1CC8();
        v24 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v24, 1, v11);
      sub_213DAFEC4((uint64_t)v8, &qword_253F04800);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v8, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    if (v20(v10, 1, v11) == 1)
    {
      sub_213DAFEC4((uint64_t)v10, &qword_253F04800);
LABEL_26:
      v17 = 0.0;
      return *(_QWORD *)&v17;
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_213EF1CD4();
    v33 = v32 - v17;
    if (v32 - v17 >= 0.0)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v17 = v33;
    }
    else
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v34 = sub_213EF2724();
      __swift_project_value_buffer(v34, (uint64_t)qword_253F08A00);
      v35 = sub_213EF270C();
      v36 = sub_213EF2CA0();
      if (!os_log_type_enabled(v35, v36))
      {

        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        goto LABEL_26;
      }
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      *(_QWORD *)&v44[0] = v38;
      *(_DWORD *)v37 = 136315138;
      if (qword_254D39FC8 != -1)
        swift_once();
      v39 = qword_254D3BDF0;
      v40 = *(_QWORD *)algn_254D3BDF8;
      swift_bridgeObjectRetain();
      v43 = sub_213DB0570(v39, v40, (uint64_t *)v44);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v35, v36, "%s Time to followup was less than 0 seconds! Returning nil followup time.", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v38, -1, -1);
      MEMORY[0x2199C53C4](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v17 = 0.0;
    }
  }
  return *(_QWORD *)&v17;
}

uint64_t sub_213E03E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_log_type_t v26;
  const char *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD v50[7];
  char v51;

  if (!*(_QWORD *)(a2 + 8)
    || (v2 = swift_bridgeObjectRetain(),
        sub_213DAEB60(v2, &v35),
        swift_bridgeObjectRelease(),
        (v3 = *((_QWORD *)&v35 + 1)) == 0))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v28 = sub_213EF2724();
    __swift_project_value_buffer(v28, (uint64_t)qword_253F08A00);
    v20 = sub_213EF270C();
    v29 = sub_213EF2C94();
    if (!os_log_type_enabled(v20, v29))
      goto LABEL_18;
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_QWORD *)&v35 = v23;
    *(_DWORD *)v22 = 136315138;
    if (qword_254D39FC8 != -1)
      swift_once();
    v30 = qword_254D3BDF0;
    v31 = *(_QWORD *)algn_254D3BDF8;
    swift_bridgeObjectRetain();
    v50[0] = sub_213DB0570(v30, v31, (uint64_t *)&v35);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    v26 = v29;
    v27 = "%s No media item id found in Siri play event, skipping.";
    goto LABEL_17;
  }
  v4 = v35;
  v6 = v36;
  v5 = v37;
  v7 = v38;
  v8 = v39;
  v9 = v40;
  v10 = v41;
  v11 = swift_bridgeObjectRetain();
  sub_213DAEB60(v11, &v35);
  swift_bridgeObjectRelease();
  v12 = v35;
  v14 = v36;
  v13 = v37;
  v16 = v38;
  v15 = v39;
  v17 = v40;
  v18 = v41;
  v50[0] = v4;
  v50[1] = v3;
  v50[2] = v6;
  v50[3] = v5;
  v50[4] = v7;
  v50[5] = v8;
  v50[6] = v9;
  v51 = v10;
  if (*((_QWORD *)&v35 + 1))
  {
    v41 &= 1u;
    v33 = v35;
    v34 = _s28SiriPrivateLearningInference9MediaItemV2eeoiySbAC_ACtFZ_0((uint64_t)v50, (uint64_t)&v35);
    sub_213E05540(v4, v3);
    sub_213DB8408(v33, *((uint64_t *)&v12 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213DB8408(v4, v3);
    if ((v34 & 1) != 0)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v19 = sub_213EF2724();
      __swift_project_value_buffer(v19, (uint64_t)qword_253F08A00);
      v20 = sub_213EF270C();
      v21 = sub_213EF2C94();
      if (!os_log_type_enabled(v20, v21))
        goto LABEL_18;
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      *(_QWORD *)&v35 = v23;
      *(_DWORD *)v22 = 136315138;
      if (qword_254D39FC8 != -1)
        swift_once();
      v24 = qword_254D3BDF0;
      v25 = *(_QWORD *)algn_254D3BDF8;
      swift_bridgeObjectRetain();
      v50[0] = sub_213DB0570(v24, v25, (uint64_t *)&v35);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v26 = v21;
      v27 = "%s Circular in app follow up detected, skipping.";
LABEL_17:
      _os_log_impl(&dword_213DAB000, v20, v26, v27, v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v23, -1, -1);
      MEMORY[0x2199C53C4](v22, -1, -1);
LABEL_18:

      return 0;
    }
  }
  else
  {
    *(_QWORD *)&v35 = v4;
    *((_QWORD *)&v35 + 1) = v3;
    v36 = v6;
    v37 = v5;
    v38 = v7;
    v39 = v8;
    v40 = v9;
    v41 = v10;
    v42 = v12;
    v43 = 0;
    v44 = v14;
    v45 = v13;
    v46 = v16;
    v47 = v15;
    v48 = v17;
    v49 = v18;
    sub_213E054B0((uint64_t *)&v35);
  }
  return 1;
}

uint64_t sub_213E04274(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  char *v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char **v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  ValueMetadata *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  os_log_type_t v130;
  const char *v131;
  uint64_t v132;
  os_log_type_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  ValueMetadata *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  ValueMetadata *v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  ValueMetadata *v158;
  unint64_t v159;

  v148 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v145 = (uint64_t)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v136 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v136 - v8;
  v10 = type metadata accessor for MediaPlayClassification();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v143 = (uint64_t)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v149 = (char *)&v136 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v147 = (char *)&v136 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v146 = (ValueMetadata *)((char *)&v136 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v136 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v136 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v136 - v26;
  v28 = type metadata accessor for FeaturisedTurn(0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v33 = (char *)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v31 + 16);
  if (!v34)
  {
    if (qword_253F04A88 == -1)
    {
LABEL_14:
      v42 = sub_213EF2724();
      __swift_project_value_buffer(v42, (uint64_t)qword_253F08A00);
      v43 = sub_213EF270C();
      v44 = sub_213EF2C94();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v155 = v46;
        *(_DWORD *)v45 = 136315138;
        if (qword_254D39FC8 != -1)
          swift_once();
        v47 = qword_254D3BDF0;
        v48 = *(_QWORD *)algn_254D3BDF8;
        swift_bridgeObjectRetain();
        v150 = sub_213DB0570(v47, v48, &v155);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, v43, v44, "%s Session missing final turn. Skipping.", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v46, -1, -1);
        MEMORY[0x2199C53C4](v45, -1, -1);
      }

      return MEMORY[0x24BEE4AF8];
    }
LABEL_90:
    swift_once();
    goto LABEL_14;
  }
  v141 = v31;
  v142 = v29;
  sub_213DCA7E4(v31+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(_QWORD *)(v30 + 72) * (v34 - 1), (uint64_t)v33, type metadata accessor for FeaturisedTurn);
  if (isSiriPlayMedia(_:)())
  {
    v140 = v22;
    v139 = v7;
    v144 = v33;
    v35 = v148;
    v36 = *(_QWORD *)(v148 + 16);
    if (v36)
    {
      v37 = v148 + 32;
      swift_bridgeObjectRetain();
      v38 = MEMORY[0x24BEE4AF8];
      do
      {
        sub_213DAFDFC(v37, (uint64_t)&v155);
        sub_213DAFDFC((uint64_t)&v155, (uint64_t)&v150);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
        v39 = swift_dynamicCast();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, v39 ^ 1u, 1, v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v155);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          sub_213DAFEC4((uint64_t)v9, &qword_254D3B568);
        }
        else
        {
          sub_213DE4A40((uint64_t)v9, (uint64_t)v27);
          sub_213DE4A40((uint64_t)v27, (uint64_t)v25);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v38 = sub_213DB5ADC(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
          v41 = *(_QWORD *)(v38 + 16);
          v40 = *(_QWORD *)(v38 + 24);
          if (v41 >= v40 >> 1)
            v38 = sub_213DB5ADC(v40 > 1, v41 + 1, 1, v38);
          *(_QWORD *)(v38 + 16) = v41 + 1;
          sub_213DE4A40((uint64_t)v25, v38+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v41);
        }
        v37 += 40;
        --v36;
      }
      while (v36);
      v35 = swift_bridgeObjectRelease();
    }
    else
    {
      v38 = MEMORY[0x24BEE4AF8];
    }
    MEMORY[0x24BDAC7A8](v35);
    v33 = v144;
    *(&v136 - 2) = (uint64_t)v144;
    v57 = sub_213DD1D90((uint64_t (*)(char *))sub_213E0541C, (uint64_t)(&v136 - 4), v38);
    v58 = v57;
    v59 = *(_QWORD *)(v57 + 16);
    v60 = (uint64_t)v147;
    if (v59)
    {
      v61 = v57 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v62 = *(_QWORD *)(v11 + 72);
      swift_bridgeObjectRetain();
      v63 = v61;
      v137 = v59;
      while (1)
      {
        sub_213DCA7E4(v63, v60, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        if (*(_BYTE *)(v60 + 8) != 1)
          break;
        sub_213DCA828(v60, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        v63 += v62;
        if (!--v59)
        {
          swift_bridgeObjectRelease_n();
LABEL_49:
          if (qword_253F04A88 != -1)
            swift_once();
          v81 = sub_213EF2724();
          __swift_project_value_buffer(v81, (uint64_t)qword_253F08A00);
          v82 = sub_213EF270C();
          v83 = sub_213EF2C94();
          if (os_log_type_enabled(v82, v83))
          {
            v84 = (uint8_t *)swift_slowAlloc();
            v85 = swift_slowAlloc();
            v155 = v85;
            *(_DWORD *)v84 = 136315138;
            if (qword_254D39FC8 != -1)
              swift_once();
            v86 = qword_254D3BDF0;
            v87 = *(_QWORD *)algn_254D3BDF8;
            swift_bridgeObjectRetain();
            v150 = sub_213DB0570(v86, v87, &v155);
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_213DAB000, v82, v83, "%s No user followup detected. Skipping.", v84, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2199C53C4](v85, -1, -1);
            MEMORY[0x2199C53C4](v84, -1, -1);
          }

          v70 = (uint64_t)v144;
          goto LABEL_56;
        }
      }
      v138 = v58;
      swift_bridgeObjectRelease();
      v71 = (uint64_t)v146;
      sub_213DE4A40(v60, (uint64_t)v146);
      sub_213DE4A40(v71, (uint64_t)v140);
      v72 = *(_QWORD *)&v144[*(int *)(v142 + 28)];
      v73 = *(_QWORD *)(v72 + 16);
      if (!v73)
      {
LABEL_48:
        swift_bridgeObjectRelease();
        sub_213DCA828((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        goto LABEL_49;
      }
      v75 = *((_QWORD *)v140 + 2);
      v74 = *((_QWORD *)v140 + 3);
      v76 = (char **)(v72 + 64);
      while (1)
      {
        v77 = (uint64_t)*(v76 - 4);
        v78 = (unint64_t)*(v76 - 3);
        v79 = (uint64_t)*(v76 - 2);
        v146 = (ValueMetadata *)*(v76 - 1);
        v147 = *v76;
        v148 = v79;
        if (v77 == v75 && v78 == v74)
          break;
        if ((sub_213EF3234() & 1) != 0)
          goto LABEL_60;
        v76 += 5;
        if (!--v73)
          goto LABEL_48;
      }
      v77 = v75;
      v78 = v74;
LABEL_60:
      swift_bridgeObjectRetain();
      v142 = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v90 = 0;
      v91 = v137;
      v92 = (uint64_t)v149;
      while (1)
      {
        v93 = v90 + 1;
        if (__OFADD__(v90, 1))
          break;
        sub_213DCA7E4(v61, v92, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        if (*(_BYTE *)(v92 + 8) == 1)
        {
          swift_bridgeObjectRelease();
          v95 = (uint64_t)v139;
          sub_213DE4A40(v92, (uint64_t)v139);
          v94 = 0;
LABEL_66:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v95, v94, 1, v10);
          swift_bridgeObjectRelease();
          v96 = v95;
          v97 = v145;
          sub_213E05468(v96, v145);
          v98 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v97, 1, v10);
          v99 = (uint64_t)v144;
          v100 = v148;
          if (v98 == 1)
          {
            v101 = 0;
            v102 = 0;
            v103 = 0;
            v104 = 0;
            v105 = 0;
          }
          else
          {
            v106 = v97;
            v107 = v143;
            sub_213DE4A40(v106, v143);
            Array<A>.findEvent(eventId:)(*(_QWORD *)(v107 + 16), *(_QWORD *)(v107 + 24), v141, &v155);
            sub_213DCA828(v107, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
            v105 = v155;
            v104 = v156;
            v103 = v157;
            v102 = v158;
            v101 = v159;
          }
          v108 = v142;
          v109 = v147;
          v155 = v77;
          v156 = v142;
          v157 = v100;
          v158 = v146;
          v159 = (unint64_t)v147;
          v150 = v105;
          v151 = v104;
          v152 = v103;
          v153 = v102;
          v154 = v101;
          v110 = v99;
          v111 = (uint64_t)v146;
          v112 = sub_213E038AC(v110, (uint64_t)&v155, (uint64_t)&v150);
          if ((v113 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_213DC7B60(v105, v104);
            if (qword_253F04BB0 != -1)
              swift_once();
            v158 = &type metadata for PIMSConstraintMismatch;
            v159 = sub_213DE48B4();
            v155 = 0xD000000000000016;
            v156 = 0x8000000213F06090;
            LOBYTE(v157) = 3;
            sub_213EF210C();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v155);
            v33 = v144;
            if (qword_253F04A88 != -1)
              swift_once();
            v123 = sub_213EF2724();
            __swift_project_value_buffer(v123, (uint64_t)qword_253F08A00);
            v124 = sub_213EF270C();
            v125 = sub_213EF2C94();
            if (!os_log_type_enabled(v124, v125))
              goto LABEL_87;
            v126 = (uint8_t *)swift_slowAlloc();
            v127 = swift_slowAlloc();
            v155 = v127;
            *(_DWORD *)v126 = 136315138;
            if (qword_254D39FC8 != -1)
              swift_once();
            v128 = qword_254D3BDF0;
            v129 = *(_QWORD *)algn_254D3BDF8;
            swift_bridgeObjectRetain();
            v150 = sub_213DB0570(v128, v129, &v155);
            sub_213EF2D9C();
            swift_bridgeObjectRelease();
            v130 = v125;
            v131 = "%s Failed to compute the time taken to followup. Skipping.";
LABEL_86:
            _os_log_impl(&dword_213DAB000, v124, v130, v131, v126, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2199C53C4](v127, -1, -1);
            MEMORY[0x2199C53C4](v126, -1, -1);

            v33 = v144;
          }
          else
          {
            v149 = (char *)v112;
            v155 = v77;
            v156 = v108;
            v157 = v100;
            v158 = (ValueMetadata *)v111;
            v159 = (unint64_t)v109;
            v150 = v105;
            v151 = v104;
            v152 = v103;
            v153 = v102;
            v154 = v101;
            v114 = sub_213E03E04((uint64_t)&v155, (uint64_t)&v150);
            sub_213DC7B60(v105, v104);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v114 & 1) != 0)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A650);
              v88 = swift_allocObject();
              *(_OWORD *)(v88 + 16) = xmmword_213EF53E0;
              v115 = type metadata accessor for MediaInAppFollowupClassification();
              v116 = (uint64_t)v144;
              v117 = (int *)v115;
              *(_QWORD *)(v88 + 56) = v115;
              *(_QWORD *)(v88 + 64) = &off_24D108DF8;
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v88 + 32));
              v119 = (uint64_t)v139;
              sub_213E05468((uint64_t)v139, (uint64_t)boxed_opaque_existential_1);
              v120 = (uint64_t)v140;
              sub_213DCA7E4((uint64_t)v140, (uint64_t)boxed_opaque_existential_1 + v117[5], (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
              v121 = (char *)boxed_opaque_existential_1 + v117[7];
              v122 = sub_213EF1D64();
              (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v121, v116, v122);
              *(uint64_t *)((char *)boxed_opaque_existential_1 + v117[6]) = (uint64_t)v149;
              sub_213DAFEC4(v119, &qword_254D3B568);
              sub_213DCA828(v120, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
              sub_213DCA828(v116, type metadata accessor for FeaturisedTurn);
              return v88;
            }
            v33 = v144;
            if (qword_253F04A88 != -1)
              swift_once();
            v132 = sub_213EF2724();
            __swift_project_value_buffer(v132, (uint64_t)qword_253F08A00);
            v124 = sub_213EF270C();
            v133 = sub_213EF2C94();
            if (os_log_type_enabled(v124, v133))
            {
              v126 = (uint8_t *)swift_slowAlloc();
              v127 = swift_slowAlloc();
              v155 = v127;
              *(_DWORD *)v126 = 136315138;
              if (qword_254D39FC8 != -1)
                swift_once();
              v134 = qword_254D3BDF0;
              v135 = *(_QWORD *)algn_254D3BDF8;
              swift_bridgeObjectRetain();
              v150 = sub_213DB0570(v134, v135, &v155);
              sub_213EF2D9C();
              swift_bridgeObjectRelease();
              v130 = v133;
              v131 = "%s Invalid in app follow up detected. Skipping";
              goto LABEL_86;
            }
LABEL_87:

          }
          sub_213DAFEC4((uint64_t)v139, &qword_254D3B568);
          sub_213DCA828((uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
          goto LABEL_39;
        }
        sub_213DCA828(v92, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayClassification);
        ++v90;
        v61 += v62;
        if (v93 == v91)
        {
          swift_bridgeObjectRelease();
          v94 = 1;
          v95 = (uint64_t)v139;
          goto LABEL_66;
        }
      }
      __break(1u);
      goto LABEL_90;
    }
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v64 = sub_213EF2724();
    __swift_project_value_buffer(v64, (uint64_t)qword_253F08A00);
    v50 = sub_213EF270C();
    v65 = sub_213EF2C94();
    if (os_log_type_enabled(v50, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      v155 = v67;
      *(_DWORD *)v66 = 136315138;
      if (qword_254D39FC8 != -1)
        swift_once();
      v68 = qword_254D3BDF0;
      v69 = *(_QWORD *)algn_254D3BDF8;
      swift_bridgeObjectRetain();
      v150 = sub_213DB0570(v68, v69, &v155);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v50, v65, "%s No media play detected. Skipping.", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v67, -1, -1);
      MEMORY[0x2199C53C4](v66, -1, -1);

      v33 = v144;
      goto LABEL_39;
    }
LABEL_38:

    goto LABEL_39;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v49 = sub_213EF2724();
  __swift_project_value_buffer(v49, (uint64_t)qword_253F08A00);
  v50 = sub_213EF270C();
  v51 = sub_213EF2C94();
  if (!os_log_type_enabled(v50, v51))
    goto LABEL_38;
  v52 = v33;
  v53 = (uint8_t *)swift_slowAlloc();
  v54 = swift_slowAlloc();
  v155 = v54;
  *(_DWORD *)v53 = 136315138;
  if (qword_254D39FC8 != -1)
    swift_once();
  v55 = qword_254D3BDF0;
  v56 = *(_QWORD *)algn_254D3BDF8;
  swift_bridgeObjectRetain();
  v150 = sub_213DB0570(v55, v56, &v155);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, v50, v51, "%s Final turn was not a Siri playMedia request. Skipping", v53, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v54, -1, -1);
  MEMORY[0x2199C53C4](v53, -1, -1);

  v33 = v52;
LABEL_39:
  v70 = (uint64_t)v33;
LABEL_56:
  sub_213DCA828(v70, type metadata accessor for FeaturisedTurn);
  return MEMORY[0x24BEE4AF8];
}

uint64_t type metadata accessor for MediaInAppFollowupClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaInAppFollowupClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaInAppFollowupClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MediaInAppFollowupClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213E0541C()
{
  type metadata accessor for MediaPlayClassification();
  return sub_213EF1D28() & 1;
}

uint64_t sub_213E05468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_213E054B0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[8];
  v3 = a1[9];
  sub_213DB8408(*a1, a1[1]);
  sub_213DB8408(v2, v3);
  return a1;
}

uint64_t sub_213E05540(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_213E0557C()
{
  return swift_initClassMetadata2();
}

BOOL sub_213E055C0()
{
  double *v0;

  return (*(double (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 88) + 96))(*(_QWORD *)(*(_QWORD *)v0 + 80)) < v0[2];
}

uint64_t sub_213E05600()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MinimumScoreNominationFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MinimumScoreNominationFilter);
}

BOOL sub_213E0561C()
{
  return sub_213E055C0();
}

id sub_213E05684()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PICSWipeStoreMigration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PICSWipeStoreMigration()
{
  return objc_opt_self();
}

uint64_t SuccessfulPhoneCallDefinition.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t SuccessfulPhoneCallDefinition.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_213E056EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EC8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF53E0;
  v1 = type metadata accessor for SuccessfulPhoneCallClassifier();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0x4014000000000000;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = &protocol witness table for SuccessfulPhoneCallClassifier;
  *(_QWORD *)(v0 + 32) = v2;
  return v0;
}

uint64_t sub_213E05760@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[40];

  sub_213DAFDFC(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v4 = v10;
    v5 = v11;
    result = v12;
    if (v8 == 1)
    {
      v6 = v9;
      v7 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = 0;
      v6 = 0;
      v4 = 0;
      v5 = 0;
      result = 0;
    }
    *a2 = v7;
    a2[1] = v6;
    a2[2] = v4;
    a2[3] = v5;
    a2[4] = result;
  }
  else
  {
    a2[4] = 0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

double sub_213E05828@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  Array<A>.findEvent(eventId:)(*(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), a1, &v13);
  v4 = v14;
  if (v14)
  {
    v5 = v13;
    v7 = v15;
    v6 = v16;
    v8 = v17;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_213DAE9B4(v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      v11 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRelease();
      if (v11 == 1)
      {
        v13 = v5;
        v14 = v4;
        v15 = v7;
        v16 = v6;
        v17 = v8;
        extractContactReference(event:)((uint64_t)a3);
        sub_213DC7B60(v5, v4);
        return result;
      }
    }
    sub_213DC7B60(v5, v4);
  }
  result = 0.0;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

uint64_t sub_213E05920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRetain();
  v2 = sub_213E7AEA8(2, a1);
  v3 = sub_213E05C00(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_213E05964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v20;

  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = *a4;
  v12 = a4[1];
  v14 = a4[3];
  v20 = a4[2];
  v15 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  v16 = (int *)type metadata accessor for PhoneCallGroundTruth();
  *(_BYTE *)(a5 + v16[5]) = 3;
  *(_QWORD *)(a5 + v16[6]) = a2;
  v17 = (uint64_t *)(a5 + v16[7]);
  *v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  v17[3] = v11;
  v18 = (_QWORD *)(a5 + v16[8]);
  *v18 = v13;
  v18[1] = v12;
  v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_213E05FBC(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t SuccessfulPhoneCallDefinition.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SuccessfulPhoneCallDefinition.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E05A80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_213E05760(a1, a2);
}

double sub_213E05A94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return sub_213E05828(a1, a2, a3);
}

uint64_t sub_213E05AA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRetain();
  v4 = sub_213E7AEA8(2, a1);
  v5 = sub_213E05C00(v4);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_213E05AF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v20;

  v7 = *a2;
  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = *a4;
  v12 = a4[1];
  v14 = a4[3];
  v20 = a4[2];
  v15 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  v16 = (int *)type metadata accessor for PhoneCallGroundTruth();
  *(_BYTE *)(a5 + v16[5]) = 3;
  *(_QWORD *)(a5 + v16[6]) = v7;
  v17 = (uint64_t *)(a5 + v16[7]);
  *v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  v17[3] = v11;
  v18 = (_QWORD *)(a5 + v16[8]);
  *v18 = v13;
  v18[1] = v12;
  v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_213E05FBC(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E05C00(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _QWORD v19[5];
  __int128 v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  unint64_t v24;

  v1 = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    goto LABEL_19;
  v4 = type metadata accessor for FeaturisedTurn(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  for (i = 0; i != v2; ++i)
  {
    v10 = *(_QWORD *)(v6 + v7 * i + *(int *)(v4 + 24));
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(v12, (uint64_t)&v20);
        sub_213DAFDFC((uint64_t)&v20, (uint64_t)v19);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for UsoPersonRecipients();
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
        v12 += 40;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v20, (uint64_t)v22);
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_11:
      v23 = 0;
      memset(v22, 0, sizeof(v22));
    }
    sub_213DAFE40((uint64_t)v22, (uint64_t)&v20);
    if (v21)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for UsoPersonRecipients();
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain();
        sub_213EF23D0();
        swift_release_n();
        v9 = v20;
        sub_213DB848C((uint64_t)v22);
        swift_bridgeObjectRelease();
        sub_213DB470C(v9);
        continue;
      }
    }
    else
    {
      sub_213DB848C((uint64_t)&v20);
    }
    sub_213DB848C((uint64_t)v22);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v1 = v24;
LABEL_19:
  v13 = swift_bridgeObjectRetain();
  v14 = sub_213DDDD2C(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 0xC000000000000001) != 0)
    v15 = sub_213EF2E38();
  else
    v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease();
  if (v15 != 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_213EF306C();
    if (!result)
      goto LABEL_31;
LABEL_25:
    if ((v1 & 0xC000000000000001) != 0)
    {
      v18 = MEMORY[0x2199C49B0](0, v1);
    }
    else
    {
      if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v18 = *(_QWORD *)(v1 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease_n();
    return v18;
  }
  v16 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v16)
    goto LABEL_25;
LABEL_31:
  swift_bridgeObjectRelease_n();
  return 0;
}

BOOL sub_213E05F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  _BOOL8 result;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_213DAF3E0(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return 0;
  if (v1 == 0xD000000000000011 && v2 == 0x8000000213F04860)
    return v4 == 1;
  v7 = sub_213EF3234();
  result = 0;
  if ((v7 & 1) != 0)
    return v4 == 1;
  return result;
}

uint64_t sub_213E05FBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_213E05FF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F04BD0;
  if (!qword_253F04BD0)
  {
    v1 = type metadata accessor for PhoneCallGroundTruth();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PhoneCallGroundTruth, v1);
    atomic_store(result, (unint64_t *)&qword_253F04BD0);
  }
  return result;
}

_UNKNOWN **sub_213E06038()
{
  return &protocol witness table for SuccessfulPhoneCallClassification;
}

uint64_t type metadata accessor for SuccessfulPhoneCallDefinition()
{
  return objc_opt_self();
}

uint64_t method lookup function for SuccessfulPhoneCallDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.successClassifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.identifySuccessClassification(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.isInitiatingEvent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.extractReferencedEntity(session:successClassification:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.extractUsoEntityFromSessionSlice(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

double MessagesAbandonmentClassification.dismissalTimestamp.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t MessagesAbandonmentClassification.referencedTurns.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessagesAbandonmentClassification.referencedTurns.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MessagesAbandonmentClassification.referencedTurns.modify())()
{
  return nullsub_1;
}

uint64_t MessagesAbandonmentClassification.referencedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MessagesAbandonmentClassification.referencedEvents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*MessagesAbandonmentClassification.referencedEvents.modify())()
{
  return nullsub_1;
}

uint64_t MessagesAbandonmentClassification.usoQuery.getter()
{
  return swift_retain();
}

uint64_t MessagesAbandonmentClassification.endTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_213E0615C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E06164()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E0616C()
{
  return swift_retain();
}

uint64_t sub_213E06174()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t destroy for MessagesAbandonmentClassification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *initializeWithCopy for MessagesAbandonmentClassification(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for MessagesAbandonmentClassification(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MessagesAbandonmentClassification(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessagesAbandonmentClassification(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessagesAbandonmentClassification(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessagesAbandonmentClassification()
{
  return &type metadata for MessagesAbandonmentClassification;
}

uint64_t SuccessfulPhoneCallClassifier.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0x4014000000000000;
  return result;
}

uint64_t sub_213E0638C()
{
  uint64_t result;

  type metadata accessor for SuccessfulPhoneCallClassifier();
  __swift_instantiateConcreteTypeFromMangledName(qword_254D3C000);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3BFF0 = 91;
  *(_QWORD *)algn_254D3BFF8 = 0xE100000000000000;
  return result;
}

uint64_t SuccessfulPhoneCallClassifier.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0x4014000000000000;
  return result;
}

uint64_t sub_213E06420@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  _OWORD *v36;
  _QWORD v37[3];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[5];
  uint64_t v43;

  v39 = a2;
  v4 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v9 = a1[3];
  v11 = a1[4];
  v40 = v7;
  v42[0] = v7;
  v42[1] = v8;
  v42[2] = v10;
  v42[3] = v9;
  v42[4] = v11;
  v41 = sub_213E06888(v42);
  if (qword_253F04A88 != -1)
    swift_once();
  v12 = sub_213EF2724();
  __swift_project_value_buffer(v12, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_213EF270C();
  v14 = sub_213EF2C94();
  v15 = os_log_type_enabled(v13, v14);
  v37[2] = v10;
  v38 = v8;
  if (v15)
  {
    v37[1] = v2;
    v16 = swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    v42[0] = v37[0];
    *(_DWORD *)v16 = 136315394;
    if (qword_254D39FD0 != -1)
      swift_once();
    v17 = qword_254D3BFF0;
    v18 = *(_QWORD *)algn_254D3BFF8;
    swift_bridgeObjectRetain();
    v43 = sub_213DB0570(v17, v18, v42);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v8 = v38;
    swift_bridgeObjectRetain();
    v43 = sub_213DB0570(v40, v8, v42);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_213DAB000, v13, v14, "%s Rule matrix for [Event ID: %s]:", (uint8_t *)v16, 0x16u);
    v19 = v37[0];
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v19, -1, -1);
    MEMORY[0x2199C53C4](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v20 = v41;
  sub_213EE84EC(8224, 0xE200000000000000, v41);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = v20 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    v25 = *(_QWORD *)(v23 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v26 = v24 + *(int *)(v22 + 48);
      swift_storeEnumTagMultiPayload();
      sub_213E81FE0(v26, (uint64_t)v6);
      LOBYTE(v26) = v27;
      sub_213DCA828((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
      if ((v26 & 1) == 0)
        break;
      v24 += v25;
      if (!--v21)
      {
        swift_bridgeObjectRelease_n();
        v8 = v38;
        goto LABEL_14;
      }
    }
    result = swift_bridgeObjectRelease_n();
    v36 = (_OWORD *)v39;
    *(_QWORD *)(v39 + 32) = 0;
    *v36 = 0u;
    v36[1] = 0u;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v28 = swift_bridgeObjectRetain();
    v29 = sub_213DAF1F8(v28);
    swift_bridgeObjectRelease();
    v30 = v29 & 1;
    v31 = (uint64_t *)v39;
    *(_QWORD *)(v39 + 24) = &type metadata for SuccessfulPhoneCallClassification;
    v31[4] = (uint64_t)&protocol witness table for SuccessfulPhoneCallClassification;
    v32 = swift_allocObject();
    *v31 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A860);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_213EF53E0;
    v34 = v40;
    *(_QWORD *)(v33 + 32) = v40;
    *(_QWORD *)(v33 + 40) = v8;
    *(_BYTE *)(v32 + 16) = v30;
    *(_QWORD *)(v32 + 24) = v34;
    *(_QWORD *)(v32 + 32) = v8;
    *(_QWORD *)(v32 + 40) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v32 + 48) = v33;
    return swift_bridgeObjectRetain_n();
  }
  return result;
}

uint64_t SuccessfulPhoneCallClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SuccessfulPhoneCallClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E06868(uint64_t a1)
{
  return sub_213E06D04(a1);
}

uint64_t sub_213E06888(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v2 = type metadata accessor for RuleResult();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - v5;
  v7 = *a1;
  v31 = a1[1];
  v32 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07018);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_213EF44B0;
  v13 = (_QWORD *)(v12 + v11);
  v14 = (_QWORD *)((char *)v13 + *(int *)(v8 + 48));
  *v13 = 0xD00000000000001ALL;
  v13[1] = 0x8000000213F067E0;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_213DAF9B4(v15);
  swift_bridgeObjectRelease();
  if (v16 == 2)
  {
    type metadata accessor for PhoneCallEventFeature.CallAnswered(0);
    *v14 = sub_213EF23AC();
    v14[1] = v17;
    v18 = v31;
    v19 = v32;
    v14[2] = v32;
    v14[3] = v18;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_213E07238((uint64_t)v6, (uint64_t)v14);
    v18 = v31;
    v19 = v32;
  }
  v20 = (_QWORD *)((char *)v13 + v10);
  v21 = (_QWORD *)((char *)v20 + *(int *)(v8 + 48));
  v33 = 0;
  v34 = 0xE000000000000000;
  sub_213EF2EB0();
  sub_213EF2904();
  sub_213EF2B8C();
  v22 = v34;
  *v20 = v33;
  v20[1] = v22;
  v23 = swift_bridgeObjectRetain();
  sub_213DAF3EC(v23);
  v25 = v24;
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
    type metadata accessor for PhoneCallEventFeature.CallDuration(0);
    *v21 = sub_213EF23AC();
    v21[1] = v27;
    v21[2] = v19;
    v21[3] = v18;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = (uint64_t)v30;
    swift_storeEnumTagMultiPayload();
    sub_213E07238(v26, (uint64_t)v21);
  }
  return v12;
}

_QWORD *sub_213E06B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14[2];
  uint64_t v15[5];
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v16 = swift_bridgeObjectRetain();
  v3 = (uint64_t *)(v16 + 64);
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v5 = *(v3 - 1);
    v6 = *v3;
    v7 = *(v3 - 3);
    v8 = *(v3 - 2);
    v15[0] = *(v3 - 4);
    v15[1] = v7;
    v15[2] = v8;
    v15[3] = v5;
    v15[4] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_213E06420(v15, (uint64_t)&v12);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13)
    {
      sub_213DB0BF0(&v12, (uint64_t)v14);
      sub_213DB0BF0(v14, (uint64_t)&v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_213DB5B2C(0, v4[2] + 1, 1, v4);
      v10 = v4[2];
      v9 = v4[3];
      if (v10 >= v9 >> 1)
        v4 = sub_213DB5B2C((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
      v4[2] = v10 + 1;
      sub_213DB0BF0(&v12, (uint64_t)&v4[5 * v10 + 4]);
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v12, &qword_253F06998);
    }
    v3 += 5;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213E06D04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD v29[4];
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35[5];
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  uint64_t v40;

  v29[1] = *v1;
  v3 = type metadata accessor for FeaturisedTurn(0);
  result = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v38[0] = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v11 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_213DAFDB8(v10, (uint64_t)v7);
      v12 = *(_QWORD *)&v7[*(int *)(v3 + 28)];
      swift_bridgeObjectRetain();
      sub_213DCA828((uint64_t)v7, type metadata accessor for FeaturisedTurn);
      sub_213DB43F0(v12);
      v10 += v11;
      --v9;
    }
    while (v9);
    result = swift_bridgeObjectRelease();
    v13 = *(_QWORD *)&v38[0];
  }
  else
  {
    v13 = MEMORY[0x24BEE4AF8];
  }
  v40 = v8;
  v32 = *(_QWORD *)(v13 + 16);
  if (v32)
  {
    v14 = 0;
    v31 = v13 + 32;
    v29[3] = "nerationTriggered";
    v30 = 0x8000000213F04860;
    while (1)
    {
      if (v14 >= *(_QWORD *)(v13 + 16))
      {
        __break(1u);
        return result;
      }
      v15 = (uint64_t *)(v31 + 40 * v14);
      v33 = *v15;
      v17 = v15[3];
      v16 = v15[4];
      v18 = v15[2];
      v19 = *(_QWORD *)(v18 + 16);
      v34 = *(_OWORD *)(v15 + 1);
      if (v19)
      {
        v20 = v18 + 32;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_213DAFDFC(v20, (uint64_t)&v36);
          sub_213DAFDFC((uint64_t)&v36, (uint64_t)v35);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          type metadata accessor for CommonFeature.InteractionDirection(0);
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
          v20 += 40;
          if (!--v19)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v36, (uint64_t)v38);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
LABEL_18:
        v39 = 0;
        memset(v38, 0, sizeof(v38));
      }
      sub_213DAFE40((uint64_t)v38, (uint64_t)&v36);
      if (v37)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for CommonFeature.InteractionDirection(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          v21 = v36;
          sub_213DAFEC4((uint64_t)v38, &qword_253F06970);
          swift_bridgeObjectRelease();
          if ((v17 == 0xD000000000000011 && v16 == v30 || (sub_213EF3234() & 1) != 0) && v21 == 1)
          {
            v22 = v40;
            result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              result = sub_213DCD02C(0, *(_QWORD *)(v22 + 16) + 1, 1);
              v22 = v40;
            }
            v23 = v34;
            v25 = *(_QWORD *)(v22 + 16);
            v24 = *(_QWORD *)(v22 + 24);
            if (v25 >= v24 >> 1)
            {
              result = sub_213DCD02C(v24 > 1, v25 + 1, 1);
              v23 = v34;
              v22 = v40;
            }
            *(_QWORD *)(v22 + 16) = v25 + 1;
            v26 = v22 + 40 * v25;
            *(_QWORD *)(v26 + 32) = v33;
            *(_OWORD *)(v26 + 40) = v23;
            *(_QWORD *)(v26 + 56) = v17;
            *(_QWORD *)(v26 + 64) = v16;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
          }
          goto LABEL_10;
        }
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v36, &qword_253F06970);
      }
      sub_213DAFEC4((uint64_t)v38, &qword_253F06970);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
LABEL_10:
      if (++v14 == v32)
      {
        swift_bridgeObjectRelease();
        v27 = v40;
        goto LABEL_34;
      }
    }
  }
  swift_bridgeObjectRelease();
  v27 = MEMORY[0x24BEE4AF8];
LABEL_34:
  swift_retain();
  v28 = sub_213E06B34(v27);
  swift_release();
  swift_release();
  return (uint64_t)v28;
}

uint64_t type metadata accessor for SuccessfulPhoneCallClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for SuccessfulPhoneCallClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SuccessfulPhoneCallClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SuccessfulPhoneCallClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_213E07204()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_213E07238(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RuleResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

SiriPrivateLearningInference::PIMSCoreDataStorePolicies __swiftcall PIMSCoreDataStorePolicies.init()()
{
  _QWORD *v0;
  SiriPrivateLearningInference::PIMSCoreDataStorePolicies result;

  *v0 = 300;
  return result;
}

void PIMSCoreDataStorePolicies.runPolicy(store:)(uint64_t a1)
{
  id v1;

  v1 = *(id *)(a1 + 24);
  sub_213EF2D30();

}

uint64_t sub_213E072F0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_253F04878);
  MEMORY[0x24BDAC7A8](v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  type metadata accessor for MediaSuggestionEvictor();
  v7 = *(_QWORD *)swift_allocObject();
  *(_QWORD *)(swift_allocObject() + 16) = v7;
  sub_213EF2340();
  swift_getKeyPath();
  sub_213EF2580();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04870);
  swift_allocObject();
  v9 = sub_213EF2538();
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = sub_213E0778C();
  *(_QWORD *)(inited + 32) = v9;
  v10 = a2;
  swift_retain();
  v11 = sub_213E077D8(inited, v10, a3);

  swift_release();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04860);
  swift_arrayDestroy();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = (_BYTE *)(v11 + 40);
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      if (*v13 == 1)
      {
        v15 = (void *)*((_QWORD *)v13 - 1);
        v16 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_213DB6A88(0, v14[2] + 1, 1, v14);
        v18 = v14[2];
        v17 = v14[3];
        if (v18 >= v17 >> 1)
          v14 = sub_213DB6A88((_QWORD *)(v17 > 1), v18 + 1, 1, v14);
        v14[2] = v18 + 1;
        v14[v18 + 4] = v15;
      }
      v13 += 16;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  if (!v14[2])
    return swift_bridgeObjectRelease();
  v19 = sub_213EF2364();
  sub_213E0799C();
  swift_allocError();
  *v20 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, *MEMORY[0x24BEA4ED8], v19);
  return swift_willThrow();
}

uint64_t sub_213E075D8()
{
  uint64_t v0;

  return sub_213E072F0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_213E075F4(uint64_t a1)
{
  id v1;

  v1 = *(id *)(*(_QWORD *)a1 + 24);
  sub_213EF2D30();

}

ValueMetadata *type metadata accessor for PIMSCoreDataStorePolicies()
{
  return &type metadata for PIMSCoreDataStorePolicies;
}

uint64_t type metadata accessor for MediaSuggestionEvictor()
{
  uint64_t result;

  result = qword_253F04C00;
  if (!qword_253F04C00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E076AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E076E8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  return sub_213EF2340();
}

uint64_t sub_213E07728()
{
  sub_213EF234C();
  return swift_deallocClassInstance();
}

void sub_213E07744()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_213E07770()
{
  return type metadata accessor for MediaSuggestionEvictor();
}

char *keypath_get_selector_lastUpdated()
{
  return sel_lastUpdated;
}

unint64_t sub_213E0778C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F04868;
  if (!qword_253F04868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253F04870);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEA5138], v1);
    atomic_store(result, (unint64_t *)&qword_253F04868);
  }
  return result;
}

uint64_t sub_213E077D8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *i;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v4 = v3;
  v23 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_213DCD494(0, v5, 0);
    v6 = v22;
    for (i = (_QWORD *)(a1 + 32); ; i += 5)
    {
      v9 = i[3];
      __swift_project_boxed_opaque_existential_1(i, v9);
      v21 = a2;
      sub_213EF216C();
      if (v4)
        break;
      v10 = *(void **)(a3 + 24);
      v21 = 0;
      if ((objc_msgSend(v10, sel_save_, &v21) & 1) == 0)
      {
        v13 = v21;
        v9 = sub_213EF1BA8();

        swift_willThrow();
        goto LABEL_8;
      }
      v11 = v21;
      v12 = 0;
LABEL_9:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_213DCD494(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v22;
      }
      v16 = *(_QWORD *)(v6 + 16);
      v15 = *(_QWORD *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_213DCD494(v15 > 1, v16 + 1, 1);
        v6 = v22;
      }
      *(_QWORD *)(v6 + 16) = v16 + 1;
      v17 = v6 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v9;
      *(_BYTE *)(v17 + 40) = v12;
      if (!--v5)
        return v6;
    }
    v9 = v4;
LABEL_8:
    v4 = 0;
    v12 = 1;
    goto LABEL_9;
  }
  return v6;
}

unint64_t sub_213E0799C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3C020;
  if (!qword_254D3C020)
  {
    v1 = sub_213EF2364();
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEA4EE8], v1);
    atomic_store(result, (unint64_t *)&qword_254D3C020);
  }
  return result;
}

uint64_t sub_213E079E4()
{
  return swift_deallocObject();
}

uint64_t sub_213E079F8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_213EF44B0;
  v3 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE0D00];
  v4 = sub_213E07AFC();
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = 1701667182;
  *(_QWORD *)(v2 + 40) = 0xE400000000000000;
  v5 = objc_msgSend(a1, sel_name);
  if (!v5)
  {
    v10 = (uint64_t *)(v2 + 72);
    *(_QWORD *)(v2 + 96) = v3;
    *(_QWORD *)(v2 + 104) = v4;
    goto LABEL_5;
  }
  v6 = v5;
  v7 = sub_213EF2850();
  v9 = v8;

  v10 = (uint64_t *)(v2 + 72);
  *(_QWORD *)(v2 + 96) = v3;
  *(_QWORD *)(v2 + 104) = v4;
  if (!v9)
  {
LABEL_5:
    *v10 = 0;
    v9 = 0xE000000000000000;
    goto LABEL_6;
  }
  *v10 = v7;
LABEL_6:
  *(_QWORD *)(v2 + 80) = v9;
  sub_213E07B40();
  return sub_213EF2C58();
}

unint64_t sub_213E07AFC()
{
  unint64_t result;

  result = qword_254D3C030;
  if (!qword_254D3C030)
  {
    result = MEMORY[0x2199C52D4](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254D3C030);
  }
  return result;
}

unint64_t sub_213E07B40()
{
  unint64_t result;

  result = qword_254D3C038;
  if (!qword_254D3C038)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3C038);
  }
  return result;
}

uint64_t sub_213E07B7C()
{
  return sub_213E075D8();
}

SiriPrivateLearningInference::CaptureRecord __swiftcall CaptureRecord.init(selfEvents:interactions:contacts:)(Swift::OpaquePointer selfEvents, Swift::OpaquePointer interactions, Swift::OpaquePointer contacts)
{
  Swift::OpaquePointer *v3;
  Swift::OpaquePointer *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[2];
  void *rawValue;
  Swift::OpaquePointer *v23;
  void *v24;
  void *v25;
  SiriPrivateLearningInference::CaptureRecord result;

  v7 = v3;
  v8 = sub_213EF2238();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *((_QWORD *)interactions._rawValue + 2);
  if (v12)
  {
    rawValue = selfEvents._rawValue;
    v23 = v7;
    v24 = contacts._rawValue;
    v25 = (void *)MEMORY[0x24BEE4AF8];
    sub_213EF2F7C();
    v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v21[1] = interactions._rawValue;
    v14 = (char *)interactions._rawValue + v13;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    do
    {
      v16(v11, v14, v8);
      sub_213EF2220();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_213EF2F58();
      sub_213EF2F88();
      sub_213EF2F94();
      sub_213EF2F64();
      v14 += v15;
      --v12;
    }
    while (v12);
    v17 = v25;
    v18 = (void *)swift_bridgeObjectRelease();
    v7 = v23;
    contacts._rawValue = v24;
    selfEvents._rawValue = rawValue;
  }
  else
  {
    v18 = (void *)swift_bridgeObjectRelease();
    v17 = (void *)MEMORY[0x24BEE4AF8];
  }
  v7->_rawValue = selfEvents._rawValue;
  v7[1]._rawValue = v17;
  v7[2]._rawValue = contacts._rawValue;
  result.deviceContacts._rawValue = v20;
  result.interactions._rawValue = v19;
  result.selfEvents._rawValue = v18;
  return result;
}

uint64_t sub_213E07CEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_213E2A71C(*a1, *a2);
}

uint64_t sub_213E07CF8()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213E07DB0()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E07E44()
{
  sub_213EF32F4();
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

uint64_t sub_213E07EF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213E09390();
  *a1 = result;
  return result;
}

void sub_213E07F24(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA00000000007374;
  v4 = 0xEC000000736E6F69;
  v5 = 0x7463617265746E69;
  if (v2 != 1)
  {
    v5 = 0x6F43656369766564;
    v4 = 0xEE0073746361746ELL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6E657645666C6573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_213E07F9C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7463617265746E69;
  if (*v0 != 1)
    v1 = 0x6F43656369766564;
  if (*v0)
    return v1;
  else
    return 0x6E657645666C6573;
}

uint64_t sub_213E08010@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_213E09390();
  *a1 = result;
  return result;
}

uint64_t sub_213E08034()
{
  sub_213E08714();
  return sub_213EF3354();
}

uint64_t sub_213E0805C()
{
  sub_213E08714();
  return sub_213EF3360();
}

uint64_t CaptureRecord.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C040);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E08714();
  sub_213EF333C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v47 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C050);
  v49 = 0;
  v10 = sub_213E08F48(&qword_254D3C058, &qword_254D3C050, (uint64_t (*)(void))sub_213E08758, MEMORY[0x24BEE12D0]);
  sub_213EF3144();
  v45 = v10;
  v46 = v8;
  v12 = v50;
  v13 = MEMORY[0x24BEE4AF8];
  v50 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(v12 + 16);
  v43 = v9;
  v44 = v5;
  if (v14)
  {
    v42 = v6;
    v48 = (uint64_t)a1;
    swift_bridgeObjectRetain();
    v41 = v12;
    v15 = (unint64_t *)(v12 + 40);
    do
    {
      v16 = *(v15 - 1);
      v17 = *v15;
      v18 = objc_allocWithZone(MEMORY[0x24BE95AA0]);
      sub_213E0879C(v16, v17);
      v19 = (void *)sub_213EF1C44();
      sub_213DF8A28(v16, v17);
      v20 = objc_msgSend(v18, sel_initWithData_, v19);

      if (v20)
      {
        MEMORY[0x2199C44C4]();
        if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v15 += 2;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v13 = v50;
    a1 = (_QWORD *)v48;
    v5 = v44;
    v6 = v42;
  }
  swift_bridgeObjectRelease();
  v49 = 1;
  swift_bridgeObjectRetain();
  sub_213EF3144();
  v21 = v47;
  v22 = v50;
  v50 = MEMORY[0x24BEE4AF8];
  v23 = *(_QWORD *)(v22 + 16);
  if (v23)
  {
    v41 = v13;
    v42 = v6;
    v48 = sub_213DB9CDC(0, &qword_254D3C068);
    sub_213DB9CDC(0, &qword_254D3C070);
    swift_bridgeObjectRetain();
    v40 = v22;
    v24 = (unint64_t *)(v22 + 40);
    do
    {
      v26 = *(v24 - 1);
      v25 = *v24;
      sub_213E0879C(v26, *v24);
      v27 = sub_213EF2CC4();
      v28 = sub_213DF8A28(v26, v25);
      if (v27)
      {
        MEMORY[0x2199C44C4](v28);
        if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v24 += 2;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v29 = v50;
    v5 = v44;
    v13 = v41;
    v6 = v42;
    v21 = v47;
  }
  else
  {
    v29 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v49 = 2;
  swift_bridgeObjectRetain();
  sub_213EF3144();
  v30 = v50;
  v31 = MEMORY[0x24BEE4AF8];
  v50 = MEMORY[0x24BEE4AF8];
  v32 = *(_QWORD *)(v30 + 16);
  if (v32)
  {
    v43 = v29;
    v41 = v13;
    v33 = v30;
    v48 = sub_213DB9CDC(0, &qword_254D3C068);
    v45 = sub_213DB9CDC(0, &qword_254D3DF20);
    swift_bridgeObjectRetain();
    v42 = v33;
    v34 = (unint64_t *)(v33 + 40);
    do
    {
      v35 = v6;
      v36 = *(v34 - 1);
      v37 = *v34;
      sub_213E0879C(v36, *v34);
      v38 = sub_213EF2CC4();
      v39 = sub_213DF8A28(v36, v37);
      v6 = v35;
      if (v38)
      {
        MEMORY[0x2199C44C4](v39);
        if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_213EF2A78();
        sub_213EF2AB4();
        sub_213EF2A54();
      }
      v34 += 2;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    v31 = v50;
    v29 = v43;
    v5 = v44;
    v21 = v47;
    v13 = v41;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v46, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v21 = v13;
  v21[1] = v29;
  v21[2] = v31;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_213E08714()
{
  unint64_t result;

  result = qword_254D3C048;
  if (!qword_254D3C048)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF7D18, &type metadata for CaptureRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3C048);
  }
  return result;
}

unint64_t sub_213E08758()
{
  unint64_t result;

  result = qword_254D3C060;
  if (!qword_254D3C060)
  {
    result = MEMORY[0x2199C52D4](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254D3C060);
  }
  return result;
}

uint64_t sub_213E0879C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t CaptureRecord.encode(to:)(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;

  v3 = v2;
  v64 = *MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C078);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v59 = v1[2];
  v60 = v9;
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, *(_QWORD *)(a1 + 24));
  sub_213E08714();
  v11 = v10;
  sub_213EF3348();
  if (v10 >> 62)
    goto LABEL_34;
  v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v55 = v8;
    v56 = v5;
    v57 = v6;
    v58 = v3;
    if (!v12)
    {
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x24BEE4AF8];
      goto LABEL_17;
    }
    v63 = MEMORY[0x24BEE4AF8];
    sub_213DCD4CC(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
      break;
    v13 = 0;
    v14 = v63;
    v61 = (id)(v11 & 0xC000000000000001);
    v15 = v11;
    v16 = v12;
    do
    {
      if (v61)
        v17 = (id)MEMORY[0x2199C49B0](v13, v11);
      else
        v17 = *(id *)(v11 + 8 * v13 + 32);
      v18 = v17;
      v19 = objc_msgSend(v17, sel_data, v55, v56);
      if (v19)
      {
        v20 = v19;
        v21 = sub_213EF1C50();
        v23 = v22;

      }
      else
      {

        v21 = 0;
        v23 = 0xF000000000000000;
      }
      v63 = v14;
      v25 = *(_QWORD *)(v14 + 16);
      v24 = *(_QWORD *)(v14 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_213DCD4CC(v24 > 1, v25 + 1, 1);
        v14 = v63;
      }
      ++v13;
      *(_QWORD *)(v14 + 16) = v25 + 1;
      v26 = v14 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      *(_QWORD *)(v26 + 40) = v23;
      v11 = v15;
    }
    while (v16 != v13);
    swift_bridgeObjectRelease();
    v8 = v55;
    v5 = v56;
LABEL_17:
    v63 = v14;
    LOBYTE(v62) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C080);
    sub_213E08F48(&qword_254D3C088, &qword_254D3C080, sub_213E08FAC, MEMORY[0x24BEE12A0]);
    v27 = v58;
    sub_213EF31BC();
    v10 = v27;
    if (v27)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v8, v5);
    }
    swift_bridgeObjectRelease();
    a1 = v60;
    if (v60 >> 62)
      goto LABEL_36;
    v3 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v58 = 0;
    if (!v3)
      goto LABEL_37;
LABEL_21:
    v63 = MEMORY[0x24BEE4AF8];
    sub_213DCD4B0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
LABEL_61:
      __break(1u);
    }
    v6 = v63;
    v61 = (id)objc_opt_self();
    v10 = 0;
    v8 = (char *)(a1 & 0xC000000000000001);
    while (v3 != v10)
    {
      if (v8)
        v29 = (id)MEMORY[0x2199C49B0](v10, a1);
      else
        v29 = *(id *)(a1 + 8 * v10 + 32);
      v30 = v29;
      v62 = 0;
      v31 = objc_msgSend(v61, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v29, 1, &v62, v55, v56);
      v32 = v62;
      if (!v31)
      {
        v37 = v32;
        sub_213EF1BA8();

        swift_willThrow();
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      v11 = sub_213EF1C50();
      v5 = v33;

      v63 = v6;
      v35 = *(_QWORD *)(v6 + 16);
      v34 = *(_QWORD *)(v6 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_213DCD4B0(v34 > 1, v35 + 1, 1);
        v6 = v63;
      }
      ++v10;
      *(_QWORD *)(v6 + 16) = v35 + 1;
      v36 = v6 + 16 * v35;
      *(_QWORD *)(v36 + 32) = v11;
      *(_QWORD *)(v36 + 40) = v5;
      a1 = v60;
      if (v3 == v10)
      {
        swift_bridgeObjectRelease();
        v10 = v58;
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v12 = sub_213EF306C();
  }
  __break(1u);
LABEL_36:
  swift_bridgeObjectRetain();
  v3 = sub_213EF306C();
  v58 = v10;
  if (v3)
    goto LABEL_21;
LABEL_37:
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x24BEE4AF8];
LABEL_38:
  if (v59 >> 62)
    goto LABEL_54;
  v38 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v38)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x24BEE4AF8];
LABEL_56:
    v63 = v6;
    LOBYTE(v62) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C050);
    sub_213E08F48(&qword_254D3C0A0, &qword_254D3C050, (uint64_t (*)(void))sub_213E08FD0, MEMORY[0x24BEE12A0]);
    v52 = v55;
    v53 = v56;
    sub_213EF31BC();
    v54 = v57;
    if (v10)
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v53);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v63 = v39;
      LOBYTE(v62) = 2;
      sub_213EF31BC();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
    }
    return swift_bridgeObjectRelease();
  }
LABEL_40:
  v63 = MEMORY[0x24BEE4AF8];
  sub_213DCD4B0(0, v38 & ~(v38 >> 63), 0);
  if (v38 < 0)
    goto LABEL_61;
  v39 = v63;
  v40 = (void *)objc_opt_self();
  v10 = 0;
  v41 = v59;
  v60 = v59 & 0xC000000000000001;
  v61 = v40;
  while (1)
  {
    if (v38 == v10)
    {
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      v38 = sub_213EF306C();
      if (!v38)
        goto LABEL_55;
      goto LABEL_40;
    }
    v42 = v60 ? (id)MEMORY[0x2199C49B0](v10) : *(id *)(v41 + 8 * v10 + 32);
    v30 = v42;
    v62 = 0;
    v43 = objc_msgSend(v61, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v42, 1, &v62, v55, v56);
    v44 = v62;
    if (!v43)
      break;
    v45 = sub_213EF1C50();
    v47 = v46;

    v63 = v39;
    v49 = *(_QWORD *)(v39 + 16);
    v48 = *(_QWORD *)(v39 + 24);
    if (v49 >= v48 >> 1)
    {
      sub_213DCD4B0(v48 > 1, v49 + 1, 1);
      v39 = v63;
    }
    ++v10;
    *(_QWORD *)(v39 + 16) = v49 + 1;
    v50 = v39 + 16 * v49;
    *(_QWORD *)(v50 + 32) = v45;
    *(_QWORD *)(v50 + 40) = v47;
    v41 = v59;
    if (v38 == v10)
    {
      swift_bridgeObjectRelease();
      v10 = v58;
      goto LABEL_56;
    }
  }
  v51 = v44;
  sub_213EF1BA8();

  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_52:
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v55, v56);
}

uint64_t sub_213E08F20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CaptureRecord.init(from:)(a1, a2);
}

uint64_t sub_213E08F34(unint64_t a1)
{
  return CaptureRecord.encode(to:)(a1);
}

uint64_t sub_213E08F48(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x2199C52D4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_213E08FAC()
{
  return sub_213E08F48(&qword_254D3C090, &qword_254D3B050, (uint64_t (*)(void))sub_213E08FD0, MEMORY[0x24BEE4AA8]);
}

unint64_t sub_213E08FD0()
{
  unint64_t result;

  result = qword_254D3C098;
  if (!qword_254D3C098)
  {
    result = MEMORY[0x2199C52D4](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_254D3C098);
  }
  return result;
}

uint64_t destroy for CaptureRecord()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s28SiriPrivateLearningInference13CaptureRecordVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CaptureRecord(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CaptureRecord(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CaptureRecord(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CaptureRecord(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CaptureRecord()
{
  return &type metadata for CaptureRecord;
}

uint64_t storeEnumTagSinglePayload for CaptureRecord.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_213E09238 + 4 * byte_213EF7B95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_213E0926C + 4 * byte_213EF7B90[v4]))();
}

uint64_t sub_213E0926C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E09274(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E0927CLL);
  return result;
}

uint64_t sub_213E09288(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E09290);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_213E09294(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E0929C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CaptureRecord.CodingKeys()
{
  return &type metadata for CaptureRecord.CodingKeys;
}

unint64_t sub_213E092BC()
{
  unint64_t result;

  result = qword_254D3C0A8;
  if (!qword_254D3C0A8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF7CF0, &type metadata for CaptureRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3C0A8);
  }
  return result;
}

unint64_t sub_213E09304()
{
  unint64_t result;

  result = qword_254D3C0B0;
  if (!qword_254D3C0B0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF7C28, &type metadata for CaptureRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3C0B0);
  }
  return result;
}

unint64_t sub_213E0934C()
{
  unint64_t result;

  result = qword_254D3C0B8;
  if (!qword_254D3C0B8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF7C50, &type metadata for CaptureRecord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3C0B8);
  }
  return result;
}

uint64_t sub_213E09390()
{
  unint64_t v0;

  v0 = sub_213EF30D8();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t MessagesClassifier.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t MessagesClassifier.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t MessagesClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MessagesClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E0940C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _UNKNOWN **v4;
  uint64_t v5;
  uint64_t v6;
  _UNKNOWN **v7;
  uint64_t v8;
  uint64_t v9;
  _UNKNOWN **v10;
  uint64_t v11;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20[3];
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;
  uint64_t v29[3];
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32[3];
  uint64_t v33;
  _UNKNOWN **v34;
  uint64_t v35[3];
  uint64_t v36;
  _UNKNOWN **v37;

  v21 = type metadata accessor for MessagesAbandonmentClassifier();
  v22 = &protocol witness table for MessagesAbandonmentClassifier;
  v20[0] = swift_allocObject();
  v24 = type metadata accessor for MessagesDeadEndClassifier();
  v25 = &protocol witness table for MessagesDeadEndClassifier;
  v23[0] = swift_allocObject();
  v27 = type metadata accessor for SuccessfulMessageClassifier();
  v28 = &protocol witness table for SuccessfulMessageClassifier;
  v26[0] = swift_allocObject();
  v30 = type metadata accessor for MessagesInAppFollowupClassifier();
  v31 = &protocol witness table for MessagesInAppFollowupClassifier;
  v29[0] = swift_allocObject();
  v33 = type metadata accessor for EntityPromptClassifier();
  v34 = &protocol witness table for EntityPromptClassifier;
  v32[0] = swift_allocObject();
  v36 = type metadata accessor for ContactSuggestionProvidedClassifier();
  v37 = &protocol witness table for ContactSuggestionProvidedClassifier;
  v35[0] = swift_allocObject();
  v19 = MEMORY[0x24BEE4AF8];
  __swift_project_boxed_opaque_existential_1(v20, v21);
  v2 = sub_213E1F79C(a1);
  sub_213DB4AF8(v2);
  v3 = v24;
  v4 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  v5 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v4[1])(a1, v19, v3, v4);
  sub_213DB4AF8(v5);
  v6 = v27;
  v7 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v8 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v7[1])(a1, v19, v6, v7);
  sub_213DB4AF8(v8);
  v9 = v30;
  v10 = v31;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v10[1])(a1, v19, v9, v10);
  sub_213DB4AF8(v11);
  v12 = v33;
  v13 = v34;
  __swift_project_boxed_opaque_existential_1(v32, v33);
  v14 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v13[1])(a1, v19, v12, v13);
  sub_213DB4AF8(v14);
  v15 = v36;
  v16 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  v17 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _UNKNOWN **))v16[1])(a1, v19, v15, v16);
  sub_213DB4AF8(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B08);
  swift_arrayDestroy();
  return v19;
}

uint64_t type metadata accessor for MessagesClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessagesClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesClassifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of MessagesClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213E09708()
{
  uint64_t result;

  type metadata accessor for PLUSMediaSuggesterRuntimeLogHelper();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C198);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3C0C0 = 91;
  *(_QWORD *)algn_254D3C0C8 = 0xE100000000000000;
  return result;
}

void sub_213E09788(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;

  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95818]), sel_init);
  if (v9)
  {
    v22 = v9;
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95780]), sel_init);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957B0]), sel_init);
      if (v12)
      {
        v13 = v12;
        v14 = sub_213E0B354();
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v13, sel_setShadowLogging_, a3 & 1);
          objc_msgSend(v11, sel_setMediaState_, v13);
          objc_msgSend(v22, sel_setSuggestionDomainMetadata_, v15);
          v16 = objc_allocWithZone(MEMORY[0x24BE95C78]);
          v17 = (void *)sub_213EF1D1C();
          v18 = objc_msgSend(v16, sel_initWithNSUUID_, v17);

          objc_msgSend(v22, sel_setOriginalRequestId_, v18);
          objc_msgSend(v22, sel_setIsSuggesterEnabled_, a2 & 1);
          objc_msgSend(v22, sel_setDomainConfiguredState_, v11);
          sub_213E0E8A4((uint64_t)v22, a4, a5);

          v19 = v11;
          v11 = v13;
          v13 = v15;
        }
        else
        {
          v19 = v22;
        }

        v21 = v11;
        v11 = v13;
      }
      else
      {
        v21 = v22;
      }

      v20 = v11;
    }
    else
    {
      v20 = v22;
    }

  }
}

void sub_213E09968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  _QWORD v19[6];
  id v20;

  v5 = v4;
  v10 = *v5;
  v11 = sub_213E0B354();
  if (v11)
  {
    v20 = v11;
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95820]), sel_init);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_setSuggestionDomainMetadata_, v20);
      v14 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v15 = (void *)sub_213EF1D1C();
      v16 = objc_msgSend(v14, sel_initWithNSUUID_, v15);

      objc_msgSend(v13, sel_setOriginalRequestId_, v16);
      MEMORY[0x24BDAC7A8](v17);
      v19[2] = a1;
      v19[3] = a3;
      v19[4] = v10;
      sub_213E44064((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_213E0B52C, (uint64_t)v19, a2);
      sub_213DB9CDC(0, &qword_254D3C1A0);
      v18 = (void *)sub_213EF2A30();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setMatchedResults_, v18);

      objc_msgSend(v13, sel_setMatchedResultsPopulated_, *(_QWORD *)(a2 + 16) != 0);
      sub_213E0E8B8((uint64_t)v13, a3, a4);

    }
    else
    {

    }
  }
}

void *sub_213E09B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58[2];
  char v59;
  ValueMetadata *v60;
  unint64_t v61;
  uint64_t v62;

  v56 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B80);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlusMediaSuggestion();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_213EF1D64();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v57 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v53 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v53 - v23;
  v25 = a4;
  v27 = v26;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v54(v22, v25, v26);
  v55 = a2;
  sub_213EF1D10();
  sub_213EA372C((uint64_t)v22, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v27) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v27);
    sub_213E0B594(v56, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_213DAFEC4((uint64_t)v8, &qword_253F04B80);
    }
    else
    {
      sub_213DBB430((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for PlusMediaSuggestion);
      v36 = sub_213E0A8C0((uint64_t)v12);
      if (v36)
      {
        v37 = v36;
        v38 = PlusMediaSuggestion.surfacedBefore.getter();
        sub_213DEA4CC((uint64_t)v12);
        if ((v38 & 1) != 0)
          v39 = 1;
        else
          v39 = 2;
        v40 = v17;
LABEL_27:
        v35 = sub_213E0B5DC((uint64_t)v24, v39, (uint64_t)v37);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v27);
        return v35;
      }
      sub_213DEA4CC((uint64_t)v12);
    }
    v40 = v17;
    v41 = v57;
    if (qword_253F04BB0 != -1)
      swift_once();
    v60 = &type metadata for PIMSConstraintMismatch;
    v61 = sub_213DE48B4();
    v58[0] = 0xD000000000000016;
    v58[1] = 0x8000000213F06090;
    v59 = 13;
    sub_213EF210C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
    if (qword_253F04A88 != -1)
      swift_once();
    v42 = sub_213EF2724();
    __swift_project_value_buffer(v42, (uint64_t)qword_253F08A00);
    v54(v41, v55, v27);
    v43 = sub_213EF270C();
    v44 = sub_213EF2CA0();
    if (os_log_type_enabled(v43, v44))
    {
      v56 = v40;
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v58[0] = v46;
      *(_DWORD *)v45 = 136315394;
      if (qword_254D39FD8 != -1)
        swift_once();
      v47 = qword_254D3C0C0;
      v48 = *(_QWORD *)algn_254D3C0C8;
      swift_bridgeObjectRetain();
      v62 = sub_213DB0570(v47, v48, v58);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      sub_213E0B898();
      v49 = v57;
      v50 = sub_213EF31F8();
      v62 = sub_213DB0570(v50, v51, v58);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      v40 = v56;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v27);
      _os_log_impl(&dword_213DAB000, v43, v44, "%s PIMS %s not found in suggestion store, emitting PLUSSchemaPLUSSuggestionMatchResult with nil suggestionValue", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v46, -1, -1);
      MEMORY[0x2199C53C4](v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v27);
    }

    v39 = 0;
    v37 = 0;
    goto LABEL_27;
  }
  sub_213DAFEC4((uint64_t)v15, &qword_253F04828);
  if (qword_253F04A88 != -1)
    swift_once();
  v28 = sub_213EF2724();
  __swift_project_value_buffer(v28, (uint64_t)qword_253F08A00);
  v29 = sub_213EF270C();
  v30 = sub_213EF2CA0();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v58[0] = v32;
    *(_DWORD *)v31 = 136315138;
    if (qword_254D39FD8 != -1)
      swift_once();
    v33 = qword_254D3C0C0;
    v34 = *(_QWORD *)algn_254D3C0C8;
    swift_bridgeObjectRetain();
    v62 = sub_213DB0570(v33, v34, v58);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v29, v30, "%s Failed to generated suggestionId", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v32, -1, -1);
    MEMORY[0x2199C53C4](v31, -1, -1);
  }

  return 0;
}

void sub_213E0A1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  int *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  uint64_t v28;

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95828]), sel_init);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95808]), sel_init);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95810]), sel_init);
      if (v12)
      {
        v27 = v12;
        v13 = (int *)type metadata accessor for PimsSuggestionMetadata();
        -[NSObject setLocality:](v27, sel_setLocality_, dword_213EF7E38[*(char *)(a3 + v13[5])]);
        LOBYTE(v28) = *(_BYTE *)(a3 + v13[6]);
        -[NSObject setServerTreatment:](v27, sel_setServerTreatment_, sub_213E8EE48((char *)&v28));
        LOBYTE(v28) = *(_BYTE *)(a3 + v13[7]);
        -[NSObject setClientTreatment:](v27, sel_setClientTreatment_, sub_213E8EE5C((char *)&v28));
        objc_msgSend(v11, sel_setMediaMetadata_, v27);
        v14 = sub_213E0B354();
        objc_msgSend(v9, sel_setSuggestionDomainMetadata_, v14);

        v15 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v16 = (void *)sub_213EF1D1C();
        v17 = objc_msgSend(v15, sel_initWithNSUUID_, v16);

        objc_msgSend(v9, sel_setSuggestionLinkId_, v17);
        v18 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v19 = (void *)sub_213EF1D1C();
        v20 = objc_msgSend(v18, sel_initWithNSUUID_, v19);

        objc_msgSend(v9, sel_setOriginalRequestId_, v20);
        objc_msgSend(v9, sel_setSuggestionSurfaced_, sub_213EF2418());
        objc_msgSend(v9, sel_setSuggestionNoveltyState_, sub_213EF2424());
        objc_msgSend(v9, sel_setDomainSuggestionMetadata_, v11);
        sub_213E0E8CC((uint64_t)v9, a4, a5);

LABEL_14:
        return;
      }

    }
    else
    {
      v11 = v9;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v21 = sub_213EF2724();
  __swift_project_value_buffer(v21, (uint64_t)qword_253F08A00);
  v27 = sub_213EF270C();
  v22 = sub_213EF2CA0();
  if (!os_log_type_enabled(v27, v22))
    goto LABEL_14;
  v23 = (uint8_t *)swift_slowAlloc();
  v24 = swift_slowAlloc();
  v28 = v24;
  *(_DWORD *)v23 = 136315138;
  if (qword_254D39FD8 != -1)
    swift_once();
  v25 = qword_254D3C0C0;
  v26 = *(_QWORD *)algn_254D3C0C8;
  swift_bridgeObjectRetain();
  sub_213DB0570(v25, v26, &v28);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, v27, v22, "%s Failed to create PLUSSuggesterSuggestionMetadataReported", v23, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v24, -1, -1);
  MEMORY[0x2199C53C4](v23, -1, -1);

}

void sub_213E0A5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  uint64_t v22;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95830]), sel_init);
  if (v7)
  {
    v21 = v7;
    v8 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v9 = (void *)sub_213EF1D1C();
    v10 = objc_msgSend(v8, sel_initWithNSUUID_, v9);

    -[NSObject setSuggestionLinkId:](v21, sel_setSuggestionLinkId_, v10);
    v11 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v12 = (void *)sub_213EF1D1C();
    v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

    -[NSObject setOriginalRequestId:](v21, sel_setOriginalRequestId_, v13);
    v14 = sub_213E0B354();
    -[NSObject setSuggestionDomainMetadata:](v21, sel_setSuggestionDomainMetadata_, v14);

    -[NSObject setSuggestionRedundancyState:](v21, sel_setSuggestionRedundancyState_, sub_213EF2430());
    sub_213E0E8E0((uint64_t)v21, a4, a5);
LABEL_9:

    return;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v15 = sub_213EF2724();
  __swift_project_value_buffer(v15, (uint64_t)qword_253F08A00);
  v21 = sub_213EF270C();
  v16 = sub_213EF2CA0();
  if (!os_log_type_enabled(v21, v16))
    goto LABEL_9;
  v17 = (uint8_t *)swift_slowAlloc();
  v18 = swift_slowAlloc();
  v22 = v18;
  *(_DWORD *)v17 = 136315138;
  if (qword_254D39FD8 != -1)
    swift_once();
  v19 = qword_254D3C0C0;
  v20 = *(_QWORD *)algn_254D3C0C8;
  swift_bridgeObjectRetain();
  sub_213DB0570(v19, v20, &v22);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, v21, v16, "%s Failed to create PLUSSchemaPLUSSuggesterSuggestionRedundancyReported", v17, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v18, -1, -1);
  MEMORY[0x2199C53C4](v17, -1, -1);

}

void *sub_213E0A8C0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957E0]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957F8]), sel_init);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95868]), sel_init);
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v5, sel_setSourceType_, 1);
        v8 = type metadata accessor for PlusMediaSuggestion();
        sub_213E0ABC4(*(_QWORD *)(a1 + *(int *)(v8 + 28)));
        sub_213DB9CDC(0, qword_254D3C1A8);
        v9 = (void *)sub_213EF2A30();
        swift_bridgeObjectRelease();
        objc_msgSend(v3, sel_setContributingGroundTruths_, v9);

        objc_msgSend(v3, sel_setSource_, v5);
        v10 = sub_213E1B62C((uint64_t)&unk_24D1002F8);
        v11 = sub_213EA78A8(*(_QWORD *)(a1 + *(int *)(v8 + 44)), v10);
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          v12 = 2;
        else
          v12 = 1;
        objc_msgSend(v3, sel_setLocality_, v12);
        objc_msgSend(v7, sel_setMediaSuggestion_, v3);

        return v7;
      }

    }
    else
    {
      v5 = v3;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v13 = sub_213EF2724();
  __swift_project_value_buffer(v13, (uint64_t)qword_253F08A00);
  v14 = sub_213EF270C();
  v15 = sub_213EF2CA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    v21 = v17;
    *(_DWORD *)v16 = 136315138;
    if (qword_254D39FD8 != -1)
      swift_once();
    v18 = qword_254D3C0C0;
    v19 = *(_QWORD *)algn_254D3C0C8;
    swift_bridgeObjectRetain();
    sub_213DB0570(v18, v19, &v21);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v14, v15, "%s Failure creating SELF message objects", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v17, -1, -1);
    MEMORY[0x2199C53C4](v16, -1, -1);
  }

  return 0;
}

uint64_t sub_213E0ABC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;

  v2 = v1;
  v4 = type metadata accessor for ThinMediaGroundTruth();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)&v40 - v10;
  v11 = (_QWORD *)MEMORY[0x24BEE4B00];
  v48 = (_QWORD *)MEMORY[0x24BEE4B00];
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v40 = a1;
    v41 = v2;
    v13 = *(unsigned __int8 *)(v9 + 80);
    v14 = (v13 + 32) & ~v13;
    v15 = a1 + v14;
    v16 = *(_QWORD *)(v9 + 72);
    v43 = v13 | 7;
    v44 = v16 + v14;
    swift_bridgeObjectRetain();
    v42 = xmmword_213EF53E0;
    v45 = v14;
    v46 = v7;
    while (1)
    {
      v18 = v47;
      sub_213DEB148(v15, v47);
      v19 = *(_BYTE *)(v18 + *(int *)(v4 + 24));
      v21 = sub_213DFA678(v19);
      v22 = v11[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        break;
      v25 = v20;
      if (v11[3] < v24)
      {
        sub_213DFD238(v24, 1);
        v11 = v48;
        v26 = sub_213DFA678(v19);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_20;
        v21 = v26;
      }
      if ((v25 & 1) != 0)
      {
        v28 = v4;
        v29 = v11[7];
        sub_213DBB430(v47, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
        v30 = *(_QWORD *)(v29 + 8 * v21);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v29 + 8 * v21) = v30;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v30 = sub_213DB6338(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
          *(_QWORD *)(v29 + 8 * v21) = v30;
        }
        v33 = *(_QWORD *)(v30 + 16);
        v32 = *(_QWORD *)(v30 + 24);
        if (v33 >= v32 >> 1)
        {
          v30 = sub_213DB6338(v32 > 1, v33 + 1, 1, v30);
          *(_QWORD *)(v29 + 8 * v21) = v30;
        }
        v4 = v28;
        *(_QWORD *)(v30 + 16) = v33 + 1;
        v14 = v45;
        v17 = v30 + v45 + v33 * v16;
        v7 = v46;
        sub_213DBB430((uint64_t)v46, v17, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7D8);
        v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = v42;
        sub_213DBB430(v47, v34 + v14, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
        v11[(v21 >> 6) + 8] |= 1 << v21;
        *(_BYTE *)(v11[6] + v21) = v19;
        *(_QWORD *)(v11[7] + 8 * v21) = v34;
        v35 = v11[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_19;
        v11[2] = v37;
      }
      v15 += v16;
      if (!--v12)
      {
        v8 = swift_bridgeObjectRelease();
        v2 = v41;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    result = sub_213EF3288();
    __break(1u);
  }
  else
  {
LABEL_17:
    MEMORY[0x24BDAC7A8](v8);
    *(&v40 - 2) = v2;
    v38 = sub_213E0B140((uint64_t)v11, (uint64_t (*)(_BYTE *, uint64_t))sub_213E0B8E0);
    swift_release();
    return v38;
  }
  return result;
}

void *sub_213E0AED4(char *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v3 = *a1;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957D8]), sel_init);
  if (v4)
  {
    v5 = v4;
    if ((v3 & 0x80000000) != 0)
    {
      if ((v3 & 0x7F) - 1 < 2)
        v6 = 1;
      else
        v6 = 5;
    }
    else
    {
      v6 = dword_213EF7E48[v3];
    }
    objc_msgSend(v4, sel_setSource_, v6);
    if (!(*(_QWORD *)(a2 + 16) >> 31))
    {
      objc_msgSend(v5, sel_setGroundTruthCount_);
      return v5;
    }
    __break(1u);
    goto LABEL_17;
  }
  if (qword_253F04A88 != -1)
LABEL_17:
    swift_once();
  v7 = sub_213EF2724();
  __swift_project_value_buffer(v7, (uint64_t)qword_253F08A00);
  v8 = sub_213EF270C();
  v9 = sub_213EF2CA0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v10 = 136315138;
    if (qword_254D39FD8 != -1)
      swift_once();
    v12 = qword_254D3C0C0;
    v13 = *(_QWORD *)algn_254D3C0C8;
    swift_bridgeObjectRetain();
    sub_213DB0570(v12, v13, &v15);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v8, v9, "%s Failed to create PLUSSchemaPLUSMediaGroundTruthSummary", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v11, -1, -1);
    MEMORY[0x2199C53C4](v10, -1, -1);
  }

  return 0;
}

uint64_t sub_213E0B0FC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PLUSMediaSuggesterRuntimeLogHelper()
{
  return objc_opt_self();
}

uint64_t sub_213E0B140(uint64_t a1, uint64_t (*a2)(_BYTE *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[8];
  uint64_t v19;
  uint64_t v20;

  v20 = MEMORY[0x24BEE4AF8];
  v17 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (v6)
  {
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v11 = v10 | (v9 << 6);
LABEL_22:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v11);
    v18[0] = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v11);
    v19 = v15;
    swift_bridgeObjectRetain();
    v16 = a2(v18, v15);
    result = swift_bridgeObjectRelease();
    if (v16)
    {
      MEMORY[0x2199C44C4](result);
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      result = sub_213EF2A54();
    }
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v12 >= v7)
    goto LABEL_26;
  v13 = *(_QWORD *)(v17 + 8 * v12);
  ++v9;
  if (v13)
    goto LABEL_21;
  v9 = v12 + 1;
  if (v12 + 1 >= v7)
    goto LABEL_26;
  v13 = *(_QWORD *)(v17 + 8 * v9);
  if (v13)
    goto LABEL_21;
  v9 = v12 + 2;
  if (v12 + 2 >= v7)
    goto LABEL_26;
  v13 = *(_QWORD *)(v17 + 8 * v9);
  if (v13)
    goto LABEL_21;
  v9 = v12 + 3;
  if (v12 + 3 >= v7)
    goto LABEL_26;
  v13 = *(_QWORD *)(v17 + 8 * v9);
  if (v13)
  {
LABEL_21:
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_22;
  }
  v14 = v12 + 4;
  if (v14 >= v7)
  {
LABEL_26:
    swift_release();
    return v20;
  }
  v13 = *(_QWORD *)(v17 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v7)
      goto LABEL_26;
    v13 = *(_QWORD *)(v17 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_213E0B354()
{
  id v0;
  id v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95840]), sel_init);
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_setSuggestionGenerationDomain_, 3);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v2 = sub_213EF2724();
    __swift_project_value_buffer(v2, (uint64_t)qword_253F08A00);
    v3 = sub_213EF270C();
    v4 = sub_213EF2CA0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v10 = v6;
      *(_DWORD *)v5 = 136315138;
      if (qword_254D39FD8 != -1)
        swift_once();
      v7 = qword_254D3C0C0;
      v8 = *(_QWORD *)algn_254D3C0C8;
      swift_bridgeObjectRetain();
      sub_213DB0570(v7, v8, &v10);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v3, v4, "%s Failure creating PLUSSchemaPLUSSuggestionDomainMetadata", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v6, -1, -1);
      MEMORY[0x2199C53C4](v5, -1, -1);
    }

    return 0;
  }
  return v1;
}

void *sub_213E0B52C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3AF68);
  result = sub_213E09B34(v5, a1, a1 + *(int *)(v7 + 48), v6);
  *a2 = result;
  return result;
}

uint64_t sub_213E0B594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_213E0B5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95850]), sel_init);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95838]), sel_init);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95858]), sel_init);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_setSurfacedBeforeStatus_, a2);
        objc_msgSend(v8, sel_setSuggestionValue_, a3);
        objc_msgSend(v8, sel_setSuggestionMetadata_, v10);
        v11 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v12 = (void *)sub_213EF1D1C();
        v13 = objc_msgSend(v11, sel_initWithNSUUID_, v12);

        objc_msgSend(v6, sel_setSuggestionId_, v13);
        objc_msgSend(v6, sel_setGeneratedSuggestion_, v8);

        return v6;
      }

    }
    else
    {
      v8 = v6;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v14 = sub_213EF2724();
  __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
  v15 = sub_213EF270C();
  v16 = sub_213EF2CA0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v18;
    *(_DWORD *)v17 = 136315138;
    if (qword_254D39FD8 != -1)
      swift_once();
    v19 = qword_254D3C0C0;
    v20 = *(_QWORD *)algn_254D3C0C8;
    swift_bridgeObjectRetain();
    sub_213DB0570(v19, v20, &v22);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v15, v16, "%s Failure creating PLUSSchemaPLUSSuggestionMatchResult message", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v18, -1, -1);
    MEMORY[0x2199C53C4](v17, -1, -1);
  }

  return 0;
}

unint64_t sub_213E0B898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253F06938;
  if (!qword_253F06938)
  {
    v1 = sub_213EF1D64();
    result = MEMORY[0x2199C52D4](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_253F06938);
  }
  return result;
}

void *sub_213E0B8E0(char *a1, uint64_t a2)
{
  return sub_213E0AED4(a1, a2);
}

uint64_t sub_213E0B8E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_213E0B970()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 120));
  return v0;
}

uint64_t sub_213E0B9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v1 = static InferenceLogUtils.loggerTag<A>(_:)();
    *(_QWORD *)(v0 + 16) = v1;
    *(_QWORD *)(v0 + 24) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_213E0BA2C()
{
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ScoreStep();
}

uint64_t sub_213E0D3F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)v1 + 96) + 24))(a1, *(_QWORD *)(*(_QWORD *)v1 + 88), *(_QWORD *)(*(_QWORD *)v1 + 96));
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_213EF2A90();
  swift_getAssociatedConformanceWitness();
  sub_213EF2784();
  v2 = sub_213EF2AE4();
  sub_213EF27C0();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12C8], v2);
  sub_213EF29D0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_213E0D580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_213EF2D6C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(a3, AssociatedConformanceWitness);
  v10 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a2, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, a3);
  swift_getAssociatedConformanceWitness();
  sub_213EF27C0();
  return sub_213EF27D8();
}

BOOL sub_213E0D708(unsigned __int8 *a1)
{
  return *a1 - 3 < 2;
}

BOOL sub_213E0D71C(_BYTE *a1)
{
  return (*a1 & 0xFE) == 6;
}

uint64_t sub_213E0D730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 16))(a2, a1);
}

uint64_t sub_213E0D74C()
{
  sub_213E0B970();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CandidateProcessor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CandidateProcessor);
}

uint64_t sub_213E0D77C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_213E0D580(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_213E0D798()
{
  return swift_getAtKeyPath();
}

uint64_t sub_213E0D7C0()
{
  if ((sub_213EF29E8() & 1) != 0)
    return 0;
  if ((sub_213EF29E8() & 1) != 0)
    return 2;
  return 1;
}

unint64_t sub_213E0D840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3C230;
  if (!qword_254D3C230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3BCD8);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3C230);
  }
  return result;
}

uint64_t sub_213E0D88C()
{
  uint64_t result;

  type metadata accessor for SELFEventLogEmitters();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C248);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3C238 = 91;
  unk_254D3C240 = 0xE100000000000000;
  return result;
}

void sub_213E0D90C(uint64_t a1, uint64_t a2)
{
  sub_213E0E450(a1, a2, (SEL *)&selRef_setPhoneCallMetadataExtracted_, "%s Failed to create PLUS SELF event templates");
}

void sub_213E0D920(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  void *v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  NSObject *v15;
  uint64_t v16;

  v6 = sub_213E0EB50();
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95770]), sel_init);
    if (v8)
    {
      v15 = v8;
      -[NSObject setGeneratedSuggestion:](v8, sel_setGeneratedSuggestion_, a1);
      -[NSObject setIsSuggestionUpdated:](v15, sel_setIsSuggestionUpdated_, a3 & 1);
      objc_msgSend(v7, sel_setContactSuggestionGenerated_, v15);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
      sub_213EF23E8();

LABEL_11:
      return;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v9 = sub_213EF2724();
  __swift_project_value_buffer(v9, (uint64_t)qword_253F08A00);
  v15 = sub_213EF270C();
  v10 = sub_213EF2CA0();
  if (!os_log_type_enabled(v15, v10))
    goto LABEL_11;
  v11 = (uint8_t *)swift_slowAlloc();
  v12 = swift_slowAlloc();
  v16 = v12;
  *(_DWORD *)v11 = 136315138;
  if (qword_254D39FE0 != -1)
    swift_once();
  v13 = qword_254D3C238;
  v14 = unk_254D3C240;
  swift_bridgeObjectRetain();
  sub_213DB0570(v13, v14, &v16);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, v15, v10, "%s Failed to create PLUS SELF event templates", v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v12, -1, -1);
  MEMORY[0x2199C53C4](v11, -1, -1);

}

void sub_213E0DB80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_213E0EB50();
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95728]), sel_init);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel_setGroundTruth_, a1);
      sub_213DBDD88(a2, (uint64_t)v8);
      v13 = sub_213EF1D64();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
      {
        sub_213E0EC38((uint64_t)v8);
        v15 = 0;
      }
      else
      {
        v22 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v23 = (void *)sub_213EF1D1C();
        v15 = objc_msgSend(v22, sel_initWithNSUUID_, v23);

        (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
      }
      objc_msgSend(v12, sel_setOriginalPlusId_, v15);

      objc_msgSend(v10, sel_setContactGroundTruthGenerated_, v12);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
      sub_213EF23E8();

      return;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v16 = sub_213EF2724();
  __swift_project_value_buffer(v16, (uint64_t)qword_253F08A00);
  v25 = sub_213EF270C();
  v17 = sub_213EF2CA0();
  if (os_log_type_enabled(v25, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v27 = v19;
    *(_DWORD *)v18 = 136315138;
    if (qword_254D39FE0 != -1)
      swift_once();
    v20 = qword_254D3C238;
    v21 = unk_254D3C240;
    swift_bridgeObjectRetain();
    v26 = sub_213DB0570(v20, v21, &v27);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v25, v17, "%s Failed to create SELF message templates", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v19, -1, -1);
    MEMORY[0x2199C53C4](v18, -1, -1);

  }
  else
  {

  }
}

void sub_213E0DEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_213E0EB50();
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE957D0]), sel_init);
    if (v12)
    {
      v13 = v12;
      sub_213DBDD88(a3, (uint64_t)v9);
      v14 = sub_213EF1D64();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
      {
        sub_213E0EC38((uint64_t)v9);
        v16 = 0;
      }
      else
      {
        v23 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v24 = (void *)sub_213EF1D1C();
        v16 = objc_msgSend(v23, sel_initWithNSUUID_, v24);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
      }
      objc_msgSend(v13, sel_setOriginalRequestId_, v16);

      objc_msgSend(v13, sel_setGroundTruth_, a1);
      objc_msgSend(v11, sel_setMediaGroundTruthGenerated_, v13);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
      sub_213EF23E8();

      return;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v17 = sub_213EF2724();
  __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
  v26 = sub_213EF270C();
  v18 = sub_213EF2CA0();
  if (os_log_type_enabled(v26, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v28 = v20;
    *(_DWORD *)v19 = 136315138;
    if (qword_254D39FE0 != -1)
      swift_once();
    v21 = qword_254D3C238;
    v22 = unk_254D3C240;
    swift_bridgeObjectRetain();
    v27 = sub_213DB0570(v21, v22, &v28);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v26, v18, "%s Failed to create SELF message templates", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v20, -1, -1);
    MEMORY[0x2199C53C4](v19, -1, -1);

  }
  else
  {

  }
}

void sub_213E0E214(uint64_t a1, uint64_t a2)
{
  sub_213E0E238(a1, a2, (SEL *)&selRef_setContactSuggesterQueryContext_);
}

void sub_213E0E220(uint64_t a1, uint64_t a2)
{
  sub_213E0E238(a1, a2, (SEL *)&selRef_setContactSuggesterRequestMetadataReported_);
}

void sub_213E0E22C(uint64_t a1, uint64_t a2)
{
  sub_213E0E238(a1, a2, (SEL *)&selRef_setContactSuggesterSuggestionMetadataReported_);
}

void sub_213E0E238(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  os_log_t oslog;
  uint64_t v14;

  v6 = sub_213E0EB50();
  if (v6)
  {
    oslog = v6;
    objc_msgSend(v6, *a3, a1);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 40));
    sub_213EF2400();
LABEL_9:

    return;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v7 = sub_213EF2724();
  __swift_project_value_buffer(v7, (uint64_t)qword_253F08A00);
  oslog = (os_log_t)sub_213EF270C();
  v8 = sub_213EF2CA0();
  if (!os_log_type_enabled(oslog, v8))
    goto LABEL_9;
  v9 = (uint8_t *)swift_slowAlloc();
  v10 = swift_slowAlloc();
  v14 = v10;
  *(_DWORD *)v9 = 136315138;
  if (qword_254D39FE0 != -1)
    swift_once();
  v11 = qword_254D3C238;
  v12 = unk_254D3C240;
  swift_bridgeObjectRetain();
  sub_213DB0570(v11, v12, &v14);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, oslog, v8, "%s Failed to create SELF message templates", v9, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v10, -1, -1);
  MEMORY[0x2199C53C4](v9, -1, -1);

}

void sub_213E0E43C(uint64_t a1, uint64_t a2)
{
  sub_213E0E450(a1, a2, (SEL *)&selRef_setInferencePluginInvocationContext_, "%s Failed to create SELF event wrapper message templates");
}

void sub_213E0E450(uint64_t a1, uint64_t a2, SEL *a3, const char *a4)
{
  uint64_t v4;
  NSObject *v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  os_log_t oslog;
  uint64_t v16;

  v8 = sub_213E0EB50();
  if (v8)
  {
    oslog = v8;
    objc_msgSend(v8, *a3, a1);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
    sub_213EF23E8();
LABEL_9:

    return;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v9 = sub_213EF2724();
  __swift_project_value_buffer(v9, (uint64_t)qword_253F08A00);
  oslog = (os_log_t)sub_213EF270C();
  v10 = sub_213EF2CA0();
  if (!os_log_type_enabled(oslog, v10))
    goto LABEL_9;
  v11 = (uint8_t *)swift_slowAlloc();
  v12 = swift_slowAlloc();
  v16 = v12;
  *(_DWORD *)v11 = 136315138;
  if (qword_254D39FE0 != -1)
    swift_once();
  v13 = qword_254D3C238;
  v14 = unk_254D3C240;
  swift_bridgeObjectRetain();
  sub_213DB0570(v13, v14, &v16);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, oslog, v10, a4, v11, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v12, -1, -1);
  MEMORY[0x2199C53C4](v11, -1, -1);

}

void sub_213E0E668(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  os_log_t oslog;
  uint64_t v13;

  v3 = sub_213E0EB50();
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95870]), sel_init);
    if (v5)
    {
      oslog = v5;
      -[NSObject setUsoGraphTier1:](v5, sel_setUsoGraphTier1_, a1);
      objc_msgSend(v4, sel_setUsoGraphTier1_, oslog);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
      sub_213EF2400();

LABEL_11:
      return;
    }

  }
  if (qword_253F04A88 != -1)
    swift_once();
  v6 = sub_213EF2724();
  __swift_project_value_buffer(v6, (uint64_t)qword_253F08A00);
  oslog = (os_log_t)sub_213EF270C();
  v7 = sub_213EF2CA0();
  if (!os_log_type_enabled(oslog, v7))
    goto LABEL_11;
  v8 = (uint8_t *)swift_slowAlloc();
  v9 = swift_slowAlloc();
  v13 = v9;
  *(_DWORD *)v8 = 136315138;
  if (qword_254D39FE0 != -1)
    swift_once();
  v10 = qword_254D3C238;
  v11 = unk_254D3C240;
  swift_bridgeObjectRetain();
  sub_213DB0570(v10, v11, &v13);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, oslog, v7, "%s Failed to create SELF message templates for USOGraphTier1", v8, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v9, -1, -1);
  MEMORY[0x2199C53C4](v8, -1, -1);

}

void sub_213E0E8A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213E0E8F4(a1, a2, a3, (SEL *)&selRef_setPlusSuggesterMetadataReported_, "%s Failed to create SELF message templates for PLUSSchemaPLUSSuggesterMetadataReported");
}

void sub_213E0E8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213E0E8F4(a1, a2, a3, (SEL *)&selRef_setPlusSuggesterQueried_, "%s Failed to create SELF message templates for PLUSSchemaPLUSSuggesterQueried");
}

void sub_213E0E8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213E0E8F4(a1, a2, a3, (SEL *)&selRef_setPlusSuggesterSuggestionMetadataReported_, "%s Failed to create SELF message templates for PLUSSchemaPLUSSuggesterSuggestionMetadataReported");
}

void sub_213E0E8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_213E0E8F4(a1, a2, a3, (SEL *)&selRef_setPlusSuggesterSuggestionRedundancyReported_, "%s Failed to create SELF message templates for PLUSSchemaPLUSSuggesterSuggestionRedundancyReported");
}

void sub_213E0E8F4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4, const char *a5)
{
  uint64_t v5;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  os_log_t oslog;
  uint64_t v17;

  v9 = sub_213E0EB50();
  if (v9)
  {
    oslog = v9;
    objc_msgSend(v9, *a4, a1);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 40));
    sub_213EF23F4();
LABEL_9:

    return;
  }
  if (qword_253F04A88 != -1)
    swift_once();
  v10 = sub_213EF2724();
  __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
  oslog = (os_log_t)sub_213EF270C();
  v11 = sub_213EF2CA0();
  if (!os_log_type_enabled(oslog, v11))
    goto LABEL_9;
  v12 = (uint8_t *)swift_slowAlloc();
  v13 = swift_slowAlloc();
  v17 = v13;
  *(_DWORD *)v12 = 136315138;
  if (qword_254D39FE0 != -1)
    swift_once();
  v14 = qword_254D3C238;
  v15 = unk_254D3C240;
  swift_bridgeObjectRetain();
  sub_213DB0570(v14, v15, &v17);
  sub_213EF2D9C();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_213DAB000, oslog, v11, a5, v12, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x2199C53C4](v13, -1, -1);
  MEMORY[0x2199C53C4](v12, -1, -1);

}

uint64_t sub_213E0EB0C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SELFEventLogEmitters()
{
  return objc_opt_self();
}

void *sub_213E0EB50()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95710]), sel_init);
  if (!v0)
    return 0;
  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95718]), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = v1;
    v5 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v6 = (void *)sub_213EF1D1C();
    v7 = objc_msgSend(v5, sel_initWithNSUUID_, v6);

    objc_msgSend(v3, sel_setPlusId_, v7);
    objc_msgSend(v1, sel_setEventMetadata_, v3);
    v1 = v3;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t sub_213E0EC38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SuggestionSignalScorerV1()
{
  return objc_opt_self();
}

uint64_t sub_213E0ECAC(uint64_t a1)
{
  return sub_213E0F244(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.UniqueIdentifier);
}

uint64_t sub_213E0ECB8(uint64_t a1)
{
  return sub_213E0F2A0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.UniqueIdentifier);
}

uint64_t CommonFeature.DonatedBySiri.__allocating_init(value:)()
{
  swift_allocObject();
  return sub_213EF23C4();
}

{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t CommonFeature.DonatedBySiri.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t CommonFeature.DonatedBySiri.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E0EDB4()
{
  type metadata accessor for CommonFeature.DonatedBySiri(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E0EDFC()
{
  type metadata accessor for CommonFeature.DonatedBySiri(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E0EE50(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t sub_213E0EE5C(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO14StartTimestampC5valueAESd_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t CommonFeature.EndTimestamp.init(value:)()
{
  return sub_213EF23C4();
}

uint64_t sub_213E0EEE4(uint64_t a1)
{
  return sub_213E0EEF0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EndTimestamp);
}

uint64_t sub_213E0EEF0(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E0EF40(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EndTimestamp);
}

uint64_t sub_213E0EF4C(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t CommonFeature.OrderingTimestamp.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_213EF1CF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_213EF23C4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_213DEE490(a1, (uint64_t)v4);
  v5 = sub_213EF23B8();
  swift_retain();
  sub_213DC3ED8(a1);
  if (v5)
    swift_release();
  return v5;
}

uint64_t CommonFeature.OrderingTimestamp.init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_213EF1CF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = sub_213EF23C4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v2);
  sub_213DEE490(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_213EF23B8();
  swift_retain();
  sub_213DC3ED8(a1);
  if (v4)
    swift_release();
  return v4;
}

uint64_t sub_213E0F238(uint64_t a1)
{
  return sub_213E0F244(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EventType);
}

uint64_t sub_213E0F244(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E0F294(uint64_t a1)
{
  return sub_213E0F2A0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EventType);
}

uint64_t sub_213E0F2A0(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO9EventTypeC5valueAESS_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO16UniqueIdentifierC5valueAESS_tcfc_0()
{
  return sub_213EF23C4();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO16UniqueIdentifierC5valueAESgSSSg_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO16UniqueIdentifierC5valueAESgSSSg_tcfc_0()
{
  return sub_213EF23B8();
}

uint64_t sub_213E0F3E8(uint64_t a1)
{
  return sub_213E0F244(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.BundleID);
}

uint64_t sub_213E0F3F4(uint64_t a1)
{
  return sub_213E0F2A0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.BundleID);
}

uint64_t sub_213E0F40C(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.InteractionDirection);
}

uint64_t sub_213E0F418(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.InteractionDirection);
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO20InteractionDirectionC5valueAESo013INInteractionH0V_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t CommonFeature.IntentHandlingStatus.init(value:)()
{
  return sub_213EF23C4();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO14StartTimestampC5valueAESgSdSg_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t _s28SiriPrivateLearningInference13CommonFeatureO14StartTimestampC5valueAESgSdSg_tcfc_0()
{
  return sub_213EF23B8();
}

uint64_t sub_213E0F51C(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.IntentHandlingStatus);
}

uint64_t sub_213E0F528(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E0F570(uint64_t a1)
{
  return sub_213E0EF4C(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.IntentHandlingStatus);
}

uint64_t CommonFeature.StartTimestamp.__allocating_init(value:)(uint64_t a1)
{
  return sub_213E0F5B4(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.StartTimestamp);
}

{
  return sub_213E0F6F0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.StartTimestamp);
}

uint64_t type metadata accessor for CommonFeature.StartTimestamp(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C3B0);
}

uint64_t CommonFeature.EndTimestamp.__allocating_init(value:)(uint64_t a1)
{
  return sub_213E0F5B4(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EndTimestamp);
}

{
  return sub_213E0F6F0(a1, (void (*)(_QWORD))type metadata accessor for CommonFeature.EndTimestamp);
}

uint64_t sub_213E0F5B4(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  BOOL v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_213DEE490(a1, (uint64_t)v6);
  v7 = sub_213EF1CF8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (v9 == 1)
  {
    sub_213DC3ED8((uint64_t)v6);
    v10 = 0;
  }
  else
  {
    sub_213EF1CD4();
    v10 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  a2(0);
  swift_allocObject();
  v14 = v10;
  v15 = v9 == 1;
  v12 = sub_213EF23B8();
  sub_213DC3ED8(a1);
  return v12;
}

uint64_t type metadata accessor for CommonFeature.EndTimestamp(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C400);
}

uint64_t sub_213E0F6F0(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;

  sub_213EF1CD4();
  a2(0);
  swift_allocObject();
  v4 = sub_213EF23C4();
  v5 = sub_213EF1CF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

ValueMetadata *type metadata accessor for CommonFeature()
{
  return &type metadata for CommonFeature;
}

uint64_t type metadata accessor for CommonFeature.UniqueIdentifier(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C310);
}

uint64_t sub_213E0F7A0()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F7AC()
{
  return type metadata accessor for CommonFeature.UniqueIdentifier(0);
}

uint64_t type metadata accessor for CommonFeature.DonatedBySiri(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C360);
}

uint64_t sub_213E0F7C8()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F7D4()
{
  return type metadata accessor for CommonFeature.DonatedBySiri(0);
}

uint64_t sub_213E0F7DC()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F7E8()
{
  return type metadata accessor for CommonFeature.StartTimestamp(0);
}

uint64_t sub_213E0F7F0()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F7FC()
{
  return type metadata accessor for CommonFeature.EndTimestamp(0);
}

uint64_t type metadata accessor for CommonFeature.OrderingTimestamp(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C450);
}

uint64_t sub_213E0F818()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F824()
{
  return type metadata accessor for CommonFeature.OrderingTimestamp(0);
}

uint64_t type metadata accessor for CommonFeature.EventType(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C4A0);
}

uint64_t sub_213E0F840()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F84C()
{
  return type metadata accessor for CommonFeature.EventType(0);
}

uint64_t type metadata accessor for CommonFeature.BundleID(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C4F0);
}

uint64_t sub_213E0F868()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F874()
{
  return type metadata accessor for CommonFeature.BundleID(0);
}

uint64_t type metadata accessor for CommonFeature.InteractionDirection(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C540);
}

uint64_t sub_213E0F890()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F89C()
{
  return type metadata accessor for CommonFeature.InteractionDirection(0);
}

uint64_t type metadata accessor for CommonFeature.IntentHandlingStatus(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C590);
}

uint64_t sub_213E0F8B8()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E0F8C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E0F8FC()
{
  return type metadata accessor for CommonFeature.IntentHandlingStatus(0);
}

uint64_t UserFeedbackLearningInferenceFeature.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_213E0F984 + 4 * byte_213EF80B0[*v0]))(0xD00000000000001DLL, 0x8000000213F05300);
}

unint64_t sub_213E0F984()
{
  return 0xD000000000000011;
}

uint64_t sub_213E0F9BC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 10;
}

uint64_t sub_213E0F9CC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 12;
}

uint64_t sub_213E0F9DC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 5;
}

void sub_213E0F9EC()
{
  JUMPOUT(0x213E0F9F8);
}

SiriPrivateLearningInference::UserFeedbackLearningInferenceFeature_optional __swiftcall UserFeedbackLearningInferenceFeature.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::UserFeedbackLearningInferenceFeature_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static UserFeedbackLearningInferenceFeature.allCases.getter()
{
  return &unk_24D100400;
}

void sub_213E0FA68(char *a1)
{
  sub_213E2A85C(*a1);
}

void sub_213E0FA74()
{
  char *v0;

  sub_213E2B6A4(0, *v0);
}

void sub_213E0FA80(uint64_t a1)
{
  char *v1;

  sub_213E2AF70(a1, *v1);
}

void sub_213E0FA88(uint64_t a1)
{
  char *v1;

  sub_213E2B6A4(a1, *v1);
}

SiriPrivateLearningInference::UserFeedbackLearningInferenceFeature_optional sub_213E0FA90(Swift::String *a1)
{
  return UserFeedbackLearningInferenceFeature.init(rawValue:)(*a1);
}

uint64_t sub_213E0FA9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UserFeedbackLearningInferenceFeature.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_213E0FAC0(_QWORD *a1@<X8>)
{
  *a1 = &unk_24D100400;
}

_QWORD *UserFeedbackLearningInferenceFeatureResolver.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = (_QWORD *)swift_allocObject();
  v1 = type metadata accessor for InferenceFeatures.InferenceFeatureManager();
  swift_allocObject();
  v2 = InferenceFeatures.InferenceFeatureManager.init()();
  v3 = MEMORY[0x24BEA4D80];
  v0[5] = v1;
  v0[6] = v3;
  v0[2] = v2;
  return v0;
}

_QWORD *UserFeedbackLearningInferenceFeatureResolver.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for InferenceFeatures.InferenceFeatureManager();
  swift_allocObject();
  v2 = InferenceFeatures.InferenceFeatureManager.init()();
  v3 = MEMORY[0x24BEA4D80];
  v0[5] = v1;
  v0[6] = v3;
  v0[2] = v2;
  return v0;
}

uint64_t sub_213E0FB90(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  uint64_t v11;
  char v12;

  v2 = v1;
  v4 = sub_213EF26E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40));
  sub_213EF22F8();
  v12 = v8;
  sub_213E0FEC4((uint64_t)&v12);
  LOBYTE(v2) = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v2 & 1;
}

uint64_t sub_213E0FC5C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_213EF26E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  swift_bridgeObjectRetain();
  sub_213EF26D0();
  LOBYTE(v10) = (_BYTE)a1;
  sub_213E0FEC4((uint64_t)&v10);
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

void sub_213E0FEC4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_213E0FEFC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD v4[13];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  if (qword_253F04A48 != -1)
    swift_once();
  v1 = qword_253F04A38;
  v4[3] = sub_213EF2160();
  v4[4] = MEMORY[0x24BEA4C48];
  v4[0] = v1;
  swift_retain();
  v2 = sub_213EF2304();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2 & 1;
}

uint64_t UserFeedbackLearningInferenceFeatureResolver.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return v0;
}

uint64_t UserFeedbackLearningInferenceFeatureResolver.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocClassInstance();
}

unint64_t sub_213E101D8()
{
  unint64_t result;

  result = qword_254D3C5E0;
  if (!qword_254D3C5E0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for UserFeedbackLearningInferenceFeature, &type metadata for UserFeedbackLearningInferenceFeature);
    atomic_store(result, (unint64_t *)&qword_254D3C5E0);
  }
  return result;
}

unint64_t sub_213E10220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3C5E8;
  if (!qword_254D3C5E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3C5F0);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3C5E8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MediaSuggestionTag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserFeedbackLearningInferenceFeature(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_213E10348 + 4 * byte_213EF80C5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_213E1037C + 4 * byte_213EF80C0[v4]))();
}

uint64_t sub_213E1037C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E10384(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E1038CLL);
  return result;
}

uint64_t sub_213E10398(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E103A0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_213E103A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E103AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserFeedbackLearningInferenceFeature()
{
  return &type metadata for UserFeedbackLearningInferenceFeature;
}

uint64_t type metadata accessor for UserFeedbackLearningInferenceFeatureResolver()
{
  return objc_opt_self();
}

uint64_t method lookup function for UserFeedbackLearningInferenceFeatureResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserFeedbackLearningInferenceFeatureResolver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UserFeedbackLearningInferenceFeatureResolver.isEnabled(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of UserFeedbackLearningInferenceFeatureResolver.isEnabled(_:in:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t INSendMessageIntentFeatureExtractor.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t INSendMessageIntentFeatureExtractor.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t INSendMessageIntentFeatureExtractor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t INSendMessageIntentFeatureExtractor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E10448(uint64_t a1)
{
  MEMORY[0x2199C52D4](&protocol conformance descriptor for INSendMessageIntentFeatureExtractor, a1);
  return sub_213EF249C();
}

uint64_t sub_213E1047C()
{
  MEMORY[0x2199C52D4](&protocol conformance descriptor for INSendMessageIntentFeatureExtractor);
  return sub_213EF24A8();
}

uint64_t sub_213E104BC(void **a1)
{
  return sub_213E104C4(*a1);
}

uint64_t sub_213E104C4(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = objc_msgSend(a1, sel_recipients);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = v1;
  sub_213E108CC();
  v4 = sub_213EF2A3C();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_4;
    goto LABEL_23;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3D540);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_213EF44B0;
    v26 = type metadata accessor for CommonFeature.EventType(0);
    swift_allocObject();
    v27 = sub_213EF23C4();
    *(_QWORD *)(v2 + 56) = v26;
    v28 = MEMORY[0x24BEA4F80];
    *(_QWORD *)(v2 + 64) = sub_213DB196C(&qword_254D3D550, 255, type metadata accessor for CommonFeature.EventType, MEMORY[0x24BEA4F80]);
    *(_QWORD *)(v2 + 32) = v27;
    v29 = type metadata accessor for CommonContactFeature.RecipientContactReferences();
    swift_allocObject();
    v30 = sub_213EF23C4();
    *(_QWORD *)(v2 + 96) = v29;
    *(_QWORD *)(v2 + 104) = sub_213DB196C(&qword_254D3C6C0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CommonContactFeature.RecipientContactReferences, v28);
    *(_QWORD *)(v2 + 72) = v30;
    return v2;
  }
LABEL_4:
  v35 = v2;
  result = sub_213DCD4F8(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v31 = v4 & 0xC000000000000001;
    v32 = v5;
    v33 = v4;
    while (1)
    {
      v8 = v31 ? (id)MEMORY[0x2199C49B0](v7, v4) : *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      v10 = objc_msgSend(v8, sel_displayName, v31);
      v34 = sub_213EF2850();
      v12 = v11;

      v13 = objc_msgSend(v9, sel_contactIdentifier);
      if (v13)
      {
        v14 = v13;
        v15 = sub_213EF2850();
        v17 = v16;

      }
      else
      {
        v15 = 0;
        v17 = 0;
      }
      v18 = objc_msgSend(v9, sel_personHandle);
      v19 = v18;
      if (!v18)
        break;
      v20 = objc_msgSend(v18, sel_label);

      if (!v20)
      {

        v19 = 0;
        goto LABEL_17;
      }
      v19 = (void *)sub_213EF2850();
      v22 = v21;

LABEL_18:
      v24 = *(_QWORD *)(v35 + 16);
      v23 = *(_QWORD *)(v35 + 24);
      if (v24 >= v23 >> 1)
        sub_213DCD4F8(v23 > 1, v24 + 1, 1);
      ++v7;
      *(_QWORD *)(v35 + 16) = v24 + 1;
      v25 = (_QWORD *)(v35 + 48 * v24);
      v4 = v33;
      v25[4] = v34;
      v25[5] = v12;
      v25[6] = v15;
      v25[7] = v17;
      v25[8] = v19;
      v25[9] = v22;
      if (v32 == v7)
        goto LABEL_23;
    }

LABEL_17:
    v22 = 0;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_213E10834(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_253F06E88, a2, (uint64_t (*)(uint64_t))type metadata accessor for INSendMessageIntentFeatureExtractor, (uint64_t)&protocol conformance descriptor for INSendMessageIntentFeatureExtractor);
}

uint64_t type metadata accessor for INSendMessageIntentFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t sub_213E10880(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(qword_253F04D30, a2, (uint64_t (*)(uint64_t))type metadata accessor for INSendMessageIntentFeatureExtractor, (uint64_t)&protocol conformance descriptor for INSendMessageIntentFeatureExtractor);
}

uint64_t method lookup function for INSendMessageIntentFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of INSendMessageIntentFeatureExtractor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of INSendMessageIntentFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

unint64_t sub_213E108CC()
{
  unint64_t result;

  result = qword_254D3C6B8;
  if (!qword_254D3C6B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254D3C6B8);
  }
  return result;
}

uint64_t sub_213E10908(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  int isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_34;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_213EF306C())
  {
    v31 = v1 & 0xC000000000000001;
    v3 = MEMORY[0x24BEE4AF8];
    v4 = 4;
    v5 = v1;
    while (1)
    {
      v7 = v4 - 4;
      if (!v31)
        break;
      v8 = MEMORY[0x2199C49B0](v4 - 4, v1);
      v1 = v4 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_29;
LABEL_11:
      v9 = sub_213E10DE4(v8);
      swift_release();
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v3 + 16);
      v12 = v11 + v10;
      if (__OFADD__(v11, v10))
        goto LABEL_30;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v12 <= *(_QWORD *)(v3 + 24) >> 1)
      {
        if (*(_QWORD *)(v9 + 16))
          goto LABEL_20;
      }
      else
      {
        if (v11 <= v12)
          v14 = v11 + v10;
        else
          v14 = v11;
        v3 = sub_213DB6B94(isUniquelyReferenced_nonNull_native, v14, 1, v3);
        if (*(_QWORD *)(v9 + 16))
        {
LABEL_20:
          v15 = *(_QWORD *)(v3 + 16);
          v16 = (*(_QWORD *)(v3 + 24) >> 1) - v15;
          v17 = type metadata accessor for PlusMediaSuggestion();
          if (v16 < v10)
            goto LABEL_32;
          v18 = *(_QWORD *)(v17 - 8);
          v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          v20 = *(_QWORD *)(v18 + 72);
          v21 = v3 + v19 + v20 * v15;
          v22 = v9 + v19;
          v23 = v20 * v10;
          v24 = v21 + v23;
          v25 = v22 + v23;
          if (v22 < v24 && v21 < v25)
          {
            swift_release_n();
            result = sub_213EF30A8();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v10)
          {
            v27 = *(_QWORD *)(v3 + 16);
            v28 = __OFADD__(v27, v10);
            v29 = v27 + v10;
            if (v28)
              goto LABEL_33;
            *(_QWORD *)(v3 + 16) = v29;
          }
          goto LABEL_5;
        }
      }
      if (v10)
        goto LABEL_31;
LABEL_5:
      swift_bridgeObjectRelease();
      ++v4;
      v6 = v1 == v2;
      v1 = v5;
      if (v6)
        goto LABEL_36;
    }
    v8 = *(_QWORD *)(v1 + 8 * v4);
    swift_retain();
    v1 = v4 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_11;
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v3 = MEMORY[0x24BEE4AF8];
LABEL_36:
  swift_bridgeObjectRelease();
  swift_release_n();
  return v3;
}

uint64_t sub_213E10B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  sub_213E10BF0(a1, a2, a3, a4);
  return v8;
}

_QWORD *sub_213E10BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t *boxed_opaque_existential_1;

  type metadata accessor for AdaptiveMediaSuggestionNominator();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C788);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  v4[2] = 91;
  v4[3] = 0xE100000000000000;
  v4[8] = a3;
  v4[9] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v4 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v4[4] = a2;
  return v4;
}

uint64_t AdaptiveMediaSuggestionNominator.__allocating_init<A>(candidateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  type metadata accessor for MediaSuggestionCandidateNominator();
  swift_allocObject();
  v9 = sub_213E75DA0();
  v10 = swift_allocObject();
  sub_213E10BF0((uint64_t)v8, v9, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  return v10;
}

uint64_t sub_213E10DA0(unint64_t a1)
{
  swift_retain();
  return sub_213E10908(a1);
}

uint64_t sub_213E10DE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27[2];
  uint64_t v28[10];
  _OWORD v29[5];
  _OWORD v30[6];

  v2 = v1;
  v4 = *v1;
  v5 = v1[8];
  v6 = v1[9];
  v26 = v1 + 5;
  __swift_project_boxed_opaque_existential_1(v1 + 5, v5);
  *(_QWORD *)&v30[0] = a1;
  v7 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v6 + 24))(v30, v5, v6);
  v8 = sub_213E70CE4(v7);
  sub_213E6EFF8(a1, v28);
  if (qword_253F04A88 != -1)
    swift_once();
  v9 = sub_213EF2724();
  __swift_project_value_buffer(v9, (uint64_t)qword_253F08A00);
  swift_retain();
  sub_213DEA434(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213DEA3D4);
  v10 = sub_213EF270C();
  v11 = sub_213EF2C94();
  if (os_log_type_enabled(v10, v11))
  {
    v24 = v4;
    v25 = a1;
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v27[0] = v13;
    *(_DWORD *)v12 = 136315394;
    v15 = v1[2];
    v14 = v1[3];
    swift_bridgeObjectRetain();
    *(_QWORD *)&v30[0] = sub_213DB0570(v15, v14, v27);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_213E033BC((uint64_t)v28, (uint64_t)v29);
    if (*((_QWORD *)&v29[0] + 1) == 1)
    {
      v16 = 0xE700000000000000;
      v17 = 0x3E726F7272453CLL;
    }
    else
    {
      v30[2] = v29[2];
      v30[3] = v29[3];
      v30[4] = v29[4];
      v30[0] = v29[0];
      v30[1] = v29[1];
      v17 = sub_213E52E68();
      v16 = v18;
    }
    v4 = v24;
    sub_213DB0570(v17, v16, v27);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DEA434(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213DC071C);
    sub_213DEA434(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213DC071C);
    _os_log_impl(&dword_213DAB000, v10, v11, "%s Updating nomination status for candidates with query=%s:", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v13, -1, -1);
    MEMORY[0x2199C53C4](v12, -1, -1);

    a1 = v25;
  }
  else
  {
    swift_release();
    sub_213DEA434(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213DC071C);
    sub_213DEA434(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_213DC071C);

  }
  swift_bridgeObjectRetain();
  v19 = sub_213E11A9C(v7, v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v21 = v2[8];
  v20 = v2[9];
  __swift_project_boxed_opaque_existential_1(v26, v21);
  v27[0] = a1;
  (*(void (**)(uint64_t *, unint64_t, uint64_t, uint64_t))(v20 + 32))(v27, v19, v21, v20);
  v22 = sub_213E11724(v19);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_213E1113C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v15;

  v6 = type metadata accessor for PlusMediaSuggestion();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B80);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_213E76658(a1, a2);
  sub_213E11284(v13 & 1, a1, (uint64_t)v12);
  sub_213DE6348(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_213DEA488((uint64_t)v9, a3);
    sub_213DAFEC4((uint64_t)v12, &qword_253F04B80);
  }
  else
  {
    sub_213DEA4CC((uint64_t)v9);
    sub_213DEA488((uint64_t)v12, a3);
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
}

uint64_t sub_213E11284@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  _DWORD v17[4];
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  char *v21;
  _OWORD v22[3];
  __int16 v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PlusMediaSuggestion();
  v10 = *(_QWORD *)(a2 + *(int *)(v9 + 44));
  if (*(_QWORD *)(v10 + 16))
  {
    sub_213EF32F4();
    sub_213EF28BC();
    v11 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v17[3] = a1;
      v18 = a2;
      v19 = a3;
      v20 = "nominationBlocked";
      v21 = "Type_Song";
      __asm { BR              X9 }
    }
  }
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
  v12 = sub_213EF1D64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v23 = 0;
  memset(v22, 0, sizeof(v22));
  swift_bridgeObjectRetain();
  v13 = sub_213ECE3EC((uint64_t)&unk_24D0FFB70, v10);
  sub_213E2BA18((uint64_t)v8, 0, (char **)v22, 0, 0, 1, v13, 0, a3, v15, v16);
  swift_bridgeObjectRelease();
  sub_213DAFEC4((uint64_t)v8, &qword_253F04828);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 0, 1, v9);
}

uint64_t AdaptiveMediaSuggestionNominator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t AdaptiveMediaSuggestionNominator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdaptiveMediaSuggestionNominator()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdaptiveMediaSuggestionNominator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdaptiveMediaSuggestionNominator.nominate(queries:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_213E11724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[8];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = type metadata accessor for PlusMediaSuggestion();
  v3 = MEMORY[0x24BDAC7A8](v16);
  v13[4] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v13 - v6;
  result = MEMORY[0x24BEE4AF8];
  v18 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v9 = 0;
    v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v13[1] = v1;
    v13[2] = v10;
    v14 = a1 + v10;
    v13[3] = MEMORY[0x24BEE4AF8];
    v17 = *(_QWORD *)(v5 + 72);
    v13[6] = "nominationBlocked";
    v13[7] = "Type_Song";
    v13[5] = "previouslyNominated";
    do
    {
      sub_213DE6348(v14 + v17 * v9, (uint64_t)v7);
      v11 = *(_QWORD *)&v7[*(int *)(v16 + 44)];
      if (*(_QWORD *)(v11 + 16))
      {
        sub_213EF32F4();
        sub_213EF28BC();
        v12 = sub_213EF3330() & ~(-1 << *(_BYTE *)(v11 + 32));
        if (((*(_QWORD *)(v11 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          __asm { BR              X9 }
      }
      sub_213DEA4CC((uint64_t)v7);
      ++v9;
    }
    while (v9 != v15);
    return v18;
  }
  return result;
}

unint64_t sub_213E11A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04B80);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for PlusMediaSuggestion();
  v9 = *(_QWORD *)(v27 - 8);
  v10 = MEMORY[0x24BDAC7A8](v27);
  v26 = (uint64_t)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v25 = (uint64_t)&v22 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v22 = a1;
  v23 = v14;
  v15 = a1 + v14;
  v16 = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x24BEE4AF8];
  v24 = a3;
  do
  {
    sub_213E1113C(v15, v28, (uint64_t)v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v27) == 1)
    {
      sub_213DAFEC4((uint64_t)v8, &qword_253F04B80);
    }
    else
    {
      v18 = v25;
      sub_213DEA488((uint64_t)v8, v25);
      sub_213DEA488(v18, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_213DB6B94(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_213DB6B94(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_213DEA488(v26, v17 + v23 + v20 * v16);
    }
    v15 += v16;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t dispatch thunk of SuggestionCandidate.query.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SuggestionCandidate.entity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of SuggestionCandidate.score.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of SuggestionCandidate.scoreHistory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of SuggestionCandidate.init(query:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of SuggestionCandidate.updateScore(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t sub_213E11D08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_253F06ED8);
  MEMORY[0x24BDAC7A8](v2);
  v57 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  v59 = *(_QWORD *)(v56 - 8);
  v4 = MEMORY[0x24BDAC7A8](v56);
  v47 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (uint64_t)&v45 - v6;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06910);
  v7 = MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v45 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v52 = (uint64_t)&v45 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v51 = (char *)&v45 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v49 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v50 = (unint64_t)(v15 + 63) >> 6;
  v58 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v48 = MEMORY[0x24BEE4AF8];
  v20 = v53;
  while (1)
  {
    if (v17)
    {
      v60 = (v17 - 1) & v17;
      v61 = v19;
      v21 = __clz(__rbit64(v17)) | (v19 << 6);
      goto LABEL_5;
    }
    v36 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v36 >= v50)
      goto LABEL_30;
    v37 = *(_QWORD *)(v49 + 8 * v36);
    v38 = v19 + 1;
    if (!v37)
    {
      v38 = v19 + 2;
      if (v19 + 2 >= v50)
        goto LABEL_30;
      v37 = *(_QWORD *)(v49 + 8 * v38);
      if (!v37)
      {
        v38 = v19 + 3;
        if (v19 + 3 >= v50)
          goto LABEL_30;
        v37 = *(_QWORD *)(v49 + 8 * v38);
        if (!v37)
        {
          v38 = v19 + 4;
          if (v19 + 4 >= v50)
            goto LABEL_30;
          v37 = *(_QWORD *)(v49 + 8 * v38);
          if (!v37)
            break;
        }
      }
    }
LABEL_24:
    v60 = (v37 - 1) & v37;
    v61 = v38;
    v21 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_5:
    v22 = v58;
    v23 = *(_QWORD *)(v58 + 48);
    v24 = sub_213EF1D64();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = v23 + *(_QWORD *)(v25 + 72) * v21;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v28 = (uint64_t)v51;
    v27(v51, v26, v24);
    v29 = v55;
    *(_QWORD *)(v28 + *(int *)(v55 + 48)) = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v21);
    v30 = v52;
    sub_213DC0630(v28, v52, &qword_253F06910);
    swift_getKeyPath();
    v31 = *(int *)(v29 + 48);
    v27(v20, v30, v24);
    v32 = *(_QWORD *)(v30 + v31);
    *(_QWORD *)&v20[v31] = v32;
    v33 = *(int *)(v29 + 48);
    v34 = (uint64_t)v54;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v54, v20, v24);
    *(_QWORD *)(v34 + v33) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = (uint64_t)v57;
    swift_getAtKeyPath();
    sub_213DAFEC4(v34, &qword_253F06910);
    swift_release();
    sub_213DAFEC4(v30, &qword_253F06910);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v35, 1, v56) == 1)
    {
      result = sub_213DAFEC4(v35, qword_253F06ED8);
    }
    else
    {
      v40 = v46;
      sub_213DBB430(v35, v46, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      sub_213DBB430(v40, v47, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v48 = sub_213DB6BBC(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
      v42 = *(_QWORD *)(v48 + 16);
      v41 = *(_QWORD *)(v48 + 24);
      if (v42 >= v41 >> 1)
        v48 = sub_213DB6BBC(v41 > 1, v42 + 1, 1, v48);
      v43 = v47;
      v44 = v48;
      *(_QWORD *)(v48 + 16) = v42 + 1;
      result = sub_213DBB430(v43, v44+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v42, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
    }
    v19 = v61;
    v17 = v60;
  }
  v39 = v19 + 5;
  if (v19 + 5 >= v50)
  {
LABEL_30:
    swift_release();
    return v48;
  }
  v37 = *(_QWORD *)(v49 + 8 * v39);
  if (v37)
  {
    v38 = v19 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v50)
      goto LABEL_30;
    v37 = *(_QWORD *)(v49 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_24;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_213E121F0()
{
  uint64_t result;

  type metadata accessor for PlusClientEventFeatureExtractor();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C8D8);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_254D3C790 = 91;
  *(_QWORD *)algn_254D3C798 = 0xE100000000000000;
  return result;
}

uint64_t PlusClientEventFeatureExtractor.__allocating_init(_:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v2 = type metadata accessor for PlusContactSuggestion();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v30, v10, v11);
  v12 = v31;
  v13 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v27 = a1;
    v29 = MEMORY[0x24BEE4AF8];
    v16 = v14;
    sub_213DCD514(0, v15, 0);
    v17 = *(unsigned __int8 *)(v3 + 80);
    v26[1] = v16;
    v18 = v16 + ((v17 + 32) & ~v17);
    v28 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_213DCA7E4(v18, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v5, v6);
      sub_213DCA828((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PlusContactSuggestion);
      v19 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_213DCD514(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v29;
      }
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_213DCD514(v20 > 1, v21 + 1, 1);
        v19 = v29;
      }
      *(_QWORD *)(v19 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v19+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v21, v9, v6);
      v29 = v19;
      v18 += v28;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a1 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  type metadata accessor for PlusClientEventFeatureExtractor();
  v22 = swift_allocObject();
  type metadata accessor for SELFPlusSuggestionIdMapper();
  v23 = swift_allocObject();
  v24 = sub_213DCB2D8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v23 + 16) = v19;
  *(_QWORD *)(v23 + 24) = v24;
  *(_QWORD *)(v22 + 16) = v23;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v22;
}

uint64_t PlusClientEventFeatureExtractor.__allocating_init(picsIds:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = swift_allocObject();
  type metadata accessor for SELFPlusSuggestionIdMapper();
  v3 = swift_allocObject();
  v4 = sub_213DCB2D8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v2 + 16) = v3;
  return v2;
}

uint64_t PlusClientEventFeatureExtractor.init(picsIds:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  type metadata accessor for SELFPlusSuggestionIdMapper();
  v3 = swift_allocObject();
  v4 = sub_213DCB2D8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

unint64_t sub_213E125BC(unint64_t p_weak_ivar_lyt)
{
  uint64_t *v1;
  int64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  uint64_t j;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, char *, unint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t);
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;

  v88 = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v5);
  v89 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1D64();
  v90 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v85 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v83 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v83 - v12;
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v92 = MEMORY[0x24BEE4AF8];
  if (p_weak_ivar_lyt >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_213EF306C();
    if (v15)
    {
LABEL_3:
      if (v15 < 1)
      {
        __break(1u);
        goto LABEL_88;
      }
      for (i = 0; i != v15; ++i)
      {
        if ((p_weak_ivar_lyt & 0xC000000000000001) != 0)
          v17 = (id)MEMORY[0x2199C49B0](i, p_weak_ivar_lyt);
        else
          v17 = *(id *)(p_weak_ivar_lyt + 8 * i + 32);
        v18 = v17;
        if (objc_msgSend(v17, sel_anyEventType) == 38)
        {
          v1 = (uint64_t *)&v92;
          sub_213EF2F58();
          v3 = *(void **)(v92 + 16);
          sub_213EF2F88();
          sub_213EF2F94();
          sub_213EF2F64();
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v15 = v92;
      *(_QWORD *)&v92 = v14;
      if (v15 < 0)
        goto LABEL_31;
      goto LABEL_16;
    }
  }
  else
  {
    v15 = *(_QWORD *)((p_weak_ivar_lyt & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v92 = v14;
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
    goto LABEL_31;
LABEL_16:
  if ((v15 & 0x4000000000000000) != 0)
  {
LABEL_31:
    swift_retain();
    v2 = sub_213EF306C();
    if (!v2)
      goto LABEL_32;
    goto LABEL_18;
  }
  v2 = *(_QWORD *)(v15 + 16);
  swift_retain();
  if (!v2)
  {
LABEL_32:
    swift_release();
    v2 = MEMORY[0x24BEE4AF8];
    goto LABEL_33;
  }
LABEL_18:
  if (v2 < 1)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    p_weak_ivar_lyt = (unint64_t)sub_213DB59A4(0, *(_QWORD *)(p_weak_ivar_lyt + 16) + 1, 1, (_QWORD *)p_weak_ivar_lyt);
    goto LABEL_71;
  }
  v84 = v13;
  for (j = 0; j != v2; ++j)
  {
    if ((v15 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x2199C49B0](j, v15);
    else
      v20 = *(id *)(v15 + 8 * j + 32);
    v21 = v20;
    v22 = objc_msgSend(v20, sel_payload);
    if (v22)
    {
      v23 = sub_213EF1C50();
      v25 = v24;

      v22 = (id)sub_213EF1C44();
      sub_213DF8A28(v23, v25);
    }
    v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95710]), sel_initWithData_, v22);

    if (v26)
    {
      MEMORY[0x2199C44C4]();
      if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
  }
  swift_release();
  v2 = v92;
  v13 = v84;
LABEL_33:
  swift_release();
  v27 = v89;
  sub_213E141B8(p_weak_ivar_lyt, v89);
  v28 = v90;
  if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v90 + 48))(v27, 1, v91) == 1)
  {
    sub_213DAFEC4((uint64_t)v27, &qword_253F04828);
    p_weak_ivar_lyt = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v29 = v91;
    (*(void (**)(char *, char *, unint64_t))(v28 + 32))(v13, v27, v91);
    v30 = *(void (**)(char *, char *, unint64_t))(v28 + 16);
    v31 = v86;
    v30(v86, v13, v29);
    v32 = type metadata accessor for PlusClientEventIdFeature(0);
    swift_allocObject();
    v30(v85, v31, v29);
    v33 = sub_213EF23C4();
    v34 = *(void (**)(char *, unint64_t))(v28 + 8);
    v34(v31, v29);
    p_weak_ivar_lyt = (unint64_t)sub_213DB59A4(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v36 = *(_QWORD *)(p_weak_ivar_lyt + 16);
    v35 = *(_QWORD *)(p_weak_ivar_lyt + 24);
    if (v36 >= v35 >> 1)
      p_weak_ivar_lyt = (unint64_t)sub_213DB59A4((_QWORD *)(v35 > 1), v36 + 1, 1, (_QWORD *)p_weak_ivar_lyt);
    v93 = v32;
    v94 = sub_213DB196C(&qword_254D3C7C0, 255, type metadata accessor for PlusClientEventIdFeature, MEMORY[0x24BEA4F80]);
    *(_QWORD *)&v92 = v33;
    *(_QWORD *)(p_weak_ivar_lyt + 16) = v36 + 1;
    sub_213DB0BF0(&v92, p_weak_ivar_lyt + 40 * v36 + 32);
    v34(v13, v91);
  }
  if ((unint64_t)v2 >> 62)
    goto LABEL_85;
  v37 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v37; v37 = sub_213EF306C())
  {
    v91 = p_weak_ivar_lyt;
    v38 = v2 & 0xC000000000000001;
    v39 = 4;
    p_weak_ivar_lyt = (unint64_t)&PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
    while (1)
    {
      if (v38)
        v40 = (id)MEMORY[0x2199C49B0](v39 - 4, v2);
      else
        v40 = *(id *)(v2 + 8 * v39);
      v41 = v40;
      v42 = v39 - 3;
      if (__OFADD__(v39 - 4, 1))
      {
        __break(1u);
        goto LABEL_84;
      }
      v43 = objc_msgSend(v40, sel_contactSuggesterRequestMetadataReported);
      if (v43)
        break;

LABEL_42:
      ++v39;
      if (v42 == v37)
      {
        p_weak_ivar_lyt = v91;
        goto LABEL_55;
      }
    }
    v44 = v43;
    v45 = objc_msgSend(v43, sel_isForcePromptUsed);

    if ((v45 & 1) == 0)
      goto LABEL_42;
    swift_bridgeObjectRelease();
    v46 = type metadata accessor for PlusForcePrompted(0);
    swift_allocObject();
    LOBYTE(v92) = 1;
    v47 = sub_213EF23C4();
    p_weak_ivar_lyt = v91;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      p_weak_ivar_lyt = (unint64_t)sub_213DB59A4(0, *(_QWORD *)(p_weak_ivar_lyt + 16) + 1, 1, (_QWORD *)p_weak_ivar_lyt);
    v49 = *(_QWORD *)(p_weak_ivar_lyt + 16);
    v48 = *(_QWORD *)(p_weak_ivar_lyt + 24);
    if (v49 >= v48 >> 1)
      p_weak_ivar_lyt = (unint64_t)sub_213DB59A4((_QWORD *)(v48 > 1), v49 + 1, 1, (_QWORD *)p_weak_ivar_lyt);
    v93 = v46;
    v94 = sub_213DB196C(&qword_254D3C7B8, 255, type metadata accessor for PlusForcePrompted, MEMORY[0x24BEA4F80]);
    *(_QWORD *)&v92 = v47;
    *(_QWORD *)(p_weak_ivar_lyt + 16) = v49 + 1;
    sub_213DB0BF0(&v92, p_weak_ivar_lyt + 40 * v49 + 32);
    swift_bridgeObjectRetain();
LABEL_55:
    v50 = 4;
    while (1)
    {
      v51 = v38 ? (id)MEMORY[0x2199C49B0](v50 - 4, v2) : *(id *)(v2 + 8 * v50);
      v3 = v51;
      v52 = v50 - 3;
      if (__OFADD__(v50 - 4, 1))
        break;
      v53 = objc_msgSend(v51, sel_contactSuggesterRequestMetadataReported);
      if (v53)
      {
        v54 = v53;
        objc_msgSend(v53, sel_isPlusContactSuggesterEnabled);
        swift_bridgeObjectRelease();

        v55 = objc_msgSend(v3, sel_contactSuggesterRequestMetadataReported);
        if (v55)
        {
          v56 = v55;
          v57 = objc_msgSend(v55, sel_isPlusContactSuggesterEnabled);

          v58 = type metadata accessor for PlusContactSuggesterEnabled(0);
          swift_allocObject();
          LOBYTE(v92) = v57;
          v59 = sub_213EF23C4();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            p_weak_ivar_lyt = (unint64_t)sub_213DB59A4(0, *(_QWORD *)(p_weak_ivar_lyt + 16) + 1, 1, (_QWORD *)p_weak_ivar_lyt);
          v61 = *(_QWORD *)(p_weak_ivar_lyt + 16);
          v60 = *(_QWORD *)(p_weak_ivar_lyt + 24);
          if (v61 >= v60 >> 1)
            p_weak_ivar_lyt = (unint64_t)sub_213DB59A4((_QWORD *)(v60 > 1), v61 + 1, 1, (_QWORD *)p_weak_ivar_lyt);
          v93 = v58;
          v94 = sub_213DB196C(&qword_254D3C7A0, 255, type metadata accessor for PlusContactSuggesterEnabled, MEMORY[0x24BEA4F80]);
          *(_QWORD *)&v92 = v59;
          *(_QWORD *)(p_weak_ivar_lyt + 16) = v61 + 1;
          sub_213DB0BF0(&v92, p_weak_ivar_lyt + 40 * v61 + 32);
        }
        goto LABEL_69;
      }

      ++v50;
      if (v52 == v37)
        goto LABEL_62;
    }
LABEL_84:
    __break(1u);
LABEL_85:
    swift_bridgeObjectRetain();
  }
LABEL_62:
  swift_bridgeObjectRelease();
  v3 = 0;
LABEL_69:
  v62 = sub_213E181A0(v2);
  MEMORY[0x24BDAC7A8](v62);
  v63 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  *(&v83 - 2) = v63;
  *(&v83 - 1) = (uint64_t)&off_24D103C08;
  KeyPath = swift_getKeyPath();
  v65 = swift_bridgeObjectRetain();
  v66 = sub_213E17998(v65, KeyPath);
  swift_bridgeObjectRelease();
  v67 = swift_release();
  MEMORY[0x24BDAC7A8](v67);
  *(&v83 - 2) = v63;
  *(&v83 - 1) = (uint64_t)&off_24D103C08;
  v68 = swift_getKeyPath();
  swift_retain();
  v69 = sub_213E16F18(v66, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!*(_QWORD *)(v69 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_75;
  }
  v70 = v87;
  swift_retain();
  v71 = sub_213E16330(v69, v70);
  swift_bridgeObjectRelease();
  swift_release();
  v15 = type metadata accessor for PlusRuntimeContactSuggestions(0);
  swift_allocObject();
  *(_QWORD *)&v92 = v71;
  v1 = (uint64_t *)sub_213EF23C4();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_89;
LABEL_71:
  v73 = *(_QWORD *)(p_weak_ivar_lyt + 16);
  v72 = *(_QWORD *)(p_weak_ivar_lyt + 24);
  if (v73 >= v72 >> 1)
    p_weak_ivar_lyt = (unint64_t)sub_213DB59A4((_QWORD *)(v72 > 1), v73 + 1, 1, (_QWORD *)p_weak_ivar_lyt);
  v93 = v15;
  v94 = sub_213DB196C(&qword_254D3C7A8, 255, type metadata accessor for PlusRuntimeContactSuggestions, MEMORY[0x24BEA4F80]);
  *(_QWORD *)&v92 = v1;
  *(_QWORD *)(p_weak_ivar_lyt + 16) = v73 + 1;
  sub_213DB0BF0(&v92, p_weak_ivar_lyt + 40 * v73 + 32);
LABEL_75:
  v74 = sub_213E18BA8(v2);
  swift_bridgeObjectRetain();
  v75 = sub_213E173DC(v2, v74, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v76 = sub_213E17664(v75);
  swift_bridgeObjectRelease();
  v77 = sub_213E11D08(v76);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v77 + 16))
  {
    v78 = type metadata accessor for PlusRuntimeGenericSuggestions(0);
    swift_allocObject();
    *(_QWORD *)&v92 = v77;
    v79 = sub_213EF23C4();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      p_weak_ivar_lyt = (unint64_t)sub_213DB59A4(0, *(_QWORD *)(p_weak_ivar_lyt + 16) + 1, 1, (_QWORD *)p_weak_ivar_lyt);
    v81 = *(_QWORD *)(p_weak_ivar_lyt + 16);
    v80 = *(_QWORD *)(p_weak_ivar_lyt + 24);
    if (v81 >= v80 >> 1)
      p_weak_ivar_lyt = (unint64_t)sub_213DB59A4((_QWORD *)(v80 > 1), v81 + 1, 1, (_QWORD *)p_weak_ivar_lyt);
    v93 = v78;
    v94 = sub_213DB196C(&qword_254D3C7B0, 255, type metadata accessor for PlusRuntimeGenericSuggestions, MEMORY[0x24BEA4F80]);
    *(_QWORD *)&v92 = v79;
    *(_QWORD *)(p_weak_ivar_lyt + 16) = v81 + 1;
    sub_213DB0BF0(&v92, p_weak_ivar_lyt + 40 * v81 + 32);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  return p_weak_ivar_lyt;
}

uint64_t PlusClientEventIdFeature.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_213EF1D64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_213EF23C4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  sub_213DBDD88(a1, (uint64_t)v4);
  v5 = sub_213EF23B8();
  swift_retain();
  sub_213DAFEC4(a1, &qword_253F04828);
  if (v5)
    swift_release();
  return v5;
}

uint64_t _s28SiriPrivateLearningInference17PlusForcePromptedC5valueACSb_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E13208@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (v4)
  {
    sub_213DCA7E4(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v7, 1, v5);
}

uint64_t mapSuggestionDomain(_:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if ((result & 0x1FFFFFFFCLL) != 0)
    v2 = 4;
  else
    v2 = result;
  *a2 = v2;
  return result;
}

void sub_213E132A4(void **a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  unint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  uint64_t *v48;

  v45 = a2;
  v48 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = sub_213EF1D64();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v47 = (char *)&v41 - v18;
  v19 = *a1;
  v20 = objc_msgSend(v19, sel_contactSuggesterQueryContext);
  if (!v20)
    goto LABEL_27;
  v21 = v20;
  v22 = objc_msgSend(v20, sel_ended);

  if (!v22)
    goto LABEL_27;
  v23 = objc_msgSend(v22, sel_results);

  if (!v23)
    goto LABEL_27;
  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C8E8);
  v24 = sub_213EF2A3C();

  v25 = objc_msgSend(v19, sel_eventMetadata);
  if (!v25
    || (v26 = v25, v27 = objc_msgSend(v25, sel_plusId), v26, !v27))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_26;
  }
  sub_213EF2C7C();

  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v46(v9, 1, v10) == 1)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    sub_213DAFEC4((uint64_t)v9, &qword_253F04828);
LABEL_27:
    v38 = MEMORY[0x24BEE4AF8];
LABEL_28:
    *v48 = v38;
    return;
  }
  v44 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v44(v47, v9, v10);
  if (!(v24 >> 62))
  {
    v28 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v28)
      goto LABEL_9;
LABEL_30:
    v30 = MEMORY[0x24BEE4AF8];
LABEL_31:
    v39 = swift_bridgeObjectRelease_n();
    MEMORY[0x24BDAC7A8](v39);
    v40 = v47;
    *(&v41 - 2) = v45;
    *(&v41 - 1) = (unint64_t)v40;
    v38 = sub_213E441A0((void (*)(char *))sub_213E1A6B0, (uint64_t)(&v41 - 4), v30);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v40, v10);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v28 = sub_213EF306C();
  if (!v28)
    goto LABEL_30;
LABEL_9:
  v43 = v14;
  if (v28 >= 1)
  {
    v29 = 0;
    v41 = v24 & 0xC000000000000001;
    v30 = MEMORY[0x24BEE4AF8];
    v42 = v24;
    do
    {
      if (v41)
        v31 = (id)MEMORY[0x2199C49B0](v29, v24);
      else
        v31 = *(id *)(v24 + 8 * v29 + 32);
      v32 = v31;
      v33 = objc_msgSend(v31, sel_suggestionId, v41);
      if (v33)
      {
        v34 = v33;
        sub_213EF2C7C();

        v32 = v34;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
      }

      if (v46(v7, 1, v10) == 1)
      {
        sub_213DAFEC4((uint64_t)v7, &qword_253F04828);
      }
      else
      {
        v35 = v44;
        v44(v17, v7, v10);
        v35(v43, v17, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v30 = sub_213DB5B04(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
        v37 = *(_QWORD *)(v30 + 16);
        v36 = *(_QWORD *)(v30 + 24);
        if (v37 >= v36 >> 1)
          v30 = sub_213DB5B04(v36 > 1, v37 + 1, 1, v30);
        *(_QWORD *)(v30 + 16) = v37 + 1;
        v44((char *)(v30+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v37), v43, v10);
      }
      v24 = v42;
      ++v29;
    }
    while (v28 != v29);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_213E13768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  int *v16;

  if (!*(_QWORD *)(a2 + 16))
  {
    v10 = 0;
    goto LABEL_9;
  }
  v8 = sub_213DFA284(a1);
  if ((v9 & 1) == 0)
  {
    v10 = 0;
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_7;
LABEL_9:
    v13 = 0;
    goto LABEL_10;
  }
  v10 = *(_BYTE *)(*(_QWORD *)(a2 + 56) + 2 * v8);
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_9;
LABEL_7:
  v11 = sub_213DFA284(a1);
  if ((v12 & 1) == 0)
    goto LABEL_9;
  v13 = *(_BYTE *)(*(_QWORD *)(a2 + 56) + 2 * v11 + 1);
LABEL_10:
  v14 = sub_213EF1D64();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  v15(a4, a1, v14);
  v16 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  v15(a4 + v16[5], a3, v14);
  *(_BYTE *)(a4 + v16[6]) = v10;
  *(_BYTE *)(a4 + v16[7]) = v13;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a4, 0, 1, v16);
}

void sub_213E13880(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  int v29;
  unint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[2];
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  unint64_t v53;
  char *v54;

  v47 = a2;
  v48 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v45 - v11;
  v13 = sub_213EF1D64();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v49 = (char *)v45 - v20;
  v21 = *a1;
  v22 = objc_msgSend(v21, sel_plusSuggesterQueried);
  if (!v22)
    goto LABEL_26;
  v23 = v22;
  v50 = a4;
  v24 = objc_msgSend(v22, sel_matchedResults);

  if (!v24)
  {
    v42 = MEMORY[0x24BEE4AF8];
LABEL_31:
    a4 = v50;
    goto LABEL_32;
  }
  sub_213DB9CDC(0, &qword_254D3C1A0);
  v25 = sub_213EF2A3C();

  v26 = objc_msgSend(v21, sel_eventMetadata);
  if (!v26
    || (v27 = v26, v28 = objc_msgSend(v26, sel_plusId), v27, !v28))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    a4 = v50;
    goto LABEL_25;
  }
  sub_213EF2C7C();

  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v29 = v52(v12, 1, v13);
  a4 = v50;
  if (v29 == 1)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    sub_213DAFEC4((uint64_t)v12, &qword_253F04828);
LABEL_26:
    v42 = MEMORY[0x24BEE4AF8];
LABEL_32:
    *a4 = v42;
    return;
  }
  v30 = v25;
  v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v31(v49, v12, v13);
  v45[1] = v4;
  v53 = v30;
  if (!(v30 >> 62))
  {
    v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v32)
      goto LABEL_8;
LABEL_29:
    v34 = MEMORY[0x24BEE4AF8];
LABEL_30:
    v43 = swift_bridgeObjectRelease_n();
    MEMORY[0x24BDAC7A8](v43);
    v44 = v49;
    v45[-4] = v47;
    v45[-3] = v44;
    v45[-2] = v48;
    v42 = sub_213E441CC((void (*)(char *))sub_213E1A680, (uint64_t)&v45[-6], v34);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v13);
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  v32 = sub_213EF306C();
  if (!v32)
    goto LABEL_29;
LABEL_8:
  v46 = v19;
  if (v32 >= 1)
  {
    v33 = 0;
    v51 = v53 & 0xC000000000000001;
    v34 = MEMORY[0x24BEE4AF8];
    do
    {
      if (v51)
        v35 = (id)MEMORY[0x2199C49B0](v33, v53);
      else
        v35 = *(id *)(v53 + 8 * v33 + 32);
      v36 = v35;
      v37 = objc_msgSend(v35, sel_suggestionId);
      if (v37)
      {
        v38 = v37;
        sub_213EF2C7C();

        v36 = v38;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
      }

      if (v52(v10, 1, v13) == 1)
      {
        sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
      }
      else
      {
        v39 = v46;
        v31(v46, v10, v13);
        v31(v54, v39, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_213DB5B04(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
        v41 = *(_QWORD *)(v34 + 16);
        v40 = *(_QWORD *)(v34 + 24);
        if (v41 >= v40 >> 1)
          v34 = sub_213DB5B04(v40 > 1, v41 + 1, 1, v34);
        *(_QWORD *)(v34 + 16) = v41 + 1;
        v31((char *)(v34+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v41), v54, v13);
      }
      ++v33;
    }
    while (v32 != v33);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t sub_213E13D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  char v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  _BYTE *v26;
  int *v27;
  void (*v28)(_BYTE *, char *, uint64_t);
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a4;
  v38 = a3;
  v40 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - v12;
  v14 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v38 - v19;
  if (*(_QWORD *)(a2 + 16) && (v21 = sub_213DFA284(v40), (v22 & 1) != 0))
  {
    sub_213DCA7E4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v15 + 72) * v21, (uint64_t)v18, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
    sub_213DBB430((uint64_t)v18, (uint64_t)v20, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
    v23 = *v20;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v24(v13, v40, v8);
    v24(v7, (uint64_t)&v20[v14[5]], v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    v25 = v39;
    v24(v39, v38, v8);
    LOBYTE(v24) = v20[v14[6]];
    LODWORD(v40) = v20[v14[7]];
    sub_213DCA828((uint64_t)v20, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
    v26 = v41;
    *v41 = v23;
    v27 = (int *)type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
    v28 = *(void (**)(_BYTE *, char *, uint64_t))(v9 + 32);
    v28(&v26[v27[5]], v13, v8);
    sub_213DC0630((uint64_t)v7, (uint64_t)&v26[v27[6]], &qword_253F04828);
    v28(&v26[v27[7]], v25, v8);
    v26[v27[8]] = (_BYTE)v24;
    v26[v27[9]] = v40;
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v27 - 1) + 56))(v26, 0, 1, v27);
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v30 = sub_213EF2724();
    __swift_project_value_buffer(v30, (uint64_t)qword_253F08A00);
    v31 = sub_213EF270C();
    v32 = sub_213EF2CA0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v43 = v34;
      *(_DWORD *)v33 = 136315138;
      if (qword_254D39FE8 != -1)
        swift_once();
      v35 = qword_254D3C790;
      v36 = *(_QWORD *)algn_254D3C798;
      swift_bridgeObjectRetain();
      v42 = sub_213DB0570(v35, v36, &v43);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v31, v32, "%s Generic suggestion summary not extracted - suggestionId/requestId was missing", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v34, -1, -1);
      MEMORY[0x2199C53C4](v33, -1, -1);
    }

    v37 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v41, 1, 1, v37);
  }
}

uint64_t sub_213E1414C()
{
  uint64_t v0;

  v0 = sub_213EF2AE4();
  MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v0);
  return sub_213EF2C40();
}

void sub_213E141B8(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t p_weak_ivar_lyt;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  unint64_t v20;
  void **v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  unsigned int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  unsigned int v52;
  unint64_t v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  void *v69;
  unint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  void *v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unsigned int v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  id v93;
  void *v94;
  void *v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  id v101;
  BOOL v102;
  id v103;
  void *v104;
  void *v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  id v109;
  id v110;
  void *v111;
  unsigned int v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  id v116;
  unsigned int v117;
  id v118;
  void *v119;
  void *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  id v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void *v131;
  id v132;
  void *v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  void *v137;
  id v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  unint64_t v158;
  _QWORD v159[18];

  v148 = a2;
  v150 = sub_213EF1D64();
  v151 = *(_QWORD *)(v150 - 8);
  MEMORY[0x24BDAC7A8](v150);
  v146 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v145 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v145 - v11;
  p_weak_ivar_lyt = (unint64_t)&PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
  v155 = v10;
  v157 = (char *)&v145 - v11;
  v158 = (unint64_t)a1 >> 62;
  v14 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    v15 = sub_213EF306C();
    if (!v15)
    {
LABEL_45:
      swift_bridgeObjectRetain();
      p_weak_ivar_lyt = sub_213EF306C();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    goto LABEL_3;
  }
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v15)
  {
LABEL_3:
    v16 = 0;
    v17 = a1 & 0xC000000000000001;
    v156 = a1 + 32;
    while (1)
    {
      if (v17)
      {
        swift_bridgeObjectRetain();
        v18 = (id)MEMORY[0x2199C49B0](v16, a1);
        swift_bridgeObjectRelease();
      }
      else
      {
        v18 = *(id *)(a1 + 8 * v16 + 32);
      }
      v19 = objc_msgSend(v18, *(SEL *)(p_weak_ivar_lyt + 1400));

      if (v19 == 9)
        break;
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      ++v16;
      if (v20 == v15)
        goto LABEL_38;
    }
    if (v15 != v16)
    {
      v10 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
      v154 = v15 - 1;
      v21 = &PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
      while (1)
      {
        if (v17)
        {
          swift_bridgeObjectRetain();
          v22 = (id)MEMORY[0x2199C49B0](v16, a1);
        }
        else
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_245;
          if (v16 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_246:
            __break(1u);
LABEL_247:
            __break(1u);
LABEL_248:
            __break(1u);
LABEL_249:
            __break(1u);
LABEL_250:
            __break(1u);
LABEL_251:
            __break(1u);
            return;
          }
          v23 = *(void **)(v156 + 8 * v16);
          swift_bridgeObjectRetain();
          v22 = v23;
        }
        v24 = v22;
        v25 = objc_msgSend(v22, (SEL)v21[176]);
        if (v25)
        {
          v26 = sub_213EF1C50();
          v28 = v27;

          v25 = (id)sub_213EF1C44();
          v29 = v28;
          v12 = v157;
          sub_213DF8A28(v26, v29);
        }
        p_weak_ivar_lyt = (unint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v25);

        swift_bridgeObjectRelease();
        if (p_weak_ivar_lyt)
          break;
        if (v16 == v15)
          goto LABEL_240;
        p_weak_ivar_lyt = (unint64_t)&PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
        if (__OFADD__(v16, 1))
          goto LABEL_241;
        if (v16 + 1 != v15)
        {
          while (1)
          {
            v30 = v16 + 1;
            if (v17)
            {
              swift_bridgeObjectRetain();
              v31 = (id)MEMORY[0x2199C49B0](v16 + 1, a1);
              swift_bridgeObjectRelease();
            }
            else
            {
              if ((v30 & 0x8000000000000000) != 0)
                goto LABEL_42;
              if (v30 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_43;
              v31 = *(id *)(a1 + 8 * v16 + 40);
            }
            p_weak_ivar_lyt = (unint64_t)objc_msgSend(v31, *(SEL *)(p_weak_ivar_lyt + 1400));

            if ((_DWORD)p_weak_ivar_lyt == 9)
              break;
            v32 = v16 + 2;
            if (__OFADD__(v30, 1))
              goto LABEL_41;
            ++v16;
            p_weak_ivar_lyt = 0x24D113000;
            if (v32 == v15)
              goto LABEL_37;
          }
          v102 = v154 == v16++;
          v21 = (void **)(&PlusMediaReferenceSourceAppCoreDataRecord__metaData + 56);
          if (!v102)
            continue;
        }
        goto LABEL_37;
      }
      v15 = v16;
LABEL_37:
      v10 = v155;
    }
LABEL_38:
    v14 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v158)
      goto LABEL_45;
  }
  p_weak_ivar_lyt = *(_QWORD *)(v14 + 16);
LABEL_46:
  v147 = v7;
  if (v15 == p_weak_ivar_lyt)
    goto LABEL_93;
  v7 = (char *)(a1 & 0xC000000000000001);
  v152 = a1 + 32;
  if (a1 < 0)
    v33 = a1;
  else
    v33 = a1 & 0xFFFFFFFFFFFFFF8;
  v153 = v33;
  v154 = p_weak_ivar_lyt;
  while (1)
  {
    if (v7)
    {
      swift_bridgeObjectRetain();
      v34 = (id)MEMORY[0x2199C49B0](v15, a1);
    }
    else
    {
      if ((v15 & 0x8000000000000000) != 0)
        goto LABEL_229;
      if (v15 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_230;
      v35 = *(void **)(v152 + 8 * v15);
      swift_bridgeObjectRetain();
      v34 = v35;
    }
    v36 = v34;
    v37 = objc_msgSend(v34, sel_payload);
    if (v37)
    {
      v38 = v37;
      v39 = sub_213EF1C50();
      v41 = v40;

      v42 = (void *)sub_213EF1C44();
      v43 = v39;
      v10 = v155;
      sub_213DF8A28(v43, v41);
    }
    else
    {
      v42 = 0;
    }
    v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v42);

    if (!v44)
      goto LABEL_248;
    swift_bridgeObjectRelease();
    v45 = objc_msgSend(v44, sel_source);
    p_weak_ivar_lyt = (unint64_t)&PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
    if (v45)
    {
      v46 = v45;
      v47 = objc_msgSend(v45, sel_component);

      if (v47 != 19)
      {
        if (v158)
          goto LABEL_66;
        goto LABEL_64;
      }
      p_weak_ivar_lyt = v15;
LABEL_92:
      v7 = v147;
LABEL_93:
      if (v158)
      {
        swift_bridgeObjectRetain();
        v63 = sub_213EF306C();
        swift_bridgeObjectRelease();
        if (p_weak_ivar_lyt != v63)
          goto LABEL_95;
      }
      else
      {
        v63 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (p_weak_ivar_lyt != v63)
        {
LABEL_95:
          v64 = a1 & 0xC000000000000001;
          v7 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
          v152 = a1 + 32;
          if (a1 < 0)
            v65 = a1;
          else
            v65 = a1 & 0xFFFFFFFFFFFFFF8;
          v153 = v65;
          v149 = v63;
          while (2)
          {
            if (v64)
            {
              swift_bridgeObjectRetain();
              v67 = (id)MEMORY[0x2199C49B0](p_weak_ivar_lyt, a1);
            }
            else
            {
              if ((p_weak_ivar_lyt & 0x8000000000000000) != 0)
                goto LABEL_236;
              if (p_weak_ivar_lyt >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_237:
                __break(1u);
LABEL_238:
                __break(1u);
LABEL_239:
                __break(1u);
LABEL_240:
                __break(1u);
LABEL_241:
                __break(1u);
                goto LABEL_242;
              }
              v68 = *(void **)(v152 + 8 * p_weak_ivar_lyt);
              swift_bridgeObjectRetain();
              v67 = v68;
            }
            v69 = v67;
            v70 = p_weak_ivar_lyt;
            v71 = objc_msgSend(v67, sel_payload);
            if (v71)
            {
              v72 = v71;
              v73 = sub_213EF1C50();
              v75 = v74;

              v76 = (void *)sub_213EF1C44();
              sub_213DF8A28(v73, v75);
            }
            else
            {
              v76 = 0;
            }
            v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v76);

            if (!v77)
              goto LABEL_249;
            v78 = objc_msgSend(v77, sel_source);
            p_weak_ivar_lyt = v70;
            if (v78
              && (v79 = v78,
                  v80 = objc_msgSend(v78, sel_uuid),
                  v79,
                  v80))
            {
              sub_213EF2C7C();
              swift_bridgeObjectRelease();

              v77 = v80;
              v81 = v150;
              v82 = v151;
            }
            else
            {
              v82 = v151;
              v81 = v150;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v12, 1, 1, v150);
              swift_bridgeObjectRelease();
            }
            v10 = v155;

            v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v81);
            sub_213DAFEC4((uint64_t)v12, &qword_253F04828);
            if (v83 != 1)
              goto LABEL_193;
            if (v158)
            {
              swift_bridgeObjectRetain();
              v85 = sub_213EF306C();
              swift_bridgeObjectRelease();
              v154 = v85;
              if (p_weak_ivar_lyt == v85)
                goto LABEL_235;
              swift_bridgeObjectRetain();
              v84 = sub_213EF306C();
              swift_bridgeObjectRelease();
            }
            else
            {
              v84 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v154 = v84;
              if (p_weak_ivar_lyt == v84)
                goto LABEL_234;
            }
            if (p_weak_ivar_lyt == v84)
              goto LABEL_233;
            v86 = v84 - 1;
            do
            {
              if (p_weak_ivar_lyt == v84)
                goto LABEL_227;
              if (__OFADD__(p_weak_ivar_lyt, 1))
                goto LABEL_228;
              v87 = p_weak_ivar_lyt;
              if (p_weak_ivar_lyt + 1 == v84)
                goto LABEL_147;
              while (1)
              {
                v88 = v87 + 1;
                if (v64)
                {
                  swift_bridgeObjectRetain();
                  p_weak_ivar_lyt = MEMORY[0x2199C49B0](v87 + 1, a1);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  if ((v88 & 0x8000000000000000) != 0)
                    goto LABEL_217;
                  if (v88 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                    goto LABEL_218;
                  p_weak_ivar_lyt = (unint64_t)*(id *)(a1 + 8 * v87 + 40);
                }
                v89 = objc_msgSend((id)p_weak_ivar_lyt, sel_anyEventType);

                if (v89 == 9)
                  break;
                v90 = v87 + 2;
                if (__OFADD__(v88, 1))
                  goto LABEL_214;
                ++v87;
                if (v90 == v84)
                  goto LABEL_147;
              }
              if (v86 == v87)
                goto LABEL_147;
              v91 = v87 + 1;
              v156 = v86;
              if (v64)
              {
                swift_bridgeObjectRetain();
                v92 = v87 + 1;
                v93 = (id)MEMORY[0x2199C49B0](v87 + 1, a1);
              }
              else
              {
                if ((v91 & 0x8000000000000000) != 0)
                  goto LABEL_238;
                if (v91 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_239;
                v92 = v87 + 1;
                v94 = *(void **)(a1 + 8 * v87 + 40);
                swift_bridgeObjectRetain();
                v93 = v94;
              }
              v95 = v93;
              v96 = objc_msgSend(v93, sel_payload);
              if (v96)
              {
                v97 = sub_213EF1C50();
                v99 = v98;

                v96 = (id)sub_213EF1C44();
                v100 = v99;
                v10 = v155;
                sub_213DF8A28(v97, v100);
              }
              v101 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v96);

              swift_bridgeObjectRelease();
              p_weak_ivar_lyt = v92;
              v86 = v156;
            }
            while (!v101);
            v84 = v87 + 1;
LABEL_147:
            v102 = v84 == v154;
LABEL_149:
            v12 = v157;
            if (!v102)
            {
              if (v64)
              {
                swift_bridgeObjectRetain();
                v103 = (id)MEMORY[0x2199C49B0](v84, a1);
              }
              else
              {
                if ((v84 & 0x8000000000000000) != 0)
                  goto LABEL_223;
                if (v84 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_224;
                v104 = *(void **)(v152 + 8 * v84);
                swift_bridgeObjectRetain();
                v103 = v104;
              }
              v105 = v103;
              p_weak_ivar_lyt = (unint64_t)objc_msgSend(v103, sel_payload);
              if (p_weak_ivar_lyt)
              {
                v106 = sub_213EF1C50();
                v108 = v107;

                p_weak_ivar_lyt = sub_213EF1C44();
                sub_213DF8A28(v106, v108);
              }
              v109 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, p_weak_ivar_lyt);

              if (!v109)
                goto LABEL_247;
              swift_bridgeObjectRelease();
              v110 = objc_msgSend(v109, sel_source);
              if (!v110)
              {

                if (!v158)
                  goto LABEL_161;
                goto LABEL_163;
              }
              v111 = v110;
              v112 = objc_msgSend(v110, sel_component);

              if (v112 != 19)
              {
                if (!v158)
                {
LABEL_161:
                  v113 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_164:
                  if (v84 == v113)
                    goto LABEL_221;
                  v156 = v113 - 1;
                  while (v84 != v113)
                  {
                    v53 = v84 + 1;
                    p_weak_ivar_lyt = (unint64_t)&PlusMediaReferenceSourceAppCoreDataRecord__metaData.weak_ivar_lyt;
                    if (__OFADD__(v84, 1))
                      goto LABEL_216;
                    v114 = v84;
                    if (v53 == v113)
                    {
LABEL_148:
                      v84 = v113;
                      v102 = v113 == v154;
                      goto LABEL_149;
                    }
                    while (1)
                    {
                      v115 = v114 + 1;
                      if (v64)
                      {
                        swift_bridgeObjectRetain();
                        v116 = (id)MEMORY[0x2199C49B0](v114 + 1, a1);
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        if ((v115 & 0x8000000000000000) != 0)
                          goto LABEL_190;
                        v53 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
                        if (v115 >= v53)
                          goto LABEL_191;
                        v116 = *(id *)(a1 + 8 * v114 + 40);
                      }
                      v117 = objc_msgSend(v116, sel_anyEventType);

                      if (v117 == 9)
                        break;
                      v53 = v114 + 2;
                      if (__OFADD__(v115, 1))
                      {
                        __break(1u);
                        goto LABEL_189;
                      }
                      ++v114;
                      if (v53 == v113)
                        goto LABEL_148;
                    }
                    if (v156 == v114)
                      goto LABEL_148;
                    v84 = v114 + 1;
                    if (v64)
                    {
                      swift_bridgeObjectRetain();
                      v118 = (id)MEMORY[0x2199C49B0](v114 + 1, a1);
                    }
                    else
                    {
                      if ((v84 & 0x8000000000000000) != 0)
                        goto LABEL_225;
                      if (v84 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                        goto LABEL_226;
                      v119 = *(void **)(a1 + 8 * v114 + 40);
                      swift_bridgeObjectRetain();
                      v118 = v119;
                    }
                    v120 = v118;
                    p_weak_ivar_lyt = (unint64_t)objc_msgSend(v118, sel_payload);
                    if (p_weak_ivar_lyt)
                    {
                      v121 = sub_213EF1C50();
                      v123 = v122;

                      p_weak_ivar_lyt = sub_213EF1C44();
                      v124 = v123;
                      v10 = v155;
                      sub_213DF8A28(v121, v124);
                    }
                    v125 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, p_weak_ivar_lyt);

                    swift_bridgeObjectRelease();
                    if (v125)
                    {
                      v113 = v114 + 1;
                      goto LABEL_148;
                    }
                  }
                  goto LABEL_215;
                }
LABEL_163:
                swift_bridgeObjectRetain();
                v113 = sub_213EF306C();
                swift_bridgeObjectRelease();
                goto LABEL_164;
              }
              v154 = v84;
              v12 = v157;
            }
            p_weak_ivar_lyt = v154;
            v53 = v149;
            if (v154 == v149)
              goto LABEL_192;
            continue;
          }
        }
      }
      if (v158)
        goto LABEL_194;
      goto LABEL_101;
    }

    if (v158)
    {
LABEL_66:
      swift_bridgeObjectRetain();
      v48 = sub_213EF306C();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
LABEL_64:
    v48 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_67:
    if (v15 == v48)
      goto LABEL_222;
    v156 = v48 - 1;
LABEL_69:
    if (v15 == v48)
      goto LABEL_219;
    if (__OFADD__(v15, 1))
      goto LABEL_220;
    v49 = v15;
    if (v15 + 1 == v48)
      goto LABEL_51;
LABEL_72:
    v50 = v49 + 1;
    if (v7)
    {
      swift_bridgeObjectRetain();
      v51 = (id)MEMORY[0x2199C49B0](v49 + 1, a1);
      swift_bridgeObjectRelease();
      goto LABEL_77;
    }
    if ((v50 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      __break(1u);
LABEL_219:
      __break(1u);
LABEL_220:
      __break(1u);
LABEL_221:
      __break(1u);
LABEL_222:
      __break(1u);
LABEL_223:
      __break(1u);
LABEL_224:
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
LABEL_230:
      __break(1u);
LABEL_231:
      __break(1u);
LABEL_232:
      __break(1u);
LABEL_233:
      __break(1u);
LABEL_234:
      __break(1u);
LABEL_235:
      __break(1u);
LABEL_236:
      __break(1u);
      goto LABEL_237;
    }
    if (v50 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_213;
    v51 = *(id *)(a1 + 8 * v49 + 40);
LABEL_77:
    v52 = objc_msgSend(v51, *(SEL *)(p_weak_ivar_lyt + 1400));

    if (v52 != 9)
      break;
    if (v156 == v49)
      goto LABEL_51;
    v15 = v49 + 1;
    if (v7)
    {
      swift_bridgeObjectRetain();
      v54 = (id)MEMORY[0x2199C49B0](v49 + 1, a1);
    }
    else
    {
      if ((v15 & 0x8000000000000000) != 0)
        goto LABEL_231;
      if (v15 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_232;
      v55 = *(void **)(a1 + 8 * v49 + 40);
      swift_bridgeObjectRetain();
      v54 = v55;
    }
    v56 = v54;
    v57 = objc_msgSend(v54, sel_payload);
    if (v57)
    {
      v58 = sub_213EF1C50();
      v60 = v59;

      v57 = (id)sub_213EF1C44();
      v61 = v60;
      p_weak_ivar_lyt = 0x24D113000;
      sub_213DF8A28(v58, v61);
    }
    v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v57);

    swift_bridgeObjectRelease();
    v10 = v155;
    if (!v62)
      goto LABEL_69;
    v48 = v49 + 1;
LABEL_51:
    v15 = v48;
    p_weak_ivar_lyt = v154;
    v12 = v157;
    if (v48 == v154)
      goto LABEL_92;
  }
  v53 = v49 + 2;
  if (!__OFADD__(v50, 1))
  {
    ++v49;
    if (v53 == v48)
      goto LABEL_51;
    goto LABEL_72;
  }
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  p_weak_ivar_lyt = v53;
LABEL_193:
  v7 = v147;
  if (!v158)
  {
LABEL_101:
    v66 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_195;
  }
LABEL_194:
  swift_bridgeObjectRetain();
  v66 = sub_213EF306C();
  swift_bridgeObjectRelease();
LABEL_195:
  v159[0] = a1;
  v159[1] = sub_213E15374;
  v159[2] = 0;
  v159[3] = sub_213E1539C;
  v159[4] = 0;
  v159[5] = sub_213E15C64;
  v159[6] = 0;
  v159[7] = sub_213E15C74;
  v159[8] = 0;
  v159[9] = sub_213E15438;
  v159[10] = 0;
  v159[11] = sub_213E1548C;
  v159[12] = 0;
  v159[13] = sub_213E3FA9C;
  v159[14] = 0;
  v159[15] = sub_213E3FAF8;
  v159[16] = 0;
  if (p_weak_ivar_lyt == v66)
  {
    v126 = 1;
    v127 = v148;
    v128 = v150;
    v129 = v151;
    goto LABEL_211;
  }
  if ((a1 & 0xC000000000000001) == 0)
  {
    if ((p_weak_ivar_lyt & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (p_weak_ivar_lyt < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v130 = *(id *)(a1 + 8 * p_weak_ivar_lyt + 32);
      goto LABEL_201;
    }
    __break(1u);
LABEL_245:
    __break(1u);
    goto LABEL_246;
  }
LABEL_242:
  v130 = (id)MEMORY[0x2199C49B0](p_weak_ivar_lyt, a1);
LABEL_201:
  v131 = v130;
  v132 = objc_msgSend(v130, sel_payload);
  v127 = v148;
  v128 = v150;
  if (v132)
  {
    v133 = v132;
    v134 = sub_213EF1C50();
    v136 = v135;

    v137 = (void *)sub_213EF1C44();
    sub_213DF8A28(v134, v136);
  }
  else
  {
    v137 = 0;
  }
  v138 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v137);

  if (!v138)
    goto LABEL_250;
  v139 = objc_msgSend(v138, sel_source);
  if (v139
    && (v140 = v139, v141 = objc_msgSend(v139, sel_uuid), v140, v141))
  {
    sub_213EF2C7C();

    v138 = v141;
    v142 = v151;
  }
  else
  {
    v142 = v151;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v10, 1, 1, v128);
  }

  sub_213DBDD88((uint64_t)v10, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v7, 1, v128) == 1)
    goto LABEL_251;
  v143 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
  v144 = v146;
  v143(v146, v7, v128);
  sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
  v143(v127, v144, v128);
  v129 = v151;
  v126 = 0;
LABEL_211:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))(v127, v126, 1, v128);
  sub_213E1A6C8((uint64_t)v159);
}

BOOL sub_213E15374(id *a1)
{
  return objc_msgSend(*a1, sel_anyEventType) == 9;
}

void sub_213E1539C(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;

  v3 = objc_msgSend(*a1, sel_payload);
  if (v3)
  {
    v4 = sub_213EF1C50();
    v6 = v5;

    v3 = (id)sub_213EF1C44();
    sub_213DF8A28(v4, v6);
  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95B60]), sel_initWithData_, v3);

  *a2 = v7;
}

id sub_213E15438(id *a1)
{
  id result;
  void *v2;
  unsigned int v3;

  result = objc_msgSend(*a1, sel_source);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_component);

    return (id)(v3 == 19);
  }
  return result;
}

void sub_213E1548C(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = objc_msgSend(*a1, sel_source);
  if (v3 && (v4 = v3, v6 = objc_msgSend(v3, sel_uuid), v4, v6))
  {
    sub_213EF2C7C();

  }
  else
  {
    v5 = sub_213EF1D64();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
  }
}

uint64_t PlusClientEventFeatureExtractor.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PlusClientEventFeatureExtractor.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_213E15578(unint64_t *a1)
{
  return sub_213E125BC(*a1);
}

uint64_t PlusContactSuggestionRuntimeSummary.runtimeSuggestionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlusContactSuggestionRuntimeSummary.offlineSuggestionId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 20);
  return sub_213DBDD88(v3, a1);
}

uint64_t PlusContactSuggestionRuntimeSummary.suggestionInModelOutput.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 24));
}

uint64_t PlusContactSuggestionRuntimeSummary.suggestionWasDuplicate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PlusContactSuggestionRuntimeSummary(0) + 28));
}

void PlusGenericSuggestionRuntimeSummary.suggestionDomain.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t PlusGenericSuggestionRuntimeSummary.suggestionLinkId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) + 20);
  v4 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PlusGenericSuggestionRuntimeSummary.originalRequestId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) + 24);
  return sub_213DBDD88(v3, a1);
}

uint64_t PlusGenericSuggestionRuntimeSummary.originalPlusId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PlusGenericSuggestionRuntimeSummary(0) + 28);
  v4 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PlusGenericSuggestionRuntimeSummary.suggestionSurfacedState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t PlusGenericSuggestionRuntimeSummary.suggestionNoveltyState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

BOOL static SuggestionDomain.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SuggestionDomain.hash(into:)()
{
  return sub_213EF3300();
}

uint64_t PlusRuntimeContactSuggestions.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t sub_213E15814(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlusRuntimeContactSuggestions);
}

uint64_t sub_213E15820(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlusRuntimeContactSuggestions);
}

uint64_t _s28SiriPrivateLearningInference29PlusRuntimeContactSuggestionsC5valueACSgSayAA0eg10SuggestionF7SummaryVGSg_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E15874(uint64_t a1)
{
  return sub_213E0F528(a1, (void (*)(_QWORD))type metadata accessor for PlusRuntimeGenericSuggestions);
}

uint64_t sub_213E15880(uint64_t a1)
{
  return sub_213E1588C(a1, (void (*)(_QWORD))type metadata accessor for PlusRuntimeGenericSuggestions);
}

uint64_t sub_213E1588C(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t PlusForcePrompted.init(value:)()
{
  return sub_213EF23C4();
}

{
  return sub_213EF23B8();
}

uint64_t PlusForcePrompted.__deallocating_deinit()
{
  _s28SiriPrivateLearningInference13CommonFeatureO09DonatedByA0Cfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_213E15940(uint64_t a1)
{
  return sub_213E15B94(a1, (void (*)(_QWORD))type metadata accessor for PlusForcePrompted);
}

uint64_t sub_213E1594C(uint64_t a1)
{
  return sub_213E15BE8(a1, (void (*)(_QWORD))type metadata accessor for PlusForcePrompted);
}

uint64_t PlusClientEventIdFeature.init(value:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_213EF1D64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = sub_213EF23C4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v5;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v2);
  sub_213DBDD88(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_213EF23B8();
  swift_retain();
  sub_213DAFEC4(a1, &qword_253F04828);
  if (v4)
    swift_release();
  return v4;
}

uint64_t _s28SiriPrivateLearningInference17PlusForcePromptedC5valueACSgSbSg_tcfC_0()
{
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t sub_213E15B88(uint64_t a1)
{
  return sub_213E15B94(a1, (void (*)(_QWORD))type metadata accessor for PlusContactSuggesterEnabled);
}

uint64_t sub_213E15B94(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23C4();
}

uint64_t sub_213E15BDC(uint64_t a1)
{
  return sub_213E15BE8(a1, (void (*)(_QWORD))type metadata accessor for PlusContactSuggesterEnabled);
}

uint64_t sub_213E15BE8(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  swift_allocObject();
  return sub_213EF23B8();
}

uint64_t type metadata accessor for PlusClientEventFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PlusContactSuggesterEnabled(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F06CC8);
}

BOOL sub_213E15C64(_QWORD *a1)
{
  return *a1 != 0;
}

id sub_213E15C74@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL _s28SiriPrivateLearningInference35PlusGenericSuggestionRuntimeSummaryV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  char *v35;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  if (*a1 != *a2)
    return 0;
  v35 = v7;
  v20 = a2;
  v21 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  if ((sub_213EF1D28() & 1) == 0)
    return 0;
  v22 = *(int *)(v21 + 24);
  v33 = a1;
  sub_213DBDD88((uint64_t)&a1[v22], (uint64_t)v19);
  v34 = v21;
  sub_213DBDD88((uint64_t)&v20[*(int *)(v21 + 24)], (uint64_t)v17);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_213DBDD88((uint64_t)v19, (uint64_t)v10);
  sub_213DBDD88((uint64_t)v17, v23);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) != 1)
  {
    sub_213DBDD88((uint64_t)v10, (uint64_t)v14);
    if (v24(v23, 1, v4) != 1)
    {
      v25 = v23;
      v26 = v35;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v35, v25, v4);
      sub_213DB196C((unint64_t *)&qword_253F06930, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v27 = sub_213EF2838();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v26, v4);
      sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
      sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
      v28(v14, v4);
      sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
      if ((v27 & 1) == 0)
        return 0;
      goto LABEL_10;
    }
    sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
    sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_8:
    sub_213DAFEC4((uint64_t)v10, &qword_253F04838);
    return 0;
  }
  sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
  sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
  if (v24(v23, 1, v4) != 1)
    goto LABEL_8;
  sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
LABEL_10:
  v30 = v33;
  v29 = v34;
  if ((sub_213EF1D28() & 1) != 0 && v30[*(int *)(v29 + 32)] == v20[*(int *)(v29 + 32)])
    return v30[*(int *)(v29 + 36)] == v20[*(int *)(v29 + 36)];
  return 0;
}

uint64_t _s28SiriPrivateLearningInference35PlusContactSuggestionRuntimeSummaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char v26;
  void (*v27)(char *, uint64_t);
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  if ((sub_213EF1D28() & 1) == 0)
    goto LABEL_10;
  v20 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v21 = a1;
  v22 = v20;
  v23 = *(int *)(v20 + 20);
  v31 = v21;
  sub_213DBDD88(v21 + v23, (uint64_t)v19);
  v32 = v22;
  v33 = a2;
  sub_213DBDD88(a2 + *(int *)(v22 + 20), (uint64_t)v17);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_213DBDD88((uint64_t)v19, (uint64_t)v10);
  sub_213DBDD88((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25((uint64_t)v10, 1, v4) != 1)
  {
    sub_213DBDD88((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v24, v4);
      sub_213DB196C((unint64_t *)&qword_253F06930, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v26 = sub_213EF2838();
      v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v7, v4);
      sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
      sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
      v27(v14, v4);
      sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
      if ((v26 & 1) == 0)
        goto LABEL_10;
      goto LABEL_9;
    }
    sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
    sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_213DAFEC4((uint64_t)v10, &qword_253F04838);
    goto LABEL_10;
  }
  sub_213DAFEC4((uint64_t)v17, &qword_253F04828);
  sub_213DAFEC4((uint64_t)v19, &qword_253F04828);
  if (v25(v24, 1, v4) != 1)
    goto LABEL_7;
  sub_213DAFEC4((uint64_t)v10, &qword_253F04828);
LABEL_9:
  if (*(unsigned __int8 *)(v31 + *(int *)(v32 + 24)) == *(unsigned __int8 *)(v33 + *(int *)(v32 + 24)))
  {
    v28 = *(_BYTE *)(v31 + *(int *)(v32 + 28)) ^ *(_BYTE *)(v33 + *(int *)(v32 + 28)) ^ 1;
    return v28 & 1;
  }
LABEL_10:
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_213E16330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD, _QWORD);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  char v70;
  char v71;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  _QWORD *v97;
  int v98;
  _QWORD *v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t result;
  _QWORD v123[2];
  char *v124;
  uint64_t v125;
  int64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  _QWORD *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(_QWORD, _QWORD, _QWORD);
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;

  v154 = (char *)a2;
  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v138 = (char *)v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v123 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v144 = (char *)v123 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v143 = (char *)v123 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v142 = (char *)v123 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v140 = (char *)v123 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v155 = (char *)v123 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v123 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)v123 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v139 = (char *)v123 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v123 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29);
  v141 = (char *)v123 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v146 = (char *)v123 - v34;
  v130 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v137 = (uint64_t)v123 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(_QWORD *)(a1 + 16);
  v37 = MEMORY[0x24BEE4AF8];
  if (!v36)
    return v37;
  v123[1] = v2;
  v158 = MEMORY[0x24BEE4AF8];
  v126 = v36;
  sub_213DCD540(0, v36, 0);
  v134 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  v38 = *((_QWORD *)v134 - 1);
  v128 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  v125 = *((_QWORD *)v154 + 2);
  v135 = (_QWORD *)(v125 + 24);
  swift_beginAccess();
  v39 = 0;
  v127 = *(_QWORD *)(v38 + 72);
  v145 = v5;
  v147 = v10;
  v154 = v31;
  v40 = v146;
  v124 = v22;
  v136 = v26;
  while (1)
  {
    v41 = v128 + v127 * v39;
    v148 = v41 + v134[5];
    v42 = *v135;
    v43 = *(_QWORD *)(*v135 + 16);
    v133 = v39;
    if (!v43)
      break;
    swift_bridgeObjectRetain();
    v44 = sub_213DFA284(v148);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      break;
    }
    v150 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = (int *)v130;
LABEL_50:
    v112 = v137 + v46[5];
    v113 = v150;
    if (*(_QWORD *)(v150 + 16))
    {
      v114 = sub_213DFA284(v41);
      if ((v115 & 1) != 0)
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16))(v112, *(_QWORD *)(v113 + 56) + *(_QWORD *)(v5 + 72) * v114, v4);
        v116 = 0;
      }
      else
      {
        v116 = 1;
      }
    }
    else
    {
      v116 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v112, v116, 1, v4);
    swift_bridgeObjectRelease();
    v117 = v137;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v137, v41, v4);
    v118 = *(_BYTE *)(v41 + v134[7]);
    *(_BYTE *)(v117 + v46[6]) = *(_BYTE *)(v41 + v134[6]);
    *(_BYTE *)(v117 + v46[7]) = v118;
    v37 = v158;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_213DCD540(0, *(_QWORD *)(v37 + 16) + 1, 1);
      v37 = v158;
    }
    v119 = v133;
    v121 = *(_QWORD *)(v37 + 16);
    v120 = *(_QWORD *)(v37 + 24);
    if (v121 >= v120 >> 1)
    {
      sub_213DCD540(v120 > 1, v121 + 1, 1);
      v37 = v158;
    }
    v39 = v119 + 1;
    *(_QWORD *)(v37 + 16) = v121 + 1;
    sub_213DBB430(v137, v37+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(_QWORD *)(v129 + 72) * v121, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    if (v39 == v126)
      return v37;
  }
  v131 = v41;
  v47 = *(_QWORD *)(v125 + 16);
  v48 = *(_QWORD *)(v47 + 16);
  v132 = v47;
  if (v48)
  {
    v49 = v47 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    swift_bridgeObjectRetain();
    v149 = *(_QWORD *)(v5 + 72);
    v50 = *(void (**)(_QWORD, _QWORD, _QWORD))(v5 + 16);
    v150 = MEMORY[0x24BEE4B00];
    v151 = v50;
    v50(v40, v49, v4);
    while (1)
    {
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v52(v40, 0, 1, v4);
      v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v53(v40, 1, v4) == 1)
        goto LABEL_39;
      v152 = v48;
      v153 = v49;
      v54 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v55 = v155;
      v54(v155, v40, v4);
      v56 = v142;
      v50(v142, v148, v4);
      v57 = v5;
      v58 = v143;
      v50(v143, v55, v4);
      v59 = (uint64_t)v144;
      v50(v144, v56, v4);
      sub_213EF1D10();
      sub_213EA372C(v59, (uint64_t)v154);
      v60 = *(void (**)(char *, uint64_t))(v57 + 8);
      v60(v58, v4);
      v61 = (uint64_t)v154;
      v60(v56, v4);
      if (v53((char *)v61, 1, v4))
      {
        sub_213DAFEC4(v61, &qword_253F04828);
        v62 = 1;
        v63 = (uint64_t)v141;
      }
      else
      {
        v63 = (uint64_t)v141;
        v54(v141, (char *)v61, v4);
        v62 = 0;
      }
      v52((char *)v63, v62, 1, v4);
      if (v53((char *)v63, 1, v4) == 1)
      {
        sub_213DAFEC4(v63, &qword_253F04828);
        v5 = v145;
        v40 = v146;
        v50 = v151;
        v51 = v153;
        goto LABEL_10;
      }
      v64 = v140;
      v54(v140, (char *)v63, v4);
      v65 = (uint64_t)v147;
      v66 = (void (*)(char *, char *, uint64_t))v151;
      v151(v147, v64, v4);
      v67 = (uint64_t)v139;
      v66(v139, v155, v4);
      v52((char *)v67, 0, 1, v4);
      if (v53((char *)v67, 1, v4) == 1)
      {
        sub_213DAFEC4(v67, &qword_253F04828);
        v68 = (_QWORD *)v150;
        swift_bridgeObjectRetain();
        v69 = sub_213DFA284(v65);
        v71 = v70;
        swift_bridgeObjectRelease();
        if ((v71 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v157 = v68;
          v5 = v145;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_213E00898();
            v68 = v157;
          }
          v73 = v69 * v149;
          v60((char *)(v68[6] + v69 * v149), v4);
          v74 = (uint64_t)v157;
          v75 = v157[7] + v73;
          v76 = (uint64_t)v136;
          v54(v136, (char *)v75, v4);
          v150 = v74;
          sub_213DFF94C(v69, v74);
          swift_bridgeObjectRelease();
          v77 = 0;
        }
        else
        {
          v77 = 1;
          v76 = (uint64_t)v136;
          v5 = v145;
        }
        v52((char *)v76, v77, 1, v4);
        v60(v147, v4);
        sub_213DAFEC4(v76, &qword_253F04828);
        goto LABEL_36;
      }
      v54(v138, (char *)v67, v4);
      v78 = (_QWORD *)v150;
      v79 = swift_isUniquelyReferenced_nonNull_native();
      v157 = v78;
      v81 = sub_213DFA284(v65);
      v82 = v78[2];
      v83 = (v80 & 1) == 0;
      v84 = v82 + v83;
      if (__OFADD__(v82, v83))
      {
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      v85 = v80;
      if (v78[3] >= v84)
      {
        if ((v79 & 1) != 0)
        {
          v88 = v157;
          if ((v80 & 1) == 0)
            goto LABEL_33;
        }
        else
        {
          sub_213E00898();
          v88 = v157;
          if ((v85 & 1) == 0)
            goto LABEL_33;
        }
      }
      else
      {
        sub_213DFC230(v84, v79);
        v86 = sub_213DFA284((uint64_t)v147);
        if ((v85 & 1) != (v87 & 1))
          goto LABEL_65;
        v81 = v86;
        v88 = v157;
        if ((v85 & 1) == 0)
        {
LABEL_33:
          v88[(v81 >> 6) + 8] |= 1 << v81;
          v91 = v81 * v149;
          v90 = (uint64_t)v147;
          v151(v88[6] + v81 * v149, v147, v4);
          v54((char *)(v88[7] + v91), v138, v4);
          v92 = v88[2];
          v93 = __OFADD__(v92, 1);
          v94 = v92 + 1;
          if (v93)
            goto LABEL_62;
          v88[2] = v94;
          v5 = v145;
          goto LABEL_35;
        }
      }
      v89 = v88[7] + v81 * v149;
      v5 = v145;
      (*(void (**)(unint64_t, char *, uint64_t))(v145 + 40))(v89, v138, v4);
      v90 = (uint64_t)v147;
LABEL_35:
      v150 = (uint64_t)v157;
      swift_bridgeObjectRelease();
      v60((char *)v90, v4);
LABEL_36:
      v40 = v146;
      v50 = v151;
      v51 = v153;
      v60(v140, v4);
LABEL_10:
      v60(v155, v4);
      v49 = v51 + v149;
      v48 = v152 - 1;
      if (v152 == 1)
        goto LABEL_38;
      v50(v40, v49, v4);
    }
  }
  swift_bridgeObjectRetain();
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v150 = MEMORY[0x24BEE4B00];
LABEL_38:
  v52(v40, 1, 1, v4);
LABEL_39:
  swift_bridgeObjectRelease();
  v95 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v96 = (uint64_t)v124;
  v95(v124, v148, v4);
  v97 = v135;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v98 = swift_isUniquelyReferenced_nonNull_native();
  v156 = (_QWORD *)*v97;
  v99 = v156;
  *v97 = 0x8000000000000000;
  v101 = sub_213DFA284(v96);
  v102 = v99[2];
  v103 = (v100 & 1) == 0;
  v104 = v102 + v103;
  if (!__OFADD__(v102, v103))
  {
    v105 = v100;
    if (v99[3] >= v104)
    {
      if ((v98 & 1) == 0)
        sub_213E0088C();
    }
    else
    {
      sub_213DFC224(v104, v98);
      v106 = sub_213DFA284(v96);
      if ((v105 & 1) != (v107 & 1))
        goto LABEL_65;
      v101 = v106;
    }
    v5 = v145;
    v108 = v156;
    if ((v105 & 1) != 0)
    {
      v109 = v156[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v109 + 8 * v101) = v150;
    }
    else
    {
      v156[(v101 >> 6) + 8] |= 1 << v101;
      v95((char *)(v108[6] + *(_QWORD *)(v5 + 72) * v101), v96, v4);
      *(_QWORD *)(v108[7] + 8 * v101) = v150;
      v110 = v108[2];
      v93 = __OFADD__(v110, 1);
      v111 = v110 + 1;
      if (v93)
        goto LABEL_64;
      v108[2] = v111;
    }
    *v135 = v108;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v96, v4);
    swift_endAccess();
    v40 = v146;
    v46 = (int *)v130;
    v41 = v131;
    goto LABEL_50;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E16F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;

  v59 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06DA0);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  v61 = *(_QWORD *)(v57 - 8);
  v5 = MEMORY[0x24BDAC7A8](v57);
  v48 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)&v46 - v7;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06908);
  v8 = MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v46 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v53 = (uint64_t)&v46 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v52 = (char *)&v46 - v14;
  v15 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v51 = (unint64_t)(v16 + 63) >> 6;
  v60 = a1;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v49 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v18)
    {
      v62 = (v18 - 1) & v18;
      v63 = v20;
      v21 = __clz(__rbit64(v18)) | (v20 << 6);
      goto LABEL_5;
    }
    v36 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v36 >= v51)
      goto LABEL_30;
    v37 = *(_QWORD *)(v50 + 8 * v36);
    v38 = v20 + 1;
    if (!v37)
    {
      v38 = v20 + 2;
      if (v20 + 2 >= v51)
        goto LABEL_30;
      v37 = *(_QWORD *)(v50 + 8 * v38);
      if (!v37)
      {
        v38 = v20 + 3;
        if (v20 + 3 >= v51)
          goto LABEL_30;
        v37 = *(_QWORD *)(v50 + 8 * v38);
        if (!v37)
        {
          v38 = v20 + 4;
          if (v20 + 4 >= v51)
            goto LABEL_30;
          v37 = *(_QWORD *)(v50 + 8 * v38);
          if (!v37)
            break;
        }
      }
    }
LABEL_24:
    v62 = (v37 - 1) & v37;
    v63 = v38;
    v21 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_5:
    v22 = v60;
    v23 = *(_QWORD *)(v60 + 48);
    v24 = sub_213EF1D64();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
    v27 = (uint64_t)v52;
    v26(v52, v23 + *(_QWORD *)(v25 + 72) * v21, v24);
    v64 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v21);
    v28 = v56;
    *(_QWORD *)(v27 + *(int *)(v56 + 48)) = v64;
    v29 = v53;
    sub_213DC0630(v27, v53, &qword_253F06908);
    v30 = *(int *)(v28 + 48);
    v31 = v54;
    v26(v54, v29, v24);
    v32 = *(_QWORD *)(v29 + v30);
    *(_QWORD *)&v31[v30] = v32;
    v33 = *(int *)(v28 + 48);
    v34 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v55, v31, v24);
    *(_QWORD *)(v34 + v33) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = (uint64_t)v58;
    swift_getAtKeyPath();
    sub_213DAFEC4(v34, &qword_253F06908);
    sub_213DAFEC4(v29, &qword_253F06908);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v35, 1, v57) == 1)
    {
      result = sub_213DAFEC4(v35, &qword_253F06DA0);
    }
    else
    {
      v40 = v35;
      v41 = v47;
      sub_213DBB430(v40, v47, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      sub_213DBB430(v41, v48, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v49 = sub_213DB6BA8(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
      v43 = *(_QWORD *)(v49 + 16);
      v42 = *(_QWORD *)(v49 + 24);
      if (v43 >= v42 >> 1)
        v49 = sub_213DB6BA8(v42 > 1, v43 + 1, 1, v49);
      v44 = v48;
      v45 = v49;
      *(_QWORD *)(v49 + 16) = v43 + 1;
      result = sub_213DBB430(v44, v45+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v43, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
    }
    v18 = v62;
    v20 = v63;
  }
  v39 = v20 + 5;
  if (v20 + 5 >= v51)
  {
LABEL_30:
    swift_release();
    return v49;
  }
  v37 = *(_QWORD *)(v50 + 8 * v39);
  if (v37)
  {
    v38 = v20 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v51)
      goto LABEL_30;
    v37 = *(_QWORD *)(v50 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_24;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_213E173DC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  char isUniquelyReferenced_nonNull_native;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  uint64_t v37;
  void *v38;

  v4 = a1;
  if (a1 >> 62)
    goto LABEL_36;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_213EF306C())
  {
    v34 = v4 & 0xC000000000000001;
    v6 = MEMORY[0x24BEE4AF8];
    v7 = 4;
    v33 = v4;
    while (1)
    {
      v9 = v34 ? (id)MEMORY[0x2199C49B0](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      v10 = v9;
      v4 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v38 = v9;
      sub_213E13880(&v38, a2, a3, &v37);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      v11 = v37;
      v12 = *(_QWORD *)(v37 + 16);
      v13 = *(_QWORD *)(v6 + 16);
      v14 = v13 + v12;
      if (__OFADD__(v13, v12))
        goto LABEL_32;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v14 <= *(_QWORD *)(v6 + 24) >> 1)
      {
        if (*(_QWORD *)(v11 + 16))
          goto LABEL_20;
      }
      else
      {
        if (v13 <= v14)
          v16 = v13 + v12;
        else
          v16 = v13;
        v6 = sub_213DB6BBC(isUniquelyReferenced_nonNull_native, v16, 1, v6);
        if (*(_QWORD *)(v11 + 16))
        {
LABEL_20:
          v17 = *(_QWORD *)(v6 + 16);
          v18 = (*(_QWORD *)(v6 + 24) >> 1) - v17;
          v19 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
          if (v18 < v12)
            goto LABEL_34;
          v20 = *(_QWORD *)(v19 - 8);
          v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
          v22 = *(_QWORD *)(v20 + 72);
          v23 = v6 + v21 + v22 * v17;
          v24 = v11 + v21;
          v25 = v22 * v12;
          v26 = v23 + v25;
          v27 = v24 + v25;
          if (v24 < v26 && v23 < v27)
          {
            swift_bridgeObjectRelease();
            result = sub_213EF30A8();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v12)
          {
            v29 = *(_QWORD *)(v6 + 16);
            v30 = __OFADD__(v29, v12);
            v31 = v29 + v12;
            if (v30)
              goto LABEL_35;
            *(_QWORD *)(v6 + 16) = v31;
          }
          goto LABEL_5;
        }
      }
      if (v12)
        goto LABEL_33;
LABEL_5:
      swift_bridgeObjectRelease();
      ++v7;
      v8 = v4 == v5;
      v4 = v33;
      if (v8)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_213E17664(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v2 = sub_213EF1D64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v48 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlusGenericSuggestionRuntimeSummary(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v46 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (uint64_t)&v38 - v9;
  v10 = (_QWORD *)MEMORY[0x24BEE4B00];
  v49 = (_QWORD *)MEMORY[0x24BEE4B00];
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return (uint64_t)v10;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = a1 + v13;
  v15 = *(_QWORD *)(v8 + 72);
  v45 = v13;
  v40 = v12 | 7;
  v41 = v15 + v13;
  v39 = xmmword_213EF53E0;
  v42 = v5;
  v43 = v3;
  v44 = v2;
  while (1)
  {
    v17 = v47;
    sub_213DCA7E4(v14, v47, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
    v18 = v17 + *(int *)(v5 + 20);
    v19 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v48, v18, v2);
    v21 = sub_213DFA284(v19);
    v22 = v10[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v10[3] < v24)
    {
      sub_213DFD524(v24, 1);
      v10 = v49;
      v26 = sub_213DFA284(v48);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_19;
      v21 = v26;
    }
    if ((v25 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v48, v2);
      v10 = v49;
      v28 = v49[7];
      sub_213DBB430(v47, v46, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      v29 = *(_QWORD *)(v28 + 8 * v21);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v28 + 8 * v21) = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v29 = sub_213DB6BBC(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
        *(_QWORD *)(v28 + 8 * v21) = v29;
      }
      v32 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        v29 = sub_213DB6BBC(v31 > 1, v32 + 1, 1, v29);
        *(_QWORD *)(v28 + 8 * v21) = v29;
      }
      v2 = v44;
      v16 = v45;
      *(_QWORD *)(v29 + 16) = v32 + 1;
      sub_213DBB430(v46, v29 + v16 + v32 * v15, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      v5 = v42;
      v3 = v43;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7F8);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      sub_213DBB430(v47, v33 + v45, type metadata accessor for PlusGenericSuggestionRuntimeSummary);
      v10[(v21 >> 6) + 8] |= 1 << v21;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v10[6] + *(_QWORD *)(v3 + 72) * v21, v48, v2);
      *(_QWORD *)(v10[7] + 8 * v21) = v33;
      v34 = v10[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_18;
      v10[2] = v36;
    }
    v14 += v15;
    if (!--v11)
      return (uint64_t)v10;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E17998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v48 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v46 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v38 - v11;
  v12 = (_QWORD *)MEMORY[0x24BEE4B00];
  v49 = (_QWORD *)MEMORY[0x24BEE4B00];
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return (uint64_t)v12;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v10 + 72);
  v45 = v15;
  v40 = v14 | 7;
  v41 = v17 + v15;
  v39 = xmmword_213EF53E0;
  v42 = v5;
  v43 = v4;
  v44 = a2;
  while (1)
  {
    sub_213DCA7E4(v16, v47, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
    v19 = v48;
    swift_getAtKeyPath();
    v21 = sub_213DFA284(v19);
    v22 = v12[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v12[3] < v24)
    {
      sub_213DFD8C8(v24, 1);
      v12 = v49;
      v26 = sub_213DFA284(v48);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_19;
      v21 = v26;
    }
    if ((v25 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v48, v4);
      v12 = v49;
      v28 = v49[7];
      sub_213DBB430(v47, v46, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      v29 = *(_QWORD *)(v28 + 8 * v21);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v28 + 8 * v21) = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v29 = sub_213DB6BA8(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
        *(_QWORD *)(v28 + 8 * v21) = v29;
      }
      v32 = *(_QWORD *)(v29 + 16);
      v31 = *(_QWORD *)(v29 + 24);
      if (v32 >= v31 >> 1)
      {
        v29 = sub_213DB6BA8(v31 > 1, v32 + 1, 1, v29);
        *(_QWORD *)(v28 + 8 * v21) = v29;
      }
      v18 = v45;
      *(_QWORD *)(v29 + 16) = v32 + 1;
      sub_213DBB430(v46, v29 + v18 + v32 * v17, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      v5 = v42;
      v4 = v43;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A800);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      sub_213DBB430(v47, v33 + v45, type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary);
      v12[(v21 >> 6) + 8] |= 1 << v21;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12[6] + *(_QWORD *)(v5 + 72) * v21, v48, v4);
      *(_QWORD *)(v12[7] + 8 * v21) = v33;
      v34 = v12[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_18;
      v12[2] = v36;
    }
    v16 += v17;
    if (!--v13)
      return (uint64_t)v12;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  swift_release();
  result = sub_213EF3288();
  __break(1u);
  return result;
}

void sub_213E17CCC(uint64_t *a1, id *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  void *v16;
  unsigned __int16 v17;
  unsigned int v18;
  char isUniquelyReferenced_nonNull_native;
  __int16 v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[2];
  uint64_t v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_213EF1D64();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v29 - v12;
  v14 = *a2;
  v15 = objc_msgSend(*a2, sel_suggestionId);
  if (v15)
  {
    v16 = v15;
    sub_213EF2C7C();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
      v17 = (unsigned __int16)objc_msgSend(v14, sel_isSuggestionPresentInModelOutput);
      v18 = objc_msgSend(v14, sel_isDuplicateSuggestion);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = *a1;
      *a1 = 0x8000000000000000;
      if (v18)
        v20 = 256;
      else
        v20 = 0;
      sub_213E246C0(v20 | v17, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
      *a1 = v30;
      swift_bridgeObjectRelease();
      v21 = *(void (**)(char *, uint64_t))(v8 + 8);
      v21(v11, v7);
      v21(v13, v7);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_213DAFEC4((uint64_t)v6, &qword_253F04828);
  if (qword_253F04A88 != -1)
    swift_once();
  v22 = sub_213EF2724();
  __swift_project_value_buffer(v22, (uint64_t)qword_253F08A00);
  v23 = sub_213EF270C();
  v24 = sub_213EF2CA0();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v30 = v26;
    *(_DWORD *)v25 = 136315138;
    if (qword_254D39FE8 != -1)
      swift_once();
    v27 = qword_254D3C790;
    v28 = *(_QWORD *)algn_254D3C798;
    swift_bridgeObjectRetain();
    v29[1] = sub_213DB0570(v27, v28, &v30);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v23, v24, "%s Contact suggestion metadata not extracted - suggestionId was missing", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v26, -1, -1);
    MEMORY[0x2199C53C4](v25, -1, -1);
  }

}

uint64_t sub_213E18038(unint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v9;
  uint64_t v10;

  v10 = MEMORY[0x24BEE4B00];
  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; v2 = sub_213EF306C())
  {
    for (i = 4; ; ++i)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2199C49B0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v5 = v4;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_contactSuggesterSuggestionMetadataReported);

      if (v7)
      {
        v9 = v7;
        sub_213E17CCC(&v10, &v9);

      }
      if (v6 == v2)
      {
        swift_bridgeObjectRelease_n();
        return v10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease_n();
  return MEMORY[0x24BEE4B00];
}

uint64_t sub_213E181A0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unsigned __int8 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v1 = a1;
  v35 = sub_213E18038(a1);
  if (v1 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain_n();
    v2 = sub_213EF306C();
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2)
    {
LABEL_3:
      v3 = 0;
      v4 = v1 & 0xC000000000000001;
      v5 = MEMORY[0x24BEE4AF8];
      v6 = 4;
      v34 = v1;
      while (1)
      {
        if (v4)
          v7 = (id)MEMORY[0x2199C49B0](v6 - 4, v1);
        else
          v7 = *(id *)(v1 + 8 * v6);
        v8 = v7;
        v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        v10 = objc_msgSend(v7, sel_contactSuggesterQueryContext);
        if (v10
          && (v11 = v10, v12 = objc_msgSend(v10, sel_ended), v11, v12)
          && (v13 = objc_msgSend(v12, sel_hasMatchingResults), v12, (v13 & 1) != 0))
        {
          v1 = v2;
          v14 = v4;
          v38 = v8;
          sub_213E132A4(&v38, v35, &v37);

          v15 = v37;
          v16 = *(_QWORD *)(v37 + 16);
          v17 = *(_QWORD *)(v5 + 16);
          v18 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_31;
          v36 = v3;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && v18 <= *(_QWORD *)(v5 + 24) >> 1)
          {
            v20 = v5;
          }
          else
          {
            if (v17 <= v18)
              v21 = v17 + v16;
            else
              v21 = v17;
            v20 = sub_213DB6BA8(isUniquelyReferenced_nonNull_native, v21, 1, v5);
          }
          v4 = v14;
          if (*(_QWORD *)(v15 + 16))
          {
            v22 = *(_QWORD *)(v20 + 16);
            v23 = (*(_QWORD *)(v20 + 24) >> 1) - v22;
            v24 = type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(0);
            if (v23 < v16)
              goto LABEL_33;
            v25 = *(_QWORD *)(v24 - 8);
            v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
            v27 = *(_QWORD *)(v25 + 72);
            v28 = v20 + v26 + v27 * v22;
            v29 = v27 * v16;
            v4 = v14;
            if (v15 + v26 < v28 + v29 && v28 < v15 + v26 + v29)
            {
              result = sub_213EF30A8();
              __break(1u);
              return result;
            }
            swift_arrayInitWithCopy();
            v2 = v1;
            v1 = v34;
            v5 = v20;
            v3 = v36;
            if (v16)
            {
              v30 = *(_QWORD *)(v5 + 16);
              v31 = __OFADD__(v30, v16);
              v32 = v30 + v16;
              if (v31)
                goto LABEL_34;
              *(_QWORD *)(v5 + 16) = v32;
            }
          }
          else
          {
            v2 = v1;
            v1 = v34;
            v5 = v20;
            v3 = v36;
            if (v16)
              goto LABEL_32;
          }
          swift_bridgeObjectRelease();
        }
        else
        {

        }
        ++v6;
        if (v9 == v2)
          goto LABEL_37;
      }
    }
  }
  v5 = MEMORY[0x24BEE4AF8];
LABEL_37:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_213E18494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a3 + a2 - 8) + 8))(*(_QWORD *)(a3 + a2 - 16));
}

uint64_t sub_213E184C4()
{
  return 16;
}

__n128 sub_213E184D0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for PlusClientEventFeatureExtractor.ContactSuggestionSummary(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F06D90);
}

void sub_213E184F0()
{
  sub_213EF2AE4();
  JUMPOUT(0x2199C52D4);
}

uint64_t sub_213E1851C()
{
  return 16;
}

__n128 sub_213E18528(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for PlusRuntimeContactSuggestions(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F06D28);
}

void sub_213E18548(uint64_t a1, void **a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  id v26;
  void *v27;
  unsigned int v28;
  char v29;
  unsigned int v30;
  char v31;
  id v32;
  void *v33;
  unsigned int v34;
  void (*v35)(char *, char *, uint64_t);
  int *v36;
  _BYTE *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  char *v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v58 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C8E0);
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v56 - v10;
  v12 = sub_213EF1D64();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v59 = (char *)&v56 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v56 - v19;
  v21 = *a2;
  v22 = objc_msgSend(v21, sel_suggestionLinkId);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_11;
  }
  v23 = v22;
  v60 = v20;
  sub_213EF2C7C();

  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v24(v11, 1, v12) == 1)
  {
LABEL_11:
    v9 = v11;
    goto LABEL_14;
  }
  v56 = v2;
  v25 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v25(v60, v11, v12);
  v26 = objc_msgSend(v21, sel_originalRequestId);
  if (v26)
  {
    v27 = v26;
    sub_213EF2C7C();

    if (v24(v9, 1, v12) != 1)
    {
      v25(v59, v9, v12);
      v28 = objc_msgSend(v21, sel_suggestionNoveltyState);
      if (v28 <= 3
        && (v29 = v28, v30 = objc_msgSend(v21, sel_suggestionSurfaced), v30 <= 3)
        && (v31 = v30, (v32 = objc_msgSend(v21, sel_suggestionDomainMetadata)) != 0)
        && (v33 = v32, v34 = objc_msgSend(v32, sel_suggestionGenerationDomain),
                       v33,
                       v34 <= 3))
      {
        v35 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
        v35(v16, v60, v12);
        v36 = (int *)type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
        v37 = v57;
        v35(&v57[v36[5]], v59, v12);
        *v37 = v34;
        v37[v36[6]] = v31;
        v37[v36[7]] = v29;
        (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v36 - 1) + 56))(v37, 0, 1, v36);
        sub_213EAB03C((uint64_t)v37, (uint64_t)v16);
        v38 = *(void (**)(char *, uint64_t))(v13 + 8);
        v38(v59, v12);
        v39 = v60;
      }
      else
      {
        if (qword_253F04A88 != -1)
          swift_once();
        v47 = sub_213EF2724();
        __swift_project_value_buffer(v47, (uint64_t)qword_253F08A00);
        v48 = sub_213EF270C();
        v49 = sub_213EF2CA0();
        v50 = os_log_type_enabled(v48, v49);
        v51 = v60;
        if (v50)
        {
          v52 = (uint8_t *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          v62 = v53;
          *(_DWORD *)v52 = 136315138;
          if (qword_254D39FE8 != -1)
            swift_once();
          v54 = qword_254D3C790;
          v55 = *(_QWORD *)algn_254D3C798;
          swift_bridgeObjectRetain();
          v61 = sub_213DB0570(v54, v55, &v62);
          sub_213EF2D9C();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213DAB000, v48, v49, "%s Generic suggestion metadata not extracted - unexpected enum values", v52, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v53, -1, -1);
          MEMORY[0x2199C53C4](v52, -1, -1);
        }

        v38 = *(void (**)(char *, uint64_t))(v13 + 8);
        v38(v59, v12);
        v39 = v51;
      }
      v38(v39, v12);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v60, v12);
LABEL_14:
  sub_213DAFEC4((uint64_t)v9, &qword_253F04828);
  if (qword_253F04A88 != -1)
    swift_once();
  v40 = sub_213EF2724();
  __swift_project_value_buffer(v40, (uint64_t)qword_253F08A00);
  v41 = sub_213EF270C();
  v42 = sub_213EF2CA0();
  if (os_log_type_enabled(v41, v42))
  {
    v43 = (uint8_t *)swift_slowAlloc();
    v44 = swift_slowAlloc();
    v62 = v44;
    *(_DWORD *)v43 = 136315138;
    if (qword_254D39FE8 != -1)
      swift_once();
    v45 = qword_254D3C790;
    v46 = *(_QWORD *)algn_254D3C798;
    swift_bridgeObjectRetain();
    v61 = sub_213DB0570(v45, v46, &v62);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v41, v42, "%s Generic suggestion metadata not extracted - suggestionId/requestId was missing", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v44, -1, -1);
    MEMORY[0x2199C53C4](v43, -1, -1);
  }

}

uint64_t sub_213E18BA8(unint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t j;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t result;
  void *v15;
  unint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_213EF306C();
    if (v3)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
    goto LABEL_16;
  }
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_15;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    swift_bridgeObjectRelease();

    result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  for (i = 0; i != v3; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x2199C49B0](i, a1);
    else
      v5 = *(id *)(a1 + 8 * i + 32);
    v6 = v5;
    v7 = objc_msgSend(v5, sel_plusSuggesterSuggestionMetadataReported);

    if (v7)
    {
      MEMORY[0x2199C44C4]();
      if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_213EF2A78();
      sub_213EF2AB4();
      sub_213EF2A54();
    }
  }
  swift_bridgeObjectRelease();
  v8 = v16;
LABEL_16:
  v16 = MEMORY[0x24BEE4B00];
  if (v8 >> 62)
    goto LABEL_26;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; v9 = sub_213EF306C())
  {
    for (j = 4; ; ++j)
    {
      v11 = (v8 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2199C49B0](j - 4, v8) : *(id *)(v8 + 8 * j);
      v12 = v11;
      v13 = j - 3;
      if (__OFADD__(j - 4, 1))
        break;
      v15 = v11;
      sub_213E18548((uint64_t)&v16, &v15);

      if (v13 == v9)
      {
        swift_bridgeObjectRelease_n();
        return v16;
      }
    }
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  return MEMORY[0x24BEE4B00];
}

uint64_t type metadata accessor for PlusRuntimeGenericSuggestions(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C7F8);
}

uint64_t type metadata accessor for PlusForcePrompted(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_254D3C848);
}

uint64_t type metadata accessor for PlusClientEventIdFeature(uint64_t a1)
{
  return sub_213DDE1A0(a1, qword_253F06B90);
}

uint64_t type metadata accessor for PlusContactSuggestionRuntimeSummary(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F06EB8);
}

uint64_t type metadata accessor for PlusGenericSuggestionRuntimeSummary(uint64_t a1)
{
  return sub_213DDE1A0(a1, (uint64_t *)&unk_253F06EC8);
}

uint64_t sub_213E18E5C(uint64_t a1, uint64_t a2)
{
  return sub_213DB196C(&qword_253F06DA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for PlusClientEventFeatureExtractor, (uint64_t)&protocol conformance descriptor for PlusClientEventFeatureExtractor);
}

unint64_t sub_213E18E8C()
{
  unint64_t result;

  result = qword_254D3C7C8;
  if (!qword_254D3C7C8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SuggestionSurfacedState, &type metadata for SuggestionSurfacedState);
    atomic_store(result, (unint64_t *)&qword_254D3C7C8);
  }
  return result;
}

unint64_t sub_213E18ED4()
{
  unint64_t result;

  result = qword_254D3C7D0;
  if (!qword_254D3C7D0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SuggestionNoveltyState, &type metadata for SuggestionNoveltyState);
    atomic_store(result, (unint64_t *)&qword_254D3C7D0);
  }
  return result;
}

unint64_t sub_213E18F1C()
{
  unint64_t result;

  result = qword_254D3C7D8;
  if (!qword_254D3C7D8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SuggestionDomain, &type metadata for SuggestionDomain);
    atomic_store(result, (unint64_t *)&qword_254D3C7D8);
  }
  return result;
}

uint64_t method lookup function for PlusClientEventFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlusClientEventFeatureExtractor.__allocating_init(picsIds:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PlusClientEventFeatureExtractor.extract(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

char *initializeBufferWithCopyOfBuffer for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v15] = a2[v15];
  }
  return a1;
}

uint64_t destroy for PlusContactSuggestionRuntimeSummary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v13] = a2[v13];
  return a1;
}

char *assignWithCopy for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v13] = a2[v13];
  return a1;
}

char *assignWithTake for PlusContactSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v16] = a2[v16];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlusContactSuggestionRuntimeSummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E19570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PlusContactSuggestionRuntimeSummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E19638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

void sub_213E196E0()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DBF3D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

char *initializeBufferWithCopyOfBuffer for PlusGenericSuggestionRuntimeSummary(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_213EF1D64();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    v13 = a3[6];
    v14 = &v4[v13];
    v15 = &a2[v13];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    v12(&v4[a3[7]], &a2[a3[7]], v10);
    v18 = a3[9];
    v4[a3[8]] = a2[a3[8]];
    v4[v18] = a2[v18];
  }
  return v4;
}

uint64_t destroy for PlusGenericSuggestionRuntimeSummary(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = sub_213EF1D64();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    v9(v7, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1 + a2[7], v5);
}

_BYTE *initializeWithCopy for PlusGenericSuggestionRuntimeSummary(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v16] = a2[v16];
  return a1;
}

_BYTE *assignWithCopy for PlusGenericSuggestionRuntimeSummary(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v14, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

_BYTE *initializeWithTake for PlusGenericSuggestionRuntimeSummary(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  v16 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v16] = a2[v16];
  return a1;
}

_BYTE *assignWithTake for PlusGenericSuggestionRuntimeSummary(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t (*v15)(_BYTE *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v16 = v15(&a1[v12], 1, v9);
  v17 = v15(v14, 1, v9);
  if (!v16)
  {
    if (!v17)
    {
      v11(v13, v14, v9);
      goto LABEL_7;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v13, v14, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
LABEL_7:
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  v19 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t getEnumTagSinglePayload for PlusGenericSuggestionRuntimeSummary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E19E38(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 252)
  {
    v4 = *a1;
    if (v4 >= 4)
      return v4 - 3;
    else
      return 0;
  }
  else
  {
    v8 = sub_213EF1D64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlusGenericSuggestionRuntimeSummary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_213E19EE0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 252)
  {
    *result = a2 + 3;
  }
  else
  {
    v8 = sub_213EF1D64();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_213E19F7C()
{
  unint64_t v0;
  unint64_t v1;

  sub_213EF1D64();
  if (v0 <= 0x3F)
  {
    sub_213DBF3D4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SuggestionSurfacedState()
{
  return &type metadata for SuggestionSurfacedState;
}

ValueMetadata *type metadata accessor for SuggestionNoveltyState()
{
  return &type metadata for SuggestionNoveltyState;
}

uint64_t _s28SiriPrivateLearningInference16SuggestionDomainOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213E1A08C + 4 * byte_213EF84B5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213E1A0C0 + 4 * asc_213EF84B0[v4]))();
}

uint64_t sub_213E1A0C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E1A0C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E1A0D0);
  return result;
}

uint64_t sub_213E1A0DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E1A0E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213E1A0E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E1A0F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionDomain()
{
  return &type metadata for SuggestionDomain;
}

uint64_t sub_213E1A10C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E1A118()
{
  return type metadata accessor for PlusRuntimeContactSuggestions(0);
}

uint64_t sub_213E1A120()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E1A12C()
{
  return type metadata accessor for PlusRuntimeGenericSuggestions(0);
}

uint64_t sub_213E1A134()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E1A140()
{
  return type metadata accessor for PlusForcePrompted(0);
}

uint64_t sub_213E1A148()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E1A154()
{
  return type metadata accessor for PlusClientEventIdFeature(0);
}

uint64_t sub_213E1A15C()
{
  return sub_213E0F8C4();
}

uint64_t sub_213E1A168()
{
  return type metadata accessor for PlusContactSuggesterEnabled(0);
}

_QWORD *sub_213E1A170(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_213EF1D64();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((_QWORD *)((char *)a1 + a3[5]), (_QWORD *)((char *)a2 + a3[5]), v7);
    v9 = a3[7];
    *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }
  return a1;
}

uint64_t sub_213E1A220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_213EF1D64();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t sub_213E1A288(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_213E1A30C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_213E1A394(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_213E1A418(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_213EF1D64();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_213E1A49C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E1A4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_213EF1D64();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_213E1A534()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E1A540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_213EF1D64();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_213E1A5B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_213E1A630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3C8C8;
  if (!qword_254D3C8C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254D3C8D0);
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254D3C8C8);
  }
  return result;
}

uint64_t sub_213E1A680@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_213E13D4C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(uint64_t a1)
{
  return sub_213DDE1A0(a1, qword_254D3C948);
}

uint64_t sub_213E1A6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_213E13768(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_213E1A6C8(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PlusClientEventFeatureExtractor.SuggestionMetadata(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlusClientEventFeatureExtractor.SuggestionMetadata(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_213E1A86C + 4 * byte_213EF84BF[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_213E1A8A0 + 4 * byte_213EF84BA[v4]))();
}

uint64_t sub_213E1A8A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_213E1A8A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x213E1A8B0);
  return result;
}

uint64_t sub_213E1A8BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x213E1A8C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_213E1A8C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_213E1A8D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlusClientEventFeatureExtractor.SuggestionMetadata()
{
  return &type metadata for PlusClientEventFeatureExtractor.SuggestionMetadata;
}

_QWORD *sub_213E1A8EC(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_213EF1D64();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
  }
  return v4;
}

uint64_t sub_213E1A998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_213EF1D64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_213E1A9D0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

_BYTE *sub_213E1AA50(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  a1[a3[6]] = a2[a3[6]];
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *sub_213E1AAD4(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

_BYTE *sub_213E1AB54(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_213EF1D64();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v10] = a2[v10];
  return a1;
}

uint64_t sub_213E1ABD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_213E1ABE0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 252)
  {
    v4 = *a1;
    if (v4 >= 4)
      return v4 - 3;
    else
      return 0;
  }
  else
  {
    v8 = sub_213EF1D64();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_213E1AC54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_213E1AC60(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 252)
  {
    *result = a2 + 3;
  }
  else
  {
    v7 = sub_213EF1D64();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_213E1ACD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_213EF1D64();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t PICSStoreApi.__allocating_init(store:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  PICSStoreApi.init(store:)(a1);
  return v2;
}

uint64_t PICSStoreApi.init(store:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[40];

  sub_213DCC3D8(a1, (uint64_t)&v8, &qword_254D3C988);
  if (v9)
  {
    sub_213DB0BF0(&v8, (uint64_t)v10);
    sub_213DAFDFC((uint64_t)v10, (uint64_t)&v8);
    sub_213EF24CC();
    type metadata accessor for PlusContactSuggestionStoreRuntimeQueryWrapper();
    v3 = (_QWORD *)swift_allocObject();
    v3[8] = 0xD000000000000030;
    v3[9] = 0x8000000213F06FB0;
    sub_213DB0BF0(&v8, (uint64_t)(v3 + 2));
    type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
    v4 = swift_allocObject();
    type metadata accessor for SELFEventLogEmitters();
    v5 = swift_allocObject();
    sub_213DB0BF0(&v7, v5 + 16);
    *(_QWORD *)(v4 + 16) = v5;
    v3[7] = v4;
    sub_213DAFEC4(a1, &qword_254D3C988);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    sub_213DAFEC4(a1, &qword_254D3C988);
    sub_213DAFEC4((uint64_t)&v8, &qword_254D3C988);
    v3 = 0;
  }
  *(_QWORD *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_213E1AF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_213EF1D64();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_253F04A88 != -1)
    swift_once();
  v14 = sub_213EF2724();
  __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
  v15 = sub_213EF270C();
  v16 = sub_213EF2CA0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v29 = v9;
    v18 = a3;
    v19 = a2;
    v20 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_213DAB000, v15, v16, "PICSStoreApi is deprecated and usage should be migrated to PlusContactSuggestionStoreRuntimeQueryWrapper.", v17, 2u);
    v21 = v20;
    a2 = v19;
    a3 = v18;
    v4 = v3;
    v9 = v29;
    MEMORY[0x2199C53C4](v21, -1, -1);
  }

  if (*(_QWORD *)(v4 + 16))
  {
    swift_retain();
    v22 = sub_213E1B218((uint64_t)&unk_24D100468);
    sub_213DCC3D8(a3, (uint64_t)v9, &qword_253F04828);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_213EF1D58();
      sub_213DAFEC4((uint64_t)v9, &qword_253F04828);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    }
    v26 = sub_213E8C8E0(a2, v22, (uint64_t)v13);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v23 = sub_213EF270C();
    v24 = sub_213EF2CA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_213DAB000, v23, v24, "PICSStoreApi for SiriInference: queryWrapper is nil", v25, 2u);
      MEMORY[0x2199C53C4](v25, -1, -1);
    }

    return MEMORY[0x24BEE4AF8];
  }
  return v26;
}

uint64_t PICSStoreApi.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PICSStoreApi.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_213E1B218(uint64_t a1)
{
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B210);
    sub_213EF2EA4();
    v2 = *(unsigned __int8 *)(a1 + 32);
    sub_213EF32F4();
    __asm { BR              X8 }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t type metadata accessor for PICSStoreApi()
{
  return objc_opt_self();
}

uint64_t method lookup function for PICSStoreApi()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PICSStoreApi.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PICSStoreApi.query(queryId:query:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t sub_213E1B62C(uint64_t a1)
{
  uint64_t v2;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B208);
    sub_213EF2EA4();
    v2 = *(unsigned __int8 *)(a1 + 32);
    sub_213EF32F4();
    __asm { BR              X8 }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_213E1BAE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CA38);
    v3 = sub_213EF2EA4();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_213EF32F4();
      sub_213EF3300();
      result = sub_213EF3330();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_213E1BC20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EA0);
    v3 = sub_213EF2EA4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_213EF32F4();
      swift_bridgeObjectRetain();
      sub_213EF28BC();
      result = sub_213EF3330();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_213EF3234(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_213EF3234();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

id PlusMediaSuggestion.toKVItem()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD *v32;
  id v33;
  void *v34;
  id v35;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42[2];
  uint64_t v43[10];
  _OWORD v44[5];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[16];
  id v51[3];

  v51[2] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5E8E8]), sel_init);
  sub_213EF1D10();
  v2 = (void *)sub_213EF2844();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v45 = 0;
  v3 = objc_msgSend(v1, sel_setItemType_itemId_error_, 23, v2, &v45);

  v4 = (void *)v45;
  if (!v3)
  {
    v7 = (id)v45;
    v8 = (void *)sub_213EF1BA8();

    swift_willThrow();
LABEL_23:
    if (qword_253F04A88 != -1)
      swift_once();
    v26 = sub_213EF2724();
    __swift_project_value_buffer(v26, (uint64_t)qword_253F08A00);
    v27 = v8;
    v28 = v8;
    v29 = sub_213EF270C();
    v30 = sub_213EF2CA0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v31 = 138412290;
      v33 = v8;
      v34 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v42[0] = v34;
      sub_213EF2D9C();
      *v32 = v34;

      _os_log_impl(&dword_213DAB000, v29, v30, "Error occured during mapping PIMS to learnedMediaEntity %@", v31, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E90);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v32, -1, -1);
      MEMORY[0x2199C53C4](v31, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlusMediaSuggestion() + 20));
  v6 = v4;
  sub_213E6EFF8(v5, v43);
  sub_213DC0630((uint64_t)v43, (uint64_t)v44, &qword_254D3AB00);
  if (*((_QWORD *)&v44[0] + 1) != 1)
  {
    v45 = v44[0];
    v46 = v44[1];
    v47 = v44[2];
    v48 = v44[3];
    v49 = v44[4];
    if (*((_QWORD *)&v44[0] + 1))
    {
      swift_bridgeObjectRetain();
      v9 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
      v51[0] = 0;
      v10 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1054, v9, v51);

      v11 = v51[0];
      if (!v10)
        goto LABEL_20;
      v12 = v51[0];

    }
    if (*((_QWORD *)&v46 + 1))
    {
      swift_bridgeObjectRetain();
      v13 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
      v51[0] = 0;
      v14 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1050, v13, v51);

      v11 = v51[0];
      if (!v14)
        goto LABEL_20;
      v15 = v51[0];

    }
    if (*((_QWORD *)&v47 + 1))
    {
      swift_bridgeObjectRetain();
      v16 = (void *)sub_213EF2844();
      swift_bridgeObjectRelease();
      v51[0] = 0;
      v17 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1051, v16, v51);

      v11 = v51[0];
      if (!v17)
        goto LABEL_20;
      v18 = v51[0];

    }
    if (!*((_QWORD *)&v48 + 1))
      goto LABEL_17;
    swift_bridgeObjectRetain();
    v19 = (void *)sub_213EF2844();
    swift_bridgeObjectRelease();
    v51[0] = 0;
    v20 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1052, v19, v51);

    v11 = v51[0];
    if (v20)
    {
      v21 = v51[0];

LABEL_17:
      sub_213DC0630((uint64_t)&v49, (uint64_t)v50, &qword_254D3AFC8);
      sub_213DC0630((uint64_t)v50, (uint64_t)v51, &qword_254D3AFC8);
      if (v51[1])
      {
        sub_213E1C89C((uint64_t)v50);
        sub_213DC077C(v43);
        v22 = (void *)sub_213EF2844();
        sub_213E1C8C4((uint64_t)v50);
        v42[0] = 0;
        v23 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1053, v22, v42);

        if (!v23)
        {
LABEL_34:
          v25 = v42[0];
          goto LABEL_21;
        }
        v24 = v42[0];

      }
      else
      {
        sub_213DC077C(v43);
      }
      v37 = (void *)sub_213EF2844();
      v42[0] = 0;
      v38 = objc_msgSend(v3, sel_addFieldWithType_value_error_, 1055, v37, v42);

      if (v38)
      {
        v39 = v42[0];

        v42[0] = 0;
        v35 = objc_msgSend(v3, sel_buildItemWithError_, v42);
        v40 = v42[0];
        if (v35)
        {

          return v35;
        }
        v41 = v40;
        v8 = (void *)sub_213EF1BA8();

        goto LABEL_22;
      }
      goto LABEL_34;
    }
LABEL_20:
    v25 = v11;
    sub_213DC077C(v43);
LABEL_21:
    v8 = (void *)sub_213EF1BA8();

LABEL_22:
    swift_willThrow();

    goto LABEL_23;
  }

  return 0;
}

id PlusContactSuggestion.toKVItem()()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  void *v25;
  void *v27;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE5E8E8]), sel_init);
  sub_213EF1D10();
  v1 = (void *)sub_213EF2844();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  v2 = objc_msgSend(v0, sel_setItemType_itemId_error_, 22, v1, v28);

  v3 = v28[0];
  if (!v2)
  {
    v14 = v28[0];
    v15 = (void *)sub_213EF1BA8();

    swift_willThrow();
LABEL_11:

    if (qword_253F04A88 != -1)
      swift_once();
    v17 = sub_213EF2724();
    __swift_project_value_buffer(v17, (uint64_t)qword_253F08A00);
    v18 = v15;
    v19 = v15;
    v20 = sub_213EF270C();
    v21 = sub_213EF2CA0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v24 = v15;
      v25 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v28[0] = v25;
      sub_213EF2D9C();
      *v23 = v25;

      _os_log_impl(&dword_213DAB000, v20, v21, "Error occured during building learnedContact %@", v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E90);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v23, -1, -1);
      MEMORY[0x2199C53C4](v22, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  type metadata accessor for PlusContactSuggestion();
  v4 = v3;
  sub_213E6FB5C();
  if (!v5)
  {

    return 0;
  }
  v6 = (void *)sub_213EF2844();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  v7 = objc_msgSend(v2, sel_addFieldWithType_value_error_, 1001, v6, v28);

  if (!v7
    || (v8 = v28[0],
        v7,
        v9 = (void *)sub_213EF2844(),
        v28[0] = 0,
        v10 = objc_msgSend(v2, sel_addFieldWithType_value_error_, 1000, v9, v28),
        v9,
        !v10))
  {
    v16 = v28[0];
    v15 = (void *)sub_213EF1BA8();

LABEL_10:
    swift_willThrow();

    v0 = v2;
    goto LABEL_11;
  }
  v11 = v28[0];

  v28[0] = 0;
  v12 = objc_msgSend(v2, sel_buildItemWithError_, v28);
  v13 = v28[0];
  if (!v12)
  {
    v27 = v13;
    v15 = (void *)sub_213EF1BA8();

    goto LABEL_10;
  }

  return v12;
}

uint64_t sub_213E1C7CC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_213E1C7EC(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_213EF2D9C();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_213E1C89C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_213E1C8C4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t dispatch thunk of KVItemConvertable.toKVItem()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t storeEnumTagSinglePayload for SuggestionDonationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213E1C934 + 4 * byte_213EF8AC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213E1C954 + 4 * byte_213EF8AC5[v4]))();
}

_BYTE *sub_213E1C934(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213E1C954(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213E1C95C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213E1C964(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213E1C96C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213E1C974(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SuggestionDonationError()
{
  return &type metadata for SuggestionDonationError;
}

unint64_t sub_213E1C994()
{
  unint64_t result;

  result = qword_254D3CA40;
  if (!qword_254D3CA40)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF8B88, &type metadata for SuggestionDonationError);
    atomic_store(result, (unint64_t *)&qword_254D3CA40);
  }
  return result;
}

uint64_t sub_213E1C9D8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_213DCD0C8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_213DCD0C8(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t ContactEntityUtteranceComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 32) = a1;
  *(double *)(result + 16) = a3;
  *(_BYTE *)(result + 24) = a2;
  return result;
}

uint64_t ContactEntityUtteranceComparator.init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)(uint64_t a1, char a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 32) = a1;
  *(double *)(v3 + 16) = a3;
  *(_BYTE *)(v3 + 24) = a2;
  return v3;
}

BOOL sub_213E1CB10()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAEB3C(v0);
  swift_bridgeObjectRelease();
  if (v1)
    swift_bridgeObjectRelease();
  return v1 != 0;
}

uint64_t sub_213E1CB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213E1CBA0(a1, a2, *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 24), 0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_213E1DEC0, a3, *(double *)(v3 + 16));
}

uint64_t sub_213E1CB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  return sub_213E1CBA0(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_213E7A5C8, a6, a7);
}

uint64_t sub_213E1CBA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t (*a6)(uint64_t, uint64_t, _QWORD)@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  ValueMetadata *v34;
  unint64_t v35;

  type metadata accessor for FeaturisedTurn(0);
  v16 = swift_bridgeObjectRetain();
  v17 = sub_213DAE9A8(v16);
  *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease());
  if (!v17)
    goto LABEL_10;
  v19 = swift_bridgeObjectRetain();
  v20 = sub_213DAE9A8(v19);
  swift_bridgeObjectRelease();
  if (!v20)
  {
    *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRelease());
LABEL_10:
    *(_QWORD *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
    return result;
  }
  swift_bridgeObjectRetain();
  v21 = sub_213DDDEB8(v17);
  swift_bridgeObjectRelease();
  v22 = sub_213DF2984(v21, a3);
  swift_bridgeObjectRelease();
  v23 = sub_213DDDEB8(v20);
  swift_bridgeObjectRelease();
  v24 = sub_213DF2984(v23, v22);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  *(double *)&result = COERCE_DOUBLE(swift_release());
  if (v25 != 1)
    goto LABEL_10;
  *(double *)&result = COERCE_DOUBLE(a6(a1, a2, a5 & 1));
  if ((v26 & 1) != 0)
    goto LABEL_10;
  v27 = result;
  if (*(double *)&result >= 0.3)
  {
    if (*(double *)&result >= 0.5)
    {
      if (*(double *)&result >= 0.7)
      {
        if (*(double *)&result >= 0.85)
        {
          if (*(double *)&result >= 1.0)
          {
            if (*(double *)&result == 1.0)
            {
              if (qword_253F04BB0 != -1)
                swift_once();
              v34 = &type metadata for PIMSConstraintMismatch;
              v35 = sub_213DE48B4();
              v31 = 0xD000000000000016;
              v32 = 0x8000000213F06090;
              v28 = 9;
            }
            else
            {
              if (qword_253F04BB0 != -1)
                swift_once();
              v34 = &type metadata for PIMSConstraintMismatch;
              v35 = sub_213DE48B4();
              v31 = 0xD000000000000016;
              v32 = 0x8000000213F06090;
              v28 = 10;
            }
          }
          else
          {
            if (qword_253F04BB0 != -1)
              swift_once();
            v34 = &type metadata for PIMSConstraintMismatch;
            v35 = sub_213DE48B4();
            v31 = 0xD000000000000016;
            v32 = 0x8000000213F06090;
            v28 = 8;
          }
        }
        else
        {
          if (qword_253F04BB0 != -1)
            swift_once();
          v34 = &type metadata for PIMSConstraintMismatch;
          v35 = sub_213DE48B4();
          v31 = 0xD000000000000016;
          v32 = 0x8000000213F06090;
          v28 = 7;
        }
      }
      else
      {
        if (qword_253F04BB0 != -1)
          swift_once();
        v34 = &type metadata for PIMSConstraintMismatch;
        v35 = sub_213DE48B4();
        v31 = 0xD000000000000016;
        v32 = 0x8000000213F06090;
        v28 = 6;
      }
    }
    else
    {
      if (qword_253F04BB0 != -1)
        swift_once();
      v34 = &type metadata for PIMSConstraintMismatch;
      v35 = sub_213DE48B4();
      v31 = 0xD000000000000016;
      v32 = 0x8000000213F06090;
      v28 = 5;
    }
  }
  else
  {
    if (qword_253F04BB0 != -1)
      swift_once();
    v34 = &type metadata for PIMSConstraintMismatch;
    v35 = sub_213DE48B4();
    v31 = 0xD000000000000016;
    v32 = 0x8000000213F06090;
    v28 = 4;
  }
  v33 = v28;
  sub_213EF210C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v31);
  v29 = type metadata accessor for EntityUtteranceComparison();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v27;
  *(double *)(v30 + 24) = a8;
  *(_BYTE *)(v30 + 32) = a4 & 1;
  *(_QWORD *)(a7 + 24) = v29;
  *(double *)&result = COERCE_DOUBLE(sub_213E1E25C());
  *(double *)(a7 + 32) = *(double *)&result;
  *(_QWORD *)a7 = v30;
  return result;
}

uint64_t sub_213E1D048(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  _QWORD v29[4];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CA58);
  result = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)(a5 + 16) <= a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = *(_QWORD *)(a5 + 8 * a1 + 32);
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = *(_QWORD *)(a4 + 32);
  if (v16 >= *(_QWORD *)(v17 + 16))
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v18 = *(_QWORD *)(v17 + 8 * v16 + 32);
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    v20 = sub_213EF1D7C();
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    swift_bridgeObjectRetain();
    v22 = v19 - 1;
    v29[1] = v18;
    v23 = (uint64_t *)(v18 + 56);
    do
    {
      v24 = v22;
      v25 = *(v23 - 1);
      v26 = *v23;
      v30 = *(_OWORD *)(v23 - 3);
      v31 = v25;
      v32 = v26;
      v29[2] = a6;
      v29[3] = a7;
      v21(v15, 1, 1, v20);
      sub_213E1E320();
      sub_213DE52C8();
      swift_bridgeObjectRetain();
      sub_213EF2DD8();
      v28 = v27;
      v19 = (v27 & 1) == 0;
      sub_213E1E364((uint64_t)v15);
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
        break;
      v22 = v24 - 1;
      v23 += 4;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  return v19;
}

unint64_t sub_213E1D1FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_213EF2964() != a1 || v9 != a2)
  {
    v10 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_213EF28D4();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_213E1D2E8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_213EF2988();
  __break(1u);
  return result;
}

uint64_t ContactEntityUtteranceComparator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContactEntityUtteranceComparator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E1D374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_213E1CBA0(a1, a2, *(_QWORD *)(*(_QWORD *)v3 + 32), *(_BYTE *)(*(_QWORD *)v3 + 24), 0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_213E1DEC0, a3, *(double *)(*(_QWORD *)v3 + 16));
}

uint64_t type metadata accessor for ContactEntityUtteranceComparator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContactEntityUtteranceComparator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactEntityUtteranceComparator.__allocating_init(taskNamesOfInterest:restatementThreshold:allowsIdenticalUtterances:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ContactEntityUtteranceComparator.turnMeetsFeatureFilterCriteria(turn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ContactEntityUtteranceComparator.compareTurns(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_213E1D3F8(uint64_t result, uint64_t (*a2)(unint64_t, uint64_t, uint64_t))
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t i;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v4 = 0;
  v5 = result + 40;
  v6 = MEMORY[0x24BEE4AF8];
  v15 = result + 40;
  do
  {
    if (v4 <= v2)
      v7 = v2;
    else
      v7 = v4;
    v8 = (uint64_t *)(v5 + 16 * v4);
    for (i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      v11 = *(v8 - 1);
      v10 = *v8;
      v4 = i + 1;
      swift_bridgeObjectRetain();
      if ((a2(i, v11, v10) & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      v8 += 2;
      if (v2 == v4)
        return v6;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_213DCD5C4(0, *(_QWORD *)(v6 + 16) + 1, 1);
    v13 = *(_QWORD *)(v6 + 16);
    v12 = *(_QWORD *)(v6 + 24);
    if (v13 >= v12 >> 1)
      result = sub_213DCD5C4(v12 > 1, v13 + 1, 1);
    *(_QWORD *)(v6 + 16) = v13 + 1;
    v14 = (_QWORD *)(v6 + 24 * v13);
    v14[4] = i;
    v14[5] = v11;
    v14[6] = v10;
    v5 = v15;
  }
  while (v2 - 1 != i);
  return v6;
}

_QWORD *sub_213E1D568(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v37 = MEMORY[0x24BEE4AF8];
    sub_213DCD598(0, v1, 0);
    sub_213DE52C8();
    v4 = a1 + 40;
    do
    {
      v5 = sub_213EF2DB4();
      v7 = *(_QWORD *)(v37 + 16);
      v6 = *(_QWORD *)(v37 + 24);
      v8 = v7 + 1;
      if (v7 >= v6 >> 1)
      {
        sub_213DCD598(v6 > 1, v7 + 1, 1);
        v8 = v7 + 1;
      }
      v4 += 16;
      *(_QWORD *)(v37 + 16) = v8;
      *(_QWORD *)(v37 + 8 * v7 + 32) = v5;
      --v1;
    }
    while (v1);
    v34 = v37;
  }
  else
  {
    v8 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v8)
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      goto LABEL_27;
    }
    v34 = MEMORY[0x24BEE4AF8];
  }
  v35 = v8;
  sub_213DCD56C(0, v8, 0);
  v9 = v35;
  v10 = 0;
  v11 = v2;
  do
  {
    v12 = *(_QWORD *)(v34 + 32 + 8 * v10);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v36 = v11;
      swift_bridgeObjectRetain_n();
      v14 = (unint64_t *)(v12 + 40);
      v15 = v2;
      do
      {
        v16 = *(v14 - 1);
        v17 = *v14;
        swift_bridgeObjectRetain();
        v18 = sub_213E1D1FC(92, 0xE100000000000000, v16, v17);
        if ((v19 & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v20 = v18;
          swift_bridgeObjectRetain();
          v21 = sub_213E1D2E8(v20, v16, v17);
          v23 = v22;
          v25 = v24;
          v27 = v26;
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_213DB622C(0, v15[2] + 1, 1, v15);
          v29 = v15[2];
          v28 = v15[3];
          if (v29 >= v28 >> 1)
            v15 = sub_213DB622C((_QWORD *)(v28 > 1), v29 + 1, 1, v15);
          v15[2] = v29 + 1;
          v30 = &v15[4 * v29];
          v30[4] = v21;
          v30[5] = v23;
          v30[6] = v25;
          v30[7] = v27;
        }
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease_n();
      v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v9 = v35;
      v11 = v36;
    }
    else
    {
      v15 = v2;
    }
    v32 = v11[2];
    v31 = v11[3];
    if (v32 >= v31 >> 1)
    {
      sub_213DCD56C(v31 > 1, v32 + 1, 1);
      v9 = v35;
    }
    ++v10;
    v11[2] = v32 + 1;
    v11[v32 + 4] = v15;
  }
  while (v10 != v9);
LABEL_27:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_213E1D85C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;

  type metadata accessor for FeaturisedTurn(0);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_213DAF9C0(v4);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    result = sub_213DAFE88(a1);
    v7 = 0;
LABEL_8:
    v9 = 0;
LABEL_9:
    v11 = 0;
LABEL_10:
    v12 = 0;
    goto LABEL_11;
  }
  v6 = swift_bridgeObjectRetain();
  v7 = sub_213DAF9CC(v6);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    sub_213DAFE88(a1);
    result = swift_bridgeObjectRelease();
    v5 = 0;
    goto LABEL_8;
  }
  v8 = swift_bridgeObjectRetain();
  v9 = sub_213DAF9D8(v8);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_213DAFE88(a1);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v5 = 0;
    v7 = 0;
    goto LABEL_9;
  }
  v10 = swift_bridgeObjectRetain();
  v11 = sub_213DAEB3C(v10);
  swift_bridgeObjectRelease();
  if (!v11)
  {
    sub_213DAFE88(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v5 = 0;
    v7 = 0;
    v9 = 0;
    goto LABEL_10;
  }
  v12 = sub_213E1D568(v7);
  result = sub_213DAFE88(a1);
LABEL_11:
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
  a2[4] = (uint64_t)v12;
  return result;
}

uint64_t sub_213E1D9BC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v5;
  uint64_t v9;
  int64_t v10;
  _QWORD *v12;

  v5 = a3 >> 1;
  if (a3 >> 1 == a2)
  {
    return 0;
  }
  else
  {
    v9 = result;
    v10 = a3 >> 1;
    while (!__OFSUB__(v10--, 1))
    {
      if (v10 < a2 || v10 >= v5)
        goto LABEL_15;
      v12 = (_QWORD *)(v9 + 16 * v10);
      if (*v12 == a4 && v12[1] == a5)
        return v10;
      result = sub_213EF3234();
      if ((result & 1) != 0)
        return v10;
      if (v10 == a2)
        return 0;
    }
    __break(1u);
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_213E1DA78(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  BOOL v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;

  v7 = *(_QWORD **)a1;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v8)
  {
    v9 = v7[v8 + 3];
    v3 = __OFADD__(v9, 1);
    v10 = v9 + 1;
    if (!v3)
      goto LABEL_3;
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = 0;
  if (v3)
    goto LABEL_16;
LABEL_3:
  v11 = *(_QWORD *)(a3 + 16);
  if ((uint64_t)(v11 - 1) < v10)
    v10 = v11 - 1;
  if (v10 < -1)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v11 < ++v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v12 = sub_213E1D9BC(a3 + 32, 0, (2 * v10) | 1, *a2, a2[1]);
  if ((v13 & 1) == 0)
  {
    v4 = v12;
    goto LABEL_11;
  }
  if (!v8)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v4 = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_12;
    goto LABEL_18;
  }
  v4 = v7[v8 + 3];
LABEL_11:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    goto LABEL_12;
LABEL_18:
  v7 = sub_213DB65E0(0, v7[2] + 1, 1, v7);
LABEL_12:
  v5 = v7[2];
  v10 = v7[3];
  v8 = v5 + 1;
  if (v5 >= (unint64_t)v10 >> 1)
LABEL_21:
    v7 = sub_213DB65E0((_QWORD *)((unint64_t)v10 > 1), v8, 1, v7);
  v7[2] = v8;
  v7[v5 + 4] = v4;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v7;
  return result;
}

uint64_t sub_213E1DBD4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v20;
  uint64_t v21[2];
  uint64_t v22;
  uint64_t v23;

  v2 = a1[2];
  v1 = a1[3];
  v23 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3 != *(_QWORD *)(v1 + 16) || (v4 = *a1, v5 = *(_QWORD *)(*a1 + 16), v5 != *(_QWORD *)(a1[1] + 16)))
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v14 = sub_213EF2724();
    __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
    v15 = sub_213EF270C();
    v16 = sub_213EF2CA0();
    if (!os_log_type_enabled(v15, v16))
      goto LABEL_17;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "[EntityUtteranceComparator] Utterance and phoneme lengths do not match up. Skipping entity-based comparison.";
LABEL_16:
    _os_log_impl(&dword_213DAB000, v15, v16, v18, v17, 2u);
    MEMORY[0x2199C53C4](v17, -1, -1);
LABEL_17:

    return MEMORY[0x24BEE4AF8];
  }
  v6 = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    v7 = (uint64_t *)(v2 + 40);
    do
    {
      v8 = *v7;
      v21[0] = *(v7 - 1);
      v21[1] = v8;
      swift_bridgeObjectRetain();
      sub_213E1DA78((uint64_t)&v22, v21, v4);
      v7 += 2;
      swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
    sub_213E1E2EC((uint64_t)&v23);
    a1 = (uint64_t *)sub_213E1E2EC((uint64_t)&v23);
    v6 = v22;
  }
  v9 = *(_QWORD *)(v6 + 16);
  if (v9)
  {
    v10 = 0;
    while (*(_QWORD *)(v6 + 8 * v10 + 32) < v5)
    {
      if (v9 == ++v10)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v20 = sub_213EF2724();
    __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
    v15 = sub_213EF270C();
    v16 = sub_213EF2CA0();
    if (!os_log_type_enabled(v15, v16))
      goto LABEL_17;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "[EntityUtteranceComparator] Could not map from postITN phonemes into preITN phonemes. Skipping entity-based comparison.";
    goto LABEL_16;
  }
LABEL_11:
  MEMORY[0x24BDAC7A8](a1);
  v11 = swift_bridgeObjectRetain();
  v12 = sub_213E1D3F8(v11, sub_213E1E314);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = sub_213E1C9D8(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_213E1DEC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22[5];
  uint64_t v23[5];
  _OWORD v24[2];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::Double_optional v44;

  v6 = type metadata accessor for FeaturisedTurn(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v9 = sub_213EF2724();
    __swift_project_value_buffer(v9, (uint64_t)qword_253F08A00);
    v10 = sub_213EF270C();
    v11 = sub_213EF2CA0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_213DAB000, v10, v11, "calculateRestatementScore called with useTrimmedUtterance=true. This is not supported for Contact restatement comparison. Full utterance comparison will be used instead.", v12, 2u);
      MEMORY[0x2199C53C4](v12, -1, -1);
    }

  }
  sub_213DAFDB8(a1, (uint64_t)v8);
  sub_213E1D85C((uint64_t)v8, v22);
  sub_213E1E2A4((uint64_t)v22, (uint64_t)v29);
  if (!*(_QWORD *)&v29[0])
    return 0;
  v31 = v29[0];
  v32 = v29[1];
  v33 = v30;
  sub_213DAFDB8(a2, (uint64_t)v8);
  sub_213E1D85C((uint64_t)v8, v23);
  sub_213E1E2A4((uint64_t)v23, (uint64_t)v24);
  if (!*(_QWORD *)&v24[0])
  {
    v40 = v31;
    sub_213E1E2EC((uint64_t)&v40);
    v41 = *((_QWORD *)&v31 + 1);
    sub_213E1E2EC((uint64_t)&v41);
    v42 = v32;
    sub_213E1E2EC((uint64_t)&v42);
    v43 = *((_QWORD *)&v32 + 1);
    sub_213E1E2EC((uint64_t)&v43);
    *(_QWORD *)&v26 = v33;
    sub_213E1E2EC((uint64_t)&v26);
    return 0;
  }
  v26 = v24[0];
  v27 = v24[1];
  v28 = v25;
  v13 = sub_213E1DBD4((uint64_t *)&v31);
  v34 = v31;
  sub_213E1E2EC((uint64_t)&v34);
  v35 = *((_QWORD *)&v31 + 1);
  sub_213E1E2EC((uint64_t)&v35);
  v36 = v32;
  sub_213E1E2EC((uint64_t)&v36);
  v37 = *((_QWORD *)&v32 + 1);
  sub_213E1E2EC((uint64_t)&v37);
  v38 = v33;
  sub_213E1E2EC((uint64_t)&v38);
  v43 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3B030);
  sub_213DDE1D4();
  sub_213EF2820();
  swift_bridgeObjectRelease();
  v14 = sub_213E1DBD4((uint64_t *)&v26);
  v39 = v26;
  sub_213E1E2EC((uint64_t)&v39);
  v40 = *((_QWORD *)&v26 + 1);
  sub_213E1E2EC((uint64_t)&v40);
  v41 = v27;
  sub_213E1E2EC((uint64_t)&v41);
  v42 = *((_QWORD *)&v27 + 1);
  sub_213E1E2EC((uint64_t)&v42);
  v43 = v28;
  sub_213E1E2EC((uint64_t)&v43);
  v21 = v14;
  v15 = sub_213EF2820();
  v17 = v16;
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  v44 = String.scoreRatcliffObershelp(between:)(v18);
  v19 = *(_QWORD *)&v44.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_213E1E25C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3CA48;
  if (!qword_254D3CA48)
  {
    v1 = type metadata accessor for EntityUtteranceComparison();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ThresholdedTurnComparison, v1);
    atomic_store(result, (unint64_t *)&qword_254D3CA48);
  }
  return result;
}

uint64_t sub_213E1E2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CA50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E1E2EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_213E1E314(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_213E1D048(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

unint64_t sub_213E1E320()
{
  unint64_t result;

  result = qword_254D3CA60;
  if (!qword_254D3CA60)
  {
    result = MEMORY[0x2199C52D4](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_254D3CA60);
  }
  return result;
}

uint64_t sub_213E1E364(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CA58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for ContactEntityUtteranceComparator.TurnUtterances()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ContactEntityUtteranceComparator.TurnUtterances(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContactEntityUtteranceComparator.TurnUtterances(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactEntityUtteranceComparator.TurnUtterances(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactEntityUtteranceComparator.TurnUtterances(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactEntityUtteranceComparator.TurnUtterances(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntityUtteranceComparator.TurnUtterances()
{
  return &type metadata for ContactEntityUtteranceComparator.TurnUtterances;
}

id sub_213E1E5F8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_254D39FF0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CA78);
  v1 = (void *)sub_213EF2A30();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel__ios_meContactWithKeysToFetch_error_, v1, v7);

  v3 = v7[0];
  if (!v2)
  {
    v4 = v3;
    v5 = (void *)sub_213EF1BA8();

    swift_willThrow();
    return 0;
  }
  return v2;
}

id sub_213E1E6F8()
{
  uint64_t v0;
  void *v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF8CA0;
  v2 = (void *)*MEMORY[0x24BDBA2E0];
  v3 = v0;
  *(_QWORD *)(v0 + 32) = *MEMORY[0x24BDBA2E0];
  sub_213EF2A54();
  qword_254D3CA70 = v3;
  return v2;
}

uint64_t dispatch thunk of EvaluationFramework.evaluateSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EvaluationFramework.reviewedSessionEvaluation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EvaluationSummary.requestId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

_QWORD *PimsStoreRuntimeQueryWrapper.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __int128 v14;

  v0 = sub_213EF26C4();
  v2 = v1;
  v3 = type metadata accessor for PIMSStoreCoreData();
  v4 = swift_allocObject();
  v5 = sub_213ED47F0(v0, v2, 0);
  swift_bridgeObjectRelease();
  if (v5)
  {
    *(_QWORD *)(v4 + 16) = v5;
    *(_QWORD *)(v4 + 24) = objc_msgSend(v5, sel_newBackgroundContext);
    sub_213EF24CC();
    type metadata accessor for PimsStoreRuntimeQueryWrapper();
    v6 = (_QWORD *)swift_allocObject();
    v6[5] = v3;
    v6[6] = &protocol witness table for PIMSStoreCoreData;
    v6[2] = v4;
    type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
    v7 = swift_allocObject();
    type metadata accessor for SELFEventLogEmitters();
    v8 = swift_allocObject();
    sub_213DB0BF0(&v14, v8 + 16);
    *(_QWORD *)(v7 + 16) = v8;
    v6[7] = v7;
  }
  else
  {
    swift_deallocPartialClassInstance();
    if (qword_253F04A88 != -1)
      swift_once();
    v9 = sub_213EF2724();
    __swift_project_value_buffer(v9, (uint64_t)qword_253F08A00);
    v10 = sub_213EF270C();
    v11 = sub_213EF2CA0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_213DAB000, v10, v11, "[PimsStoreRuntimeQueryWrapper]: Failed to initialise PIMS store", v12, 2u);
      MEMORY[0x2199C53C4](v12, -1, -1);
    }

    return 0;
  }
  return v6;
}

uint64_t *PimsStoreRuntimeQueryWrapper.__allocating_init(store:logTarget:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = sub_213E1F244(v7, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v8;
}

uint64_t *PimsStoreRuntimeQueryWrapper.init(store:logTarget:)(uint64_t a1, __int128 *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = sub_213E1EF98((uint64_t)v9, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v11;
}

uint64_t sub_213E1EA48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;

  v5 = v2[5];
  v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v5, v6);
  if (a2)
    v7 = a2;
  else
    v7 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRetain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_213E1F030(v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_253F04A88 != -1)
    swift_once();
  v10 = sub_213EF2724();
  __swift_project_value_buffer(v10, (uint64_t)qword_253F08A00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v11 = sub_213EF270C();
  v12 = sub_213EF2C94();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    *(_DWORD *)v13 = 134218240;
    swift_bridgeObjectRelease();
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    swift_bridgeObjectRelease();
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v11, v12, "[PimsStoreRuntimeQueryWrapper]: Found %ld results and %ld with matching tags.", (uint8_t *)v13, 0x16u);
    MEMORY[0x2199C53C4](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t sub_213E1EC50(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;

  sub_213EF204C();
  swift_allocObject();
  v6 = sub_213EF2040();
  sub_213EF2034();
  MEMORY[0x2199C3918](v6);
  sub_213EF1ED8();
  sub_213EF1E9C();
  swift_release();
  swift_release();
  if (v14)
  {
    v7 = sub_213E1EA48(v14, a3);
    swift_release();
  }
  else
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v8 = sub_213EF2724();
    __swift_project_value_buffer(v8, (uint64_t)qword_253F08A00);
    swift_bridgeObjectRetain_n();
    v9 = sub_213EF270C();
    v10 = sub_213EF2CA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v14 = v12;
      *(_DWORD *)v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_213DB0570(a1, a2, &v14);
      sub_213EF2D9C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_213DAB000, v9, v10, "[PimsStoreRuntimeQueryWrapper]: unable to create USO for query from %s String", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v12, -1, -1);
      MEMORY[0x2199C53C4](v11, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return MEMORY[0x24BEE4AF8];
  }
  return v7;
}

uint64_t PimsStoreRuntimeQueryWrapper.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return v0;
}

uint64_t PimsStoreRuntimeQueryWrapper.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

void *sub_213E1EEDC(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_213EF30A8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_213E1EF70@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t *sub_213E1EF98(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;

  a3[5] = a4;
  a3[6] = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  type metadata accessor for PLUSContactSuggesterRuntimeLogHelper();
  v10 = swift_allocObject();
  type metadata accessor for SELFEventLogEmitters();
  v11 = swift_allocObject();
  sub_213DB0BF0(a2, v11 + 16);
  *(_QWORD *)(v10 + 16) = v11;
  a3[7] = v10;
  return a3;
}

uint64_t sub_213E1F030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = type metadata accessor for PlusMediaSuggestion();
  v5 = MEMORY[0x24BDAC7A8](v27);
  v26 = (uint64_t)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v23 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v23 - v11;
  result = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v15 = *(unsigned __int8 *)(v10 + 80);
    v16 = *(_QWORD *)(v10 + 72);
    v23[1] = v2;
    v24 = (v15 + 32) & ~v15;
    v17 = a1 + v24;
    v18 = MEMORY[0x24BEE4AF8];
    v25 = a2;
    while (1)
    {
      sub_213DE6348(v17, (uint64_t)v12);
      v19 = sub_213EA78A8(*(_QWORD *)&v12[*(int *)(v27 + 44)], a2);
      sub_213DE6348((uint64_t)v12, (uint64_t)v9);
      if ((v19 & 1) != 0)
      {
        v20 = PlusMediaSuggestion.isNominated.getter();
        sub_213DEA4CC((uint64_t)v9);
        if ((v20 & 1) != 0)
        {
          sub_213DEA488((uint64_t)v12, v26);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_213DCD284(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v28;
          v22 = *(_QWORD *)(v28 + 16);
          v21 = *(_QWORD *)(v28 + 24);
          if (v22 >= v21 >> 1)
          {
            sub_213DCD284(v21 > 1, v22 + 1, 1);
            v18 = v28;
          }
          *(_QWORD *)(v18 + 16) = v22 + 1;
          sub_213DEA488(v26, v18 + v24 + v22 * v16);
          a2 = v25;
          goto LABEL_5;
        }
      }
      else
      {
        sub_213DEA4CC((uint64_t)v9);
      }
      sub_213DEA4CC((uint64_t)v12);
LABEL_5:
      v17 += v16;
      if (!--v14)
        return v28;
    }
  }
  return result;
}

uint64_t type metadata accessor for PimsStoreRuntimeQueryWrapper()
{
  return objc_opt_self();
}

uint64_t *sub_213E1F244(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PimsStoreRuntimeQueryWrapper();
  v12 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return sub_213E1EF98((uint64_t)v11, a2, v12, a4, a5);
}

uint64_t method lookup function for PimsStoreRuntimeQueryWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PimsStoreRuntimeQueryWrapper.__allocating_init(store:logTarget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PimsStoreRuntimeQueryWrapper.queryWithLogging(query:suggestionTags:plusId:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_213E1F320()
{
  uint64_t result;

  type metadata accessor for MessagesAbandonmentClassifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06D20);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  result = sub_213EF2904();
  qword_253F06D08 = 91;
  unk_253F06D10 = 0xE100000000000000;
  return result;
}

uint64_t sub_213E1F3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 > 3 || v3 == 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v5 = sub_213EF2724();
    __swift_project_value_buffer(v5, (uint64_t)qword_253F08A00);
    v6 = sub_213EF270C();
    v7 = sub_213EF2C94();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v27 = v9;
      *(_DWORD *)v8 = 136315138;
      if (qword_253F06D18 != -1)
        swift_once();
      v10 = qword_253F06D08;
      v11 = unk_253F06D10;
      swift_bridgeObjectRetain();
      sub_213DB0570(v10, v11, &v27);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v6, v7, "%s Session has 0 or more than 3 turns, and so is out of scope of Messages Abandonment", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v9, -1, -1);
      MEMORY[0x2199C53C4](v8, -1, -1);
    }

    v12 = type metadata accessor for FeaturisedTurn(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else if (v3 == 3
         && (v15 = type metadata accessor for FeaturisedTurn(0),
             v16 = *(_QWORD *)(v15 - 8),
             v17 = swift_bridgeObjectRetain(),
             sub_213DAF220(v17),
             v19 = v18,
             swift_bridgeObjectRelease(),
             v19))
  {
    swift_bridgeObjectRelease();
    if (qword_253F04A88 != -1)
      swift_once();
    v20 = sub_213EF2724();
    __swift_project_value_buffer(v20, (uint64_t)qword_253F08A00);
    v21 = sub_213EF270C();
    v22 = sub_213EF2C94();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v27 = v24;
      *(_DWORD *)v23 = 136315138;
      if (qword_253F06D18 != -1)
        swift_once();
      v25 = qword_253F06D08;
      v26 = unk_253F06D10;
      swift_bridgeObjectRetain();
      sub_213DB0570(v25, v26, &v27);
      sub_213EF2D9C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_213DAB000, v21, v22, "%s Session has 3 turns, but the latter is not empty, and so session is out of scope of Messages Abandonment", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v24, -1, -1);
      MEMORY[0x2199C53C4](v23, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, 1, 1, v15);
  }
  else
  {
    return sub_213EA4050(a1, a2);
  }
}

uint64_t MessagesAbandonmentClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MessagesAbandonmentClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_213E1F79C(uint64_t a1)
{
  return sub_213E1F970(a1);
}

uint64_t sub_213E1F7BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v17;

  v2 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F07018);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_213EF5FF0;
  v10 = (_QWORD *)(v9 + v8);
  *v10 = 0xD00000000000001CLL;
  v10[1] = 0x8000000213F071B0;
  swift_storeEnumTagMultiPayload();
  v11 = (_QWORD *)((char *)v10 + v7);
  *v11 = 0xD00000000000001DLL;
  v11[1] = 0x8000000213F05F00;
  sub_213DE4CEC();
  swift_storeEnumTagMultiPayload();
  sub_213DBB430((uint64_t)v4, (uint64_t)v10 + v7 + *(int *)(v5 + 48), (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
  v12 = (_QWORD *)((char *)v10 + 2 * v7);
  v13 = (_QWORD *)((char *)v12 + *(int *)(v5 + 48));
  *v12 = 0xD00000000000001CLL;
  v12[1] = 0x8000000213F05F50;
  sub_213EA3E5C(v13);
  v14 = (_QWORD *)((char *)v10 + 3 * v7);
  v15 = (_QWORD *)((char *)v14 + *(int *)(v5 + 48));
  *v14 = 0xD00000000000001BLL;
  v14[1] = 0x8000000213F05F70;
  sub_213E9EC28(a1, v15);
  return v9;
}

uint64_t sub_213E1F970(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  int v27;
  _BOOL4 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v68;
  int v69;
  os_log_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = type metadata accessor for RuleResult();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F069B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeaturisedTurn(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v68 - v13;
  sub_213E1F3A4(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_213DD0984((uint64_t)v7);
    if (*(_QWORD *)(a1 + 16))
    {
LABEL_3:
      v15 = sub_213EF1D10();
      v17 = v16;
LABEL_17:
      if (qword_253F04A88 != -1)
        swift_once();
      v47 = sub_213EF2724();
      __swift_project_value_buffer(v47, (uint64_t)qword_253F08A00);
      swift_bridgeObjectRetain();
      v48 = sub_213EF270C();
      v49 = sub_213EF2C94();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc();
        v51 = swift_slowAlloc();
        v75 = v51;
        *(_DWORD *)v50 = 136315394;
        if (qword_253F06D18 != -1)
          swift_once();
        v52 = qword_253F06D08;
        v53 = unk_253F06D10;
        swift_bridgeObjectRetain();
        v74 = sub_213DB0570(v52, v53, &v75);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 2080;
        swift_bridgeObjectRetain();
        v74 = sub_213DB0570(v15, v17, &v75);
        sub_213EF2D9C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_213DAB000, v48, v49, "%s Skipping conversation with id=%s with no or invalid dismissal features", (uint8_t *)v50, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v51, -1, -1);
        MEMORY[0x2199C53C4](v50, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return MEMORY[0x24BEE4AF8];
    }
LABEL_16:
    v17 = 0x8000000213F05F90;
    v15 = 0xD000000000000014;
    goto LABEL_17;
  }
  sub_213DBB430((uint64_t)v7, (uint64_t)v14, type metadata accessor for FeaturisedTurn);
  v18 = *(int *)(v8 + 24);
  v19 = swift_bridgeObjectRetain();
  v20 = sub_213DAE808(v19);
  v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
  {
    sub_213DCA828((uint64_t)v14, type metadata accessor for FeaturisedTurn);
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_3;
    goto LABEL_16;
  }
  v23 = sub_213E1F7BC((uint64_t)v14);
  if (qword_253F04A88 != -1)
    swift_once();
  v24 = sub_213EF2724();
  v25 = __swift_project_value_buffer(v24, (uint64_t)qword_253F08A00);
  sub_213DAFDB8((uint64_t)v14, (uint64_t)v12);
  swift_bridgeObjectRetain_n();
  v71 = v25;
  v26 = sub_213EF270C();
  v27 = sub_213EF2C94();
  v28 = os_log_type_enabled(v26, (os_log_type_t)v27);
  v73 = v20;
  *(_QWORD *)&v72 = v18;
  if (v28)
  {
    v69 = v27;
    v70 = v26;
    v29 = swift_slowAlloc();
    v68 = swift_slowAlloc();
    v75 = v68;
    *(_DWORD *)v29 = 136315650;
    if (qword_253F06D18 != -1)
      swift_once();
    v31 = qword_253F06D08;
    v30 = unk_253F06D10;
    swift_bridgeObjectRetain();
    v74 = sub_213DB0570(v31, v30, &v75);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    sub_213EF1D64();
    sub_213E0B898();
    v32 = sub_213EF31F8();
    v74 = sub_213DB0570(v32, v33, &v75);
    sub_213EF2D9C();
    swift_bridgeObjectRelease();
    sub_213DCA828((uint64_t)v12, type metadata accessor for FeaturisedTurn);
    *(_WORD *)(v29 + 22) = 2080;
    swift_bridgeObjectRetain();
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
    v35 = MEMORY[0x2199C44E8](v23, v34);
    v37 = v36;
    swift_bridgeObjectRelease();
    v74 = sub_213DB0570(v35, v37, &v75);
    sub_213EF2D9C();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v38 = v70;
    _os_log_impl(&dword_213DAB000, v70, (os_log_type_t)v69, "%s Rule Matrix for turnId=%s, rulematrix=%s", (uint8_t *)v29, 0x20u);
    v39 = v68;
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v39, -1, -1);
    MEMORY[0x2199C53C4](v29, -1, -1);

    v20 = v73;
    v40 = *(_QWORD *)(v23 + 16);
    if (v40)
    {
LABEL_11:
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06FA0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = v23 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      v44 = *(_QWORD *)(v42 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v45 = v43 + *(int *)(v41 + 48);
        swift_storeEnumTagMultiPayload();
        sub_213E81FE0(v45, (uint64_t)v4);
        LOBYTE(v45) = v46;
        sub_213DCA828((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RuleResult);
        if ((v45 & 1) == 0)
          goto LABEL_44;
        v43 += v44;
        if (!--v40)
        {
          swift_bridgeObjectRelease_n();
          v20 = v73;
          goto LABEL_26;
        }
      }
    }
  }
  else
  {
    sub_213DCA828((uint64_t)v12, type metadata accessor for FeaturisedTurn);

    swift_bridgeObjectRelease_n();
    v40 = *(_QWORD *)(v23 + 16);
    if (v40)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_26:
  v54 = swift_bridgeObjectRetain();
  v55 = sub_213DAF3C8(v54);
  swift_bridgeObjectRelease();
  v56 = v55 >> 62;
  if (v55)
  {
    if (!v56)
    {
      v57 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v57 == 1)
        goto LABEL_29;
LABEL_40:
      swift_bridgeObjectRetain();
      v58 = sub_213EF270C();
      LOBYTE(v56) = sub_213EF2C94();
      if (!os_log_type_enabled((os_log_t)v58, (os_log_type_t)v56))
      {

LABEL_44:
        swift_bridgeObjectRelease_n();
        goto LABEL_45;
      }
      v63 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      v75 = v62;
      *(_DWORD *)v63 = 136315394;
      if (qword_253F06D18 == -1)
      {
LABEL_42:
        v65 = qword_253F06D08;
        v66 = unk_253F06D10;
        swift_bridgeObjectRetain();
        v74 = sub_213DB0570(v65, v66, &v75);
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v63 + 12) = 2048;
        swift_bridgeObjectRelease();
        v74 = v57;
        sub_213EF2D9C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_213DAB000, (os_log_t)v58, (os_log_type_t)v56, "%s message has %ld recipients, rejecting", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2199C53C4](v62, -1, -1);
        MEMORY[0x2199C53C4](v63, -1, -1);

LABEL_45:
        sub_213DCA828((uint64_t)v14, type metadata accessor for FeaturisedTurn);
        return MEMORY[0x24BEE4AF8];
      }
LABEL_52:
      swift_once();
      goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    v57 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (v57 != 1)
      goto LABEL_40;
  }
LABEL_29:
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A650);
  v58 = swift_allocObject();
  v72 = xmmword_213EF53E0;
  *(_OWORD *)(v58 + 16) = xmmword_213EF53E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A840);
  v59 = sub_213EF1D64();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v72;
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 16))(v57 + v61, v14, v59);
  if (!v55)
  {
    v63 = 0;
    goto LABEL_38;
  }
  v62 = v55 & 0xFFFFFFFFFFFFFF8;
  if (v56)
  {
    swift_bridgeObjectRetain();
    v63 = sub_213EF306C();
    swift_bridgeObjectRelease();
    if (!v63)
      goto LABEL_35;
    goto LABEL_32;
  }
  v63 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v63)
  {
LABEL_32:
    if ((v55 & 0xC000000000000001) != 0)
    {
      v63 = MEMORY[0x2199C49B0](0, v55);
      goto LABEL_35;
    }
    if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v63 = *(_QWORD *)(v55 + 32);
      swift_retain();
      goto LABEL_35;
    }
    __break(1u);
    goto LABEL_52;
  }
LABEL_35:
  swift_bridgeObjectRelease();
LABEL_38:
  *(_QWORD *)(v58 + 56) = &type metadata for MessagesAbandonmentClassification;
  *(_QWORD *)(v58 + 64) = &protocol witness table for MessagesAbandonmentClassification;
  v64 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v58 + 32) = v64;
  v64[2] = v20;
  v64[3] = v57;
  v64[4] = MEMORY[0x24BEE4AF8];
  v64[5] = v63;
  sub_213DCA828((uint64_t)v14, type metadata accessor for FeaturisedTurn);
  return v58;
}

uint64_t type metadata accessor for MessagesAbandonmentClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for MessagesAbandonmentClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesAbandonmentClassifier.classify(_:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_213E20404()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t MessagesContactPartialRepetitionDefinition.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  MessagesContactPartialRepetitionDefinition.init()();
  return v0;
}

uint64_t MessagesContactPartialRepetitionDefinition.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  type metadata accessor for MessagesContactPartialRepetitionDefinition();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04E10);
  sub_213EF288C();
  sub_213EF2904();
  swift_bridgeObjectRelease();
  sub_213EF2904();
  *(_QWORD *)(v0 + 16) = 91;
  *(_QWORD *)(v0 + 24) = 0xE100000000000000;
  __swift_instantiateConcreteTypeFromMangledName(qword_253F04FB0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_213EF53E0;
  type metadata accessor for EntityPromptClassifier();
  v3 = swift_allocObject();
  *(_QWORD *)(v2 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06E48);
  *(_QWORD *)(v2 + 64) = &off_24D106F78;
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  return v1;
}

uint64_t type metadata accessor for MessagesContactPartialRepetitionDefinition()
{
  return objc_opt_self();
}

uint64_t sub_213E20574()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_213E1BC20((uint64_t)&unk_24D100490);
  result = swift_arrayDestroy();
  qword_253F04DF0 = v0;
  return result;
}

uint64_t sub_213E205BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253F04EC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF53E0;
  if (qword_253F04E00 != -1)
    swift_once();
  v1 = qword_253F04DF0;
  v2 = type metadata accessor for EntityNodeComparator();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 16) = 0x3FE6666666666666;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = &protocol witness table for EntityNodeComparator;
  *(_QWORD *)(v0 + 32) = v3;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_213E2067C()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(qword_253F04FB0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_213EF53E0;
  type metadata accessor for SuccessfulMessageClassifier();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06E50);
  *(_QWORD *)(v0 + 64) = &off_24D106F78;
  *(_QWORD *)(v0 + 32) = v1;
  return v0;
}

uint64_t MessagesContactPartialRepetitionDefinition.supportingClassifiers.getter()
{
  return swift_bridgeObjectRetain();
}

double sub_213E206FC()
{
  return 30.0;
}

uint64_t sub_213E20704()
{
  return 8;
}

uint64_t sub_213E20710@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13[40];

  sub_213DAFDFC(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v4 = v10;
    v5 = v11;
    result = v12;
    if (v8 == 1)
    {
      v6 = v9;
      v7 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = 0;
      v6 = 0;
      v4 = 0;
      v5 = 0;
      result = 0;
    }
    *a2 = v7;
    a2[1] = v6;
    a2[2] = v4;
    a2[3] = v5;
    a2[4] = result;
  }
  else
  {
    a2[4] = 0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

uint64_t sub_213E207DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v20;

  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = *a4;
  v12 = a4[1];
  v14 = a4[3];
  v20 = a4[2];
  v15 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  v16 = (int *)type metadata accessor for MessagesGroundTruth();
  *(_BYTE *)(a5 + v16[5]) = 1;
  *(_QWORD *)(a5 + v16[6]) = a2;
  v17 = (uint64_t *)(a5 + v16[7]);
  *v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  v17[3] = v11;
  v18 = (_QWORD *)(a5 + v16[8]);
  *v18 = v13;
  v18[1] = v12;
  v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_213E05FBC(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double sub_213E208E0@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;

  FeaturisedSession.findEvent(eventId:)(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), &v6);
  v3 = v7;
  if (v7)
  {
    v4 = v6;
    extractContactReference(event:)((uint64_t)a2);
    sub_213DC7B60(v4, v3);
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_213E20984@<X0>(uint64_t a1@<X8>)
{
  return extractContactReference(event:)(a1);
}

uint64_t sub_213E209C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v35;
  uint64_t v36;

  v4 = v3;
  v8 = type metadata accessor for FeaturisedSession(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v35 - v12;
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) >= 9uLL)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v14 = sub_213EF2724();
    __swift_project_value_buffer(v14, (uint64_t)qword_253F08A00);
    sub_213DCA7E4(a1, (uint64_t)v13, type metadata accessor for FeaturisedSession);
    swift_retain();
    v15 = sub_213EF270C();
    v16 = sub_213EF2C94();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v36 = v18;
      *(_DWORD *)v17 = 136315394;
      v19 = *(_QWORD *)(v4 + 16);
      v20 = *(_QWORD *)(v4 + 24);
      swift_bridgeObjectRetain();
      v35 = sub_213DB0570(v19, v20, &v36);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      v21 = *(_QWORD *)(*(_QWORD *)v13 + 16);
      sub_213DCA828((uint64_t)v13, type metadata accessor for FeaturisedSession);
      v35 = v21;
      sub_213EF2D9C();
      _os_log_impl(&dword_213DAB000, v15, v16, "%s Turn has %ld, over limit threshold. Skipping partial repetition ground truth generation", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v18, -1, -1);
      v22 = v17;
LABEL_20:
      MEMORY[0x2199C53C4](v22, -1, -1);

      return 0;
    }
    sub_213DCA828((uint64_t)v13, type metadata accessor for FeaturisedSession);
LABEL_21:

    swift_release();
    return 0;
  }
  sub_213DCA7E4(a1, (uint64_t)v11, type metadata accessor for FeaturisedSession);
  if ((a3 & 1) != 0)
  {
    v23 = sub_213E210B4(v11);
    sub_213DCA828((uint64_t)v11, type metadata accessor for FeaturisedSession);
    if ((v23 & 1) != 0)
    {
      if (qword_253F04A88 != -1)
        swift_once();
      v24 = sub_213EF2724();
      __swift_project_value_buffer(v24, (uint64_t)qword_253F08A00);
      swift_retain();
      v15 = sub_213EF270C();
      v25 = sub_213EF2C94();
      if (!os_log_type_enabled(v15, v25))
        goto LABEL_21;
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v36 = v27;
      *(_DWORD *)v26 = 136315138;
      v28 = *(_QWORD *)(v4 + 16);
      v29 = *(_QWORD *)(v4 + 24);
      swift_bridgeObjectRetain();
      v35 = sub_213DB0570(v28, v29, &v36);
      sub_213EF2D9C();
      swift_release();
      swift_bridgeObjectRelease();
      v30 = "%s Session is composite and contains out of scope elements. Skipping partial repetition ground truth generation";
LABEL_19:
      _os_log_impl(&dword_213DAB000, v15, v25, v30, v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2199C53C4](v27, -1, -1);
      v22 = (uint64_t)v26;
      goto LABEL_20;
    }
  }
  else
  {
    sub_213DCA828((uint64_t)v11, type metadata accessor for FeaturisedSession);
  }
  if ((sub_213E219A8(a2) & 1) != 0)
  {
    if (qword_253F04A88 != -1)
      swift_once();
    v31 = sub_213EF2724();
    __swift_project_value_buffer(v31, (uint64_t)qword_253F08A00);
    swift_retain();
    v15 = sub_213EF270C();
    v25 = sub_213EF2C94();
    if (!os_log_type_enabled(v15, v25))
      goto LABEL_21;
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v36 = v27;
    *(_DWORD *)v26 = 136315138;
    v32 = *(_QWORD *)(v4 + 16);
    v33 = *(_QWORD *)(v4 + 24);
    swift_bridgeObjectRetain();
    v35 = sub_213DB0570(v32, v33, &v36);
    sub_213EF2D9C();
    swift_release();
    swift_bridgeObjectRelease();
    v30 = "%s Prompt selected in session. Skipping partial repetition ground truth generation";
    goto LABEL_19;
  }
  return 1;
}

uint64_t sub_213E20ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_213DCA7E4(a1, a2, type metadata accessor for FeaturisedSession);
}

uint64_t MessagesContactPartialRepetitionDefinition.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MessagesContactPartialRepetitionDefinition.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E20F48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E20F54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_213E20710(a1, a2);
}

uint64_t sub_213E20F68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v20;

  v7 = *a2;
  v8 = *a3;
  v9 = a3[1];
  v10 = a3[2];
  v11 = a3[3];
  v13 = *a4;
  v12 = a4[1];
  v14 = a4[3];
  v20 = a4[2];
  v15 = sub_213EF1D64();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, a1, v15);
  v16 = (int *)type metadata accessor for MessagesGroundTruth();
  *(_BYTE *)(a5 + v16[5]) = 1;
  *(_QWORD *)(a5 + v16[6]) = v7;
  v17 = (uint64_t *)(a5 + v16[7]);
  *v17 = v8;
  v17[1] = v9;
  v17[2] = v10;
  v17[3] = v11;
  v18 = (_QWORD *)(a5 + v16[8]);
  *v18 = v13;
  v18[1] = v12;
  v18[2] = v20;
  v18[3] = v14;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v16 - 1) + 56))(a5, 0, 1, v16);
  swift_retain();
  sub_213E05FBC(v8, v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_213E2106C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_213E221F4();
  *a1 = result;
  return result;
}

uint64_t sub_213E21090(uint64_t a1, uint64_t a2, char a3)
{
  return sub_213E209C4(a1, a2, a3) & 1;
}

uint64_t sub_213E210B4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[5];
  __int128 v68;
  uint64_t v69;
  _OWORD v70[2];
  uint64_t v71;

  v2 = v1;
  v66 = type metadata accessor for FeaturisedTurn(0);
  v4 = MEMORY[0x24BDAC7A8](v66);
  v64 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v62 = (char *)&v58 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v58 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v58 - v12;
  v65 = (uint64_t)a1;
  v14 = *a1;
  v15 = *(_QWORD *)(*a1 + 16);
  if (!v15)
    goto LABEL_52;
  v58 = v1;
  v63 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v16 = v14 + v63;
  v17 = *(_QWORD *)(v11 + 72);
  v61 = v14;
  swift_bridgeObjectRetain();
  v18 = 0;
  v19 = type metadata accessor for FeaturisedTurn;
  v60 = v15;
  v59 = v16;
LABEL_4:
  v20 = v19;
  sub_213DCA7E4(v16 + v17 * v18, (uint64_t)v13, v19);
  v21 = *(_QWORD *)&v13[*(int *)(v66 + 24)];
  v2 = *(uint64_t **)(v21 + 16);
  if (!v2)
    goto LABEL_3;
  v22 = v21 + 32;
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_213DAFDFC(v22, (uint64_t)v70);
    sub_213DAFDFC((uint64_t)v70, (uint64_t)&v68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
    sub_213EF2478();
    if ((swift_dynamicCast() & 1) != 0)
      break;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
    v22 += 40;
    v2 = (uint64_t *)((char *)v2 - 1);
    if (!v2)
    {
      swift_bridgeObjectRelease_n();
      v15 = v60;
      v16 = v59;
LABEL_3:
      v19 = v20;
      sub_213DCA828((uint64_t)v13, v20);
      if (++v18 != v15)
        goto LABEL_4;
      swift_bridgeObjectRelease();
      v2 = v58;
LABEL_52:
      if (qword_253F04A88 == -1)
      {
LABEL_53:
        v51 = sub_213EF2724();
        __swift_project_value_buffer(v51, (uint64_t)qword_253F08A00);
        swift_retain();
        v52 = sub_213EF270C();
        v53 = sub_213EF2C94();
        if (os_log_type_enabled(v52, v53))
        {
          v54 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          *(_QWORD *)&v70[0] = v55;
          *(_DWORD *)v54 = 136315138;
          v56 = v2[2];
          v57 = v2[3];
          swift_bridgeObjectRetain();
          *(_QWORD *)&v68 = sub_213DB0570(v56, v57, (uint64_t *)v70);
          sub_213EF2D9C();
          swift_release();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_213DAB000, v52, v53, "%s isCompositeSessionOutOfScope: No dismissal turn - not checking for payload", v54, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2199C53C4](v55, -1, -1);
          MEMORY[0x2199C53C4](v54, -1, -1);

          return 0;
        }

LABEL_56:
        swift_release();
        return 0;
      }
LABEL_62:
      swift_once();
      goto LABEL_53;
    }
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
  swift_bridgeObjectRelease_n();
  sub_213DCA828((uint64_t)v13, type metadata accessor for FeaturisedTurn);
  swift_bridgeObjectRelease();
  v23 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if ((v23 & 0x8000000000000000) != 0)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (*(_QWORD *)(*(_QWORD *)v65 + 16) < v23)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v24 = MEMORY[0x24BEE4AF8];
  v67[0] = MEMORY[0x24BEE4AF8];
  v25 = swift_bridgeObjectRetain();
  v65 = v17;
  if (v18 != -1)
  {
    v26 = 0;
    v61 = v25;
    v27 = v25 + v63;
    do
    {
      sub_213DCA7E4(v27 + v26 * v17, (uint64_t)v10, type metadata accessor for FeaturisedTurn);
      v28 = *(_QWORD *)&v10[*(int *)(v66 + 24)];
      v29 = *(_QWORD *)(v28 + 16);
      if (v29)
      {
        v30 = v28 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_213DAFDFC(v30, (uint64_t)v70);
          sub_213DAFDFC((uint64_t)v70, (uint64_t)&v68);
          type metadata accessor for SendMessageUSOFeature.MessageHasPayload(0);
          if ((swift_dynamicCast() & 1) != 0)
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
          v30 += 40;
          if (!--v29)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_14;
          }
        }
        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
        swift_bridgeObjectRelease_n();
        sub_213DBB430((uint64_t)v10, v64, type metadata accessor for FeaturisedTurn);
        v31 = v67[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_213DCD09C(0, *(_QWORD *)(v31 + 16) + 1, 1);
          v31 = v67[0];
        }
        v33 = *(_QWORD *)(v31 + 16);
        v32 = *(_QWORD *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_213DCD09C(v32 > 1, v33 + 1, 1);
          v31 = v67[0];
        }
        *(_QWORD *)(v31 + 16) = v33 + 1;
        v34 = v31 + v63 + v33 * v65;
        v17 = v65;
        sub_213DBB430(v64, v34, type metadata accessor for FeaturisedTurn);
      }
      else
      {
LABEL_14:
        sub_213DCA828((uint64_t)v10, type metadata accessor for FeaturisedTurn);
      }
      ++v26;
    }
    while (v26 != v23);
    v24 = v67[0];
  }
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v24 + 16);
  v36 = (uint64_t)v62;
  if (!v35)
    goto LABEL_56;
  v37 = 0;
  v38 = *(int *)(v66 + 24);
  v66 = v24 + v63;
  v2 = &qword_253F06970;
  while (1)
  {
    if (v37 >= *(_QWORD *)(v24 + 16))
    {
      __break(1u);
      goto LABEL_59;
    }
    sub_213DCA7E4(v66 + v37 * v65, v36, type metadata accessor for FeaturisedTurn);
    v39 = *(_QWORD *)(v36 + v38);
    swift_bridgeObjectRetain();
    sub_213DCA828(v36, type metadata accessor for FeaturisedTurn);
    v40 = *(_QWORD *)(v39 + 16);
    if (v40)
    {
      v41 = v39 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DAFDFC(v41, (uint64_t)&v68);
        sub_213DAFDFC((uint64_t)&v68, (uint64_t)v67);
        type metadata accessor for SendMessageUSOFeature.MessageHasPayload(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
        v41 += 40;
        if (!--v40)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v68, (uint64_t)v70);
    }
    else
    {
LABEL_38:
      v71 = 0;
      memset(v70, 0, sizeof(v70));
    }
    swift_bridgeObjectRelease();
    sub_213DAFE40((uint64_t)v70, (uint64_t)&v68);
    if (v69)
      break;
    sub_213DAFEC4((uint64_t)&v68, &qword_253F06970);
LABEL_30:
    sub_213DAFEC4((uint64_t)v70, &qword_253F06970);
LABEL_31:
    if (++v37 == v35)
      goto LABEL_56;
  }
  type metadata accessor for SendMessageUSOFeature.MessageHasPayload(0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_30;
  swift_retain();
  sub_213EF23D0();
  swift_release();
  if (v68 != 1)
  {
    sub_213DAFEC4((uint64_t)v70, &qword_253F06970);
    swift_release();
    v36 = (uint64_t)v62;
    goto LABEL_31;
  }
  swift_release();
  if (qword_253F04A88 != -1)
    swift_once();
  v42 = sub_213EF2724();
  __swift_project_value_buffer(v42, (uint64_t)qword_253F08A00);
  v43 = v58;
  swift_retain_n();
  v44 = sub_213EF270C();
  v45 = sub_213EF2C94();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    v47 = swift_slowAlloc();
    *(_QWORD *)&v68 = v47;
    *(_DWORD *)v46 = 136315138;
    v48 = v43[2];
    v49 = v43[3];
    swift_bridgeObjectRetain();
    v67[0] = sub_213DB0570(v48, v49, (uint64_t *)&v68);
    sub_213EF2D9C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_213DAB000, v44, v45, "%s Found payload before dismissal. Composite session is out of scope.", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2199C53C4](v47, -1, -1);
    MEMORY[0x2199C53C4](v46, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  sub_213DAFEC4((uint64_t)v70, &qword_253F06970);
  return 1;
}

uint64_t sub_213E219A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  _BYTE v29[40];
  _BYTE v30[40];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F06C68);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for EntityPromptClassification();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v27 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + 32;
    v27 = a1;
    swift_bridgeObjectRetain();
    v17 = MEMORY[0x24BEE4AF8];
    v28 = v9;
    do
    {
      sub_213DAFDFC(v16, (uint64_t)v30);
      sub_213DAFDFC((uint64_t)v30, (uint64_t)v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
      v18 = swift_dynamicCast();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, v18 ^ 1u, 1, v5);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_213DAFEC4((uint64_t)v4, &qword_253F06C68);
      }
      else
      {
        sub_213DBB430((uint64_t)v4, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        sub_213DBB430((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_213DB5648(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v20 = *(_QWORD *)(v17 + 16);
        v19 = *(_QWORD *)(v17 + 24);
        if (v20 >= v19 >> 1)
          v17 = sub_213DB5648(v19 > 1, v20 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v20 + 1;
        v21 = v17
            + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
            + *(_QWORD *)(v6 + 72) * v20;
        v9 = v28;
        sub_213DBB430((uint64_t)v28, v21, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
      }
      v16 += 40;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v17 + 16);
    if (v22)
    {
LABEL_12:
      v23 = v17 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v24 = *(_QWORD *)(v6 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_213DCA7E4(v23, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        v25 = *((_QWORD *)v14 + 6);
        sub_213DCA828((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for EntityPromptClassification);
        if (v25)
          break;
        v23 += v24;
        if (!--v22)
        {
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  else
  {
    v17 = MEMORY[0x24BEE4AF8];
    v22 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v22)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_213E21CB8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  v33 = type metadata accessor for FeaturisedTurn(0);
  v31 = *(_QWORD *)(v33 - 8);
  v2 = MEMORY[0x24BDAC7A8](v33);
  v28 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *a1;
  v10 = MEMORY[0x24BEE4AF8];
  v40 = MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(v9 + 16);
  result = swift_bridgeObjectRetain();
  v30 = v11;
  if (!v11)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    return v10;
  }
  v13 = 0;
  v14 = &qword_253F06970;
  v29 = result;
  while (v13 < *(_QWORD *)(result + 16))
  {
    v15 = v14;
    v16 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v32 = *(_QWORD *)(v31 + 72);
    sub_213DCA7E4(result + v16 + v32 * v13, (uint64_t)v8, type metadata accessor for FeaturisedTurn);
    v17 = *(_QWORD *)&v8[*(int *)(v33 + 24)];
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = v17 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_213DAFDFC(v19, (uint64_t)&v35);
        sub_213DAFDFC((uint64_t)&v35, (uint64_t)&v37);
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        type metadata accessor for SendMessageUSOFeature.RecipientNames(0);
        if (swift_dynamicCast())
          break;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
        v19 += 40;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_213DB0BF0(&v35, (uint64_t)&v37);
      v14 = v15;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_14:
      v14 = v15;
      v39 = 0;
      v37 = 0u;
      v38 = 0u;
    }
    sub_213DAFE40((uint64_t)&v37, (uint64_t)&v35);
    if (v36)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
      type metadata accessor for SendMessageUSOFeature.RecipientNames(0);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_retain();
        sub_213EF23D0();
        swift_release_n();
        v20 = v35;
        goto LABEL_21;
      }
    }
    else
    {
      sub_213DAFEC4((uint64_t)&v35, v14);
    }
    v20 = 0;
LABEL_21:
    sub_213DAFEC4((uint64_t)&v37, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_213DCA7E4((uint64_t)v8, (uint64_t)v6, type metadata accessor for FeaturisedTurn);
    if (v20)
    {
      v21 = *(_QWORD *)&v6[*(int *)(v33 + 24)];
      v22 = *(_QWORD *)(v21 + 16);
      if (v22)
      {
        v23 = v21 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_213DAFDFC(v23, (uint64_t)&v35);
          sub_213DAFDFC((uint64_t)&v35, (uint64_t)v34);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
          sub_213EF24D8();
          if (swift_dynamicCast())
            break;
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v35);
          v23 += 40;
          if (!--v22)
          {
            swift_bridgeObjectRelease();
            goto LABEL_28;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
        sub_213DB0BF0(&v35, (uint64_t)&v37);
        v14 = v15;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_28:
        v14 = v15;
        v39 = 0;
        v37 = 0u;
        v38 = 0u;
      }
      sub_213DAFE40((uint64_t)&v37, (uint64_t)&v35);
      if (v36)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_253F06968);
        sub_213EF24D8();
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_retain();
          sub_213EF23D0();
          swift_release_n();
          sub_213DAFEC4((uint64_t)&v37, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_213DCA828((uint64_t)v6, type metadata accessor for FeaturisedTurn);
          sub_213DBB430((uint64_t)v8, v28, type metadata accessor for FeaturisedTurn);
          v24 = v40;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_213DCD09C(0, *(_QWORD *)(v24 + 16) + 1, 1);
            v24 = v40;
          }
          v26 = *(_QWORD *)(v24 + 16);
          v25 = *(_QWORD *)(v24 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_213DCD09C(v25 > 1, v26 + 1, 1);
            v24 = v40;
          }
          *(_QWORD *)(v24 + 16) = v26 + 1;
          sub_213DBB430(v28, v24 + v16 + v26 * v32, type metadata accessor for FeaturisedTurn);
          goto LABEL_6;
        }
      }
      else
      {
        sub_213DAFEC4((uint64_t)&v35, v14);
      }
      sub_213DAFEC4((uint64_t)&v37, v14);
      swift_bridgeObjectRelease();
    }
    sub_213DCA828((uint64_t)v6, type metadata accessor for FeaturisedTurn);
    sub_213DCA828((uint64_t)v8, type metadata accessor for FeaturisedTurn);
LABEL_6:
    ++v13;
    result = v29;
    if (v13 == v30)
    {
      v10 = v40;
      goto LABEL_38;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_213E221F4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for FeaturisedTurn(0);
  v0 = swift_bridgeObjectRetain();
  v1 = sub_213DAF3C8(v0);
  result = swift_bridgeObjectRelease();
  if (!v1)
    return 0;
  if (!(v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_4;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v4 = sub_213EF306C();
  result = swift_bridgeObjectRelease();
  if (v4 != 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = MEMORY[0x2199C49B0](0, v1);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v1 + 32);
    swift_retain();
LABEL_7:
    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

BOOL sub_213E222D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  _BOOL8 result;

  v1 = *(_QWORD *)(a1 + 24);
  v2 = *(_QWORD *)(a1 + 32);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_213DAF3E0(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return 0;
  if (v1 == 0xD000000000000013 && v2 == 0x8000000213F04880)
    return v4 == 1;
  v7 = sub_213EF3234();
  result = 0;
  if ((v7 & 1) != 0)
    return v4 == 1;
  return result;
}

uint64_t sub_213E2238C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_213DB196C(&qword_253F04E08, a2, (uint64_t (*)(uint64_t))type metadata accessor for MessagesContactPartialRepetitionDefinition, (uint64_t)&protocol conformance descriptor for MessagesContactPartialRepetitionDefinition);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_213E223C8()
{
  return sub_213DB196C((unint64_t *)&qword_253F04B48, 255, (uint64_t (*)(uint64_t))type metadata accessor for MessagesGroundTruth, (uint64_t)&protocol conformance descriptor for MessagesGroundTruth);
}

_UNKNOWN **sub_213E223F8()
{
  return &protocol witness table for SuccessfulMessageClassification;
}

uint64_t sub_213E22404()
{
  return sub_213DB196C(&qword_254D3B268, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEA04E8], (uint64_t)&protocol conformance descriptor for UsoEntity_common_Person);
}

uint64_t method lookup function for MessagesContactPartialRepetitionDefinition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.turnComparators.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.successClassifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.maximumTimeBetweenRestatements.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.turnLimit.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.isCompositeSessionOutOfScope(session:classifications:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.identifySuccessClassification(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.isInitiatingSiriTurn(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.isInitiatingEvent(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.buildGroundTruth(id:usoEntity:originalReference:correctedReference:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.extractReferencedEntity(session:successClassification:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.extractReferencedEntity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.extractUsoEntity(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.dropIgnorableTurns(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.isValidSession(session:classifications:isComposite:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MessagesContactPartialRepetitionDefinition.preProcessSession(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

Swift::Bool __swiftcall ContactSuggestionTag.isDomainTag()()
{
  unsigned __int8 *v0;

  return *v0 < 2u;
}

SiriPrivateLearningInference::ContactSuggestionTag_optional __swiftcall ContactSuggestionTag.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SiriPrivateLearningInference::ContactSuggestionTag_optional result;
  char v5;

  v2 = v1;
  v3 = sub_213EF30D8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t ContactSuggestionTag.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E225A0 + 4 * byte_213EF8EB0[*v0]))(0x654D6E69616D6F64, 0xEE00736567617373);
}

uint64_t sub_213E225A0()
{
  return 0x68506E69616D6F64;
}

uint64_t sub_213E225C4()
{
  return 0x656D7269666E6F63;
}

uint64_t sub_213E225F4()
{
  return 0x6974636572726F63;
}

unint64_t sub_213E22614()
{
  unint64_t result;

  result = qword_254D3CBF0;
  if (!qword_254D3CBF0)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionTag, &type metadata for ContactSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3CBF0);
  }
  return result;
}

void sub_213E22658()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_213EF32F4();
  __asm { BR              X9 }
}

uint64_t sub_213E226B0()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

void sub_213E22748()
{
  __asm { BR              X10 }
}

uint64_t sub_213E22790()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

void sub_213E22814()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_213EF32F4();
  __asm { BR              X9 }
}

uint64_t sub_213E22868()
{
  sub_213EF28BC();
  swift_bridgeObjectRelease();
  return sub_213EF3330();
}

SiriPrivateLearningInference::ContactSuggestionTag_optional sub_213E22900(Swift::String *a1)
{
  return ContactSuggestionTag.init(rawValue:)(*a1);
}

uint64_t sub_213E2290C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_213E22948 + 4 * byte_213EF8EC4[*v0]))();
}

void sub_213E22948(_QWORD *a1@<X8>)
{
  *a1 = 0x68506E69616D6F64;
  a1[1] = 0xEF6C6C6143656E6FLL;
}

void sub_213E22970(_QWORD *a1@<X8>)
{
  *a1 = 0x656D7269666E6F63;
  a1[1] = 0xE900000000000064;
}

void sub_213E229A4(_QWORD *a1@<X8>)
{
  *a1 = 0x6974636572726F63;
  a1[1] = 0xEA00000000006E6FLL;
}

void sub_213E229C4(char *a1)
{
  sub_213E29DA4(*a1);
}

uint64_t sub_213E229D0()
{
  sub_213E22B54();
  return sub_213EF2A18();
}

uint64_t sub_213E22A2C()
{
  sub_213E22B54();
  return sub_213EF2A0C();
}

BOOL sub_213E22A78()
{
  unsigned __int8 *v0;

  return *v0 < 2u;
}

uint64_t storeEnumTagSinglePayload for ContactSuggestionTag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_213E22AD4 + 4 * byte_213EF8ECE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_213E22B08 + 4 * byte_213EF8EC9[v4]))();
}

uint64_t sub_213E22B08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E22B10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E22B18);
  return result;
}

uint64_t sub_213E22B24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E22B2CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_213E22B30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E22B38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContactSuggestionTag()
{
  return &type metadata for ContactSuggestionTag;
}

unint64_t sub_213E22B54()
{
  unint64_t result;

  result = qword_254D3CBF8;
  if (!qword_254D3CBF8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactSuggestionTag, &type metadata for ContactSuggestionTag);
    atomic_store(result, (unint64_t *)&qword_254D3CBF8);
  }
  return result;
}

id Conversation.getTimestamp()@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id result;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t v70;
  char *v71;

  v61 = a1;
  v1 = sub_213EF1CF8();
  v70 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v58 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v57 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v60 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v57 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)&v57 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v57 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v57 - v14;
  v16 = sub_213EF2178();
  v17 = *(_QWORD *)(v16 + 24);
  v18 = *(_QWORD *)(v16 + 40);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v19 = sub_213EF2EE0();
  if (v19 == sub_213EF2EE0())
  {
    v65 = v16;
    v66 = v1;
    v71 = v15;
    v64 = v18;
LABEL_3:
    v68 = v17;
    while (1)
    {
      v20 = sub_213EF2EEC();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if ((v20 & 1) != 0)
        break;
      swift_retain();
      sub_213EF303C();
      v21 = sub_213EF2628();
      v22 = v21;
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        v23 = sub_213EF306C();
        if (v23)
        {
LABEL_7:
          v24 = 4;
          do
          {
            if ((v22 & 0xC000000000000001) != 0)
              result = (id)MEMORY[0x2199C49B0](v24 - 4, v22);
            else
              result = *(id *)(v22 + 8 * v24);
            v26 = result;
            v27 = v24 - 3;
            if (__OFADD__(v24 - 4, 1))
            {
              __break(1u);
              goto LABEL_40;
            }
            v28 = (void *)sub_213EF2700();

            if (v28)
            {
              v29 = objc_msgSend(v28, sel_deviceDynamicContext);

              if (v29)
              {
                swift_bridgeObjectRelease_n();
                v30 = objc_msgSend(v28, sel_deviceDynamicContext);

                if (!v30)
                  goto LABEL_20;
                objc_msgSend(v30, sel_timeIntervalSince1970);

                v31 = (uint64_t)v71;
                sub_213EF1CC8();
                v32 = 0;
                v1 = v66;
                v33 = v70;
                goto LABEL_27;
              }

            }
            ++v24;
          }
          while (v27 != v23);
        }
      }
      else
      {
        v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v23)
          goto LABEL_7;
      }
      swift_bridgeObjectRelease_n();
LABEL_20:
      v34 = (uint64_t)v63;
      sub_213EF261C();
      v33 = v70;
      v1 = v66;
      v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v34, 1, v66);
      v31 = (uint64_t)v71;
      if (v35 == 1)
      {
        sub_213DC3ED8(v34);
        if (qword_253F04A88 != -1)
          swift_once();
        v36 = sub_213EF2724();
        __swift_project_value_buffer(v36, (uint64_t)qword_253F08A00);
        v37 = sub_213EF270C();
        v38 = sub_213EF2C94();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v39 = 0;
          _os_log_impl(&dword_213DAB000, v37, v38, "Could not extract a timestamp from the device context", v39, 2u);
          MEMORY[0x2199C53C4](v39, -1, -1);
        }

        v32 = 1;
        v31 = (uint64_t)v71;
      }
      else
      {
        v40 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
        v41 = v34;
        v42 = v62;
        v40(v62, v41, v1);
        v40((char *)v31, (uint64_t)v42, v1);
        v32 = 0;
      }
LABEL_27:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v31, v32, 1, v1);
      swift_release();
      v43 = v67;
      sub_213E23440(v31, v67);
      swift_release();
      v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v43, 1, v1);
      sub_213DC3ED8(v43);
      if (v44 != 1)
        break;
      if (!swift_isUniquelyReferenced_nonNull())
      {
        sub_213EF3024();
        v17 = v46;
        swift_unknownObjectRelease();
        swift_getObjectType();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v47 = sub_213EF2EE0();
        if (v47 == sub_213EF2EE0())
          goto LABEL_3;
        goto LABEL_32;
      }
      swift_unknownObjectRetain();
      sub_213EF3018();
      swift_unknownObjectRelease();
      swift_getObjectType();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v45 = sub_213EF2EE0();
      if (v45 != sub_213EF2EE0())
        goto LABEL_32;
    }
  }
  else
  {
LABEL_32:
    __break(1u);
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v48 = sub_213EF2EE0();
  swift_getObjectType();
  result = (id)sub_213EF2EE0();
  if ((id)v48 == result)
  {
    v49 = sub_213EF2EEC();
    swift_unknownObjectRelease();
    if ((v49 & 1) != 0)
    {
      v50 = 1;
      v51 = v61;
      v52 = v70;
LABEL_38:
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v51, v50, 1, v1);
      return (id)swift_release();
    }
    sub_213EF303C();
    v53 = v59;
    Turn.getTimestamp()(v59);
    swift_release();
    v54 = v60;
    sub_213DEE490((uint64_t)v53, v60);
    v52 = v70;
    result = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v54, 1, v1);
    if ((_DWORD)result != 1)
    {
      v55 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 32);
      v56 = v58;
      v55(v58, v54, v1);
      sub_213DC3ED8((uint64_t)v53);
      v51 = v61;
      v55(v61, (uint64_t)v56, v1);
      v50 = 0;
      goto LABEL_38;
    }
  }
  else
  {
LABEL_40:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Conversation.getConversationId()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;

  sub_213EF2178();
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v2 = sub_213EF2EE0();
  swift_getObjectType();
  result = sub_213EF2EE0();
  if (v2 == result)
  {
    v4 = sub_213EF2EEC();
    swift_unknownObjectRelease();
    if ((v4 & 1) != 0)
    {
      swift_release();
      swift_unknownObjectRelease();
      v5 = sub_213EF1D64();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
    }
    else
    {
      sub_213EF303C();
      swift_release();
      swift_unknownObjectRelease();
      sub_213EF2634();
      swift_release();
      v6 = sub_213EF1D64();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_213E23440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_213E23550()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MigrationPolicyAddDefaultTag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MigrationPolicyAddDefaultTag()
{
  return objc_opt_self();
}

void sub_213E235A4(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v2 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v3 = (void *)sub_213EF2844();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  sub_213DB9CDC(0, (unint64_t *)&qword_254D3C038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3C028);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_213EF53E0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 64) = sub_213E07AFC();
  *(_QWORD *)(v5 + 32) = 0x68506E69616D6F64;
  *(_QWORD *)(v5 + 40) = 0xEF6C6C6143656E6FLL;
  v6 = (void *)sub_213EF2C58();
  objc_msgSend(v4, sel_setPredicate_, v6);

  objc_msgSend(v4, sel_setFetchLimit_, 1);
  v7 = objc_msgSend(a1, sel_destinationContext);
  sub_213DB9CDC(0, &qword_254D3CC28);
  v8 = sub_213EF2D3C();

  if (!(v8 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    v13 = (void *)objc_opt_self();
    v14 = (void *)sub_213EF2844();
    v15 = objc_msgSend(a1, sel_destinationContext);
    v16 = objc_msgSend(v13, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v14, v15);

    v17 = (void *)sub_213EF2844();
    v18 = (void *)sub_213EF2844();
    objc_msgSend(v16, sel_setValue_forKey_, v17, v18);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_213EF8CA0;
    *(_QWORD *)(v19 + 32) = v16;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  v12 = sub_213EF306C();
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_8;
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x2199C49B0](0, v8);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(id *)(v8 + 32);
LABEL_6:
    v10 = v9;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_253F04EF0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_213EF8CA0;
    *(_QWORD *)(v11 + 32) = v10;
LABEL_9:
    sub_213EF2A54();

    return;
  }
  __break(1u);
}

uint64_t ContactSuggestionStoreCandidateAdapter.__allocating_init(store:requiredTags:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 64) = sub_213DCB548(MEMORY[0x24BEE4AF8]);
  sub_213DB0BF0(a1, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  return v4;
}

uint64_t ContactSuggestionStoreCandidateAdapter.init(store:requiredTags:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = sub_213DCB548(MEMORY[0x24BEE4AF8]);
  sub_213DB0BF0(a1, v2 + 16);
  *(_QWORD *)(v2 + 56) = a2;
  return v2;
}

uint64_t sub_213E239EC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v2 = v1;
  swift_beginAccess();
  v4 = v1[8];
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_5;
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = sub_213DFA4DC(a1);
  if ((v6 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_5:
    v8 = v2[5];
    v9 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, v8, v9);
    swift_retain();
    v7 = sub_213E24EC0(v10, (uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = v2[8];
    v2[8] = 0x8000000000000000;
    sub_213E24544(v7, a1, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_213DFA4DC, (void (*)(void))sub_213E00880, (void (*)(void))sub_213DFBF34, (void (*)(_QWORD))MEMORY[0x24BEA04E8]);
    v2[8] = v13;
    swift_release();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v7;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_213E23B88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v2 + 64) = 0x8000000000000000;
  sub_213E24544(a2, a1, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_213DFA4DC, (void (*)(void))sub_213E00880, (void (*)(void))sub_213DFBF34, (void (*)(_QWORD))MEMORY[0x24BEA04E8]);
  *(_QWORD *)(v2 + 64) = v7;
  swift_release();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_213E23C50()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;

  v1 = v0;
  v2 = type metadata accessor for PlusContactSuggestion();
  v35 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v34 - v6;
  swift_beginAccess();
  v8 = v0[8];
  v9 = *(_QWORD *)(v8 + 64);
  v34 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v36 = (unint64_t)(v10 + 63) >> 6;
  v37 = v8;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (v12)
  {
    v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v16 = v15 | (v14 << 6);
LABEL_23:
    result = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v16);
    v20 = *(_QWORD *)(result + 16);
    if (v20)
    {
      v39 = v12;
      v40 = v14;
      v21 = v35;
      v22 = result + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      v38 = result;
      swift_bridgeObjectRetain();
      v23 = *(_QWORD *)(v21 + 72);
      do
      {
        sub_213E25084(v22, (uint64_t)v7);
        v24 = v1[5];
        v25 = v1[6];
        __swift_project_boxed_opaque_existential_1(v1 + 2, v24);
        v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 24))(v7, v24, v25);
        sub_213E25084((uint64_t)v7, (uint64_t)v5);
        if ((v26 & 1) != 0)
        {
          sub_213E250C8((uint64_t)v5);
        }
        else
        {
          v27 = v1[5];
          v28 = v1[6];
          __swift_project_boxed_opaque_existential_1(v1 + 2, v27);
          v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 8))(v5, v27, v28);
          sub_213E250C8((uint64_t)v5);
          if ((v29 & 1) == 0)
          {
            if (qword_253F04A88 != -1)
              swift_once();
            v30 = sub_213EF2724();
            __swift_project_value_buffer(v30, (uint64_t)qword_253F08A00);
            v31 = sub_213EF270C();
            v32 = sub_213EF2CA0();
            if (os_log_type_enabled(v31, v32))
            {
              v33 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v33 = 0;
              _os_log_impl(&dword_213DAB000, v31, v32, "Failed to write updated candiates to the suggestion store", v33, 2u);
              MEMORY[0x2199C53C4](v33, -1, -1);
            }

          }
        }
        sub_213E250C8((uint64_t)v7);
        v22 += v23;
        --v20;
      }
      while (v20);
      result = swift_bridgeObjectRelease();
      v12 = v39;
      v14 = v40;
    }
  }
  v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v17 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v17);
  ++v14;
  if (v18)
    goto LABEL_22;
  v14 = v17 + 1;
  if (v17 + 1 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v14);
  if (v18)
    goto LABEL_22;
  v14 = v17 + 2;
  if (v17 + 2 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v14);
  if (v18)
    goto LABEL_22;
  v14 = v17 + 3;
  if (v17 + 3 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v14);
  if (v18)
  {
LABEL_22:
    v12 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_23;
  }
  v19 = v17 + 4;
  if (v19 >= v36)
    return swift_release();
  v18 = *(_QWORD *)(v34 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v36)
      return swift_release();
    v18 = *(_QWORD *)(v34 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t ContactSuggestionStoreCandidateAdapter.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContactSuggestionStoreCandidateAdapter.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_213E2403C(uint64_t *a1)
{
  return sub_213E239EC(*a1);
}

uint64_t sub_213E24060(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;

  v4 = *a1;
  v5 = *v2;
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *(_QWORD *)(v5 + 64);
  *(_QWORD *)(v5 + 64) = 0x8000000000000000;
  sub_213E24544(a2, v4, isUniquelyReferenced_nonNull_native, (uint64_t (*)(uint64_t))sub_213DFA4DC, (void (*)(void))sub_213E00880, (void (*)(void))sub_213DFBF34, (void (*)(_QWORD))MEMORY[0x24BEA04E8]);
  *(_QWORD *)(v5 + 64) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_213E24128(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_213DFA220(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_213E002D8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_213DFB530(v15, a4 & 1);
  v21 = sub_213DFA220(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E24284(__int16 a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_213DFA31C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_WORD *)(v16[7] + 2 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_213E004AC();
      goto LABEL_7;
    }
    sub_213DFB864(result, a3 & 1);
    result = sub_213DFA31C(a2);
    if ((v14 & 1) == (v17 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213E24C34(v10, a2, a1, v16);
      return sub_213DDF850(a2);
    }
  }
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E24394(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_213DFA374(a2, a3, a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 4 * v16;
        *(_BYTE *)v23 = a1;
        *(_BYTE *)(v23 + 3) = HIBYTE(a1);
        *(_WORD *)(v23 + 1) = a1 >> 8;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= result && (a6 & 1) == 0)
    {
      result = (uint64_t)sub_213E006A0();
      goto LABEL_7;
    }
    sub_213DFBBD4(result, a6 & 1);
    result = sub_213DFA374(a2, a3, a4, a5);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213E24C94(v16, a2, a3, a4, a5, a1, v22);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E244FC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_213E24544(a1, a2, a3, (uint64_t (*)(uint64_t))sub_213DFA3F0, (void (*)(void))sub_213E00874, (void (*)(void))sub_213DFBF28, (void (*)(_QWORD))MEMORY[0x24BEA0A48]);
}

uint64_t sub_213E24520(uint64_t a1, uint64_t a2, char a3)
{
  return sub_213E24544(a1, a2, a3, (uint64_t (*)(uint64_t))sub_213DFA4DC, (void (*)(void))sub_213E00880, (void (*)(void))sub_213DFBF34, (void (*)(_QWORD))MEMORY[0x24BEA04E8]);
}

uint64_t sub_213E24544(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), void (*a5)(void), void (*a6)(void), void (*a7)(_QWORD))
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v11 = v7;
  v15 = *v7;
  v17 = a4(a2);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    a5();
LABEL_7:
    v23 = (_QWORD *)*v11;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v24 + 8 * v17) = a1;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v28 = 8 * v17;
    *(_QWORD *)(v23[6] + v28) = a2;
    *(_QWORD *)(v23[7] + v28) = a1;
    v29 = v23[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v23[2] = v31;
      return swift_retain();
    }
    goto LABEL_14;
  }
  a6();
  v26 = a4(a2);
  if ((v21 & 1) == (v27 & 1))
  {
    v17 = v26;
    v23 = (_QWORD *)*v11;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  a7(0);
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E246C0(__int16 a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_213DFA284(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_BYTE *)(v20[7] + 2 * v14);
      *v21 = a1 & 1;
      v21[1] = HIBYTE(a1) & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_213E011F4();
    goto LABEL_7;
  }
  sub_213DFD8D4(result, a3 & 1);
  result = sub_213DFA284(a2);
  if ((v18 & 1) != (v22 & 1))
  {
LABEL_14:
    result = sub_213EF3288();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_213E24CF4(v14, (uint64_t)v11, a1 & 0x101, v20);
}

uint64_t sub_213E24824(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_213EF1D64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_213DFA284(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
        return sub_213E251A8(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_213E01454();
      goto LABEL_7;
    }
    sub_213DFDC84(v17, a3 & 1);
    v24 = sub_213DFA284(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_213E24D9C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E249A4(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_213DFA220(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_213E0172C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v18[7] + v12) = a1 & 1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_BYTE *)(v18[7] + v12) = a1 & 1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_213DFE08C(result, a4 & 1);
  result = sub_213DFA220(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_213EF3288();
  __break(1u);
  return result;
}

uint64_t sub_213E24AFC(__int128 *a1, uint64_t a2, unint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_213DFA734(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1Tm(v19);
        return sub_213DB0BF0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_213E01FEC();
      goto LABEL_7;
    }
    sub_213DFED18(v15, a4 & 1);
    v21 = sub_213DFA734(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_213E24E54(v12, a2, a3, a1, v18);
      return sub_213E03404(a2, a3);
    }
  }
  result = sub_213EF3288();
  __break(1u);
  return result;
}

unint64_t sub_213E24C34(unint64_t result, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 56 * result;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(v4 + 48) = *(_WORD *)(a2 + 48);
  *(_WORD *)(a4[7] + 2 * result) = a3;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_213E24C94(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 32 * result);
  *v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  v8 = a7[7] + 4 * result;
  *(_BYTE *)v8 = a6;
  *(_BYTE *)(v8 + 3) = HIBYTE(a6);
  *(_WORD *)(v8 + 1) = a6 >> 8;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_213E24CF4(unint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_213EF1D64();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v11 = (_BYTE *)(a4[7] + 2 * a1);
  *v11 = a3 & 1;
  v11[1] = HIBYTE(a3) & 1;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_213E24D9C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_213EF1D64();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  result = sub_213DBB430(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_213E24E54(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_213DB0BF0(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_213E24EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t (*v17)();
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = type metadata accessor for PlusContactSuggestion();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v24 = (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  result = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v21 = v2;
    v13 = *(_QWORD *)(v8 + 72);
    v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = a1 + v23;
    v15 = MEMORY[0x24BEE4AF8];
    v16 = type metadata accessor for PlusContactSuggestion;
    v22 = v5;
    do
    {
      sub_213E25084(v14, (uint64_t)v10);
      if ((sub_213EA7D8C(*(_QWORD *)&v10[*(int *)(v5 + 36)], *(_QWORD *)(a2 + 56)) & 1) != 0)
      {
        v17 = v16;
        sub_213DBB430((uint64_t)v10, v24, (uint64_t (*)(_QWORD))v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_213DCD300(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_213DCD300(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        v20 = v15 + v23 + v19 * v13;
        v16 = v17;
        sub_213DBB430(v24, v20, (uint64_t (*)(_QWORD))v17);
        v5 = v22;
      }
      else
      {
        sub_213E250C8((uint64_t)v10);
      }
      v14 += v13;
      --v12;
    }
    while (v12);
    return v25;
  }
  return result;
}

uint64_t sub_213E25084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusContactSuggestion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_213E250C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlusContactSuggestion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_213E25108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254D3CC30;
  if (!qword_254D3CC30)
  {
    v1 = type metadata accessor for PlusContactSuggestion();
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PlusContactSuggestion, v1);
    atomic_store(result, (unint64_t *)&qword_254D3CC30);
  }
  return result;
}

uint64_t type metadata accessor for ContactSuggestionStoreCandidateAdapter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContactSuggestionStoreCandidateAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactSuggestionStoreCandidateAdapter.__allocating_init(store:requiredTags:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ContactSuggestionStoreCandidateAdapter.search(query:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ContactSuggestionStoreCandidateAdapter.update(query:candidates:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ContactSuggestionStoreCandidateAdapter.persist()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_213E251A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlusClientEventFeatureExtractor.GenericSuggestionMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t PhoneCallInAppFollowupClassifier.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PhoneCallInAppFollowupClassifier.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhoneCallInAppFollowupClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for PhoneCallInAppFollowupClassifier()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_213E25234(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v7[8];
  _BYTE v8[40];
  __int128 v9[2];

  v2 = type metadata accessor for QuickHangupClassification();
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_213DAFDFC(a1, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253F06990);
  if (swift_dynamicCast())
  {
    sub_213DB18A4((uint64_t)v4);
    sub_213DAFDFC(a1, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    return 1;
  }
  else
  {
    sub_213DAFDFC(a1, (uint64_t)v9);
    sub_213DB0BF0(v9, (uint64_t)v8);
    v5 = swift_dynamicCast();
    if ((_DWORD)v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return v5;
}

Swift::Double_optional __swiftcall String.scoreRatcliffObershelp(between:)(Swift::String between)
{
  uint64_t v1;
  unint64_t v2;
  double v3;
  uint64_t v4;
  void *object;
  unint64_t countAndFlagsBits;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  double v25;
  uint64_t v26;
  Swift::Double_optional result;

  v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v4 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    goto LABEL_11;
  object = between._object;
  countAndFlagsBits = between._countAndFlagsBits;
  v7 = HIBYTE(between._object) & 0xF;
  if (((uint64_t)between._object & 0x2000000000000000) == 0)
    v7 = between._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
LABEL_11:
    LOBYTE(v10) = 0;
    goto LABEL_28;
  }
  v8 = v2;
  v9 = v1;
  if (v1 == between._countAndFlagsBits && (void *)v2 == between._object || (sub_213EF3234() & 1) != 0)
  {
    LOBYTE(v10) = 0;
    goto LABEL_28;
  }
  v11 = sub_213EF28C8();
  v10 = sub_213EF28C8();
  v12 = v11 + v10;
  if (__OFADD__(v11, v10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v13 = String.commonSequences(between:)(countAndFlagsBits, (unint64_t)object, v9, v8);
  v14 = v13[2];
  if (v14)
  {
    v26 = MEMORY[0x24BEE4AF8];
    sub_213DCD3C4(0, v14, 0);
    v15 = v26;
    v16 = v13 + 5;
    do
    {
      swift_bridgeObjectRetain();
      v17 = sub_213EF28C8();
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(v26 + 16);
      v18 = *(_QWORD *)(v26 + 24);
      if (v19 >= v18 >> 1)
        sub_213DCD3C4(v18 > 1, v19 + 1, 1);
      v16 += 2;
      *(_QWORD *)(v26 + 16) = v19 + 1;
      *(_QWORD *)(v26 + 8 * v19 + 32) = v17;
      --v14;
    }
    while (v14);
    LOBYTE(v10) = swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v26 + 16);
    if (v20)
    {
LABEL_19:
      v21 = 0;
      v22 = 0;
      while (1)
      {
        v23 = *(_QWORD *)(v15 + 8 * v21 + 32);
        v24 = __OFADD__(v22, v23);
        v22 += v23;
        if (v24)
          break;
        if (v20 == ++v21)
        {
          swift_bridgeObjectRelease();
          v25 = (double)v22;
          goto LABEL_25;
        }
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  else
  {
    LOBYTE(v10) = swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
    v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v20)
      goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  v25 = 0.0;
LABEL_25:
  v3 = 2.0 / (double)v12 * v25;
  LOBYTE(v10) = LOBYTE(v3);
LABEL_28:
  result.value = v3;
  result.is_nil = v10;
  return result;
}

_QWORD *String.commonSequences(between:)(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;

  v14 = sub_213E25AA4();
  result = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v14 >= 1)
  {
    v16 = v11;
    v17 = v11 - v14;
    if (__OFSUB__(v11, v14))
    {
      __break(1u);
    }
    else
    {
      v5 = v12;
      v4 = sub_213EF28F8();
      v13 = (unint64_t)sub_213EF28F8() >> 14;
      if (v13 >= v4 >> 14)
      {
        v81 = v5;
        v77 = a1;
        v18 = sub_213EF2988();
        a1 = MEMORY[0x2199C4344](v18);
        v76 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v17 = sub_213E25F20(v17);
        v4 = v20;
        v5 = v21;
        v6 = v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v23 = sub_213EF28C8();
        v24 = __OFSUB__(v23, v16);
        v25 = v23 - v16;
        if (!v24)
        {
          v75 = a1;
          v26 = sub_213E25FA8(v25, a3, a4);
          v79 = v27;
          v80 = v26;
          v78 = v28;
          a3 = v29;
          swift_bridgeObjectRelease();
          v82 = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_213DCD0C8(0, 2, 0);
          v30 = v82;
          swift_bridgeObjectRetain();
          v17 = MEMORY[0x2199C4344](v17, v4, v5, v6);
          v4 = v31;
          swift_bridgeObjectRelease();
          a1 = v82[2];
          v13 = v82[3];
          v5 = a1 + 1;
          if (a1 < v13 >> 1)
            goto LABEL_6;
          goto LABEL_24;
        }
LABEL_23:
        __break(1u);
LABEL_24:
        sub_213DCD0C8(v13 > 1, v5, 1);
        v30 = v82;
LABEL_6:
        v30[2] = v5;
        v32 = &v30[2 * a1];
        v32[4] = v17;
        v32[5] = v4;
        swift_bridgeObjectRetain();
        v33 = MEMORY[0x2199C4344](v80, v79, v78, a3);
        v35 = v34;
        swift_bridgeObjectRelease();
        v83 = v30;
        v37 = v30[2];
        v36 = v30[3];
        v38 = v37 + 1;
        if (v37 >= v36 >> 1)
          sub_213DCD0C8(v36 > 1, v37 + 1, 1);
        v30[2] = v38;
        v39 = &v30[2 * v37];
        v39[4] = v33;
        v39[5] = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v81 - v14;
        if (__OFSUB__(v81, v14))
        {
          __break(1u);
        }
        else
        {
          swift_bridgeObjectRetain();
          v6 = sub_213E25F20(v41);
          v41 = v42;
          v33 = v43;
          v45 = v44;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v46 = sub_213EF28C8();
          v24 = __OFSUB__(v46, v81);
          v47 = v46 - v81;
          if (!v24)
          {
            v48 = sub_213E25FA8(v47, v77, a2);
            v80 = v49;
            v81 = v48;
            v38 = v50;
            v37 = v51;
            swift_bridgeObjectRelease();
            v83 = (_QWORD *)MEMORY[0x24BEE4AF8];
            sub_213DCD0C8(0, 2, 0);
            v52 = v83;
            swift_bridgeObjectRetain();
            v41 = MEMORY[0x2199C4344](v6, v41, v33, v45);
            v33 = v53;
            swift_bridgeObjectRelease();
            v6 = v83[2];
            v40 = v83[3];
            a2 = v6 + 1;
            if (v6 < v40 >> 1)
              goto LABEL_11;
            goto LABEL_27;
          }
        }
        __break(1u);
LABEL_27:
        sub_213DCD0C8(v40 > 1, a2, 1);
        v52 = v83;
LABEL_11:
        v52[2] = a2;
        v54 = &v52[2 * v6];
        v54[4] = v41;
        v54[5] = v33;
        swift_bridgeObjectRetain();
        v55 = MEMORY[0x2199C4344](v81, v80, v38, v37);
        v57 = v56;
        swift_bridgeObjectRelease();
        v59 = v52[2];
        v58 = v52[3];
        if (v59 >= v58 >> 1)
          sub_213DCD0C8(v58 > 1, v59 + 1, 1);
        v52[2] = v59 + 1;
        v60 = &v52[2 * v59];
        v60[4] = v55;
        v60[5] = v57;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = sub_213DB553C(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v61 = result;
        v63 = result[2];
        v62 = result[3];
        if (v63 >= v62 >> 1)
        {
          result = sub_213DB553C((_QWORD *)(v62 > 1), v63 + 1, 1, result);
          v61 = result;
        }
        v61[2] = v63 + 1;
        v64 = &v61[2 * v63];
        v64[4] = v75;
        v64[5] = v76;
        v84 = v61;
        if (v30[2])
        {
          if (v52[2])
          {
            v66 = v30[4];
            v65 = v30[5];
            v67 = v52[4];
            v68 = v52[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v69 = String.commonSequences(between:)(v67, v68, v66, v65);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = (_QWORD *)sub_213DB4278(v69);
            if (v30[2] >= 2uLL)
            {
              v71 = v30[6];
              v70 = v30[7];
              swift_bridgeObjectRetain();
              result = (_QWORD *)swift_release();
              if (v52[2] >= 2uLL)
              {
                v72 = v52[6];
                v73 = v52[7];
                swift_bridgeObjectRetain();
                swift_release();
                v74 = String.commonSequences(between:)(v72, v73, v71, v70);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_213DB4278(v74);
                return v84;
              }
LABEL_31:
              __break(1u);
              return result;
            }
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_30;
      }
    }
    __break(1u);
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_213E25AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;

  v0 = sub_213EF28C8();
  if (__OFADD__(v0, 1))
    goto LABEL_41;
  v1 = sub_213E25D48(0, v0 + 1);
  v2 = sub_213EF28C8();
  if (__OFADD__(v2, 1))
    goto LABEL_42;
  v3 = sub_213E25E30(v1, v2 + 1);
  swift_bridgeObjectRetain();
  v28 = (_QWORD *)v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_43;
  while (1)
  {
    v4 = sub_213EF2910();
    if (!v5)
      break;
    v6 = v4;
    v7 = v5;
    v8 = 0;
    v9 = 0;
    v29 = 0;
    v30 = 0;
    v10 = v28 + 4;
    while (1)
    {
      v12 = v8 + 1;
      if (__OFADD__(v8, 1))
        break;
      swift_bridgeObjectRetain();
      v13 = 0;
LABEL_9:
      v14 = v13;
      while (1)
      {
        v16 = v14;
        v17 = sub_213EF2910();
        if (!v18)
          break;
        v13 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        if (v6 == v17 && v7 == v18)
        {
          swift_bridgeObjectRelease();
LABEL_16:
          v19 = v28[2];
          if (v8 >= v19)
            goto LABEL_35;
          v20 = v10[v8];
          if (v16 >= *(_QWORD *)(v20 + 16))
            goto LABEL_36;
          v21 = *(_QWORD *)(v20 + 8 * v16 + 32);
          v22 = v21 + 1;
          if (__OFADD__(v21, 1))
            goto LABEL_37;
          if (v12 >= v19)
            goto LABEL_38;
          v23 = (_QWORD *)v10[v12];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v10[v12] = v23;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v13 & 0x8000000000000000) == 0)
              goto LABEL_22;
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          v23 = sub_213DD02E4(v23);
          v10[v12] = v23;
          if ((v13 & 0x8000000000000000) != 0)
            goto LABEL_31;
LABEL_22:
          if (v13 >= v23[2])
            goto LABEL_39;
          v23[v13 + 4] = v22;
          if (v9 >= v22)
            v25 = v30;
          else
            v25 = v13;
          v26 = v29;
          if (v9 < v22)
            v26 = v8 + 1;
          v29 = v26;
          v30 = v25;
          if (v9 <= v22)
            v9 = v22;
          goto LABEL_9;
        }
        v15 = sub_213EF3234();
        swift_bridgeObjectRelease();
        v14 = v16 + 1;
        if ((v15 & 1) != 0)
          goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = sub_213EF2910();
      v7 = v11;
      ++v8;
      if (!v11)
        goto LABEL_33;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    v28 = sub_213DD02F8(v28);
  }
LABEL_32:
  v9 = 0;
LABEL_33:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_213E25D48(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t *v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_213EF3048();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_213EF2A9C();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  v7 = vdupq_n_s64(a1);
  v8 = (int64x2_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_213E25E30(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_213EF3048();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A7E8);
      v4 = (_QWORD *)sub_213EF2A9C();
      v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_213E25F20(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_213EF28EC();
    return sub_213EF2988();
  }
  return result;
}

unint64_t sub_213E25FA8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_213EF28EC();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_213EF2988();
  }
  __break(1u);
  return result;
}

uint64_t sub_213E26050(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE48);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_213EF53E0;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v7 = sub_213DB6CDC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v9 = v7[2];
    v8 = v7[3];
    if (v9 >= v8 >> 1)
      v7 = sub_213DB6CDC((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
    v7[2] = v9 + 1;
    v10 = &v7[4 * v9];
    v10[4] = v3;
    v10[5] = v2;
    v10[6] = 0;
    v10[7] = 0;
  }
  else
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE50);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_213EF44B0;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE58);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0x3FB999999999999ALL;
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = sub_213DCA20C(&qword_254D3CE60, &qword_254D3CE58, (uint64_t)&unk_213EF78C8);
  *(_QWORD *)(v11 + 32) = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE68);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v7;
  *(_QWORD *)(v11 + 96) = v14;
  *(_QWORD *)(v11 + 104) = sub_213DCA20C(&qword_254D3CE70, &qword_254D3CE68, (uint64_t)&unk_213F017B8);
  *(_QWORD *)(v11 + 72) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE78);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_213EF44B0;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE80);
  v18 = swift_allocObject();
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = sub_213DCA20C(&qword_254D3CE88, &qword_254D3CE80, (uint64_t)&unk_213EF6A88);
  *(_QWORD *)(v16 + 32) = v18;
  v19 = sub_213E1B218((uint64_t)&unk_24D1005B8);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CE90);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)(v16 + 96) = v20;
  *(_QWORD *)(v16 + 104) = sub_213DCA20C(&qword_254D3CE98, &qword_254D3CE90, (uint64_t)&unk_213EFC588);
  *(_QWORD *)(v16 + 72) = v21;
  *(_QWORD *)(v1 + 16) = v11;
  *(_QWORD *)(v1 + 24) = v16;
  return v1;
}

uint64_t type metadata accessor for ContactSuggestionCandidateNominator()
{
  uint64_t result;

  result = qword_254D3CD98;
  if (!qword_254D3CD98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_213E26314()
{
  return swift_initClassMetadata2();
}

uint64_t sub_213E26348()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[4];

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBACF8]), sel_init);
  v1 = sub_213E1E5F8();

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_identifier);

    v1 = (void *)sub_213EF2850();
    v4 = v3;

  }
  else
  {
    v4 = 0;
  }
  v7[0] = (uint64_t)v1;
  v7[1] = v4;
  type metadata accessor for ContactSuggestionCandidateNominator();
  v7[2] = 0;
  v7[3] = 0;
  v5 = swift_allocObject();
  sub_213E26050(v7);
  return v5;
}

void GroundTruthSource.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_213E26440()
{
  unsigned __int8 v0;
  uint64_t v1;

  v1 = sub_213EF3300();
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E26488 + 4 * a26b[v0 + 4]))(v1, 0xD00000000000001BLL);
}

uint64_t sub_213E26488()
{
  sub_213EF28BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_213E26694()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_213E266C8 + 4 * byte_213EF91F4[*v0]))(0x6C6143656E6F6870, 0xE90000000000006CLL);
}

uint64_t sub_213E266C8()
{
  return 0x736567617373656DLL;
}

uint64_t sub_213E266E0()
{
  return 0x50746361746E6F63;
}

unint64_t sub_213E26704()
{
  return 0xD000000000000018;
}

uint64_t sub_213E26720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_213E28160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_213E26744()
{
  sub_213E2769C();
  return sub_213EF3354();
}

uint64_t sub_213E2676C()
{
  sub_213E2769C();
  return sub_213EF3360();
}

uint64_t sub_213E26794()
{
  sub_213E27768();
  return sub_213EF3354();
}

uint64_t sub_213E267BC()
{
  sub_213E27768();
  return sub_213EF3360();
}

uint64_t sub_213E267E4()
{
  sub_213E276E0();
  return sub_213EF3354();
}

uint64_t sub_213E2680C()
{
  sub_213E276E0();
  return sub_213EF3360();
}

uint64_t sub_213E26834()
{
  sub_213E277F0();
  return sub_213EF3354();
}

uint64_t sub_213E2685C()
{
  sub_213E277F0();
  return sub_213EF3360();
}

uint64_t sub_213E26884()
{
  sub_213E27878();
  return sub_213EF3354();
}

uint64_t sub_213E268AC()
{
  sub_213E27878();
  return sub_213EF3360();
}

void GroundTruthSource.encode(to:)(_QWORD *a1)
{
  unsigned __int16 *v1;
  unsigned __int16 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[9];
  int v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CEA0);
  v12[7] = *(_QWORD *)(v4 - 8);
  v12[8] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v12[6] = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CEA8);
  v12[4] = *(_QWORD *)(v6 - 8);
  v12[5] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v12[3] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CEB0);
  v12[1] = *(_QWORD *)(v8 - 8);
  v12[2] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CEB8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CEC0);
  v14 = *(_QWORD *)(v10 - 8);
  v15 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v13 = *v2;
  v11 = *((unsigned __int8 *)v2 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_213E2769C();
  sub_213EF3348();
  __asm { BR              X9 }
}

uint64_t sub_213E26A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_213E27878();
  v5 = *(_QWORD *)(v4 - 104);
  sub_213EF3168();
  *(_BYTE *)(v4 - 81) = *(_DWORD *)(v4 - 116);
  sub_213E278BC();
  sub_213EF31BC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

uint64_t GroundTruthSource.hashValue.getter()
{
  sub_213EF32F4();
  GroundTruthSource.hash(into:)();
  return sub_213EF3330();
}

uint64_t GroundTruthSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD v22[5];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;

  v29 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CF10);
  v27 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v32 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CF18);
  v28 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v31 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CF20);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CF28);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254D3CF30);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_213E2769C();
  v14 = v34;
  sub_213EF333C();
  if (!v14)
  {
    v22[2] = v8;
    v22[3] = v7;
    v22[4] = 0;
    v34 = v10;
    v15 = v12;
    v16 = sub_213EF3150();
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      v17 = (char *)&loc_213E26F18 + 4 * byte_213EF91FC[*(unsigned __int8 *)(v16 + 32)];
      v22[1] = *(unsigned __int8 *)(v16 + 32);
      __asm { BR              X9 }
    }
    v18 = sub_213EF2F34();
    swift_allocError();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254D3A900);
    *v20 = &type metadata for GroundTruthSource;
    sub_213EF30F0();
    sub_213EF2F28();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x24BEE26D0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
}

void sub_213E27064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 70) = 1;
  sub_213E277F0();
  v4 = *(_QWORD *)(v3 - 192);
  sub_213EF30E4();
  if (!v4)
  {
    sub_213E27988();
    v5 = *(_QWORD *)(v3 - 160);
    sub_213EF3144();
    v6 = *(_QWORD *)(v3 - 96);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 168) + 8))(v1, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v2);
    v7 = *(_QWORD *)(v3 - 136);
    *(_WORD *)v7 = *(unsigned __int8 *)(v3 - 71);
    *(_BYTE *)(v7 + 2) = *(_QWORD *)(v3 - 216);
    JUMPOUT(0x213E2703CLL);
  }
  JUMPOUT(0x213E27020);
}

void sub_213E270AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 - 66) = 2;
  sub_213E27768();
  v4 = *(_QWORD *)(v3 - 192);
  sub_213EF30E4();
  if (!v4)
  {
    sub_213E27944();
    v5 = *(_QWORD *)(v3 - 176);
    sub_213EF3144();
    v6 = *(_QWORD *)(v3 - 96);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(v1, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v2);
    JUMPOUT(0x213E2735CLL);
  }
  JUMPOUT(0x213E27020);
}

void sub_213E270F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v3 - 65) = 3;
  sub_213E276E0();
  v4 = *(_QWORD *)(v3 - 192);
  sub_213EF30E4();
  if (v4)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v0, v1);
    JUMPOUT(0x213E2703CLL);
  }
  sub_213E27900();
  v5 = *(_QWORD *)(v3 - 184);
  sub_213EF3144();
  v6 = *(_QWORD *)(v3 - 96);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 152) + 8))(v2, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v1);
  JUMPOUT(0x213E273A0);
}

uint64_t sub_213E273B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GroundTruthSource.init(from:)(a1, a2);
}

void sub_213E273C8(_QWORD *a1)
{
  GroundTruthSource.encode(to:)(a1);
}

uint64_t sub_213E273E0()
{
  sub_213EF32F4();
  GroundTruthSource.hash(into:)();
  return sub_213EF3330();
}

uint64_t sub_213E27434()
{
  sub_213EF32F4();
  GroundTruthSource.hash(into:)();
  return sub_213EF3330();
}

void _s28SiriPrivateLearningInference17GroundTruthSourceO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_213E274C0(char a1@<W0>, int a2@<W8>)
{
  if (!a2)
    sub_213E2991C(a1);
}

unint64_t sub_213E2769C()
{
  unint64_t result;

  result = qword_254D3CEC8;
  if (!qword_254D3CEC8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF988C, &type metadata for GroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CEC8);
  }
  return result;
}

unint64_t sub_213E276E0()
{
  unint64_t result;

  result = qword_254D3CED0;
  if (!qword_254D3CED0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF983C, &type metadata for GroundTruthSource.ContactSuggestionOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CED0);
  }
  return result;
}

unint64_t sub_213E27724()
{
  unint64_t result;

  result = qword_254D3CED8;
  if (!qword_254D3CED8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SuggestionOutcome, &type metadata for SuggestionOutcome);
    atomic_store(result, (unint64_t *)&qword_254D3CED8);
  }
  return result;
}

unint64_t sub_213E27768()
{
  unint64_t result;

  result = qword_254D3CEE0;
  if (!qword_254D3CEE0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF97EC, &type metadata for GroundTruthSource.ContactPromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CEE0);
  }
  return result;
}

unint64_t sub_213E277AC()
{
  unint64_t result;

  result = qword_254D3CEE8;
  if (!qword_254D3CEE8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactPromptGroundTruthSource, &type metadata for ContactPromptGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CEE8);
  }
  return result;
}

unint64_t sub_213E277F0()
{
  unint64_t result;

  result = qword_254D3CEF0;
  if (!qword_254D3CEF0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF979C, &type metadata for GroundTruthSource.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CEF0);
  }
  return result;
}

unint64_t sub_213E27834()
{
  unint64_t result;

  result = qword_254D3CEF8;
  if (!qword_254D3CEF8)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MessagesGroundTruthSource, &type metadata for MessagesGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CEF8);
  }
  return result;
}

unint64_t sub_213E27878()
{
  unint64_t result;

  result = qword_254D3CF00;
  if (!qword_254D3CF00)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF974C, &type metadata for GroundTruthSource.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF00);
  }
  return result;
}

unint64_t sub_213E278BC()
{
  unint64_t result;

  result = qword_254D3CF08;
  if (!qword_254D3CF08)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PhoneCallGroundTruthSource, &type metadata for PhoneCallGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CF08);
  }
  return result;
}

unint64_t sub_213E27900()
{
  unint64_t result;

  result = qword_254D3CF38;
  if (!qword_254D3CF38)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for SuggestionOutcome, &type metadata for SuggestionOutcome);
    atomic_store(result, (unint64_t *)&qword_254D3CF38);
  }
  return result;
}

unint64_t sub_213E27944()
{
  unint64_t result;

  result = qword_254D3CF40;
  if (!qword_254D3CF40)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for ContactPromptGroundTruthSource, &type metadata for ContactPromptGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CF40);
  }
  return result;
}

unint64_t sub_213E27988()
{
  unint64_t result;

  result = qword_254D3CF48;
  if (!qword_254D3CF48)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for MessagesGroundTruthSource, &type metadata for MessagesGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CF48);
  }
  return result;
}

unint64_t sub_213E279CC()
{
  unint64_t result;

  result = qword_254D3CF50;
  if (!qword_254D3CF50)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for PhoneCallGroundTruthSource, &type metadata for PhoneCallGroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CF50);
  }
  return result;
}

unint64_t sub_213E27A14()
{
  unint64_t result;

  result = qword_254D3CF58;
  if (!qword_254D3CF58)
  {
    result = MEMORY[0x2199C52D4](&protocol conformance descriptor for GroundTruthSource, &type metadata for GroundTruthSource);
    atomic_store(result, (unint64_t *)&qword_254D3CF58);
  }
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GroundTruthSource(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD)
  {
    if ((a2 + 33554179) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776963;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776963;
    }
  }
  v4 = *((unsigned __int8 *)a1 + 2);
  if (v4 <= 3)
    v5 = -1;
  else
    v5 = v4 ^ 0xFF;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for GroundTruthSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554179) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFC)
    v3 = 0;
  if (a2 > 0xFC)
  {
    *(_WORD *)result = a2 - 253;
    *(_BYTE *)(result + 2) = (a2 - 253) >> 16;
    if (v3)
    {
      v4 = ((a2 - 253) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 2) = -(char)a2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

uint64_t sub_213E27B6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2);
}

uint64_t sub_213E27B74(uint64_t result, char a2)
{
  *(_BYTE *)(result + 2) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroundTruthSource()
{
  return &type metadata for GroundTruthSource;
}

uint64_t storeEnumTagSinglePayload for GroundTruthSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_213E27BD8 + 4 * byte_213EF920F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_213E27C0C + 4 * byte_213EF920A[v4]))();
}

uint64_t sub_213E27C0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E27C14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x213E27C1CLL);
  return result;
}

uint64_t sub_213E27C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x213E27C30);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_213E27C34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_213E27C3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GroundTruthSource.CodingKeys()
{
  return &type metadata for GroundTruthSource.CodingKeys;
}

ValueMetadata *type metadata accessor for GroundTruthSource.PhoneCallCodingKeys()
{
  return &type metadata for GroundTruthSource.PhoneCallCodingKeys;
}

ValueMetadata *type metadata accessor for GroundTruthSource.MessagesCodingKeys()
{
  return &type metadata for GroundTruthSource.MessagesCodingKeys;
}

ValueMetadata *type metadata accessor for GroundTruthSource.ContactPromptCodingKeys()
{
  return &type metadata for GroundTruthSource.ContactPromptCodingKeys;
}

uint64_t _s28SiriPrivateLearningInference17GroundTruthSourceO19PhoneCallCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_213E27CCC + 4 * byte_213EF9214[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_213E27CEC + 4 * byte_213EF9219[v4]))();
}

_BYTE *sub_213E27CCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_213E27CEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213E27CF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213E27CFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_213E27D04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_213E27D0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GroundTruthSource.ContactSuggestionOutcomeCodingKeys()
{
  return &type metadata for GroundTruthSource.ContactSuggestionOutcomeCodingKeys;
}

unint64_t sub_213E27D2C()
{
  unint64_t result;

  result = qword_254D3CF60;
  if (!qword_254D3CF60)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9444, &type metadata for GroundTruthSource.ContactSuggestionOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF60);
  }
  return result;
}

unint64_t sub_213E27D74()
{
  unint64_t result;

  result = qword_254D3CF68;
  if (!qword_254D3CF68)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF94FC, &type metadata for GroundTruthSource.ContactPromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF68);
  }
  return result;
}

unint64_t sub_213E27DBC()
{
  unint64_t result;

  result = qword_254D3CF70;
  if (!qword_254D3CF70)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF95B4, &type metadata for GroundTruthSource.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF70);
  }
  return result;
}

unint64_t sub_213E27E04()
{
  unint64_t result;

  result = qword_254D3CF78;
  if (!qword_254D3CF78)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF966C, &type metadata for GroundTruthSource.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF78);
  }
  return result;
}

unint64_t sub_213E27E4C()
{
  unint64_t result;

  result = qword_254D3CF80;
  if (!qword_254D3CF80)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9724, &type metadata for GroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF80);
  }
  return result;
}

unint64_t sub_213E27E94()
{
  unint64_t result;

  result = qword_254D3CF88;
  if (!qword_254D3CF88)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF95DC, &type metadata for GroundTruthSource.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF88);
  }
  return result;
}

unint64_t sub_213E27EDC()
{
  unint64_t result;

  result = qword_254D3CF90;
  if (!qword_254D3CF90)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9604, &type metadata for GroundTruthSource.PhoneCallCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF90);
  }
  return result;
}

unint64_t sub_213E27F24()
{
  unint64_t result;

  result = qword_254D3CF98;
  if (!qword_254D3CF98)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9524, &type metadata for GroundTruthSource.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CF98);
  }
  return result;
}

unint64_t sub_213E27F6C()
{
  unint64_t result;

  result = qword_254D3CFA0;
  if (!qword_254D3CFA0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF954C, &type metadata for GroundTruthSource.MessagesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFA0);
  }
  return result;
}

unint64_t sub_213E27FB4()
{
  unint64_t result;

  result = qword_254D3CFA8;
  if (!qword_254D3CFA8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF946C, &type metadata for GroundTruthSource.ContactPromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFA8);
  }
  return result;
}

unint64_t sub_213E27FFC()
{
  unint64_t result;

  result = qword_254D3CFB0;
  if (!qword_254D3CFB0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9494, &type metadata for GroundTruthSource.ContactPromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFB0);
  }
  return result;
}

unint64_t sub_213E28044()
{
  unint64_t result;

  result = qword_254D3CFB8;
  if (!qword_254D3CFB8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF93B4, &type metadata for GroundTruthSource.ContactSuggestionOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFB8);
  }
  return result;
}

unint64_t sub_213E2808C()
{
  unint64_t result;

  result = qword_254D3CFC0;
  if (!qword_254D3CFC0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF93DC, &type metadata for GroundTruthSource.ContactSuggestionOutcomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFC0);
  }
  return result;
}

unint64_t sub_213E280D4()
{
  unint64_t result;

  result = qword_254D3CFC8;
  if (!qword_254D3CFC8)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF9694, &type metadata for GroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFC8);
  }
  return result;
}

unint64_t sub_213E2811C()
{
  unint64_t result;

  result = qword_254D3CFD0;
  if (!qword_254D3CFD0)
  {
    result = MEMORY[0x2199C52D4](&unk_213EF96BC, &type metadata for GroundTruthSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_254D3CFD0);
  }
  return result;
}

uint64_t sub_213E28160(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6143656E6F6870 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xE800000000000000 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x50746361746E6F63 && a2 == 0xED000074706D6F72 || (sub_213EF3234() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000213F07420)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_213EF3234();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_213E28344(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_213EF3234(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_213EF3234() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_213E28408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char v39;
  char v40;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_213EF1D64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04828);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253F04838);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PlusContactSuggestionRuntimeSummary(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v42 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_19:
    v40 = 0;
    return v40 & 1;
  }
  if (v22 && a1 != a2)
  {
    v48 = v5;
    v49 = v18;
    v46 = a1;
    v47 = v11;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 72);
    v44 = v7;
    v45 = v24;
    v25 = v22 - 1;
    v43 = v13;
    while (1)
    {
      v26 = v25;
      sub_213DCA7E4(a1 + v23, (uint64_t)v21, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      v27 = a2;
      sub_213DCA7E4(a2 + v23, (uint64_t)v17, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      if ((sub_213EF1D28() & 1) == 0)
        break;
      v28 = *(int *)(v49 + 20);
      v29 = (uint64_t)&v17[v28];
      v30 = (uint64_t)&v13[*(int *)(v47 + 48)];
      sub_213DBDD88((uint64_t)&v21[v28], (uint64_t)v13);
      sub_213DBDD88(v29, v30);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      if (v31((uint64_t)v13, 1, v4) == 1)
      {
        if (v31(v30, 1, v4) != 1)
          goto LABEL_17;
        sub_213DAFEC4((uint64_t)v13, &qword_253F04828);
        v32 = v49;
      }
      else
      {
        sub_213DBDD88((uint64_t)v13, (uint64_t)v10);
        if (v31(v30, 1, v4) == 1)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v4);
LABEL_17:
          sub_213DAFEC4((uint64_t)v13, &qword_253F04838);
          break;
        }
        v33 = v48;
        v34 = v10;
        v35 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v44, v30, v4);
        sub_213DB0DB4((unint64_t *)&qword_253F06930, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v36 = sub_213EF2838();
        v37 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38 = v35;
        v10 = v34;
        v13 = v43;
        v37(v38, v4);
        v37(v10, v4);
        sub_213DAFEC4((uint64_t)v13, &qword_253F04828);
        v32 = v49;
        if ((v36 & 1) == 0)
          break;
      }
      if (v21[*(int *)(v32 + 24)] != v17[*(int *)(v32 + 24)])
        break;
      v39 = v21[*(int *)(v32 + 28)] ^ v17[*(int *)(v32 + 28)];
      sub_213DCA828((uint64_t)v17, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      sub_213DCA828((uint64_t)v21, type metadata accessor for PlusContactSuggestionRuntimeSummary);
      a2 = v27;
      a1 = v46;
      if ((v39 & 1) == 0)
      {
        v25 = v26 - 1;
        v23 += v45;
        if (v26)
          continue;
      }
      v40 = v39 ^ 1;
      return v40 & 1;
    }
    sub_213DCA828((uint64_t)v17, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    sub_213DCA828((uint64_t)v21, type metadata accessor for PlusContactSuggestionRuntimeSummary);
    goto LABEL_19;
  }
  v40 = 1;
  return v40 & 1;
}

uint64_t sub_213E287C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 56);
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v6 = *(i - 1);
      v5 = *i;
      v8 = *(v3 - 1);
      v7 = *v3;
      v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_213EF3234() & 1) == 0)
        break;
      if (v5)
      {
        if (!v7)
          return 0;
        v10 = v6 == v8 && v5 == v7;
        if (!v10 && (sub_213EF3234() & 1) == 0)
          return 0;
      }
      else if (v7)
      {
        return 0;
      }
      v3 += 4;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_213E28894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  _QWORD v20[14];

  v4 = type metadata accessor for ThinContactGroundTruth();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v20[6] = "dismissalAndInAppFollowup";
    v20[7] = "quickHangupAndInAppFollowup";
    v20[12] = "partialRepetition";
    v20[13] = v13;
    v20[10] = "previouslySurfaced";
    v20[11] = "successfulOneShot";
    v20[8] = "abandonmentAndInAppFollowup";
    v20[9] = "erInteracted";
    v20[4] = "disambiguationNotChosen";
    v20[5] = "disambiguationChosen";
    v20[2] = "confirmationChosen";
    v20[3] = "disambiguationAbandoned";
    v20[1] = "confirmationNotChosen";
    sub_213DCA7E4(a1 + v12, (uint64_t)v20 - v9, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
    sub_213DCA7E4(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
    if ((sub_213EF1D28() & 1) != 0)
    {
      v14 = *(int *)(v4 + 20);
      v15 = *(_QWORD *)&v10[v14];
      v16 = *(_QWORD *)&v10[v14 + 8];
      v17 = &v7[v14];
      v18 = v15 == *(_QWORD *)v17 && v16 == *((_QWORD *)v17 + 1);
      if (v18 || (sub_213EF3234() & 1) != 0)
        __asm { BR              X12 }
    }
    sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
    sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinContactGroundTruth);
    return 0;
  }
  return 1;
}

uint64_t sub_213E28DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int16 *v4;
  BOOL v5;
  int v7;
  int v9;
  unint64_t v10;
  unint64_t v11;
  const char *v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 57;
    v4 = (unsigned __int16 *)(a2 + 57);
    while (1)
    {
      v5 = *(double *)(v3 - 25) == *(double *)((char *)v4 - 25) && *(double *)(v3 - 17) == *(double *)((char *)v4 - 17);
      if (!v5 || *(double *)(v3 - 9) != *(double *)((char *)v4 - 9))
        return 0;
      v7 = *((unsigned __int8 *)v4 - 1);
      switch(*(_BYTE *)(v3 - 1))
      {
        case 3:
          if (v7 != 3)
            return 0;
          goto LABEL_32;
        case 4:
          if (v7 != 4)
            return 0;
          goto LABEL_32;
        case 5:
          if (v7 != 5)
            return 0;
          goto LABEL_32;
        case 6:
          if (v7 != 6)
            return 0;
          goto LABEL_32;
        case 7:
          if (v7 != 7)
            return 0;
          goto LABEL_32;
        case 8:
          if (v7 == 8)
            goto LABEL_32;
          return 0;
        default:
          if ((v7 - 9) > 0xFFFFFFF9 || *(unsigned __int8 *)(v3 - 1) != v7)
            return 0;
LABEL_32:
          v9 = *v4 | (*((unsigned __int8 *)v4 + 2) << 16);
          if (BYTE2(v9) == 255)
            return 0;
          break;
      }
      switch(*(_BYTE *)(v3 + 2))
      {
        case 0:
          if (!BYTE2(v9))
            __asm { BR              X10 }
          return 0;
        case 1:
          if (BYTE2(v9) != 1)
            return 0;
          v10 = 0xD00000000000001BLL;
          v11 = 0x8000000213F05540;
          if (*(_WORD *)v3)
          {
            if (*(_WORD *)v3 == 1)
              v12 = "abandonmentAndInAppFollowup";
            else
              v12 = "partialRepetition";
            v14 = (unint64_t)v12 | 0x8000000000000000;
            v13 = 0xD000000000000011;
          }
          else
          {
            v13 = 0xD00000000000001BLL;
            v14 = 0x8000000213F05540;
          }
          if (*v4)
          {
            if (*v4 == 1)
              v15 = "abandonmentAndInAppFollowup";
            else
              v15 = "partialRepetition";
            v11 = (unint64_t)v15 | 0x8000000000000000;
            v10 = 0xD000000000000011;
          }
          if (v13 == v10 && v14 == v11)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v16 = sub_213EF3234();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v16 & 1) == 0)
              return 0;
          }
LABEL_6:
          v4 += 16;
          v3 += 32;
          if (!--v2)
            return 1;
          break;
        case 2:
          if (BYTE2(v9) == 2)
            __asm { BR              X10 }
          return 0;
        case 3:
          if (BYTE2(v9) == 3)
          {
            switch(*(_WORD *)v3)
            {
              case 2u:
                if (*v4 != 2)
                  return 0;
                goto LABEL_6;
              case 3u:
                if (*v4 != 3)
                  return 0;
                goto LABEL_6;
              case 4u:
                if (*v4 != 4)
                  return 0;
                goto LABEL_6;
              case 5u:
                if (*v4 != 5)
                  return 0;
                goto LABEL_6;
              case 6u:
                if (*v4 != 6)
                  return 0;
                goto LABEL_6;
              case 7u:
                if (*v4 != 7)
                  return 0;
                goto LABEL_6;
              default:
                if (*v4 - 2 < 6 || ((*v4 ^ *(_WORD *)v3) & 0xFF01) != 0)
                  return 0;
                goto LABEL_6;
            }
          }
          return 0;
        default:
          if (BYTE2(v9) != 255)
            return 0;
          goto LABEL_6;
      }
    }
  }
  return 1;
}

uint64_t sub_213E292F8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v28;

  v4 = (int *)type metadata accessor for ThinMediaGroundTruth();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v28 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_213DCA7E4(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      sub_213DCA7E4(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      if ((sub_213EF1D28() & 1) == 0)
        break;
      v14 = v4[5];
      v15 = *(_QWORD *)&v10[v14];
      v16 = *(_QWORD *)&v10[v14 + 8];
      v17 = &v7[v14];
      v18 = v15 == *(_QWORD *)v17 && v16 == *((_QWORD *)v17 + 1);
      if (!v18 && (sub_213EF3234() & 1) == 0)
        break;
      v19 = v4[6];
      v20 = v10[v19];
      v21 = v10[v19];
      v22 = v7[v19];
      if (v20 < 0)
      {
        if ((v22 & 0x80) == 0 || ((v22 ^ v21) & 0x7F) != 0)
          break;
      }
      else if ((v22 & 0x80) != 0 || v21 != v22)
      {
        break;
      }
      v23 = v4[7];
      v24 = v10[v23];
      v25 = v7[v23];
      if (v24 == 3)
      {
        if (v25 != 3)
          break;
      }
      else if (v25 == 3 || v24 != v25)
      {
        break;
      }
      sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
      v12 += v13;
      if (!--v11)
        return 1;
    }
    sub_213DCA828((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    sub_213DCA828((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ThinMediaGroundTruth);
    return 0;
  }
  return 1;
}

uint64_t sub_213E294D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  BOOL v5;
  unsigned int v7;
  int v8;
  unsigned int v9;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 57);
    for (i = (unsigned __int8 *)(a2 + 57); ; i += 32)
    {
      v5 = *(double *)(v3 - 25) == *(double *)(i - 25) && *(double *)(v3 - 17) == *(double *)(i - 17);
      if (!v5 || *(double *)(v3 - 9) != *(double *)(i - 9))
        break;
      v7 = *v3;
      v8 = *(i - 1);
      v9 = *i;
      switch(*(v3 - 1))
      {
        case 3u:
          if (v8 != 3)
            return 0;
          break;
        case 4u:
          if (v8 != 4)
            return 0;
          break;
        case 5u:
          if (v8 != 5)
            return 0;
          break;
        case 6u:
          if (v8 != 6)
            return 0;
          break;
        case 7u:
          if (v8 != 7)
            return 0;
          break;
        case 8u:
          if (v8 != 8)
            return 0;
          break;
        default:
          if ((v8 - 9) > 0xFFFFFFF9 || *(v3 - 1) != v8)
            return 0;
          break;
      }
      if (v7 > 0xF7)
      {
        if (v9 <= 0xF7)
          return 0;
      }
      else
      {
        if (v9 > 0xF7)
          return 0;
        result = 0;
        if ((v7 & 0x80) != 0)
        {
          if ((v9 & 0x80) == 0 || ((v9 ^ v7) & 0x7F) != 0)
            return result;
        }
        else if ((v9 & 0x80) != 0 || v7 != v9)
        {
          return result;
        }
      }
      v3 += 32;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

BOOL sub_213E29610(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  __int128 v9;
  uint64_t v10;
  __int16 v11;
  __int128 v12;
  BOOL v13;
  BOOL v15;
  _QWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int16 v20;
  _QWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int16 v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_WORD *)(a1 + v5 + 80);
        v21[0] = *(_QWORD *)(a1 + v5 + 32);
        v21[1] = v7;
        v9 = *(_OWORD *)(a1 + v5 + 64);
        v22 = *(_OWORD *)(a1 + v5 + 48);
        v23 = v9;
        v24 = v8;
        v10 = *(_QWORD *)(a2 + v5 + 40);
        v11 = *(_WORD *)(a2 + v5 + 80);
        v17[0] = *(_QWORD *)(a2 + v5 + 32);
        v17[1] = v10;
        v12 = *(_OWORD *)(a2 + v5 + 64);
        v18 = *(_OWORD *)(a2 + v5 + 48);
        v19 = v12;
        v20 = v11;
        v13 = _s28SiriPrivateLearningInference14MediaReferenceV2eeoiySbAC_ACtFZ_0((uint64_t)v21, (uint64_t)v17);
        v15 = v6-- != 0;
        if (!v13)
          break;
        v5 += 56;
      }
      while (v15);
    }
  }
  else
  {
    return 0;
  }
  return v13;
}

void sub_213E296D4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_213E29724(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_213E297A0 + 4 * byte_213EF992E[a2]))(v2 + 2);
}

uint64_t sub_213E297A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 2 && v2 == 0x8000000213F05660)
    v3 = 1;
  else
    v3 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_213E29858(uint64_t a1, uint64_t a2)
{
  return sub_213E2A27C(a1, a2, PIMSConstraintMismatchReason.rawValue.getter);
}

uint64_t sub_213E29864(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x616D7269666E6F63;
  else
    v3 = 0x6769626D61736964;
  if (v2)
    v4 = 0xEE006E6F69746175;
  else
    v4 = 0xEC0000006E6F6974;
  if ((a2 & 1) != 0)
    v5 = 0x616D7269666E6F63;
  else
    v5 = 0x6769626D61736964;
  if ((a2 & 1) != 0)
    v6 = 0xEC0000006E6F6974;
  else
    v6 = 0xEE006E6F69746175;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_213EF3234();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

