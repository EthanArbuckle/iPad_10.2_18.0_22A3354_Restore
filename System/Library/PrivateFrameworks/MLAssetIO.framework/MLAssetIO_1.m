void sub_1D3B37FE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::Kernel::MergeFrom(std::string *this, const CoreML::Specification::Kernel *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  CoreML::Specification::PolyKernel *v6;
  std::string *v7;
  uint64_t v8;
  CoreML::Specification::PolyKernel *v9;
  const CoreML::Specification::PolyKernel *v10;
  CoreML::Specification::SigmoidKernel *v11;
  const CoreML::Specification::SigmoidKernel *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      if (*(_DWORD *)(v3 + 28) == 1)
      {
        v5 = *(uint64_t **)(v3 + 16);
LABEL_17:
        v13 = (uint64_t *)*((_QWORD *)a2 + 2);
        goto LABEL_25;
      }
      CoreML::Specification::Kernel::clear_kernel(v3);
      *(_DWORD *)(v3 + 28) = 1;
      v5 = (uint64_t *)operator new();
      this = (std::string *)CoreML::Specification::LinearKernel::LinearKernel((CoreML::Specification::LinearKernel *)v5);
      *(_QWORD *)(v3 + 16) = v5;
      if (*((_DWORD *)a2 + 7) == 1)
        goto LABEL_17;
      this = (std::string *)CoreML::Specification::protobuf_SVM_2eproto::InitDefaults((CoreML::Specification::protobuf_SVM_2eproto *)this);
      v13 = &CoreML::Specification::_LinearKernel_default_instance_;
LABEL_25:
      v15 = v13[1];
      if ((v15 & 1) != 0)
        return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v5 + 1, v15 & 0xFFFFFFFFFFFFFFFELL);
      return this;
    case 2:
      if (*(_DWORD *)(v3 + 28) == 2)
      {
        v8 = *(_QWORD *)(v3 + 16);
LABEL_19:
        v14 = (uint64_t *)*((_QWORD *)a2 + 2);
        goto LABEL_28;
      }
      CoreML::Specification::Kernel::clear_kernel(v3);
      *(_DWORD *)(v3 + 28) = 2;
      v8 = operator new();
      this = (std::string *)CoreML::Specification::RBFKernel::RBFKernel((CoreML::Specification::RBFKernel *)v8);
      *(_QWORD *)(v3 + 16) = v8;
      if (*((_DWORD *)a2 + 7) == 2)
        goto LABEL_19;
      this = (std::string *)CoreML::Specification::protobuf_SVM_2eproto::InitDefaults((CoreML::Specification::protobuf_SVM_2eproto *)this);
      v14 = &CoreML::Specification::_RBFKernel_default_instance_;
LABEL_28:
      v16 = v14[1];
      if ((v16 & 1) != 0)
        this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v8 + 8), v16 & 0xFFFFFFFFFFFFFFFELL);
      v17 = *((double *)v14 + 2);
      if (v17 != 0.0)
        *(double *)(v8 + 16) = v17;
      return this;
    case 3:
      if (*(_DWORD *)(v3 + 28) == 3)
      {
        v6 = *(CoreML::Specification::PolyKernel **)(v3 + 16);
      }
      else
      {
        CoreML::Specification::Kernel::clear_kernel(v3);
        *(_DWORD *)(v3 + 28) = 3;
        v6 = (CoreML::Specification::PolyKernel *)operator new();
        v9 = CoreML::Specification::PolyKernel::PolyKernel(v6);
        *(_QWORD *)(v3 + 16) = v6;
        if (*((_DWORD *)a2 + 7) != 3)
        {
          CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(v9);
          v10 = (const CoreML::Specification::PolyKernel *)&CoreML::Specification::_PolyKernel_default_instance_;
          return CoreML::Specification::PolyKernel::MergeFrom((std::string *)v6, v10);
        }
      }
      v10 = (const CoreML::Specification::PolyKernel *)*((_QWORD *)a2 + 2);
      return CoreML::Specification::PolyKernel::MergeFrom((std::string *)v6, v10);
    case 4:
      if (*(_DWORD *)(v3 + 28) == 4)
      {
        v7 = *(std::string **)(v3 + 16);
LABEL_15:
        v12 = (const CoreML::Specification::SigmoidKernel *)*((_QWORD *)a2 + 2);
        return CoreML::Specification::SigmoidKernel::MergeFrom(v7, v12);
      }
      CoreML::Specification::Kernel::clear_kernel(v3);
      *(_DWORD *)(v3 + 28) = 4;
      v7 = (std::string *)operator new();
      v11 = CoreML::Specification::SigmoidKernel::SigmoidKernel((CoreML::Specification::SigmoidKernel *)v7);
      *(_QWORD *)(v3 + 16) = v7;
      if (*((_DWORD *)a2 + 7) == 4)
        goto LABEL_15;
      CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(v11);
      v12 = (const CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_SigmoidKernel_default_instance_;
      return CoreML::Specification::SigmoidKernel::MergeFrom(v7, v12);
    default:
      return this;
  }
}

void sub_1D3B382B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::SparseSupportVectors::MergeFrom(uint64_t *this, const CoreML::Specification::SparseSupportVectors *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  const CoreML::Specification::SparseVector **v11;
  uint64_t **v12;
  const CoreML::Specification::SparseVector *v13;
  const CoreML::Specification::SparseVector *v14;
  uint64_t *v15;
  google::protobuf::Arena *v16;
  int v17;
  uint64_t v18;
  CoreML::Specification::SparseVector **v19;
  const CoreML::Specification::SparseVector **v20;
  const CoreML::Specification::SparseVector *v21;
  CoreML::Specification::SparseVector *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v28 = *((_QWORD *)a2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v6 = this;
    v7 = *(int *)v3[4];
    v8 = *((int *)v3 + 6);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5)
      v10 = v5;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (const CoreML::Specification::SparseVector **)(v28 + 8);
      v12 = (uint64_t **)this;
      do
      {
        v14 = *v11++;
        v13 = v14;
        v15 = *v12++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      v16 = (google::protobuf::Arena *)v3[2];
      v17 = v8 + v5 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (CoreML::Specification::SparseVector **)((char *)v6 + v18);
      v20 = (const CoreML::Specification::SparseVector **)(v18 + v28 + 8);
      do
      {
        v21 = *v20;
        if (v16)
        {
          CoreML::Specification::SparseVector::SparseVector(Aligned);
          v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *v23 = Aligned;
          v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseVector>;
          v24 = (unint64_t *)((char *)v16 + 32);
          do
            v25 = __ldxr(v24);
          while (__stxr((unint64_t)v23, v24));
          v23[2] = (google::protobuf::Arena *)v25;
        }
        else
        {
          Aligned = (CoreML::Specification::SparseVector *)operator new();
          CoreML::Specification::SparseVector::SparseVector(Aligned);
        }
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(v21, (uint64_t *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    v27 = (int *)v3[4];
    if (*v27 < v26)
      *v27 = v26;
  }
  return this;
}

void sub_1D3B384B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::DenseSupportVectors::MergeFrom(uint64_t *this, const CoreML::Specification::DenseSupportVectors *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **v11;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **v12;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v13;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v14;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v15;
  google::protobuf::Arena *v16;
  int v17;
  uint64_t v18;
  CoreML::Specification::DenseVector **v19;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **v20;
  CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v21;
  CoreML::Specification::DenseVector *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v28 = *((_QWORD *)a2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v6 = this;
    v7 = *(int *)v3[4];
    v8 = *((int *)v3 + 6);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5)
      v10 = v5;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v28 + 8);
      v12 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)this;
      do
      {
        v14 = *v11++;
        v13 = v14;
        v15 = *v12++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      v16 = (google::protobuf::Arena *)v3[2];
      v17 = v8 + v5 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (CoreML::Specification::DenseVector **)((char *)v6 + v18);
      v20 = (CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts **)(v18 + v28 + 8);
      do
      {
        v21 = *v20;
        if (v16)
        {
          CoreML::Specification::DenseVector::DenseVector(Aligned);
          v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *v23 = Aligned;
          v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::DenseVector>;
          v24 = (unint64_t *)((char *)v16 + 32);
          do
            v25 = __ldxr(v24);
          while (__stxr((unint64_t)v23, v24));
          v23[2] = (google::protobuf::Arena *)v25;
        }
        else
        {
          Aligned = (CoreML::Specification::DenseVector *)operator new();
          CoreML::Specification::DenseVector::DenseVector(Aligned);
        }
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::GLMClassifier_DoubleArray>::Merge(v21, Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    v27 = (int *)v3[4];
    if (*v27 < v26)
      *v27 = v26;
  }
  return this;
}

void sub_1D3B3867C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseVector>::Merge(const CoreML::Specification::SparseVector *a1, uint64_t *a2)
{
  return CoreML::Specification::SparseVector::MergeFrom(a2, a1);
}

uint64_t *CoreML::Specification::SparseVector::MergeFrom(uint64_t *this, const CoreML::Specification::SparseVector *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  const CoreML::Specification::SparseNode **v11;
  std::string **v12;
  const CoreML::Specification::SparseNode *v13;
  const CoreML::Specification::SparseNode *v14;
  std::string *v15;
  google::protobuf::Arena *v16;
  int v17;
  uint64_t v18;
  CoreML::Specification::SparseNode **v19;
  const CoreML::Specification::SparseNode **v20;
  const CoreML::Specification::SparseNode *v21;
  CoreML::Specification::SparseNode *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v28 = *((_QWORD *)a2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v6 = this;
    v7 = *(int *)v3[4];
    v8 = *((int *)v3 + 6);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5)
      v10 = v5;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (const CoreML::Specification::SparseNode **)(v28 + 8);
      v12 = (std::string **)this;
      do
      {
        v14 = *v11++;
        v13 = v14;
        v15 = *v12++;
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      v16 = (google::protobuf::Arena *)v3[2];
      v17 = v8 + v5 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (CoreML::Specification::SparseNode **)((char *)v6 + v18);
      v20 = (const CoreML::Specification::SparseNode **)(v18 + v28 + 8);
      do
      {
        v21 = *v20;
        if (v16)
        {
          CoreML::Specification::SparseNode::SparseNode(Aligned);
          v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *v23 = Aligned;
          v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::SparseNode>;
          v24 = (unint64_t *)((char *)v16 + 32);
          do
            v25 = __ldxr(v24);
          while (__stxr((unint64_t)v23, v24));
          v23[2] = (google::protobuf::Arena *)v25;
        }
        else
        {
          Aligned = (CoreML::Specification::SparseNode *)operator new();
          CoreML::Specification::SparseNode::SparseNode(Aligned);
        }
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    v27 = (int *)v3[4];
    if (*v27 < v26)
      *v27 = v26;
  }
  return this;
}

void sub_1D3B38854(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::SparseNode>::Merge(const CoreML::Specification::SparseNode *a1, std::string *a2)
{
  return CoreML::Specification::SparseNode::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::SparseNode::MergeFrom(std::string *this, const CoreML::Specification::SparseNode *a2)
{
  std::string *v3;
  uint64_t v4;
  double v5;
  int v6;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((double *)a2 + 2);
  if (v5 != 0.0)
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  v6 = *((_DWORD *)a2 + 6);
  if (v6)
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v6;
  return this;
}

std::string *CoreML::Specification::PolyKernel::MergeFrom(std::string *this, const CoreML::Specification::PolyKernel *a2)
{
  std::string *v3;
  uint64_t v4;
  double v5;
  double v6;
  int v7;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((double *)a2 + 2);
  if (v5 != 0.0)
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  v6 = *((double *)a2 + 3);
  if (v6 != 0.0)
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  v7 = *((_DWORD *)a2 + 8);
  if (v7)
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
  return this;
}

std::string *CoreML::Specification::SigmoidKernel::MergeFrom(std::string *this, const CoreML::Specification::SigmoidKernel *a2)
{
  std::string *v3;
  uint64_t v4;
  double v5;
  double v6;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((double *)a2 + 2);
  if (v5 != 0.0)
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  v6 = *((double *)a2 + 3);
  if (v6 != 0.0)
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  return this;
}

CoreML::Specification::SupportVectorClassifier *CoreML::Specification::SupportVectorClassifier::SupportVectorClassifier(CoreML::Specification::SupportVectorClassifier *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_QWORD *)this = &off_1E9561730;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  if (this != (CoreML::Specification::SupportVectorClassifier *)&CoreML::Specification::_SupportVectorClassifier_default_instance_)
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  *((_QWORD *)this + 17) = 0;
  *((_DWORD *)this + 42) = 0;
  *((_QWORD *)this + 20) = 0;
  return this;
}

void sub_1D3B38A08(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = (_QWORD *)v2[15];
  if (v5 && !*v5)
    operator delete(v5);
  v6 = (_QWORD *)v2[12];
  if (v6 && !*v6)
    operator delete(v6);
  v7 = (_QWORD *)v2[9];
  if (v7 && !*v7)
    operator delete(v7);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  v8 = (_QWORD *)v2[3];
  if (v8)
  {
    if (!*v8)
      operator delete(v8);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SupportVectorClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorClassifier>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorClassifier>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::SupportVectorRegressor::~SupportVectorRegressor(CoreML::Specification::SupportVectorRegressor *this)
{
  CoreML::Specification::SupportVectorRegressor::~SupportVectorRegressor(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E9560EE0;
  if (this != (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
  if (*((_DWORD *)this + 13))
    CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::SupportVectorRegressor::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SupportVectorRegressor");
}

CoreML::Specification::SupportVectorRegressor *CoreML::Specification::SupportVectorRegressor::New(CoreML::Specification::SupportVectorRegressor *this)
{
  return CoreML::Specification::SupportVectorRegressor::New(this, 0);
}

CoreML::Specification::SupportVectorRegressor *CoreML::Specification::SupportVectorRegressor::New(CoreML::Specification::SupportVectorRegressor *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::SupportVectorRegressor *v3;

  v3 = (CoreML::Specification::SupportVectorRegressor *)operator new();
  CoreML::Specification::SupportVectorRegressor::SupportVectorRegressor(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::SupportVectorRegressor>(a2, v3);
  return v3;
}

void sub_1D3B38C44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4034009599);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::Clear(CoreML::Specification::SupportVectorRegressor *this)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *((_QWORD *)this + 2);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = *((_QWORD *)this + 3);
  *((_QWORD *)this + 2) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  return CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
}

uint64_t CoreML::Specification::SupportVectorRegressor::IsInitialized(CoreML::Specification::SupportVectorRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::SupportVectorRegressor::MergePartialFromCodedStream(CoreML::Specification::SupportVectorRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::Kernel *v9;
  char *v10;
  int VarintSizeAsIntFallback;
  CoreML::Specification::SparseSupportVectors *v12;
  CoreML::Specification::DenseSupportVectors *v13;
  CoreML::Specification::Coefficients *v14;
  char *v15;
  int v16;
  unint64_t *v17;
  unint64_t v18;
  char *v20;
  int v21;
  char *v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  uint64_t result;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  unint64_t v39;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_30;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10)
            goto LABEL_30;
          v9 = (CoreML::Specification::Kernel *)*((_QWORD *)this + 2);
          if (!v9)
          {
            v9 = (CoreML::Specification::Kernel *)operator new();
            CoreML::Specification::Kernel::Kernel(v9);
            *((_QWORD *)this + 2) = v9;
          }
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v26 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 13) = v26;
          if (v26 < 0 != v27)
            return 0;
          v28 = v24;
          result = CoreML::Specification::Kernel::MergePartialFromCodedStream(v9, a2, v25);
          if (!(_DWORD)result)
            return result;
          goto LABEL_59;
        case 2u:
          if (v7 != 18)
            goto LABEL_30;
          if (*((_DWORD *)this + 13) == 2)
          {
            v12 = (CoreML::Specification::SparseSupportVectors *)*((_QWORD *)this + 5);
          }
          else
          {
            CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
            *((_DWORD *)this + 13) = 2;
            v12 = (CoreML::Specification::SparseSupportVectors *)operator new();
            CoreML::Specification::SparseSupportVectors::SparseSupportVectors(v12);
            *((_QWORD *)this + 5) = v12;
          }
          v20 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
          {
            v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v21 < 0)
              return 0;
          }
          else
          {
            v21 = *v20;
            *(_QWORD *)a2 = v20 + 1;
          }
          v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
          v35 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v35--, 1);
          *((_DWORD *)a2 + 13) = v35;
          if (v35 < 0 != v27)
            return 0;
          v28 = v33;
          result = CoreML::Specification::SparseSupportVectors::MergePartialFromCodedStream(v12, a2, v34);
          if (!(_DWORD)result)
            return result;
          goto LABEL_59;
        case 3u:
          if (v7 != 26)
            goto LABEL_30;
          if (*((_DWORD *)this + 13) == 3)
          {
            v13 = (CoreML::Specification::DenseSupportVectors *)*((_QWORD *)this + 5);
          }
          else
          {
            CoreML::Specification::SupportVectorRegressor::clear_supportVectors((uint64_t)this);
            *((_DWORD *)this + 13) = 3;
            v13 = (CoreML::Specification::DenseSupportVectors *)operator new();
            CoreML::Specification::DenseSupportVectors::DenseSupportVectors(v13);
            *((_QWORD *)this + 5) = v13;
          }
          v22 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
          {
            v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v23 < 0)
              return 0;
          }
          else
          {
            v23 = *v22;
            *(_QWORD *)a2 = v22 + 1;
          }
          v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
          v38 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v38--, 1);
          *((_DWORD *)a2 + 13) = v38;
          if (v38 < 0 != v27)
            return 0;
          v28 = v36;
          result = CoreML::Specification::DenseSupportVectors::MergePartialFromCodedStream(v13, a2, v37);
          if (!(_DWORD)result)
            return result;
LABEL_59:
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
            continue;
          return 0;
        case 4u:
          if (v7 != 34)
            goto LABEL_30;
          v14 = (CoreML::Specification::Coefficients *)*((_QWORD *)this + 3);
          if (!v14)
          {
            v14 = (CoreML::Specification::Coefficients *)operator new();
            CoreML::Specification::Coefficients::Coefficients(v14);
            *((_QWORD *)this + 3) = v14;
          }
          v15 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
          {
            v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0)
              return 0;
          }
          else
          {
            v16 = *v15;
            *(_QWORD *)a2 = v15 + 1;
          }
          v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          v32 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 13) = v32;
          if (v32 < 0 != v27)
            return 0;
          v28 = v30;
          result = CoreML::Specification::Coefficients::MergePartialFromCodedStream(v14, (char **)a2, v31);
          if (!(_DWORD)result)
            return result;
          goto LABEL_59;
        case 5u:
          if (v7 != 41)
            goto LABEL_30;
          v39 = 0;
          v17 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v39);
            if (!(_DWORD)result)
              return result;
            v18 = v39;
          }
          else
          {
            v18 = *v17;
            *(_QWORD *)a2 = v17 + 1;
          }
          *((_QWORD *)this + 4) = v18;
          break;
        default:
          goto LABEL_30;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *(_QWORD *)a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_30:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B390B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SupportVectorRegressor::ByteSizeLong(CoreML::Specification::SupportVectorRegressor *this)
{
  CoreML::Specification::Kernel *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  if (this == (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::Kernel *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::Kernel::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (unsigned int *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = v5[4];
      v7 = 8 * v6;
      if ((_DWORD)v6)
      {
        if ((v7 & 0x80000000) != 0)
          v8 = 11;
        else
          v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v8 = 0;
      }
      v9 = v8 + v7;
      v5[8] = v7;
      v5[9] = v9;
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((double *)this + 4) == 0.0)
    v10 = v4;
  else
    v10 = v4 + 9;
  v11 = *((_DWORD *)this + 13);
  if (v11 == 3)
  {
    v12 = CoreML::Specification::DenseSupportVectors::ByteSizeLong(*((CoreML::Specification::DenseSupportVectors **)this
                                                                   + 5));
    goto LABEL_20;
  }
  if (v11 == 2)
  {
    v12 = CoreML::Specification::SparseSupportVectors::ByteSizeLong(*((CoreML::Specification::SparseSupportVectors **)this
                                                                    + 5));
LABEL_20:
    v10 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 12) = v10;
  return v10;
}

uint64_t *CoreML::Specification::SupportVectorRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  double v9;

  v5 = this;
  if (this != &CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    v6 = this[2];
    if (v6)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  v7 = *((_DWORD *)v5 + 13);
  if (v7 == 2)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v5[5], a2, a4);
    v7 = *((_DWORD *)v5 + 13);
  }
  if (v7 == 3)
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v5[5], a2, a4);
  if (v5 != &CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    v8 = v5[3];
    if (v8)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  v9 = *((double *)v5 + 4);
  if (v9 != 0.0)
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)5, a2, v9, a3);
  return this;
}

uint64_t CoreML::Specification::SupportVectorRegressor::GetCachedSize(CoreML::Specification::SupportVectorRegressor *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t CoreML::Specification::SupportVectorRegressor::clear_supportVectors(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 52);
  if (v2 == 3 || v2 == 2)
  {
    this = *(_QWORD *)(this + 40);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

std::string *CoreML::Specification::SupportVectorRegressor::MergeFrom(std::string *this, const CoreML::Specification::SupportVectorRegressor *a2)
{
  uint64_t v3;
  uint64_t v4;
  const CoreML::Specification::Kernel *v5;
  CoreML::Specification::Kernel *v6;
  const CoreML::Specification::Kernel *v7;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v8;
  CoreML::Specification::Coefficients *v9;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v10;
  double v11;
  int v12;
  CoreML::Specification::SparseSupportVectors *v13;
  CoreML::Specification::DenseSupportVectors *v14;
  CoreML::Specification::SparseSupportVectors *v15;
  const CoreML::Specification::SparseSupportVectors *v16;
  CoreML::Specification::DenseSupportVectors *v17;
  const CoreML::Specification::DenseSupportVectors *v18;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
  {
    v5 = (const CoreML::Specification::Kernel *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = *(CoreML::Specification::Kernel **)(v3 + 16);
      if (!v6)
      {
        v6 = (CoreML::Specification::Kernel *)operator new();
        CoreML::Specification::Kernel::Kernel(v6);
        *(_QWORD *)(v3 + 16) = v6;
        v5 = (const CoreML::Specification::Kernel *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::Kernel *)&CoreML::Specification::_Kernel_default_instance_;
      this = CoreML::Specification::Kernel::MergeFrom((std::string *)v6, v7);
    }
    v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      v9 = *(CoreML::Specification::Coefficients **)(v3 + 24);
      if (!v9)
      {
        v9 = (CoreML::Specification::Coefficients *)operator new();
        CoreML::Specification::Coefficients::Coefficients(v9);
        *(_QWORD *)(v3 + 24) = v9;
        v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_Coefficients_default_instance_;
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v9, v10);
    }
  }
  v11 = *((double *)a2 + 4);
  if (v11 != 0.0)
    *(double *)(v3 + 32) = v11;
  v12 = *((_DWORD *)a2 + 13);
  if (v12 == 3)
  {
    if (*(_DWORD *)(v3 + 52) == 3)
    {
      v14 = *(CoreML::Specification::DenseSupportVectors **)(v3 + 40);
    }
    else
    {
      CoreML::Specification::SupportVectorRegressor::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 52) = 3;
      v14 = (CoreML::Specification::DenseSupportVectors *)operator new();
      v17 = CoreML::Specification::DenseSupportVectors::DenseSupportVectors(v14);
      *(_QWORD *)(v3 + 40) = v14;
      if (*((_DWORD *)a2 + 13) != 3)
      {
        CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(v17);
        v18 = (const CoreML::Specification::DenseSupportVectors *)&CoreML::Specification::_DenseSupportVectors_default_instance_;
        return (std::string *)CoreML::Specification::DenseSupportVectors::MergeFrom((uint64_t *)v14, v18);
      }
    }
    v18 = (const CoreML::Specification::DenseSupportVectors *)*((_QWORD *)a2 + 5);
    return (std::string *)CoreML::Specification::DenseSupportVectors::MergeFrom((uint64_t *)v14, v18);
  }
  if (v12 == 2)
  {
    if (*(_DWORD *)(v3 + 52) == 2)
    {
      v13 = *(CoreML::Specification::SparseSupportVectors **)(v3 + 40);
    }
    else
    {
      CoreML::Specification::SupportVectorRegressor::clear_supportVectors(v3);
      *(_DWORD *)(v3 + 52) = 2;
      v13 = (CoreML::Specification::SparseSupportVectors *)operator new();
      v15 = CoreML::Specification::SparseSupportVectors::SparseSupportVectors(v13);
      *(_QWORD *)(v3 + 40) = v13;
      if (*((_DWORD *)a2 + 13) != 2)
      {
        CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(v15);
        v16 = (const CoreML::Specification::SparseSupportVectors *)&CoreML::Specification::_SparseSupportVectors_default_instance_;
        return (std::string *)CoreML::Specification::SparseSupportVectors::MergeFrom((uint64_t *)v13, v16);
      }
    }
    v16 = (const CoreML::Specification::SparseSupportVectors *)*((_QWORD *)a2 + 5);
    return (std::string *)CoreML::Specification::SparseSupportVectors::MergeFrom((uint64_t *)v13, v16);
  }
  return this;
}

void sub_1D3B3955C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::SupportVectorRegressor *CoreML::Specification::SupportVectorRegressor::SupportVectorRegressor(CoreML::Specification::SupportVectorRegressor *this)
{
  *(_QWORD *)this = &off_1E9560EE0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SupportVectorRegressor *)&CoreML::Specification::_SupportVectorRegressor_default_instance_)
    CoreML::Specification::protobuf_SVM_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B39600(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SupportVectorRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorRegressor>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SupportVectorRegressor>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::Coefficients::~Coefficients(CoreML::Specification::Coefficients *this)
{
  CoreML::Specification::Coefficients::~Coefficients(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E955A498;
  v2 = (_QWORD *)*((_QWORD *)this + 3);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::Coefficients::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Coefficients");
}

CoreML::Specification::Coefficients *CoreML::Specification::Coefficients::New(CoreML::Specification::Coefficients *this)
{
  return CoreML::Specification::Coefficients::New(this, 0);
}

CoreML::Specification::Coefficients *CoreML::Specification::Coefficients::New(CoreML::Specification::Coefficients *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Coefficients *v3;

  v3 = (CoreML::Specification::Coefficients *)operator new();
  CoreML::Specification::Coefficients::Coefficients(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Coefficients>(a2, v3);
  return v3;
}

void sub_1D3B39788(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Coefficients::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::Coefficients::IsInitialized(CoreML::Specification::Coefficients *this)
{
  return 1;
}

uint64_t CoreML::Specification::Coefficients::ByteSizeLong(CoreML::Specification::Coefficients *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((unsigned int *)this + 4);
  v2 = 8 * v1;
  if ((_DWORD)v1)
  {
    if ((v2 & 0x80000000) != 0)
      v3 = 11;
    else
      v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
  }
  v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::Coefficients::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char __src[5];

  if (*(int *)(this + 16) >= 1)
  {
    v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 10;
      v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      v6 = *((_QWORD *)a2 + 1);
      if (v5 < 0x80)
      {
        v8 = *(_DWORD *)(v3 + 32);
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          v8 = v5 >> 7;
          v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *v7 = v8;
      v10 = (_DWORD)v7 - v6 + 1;
      *((_QWORD *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    v11 = *(_QWORD *)(v3 + 24);
    if (v11)
      v12 = (char *)(v11 + 8);
    else
      v12 = 0;
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, 8 * *(_DWORD *)(v3 + 16));
  }
  return this;
}

uint64_t CoreML::Specification::Coefficients::GetCachedSize(CoreML::Specification::Coefficients *this)
{
  return *((unsigned int *)this + 9);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Coefficients>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Coefficients>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Coefficients>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::DenseSupportVectors::~DenseSupportVectors(CoreML::Specification::DenseSupportVectors *this)
{
  CoreML::Specification::DenseSupportVectors::~DenseSupportVectors(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E955EDA0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::DenseSupportVectors::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DenseSupportVectors");
}

CoreML::Specification::DenseSupportVectors *CoreML::Specification::DenseSupportVectors::New(CoreML::Specification::DenseSupportVectors *this)
{
  return CoreML::Specification::DenseSupportVectors::New(this, 0);
}

CoreML::Specification::DenseSupportVectors *CoreML::Specification::DenseSupportVectors::New(CoreML::Specification::DenseSupportVectors *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::DenseSupportVectors *v3;

  v3 = (CoreML::Specification::DenseSupportVectors *)operator new();
  CoreML::Specification::DenseSupportVectors::DenseSupportVectors(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::DenseSupportVectors>(a2, v3);
  return v3;
}

void sub_1D3B39A70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DenseSupportVectors::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    v2 = (uint64_t *)(*(_QWORD *)(this + 32) + 8);
    do
    {
      v3 = *v2++;
      *(_DWORD *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::DenseSupportVectors::IsInitialized(CoreML::Specification::DenseSupportVectors *this)
{
  return 1;
}

uint64_t CoreML::Specification::DenseSupportVectors::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4;
  uint64_t v6;
  int i;

  v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    v6 = this;
    for (i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::DenseSupportVectors::GetCachedSize(CoreML::Specification::DenseSupportVectors *this)
{
  return *((unsigned int *)this + 10);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DenseSupportVectors>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseSupportVectors>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseSupportVectors>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::DenseVector::~DenseVector(CoreML::Specification::DenseVector *this)
{
  CoreML::Specification::DenseVector::~DenseVector(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E9559FD8;
  v2 = (_QWORD *)*((_QWORD *)this + 3);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::DenseVector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DenseVector");
}

CoreML::Specification::DenseVector *CoreML::Specification::DenseVector::New(CoreML::Specification::DenseVector *this)
{
  return CoreML::Specification::DenseVector::New(this, 0);
}

CoreML::Specification::DenseVector *CoreML::Specification::DenseVector::New(CoreML::Specification::DenseVector *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::DenseVector *v3;

  v3 = (CoreML::Specification::DenseVector *)operator new();
  CoreML::Specification::DenseVector::DenseVector(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::DenseVector>(a2, v3);
  return v3;
}

void sub_1D3B39C5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DenseVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::DenseVector::IsInitialized(CoreML::Specification::DenseVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::DenseVector::ByteSizeLong(CoreML::Specification::DenseVector *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((unsigned int *)this + 4);
  v2 = 8 * v1;
  if ((_DWORD)v1)
  {
    if ((v2 & 0x80000000) != 0)
      v3 = 11;
    else
      v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
  }
  v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::DenseVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char __src[5];

  if (*(int *)(this + 16) >= 1)
  {
    v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 10;
      v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      v6 = *((_QWORD *)a2 + 1);
      if (v5 < 0x80)
      {
        v8 = *(_DWORD *)(v3 + 32);
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          v8 = v5 >> 7;
          v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *v7 = v8;
      v10 = (_DWORD)v7 - v6 + 1;
      *((_QWORD *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    v11 = *(_QWORD *)(v3 + 24);
    if (v11)
      v12 = (char *)(v11 + 8);
    else
      v12 = 0;
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, 8 * *(_DWORD *)(v3 + 16));
  }
  return this;
}

uint64_t CoreML::Specification::DenseVector::GetCachedSize(CoreML::Specification::DenseVector *this)
{
  return *((unsigned int *)this + 9);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DenseVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseVector>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DenseVector>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::SparseSupportVectors::~SparseSupportVectors(CoreML::Specification::SparseSupportVectors *this)
{
  CoreML::Specification::SparseSupportVectors::~SparseSupportVectors(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E955FBE0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::SparseSupportVectors::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseSupportVectors");
}

CoreML::Specification::SparseSupportVectors *CoreML::Specification::SparseSupportVectors::New(CoreML::Specification::SparseSupportVectors *this)
{
  return CoreML::Specification::SparseSupportVectors::New(this, 0);
}

CoreML::Specification::SparseSupportVectors *CoreML::Specification::SparseSupportVectors::New(CoreML::Specification::SparseSupportVectors *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::SparseSupportVectors *v3;

  v3 = (CoreML::Specification::SparseSupportVectors *)operator new();
  CoreML::Specification::SparseSupportVectors::SparseSupportVectors(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::SparseSupportVectors>(a2, v3);
  return v3;
}

void sub_1D3B39F44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SparseSupportVectors::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    v2 = 0;
    v3 = *(_QWORD *)(this + 32) + 8;
    do
    {
      v4 = *(_QWORD *)(v3 + 8 * v2);
      v5 = *(unsigned int *)(v4 + 24);
      if ((int)v5 >= 1)
      {
        v6 = (uint64_t *)(*(_QWORD *)(v4 + 32) + 8);
        do
        {
          v7 = *v6++;
          *(_DWORD *)(v7 + 24) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          --v5;
        }
        while (v5);
        *(_DWORD *)(v4 + 24) = 0;
      }
      ++v2;
    }
    while (v2 != v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::SparseSupportVectors::IsInitialized(CoreML::Specification::SparseSupportVectors *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseSupportVectors::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4;
  uint64_t v6;
  int i;

  v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    v6 = this;
    for (i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SparseSupportVectors::GetCachedSize(CoreML::Specification::SparseSupportVectors *this)
{
  return *((unsigned int *)this + 10);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseSupportVectors>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseSupportVectors>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseSupportVectors>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::SparseVector::~SparseVector(CoreML::Specification::SparseVector *this)
{
  CoreML::Specification::SparseVector::~SparseVector(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E955AEB0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::SparseVector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseVector");
}

CoreML::Specification::SparseVector *CoreML::Specification::SparseVector::New(CoreML::Specification::SparseVector *this)
{
  return CoreML::Specification::SparseVector::New(this, 0);
}

CoreML::Specification::SparseVector *CoreML::Specification::SparseVector::New(CoreML::Specification::SparseVector *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::SparseVector *v3;

  v3 = (CoreML::Specification::SparseVector *)operator new();
  CoreML::Specification::SparseVector::SparseVector(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::SparseVector>(a2, v3);
  return v3;
}

void sub_1D3B3A160(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SparseVector::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    v2 = (uint64_t *)(*(_QWORD *)(this + 32) + 8);
    do
    {
      v3 = *v2++;
      *(_DWORD *)(v3 + 24) = 0;
      *(_QWORD *)(v3 + 16) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::SparseVector::IsInitialized(CoreML::Specification::SparseVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4;
  uint64_t v6;
  int i;

  v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    v6 = this;
    for (i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SparseVector::GetCachedSize(CoreML::Specification::SparseVector *this)
{
  return *((unsigned int *)this + 10);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseVector>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseVector>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::SparseNode::~SparseNode(CoreML::Specification::SparseNode *this)
{
  *(_QWORD *)this = &off_1E9559EA8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9559EA8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::SparseNode::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SparseNode");
}

CoreML::Specification::SparseNode *CoreML::Specification::SparseNode::New(CoreML::Specification::SparseNode *this)
{
  return CoreML::Specification::SparseNode::New(this, 0);
}

CoreML::Specification::SparseNode *CoreML::Specification::SparseNode::New(CoreML::Specification::SparseNode *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::SparseNode *v3;

  v3 = (CoreML::Specification::SparseNode *)operator new();
  CoreML::Specification::SparseNode::SparseNode(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::SparseNode>(a2, v3);
  return v3;
}

void sub_1D3B3A398(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SparseNode::Clear(uint64_t this)
{
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::SparseNode::IsInitialized(CoreML::Specification::SparseNode *this)
{
  return 1;
}

uint64_t CoreML::Specification::SparseNode::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  signed int v6;
  double v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  v7 = *(double *)(v5 + 16);
  if (v7 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  return this;
}

uint64_t CoreML::Specification::SparseNode::GetCachedSize(CoreML::Specification::SparseNode *this)
{
  return *((unsigned int *)this + 7);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SparseNode>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseNode>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SparseNode>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::Kernel::~Kernel(CoreML::Specification::Kernel *this)
{
  CoreML::Specification::Kernel::~Kernel(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E9564AD8;
  if (*((_DWORD *)this + 7))
    CoreML::Specification::Kernel::clear_kernel((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::Kernel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Kernel");
}

CoreML::Specification::Kernel *CoreML::Specification::Kernel::New(CoreML::Specification::Kernel *this)
{
  return CoreML::Specification::Kernel::New(this, 0);
}

CoreML::Specification::Kernel *CoreML::Specification::Kernel::New(CoreML::Specification::Kernel *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Kernel *v3;

  v3 = (CoreML::Specification::Kernel *)operator new();
  CoreML::Specification::Kernel::Kernel(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Kernel>(a2, v3);
  return v3;
}

void sub_1D3B3A524(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Kernel::IsInitialized(CoreML::Specification::Kernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::Kernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 3)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 4)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 16), a2, a4);
  return this;
}

uint64_t CoreML::Specification::Kernel::GetCachedSize(CoreML::Specification::Kernel *this)
{
  return *((unsigned int *)this + 6);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Kernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Kernel>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Kernel>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::SigmoidKernel::~SigmoidKernel(CoreML::Specification::SigmoidKernel *this)
{
  *(_QWORD *)this = &off_1E955B538;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955B538;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::SigmoidKernel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SigmoidKernel");
}

CoreML::Specification::SigmoidKernel *CoreML::Specification::SigmoidKernel::New(CoreML::Specification::SigmoidKernel *this)
{
  return CoreML::Specification::SigmoidKernel::New(this, 0);
}

CoreML::Specification::SigmoidKernel *CoreML::Specification::SigmoidKernel::New(CoreML::Specification::SigmoidKernel *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::SigmoidKernel *v3;

  v3 = (CoreML::Specification::SigmoidKernel *)operator new();
  CoreML::Specification::SigmoidKernel::SigmoidKernel(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::SigmoidKernel>(a2, v3);
  return v3;
}

void sub_1D3B3A77C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SigmoidKernel::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::SigmoidKernel::IsInitialized(CoreML::Specification::SigmoidKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::SigmoidKernel::ByteSizeLong(CoreML::Specification::SigmoidKernel *this)
{
  uint64_t v1;

  v1 = 9;
  if (*((double *)this + 2) == 0.0)
    v1 = 0;
  if (*((double *)this + 3) != 0.0)
    v1 += 9;
  *((_DWORD *)this + 8) = v1;
  return v1;
}

uint64_t CoreML::Specification::SigmoidKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  double v5;
  double v6;

  v4 = this;
  v5 = *(double *)(this + 16);
  if (v5 != 0.0)
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  return this;
}

uint64_t CoreML::Specification::SigmoidKernel::GetCachedSize(CoreML::Specification::SigmoidKernel *this)
{
  return *((unsigned int *)this + 8);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SigmoidKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SigmoidKernel>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SigmoidKernel>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::PolyKernel::~PolyKernel(CoreML::Specification::PolyKernel *this)
{
  *(_QWORD *)this = &off_1E9559E10;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9559E10;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::PolyKernel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PolyKernel");
}

CoreML::Specification::PolyKernel *CoreML::Specification::PolyKernel::New(CoreML::Specification::PolyKernel *this)
{
  return CoreML::Specification::PolyKernel::New(this, 0);
}

CoreML::Specification::PolyKernel *CoreML::Specification::PolyKernel::New(CoreML::Specification::PolyKernel *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::PolyKernel *v3;

  v3 = (CoreML::Specification::PolyKernel *)operator new();
  CoreML::Specification::PolyKernel::PolyKernel(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::PolyKernel>(a2, v3);
  return v3;
}

void sub_1D3B3A978(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PolyKernel::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreML::Specification::PolyKernel::IsInitialized(CoreML::Specification::PolyKernel *this)
{
  return 1;
}

uint64_t CoreML::Specification::PolyKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  signed int v6;
  double v7;
  double v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteInt32(1, v6, a2, a4);
  v7 = *(double *)(v5 + 16);
  if (v7 != 0.0)
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  v8 = *(double *)(v5 + 24);
  if (v8 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, v8, a3);
  return this;
}

uint64_t CoreML::Specification::PolyKernel::GetCachedSize(CoreML::Specification::PolyKernel *this)
{
  return *((unsigned int *)this + 9);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PolyKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PolyKernel>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PolyKernel>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::RBFKernel::~RBFKernel(CoreML::Specification::RBFKernel *this)
{
  *(_QWORD *)this = &off_1E9566298;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9566298;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::RBFKernel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.RBFKernel");
}

CoreML::Specification::RBFKernel *CoreML::Specification::RBFKernel::New(CoreML::Specification::RBFKernel *this)
{
  return CoreML::Specification::RBFKernel::New(this, 0);
}

CoreML::Specification::RBFKernel *CoreML::Specification::RBFKernel::New(CoreML::Specification::RBFKernel *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::RBFKernel *v3;

  v3 = (CoreML::Specification::RBFKernel *)operator new();
  CoreML::Specification::RBFKernel::RBFKernel(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::RBFKernel>(a2, v3);
  return v3;
}

void sub_1D3B3AB64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RBFKernel::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::RBFKernel::IsInitialized(CoreML::Specification::RBFKernel *this)
{
  return 1;
}

std::string *CoreML::Specification::RBFKernel::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  std::string *v3;
  uint64_t v4;
  double v5;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((double *)a2 + 2);
  if (v5 != 0.0)
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  return this;
}

uint64_t CoreML::Specification::RBFKernel::ByteSizeLong(CoreML::Specification::RBFKernel *this)
{
  uint64_t v1;

  v1 = 9;
  if (*((double *)this + 2) == 0.0)
    v1 = 0;
  *((_DWORD *)this + 6) = v1;
  return v1;
}

uint64_t CoreML::Specification::RBFKernel::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  double v3;

  v3 = *(double *)(this + 16);
  if (v3 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v3, a3);
  return this;
}

uint64_t CoreML::Specification::RBFKernel::GetCachedSize(CoreML::Specification::RBFKernel *this)
{
  return *((unsigned int *)this + 6);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::RBFKernel>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::RBFKernel>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::RBFKernel>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::CoreMLModels::Gazetteer::~Gazetteer(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  CoreML::Specification::CoreMLModels::Gazetteer::~Gazetteer(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v4;
  int v6;
  uint64_t v7;

  *(_QWORD *)this = &off_1E955AB20;
  v2 = *((_QWORD *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D8251A40](v4, 0x1012C40EC159624);
  }
  v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    if (v6 == 200)
    {
      v7 = *((_QWORD *)this + 5);
      if (v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    }
    *((_DWORD *)this + 13) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::CoreMLModels::Gazetteer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.Gazetteer");
}

CoreML::Specification::CoreMLModels::Gazetteer *CoreML::Specification::CoreMLModels::Gazetteer::New(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return CoreML::Specification::CoreMLModels::Gazetteer::New(this, 0);
}

CoreML::Specification::CoreMLModels::Gazetteer *CoreML::Specification::CoreMLModels::Gazetteer::New(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::CoreMLModels::Gazetteer *v3;

  v3 = (CoreML::Specification::CoreMLModels::Gazetteer *)operator new();
  CoreML::Specification::CoreMLModels::Gazetteer::Gazetteer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::Gazetteer>(a2, v3);
  return v3;
}

void sub_1D3B3AD0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40C43D3D65);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  v3 = *(_QWORD *)(this + 24);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  if (*(_DWORD *)(this + 52) == 200)
  {
    this = *(_QWORD *)(this + 40);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::IsInitialized(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return 1;
}

BOOL CoreML::Specification::CoreMLModels::Gazetteer::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  std::string **v6;
  unsigned __int8 *v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  std::string *v14;
  _BOOL8 result;
  unsigned int *v16;
  std::string::size_type size;
  CoreML::Specification::StringVector *v18;
  char *v19;
  int v20;
  std::string *v21;
  char *v22;
  int VarintSizeAsIntFallback;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  unsigned int TagFallback;
  uint64_t Varint32Fallback;

  v5 = (std::string **)((char *)this + 24);
  v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v7 = *(unsigned __int8 **)a2;
      v8 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v8)
      {
        LODWORD(v10) = 0;
LABEL_45:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0)
          goto LABEL_46;
        goto LABEL_9;
      }
      v9 = v7 + 1;
      v10 = *v7;
      if ((char)*v7 >= 1)
        break;
      if ((unint64_t)v9 >= v8)
        goto LABEL_45;
      v12 = *v9;
      if ((v10 & ~v12) < 0x80)
        goto LABEL_45;
      *(_QWORD *)a2 = v7 + 2;
      v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
LABEL_9:
      v13 = v11 >> 3;
      if (v11 >> 3 > 0x63)
      {
        if (v13 == 100)
        {
          if (v11 != 34)
            goto LABEL_46;
          v21 = *v5;
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            v21 = *v5;
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v21))
            return 0;
        }
        else
        {
          if (v13 != 200 || v11 != 66)
            goto LABEL_46;
          if (*((_DWORD *)this + 13) == 200)
          {
            v18 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 5);
          }
          else
          {
            *((_DWORD *)this + 13) = 200;
            v18 = (CoreML::Specification::StringVector *)operator new();
            CoreML::Specification::StringVector::StringVector(v18);
            *((_QWORD *)this + 5) = v18;
          }
          v22 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v22;
            *(_QWORD *)a2 = v22 + 1;
          }
          v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v26 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 13) = v26;
          if (v26 < 0 != v27)
            return 0;
          v28 = v24;
          result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v18, (char **)a2, v25);
          if (!result)
            return result;
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
            return 0;
        }
      }
      else if (v13 == 1)
      {
        if (v11 != 8)
          goto LABEL_46;
        v19 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v20 = 0;
          goto LABEL_53;
        }
        v20 = *v19;
        if (*v19 < 0)
        {
LABEL_53:
          Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          *((_DWORD *)this + 8) = Varint32Fallback;
          if (Varint32Fallback < 0)
            return 0;
        }
        else
        {
          *((_DWORD *)this + 8) = v20;
          *(_QWORD *)a2 = v19 + 1;
        }
      }
      else
      {
        if (v13 != 10 || v11 != 82)
          goto LABEL_46;
        v14 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v14 = *v6;
        }
        result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v14);
        if (!result)
          return result;
        v16 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          v16 = *(unsigned int **)v16;
          size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.Gazetteer.language"))return 0;
      }
    }
    *(_QWORD *)a2 = v9;
    v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0)
      goto LABEL_9;
LABEL_46:
    if (!(_DWORD)v11 || (v11 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B3B0B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::ByteSizeLong(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v2 = *((_QWORD *)this + 2);
  v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(_QWORD *)(v2 + 8))
      goto LABEL_3;
LABEL_7:
    v5 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v2 + 23))
    goto LABEL_7;
LABEL_3:
  v4 = *(_QWORD *)(v2 + 8);
  if ((v3 & 0x80u) == 0)
    v4 = v3;
  v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v6 = *((_QWORD *)this + 3);
  v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v6 + 23))
  {
    goto LABEL_13;
  }
  v8 = *(_QWORD *)(v6 + 8);
  if ((v7 & 0x80u) == 0)
    v8 = v7;
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  v9 = *((_DWORD *)this + 8);
  if (v9)
    v5 += ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (*((_DWORD *)this + 13) == 200)
  {
    v10 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 5));
    v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::Gazetteer *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v6 = *((unsigned int *)this + 8);
  if ((_DWORD)v6)
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  result = *((_QWORD *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    v8 = *(_QWORD *)(result + 8);
    if (!v8)
      goto LABEL_9;
    result = *(_QWORD *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.Gazetteer.language");
    result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((_QWORD *)this + 2), a2);
  }
LABEL_9:
  v9 = *((_QWORD *)this + 3);
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(v9 + 23))
      goto LABEL_12;
    goto LABEL_11;
  }
  if (*(_QWORD *)(v9 + 8))
LABEL_11:
    result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
LABEL_12:
  if (*((_DWORD *)this + 13) == 200)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xC8, *((_QWORD *)this + 5), a2, a4);
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::Gazetteer::GetCachedSize(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  return *((unsigned int *)this + 12);
}

void CoreML::Specification::CoreMLModels::Gazetteer::MergeFrom(CoreML::Specification::CoreMLModels::Gazetteer *this, const CoreML::Specification::CoreMLModels::Gazetteer *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  CoreML::Specification::StringVector *v10;
  CoreML::Specification::StringVector *v11;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v12;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_11;
  }
  v6 = (uint64_t *)*((_QWORD *)this + 2);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v5);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v5);
  }
LABEL_11:
  v7 = *((_QWORD *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(_QWORD *)(v7 + 8))
      goto LABEL_19;
  }
  else if (!*(_BYTE *)(v7 + 23))
  {
    goto LABEL_19;
  }
  v8 = (uint64_t *)*((_QWORD *)this + 3);
  if (v8 != (uint64_t *)v7)
  {
    if (v8 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, v7);
    else
      std::string::operator=(*((std::string **)this + 3), (const std::string *)v7);
  }
LABEL_19:
  v9 = *((_DWORD *)a2 + 8);
  if (v9)
    *((_DWORD *)this + 8) = v9;
  if (*((_DWORD *)a2 + 13) == 200)
  {
    if (*((_DWORD *)this + 13) == 200)
    {
      v10 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 5);
    }
    else
    {
      *((_DWORD *)this + 13) = 200;
      v10 = (CoreML::Specification::StringVector *)operator new();
      v11 = CoreML::Specification::StringVector::StringVector(v10);
      *((_QWORD *)this + 5) = v10;
      if (*((_DWORD *)a2 + 13) != 200)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v11);
        v12 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::_StringVector_default_instance_;
        goto LABEL_28;
      }
    }
    v12 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 5);
LABEL_28:
    CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v10, v12);
  }
}

void sub_1D3B3B444(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::Gazetteer *CoreML::Specification::CoreMLModels::Gazetteer::Gazetteer(CoreML::Specification::CoreMLModels::Gazetteer *this)
{
  *(_QWORD *)this = &off_1E955AB20;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::Gazetteer *)&CoreML::Specification::CoreMLModels::_Gazetteer_default_instance_)
    CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B3B4C4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::Gazetteer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::Gazetteer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::Gazetteer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_Gazetteer_2eproto::TableStruct *this)
{
  unint64_t *inited;
  unint64_t *result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_Gazetteer_default_instance_ = (uint64_t)&off_1E955AB20;
  unk_1EDB8F120 = 0;
  qword_1EDB8F128 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB8F130 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB8F138 = 0;
  qword_1EDB8F148 = 0;
  byte_1EDB8F150 = 1;
  return result;
}

void CoreML::Specification::Normalizer::~Normalizer(CoreML::Specification::Normalizer *this)
{
  *(_QWORD *)this = &off_1E9559D78;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9559D78;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::Normalizer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Normalizer");
}

CoreML::Specification::Normalizer *CoreML::Specification::Normalizer::New(CoreML::Specification::Normalizer *this)
{
  return CoreML::Specification::Normalizer::New(this, 0);
}

CoreML::Specification::Normalizer *CoreML::Specification::Normalizer::New(CoreML::Specification::Normalizer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Normalizer *v3;

  v3 = (CoreML::Specification::Normalizer *)operator new();
  CoreML::Specification::Normalizer::Normalizer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Normalizer>(a2, v3);
  return v3;
}

void sub_1D3B3B78C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Normalizer::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::Normalizer::IsInitialized(CoreML::Specification::Normalizer *this)
{
  return 1;
}

std::string *CoreML::Specification::Normalizer::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  std::string *v3;
  uint64_t v4;
  int v5;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  return this;
}

uint64_t CoreML::Specification::Normalizer::MergePartialFromCodedStream(CoreML::Specification::Normalizer *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Normalizer::ByteSizeLong(CoreML::Specification::Normalizer *this)
{
  int v1;
  uint64_t v2;

  v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0)
      v2 = 11;
    else
      v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v2 = 0;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t CoreML::Specification::Normalizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  signed int v5;

  v5 = *(_DWORD *)(this + 16);
  if (v5)
    return google::protobuf::internal::WireFormatLite::WriteEnum(1, v5, a2, a4);
  return this;
}

uint64_t CoreML::Specification::Normalizer::GetCachedSize(CoreML::Specification::Normalizer *this)
{
  return *((unsigned int *)this + 5);
}

CoreML::Specification::Normalizer *CoreML::Specification::Normalizer::Normalizer(CoreML::Specification::Normalizer *this)
{
  *(_QWORD *)this = &off_1E9559D78;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::Normalizer *)&CoreML::Specification::_Normalizer_default_instance_)
    CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B3B9A4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Normalizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Normalizer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Normalizer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(CoreML::Specification::protobuf_Normalizer_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_Normalizer_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Normalizer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_Normalizer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Normalizer_2eproto::TableStruct *this)
{
  unint64_t *result;

  result = google::protobuf::internal::InitProtobufDefaults(this);
  qword_1EDB8F7C0 = 0;
  *(_QWORD *)&dword_1EDB8F7C8 = 0;
  CoreML::Specification::_Normalizer_default_instance_ = (uint64_t)&off_1E9559D78;
  byte_1EDB8F7D0 = 1;
  return result;
}

void CoreML::Specification::StringToInt64Map::~StringToInt64Map(CoreML::Specification::StringToInt64Map *this)
{
  *(_QWORD *)this = &off_1E955D5E0;
  google::protobuf::Map<std::string,long long>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955D5E0;
  google::protobuf::Map<std::string,long long>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::StringToInt64Map::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringToInt64Map");
}

CoreML::Specification::StringToInt64Map *CoreML::Specification::StringToInt64Map::New(CoreML::Specification::StringToInt64Map *this)
{
  return CoreML::Specification::StringToInt64Map::New(this, 0);
}

CoreML::Specification::StringToInt64Map *CoreML::Specification::StringToInt64Map::New(CoreML::Specification::StringToInt64Map *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::StringToInt64Map *v3;

  v3 = (CoreML::Specification::StringToInt64Map *)operator new();
  CoreML::Specification::StringToInt64Map::StringToInt64Map(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::StringToInt64Map>(a2, v3);
  return v3;
}

void sub_1D3B3BB8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::StringToInt64Map::Clear(CoreML::Specification::StringToInt64Map *this)
{
  google::protobuf::Map<std::string,long long>::clear((_QWORD *)this + 3);
}

uint64_t CoreML::Specification::StringToInt64Map::IsInitialized(CoreML::Specification::StringToInt64Map *this)
{
  return 1;
}

uint64_t CoreML::Specification::StringToInt64Map::MergePartialFromCodedStream(CoreML::Specification::StringToInt64Map *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::Arena **v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  int v12;
  char *v13;
  int VarintSizeAsIntFallback;
  __n128 v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  unsigned __int8 *v24;
  unint64_t Varint64Fallback;
  char *v26;
  uint64_t v27;
  std::string *v28;
  int v29;
  BOOL v30;
  char v31;
  uint64_t v32;
  google::protobuf::Arena **v33;
  _QWORD *v34;
  _DWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v38;
  unsigned int *p_p;
  int v40;
  _BOOL4 v41;
  google::protobuf::Arena **v43;
  _QWORD *v44;
  std::string __p;
  google::protobuf::Arena **v46;
  _DWORD *v47;

  v4 = (google::protobuf::Arena **)((char *)this + 16);
  v5 = (_QWORD *)((char *)this + 24);
  while (1)
  {
    v6 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      v7 = *v6;
      if (*v6 >= 1)
      {
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_12;
        goto LABEL_8;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0)
      goto LABEL_12;
LABEL_8:
    if (v8 == 10 && (v8 & 0xFFFFFFF8) == 8)
    {
      v43 = v4;
      v44 = v5;
      memset(&__p, 0, sizeof(__p));
      v47 = 0;
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v13 & 0x80000000) == 0)
      {
        VarintSizeAsIntFallback = *v13;
        *(_QWORD *)a2 = v13 + 1;
        goto LABEL_24;
      }
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        goto LABEL_50;
LABEL_24:
      v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v17 = *((_DWORD *)a2 + 13);
      v18 = __OFSUB__(v17--, 1);
      *((_DWORD *)a2 + 13) = v17;
      if (v17 < 0 == v18)
      {
        v19 = v16;
        v20 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && *v20 == 10)
        {
          *(_QWORD *)a2 = v20 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p))
            goto LABEL_50;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) >= 1 && **(_BYTE **)a2 == 16)
          {
            v21 = *(_QWORD *)v44[2];
            v46 = google::protobuf::Map<std::string,long long>::operator[]((uint64_t)v44, (uint64_t)&__p);
            if (v21 != *(_QWORD *)v44[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              v22 = v46;
              v24 = *(unsigned __int8 **)a2;
              v23 = (char *)*((_QWORD *)a2 + 1);
              if (*(_QWORD *)a2 >= (unint64_t)v23 || (char)*v24 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v31 & 1) != 0)
                {
                  v26 = *(char **)a2;
                  v23 = (char *)*((_QWORD *)a2 + 1);
                  goto LABEL_52;
                }
                v15.n128_f64[0] = google::protobuf::Map<std::string,long long>::erase(v44, (unsigned __int8 *)&__p);
                goto LABEL_50;
              }
              Varint64Fallback = *v24;
              v26 = (char *)(v24 + 1);
              *(_QWORD *)a2 = v26;
LABEL_52:
              *v22 = Varint64Fallback;
              if (v26 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((_BYTE *)a2 + 36) = 1;
LABEL_65:
                if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19))
                {
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    p_p = (unsigned int *)&__p;
                  else
                    p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  else
                    v40 = __p.__r_.__value_.__r.__words[1];
                  v41 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v40, 0, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
                  v30 = v41;
                  if (v41)
                    v12 = 0;
                  else
                    v12 = 6;
                  goto LABEL_75;
                }
                goto LABEL_50;
              }
              v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(*v43);
              if (v47 != (_DWORD *)v32)
              {
                if (v47)
                  (*(void (**)(void))(*(_QWORD *)v47 + 8))();
                v47 = (_DWORD *)v32;
              }
              v33 = v46;
              v34 = v44;
              *(_DWORD *)(v32 + 40) |= 2u;
              *(_QWORD *)(v32 + 24) = *v33;
              google::protobuf::Map<std::string,long long>::erase(v34, (unsigned __int8 *)&__p);
              v35 = v47;
              v47[10] |= 1u;
              v36 = (uint64_t *)(v35 + 4);
              v37 = *((_QWORD *)v35 + 2);
              if ((uint64_t *)v37 == &google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)v35 + 2, *((google::protobuf::Arena ***)v35 + 4), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
                v37 = *v36;
              }
              if (*(char *)(v37 + 23) < 0)
                operator delete(*(void **)v37);
              v38 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *(_QWORD *)(v37 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
              *(_OWORD *)v37 = v38;
              *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
              __p.__r_.__value_.__s.__data_[0] = 0;
              v29 = (*(uint64_t (**)(_DWORD *, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v47 + 88))(v47, a2);
              if (v29)
                google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry((uint64_t)&v43);
              if (!(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v47 + 40))(v47))
              {
LABEL_64:
                if (v29)
                  goto LABEL_65;
                goto LABEL_50;
              }
LABEL_46:
              v47 = 0;
              if ((v29 & 1) != 0)
                goto LABEL_65;
              v30 = 0;
              v12 = 6;
LABEL_77:
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              if (!v30)
                goto LABEL_18;
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          memset(&__p, 0, sizeof(__p));
        }
        v27 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(*v43);
        if (v47 != (_DWORD *)v27)
        {
          if (v47)
            (*(void (**)(void))(*(_QWORD *)v47 + 8))();
          v47 = (_DWORD *)v27;
        }
        v28 = *(std::string **)(v27 + 16);
        *(_DWORD *)(v27 + 40) |= 1u;
        if (v28 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(v27 + 16), *(google::protobuf::Arena ***)(v27 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v28 = *(std::string **)(v27 + 16);
        }
        std::string::operator=(v28, &__p);
        v29 = (*(uint64_t (**)(_DWORD *, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v47 + 88))(v47, a2);
        if (v29)
          google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry((uint64_t)&v43);
        if (!(*(uint64_t (**)(_DWORD *))(*(_QWORD *)v47 + 40))(v47))
          goto LABEL_64;
        goto LABEL_46;
      }
LABEL_50:
      v30 = 0;
      v12 = 6;
LABEL_75:
      if (v47)
        (*(void (**)(_DWORD *, __n128))(*(_QWORD *)v47 + 8))(v47, v15);
      goto LABEL_77;
    }
LABEL_12:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3))return 0;
LABEL_17:
    v12 = 0;
LABEL_18:
    if (v12)
      return 0;
  }
}

void sub_1D3B3C064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19)
{
  if (a19)
    (*(void (**)(uint64_t))(*(_QWORD *)a19 + 8))(a19);
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToInt64Map::ByteSizeLong(CoreML::Specification::StringToInt64Map *this)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v8[3];

  v2 = (_QWORD *)*((_QWORD *)this + 5);
  v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  v4 = 0;
  while (v8[0])
  {
    v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*((_QWORD *)v8[0] + 3), *((_QWORD *)v8[0] + 3) + 24, *((google::protobuf::Arena **)this + 2));
    if (v4 != (_DWORD *)v5)
    {
      if (v4)
        (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
      v4 = (_DWORD *)v5;
    }
    v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v8);
  }
  if (v4)
    (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1D3B3C160(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *CoreML::Specification::StringToInt64Map::SerializeWithCachedSizes(_QWORD *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  google::protobuf::io::CodedOutputStream *v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  unsigned __int8 *v24[3];

  v3 = (unint64_t *)this[5];
  v4 = *v3;
  if (!*v3)
    return this;
  v5 = (uint64_t)this;
  if (*((_BYTE *)a2 + 26))
  {
    if (v4 >= 2 && *((_BYTE *)a2 + 27) != 0)
    {
LABEL_24:
      v13 = operator new[]();
      google::protobuf::Map<std::string,std::string>::begin(v24, *(_QWORD **)(v5 + 40));
      v14 = v24[0];
      if (v24[0])
      {
        v15 = 0;
        do
        {
          *(_QWORD *)(v13 + 8 * v15) = *((_QWORD *)v14 + 3);
          google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v24);
          ++v15;
          v14 = v24[0];
        }
        while (v24[0]);
      }
      else
      {
        v15 = 0;
      }
      v16 = 126 - 2 * __clz(v15);
      if (v15)
        v17 = v16;
      else
        v17 = 0;
      std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(v13, (char *)(v13 + 8 * v15), v17, 1);
      if (v15)
      {
        v18 = 0;
        v19 = 0;
        do
        {
          v21 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*(_QWORD *)(v13 + 8 * v18), *(_QWORD *)(v13 + 8 * v18) + 24, *(google::protobuf::Arena **)(v5 + 16));
          if (v19 != v21)
          {
            if (v19)
              (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            v19 = v21;
          }
          google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v19, a2, v20);
          v22 = *(unsigned int **)(v13 + 8 * v18);
          if (*((char *)v22 + 23) < 0)
          {
            v22 = *(unsigned int **)v22;
            v23 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * v18) + 8);
          }
          else
          {
            LODWORD(v23) = *((unsigned __int8 *)v22 + 23);
          }
          google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v23, 1, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
          ++v18;
        }
        while (v15 != v18);
        (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
      }
      return (_QWORD *)MEMORY[0x1D8251A28](v13, 0x60C8044C4A2DFLL);
    }
  }
  else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
  {
    goto LABEL_24;
  }
  this = google::protobuf::Map<std::string,std::string>::begin(v24, v3);
  v7 = 0;
  while (v24[0])
  {
    v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(*((_QWORD *)v24[0] + 3), *((_QWORD *)v24[0] + 3) + 24, *(google::protobuf::Arena **)(v5 + 16));
    if (v7 != v9)
    {
      if (v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      v7 = v9;
    }
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
    v10 = (unsigned int *)*((_QWORD *)v24[0] + 3);
    if (*((char *)v10 + 23) < 0)
    {
      v10 = *(unsigned int **)v10;
      v11 = *(_QWORD *)(*((_QWORD *)v24[0] + 3) + 8);
    }
    else
    {
      LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.StringToInt64Map.MapEntry.key");
    this = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v24);
  }
  if (v7)
    return (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  return this;
}

void sub_1D3B3C3DC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  MEMORY[0x1D8251A28](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StringToInt64Map::GetCachedSize(CoreML::Specification::StringToInt64Map *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  BOOL v28;
  BOOL v29;
  _QWORD *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  char *v42;
  BOOL v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  int64_t v51;
  int64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  _BOOL4 v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  _QWORD *v81;
  _QWORD *v82;
  char *v83;
  BOOL v84;
  _QWORD *v85;
  _QWORD *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  _QWORD *v93;
  char *v94;
  int64_t v95;
  uint64_t v96;
  char *v97;

  v6 = (char *)result;
LABEL_2:
  v94 = a2 - 8;
  v90 = a2 - 24;
  v91 = a2 - 16;
  v7 = v6;
  while (2)
  {
    v8 = v7;
    v9 = a2 - v7;
    v10 = (a2 - v7) >> 3;
    switch(v10)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v40 = *(_QWORD **)v94;
        v41 = *(_QWORD **)v7;
        result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v94, *(_QWORD **)v7);
        if ((_DWORD)result)
        {
          *(_QWORD *)v7 = v40;
          *(_QWORD *)v94 = v41;
        }
        return result;
      case 3:
        return std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v7 + 1, (_QWORD **)v94);
      case 4:
        return std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v7 + 1, (_QWORD **)v7 + 2, (_QWORD **)v94);
      case 5:
        return std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v7 + 1, (_QWORD **)v7 + 2, (_QWORD **)v7 + 3, (_QWORD **)v94);
      default:
        if (v9 <= 191)
        {
          v42 = v7 + 8;
          v44 = v7 == a2 || v42 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v44)
            {
              v45 = 0;
              v46 = v7;
              do
              {
                v48 = *(_QWORD **)v46;
                v47 = (_QWORD *)*((_QWORD *)v46 + 1);
                v46 = v42;
                result = std::less<std::string>::operator()[abi:ne180100](v47, v48);
                if ((_DWORD)result)
                {
                  v49 = v45;
                  while (1)
                  {
                    *(_QWORD *)&v7[v49 + 8] = v48;
                    if (!v49)
                      break;
                    v48 = *(_QWORD **)&v7[v49 - 8];
                    result = std::less<std::string>::operator()[abi:ne180100](v47, v48);
                    v49 -= 8;
                    if ((result & 1) == 0)
                    {
                      v50 = &v7[v49 + 8];
                      goto LABEL_73;
                    }
                  }
                  v50 = v7;
LABEL_73:
                  *(_QWORD *)v50 = v47;
                }
                v42 = v46 + 8;
                v45 += 8;
              }
              while (v46 + 8 != a2);
            }
          }
          else if (!v44)
          {
            do
            {
              v86 = *(_QWORD **)v8;
              v85 = (_QWORD *)*((_QWORD *)v8 + 1);
              v8 = v42;
              result = std::less<std::string>::operator()[abi:ne180100](v85, v86);
              if ((_DWORD)result)
              {
                v87 = v8;
                do
                {
                  *(_QWORD *)v87 = v86;
                  v86 = (_QWORD *)*((_QWORD *)v87 - 2);
                  result = std::less<std::string>::operator()[abi:ne180100](v85, v86);
                  v87 -= 8;
                }
                while ((result & 1) != 0);
                *(_QWORD *)v87 = v85;
              }
              v42 = v8 + 8;
            }
            while (v8 + 8 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v7 != a2)
          {
            v97 = v7;
            v51 = (unint64_t)(v10 - 2) >> 1;
            v52 = v51;
            v88 = a2;
            v89 = a2 - v7;
            do
            {
              v53 = v52;
              if (v9 >= 16 && v51 >= v52)
              {
                v54 = (2 * v52) | 1;
                v55 = &v97[8 * v54];
                v56 = 2 * v52 + 2;
                v95 = v52;
                if (v56 >= v10)
                {
                  v58 = *(_QWORD **)v55;
                }
                else
                {
                  v57 = *(_QWORD **)v55;
                  v58 = (_QWORD *)*((_QWORD *)v55 + 1);
                  v59 = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v55, v58);
                  if (v59)
                    v55 += 8;
                  else
                    v58 = v57;
                  if (v59)
                    v54 = v56;
                }
                v60 = &v97[8 * v53];
                v61 = *(_QWORD **)v60;
                result = std::less<std::string>::operator()[abi:ne180100](v58, *(_QWORD **)v60);
                v9 = v89;
                if ((result & 1) == 0)
                {
                  do
                  {
                    v62 = v55;
                    *(_QWORD *)v60 = v58;
                    if (v51 < v54)
                      break;
                    v63 = (2 * v54) | 1;
                    v55 = &v97[8 * v63];
                    v64 = 2 * v54 + 2;
                    if (v64 >= v10)
                    {
                      v58 = *(_QWORD **)v55;
                      v54 = (2 * v54) | 1;
                    }
                    else
                    {
                      v58 = *(_QWORD **)v55;
                      v65 = (_QWORD *)*((_QWORD *)v55 + 1);
                      if (std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v55, v65))
                      {
                        v58 = v65;
                        v55 += 8;
                        v54 = v64;
                      }
                      else
                      {
                        v54 = v63;
                      }
                    }
                    result = std::less<std::string>::operator()[abi:ne180100](v58, v61);
                    v60 = v62;
                  }
                  while (!(_DWORD)result);
                  *(_QWORD *)v62 = v61;
                  a2 = v88;
                  v9 = v89;
                  v53 = v95;
                }
              }
              v52 = v53 - 1;
            }
            while (v53);
            v66 = (unint64_t)v9 >> 3;
            v67 = v97;
            do
            {
              v68 = a2;
              v69 = 0;
              v70 = v66 - 2;
              v93 = *(_QWORD **)v67;
              if (v66 < 2)
                v70 = v66 - 1;
              v71 = v70 >> 1;
              do
              {
                v72 = &v67[8 * v69 + 8];
                v73 = (2 * v69) | 1;
                v74 = 2 * v69 + 2;
                if (v74 >= v66)
                {
                  v77 = *(_QWORD **)v72;
                  v69 = (2 * v69) | 1;
                }
                else
                {
                  v75 = *(_QWORD **)v72;
                  v76 = *(_QWORD **)&v67[8 * v69 + 16];
                  result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v72, v76);
                  if ((_DWORD)result)
                    v77 = v76;
                  else
                    v77 = v75;
                  if ((_DWORD)result)
                  {
                    v72 += 8;
                    v69 = v74;
                  }
                  else
                  {
                    v69 = v73;
                  }
                }
                *(_QWORD *)v67 = v77;
                v67 = v72;
              }
              while (v69 <= v71);
              a2 = v68 - 8;
              if (v72 == v68 - 8)
              {
                *(_QWORD *)v72 = v93;
              }
              else
              {
                *(_QWORD *)v72 = *(_QWORD *)a2;
                *(_QWORD *)a2 = v93;
                v78 = v72 - v97 + 8;
                if (v78 >= 9)
                {
                  v79 = (unint64_t)((v78 >> 3) - 2) >> 1;
                  v80 = &v97[8 * v79];
                  v81 = *(_QWORD **)v80;
                  v82 = *(_QWORD **)v72;
                  result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v80, *(_QWORD **)v72);
                  if ((_DWORD)result)
                  {
                    do
                    {
                      v83 = v80;
                      *(_QWORD *)v72 = v81;
                      if (!v79)
                        break;
                      v79 = (v79 - 1) >> 1;
                      v80 = &v97[8 * v79];
                      v81 = *(_QWORD **)v80;
                      result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v80, v82);
                      v72 = v83;
                    }
                    while ((result & 1) != 0);
                    *(_QWORD *)v83 = v82;
                  }
                }
              }
              v84 = v66-- <= 2;
              v67 = v97;
            }
            while (!v84);
          }
          return result;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &v7[8 * ((unint64_t)v10 >> 1)];
        if ((unint64_t)v9 < 0x401)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v12, (_QWORD **)v7, (_QWORD **)v94);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v12, (_QWORD **)v94);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7 + 1, (_QWORD **)v12 - 1, (_QWORD **)v91);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7 + 2, (_QWORD **)&v7[8 * v11 + 8], (_QWORD **)v90);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v12 - 1, (_QWORD **)v12, (_QWORD **)&v7[8 * v11 + 8]);
          v13 = *(_QWORD **)v7;
          *(_QWORD *)v7 = *(_QWORD *)v12;
          *(_QWORD *)v12 = v13;
        }
        --a3;
        v14 = *(_QWORD **)v7;
        v15 = v7;
        if ((a4 & 1) == 0)
        {
          v15 = v7;
          if (!std::less<std::string>::operator()[abi:ne180100](*((_QWORD **)v7 - 1), *(_QWORD **)v7))
          {
            result = std::less<std::string>::operator()[abi:ne180100](v14, *(_QWORD **)v94);
            if ((result & 1) != 0)
            {
              do
              {
                v30 = (_QWORD *)*((_QWORD *)v7 + 1);
                v7 += 8;
                result = std::less<std::string>::operator()[abi:ne180100](v14, v30);
              }
              while ((result & 1) == 0);
            }
            else
            {
              v31 = v7 + 8;
              do
              {
                v7 = v31;
                if (v31 >= a2)
                  break;
                v31 += 8;
                result = std::less<std::string>::operator()[abi:ne180100](v14, *(_QWORD **)v7);
              }
              while (!(_DWORD)result);
            }
            v32 = a2;
            if (v7 < a2)
            {
              v32 = a2;
              do
              {
                v33 = (_QWORD *)*((_QWORD *)v32 - 1);
                v32 -= 8;
                result = std::less<std::string>::operator()[abi:ne180100](v14, v33);
              }
              while ((result & 1) != 0);
            }
            v34 = a2;
            if (v7 < v32)
            {
              v35 = *(_QWORD **)v7;
              v36 = *(_QWORD **)v32;
              do
              {
                *(_QWORD *)v7 = v36;
                *(_QWORD *)v32 = v35;
                do
                {
                  v37 = (_QWORD *)*((_QWORD *)v7 + 1);
                  v7 += 8;
                  v35 = v37;
                }
                while (!std::less<std::string>::operator()[abi:ne180100](v14, v37));
                do
                {
                  v38 = (_QWORD *)*((_QWORD *)v32 - 1);
                  v32 -= 8;
                  v36 = v38;
                  result = std::less<std::string>::operator()[abi:ne180100](v14, v38);
                }
                while ((result & 1) != 0);
              }
              while (v7 < v32);
            }
            v39 = v7 - 8;
            a2 = v34;
            if (v7 - 8 != v8)
              *(_QWORD *)v8 = *(_QWORD *)v39;
            a4 = 0;
            *(_QWORD *)v39 = v14;
            continue;
          }
        }
        do
        {
          v16 = v15;
          v18 = (_QWORD *)*((_QWORD *)v15 + 1);
          v15 += 8;
          v17 = v18;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v18, v14));
        v96 = a3;
        v19 = a2;
        if (v16 == v8)
        {
          v19 = a2;
          do
          {
            if (v15 >= v19)
              break;
            v21 = (_QWORD *)*((_QWORD *)v19 - 1);
            v19 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v21, v14));
        }
        else
        {
          do
          {
            v20 = (_QWORD *)*((_QWORD *)v19 - 1);
            v19 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v20, v14));
        }
        v6 = v8;
        v22 = a2;
        if (v15 < v19)
        {
          v23 = *(_QWORD **)v19;
          v24 = v15;
          v25 = v19;
          do
          {
            *(_QWORD *)v24 = v23;
            *(_QWORD *)v25 = v17;
            do
            {
              v16 = v24;
              v26 = (_QWORD *)*((_QWORD *)v24 + 1);
              v24 += 8;
              v17 = v26;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v26, v14));
            do
            {
              v27 = (_QWORD *)*((_QWORD *)v25 - 1);
              v25 -= 8;
              v23 = v27;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v27, v14));
          }
          while (v24 < v25);
        }
        if (v16 != v6)
          *(_QWORD *)v6 = *(_QWORD *)v16;
        *(_QWORD *)v16 = v14;
        v28 = v15 >= v19;
        a2 = v22;
        a3 = v96;
        if (!v28)
        {
LABEL_30:
          result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**,false>(v6, v16, v96, a4 & 1);
          a4 = 0;
          v7 = v16 + 8;
          continue;
        }
        v29 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>((_QWORD **)v6, (_QWORD **)v16);
        v7 = v16 + 8;
        result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>((_QWORD **)v16 + 1, (_QWORD **)v22);
        if (!(_DWORD)result)
        {
          if (v29)
            continue;
          goto LABEL_30;
        }
        a2 = v16;
        if (!v29)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Wrap(uint64_t a1, uint64_t a2, google::protobuf::Arena *a3)
{
  uint64_t result;

  if (a3)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)result = &off_1E9567010;
  *(_QWORD *)(result + 48) = a1;
  *(_QWORD *)(result + 56) = a2;
  *(_DWORD *)(result + 40) = 3;
  return result;
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E95670B8;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E95670B8;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1D3BDFB5D);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::New(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E9567940;
  *(_QWORD *)(result + 8) = v3;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  uint64_t result;

  if (a2)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a2;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E9567940;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 8) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetArena(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Clear(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::IsInitialized()
{
  return 1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2;
  std::string **v5;
  const std::string *v6;

  v2 = a2[10];
  if (v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (std::string **)(a1 + 16);
      if (*(uint64_t **)(a1 + 16) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 16), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 16), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)v6);
      else
        std::string::operator=(*v5, v6);
      *(_DWORD *)(a1 + 40) |= 1u;
      v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 144))(a2);
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  unint64_t TagFallback;
  std::string *v8;
  _BOOL8 result;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  unint64_t Varint64Fallback;
  unsigned __int8 *v16;
  char v17;

  v5 = (google::protobuf::Arena **)(a1 + 16);
  do
  {
    while (1)
    {
      v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        TagFallback = *v6;
        if ((*v6 & 0x80000000) == 0)
        {
          *a2 = v6 + 1;
          goto LABEL_7;
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_7:
      if ((_DWORD)TagFallback != 10)
        break;
      *(_DWORD *)(a1 + 40) |= 1u;
      v8 = *(std::string **)(a1 + 16);
      if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v8 = *(std::string **)(a1 + 16);
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v8);
      if (!result)
        return result;
      v10 = *(_DWORD *)(a1 + 40) | 1;
      *(_DWORD *)(a1 + 40) = v10;
      v12 = *a2;
      v11 = (unint64_t)a2[1];
      if ((unint64_t)*a2 < v11 && *v12 == 16)
      {
        v13 = v12 + 1;
        *a2 = v13;
LABEL_20:
        v14 = v10 | 2;
        *(_DWORD *)(a1 + 40) = v14;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v17 & 1) == 0)
            return 0;
          v14 = *(_DWORD *)(a1 + 40);
          v16 = (unsigned __int8 *)*a2;
          v11 = (unint64_t)a2[1];
        }
        else
        {
          Varint64Fallback = *v13;
          v16 = (unsigned __int8 *)(v13 + 1);
          *a2 = (char *)v16;
        }
        *(_QWORD *)(a1 + 24) = Varint64Fallback;
        *(_DWORD *)(a1 + 40) = v14 | 2;
        if (v16 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if ((_DWORD)TagFallback == 16)
    {
      v10 = *(_DWORD *)(a1 + 40);
      v13 = *a2;
      v11 = (unint64_t)a2[1];
      goto LABEL_20;
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::ByteSizeLong(_DWORD *a1)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v5 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1);
    v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0)
      v6 = *(_DWORD *)(v5 + 8);
    v3 = (int)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    return v4 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  v4 = ((9 * (__clz(*(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1) | 1) ^ 0x3F) + 73) >> 6)
     + 1;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  unint64_t *v5;
  google::protobuf::io::CodedOutputStream *v6;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  v5 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteInt64(2, *v5, a2, v6);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::GetCachedSize(_DWORD *a1)
{
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  int v6;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v5 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1);
    v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0)
      v6 = *(_DWORD *)(v5 + 8);
    v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    return v4 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  v4 = ((9 * (__clz(*(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1) | 1) ^ 0x3F) + 73) >> 6)
     + 1;
  return v4 + v3;
}

_BYTE *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  const void **v5;
  char *v6;
  unint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  unint64_t v10;

  v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  *a3 = 10;
  v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  v7 = *(_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  *v6 = 16;
  v8 = v6 + 1;
  if (v7 < 0x80)
  {
    LOBYTE(v9) = v7;
  }
  else
  {
    do
    {
      *v8++ = v7 | 0x80;
      v9 = v7 >> 7;
      v10 = v7 >> 14;
      v7 >>= 7;
    }
    while (v10);
  }
  *v8 = v9;
  return v8 + 1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

_QWORD *google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E95670B8;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  return a1;
}

void google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E95670B8;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  JUMPOUT(0x1D8251A40);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::value(uint64_t a1)
{
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  if (!*(_QWORD *)(a1 + 8))
  {
    v3 = 3;
    v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1 + 24;
}

void sub_1D3B3D3E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E95670B8;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E95670B8;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  JUMPOUT(0x1D8251A40);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,long long> const*> &,google::protobuf::MapPair<std::string,long long> const**>(_QWORD **a1, _QWORD **a2)
{
  uint64_t v4;
  _BOOL8 result;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD **v8;
  _QWORD **v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _QWORD *v17;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 24;
      break;
  }
  while (1)
  {
    v12 = *v9;
    v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      v14 = v11;
      while (1)
      {
        *(_QWORD **)((char *)a1 + v14) = v13;
        v15 = v14 - 8;
        if (v14 == 8)
          break;
        v13 = *(_QWORD **)((char *)a1 + v14 - 16);
        v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        v14 = v15;
        if (!v16)
        {
          v17 = (_QWORD **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      v17 = a1;
LABEL_12:
      *v17 = v12;
      if (++v10 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v11 += 8;
    if (++v9 == a2)
      return 1;
  }
}

google::protobuf::Arena **google::protobuf::Map<std::string,long long>::operator[](uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  google::protobuf::Arena *v12;
  std::string *Aligned;
  std::string::__raw *v14;
  __int128 v15;
  google::protobuf::Arena **v16;
  google::protobuf::Arena *v17;
  std::string *v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  std::string __p;
  std::string::size_type v24;
  uint64_t v25[4];
  _QWORD v26[4];

  v4 = *(_QWORD **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  v6 = v26[0];
  if (v26[0])
    goto LABEL_18;
  v7 = v4[1];
  v8 = *v4 + 1;
  v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      v20 = 2 * v7;
LABEL_37:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    v21 = 0;
    v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7)
      goto LABEL_37;
  }
  v11 = v26[3];
LABEL_11:
  v12 = (google::protobuf::Arena *)v4[5];
  if (v12)
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E0DE4EE8], 40);
  else
    Aligned = (std::string *)operator new(0x28uLL);
  v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (*(_QWORD *)a1)
    {
      v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E0DE4EE8], 32);
      v17 = *(google::protobuf::Arena **)a1;
      v16[1] = 0;
      v16[2] = 0;
      *v16 = 0;
      google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
      v16[3] = 0;
      std::string::operator=((std::string *)v16, (const std::string *)a2);
    }
    else
    {
      v18 = (std::string *)operator new();
      v16 = (google::protobuf::Arena **)v18;
      if (*(char *)(a2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v18, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
      }
      else
      {
        *(_OWORD *)&v18->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
        v18->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
      }
      v16[3] = 0;
    }
    *(_QWORD *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1D3B3D874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  MEMORY[0x1D8251A40](v14, 0x1012C4092066FB6);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,long long>::erase(_QWORD *a1, unsigned __int8 *a2)
{
  double result;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  result = *(double *)&v6;
  if ((_QWORD)v6)
  {
    v4 = v6;
    v5 = v7;
    *(_QWORD *)&result = google::protobuf::Map<std::string,long long>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::NewEntry(google::protobuf::Arena *a1)
{
  uint64_t result;

  if (a1)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a1;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E9567940;
  return result;
}

google::protobuf::Arena **google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::MessageLite,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,std::string,long long,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)3,0>,google::protobuf::Map<std::string,long long>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  const std::string *v2;
  google::protobuf::Arena **result;
  uint64_t v4;

  v2 = (const std::string *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 48) + 136))(*(_QWORD *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  result = google::protobuf::Map<std::string,long long>::operator[](*(_QWORD *)(a1 + 8), a1 + 16);
  *(_QWORD *)(a1 + 40) = result;
  v4 = *(_QWORD *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  *result = *(google::protobuf::Arena **)(v4 + 24);
  return result;
}

__n128 google::protobuf::Map<std::string,long long>::erase(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  _BOOL4 v17;
  unint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __n128 result;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  _QWORD *v29;

  v6 = *a3;
  if (!*a2)
  {
    v7 = *(_QWORD *)(v6 + 24);
    if (v7)
    {
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      MEMORY[0x1D8251A40](v7, 0x1012C4092066FB6);
      v6 = *a3;
    }
  }
  v27 = *(__n128 *)a3;
  v28 = a3[2];
  v8 = *(_QWORD *)(v6 + 32);
  if (v8)
    goto LABEL_7;
  v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    v9 = a3[2] + 1;
  }
  else
  {
    v10 = a3[2];
    v11 = *(_QWORD *)(*(_QWORD *)(a3[1] + 32) + 8 * v10);
    v12 = (uint64_t)v29;
    v13 = (_QWORD *)v29[1];
    if (v13)
    {
      do
      {
        v14 = v13;
        v13 = (_QWORD *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        v14 = *(_QWORD **)(v12 + 16);
        v15 = *v14 == v12;
        v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    v29 = v14;
    if (v14 != (_QWORD *)(v11 + 8))
    {
      v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  v16 = (_QWORD *)a2[2];
  v29 = 0;
  v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  v18 = v28;
  v19 = (void **)v27.n128_u64[0];
  v20 = v16[4];
  v21 = *(_QWORD *)(v20 + 8 * v28);
  if (v17)
  {
    v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(_QWORD *)(v20 + 8 * v28));
LABEL_25:
    *(_QWORD *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (_QWORD *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23)
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  if (!*(_QWORD *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (_QWORD **)v21);
    v22 = 0;
    *(_QWORD *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    v25 = v16[1];
    if (v18 < v25)
    {
      v26 = v16[4];
      do
      {
        if (*(_QWORD *)(v26 + 8 * v18))
          break;
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 16) = a3[2];
  return result;
}

void *CoreML::Specification::StringToInt64Map::MergeFrom(CoreML::Specification::StringToInt64Map *this, const CoreML::Specification::StringToInt64Map *a2)
{
  uint64_t v4;
  void *result;
  unsigned __int8 *v6;
  char *v7;
  uint64_t v8;
  google::protobuf::Arena *v9;
  unsigned __int8 *v10[3];

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  result = google::protobuf::Map<std::string,std::string>::begin(v10, *((_QWORD **)a2 + 5));
  v6 = v10[0];
  if (v10[0])
  {
    v7 = (char *)this + 24;
    do
    {
      v8 = *((_QWORD *)v6 + 3);
      v9 = *(google::protobuf::Arena **)(v8 + 24);
      *google::protobuf::Map<std::string,long long>::operator[]((uint64_t)v7, v8) = v9;
      result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v10);
      v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

void google::protobuf::Map<std::string,long long>::clear(_QWORD *a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];
  _QWORD v8[3];

  v1 = (_QWORD *)a1[2];
  v2 = v1[3];
  v3 = v1[1];
  if (v3 > v2)
  {
    v5 = v1[4];
    while (1)
    {
      v6 = *(_QWORD *)(v5 + 8 * v2);
      if (v6)
        break;
      if (v3 == ++v2)
        return;
    }
    if (v6 != *(_QWORD *)(v5 + 8 * (v2 ^ 1)) || (v6 = *(_QWORD *)(*(_QWORD *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<std::string,long long>::erase((uint64_t)v8, a1, v7);
        v6 = v8[0];
        v1 = (_QWORD *)v8[1];
        v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

CoreML::Specification::StringToInt64Map *CoreML::Specification::StringToInt64Map::StringToInt64Map(CoreML::Specification::StringToInt64Map *this)
{
  _QWORD *v2;
  CoreML::Specification::protobuf_DataStructures_2eproto *v3;

  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955D5E0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  v2 = (_QWORD *)operator new();
  v3 = (CoreML::Specification::protobuf_DataStructures_2eproto *)google::protobuf::Map<std::string,long long>::InnerMap::InnerMap(v2, 0);
  *((_QWORD *)this + 5) = v2;
  *((_DWORD *)this + 8) = 0;
  if (this != (CoreML::Specification::StringToInt64Map *)&CoreML::Specification::_StringToInt64Map_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v3);
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B3DD9C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::Map<std::string,long long>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringToInt64Map>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToInt64Map>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToInt64Map>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(CoreML::Specification::protobuf_DataStructures_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_DataStructures_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

_QWORD *google::protobuf::Map<std::string,long long>::~Map(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  google::protobuf::Map<std::string,long long>::clear(a1);
  if (!*a1)
  {
    v2 = a1[2];
    if (v2)
    {
      v3 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::~InnerMap(v2);
      MEMORY[0x1D8251A40](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

double CoreML::Specification::protobuf_DataStructures_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_DataStructures_2eproto::TableStruct *this)
{
  unint64_t *inited;
  double result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
  qword_1EDB92C00 = 0;
  unk_1EDB92C08 = 0;
  qword_1EDB92BF0 = 0;
  unk_1EDB92BF8 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB92C10 = 0;
  CoreML::Specification::_StringToInt64Map_MapEntry_default_instance_ = (uint64_t)&off_1E9567940;
  byte_1EDB92C18 = 1;
  *((_BYTE *)CoreML::Specification::StringToInt64Map::StringToInt64Map((CoreML::Specification::StringToInt64Map *)&CoreML::Specification::_StringToInt64Map_default_instance_)
  + 56) = 1;
  qword_1EDB92990 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB92998 = 0;
  qword_1EDB92980 = 0;
  unk_1EDB92988 = 0;
  dword_1EDB929A0 = 0;
  CoreML::Specification::_Int64ToStringMap_MapEntry_default_instance_ = (uint64_t)&off_1E95679E8;
  byte_1EDB929A8 = 1;
  *((_BYTE *)CoreML::Specification::Int64ToStringMap::Int64ToStringMap((CoreML::Specification::Int64ToStringMap *)&CoreML::Specification::_Int64ToStringMap_default_instance_)
  + 56) = 1;
  qword_1EDB92E30 = 0;
  unk_1EDB92E38 = 0;
  qword_1EDB92E20 = 0;
  unk_1EDB92E28 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB92E40 = 0;
  CoreML::Specification::_StringToDoubleMap_MapEntry_default_instance_ = (uint64_t)&off_1E9567898;
  byte_1EDB92E48 = 1;
  *((_BYTE *)CoreML::Specification::StringToDoubleMap::StringToDoubleMap((CoreML::Specification::StringToDoubleMap *)&CoreML::Specification::_StringToDoubleMap_default_instance_)
  + 56) = 1;
  *(_OWORD *)&qword_1EDB92948 = 0u;
  unk_1EDB92958 = 0u;
  dword_1EDB92968 = 0;
  CoreML::Specification::_Int64ToDoubleMap_MapEntry_default_instance_ = (uint64_t)&off_1E9567A90;
  byte_1EDB92970 = 1;
  *((_BYTE *)CoreML::Specification::Int64ToDoubleMap::Int64ToDoubleMap((CoreML::Specification::Int64ToDoubleMap *)&CoreML::Specification::_Int64ToDoubleMap_default_instance_)
  + 56) = 1;
  CoreML::Specification::_StringVector_default_instance_ = (uint64_t)&off_1E955AF48;
  result = 0.0;
  unk_1EDB8FB18 = 0u;
  unk_1EDB8FB28 = 0u;
  dword_1EDB8FB38 = 0;
  byte_1EDB8FB40 = 1;
  CoreML::Specification::_Int64Vector_default_instance_ = (uint64_t)&off_1E955A238;
  *(_QWORD *)algn_1EDB8F918 = 0;
  qword_1EDB8F920 = 0;
  unk_1EDB8F928 = 0;
  dword_1EDB8F934 = 0;
  byte_1EDB8F938 = 1;
  CoreML::Specification::_FloatVector_default_instance_ = (uint64_t)&off_1E955A1A0;
  *(_QWORD *)algn_1EDB8F8E8 = 0;
  qword_1EDB8F8F0 = 0;
  unk_1EDB8F8F8 = 0;
  dword_1EDB8F904 = 0;
  byte_1EDB8F908 = 1;
  CoreML::Specification::_DoubleVector_default_instance_ = (uint64_t)&off_1E955ABB8;
  *(_QWORD *)algn_1EDB8F9E8 = 0;
  qword_1EDB8F9F0 = 0;
  unk_1EDB8F9F8 = 0;
  dword_1EDB8FA04 = 0;
  byte_1EDB8FA08 = 1;
  dword_1EDB8F780 = 0;
  CoreML::Specification::_Int64Range_default_instance_ = (uint64_t)&off_1E9559C48;
  *(_QWORD *)algn_1EDB8F768 = 0;
  qword_1EDB8F770 = 0;
  unk_1EDB8F778 = 0;
  byte_1EDB8F788 = 1;
  CoreML::Specification::_Int64Set_default_instance_ = (uint64_t)&off_1E9565FA0;
  *(_QWORD *)algn_1EDB8F648 = 0;
  qword_1EDB8F650 = 0;
  unk_1EDB8F658 = 0;
  dword_1EDB8F664 = 0;
  byte_1EDB8F668 = 1;
  CoreML::Specification::_DoubleRange_default_instance_ = (uint64_t)&off_1E955A070;
  *(_QWORD *)algn_1EDB8F8B8 = 0;
  dword_1EDB8F8D0 = 0;
  qword_1EDB8F8C0 = 0;
  unk_1EDB8F8C8 = 0;
  byte_1EDB8F8D8 = 1;
  qword_1EDB92BF0 = (uint64_t)&CoreML::Specification::_StringToInt64Map_MapEntry_default_instance_;
  qword_1EDB92980 = (uint64_t)&CoreML::Specification::_Int64ToStringMap_MapEntry_default_instance_;
  qword_1EDB92E20 = (uint64_t)&CoreML::Specification::_StringToDoubleMap_MapEntry_default_instance_;
  qword_1EDB92948 = (uint64_t)&CoreML::Specification::_Int64ToDoubleMap_MapEntry_default_instance_;
  return result;
}

CoreML::Specification::Int64ToStringMap *CoreML::Specification::Int64ToStringMap::Int64ToStringMap(CoreML::Specification::Int64ToStringMap *this)
{
  _QWORD *v2;
  CoreML::Specification::protobuf_DataStructures_2eproto *v3;

  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955D120;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  v2 = (_QWORD *)operator new();
  v3 = (CoreML::Specification::protobuf_DataStructures_2eproto *)google::protobuf::Map<long long,std::string>::InnerMap::InnerMap(v2, 0);
  *((_QWORD *)this + 5) = v2;
  *((_DWORD *)this + 8) = 0;
  if (this != (CoreML::Specification::Int64ToStringMap *)&CoreML::Specification::_Int64ToStringMap_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v3);
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B3E17C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::Map<long long,std::string>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::StringToDoubleMap *CoreML::Specification::StringToDoubleMap::StringToDoubleMap(CoreML::Specification::StringToDoubleMap *this)
{
  _QWORD *v2;
  CoreML::Specification::protobuf_DataStructures_2eproto *v3;

  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955DFF8;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  v2 = (_QWORD *)operator new();
  v3 = (CoreML::Specification::protobuf_DataStructures_2eproto *)google::protobuf::Map<std::string,double>::InnerMap::InnerMap(v2, 0);
  *((_QWORD *)this + 5) = v2;
  *((_DWORD *)this + 8) = 0;
  if (this != (CoreML::Specification::StringToDoubleMap *)&CoreML::Specification::_StringToDoubleMap_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v3);
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B3E250(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::Map<std::string,long long>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64ToDoubleMap *CoreML::Specification::Int64ToDoubleMap::Int64ToDoubleMap(CoreML::Specification::Int64ToDoubleMap *this)
{
  _QWORD *v2;
  CoreML::Specification::protobuf_DataStructures_2eproto *v3;

  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955D088;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 8) = 0;
  v2 = (_QWORD *)operator new();
  v3 = (CoreML::Specification::protobuf_DataStructures_2eproto *)google::protobuf::Map<long long,double>::InnerMap::InnerMap(v2, 0);
  *((_QWORD *)this + 5) = v2;
  *((_DWORD *)this + 8) = 0;
  if (this != (CoreML::Specification::Int64ToDoubleMap *)&CoreML::Specification::_Int64ToDoubleMap_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v3);
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B3E324(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::Map<long long,double>::~Map(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::PrecisionRecallCurve::~PrecisionRecallCurve(CoreML::Specification::PrecisionRecallCurve *this)
{
  CoreML::Specification::PrecisionRecallCurve::~PrecisionRecallCurve(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_1E955F850;
  if (this != (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 5);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::PrecisionRecallCurve::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.PrecisionRecallCurve");
}

CoreML::Specification::PrecisionRecallCurve *CoreML::Specification::PrecisionRecallCurve::New(CoreML::Specification::PrecisionRecallCurve *this)
{
  return CoreML::Specification::PrecisionRecallCurve::New(this, 0);
}

CoreML::Specification::PrecisionRecallCurve *CoreML::Specification::PrecisionRecallCurve::New(CoreML::Specification::PrecisionRecallCurve *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::PrecisionRecallCurve *v3;

  v3 = (CoreML::Specification::PrecisionRecallCurve *)operator new();
  CoreML::Specification::PrecisionRecallCurve::PrecisionRecallCurve(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::PrecisionRecallCurve>(a2, v3);
  return v3;
}

void sub_1D3B3E3F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40668C0A6DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PrecisionRecallCurve::Clear(CoreML::Specification::PrecisionRecallCurve *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = *((_QWORD *)this + 2);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  *((_QWORD *)this + 2) = 0;
  v3 = *((_QWORD *)this + 3);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *((_QWORD *)this + 3) = 0;
  v4 = *((_QWORD *)this + 4);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  *((_QWORD *)this + 4) = 0;
  result = *((_QWORD *)this + 5);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreML::Specification::PrecisionRecallCurve::IsInitialized(CoreML::Specification::PrecisionRecallCurve *this)
{
  return 1;
}

BOOL CoreML::Specification::PrecisionRecallCurve::MergePartialFromCodedStream(CoreML::Specification::PrecisionRecallCurve *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::FloatVector *v9;
  char *v10;
  int VarintSizeAsIntFallback;
  int v13;
  unsigned int v14;
  int v15;
  BOOL v16;
  int v17;
  _BOOL8 result;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_23;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10)
            goto LABEL_23;
          v9 = (CoreML::Specification::FloatVector *)*((_QWORD *)this + 2);
          if (!v9)
          {
            v9 = (CoreML::Specification::FloatVector *)operator new();
            CoreML::Specification::FloatVector::FloatVector(v9);
            *((_QWORD *)this + 2) = v9;
          }
          break;
        case 2u:
          if (v7 != 18)
            goto LABEL_23;
          v9 = (CoreML::Specification::FloatVector *)*((_QWORD *)this + 3);
          if (!v9)
          {
            v9 = (CoreML::Specification::FloatVector *)operator new();
            CoreML::Specification::FloatVector::FloatVector(v9);
            *((_QWORD *)this + 3) = v9;
          }
          break;
        case 3u:
          if (v7 != 26)
            goto LABEL_23;
          v9 = (CoreML::Specification::FloatVector *)*((_QWORD *)this + 4);
          if (!v9)
          {
            v9 = (CoreML::Specification::FloatVector *)operator new();
            CoreML::Specification::FloatVector::FloatVector(v9);
            *((_QWORD *)this + 4) = v9;
          }
          break;
        case 4u:
          if (v7 != 34)
            goto LABEL_23;
          v9 = (CoreML::Specification::FloatVector *)*((_QWORD *)this + 5);
          if (!v9)
          {
            v9 = (CoreML::Specification::FloatVector *)operator new();
            CoreML::Specification::FloatVector::FloatVector(v9);
            *((_QWORD *)this + 5) = v9;
          }
          break;
        default:
          goto LABEL_23;
      }
      v10 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v10;
        *(_QWORD *)a2 = v10 + 1;
      }
      v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v15 = *((_DWORD *)a2 + 13);
      v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        v17 = v13;
        result = CoreML::Specification::FloatVector::MergePartialFromCodedStream(v9, (char **)a2, v14);
        if (!result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17))
          continue;
      }
      return 0;
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *(_QWORD *)a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_23:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B3E6D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

unsigned int *CoreML::Specification::PrecisionRecallCurve::ByteSizeLong(CoreML::Specification::PrecisionRecallCurve *this)
{
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (this == (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    v1 = 0;
  }
  else
  {
    v1 = (unsigned int *)*((_QWORD *)this + 2);
    if (v1)
    {
      v2 = v1[4];
      v3 = 4 * v2;
      if ((_DWORD)v2)
      {
        if ((v3 & 0x80000000) != 0)
          v4 = 11;
        else
          v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v4 = 0;
      }
      v5 = v4 + v3;
      v1[8] = v3;
      v1[9] = v5;
      v1 = (unsigned int *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    v6 = (unsigned int *)*((_QWORD *)this + 3);
    if (v6)
    {
      v7 = v6[4];
      v8 = 4 * v7;
      if ((_DWORD)v7)
      {
        if ((v8 & 0x80000000) != 0)
          v9 = 11;
        else
          v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v9 = 0;
      }
      v10 = v9 + v8;
      v6[8] = v8;
      v6[9] = v10;
      v1 = (unsigned int *)((char *)v1 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    v11 = (unsigned int *)*((_QWORD *)this + 4);
    if (v11)
    {
      v12 = v11[4];
      v13 = 4 * v12;
      if ((_DWORD)v12)
      {
        if ((v13 & 0x80000000) != 0)
          v14 = 11;
        else
          v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v14 = 0;
      }
      v15 = v14 + v13;
      v11[8] = v13;
      v11[9] = v15;
      v1 = (unsigned int *)((char *)v1 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    v16 = (unsigned int *)*((_QWORD *)this + 5);
    if (v16)
    {
      v17 = v16[4];
      v18 = 4 * v17;
      if ((_DWORD)v17)
      {
        if ((v18 & 0x80000000) != 0)
          v19 = 11;
        else
          v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v19 = 0;
      }
      v20 = v19 + v18;
      v16[8] = v18;
      v16[9] = v20;
      v1 = (unsigned int *)((char *)v1 + v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  *((_DWORD *)this + 12) = (_DWORD)v1;
  return v1;
}

_QWORD *CoreML::Specification::PrecisionRecallCurve::SerializeWithCachedSizes(_QWORD *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (this != (_QWORD *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    v5 = this;
    v6 = this[2];
    if (v6)
      this = (_QWORD *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    v7 = v5[3];
    if (v7)
      this = (_QWORD *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    v8 = v5[4];
    if (v8)
      this = (_QWORD *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
    v9 = v5[5];
    if (v9)
      return (_QWORD *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::PrecisionRecallCurve::GetCachedSize(CoreML::Specification::PrecisionRecallCurve *this)
{
  return *((unsigned int *)this + 12);
}

CoreML::Specification::FloatVector *CoreML::Specification::FloatVector::FloatVector(CoreML::Specification::FloatVector *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955A1A0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::FloatVector *)&CoreML::Specification::_FloatVector_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B3E9D0(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FloatVector::MergePartialFromCodedStream(CoreML::Specification::FloatVector *this, char **a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  unsigned int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  int v16;
  signed int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  _BOOL8 result;
  signed int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *a2;
          if (*a2 < a2[1])
            break;
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0)
            goto LABEL_8;
LABEL_14:
          if ((_DWORD)v8)
            v12 = (v8 & 7) == 4;
          else
            v12 = 1;
          if (v12)
            return 1;
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_14;
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8)
          goto LABEL_14;
        if (v8 != 13)
          break;
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0;
      }
      if (v8 != 10)
        goto LABEL_14;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0)
        return 0;
      v13 = *((_DWORD *)a2 + 12);
      v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v15 = *((_DWORD *)a2 + 10);
      v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v17 = *v5;
      v18 = VarintSizeAsIntFallback >> 2;
      v19 = v16 >= v14 ? v14 : v16;
      v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback)
        break;
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1)
          v21 = 1;
        else
          v21 = VarintSizeAsIntFallback >> 2;
        do
        {
          v30 = 0;
          v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result)
              return result;
            v23 = v30;
            v17 = *v5;
          }
          else
          {
            v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            v17 = *v5;
          }
          v24 = *((_QWORD *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      v27 = *((_QWORD *)this + 3);
      v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1)
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
    }
    else
    {
      v27 = *((_QWORD *)this + 3);
    }
    *v5 = v26;
    v29 = v27 + 8;
    if (!v27)
      v29 = 0;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    result = 0;
    *v5 = v17;
    return result;
  }
  return 0;
}

std::string *CoreML::Specification::PrecisionRecallCurve::MergeFrom(std::string *this, const CoreML::Specification::PrecisionRecallCurve *a2)
{
  std::string *v3;
  uint64_t v4;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v5;
  CoreML::Specification::FloatVector *v6;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v7;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v8;
  CoreML::Specification::FloatVector *data;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v10;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v11;
  CoreML::Specification::FloatVector *size;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v13;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v14;
  CoreML::Specification::FloatVector *v15;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v16;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
  {
    v5 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = (CoreML::Specification::FloatVector *)v3->__r_.__value_.__r.__words[2];
      if (!v6)
      {
        v6 = (CoreML::Specification::FloatVector *)operator new();
        CoreML::Specification::FloatVector::FloatVector(v6);
        v3->__r_.__value_.__r.__words[2] = (std::string::size_type)v6;
        v5 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)&CoreML::Specification::_FloatVector_default_instance_;
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom((uint64_t *)v6, v7);
    }
    v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      data = (CoreML::Specification::FloatVector *)v3[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        data = (CoreML::Specification::FloatVector *)operator new();
        CoreML::Specification::FloatVector::FloatVector(data);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        v8 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)&CoreML::Specification::_FloatVector_default_instance_;
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom((uint64_t *)data, v10);
    }
    v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 4);
    if (v11)
    {
      size = (CoreML::Specification::FloatVector *)v3[1].__r_.__value_.__l.__size_;
      if (!size)
      {
        size = (CoreML::Specification::FloatVector *)operator new();
        CoreML::Specification::FloatVector::FloatVector(size);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)size;
        v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 4);
      }
      if (v11)
        v13 = v11;
      else
        v13 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)&CoreML::Specification::_FloatVector_default_instance_;
      this = (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom((uint64_t *)size, v13);
    }
    v14 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 5);
    if (v14)
    {
      v15 = (CoreML::Specification::FloatVector *)v3[1].__r_.__value_.__r.__words[2];
      if (!v15)
      {
        v15 = (CoreML::Specification::FloatVector *)operator new();
        CoreML::Specification::FloatVector::FloatVector(v15);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v15;
        v14 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 5);
      }
      if (v14)
        v16 = v14;
      else
        v16 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)&CoreML::Specification::_FloatVector_default_instance_;
      return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom((uint64_t *)v15, v16);
    }
  }
  return this;
}

void sub_1D3B3EE70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::PrecisionRecallCurve *CoreML::Specification::PrecisionRecallCurve::PrecisionRecallCurve(CoreML::Specification::PrecisionRecallCurve *this)
{
  *(_QWORD *)this = &off_1E955F850;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::PrecisionRecallCurve *)&CoreML::Specification::_PrecisionRecallCurve_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_DWORD *)this + 12) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1D3B3EEF4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::PrecisionRecallCurve>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::PrecisionRecallCurve>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::PrecisionRecallCurve>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::DoubleRange::~DoubleRange(CoreML::Specification::DoubleRange *this)
{
  *(_QWORD *)this = &off_1E955A070;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955A070;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::DoubleRange::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleRange");
}

CoreML::Specification::DoubleRange *CoreML::Specification::DoubleRange::New(CoreML::Specification::DoubleRange *this)
{
  return CoreML::Specification::DoubleRange::New(this, 0);
}

CoreML::Specification::DoubleRange *CoreML::Specification::DoubleRange::New(CoreML::Specification::DoubleRange *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::DoubleRange *v3;

  v3 = (CoreML::Specification::DoubleRange *)operator new();
  CoreML::Specification::DoubleRange::DoubleRange(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::DoubleRange>(a2, v3);
  return v3;
}

void sub_1D3B3F0D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DoubleRange::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::DoubleRange::IsInitialized(CoreML::Specification::DoubleRange *this)
{
  return 1;
}

BOOL CoreML::Specification::DoubleRange::MergePartialFromCodedStream(CoreML::Specification::DoubleRange *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  BOOL v14;
  _BOOL8 result;
  unint64_t v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 17)
          goto LABEL_20;
        v16 = 0;
        v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_QWORD *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9)
        break;
      v16 = 0;
      v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result)
          return result;
        v11 = v16;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::DoubleRange::ByteSizeLong(CoreML::Specification::DoubleRange *this)
{
  uint64_t v1;

  v1 = 9;
  if (*((double *)this + 2) == 0.0)
    v1 = 0;
  if (*((double *)this + 3) != 0.0)
    v1 += 9;
  *((_DWORD *)this + 8) = v1;
  return v1;
}

uint64_t CoreML::Specification::DoubleRange::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  double v5;
  double v6;

  v4 = this;
  v5 = *(double *)(this + 16);
  if (v5 != 0.0)
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  return this;
}

uint64_t CoreML::Specification::DoubleRange::GetCachedSize(CoreML::Specification::DoubleRange *this)
{
  return *((unsigned int *)this + 8);
}

CoreML::Specification::DoubleRange *CoreML::Specification::DoubleRange::DoubleRange(CoreML::Specification::DoubleRange *this)
{
  *(_QWORD *)this = &off_1E955A070;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::DoubleRange *)&CoreML::Specification::_DoubleRange_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B3F334(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleRange>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleRange>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleRange>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::Int64Set::~Int64Set(CoreML::Specification::Int64Set *this)
{
  CoreML::Specification::Int64Set::~Int64Set(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E9565FA0;
  v2 = (_QWORD *)*((_QWORD *)this + 3);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::Int64Set::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Set");
}

CoreML::Specification::Int64Set *CoreML::Specification::Int64Set::New(CoreML::Specification::Int64Set *this)
{
  return CoreML::Specification::Int64Set::New(this, 0);
}

CoreML::Specification::Int64Set *CoreML::Specification::Int64Set::New(CoreML::Specification::Int64Set *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Int64Set *v3;

  v3 = (CoreML::Specification::Int64Set *)operator new();
  CoreML::Specification::Int64Set::Int64Set(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Int64Set>(a2, v3);
  return v3;
}

void sub_1D3B3F43C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Set::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::Int64Set::IsInitialized(CoreML::Specification::Int64Set *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Set::MergePartialFromCodedStream(CoreML::Specification::Int64Set *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Int64Set::ByteSizeLong(CoreML::Specification::Int64Set *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::Int64Set::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  char __src[5];

  if (*(int *)(this + 16) >= 1)
  {
    v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 10;
      v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      v6 = *((_QWORD *)a2 + 1);
      if (v5 < 0x80)
      {
        v8 = *(_DWORD *)(v3 + 32);
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          v8 = v5 >> 7;
          v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *v7 = v8;
      v10 = (_DWORD)v7 - v6 + 1;
      *((_QWORD *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          v14 = *((_QWORD *)a2 + 1);
          if (v13 < 0x80)
          {
            v16 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 8 * i + 8);
            v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          }
          else
          {
            v15 = (_BYTE *)*((_QWORD *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              v16 = v13 >> 7;
              v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          *v15 = v16;
          v18 = (_DWORD)v15 - v14 + 1;
          *((_QWORD *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Int64Set::GetCachedSize(CoreML::Specification::Int64Set *this)
{
  return *((unsigned int *)this + 9);
}

CoreML::Specification::Int64Set *CoreML::Specification::Int64Set::Int64Set(CoreML::Specification::Int64Set *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9565FA0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::Int64Set *)&CoreML::Specification::_Int64Set_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B3F8F0(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Set>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Set>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Set>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::Int64Range::~Int64Range(CoreML::Specification::Int64Range *this)
{
  *(_QWORD *)this = &off_1E9559C48;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9559C48;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::Int64Range::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Range");
}

CoreML::Specification::Int64Range *CoreML::Specification::Int64Range::New(CoreML::Specification::Int64Range *this)
{
  return CoreML::Specification::Int64Range::New(this, 0);
}

CoreML::Specification::Int64Range *CoreML::Specification::Int64Range::New(CoreML::Specification::Int64Range *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Int64Range *v3;

  v3 = (CoreML::Specification::Int64Range *)operator new();
  CoreML::Specification::Int64Range::Int64Range(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Int64Range>(a2, v3);
  return v3;
}

void sub_1D3B3FA9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Range::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::Int64Range::IsInitialized(CoreML::Specification::Int64Range *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Range::MergePartialFromCodedStream(CoreML::Specification::Int64Range *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_QWORD *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

unint64_t CoreML::Specification::Int64Range::ByteSizeLong(CoreML::Specification::Int64Range *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Int64Range::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = this;
  v6 = *(_QWORD *)(this + 16);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  v7 = *(_QWORD *)(v5 + 24);
  if (v7)
    return google::protobuf::internal::WireFormatLite::WriteInt64(2, v7, a2, a4);
  return this;
}

uint64_t CoreML::Specification::Int64Range::GetCachedSize(CoreML::Specification::Int64Range *this)
{
  return *((unsigned int *)this + 8);
}

std::string *CoreML::Specification::Int64Range::MergeFrom(std::string *this, const CoreML::Specification::Int64Range *a2)
{
  std::string *v3;
  uint64_t v4;
  std::string::size_type v5;
  std::string::size_type v6;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (v5)
    v3->__r_.__value_.__r.__words[2] = v5;
  v6 = *((_QWORD *)a2 + 3);
  if (v6)
    v3[1].__r_.__value_.__r.__words[0] = v6;
  return this;
}

CoreML::Specification::Int64Range *CoreML::Specification::Int64Range::Int64Range(CoreML::Specification::Int64Range *this)
{
  *(_QWORD *)this = &off_1E9559C48;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::Int64Range *)&CoreML::Specification::_Int64Range_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B3FD50(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Range>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Range>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Range>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::DoubleVector::~DoubleVector(CoreML::Specification::DoubleVector *this)
{
  CoreML::Specification::DoubleVector::~DoubleVector(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E955ABB8;
  v2 = (_QWORD *)*((_QWORD *)this + 3);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::DoubleVector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleVector");
}

CoreML::Specification::DoubleVector *CoreML::Specification::DoubleVector::New(CoreML::Specification::DoubleVector *this)
{
  return CoreML::Specification::DoubleVector::New(this, 0);
}

CoreML::Specification::DoubleVector *CoreML::Specification::DoubleVector::New(CoreML::Specification::DoubleVector *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::DoubleVector *v3;

  v3 = (CoreML::Specification::DoubleVector *)operator new();
  CoreML::Specification::DoubleVector::DoubleVector(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::DoubleVector>(a2, v3);
  return v3;
}

void sub_1D3B3FE58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DoubleVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::DoubleVector::IsInitialized(CoreML::Specification::DoubleVector *this)
{
  return 1;
}

BOOL CoreML::Specification::DoubleVector::MergePartialFromCodedStream(CoreML::Specification::DoubleVector *this, char **a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  unsigned int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  int v16;
  signed int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 result;
  signed int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *a2;
          if (*a2 < a2[1])
            break;
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0)
            goto LABEL_8;
LABEL_14:
          if ((_DWORD)v8)
            v12 = (v8 & 7) == 4;
          else
            v12 = 1;
          if (v12)
            return 1;
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_14;
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8)
          goto LABEL_14;
        if (v8 != 9)
          break;
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(10, (unint64_t **)a2, (uint64_t)v5))return 0;
      }
      if (v8 != 10)
        goto LABEL_14;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 7) != 0)
        return 0;
      v13 = *((_DWORD *)a2 + 12);
      v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v15 = *((_DWORD *)a2 + 10);
      v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v17 = *v5;
      v18 = VarintSizeAsIntFallback >> 3;
      v19 = v16 >= v14 ? v14 : v16;
      v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback)
        break;
      if (VarintSizeAsIntFallback >= 8)
      {
        if (v18 <= 1)
          v21 = 1;
        else
          v21 = VarintSizeAsIntFallback >> 3;
        do
        {
          v30 = 0;
          v22 = (unint64_t *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v30);
            if (!result)
              return result;
            v23 = v30;
            v17 = *v5;
          }
          else
          {
            v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v17 + 1);
            v17 = *v5;
          }
          v24 = *((_QWORD *)this + 3) + 8 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_QWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v17 + v18);
      v27 = *((_QWORD *)this + 3);
      v28 = 8 * v26 - 8 * *((int *)this + 4);
      if (v28 >= 1)
        bzero((void *)(v27 + 8 + 8 * *((int *)this + 4)), 8 * (((unint64_t)v28 >> 3) - ((unint64_t)v28 > 7)) + 8);
    }
    else
    {
      v27 = *((_QWORD *)this + 3);
    }
    *v5 = v26;
    v29 = v27 + 8;
    if (!v27)
      v29 = 0;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 8 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    result = 0;
    *v5 = v17;
    return result;
  }
  return 0;
}

uint64_t CoreML::Specification::DoubleVector::ByteSizeLong(CoreML::Specification::DoubleVector *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((unsigned int *)this + 4);
  v2 = 8 * v1;
  if ((_DWORD)v1)
  {
    if ((v2 & 0x80000000) != 0)
      v3 = 11;
    else
      v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
  }
  v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::DoubleVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char __src[5];

  if (*(int *)(this + 16) >= 1)
  {
    v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 10;
      v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      v6 = *((_QWORD *)a2 + 1);
      if (v5 < 0x80)
      {
        v8 = *(_DWORD *)(v3 + 32);
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          v8 = v5 >> 7;
          v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *v7 = v8;
      v10 = (_DWORD)v7 - v6 + 1;
      *((_QWORD *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    v11 = *(_QWORD *)(v3 + 24);
    if (v11)
      v12 = (char *)(v11 + 8);
    else
      v12 = 0;
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, 8 * *(_DWORD *)(v3 + 16));
  }
  return this;
}

uint64_t CoreML::Specification::DoubleVector::GetCachedSize(CoreML::Specification::DoubleVector *this)
{
  return *((unsigned int *)this + 9);
}

CoreML::Specification::DoubleVector *CoreML::Specification::DoubleVector::DoubleVector(CoreML::Specification::DoubleVector *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955ABB8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::DoubleVector *)&CoreML::Specification::_DoubleVector_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B40354(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleVector>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleVector>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::FloatVector::~FloatVector(CoreML::Specification::FloatVector *this)
{
  CoreML::Specification::FloatVector::~FloatVector(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E955A1A0;
  v2 = (_QWORD *)*((_QWORD *)this + 3);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::FloatVector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FloatVector");
}

CoreML::Specification::FloatVector *CoreML::Specification::FloatVector::New(CoreML::Specification::FloatVector *this)
{
  return CoreML::Specification::FloatVector::New(this, 0);
}

CoreML::Specification::FloatVector *CoreML::Specification::FloatVector::New(CoreML::Specification::FloatVector *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::FloatVector *v3;

  v3 = (CoreML::Specification::FloatVector *)operator new();
  CoreML::Specification::FloatVector::FloatVector(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::FloatVector>(a2, v3);
  return v3;
}

void sub_1D3B404B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloatVector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::FloatVector::IsInitialized(CoreML::Specification::FloatVector *this)
{
  return 1;
}

uint64_t CoreML::Specification::FloatVector::ByteSizeLong(CoreML::Specification::FloatVector *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((unsigned int *)this + 4);
  v2 = 4 * v1;
  if ((_DWORD)v1)
  {
    if ((v2 & 0x80000000) != 0)
      v3 = 11;
    else
      v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
  }
  v4 = v3 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::FloatVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char __src[5];

  if (*(int *)(this + 16) >= 1)
  {
    v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 10;
      v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      v6 = *((_QWORD *)a2 + 1);
      if (v5 < 0x80)
      {
        v8 = *(_DWORD *)(v3 + 32);
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          v8 = v5 >> 7;
          v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *v7 = v8;
      v10 = (_DWORD)v7 - v6 + 1;
      *((_QWORD *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    v11 = *(_QWORD *)(v3 + 24);
    if (v11)
      v12 = (char *)(v11 + 8);
    else
      v12 = 0;
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v12, 4 * *(_DWORD *)(v3 + 16));
  }
  return this;
}

uint64_t CoreML::Specification::FloatVector::GetCachedSize(CoreML::Specification::FloatVector *this)
{
  return *((unsigned int *)this + 9);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FloatVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FloatVector>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FloatVector>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::Int64Vector::~Int64Vector(CoreML::Specification::Int64Vector *this)
{
  CoreML::Specification::Int64Vector::~Int64Vector(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E955A238;
  v2 = (_QWORD *)*((_QWORD *)this + 3);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::Int64Vector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Vector");
}

CoreML::Specification::Int64Vector *CoreML::Specification::Int64Vector::New(CoreML::Specification::Int64Vector *this)
{
  return CoreML::Specification::Int64Vector::New(this, 0);
}

CoreML::Specification::Int64Vector *CoreML::Specification::Int64Vector::New(CoreML::Specification::Int64Vector *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Int64Vector *v3;

  v3 = (CoreML::Specification::Int64Vector *)operator new();
  CoreML::Specification::Int64Vector::Int64Vector(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Int64Vector>(a2, v3);
  return v3;
}

void sub_1D3B407A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Vector::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::Int64Vector::IsInitialized(CoreML::Specification::Int64Vector *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Vector::MergePartialFromCodedStream(CoreML::Specification::Int64Vector *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::Int64Vector::ByteSizeLong(CoreML::Specification::Int64Vector *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::Int64Vector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  char __src[5];

  if (*(int *)(this + 16) >= 1)
  {
    v3 = this;
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 10;
      this = google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v4 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 10;
      v4 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v4;
    }
    v5 = *(_DWORD *)(v3 + 32);
    if (v4 < 5)
    {
      this = google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v5);
    }
    else
    {
      v6 = *((_QWORD *)a2 + 1);
      if (v5 < 0x80)
      {
        v8 = *(_DWORD *)(v3 + 32);
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v7++ = v5 | 0x80;
          v8 = v5 >> 7;
          v9 = v5 >> 14;
          v5 >>= 7;
        }
        while (v9);
      }
      *v7 = v8;
      v10 = (_DWORD)v7 - v6 + 1;
      *((_QWORD *)a2 + 1) += v10;
      *((_DWORD *)a2 + 4) -= v10;
    }
    v11 = *(unsigned int *)(v3 + 16);
    if ((int)v11 >= 1)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 8 * i + 8);
        if (*((int *)a2 + 4) < 10)
        {
          this = google::protobuf::io::CodedOutputStream::WriteVarint64SlowPath(a2, v13);
        }
        else
        {
          v14 = *((_QWORD *)a2 + 1);
          if (v13 < 0x80)
          {
            v16 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 8 * i + 8);
            v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          }
          else
          {
            v15 = (_BYTE *)*((_QWORD *)a2 + 1);
            do
            {
              *v15++ = v13 | 0x80;
              v16 = v13 >> 7;
              v17 = v13 >> 14;
              v13 >>= 7;
            }
            while (v17);
          }
          *v15 = v16;
          v18 = (_DWORD)v15 - v14 + 1;
          *((_QWORD *)a2 + 1) += v18;
          *((_DWORD *)a2 + 4) -= v18;
        }
      }
    }
  }
  return this;
}

uint64_t CoreML::Specification::Int64Vector::GetCachedSize(CoreML::Specification::Int64Vector *this)
{
  return *((unsigned int *)this + 9);
}

CoreML::Specification::Int64Vector *CoreML::Specification::Int64Vector::Int64Vector(CoreML::Specification::Int64Vector *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955A238;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::Int64Vector *)&CoreML::Specification::_Int64Vector_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B40C54(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Vector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Vector>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Vector>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::StringVector::~StringVector(CoreML::Specification::StringVector *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E955AF48;
  v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E955AF48;
  v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::StringVector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringVector");
}

CoreML::Specification::StringVector *CoreML::Specification::StringVector::New(CoreML::Specification::StringVector *this)
{
  return CoreML::Specification::StringVector::New(this, 0);
}

CoreML::Specification::StringVector *CoreML::Specification::StringVector::New(CoreML::Specification::StringVector *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::StringVector *v3;

  v3 = (CoreML::Specification::StringVector *)operator new();
  CoreML::Specification::StringVector::StringVector(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::StringVector>(a2, v3);
  return v3;
}

void sub_1D3B40E20(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StringVector::Clear(CoreML::Specification::StringVector *this)
{
  return google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 16);
}

uint64_t CoreML::Specification::StringVector::IsInitialized(CoreML::Specification::StringVector *this)
{
  return 1;
}

BOOL CoreML::Specification::StringVector::MergePartialFromCodedStream(CoreML::Specification::StringVector *this, char **a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  int *v12;
  int v13;
  int v14;
  std::string *Aligned;
  google::protobuf::Arena *v16;
  google::protobuf::Arena **v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL8 result;
  uint64_t v23;
  unsigned int *v24;
  uint64_t v25;

  v5 = (google::protobuf::Arena **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8)
        break;
      v12 = (int *)*((_QWORD *)this + 4);
      if (!v12)
      {
        v13 = *((_DWORD *)this + 6);
        v14 = *((_DWORD *)this + 7);
        goto LABEL_23;
      }
      v13 = *((_DWORD *)this + 6);
      v14 = *v12;
      if (v13 >= *v12)
      {
        if (v14 != *((_DWORD *)this + 7))
        {
LABEL_26:
          *v12 = v14 + 1;
          v16 = *v5;
          if (*v5)
          {
            Aligned->__r_.__value_.__l.__size_ = 0;
            Aligned->__r_.__value_.__r.__words[2] = 0;
            Aligned->__r_.__value_.__r.__words[0] = 0;
            v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
            *v17 = (google::protobuf::Arena *)Aligned;
            v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
            v18 = (unint64_t *)((char *)v16 + 32);
            do
              v19 = __ldxr(v18);
            while (__stxr((unint64_t)v17, v18));
            v17[2] = (google::protobuf::Arena *)v19;
          }
          else
          {
            Aligned = (std::string *)operator new();
            Aligned->__r_.__value_.__l.__size_ = 0;
            Aligned->__r_.__value_.__r.__words[2] = 0;
            Aligned->__r_.__value_.__r.__words[0] = 0;
          }
          v20 = *((_QWORD *)this + 4);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21 + 8) = Aligned;
          goto LABEL_32;
        }
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v14 - v13 + 1);
          v12 = (int *)*((_QWORD *)this + 4);
        }
        v14 = *v12;
        goto LABEL_26;
      }
      *((_DWORD *)this + 6) = v13 + 1;
      Aligned = *(std::string **)&v12[2 * v13 + 2];
LABEL_32:
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, Aligned);
      if (!result)
        return result;
      v23 = *((_QWORD *)this + 4);
      v24 = *(unsigned int **)(v23 + 8 * *((int *)this + 6));
      if (*((char *)v24 + 23) < 0)
      {
        v24 = *(unsigned int **)v24;
        v25 = *(_QWORD *)(*(_QWORD *)(v23 + 8 * *((int *)this + 6)) + 8);
      }
      else
      {
        LODWORD(v25) = *((unsigned __int8 *)v24 + 23);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v24, v25, 0, (uint64_t)"CoreML.Specification.StringVector.vector"))return 0;
    }
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
  }
}

uint64_t CoreML::Specification::StringVector::ByteSizeLong(CoreML::Specification::StringVector *this)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 6);
  if ((int)v1 < 1)
  {
    v3 = *((unsigned int *)this + 6);
  }
  else
  {
    v2 = (uint64_t *)(*((_QWORD *)this + 4) + 8);
    v3 = *((unsigned int *)this + 6);
    do
    {
      v4 = *v2++;
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v6 = v5;
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  *((_DWORD *)this + 10) = v3;
  return v3;
}

uint64_t CoreML::Specification::StringVector::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;

  v2 = *(unsigned int *)(this + 24);
  if ((int)v2 >= 1)
  {
    v4 = this;
    v5 = -v2;
    v6 = 1;
    do
    {
      v7 = *(unsigned int **)(*(_QWORD *)(v4 + 32) + 8 * v6);
      if (*((char *)v7 + 23) < 0)
      {
        v7 = *(unsigned int **)v7;
        v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 8 * v6) + 8);
      }
      else
      {
        LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.StringVector.vector");
      this = google::protobuf::internal::WireFormatLite::WriteString(1u, *(_QWORD *)(*(_QWORD *)(v4 + 32) + 8 * v6++), a2);
    }
    while (v5 + v6 != 1);
  }
  return this;
}

uint64_t CoreML::Specification::StringVector::GetCachedSize(CoreML::Specification::StringVector *this)
{
  return *((unsigned int *)this + 10);
}

CoreML::Specification::StringVector *CoreML::Specification::StringVector::StringVector(CoreML::Specification::StringVector *this)
{
  *(_QWORD *)this = &off_1E955AF48;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::StringVector *)&CoreML::Specification::_StringVector_default_instance_)
    CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B411E0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringVector>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringVector>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringVector>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

_QWORD *google::protobuf::Map<long long,double>::~Map(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  google::protobuf::Map<long long,double>::clear(a1);
  if (!*a1)
  {
    v2 = a1[2];
    if (v2)
    {
      v3 = google::protobuf::Map<long long,double>::InnerMap::~InnerMap(v2);
      MEMORY[0x1D8251A40](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<long long,double>::clear(_QWORD *a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];
  _QWORD v8[3];

  v1 = (_QWORD *)a1[2];
  v2 = v1[3];
  v3 = v1[1];
  if (v3 > v2)
  {
    v5 = v1[4];
    while (1)
    {
      v6 = *(_QWORD *)(v5 + 8 * v2);
      if (v6)
        break;
      if (v3 == ++v2)
        return;
    }
    if (v6 != *(_QWORD *)(v5 + 8 * (v2 ^ 1)) || (v6 = *(_QWORD *)(*(_QWORD *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<long long,double>::erase((uint64_t)v8, a1, v7);
        v6 = v8[0];
        v1 = (_QWORD *)v8[1];
        v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

uint64_t google::protobuf::Map<long long,double>::InnerMap::~InnerMap(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  BOOL v13;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      v3 = 0;
      do
      {
        v4 = *(_QWORD *)(a1 + 32);
        v5 = *(_QWORD *)(v4 + 8 * v3);
        if (v5)
        {
          if (v5 == *(_QWORD *)(v4 + 8 * (v3 ^ 1)))
          {
            v7 = v3 + 1;
            *(_QWORD *)(v4 + 8 * (v3 + 1)) = 0;
            *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * v3) = 0;
            v8 = *(uint64_t **)v5;
            do
            {
              v9 = (void *)v8[4];
              v10 = (uint64_t *)v8[1];
              v11 = v8;
              if (v10)
              {
                do
                {
                  v12 = v10;
                  v10 = (uint64_t *)*v10;
                }
                while (v10);
              }
              else
              {
                do
                {
                  v12 = (uint64_t *)v11[2];
                  v13 = *v12 == (_QWORD)v11;
                  v11 = v12;
                }
                while (!v13);
              }
              std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v5, v8);
              if (!*(_QWORD *)(a1 + 40))
                operator delete(v9);
              v8 = v12;
            }
            while (v12 != (uint64_t *)(v5 + 8));
            google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(_QWORD *)(a1 + 40), (_QWORD **)v5);
            goto LABEL_21;
          }
          *(_QWORD *)(v4 + 8 * v3) = 0;
          do
          {
            v6 = *(_QWORD *)(v5 + 16);
            if (!*(_QWORD *)(a1 + 40))
              operator delete((void *)v5);
            v5 = v6;
          }
          while (v6);
        }
        v7 = v3;
LABEL_21:
        v3 = v7 + 1;
        v2 = *(_QWORD *)(a1 + 8);
      }
      while (v7 + 1 < v2);
    }
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 24) = v2;
    if (!*(_QWORD *)(a1 + 40))
      operator delete(*(void **)(a1 + 32));
  }
  return a1;
}

__n128 google::protobuf::Map<long long,double>::erase(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  _BOOL4 v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __n128 result;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  _QWORD *v29;

  v6 = *a3;
  if (!*a2)
  {
    v7 = *(_QWORD *)(v6 + 8);
    if (v7)
    {
      MEMORY[0x1D8251A40](v7, 0x1000C40451B5BE8);
      v6 = *a3;
    }
  }
  v27 = *(__n128 *)a3;
  v28 = a3[2];
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
    goto LABEL_5;
  v29 = 0;
  if (google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, &v29))
  {
    v9 = a3[2] + 1;
  }
  else
  {
    v10 = a3[2];
    v11 = *(_QWORD *)(*(_QWORD *)(a3[1] + 32) + 8 * v10);
    v12 = v29;
    v13 = (_QWORD *)v29[1];
    if (v13)
    {
      do
      {
        v14 = v13;
        v13 = (_QWORD *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        v14 = (_QWORD *)v12[2];
        v15 = *v14 == (_QWORD)v12;
        v12 = v14;
      }
      while (!v15);
    }
    v29 = v14;
    if (v14 != (_QWORD *)(v11 + 8))
    {
      v8 = v14[4];
LABEL_5:
      *a3 = v8;
      goto LABEL_17;
    }
    v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_17:
  v16 = (_QWORD *)a2[2];
  v29 = 0;
  v17 = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, &v29);
  v18 = v28;
  v19 = (void *)v27.n128_u64[0];
  v20 = v16[4];
  v21 = *(_QWORD *)(v20 + 8 * v28);
  if (v17)
  {
    v22 = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(_QWORD *)(v20 + 8 * v28));
LABEL_23:
    *(_QWORD *)(v16[4] + 8 * v18) = v22;
    goto LABEL_24;
  }
  v23 = (uint64_t *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v21, (uint64_t *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23)
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  if (!*(_QWORD *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (_QWORD **)v21);
    v22 = 0;
    *(_QWORD *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_23;
  }
LABEL_24:
  if (!v16[5])
    operator delete(v19);
  --*v16;
  if (v18 == v16[3])
  {
    v25 = v16[1];
    if (v18 < v25)
    {
      v26 = v16[4];
      do
      {
        if (*(_QWORD *)(v26 + 8 * v18))
          break;
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 16) = a3[2];
  return result;
}

BOOL google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v4 = *(uint64_t **)a1;
  v3 = *(_QWORD **)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16) & (v3[1] - 1);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v3[4];
  v7 = *(uint64_t **)(v6 + 8 * v5);
  if (v7 == v4)
    return 1;
  if (v7 && v7 != *(uint64_t **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      v7 = (uint64_t *)v7[2];
      if (!v7)
        break;
      if (v7 == v4)
        return 1;
    }
  }
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v13, v3, v4, a2);
  v9 = v14;
  *(_QWORD *)(a1 + 16) = v14;
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 32);
  v11 = *(_QWORD *)(v10 + 8 * v9);
  return !v11 || v11 != *(_QWORD *)(v10 + 8 * (v9 ^ 1));
}

uint64_t google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a2;
  v3 = *(_QWORD *)(a2 + 16);
  if (v2 == a1)
    return v3;
  *(_QWORD *)(v2 + 16) = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList();
  return v2;
}

uint64_t std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t *v9;

  v4 = *(_QWORD *)(a1 + 8);
  v2 = a1 + 8;
  v3 = v4;
  if (!v4)
    return v2;
  v5 = *a2;
  v6 = v2;
  do
  {
    v7 = **(_QWORD **)(v3 + 32);
    v8 = v7 < v5;
    if (v7 >= v5)
      v9 = (uint64_t *)v3;
    else
      v9 = (uint64_t *)(v3 + 8);
    if (!v8)
      v6 = v3;
    v3 = *v9;
  }
  while (*v9);
  if (v6 == v2 || v5 < **(_QWORD **)(v6 + 32))
    return v2;
  return v6;
}

_QWORD *google::protobuf::Map<long long,double>::InnerMap::FindHelper(_QWORD *result, _QWORD *a2, uint64_t *a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v10;

  v4 = result;
  v5 = (a2[1] - 1) & (a2[2] + *a3);
  v6 = a2[4];
  v7 = *(_QWORD **)(v6 + 8 * v5);
  if (v7)
  {
    if (v7 != *(_QWORD **)(v6 + 8 * (v5 ^ 1)))
    {
      while (*v7 != *a3)
      {
        v7 = (_QWORD *)v7[2];
        if (!v7)
          goto LABEL_10;
      }
      *result = v7;
      goto LABEL_12;
    }
    v5 &= ~1uLL;
    v10 = *(_QWORD *)(v6 + 8 * v5);
    result = (_QWORD *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v10, a3);
    if ((_QWORD *)(v10 + 8) != result)
    {
      if (a4)
        *a4 = result;
      *v4 = result[4];
LABEL_12:
      v4[1] = a2;
      v4[2] = v5;
      goto LABEL_13;
    }
  }
LABEL_10:
  *v4 = 0;
  v4[1] = 0;
  v4[2] = 0;
LABEL_13:
  v4[3] = v5;
  return result;
}

_QWORD *google::protobuf::Map<long long,double>::InnerMap::InnerMap(_QWORD *a1, google::protobuf::Arena *a2)
{
  std::random_device *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  google::protobuf::Arena **v9;
  __int128 v11;
  unsigned int v12[258];
  std::random_device v13;

  *a1 = 0;
  v4 = std::random_device::random_device[abi:ne180100](&v13);
  v5 = MEMORY[0x1D82518F0](v4);
  v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1)
    v6 = 1;
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  v11 = xmmword_1D3BDFCA0;
  v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1D3B41948(void *a1)
{
  uint64_t v1;

  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D3B41904);
}

void CoreML::Specification::Int64ToDoubleMap::~Int64ToDoubleMap(CoreML::Specification::Int64ToDoubleMap *this)
{
  *(_QWORD *)this = &off_1E955D088;
  google::protobuf::Map<long long,double>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955D088;
  google::protobuf::Map<long long,double>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::Int64ToDoubleMap::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64ToDoubleMap");
}

CoreML::Specification::Int64ToDoubleMap *CoreML::Specification::Int64ToDoubleMap::New(CoreML::Specification::Int64ToDoubleMap *this)
{
  return CoreML::Specification::Int64ToDoubleMap::New(this, 0);
}

CoreML::Specification::Int64ToDoubleMap *CoreML::Specification::Int64ToDoubleMap::New(CoreML::Specification::Int64ToDoubleMap *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Int64ToDoubleMap *v3;

  v3 = (CoreML::Specification::Int64ToDoubleMap *)operator new();
  CoreML::Specification::Int64ToDoubleMap::Int64ToDoubleMap(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Int64ToDoubleMap>(a2, v3);
  return v3;
}

void sub_1D3B41A58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Int64ToDoubleMap::Clear(CoreML::Specification::Int64ToDoubleMap *this)
{
  google::protobuf::Map<long long,double>::clear((_QWORD *)this + 3);
}

uint64_t CoreML::Specification::Int64ToDoubleMap::IsInitialized(CoreML::Specification::Int64ToDoubleMap *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64ToDoubleMap::MergePartialFromCodedStream(CoreML::Specification::Int64ToDoubleMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int TagFallback;
  int v13;
  char *v14;
  int VarintSizeAsIntFallback;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t Varint64Fallback;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t *v28;
  char *v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  double v38;
  _BOOL4 v39;
  BOOL v40;
  _QWORD v42[2];
  uint64_t v43[2];
  uint64_t v44;
  unint64_t v45;

  v5 = (google::protobuf::Arena **)((char *)this + 16);
  v6 = (char *)this + 24;
  while (1)
  {
    v7 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v8) = 0;
    }
    else
    {
      v8 = *v7;
      if (*v7 >= 1)
      {
        *(_QWORD *)a2 = v7 + 1;
        v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0)
          goto LABEL_12;
        goto LABEL_8;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
    v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v9 & 0x100000000) == 0)
      goto LABEL_12;
LABEL_8:
    if (v9 == 10 && (v9 & 0xFFFFFFF8) == 8)
    {
      v42[0] = v5;
      v42[1] = v6;
      v44 = 0;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        VarintSizeAsIntFallback = *v14;
        *(_QWORD *)a2 = v14 + 1;
        goto LABEL_24;
      }
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        goto LABEL_63;
LABEL_24:
      v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v17 = *((_DWORD *)a2 + 13);
      v18 = __OFSUB__(v17--, 1);
      *((_DWORD *)a2 + 13) = v17;
      if (v17 < 0 != v18)
        goto LABEL_63;
      v19 = v16;
      v21 = *(char **)a2;
      v20 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 < v20 && *v21 == 8)
      {
        *(_QWORD *)a2 = v21 + 1;
        if ((unint64_t)(v21 + 1) >= v20 || v21[1] < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v25 & 1) != 0)
          {
            v22 = Varint64Fallback;
            v23 = *(char **)a2;
            v20 = *((_QWORD *)a2 + 1);
            goto LABEL_33;
          }
          goto LABEL_63;
        }
        v22 = v21[1];
        v23 = v21 + 2;
        *(_QWORD *)a2 = v23;
LABEL_33:
        v43[0] = v22;
        if ((int)v20 - (int)v23 >= 1 && *v23 == 17)
        {
          v26 = **((_QWORD **)this + 5);
          v27 = google::protobuf::Map<long long,double>::operator[]((uint64_t)v6, v43);
          v43[1] = (uint64_t)v27;
          if (v26 != **((_QWORD **)this + 5))
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            v45 = 0;
            v28 = *(unint64_t **)a2;
            v29 = (char *)*((_QWORD *)a2 + 1);
            if ((int)((_DWORD)v29 - *(_QWORD *)a2) < 8)
            {
              if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v45))
              {
                v32 = v45;
                v30 = *(char **)a2;
                v29 = (char *)*((_QWORD *)a2 + 1);
                goto LABEL_38;
              }
              google::protobuf::Map<long long,double>::erase((uint64_t)v6, v43);
              goto LABEL_63;
            }
            v31 = *v28;
            v30 = (char *)(v28 + 1);
            v32 = v31;
            *(_QWORD *)a2 = v30;
LABEL_38:
            *v27 = v32;
            if (v30 == v29 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((_BYTE *)a2 + 36) = 1;
              goto LABEL_57;
            }
            v33 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v5);
            if (v33)
            {
              v44 = v33;
              v34 = v33;
            }
            else
            {
              v34 = 0;
            }
            *(_DWORD *)(v33 + 40) |= 2u;
            *(_QWORD *)(v33 + 24) = *v27;
            v38 = google::protobuf::Map<long long,double>::erase((uint64_t)v6, v43);
            *(_DWORD *)(v34 + 40) |= 1u;
            *(_QWORD *)(v34 + 16) = v22;
            v37 = (*(uint64_t (**)(uint64_t, google::protobuf::io::CodedInputStream *, double))(*(_QWORD *)v34 + 88))(v34, a2, v38);
            if (v37)
            {
              google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry((uint64_t)v42);
              v34 = v44;
            }
            if (!(*(uint64_t (**)(uint64_t))(*(_QWORD *)v34 + 40))(v34))
            {
LABEL_56:
              if (v37)
                goto LABEL_57;
LABEL_63:
              v40 = 0;
              v13 = 6;
LABEL_64:
              if (v44)
                (*(void (**)(uint64_t))(*(_QWORD *)v44 + 8))(v44);
              if (!v40)
                goto LABEL_18;
              goto LABEL_17;
            }
LABEL_47:
            v44 = 0;
            if ((v37 & 1) == 0)
              return 0;
LABEL_57:
            v39 = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v19);
            v40 = v39;
            if (v39)
              v13 = 0;
            else
              v13 = 6;
            goto LABEL_64;
          }
        }
      }
      else
      {
        v22 = 0;
        v43[0] = 0;
      }
      v35 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v5);
      if (v35)
      {
        v44 = v35;
        v36 = v35;
      }
      else
      {
        v36 = 0;
      }
      *(_DWORD *)(v35 + 40) |= 1u;
      *(_QWORD *)(v35 + 16) = v22;
      v37 = (*(uint64_t (**)(uint64_t, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v35 + 88))(v35, a2);
      if (v37)
      {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry((uint64_t)v42);
        v36 = v44;
      }
      if (!(*(uint64_t (**)(uint64_t))(*(_QWORD *)v36 + 40))(v36))
        goto LABEL_56;
      goto LABEL_47;
    }
LABEL_12:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3))return 0;
LABEL_17:
    v13 = 0;
LABEL_18:
    if (v13)
      return 0;
  }
}

void sub_1D3B41E50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13)
    (*(void (**)(uint64_t))(*(_QWORD *)a13 + 8))(a13);
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::Int64ToDoubleMap::ByteSizeLong(CoreML::Specification::Int64ToDoubleMap *this)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v8[3];

  v2 = (_QWORD *)*((_QWORD *)this + 5);
  v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  v4 = 0;
  while (v8[0])
  {
    v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(v8[0][1], v8[0][1] + 8, *((google::protobuf::Arena **)this + 2));
    if (v4 != (_DWORD *)v5)
    {
      if (v4)
        (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
      v4 = (_DWORD *)v5;
    }
    v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v8);
  }
  if (v4)
    (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1D3B41F3C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *CoreML::Specification::Int64ToDoubleMap::SerializeWithCachedSizes(_QWORD *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::io::CodedOutputStream *v21;
  uint64_t v22;
  uint64_t *v23[3];

  v3 = (unint64_t *)this[5];
  v4 = *v3;
  if (!*v3)
    return this;
  v5 = (uint64_t)this;
  if (*((_BYTE *)a2 + 26))
  {
    if (v4 >= 2 && *((_BYTE *)a2 + 27) != 0)
    {
LABEL_21:
      v11 = operator new[]();
      google::protobuf::Map<std::string,std::string>::begin(v23, *(_QWORD **)(v5 + 40));
      v12 = v23[0];
      if (v23[0])
      {
        v13 = 0;
        v14 = (_QWORD *)(v11 + 8);
        do
        {
          v15 = (_QWORD *)v12[1];
          *(v14 - 1) = *v15;
          *v14 = v15;
          google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v23);
          ++v13;
          v12 = v23[0];
          v14 += 2;
        }
        while (v23[0]);
      }
      else
      {
        v13 = 0;
      }
      v16 = 126 - 2 * __clz(v13);
      if (v13)
        v17 = v16;
      else
        v17 = 0;
      v18.n128_f64[0] = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(v11, (_QWORD *)(v11 + 16 * v13), v17, 1);
      if (v13)
      {
        v19 = 0;
        v20 = 8;
        do
        {
          v22 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*(_QWORD *)(v11 + v20), *(_QWORD *)(v11 + v20) + 8, *(google::protobuf::Arena **)(v5 + 16));
          if (v19 != v22)
          {
            if (v19)
              (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            v19 = v22;
          }
          google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v19, a2, v21);
          v20 += 16;
          --v13;
        }
        while (v13);
        (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
      }
      return (_QWORD *)MEMORY[0x1D8251A28](v11, 0x1060C80832E3BDALL, v18);
    }
  }
  else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
  {
    goto LABEL_21;
  }
  this = google::protobuf::Map<std::string,std::string>::begin(v23, v3);
  v7 = 0;
  while (v23[0])
  {
    v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(v23[0][1], v23[0][1] + 8, *(google::protobuf::Arena **)(v5 + 16));
    if (v7 != v9)
    {
      if (v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      v7 = v9;
    }
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
    this = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v23);
  }
  if (v7)
    return (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  return this;
}

void sub_1D3B42168(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  MEMORY[0x1D8251A28](v1, 0x1060C80832E3BDALL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64ToDoubleMap::GetCachedSize(CoreML::Specification::Int64ToDoubleMap *this)
{
  return *((unsigned int *)this + 12);
}

double std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(uint64_t a1, _QWORD *a2, uint64_t a3, char a4)
{
  __int128 *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  _QWORD *v36;
  BOOL v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;

LABEL_1:
  v8 = (__int128 *)(a2 - 2);
  v9 = a1;
  while (2)
  {
    a1 = v9;
    v10 = (uint64_t)a2 - v9;
    v11 = (uint64_t)((uint64_t)a2 - v9) >> 4;
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
        return *(double *)&v14;
      case 2uLL:
        if (*(_QWORD *)v8 < *(_QWORD *)v9)
        {
          v81 = *(_OWORD *)v9;
          *(_OWORD *)v9 = *v8;
          *(_QWORD *)&v14 = v81;
          *v8 = v81;
        }
        return *(double *)&v14;
      case 3uLL:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v9, (uint64_t *)(v9 + 16), a2 - 2);
        return *(double *)&v14;
      case 4uLL:
        *(_QWORD *)&v14 = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v9, (uint64_t *)(v9 + 16), (uint64_t *)(v9 + 32), (_OWORD *)a2 - 1).n128_u64[0];
        return *(double *)&v14;
      case 5uLL:
        *(_QWORD *)&v14 = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v9, (uint64_t *)(v9 + 16), (uint64_t *)(v9 + 32), (__n128 *)(v9 + 48), (__n128 *)a2 - 1).n128_u64[0];
        return *(double *)&v14;
      default:
        if (v10 <= 383)
        {
          v36 = (_QWORD *)(v9 + 16);
          v38 = (_QWORD *)v9 == a2 || v36 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v38)
            {
              v39 = 0;
              v40 = (_QWORD *)v9;
              do
              {
                v41 = v36;
                v42 = v40[2];
                if (v42 < *v40)
                {
                  v43 = v40[3];
                  v44 = v39;
                  while (1)
                  {
                    v14 = *(_OWORD *)(v9 + v44);
                    *(_OWORD *)(v9 + v44 + 16) = v14;
                    if (!v44)
                      break;
                    v45 = *(_QWORD *)(v9 + v44 - 16);
                    v44 -= 16;
                    if (v42 >= v45)
                    {
                      v46 = (_QWORD *)(v9 + v44 + 16);
                      goto LABEL_73;
                    }
                  }
                  v46 = (_QWORD *)v9;
LABEL_73:
                  *v46 = v42;
                  v46[1] = v43;
                }
                v36 = v41 + 2;
                v39 += 16;
                v40 = v41;
              }
              while (v41 + 2 != a2);
            }
          }
          else if (!v38)
          {
            do
            {
              v73 = (uint64_t)v36;
              v74 = *(_QWORD *)(a1 + 16);
              if (v74 < *(_QWORD *)a1)
              {
                v75 = *(_QWORD *)(a1 + 24);
                v76 = v73;
                do
                {
                  v14 = *(_OWORD *)(v76 - 16);
                  *(_OWORD *)v76 = v14;
                  v77 = *(_QWORD *)(v76 - 32);
                  v76 -= 16;
                }
                while (v74 < v77);
                *(_QWORD *)v76 = v74;
                *(_QWORD *)(v76 + 8) = v75;
              }
              v36 = (_QWORD *)(v73 + 16);
              a1 = v73;
            }
            while ((_QWORD *)(v73 + 16) != a2);
          }
          return *(double *)&v14;
        }
        if (!a3)
        {
          if ((_QWORD *)v9 != a2)
          {
            v47 = (v11 - 2) >> 1;
            v48 = v47;
            do
            {
              v49 = v48;
              if (v47 >= v48)
              {
                v50 = (2 * v48) | 1;
                v51 = (_QWORD *)(v9 + 16 * v50);
                if (2 * v49 + 2 >= (uint64_t)v11)
                {
                  v52 = *v51;
                }
                else
                {
                  v52 = v51[2];
                  v53 = *v51 < v52;
                  if (*v51 > v52)
                    v52 = *v51;
                  if (v53)
                  {
                    v51 += 2;
                    v50 = 2 * v49 + 2;
                  }
                }
                v54 = (_QWORD *)(v9 + 16 * v49);
                v55 = *v54;
                if (v52 >= *v54)
                {
                  v56 = v54[1];
                  do
                  {
                    v57 = v54;
                    v54 = v51;
                    *v57 = *(_OWORD *)v51;
                    if (v47 < v50)
                      break;
                    v58 = (2 * v50) | 1;
                    v51 = (_QWORD *)(v9 + 16 * v58);
                    v50 = 2 * v50 + 2;
                    if (v50 >= (uint64_t)v11)
                    {
                      v59 = *v51;
                      v50 = v58;
                    }
                    else
                    {
                      v59 = *v51;
                      v60 = v51[2];
                      if (*v51 <= v60)
                        v59 = v51[2];
                      if (*v51 >= v60)
                        v50 = v58;
                      else
                        v51 += 2;
                    }
                  }
                  while (v59 >= v55);
                  *v54 = v55;
                  v54[1] = v56;
                }
              }
              v48 = v49 - 1;
            }
            while (v49);
            v61 = (unint64_t)v10 >> 4;
            do
            {
              v62 = 0;
              v82 = *(_OWORD *)v9;
              v63 = (_OWORD *)v9;
              do
              {
                v64 = &v63[v62 + 1];
                v65 = (2 * v62) | 1;
                v66 = 2 * v62 + 2;
                if (v66 < v61 && *v64 < v64[2])
                {
                  v64 += 2;
                  v65 = v66;
                }
                *v63 = *(_OWORD *)v64;
                v63 = v64;
                v62 = v65;
              }
              while (v65 <= (uint64_t)((unint64_t)(v61 - 2) >> 1));
              a2 -= 2;
              if (v64 == a2)
              {
                *(_QWORD *)&v14 = v82;
                *(_OWORD *)v64 = v82;
              }
              else
              {
                *(_OWORD *)v64 = *(_OWORD *)a2;
                *(_QWORD *)&v14 = v82;
                *(_OWORD *)a2 = v82;
                v67 = (uint64_t)v64 - v9 + 16;
                if (v67 >= 17)
                {
                  v68 = (((unint64_t)v67 >> 4) - 2) >> 1;
                  v69 = (_OWORD *)(v9 + 16 * v68);
                  v70 = *v64;
                  if (*(_QWORD *)v69 < *v64)
                  {
                    v71 = v64[1];
                    do
                    {
                      v72 = v64;
                      v64 = v69;
                      v14 = *v69;
                      *v72 = *v69;
                      if (!v68)
                        break;
                      v68 = (v68 - 1) >> 1;
                      v69 = (_OWORD *)(v9 + 16 * v68);
                    }
                    while (*(_QWORD *)v69 < v70);
                    *v64 = v70;
                    v64[1] = v71;
                  }
                }
              }
              v53 = v61-- <= 2;
            }
            while (!v53);
          }
          return *(double *)&v14;
        }
        v12 = v11 >> 1;
        v13 = (uint64_t *)(v9 + 16 * (v11 >> 1));
        if ((unint64_t)v10 < 0x801)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)(a1 + 16 * (v11 >> 1)), (uint64_t *)a1, a2 - 2);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16 * (v11 >> 1)), a2 - 2);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)(a1 + 16), v13 - 2, a2 - 4);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)(a1 + 32), (uint64_t *)(a1 + 16 + 16 * v12), a2 - 6);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v13 - 1, v13, (uint64_t *)(a1 + 16 + 16 * v12));
          v79 = *(_OWORD *)a1;
          *(_OWORD *)a1 = *(_OWORD *)v13;
          *(_QWORD *)&v14 = v79;
          *(_OWORD *)v13 = v79;
        }
        --a3;
        v15 = *(_QWORD *)a1;
        if ((a4 & 1) == 0 && *(_QWORD *)(a1 - 16) >= v15)
        {
          if (v15 >= *(_QWORD *)v8)
          {
            v29 = a1 + 16;
            do
            {
              v9 = v29;
              if (v29 >= (unint64_t)a2)
                break;
              v29 += 16;
            }
            while (v15 >= *(_QWORD *)v9);
          }
          else
          {
            v9 = a1;
            do
            {
              v28 = *(_QWORD *)(v9 + 16);
              v9 += 16;
            }
            while (v15 >= v28);
          }
          v30 = (__int128 *)a2;
          if (v9 < (unint64_t)a2)
          {
            v30 = (__int128 *)a2;
            do
              v31 = *((_QWORD *)v30-- - 2);
            while (v15 < v31);
          }
          v32 = *(_QWORD *)(a1 + 8);
          while (v9 < (unint64_t)v30)
          {
            v80 = *(_OWORD *)v9;
            *(_OWORD *)v9 = *v30;
            *(_QWORD *)&v14 = v80;
            *v30 = v80;
            do
            {
              v33 = *(_QWORD *)(v9 + 16);
              v9 += 16;
            }
            while (v15 >= v33);
            do
              v34 = *((_QWORD *)v30-- - 2);
            while (v15 < v34);
          }
          v35 = (__int128 *)(v9 - 16);
          if (v9 - 16 != a1)
          {
            v14 = *v35;
            *(_OWORD *)a1 = *v35;
          }
          a4 = 0;
          *(_QWORD *)(v9 - 16) = v15;
          *(_QWORD *)(v9 - 8) = v32;
          continue;
        }
        v16 = *(_QWORD *)(a1 + 8);
        v17 = a1;
        do
        {
          v18 = v17;
          v19 = *(_QWORD *)(v17 + 16);
          v17 += 16;
        }
        while (v19 < v15);
        v20 = (__int128 *)a2;
        if (v18 == a1)
        {
          v20 = (__int128 *)a2;
          do
          {
            if (v17 >= (unint64_t)v20)
              break;
            v22 = *((_QWORD *)v20-- - 2);
          }
          while (v22 >= v15);
        }
        else
        {
          do
            v21 = *((_QWORD *)v20-- - 2);
          while (v21 >= v15);
        }
        v9 = v17;
        if (v17 < (unint64_t)v20)
        {
          v23 = v20;
          do
          {
            v24 = *(_OWORD *)v9;
            *(_OWORD *)v9 = *v23;
            *v23 = v24;
            do
            {
              v25 = *(_QWORD *)(v9 + 16);
              v9 += 16;
            }
            while (v25 < v15);
            do
              v26 = *((_QWORD *)v23-- - 2);
            while (v26 >= v15);
          }
          while (v9 < (unint64_t)v23);
        }
        if (v9 - 16 != a1)
          *(_OWORD *)a1 = *(_OWORD *)(v9 - 16);
        *(_QWORD *)(v9 - 16) = v15;
        *(_QWORD *)(v9 - 8) = v16;
        if (v17 < (unint64_t)v20)
        {
LABEL_29:
          std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*,false>(a1, v9 - 16, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v27 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, (_QWORD *)(v9 - 16));
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(v9, a2))
        {
          if (v27)
            continue;
          goto LABEL_29;
        }
        a2 = (_QWORD *)(v9 - 16);
        if (!v27)
          goto LABEL_1;
        return *(double *)&v14;
    }
  }
}

  v8 = (__int128 *)(a2 - 2);
  v9 = a1;
  while (2)
  {
    a1 = v9;
    v10 = (uint64_t)a2 - v9;
    v11 = (uint64_t)((uint64_t)a2 - v9) >> 4;
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
        return *(double *)&v14;
      case 2uLL:
        if (*(_QWORD *)v8 < *(_QWORD *)v9)
        {
          v81 = *(_OWORD *)v9;
          *(_OWORD *)v9 = *v8;
          *(_QWORD *)&v14 = v81;
          *v8 = v81;
        }
        return *(double *)&v14;
      case 3uLL:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v9, (uint64_t *)(v9 + 16), a2 - 2);
        return *(double *)&v14;
      case 4uLL:
        *(_QWORD *)&v14 = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v9, (uint64_t *)(v9 + 16), (uint64_t *)(v9 + 32), (_OWORD *)a2 - 1).n128_u64[0];
        return *(double *)&v14;
      case 5uLL:
        *(_QWORD *)&v14 = std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v9, (uint64_t *)(v9 + 16), (uint64_t *)(v9 + 32), (__n128 *)(v9 + 48), (__n128 *)a2 - 1).n128_u64[0];
        return *(double *)&v14;
      default:
        if (v10 <= 383)
        {
          v36 = (_QWORD *)(v9 + 16);
          v38 = (_QWORD *)v9 == a2 || v36 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v38)
            {
              v39 = 0;
              v40 = (_QWORD *)v9;
              do
              {
                v41 = v36;
                v42 = v40[2];
                if (v42 < *v40)
                {
                  v43 = v40[3];
                  v44 = v39;
                  while (1)
                  {
                    v14 = *(_OWORD *)(v9 + v44);
                    *(_OWORD *)(v9 + v44 + 16) = v14;
                    if (!v44)
                      break;
                    v45 = *(_QWORD *)(v9 + v44 - 16);
                    v44 -= 16;
                    if (v42 >= v45)
                    {
                      v46 = (_QWORD *)(v9 + v44 + 16);
                      goto LABEL_73;
                    }
                  }
                  v46 = (_QWORD *)v9;
LABEL_73:
                  *v46 = v42;
                  v46[1] = v43;
                }
                v36 = v41 + 2;
                v39 += 16;
                v40 = v41;
              }
              while (v41 + 2 != a2);
            }
          }
          else if (!v38)
          {
            do
            {
              v73 = (uint64_t)v36;
              v74 = *(_QWORD *)(a1 + 16);
              if (v74 < *(_QWORD *)a1)
              {
                v75 = *(_QWORD *)(a1 + 24);
                v76 = v73;
                do
                {
                  v14 = *(_OWORD *)(v76 - 16);
                  *(_OWORD *)v76 = v14;
                  v77 = *(_QWORD *)(v76 - 32);
                  v76 -= 16;
                }
                while (v74 < v77);
                *(_QWORD *)v76 = v74;
                *(_QWORD *)(v76 + 8) = v75;
              }
              v36 = (_QWORD *)(v73 + 16);
              a1 = v73;
            }
            while ((_QWORD *)(v73 + 16) != a2);
          }
          return *(double *)&v14;
        }
        if (!a3)
        {
          if ((_QWORD *)v9 != a2)
          {
            v47 = (v11 - 2) >> 1;
            v48 = v47;
            do
            {
              v49 = v48;
              if (v47 >= v48)
              {
                v50 = (2 * v48) | 1;
                v51 = (_QWORD *)(v9 + 16 * v50);
                if (2 * v49 + 2 >= (uint64_t)v11)
                {
                  v52 = *v51;
                }
                else
                {
                  v52 = v51[2];
                  v53 = *v51 < v52;
                  if (*v51 > v52)
                    v52 = *v51;
                  if (v53)
                  {
                    v51 += 2;
                    v50 = 2 * v49 + 2;
                  }
                }
                v54 = (_QWORD *)(v9 + 16 * v49);
                v55 = *v54;
                if (v52 >= *v54)
                {
                  v56 = v54[1];
                  do
                  {
                    v57 = v54;
                    v54 = v51;
                    *v57 = *(_OWORD *)v51;
                    if (v47 < v50)
                      break;
                    v58 = (2 * v50) | 1;
                    v51 = (_QWORD *)(v9 + 16 * v58);
                    v50 = 2 * v50 + 2;
                    if (v50 >= (uint64_t)v11)
                    {
                      v59 = *v51;
                      v50 = v58;
                    }
                    else
                    {
                      v59 = *v51;
                      v60 = v51[2];
                      if (*v51 <= v60)
                        v59 = v51[2];
                      if (*v51 >= v60)
                        v50 = v58;
                      else
                        v51 += 2;
                    }
                  }
                  while (v59 >= v55);
                  *v54 = v55;
                  v54[1] = v56;
                }
              }
              v48 = v49 - 1;
            }
            while (v49);
            v61 = (unint64_t)v10 >> 4;
            do
            {
              v62 = 0;
              v82 = *(_OWORD *)v9;
              v63 = (_OWORD *)v9;
              do
              {
                v64 = &v63[v62 + 1];
                v65 = (2 * v62) | 1;
                v66 = 2 * v62 + 2;
                if (v66 < v61 && *v64 < v64[2])
                {
                  v64 += 2;
                  v65 = v66;
                }
                *v63 = *(_OWORD *)v64;
                v63 = v64;
                v62 = v65;
              }
              while (v65 <= (uint64_t)((unint64_t)(v61 - 2) >> 1));
              a2 -= 2;
              if (v64 == a2)
              {
                *(_QWORD *)&v14 = v82;
                *(_OWORD *)v64 = v82;
              }
              else
              {
                *(_OWORD *)v64 = *(_OWORD *)a2;
                *(_QWORD *)&v14 = v82;
                *(_OWORD *)a2 = v82;
                v67 = (uint64_t)v64 - v9 + 16;
                if (v67 >= 17)
                {
                  v68 = (((unint64_t)v67 >> 4) - 2) >> 1;
                  v69 = (_OWORD *)(v9 + 16 * v68);
                  v70 = *v64;
                  if (*(_QWORD *)v69 < *v64)
                  {
                    v71 = v64[1];
                    do
                    {
                      v72 = v64;
                      v64 = v69;
                      v14 = *v69;
                      *v72 = *v69;
                      if (!v68)
                        break;
                      v68 = (v68 - 1) >> 1;
                      v69 = (_OWORD *)(v9 + 16 * v68);
                    }
                    while (*(_QWORD *)v69 < v70);
                    *v64 = v70;
                    v64[1] = v71;
                  }
                }
              }
              v53 = v61-- <= 2;
            }
            while (!v53);
          }
          return *(double *)&v14;
        }
        v12 = v11 >> 1;
        v13 = (uint64_t *)(v9 + 16 * (v11 >> 1));
        if ((unint64_t)v10 < 0x801)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)(a1 + 16 * (v11 >> 1)), (uint64_t *)a1, a2 - 2);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16 * (v11 >> 1)), a2 - 2);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)(a1 + 16), v13 - 2, a2 - 4);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)(a1 + 32), (uint64_t *)(a1 + 16 + 16 * v12), a2 - 6);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)v13 - 1, v13, (uint64_t *)(a1 + 16 + 16 * v12));
          v79 = *(_OWORD *)a1;
          *(_OWORD *)a1 = *(_OWORD *)v13;
          *(_QWORD *)&v14 = v79;
          *(_OWORD *)v13 = v79;
        }
        --a3;
        v15 = *(_QWORD *)a1;
        if ((a4 & 1) == 0 && *(_QWORD *)(a1 - 16) >= v15)
        {
          if (v15 >= *(_QWORD *)v8)
          {
            v29 = a1 + 16;
            do
            {
              v9 = v29;
              if (v29 >= (unint64_t)a2)
                break;
              v29 += 16;
            }
            while (v15 >= *(_QWORD *)v9);
          }
          else
          {
            v9 = a1;
            do
            {
              v28 = *(_QWORD *)(v9 + 16);
              v9 += 16;
            }
            while (v15 >= v28);
          }
          v30 = (__int128 *)a2;
          if (v9 < (unint64_t)a2)
          {
            v30 = (__int128 *)a2;
            do
              v31 = *((_QWORD *)v30-- - 2);
            while (v15 < v31);
          }
          v32 = *(_QWORD *)(a1 + 8);
          while (v9 < (unint64_t)v30)
          {
            v80 = *(_OWORD *)v9;
            *(_OWORD *)v9 = *v30;
            *(_QWORD *)&v14 = v80;
            *v30 = v80;
            do
            {
              v33 = *(_QWORD *)(v9 + 16);
              v9 += 16;
            }
            while (v15 >= v33);
            do
              v34 = *((_QWORD *)v30-- - 2);
            while (v15 < v34);
          }
          v35 = (__int128 *)(v9 - 16);
          if (v9 - 16 != a1)
          {
            v14 = *v35;
            *(_OWORD *)a1 = *v35;
          }
          a4 = 0;
          *(_QWORD *)(v9 - 16) = v15;
          *(_QWORD *)(v9 - 8) = v32;
          continue;
        }
        v16 = *(_QWORD *)(a1 + 8);
        v17 = a1;
        do
        {
          v18 = v17;
          v19 = *(_QWORD *)(v17 + 16);
          v17 += 16;
        }
        while (v19 < v15);
        v20 = (__int128 *)a2;
        if (v18 == a1)
        {
          v20 = (__int128 *)a2;
          do
          {
            if (v17 >= (unint64_t)v20)
              break;
            v22 = *((_QWORD *)v20-- - 2);
          }
          while (v22 >= v15);
        }
        else
        {
          do
            v21 = *((_QWORD *)v20-- - 2);
          while (v21 >= v15);
        }
        v9 = v17;
        if (v17 < (unint64_t)v20)
        {
          v23 = v20;
          do
          {
            v24 = *(_OWORD *)v9;
            *(_OWORD *)v9 = *v23;
            *v23 = v24;
            do
            {
              v25 = *(_QWORD *)(v9 + 16);
              v9 += 16;
            }
            while (v25 < v15);
            do
              v26 = *((_QWORD *)v23-- - 2);
            while (v26 >= v15);
          }
          while (v9 < (unint64_t)v23);
        }
        if (v9 - 16 != a1)
          *(_OWORD *)a1 = *(_OWORD *)(v9 - 16);
        *(_QWORD *)(v9 - 16) = v15;
        *(_QWORD *)(v9 - 8) = v16;
        if (v17 < (unint64_t)v20)
        {
LABEL_29:
          std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(a1, v9 - 16, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v27 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(a1, (_QWORD *)(v9 - 16));
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(v9, a2))
        {
          if (v27)
            continue;
          goto LABEL_29;
        }
        a2 = (_QWORD *)(v9 - 16);
        if (!v27)
          goto LABEL_1;
        return *(double *)&v14;
    }
  }
}

uint64_t **google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *a1;
  v3 = (uint64_t *)(*a1)[2];
  if (v3)
    goto LABEL_2;
  v16 = 0;
  v4 = a1[1];
  v5 = (unint64_t)a1[2] & (v4[1] - 1);
  a1[2] = (uint64_t *)v5;
  v6 = v4[4];
  v7 = *(uint64_t **)(v6 + 8 * v5);
  if (v7 == v2)
    goto LABEL_11;
  if (v7 && v7 != *(uint64_t **)(v6 + 8 * (v5 ^ 1)))
  {
    while (1)
    {
      v7 = (uint64_t *)v7[2];
      if (!v7)
        break;
      if (v7 == v2)
        goto LABEL_11;
    }
  }
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v17, v4, v2, &v16);
  v5 = v18;
  a1[2] = (uint64_t *)v18;
  v8 = a1[1][4];
  v9 = *(_QWORD *)(v8 + 8 * v5);
  if (!v9 || v9 != *(_QWORD *)(v8 + 8 * (v5 ^ 1)))
  {
LABEL_11:
    v10 = v5 + 1;
LABEL_12:
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a1, v10);
    return a1;
  }
  v12 = v16;
  v13 = (_QWORD *)v16[1];
  if (v13)
  {
    do
    {
      v14 = v13;
      v13 = (_QWORD *)*v13;
    }
    while (v13);
  }
  else
  {
    do
    {
      v14 = (_QWORD *)v12[2];
      v15 = *v14 == (_QWORD)v12;
      v12 = v14;
    }
    while (!v15);
  }
  v16 = v14;
  if (v14 == (_QWORD *)(v9 + 8))
  {
    v10 = v5 + 2;
    goto LABEL_12;
  }
  v3 = (uint64_t *)v14[4];
LABEL_2:
  *a1 = v3;
  return a1;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(uint64_t a1, uint64_t a2, google::protobuf::Arena *a3)
{
  uint64_t result;

  if (a3)
  {
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = a3;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  else
  {
    result = operator new();
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
  }
  *(_QWORD *)result = &off_1E95672B0;
  *(_QWORD *)(result + 48) = a1;
  *(_QWORD *)(result + 56) = a2;
  *(_DWORD *)(result + 40) = 3;
  return result;
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *result)
{
  *result = &off_1E9567358;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E9567358;
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1D3BDFB5D);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E9567A90;
  *(_QWORD *)(result + 8) = v3;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  uint64_t result;
  uint64_t v5;

  if (a2)
  {
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = a2;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  else
  {
    result = operator new();
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_DWORD *)(result + 40) = 0;
  }
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E9567A90;
  *(_QWORD *)(result + 8) = v5;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetArena(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Clear(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::IsInitialized()
{
  return 1;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2;
  double result;
  double *v6;

  v2 = a2[10];
  if (v2)
  {
    if ((v2 & 1) != 0)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 136))(a2);
      *(_DWORD *)(a1 + 40) |= 1u;
      v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      v6 = (double *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 144))(a2);
      result = *v6;
      *(double *)(a1 + 24) = *v6;
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
  return result;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  char *v5;
  unint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  unint64_t Varint64Fallback;
  char *v11;
  int v12;
  unint64_t *v13;
  char v14;
  int v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL8 result;
  unint64_t v20;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(TagFallback) = 0;
      }
      else
      {
        TagFallback = *v5;
        if ((*v5 & 0x80000000) == 0)
        {
          *a2 = v5 + 1;
          goto LABEL_6;
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
      if ((_DWORD)TagFallback == 8)
        break;
      if ((_DWORD)TagFallback == 17)
      {
        v12 = *(_DWORD *)(a1 + 40);
        v13 = (unint64_t *)*a2;
        v8 = (unint64_t)a2[1];
        goto LABEL_21;
      }
      if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
        return 1;
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0;
    }
    v7 = *(_DWORD *)(a1 + 40) | 1;
    *(_DWORD *)(a1 + 40) = v7;
    v9 = *a2;
    v8 = (unint64_t)a2[1];
    if ((unint64_t)*a2 >= v8 || *v9 < 0)
    {
      Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
      if ((v14 & 1) == 0)
        return 0;
      v7 = *(_DWORD *)(a1 + 40);
      v11 = *a2;
      v8 = (unint64_t)a2[1];
    }
    else
    {
      Varint64Fallback = *v9;
      v11 = v9 + 1;
      *a2 = v11;
    }
    *(_QWORD *)(a1 + 16) = Varint64Fallback;
    v12 = v7 | 1;
    *(_DWORD *)(a1 + 40) = v7 | 1;
    if ((unint64_t)v11 < v8 && *v11 == 17)
    {
      v13 = (unint64_t *)(v11 + 1);
      *a2 = v11 + 1;
LABEL_21:
      v15 = v12 | 2;
      *(_DWORD *)(a1 + 40) = v12 | 2;
      v20 = 0;
      if ((int)v8 - (int)v13 < 8)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v20);
        if (!result)
          return result;
        v18 = v20;
        v15 = *(_DWORD *)(a1 + 40);
        v16 = *a2;
        v8 = (unint64_t)a2[1];
      }
      else
      {
        v17 = *v13;
        v16 = (char *)(v13 + 1);
        v18 = v17;
        *a2 = v16;
      }
      *(_QWORD *)(a1 + 24) = v18;
      *(_DWORD *)(a1 + 40) = v15 | 2;
      if (v16 == (char *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        break;
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(_DWORD *a1)
{
  int v2;
  unint64_t v3;
  uint64_t v4;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v3 = ((9 * (__clz(*(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_5:
    v4 = 0;
    return v4 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_5;
LABEL_3:
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v4 = 9;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t *v4;
  google::protobuf::io::CodedOutputStream *v5;
  double *v6;
  google::protobuf::io::CodedOutputStream *v7;

  v4 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteInt64(1, *v4, a2, v5);
  v6 = (double *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, *v6, v7);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetCachedSize(_DWORD *a1)
{
  int v2;
  int v3;
  int v4;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v3 = ((9 * (__clz(*(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_5:
    v4 = 0;
    return (v4 + v3);
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_5;
LABEL_3:
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v4 = 9;
  return (v4 + v3);
}

_BYTE *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  unint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  *a3 = 8;
  v6 = a3 + 1;
  if (v5 < 0x80)
  {
    LOBYTE(v7) = v5;
  }
  else
  {
    do
    {
      *v6++ = v5 | 0x80;
      v7 = v5 >> 7;
      v8 = v5 >> 14;
      v5 >>= 7;
    }
    while (v8);
  }
  *v6 = v7;
  v9 = *(_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  v6[1] = 17;
  *(_QWORD *)(v6 + 2) = v9;
  return v6 + 10;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(_QWORD *result)
{
  *result = &off_1E9567358;
  return result;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E9567358;
  JUMPOUT(0x1D8251A40);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::key(uint64_t a1)
{
  return a1 + 16;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::value(uint64_t a1)
{
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  if (!*(_QWORD *)(a1 + 8))
  {
    v3 = 3;
    v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1 + 24;
}

void sub_1D3B42FE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__int128 *std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(__int128 *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = *a2;
  v4 = *a3;
  if (*a2 >= *(_QWORD *)result)
  {
    if (v4 < v3)
    {
      v6 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v6;
      if (*a2 < *(_QWORD *)result)
      {
        v7 = *result;
        *result = *(_OWORD *)a2;
        *(_OWORD *)a2 = v7;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      v8 = *result;
      *result = *(_OWORD *)a2;
      *(_OWORD *)a2 = v8;
      if (*a3 >= *a2)
        return result;
      v5 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
    }
    else
    {
      v5 = *result;
      *result = *(_OWORD *)a3;
    }
    *(_OWORD *)a3 = v5;
  }
  return result;
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(__int128 *a1, uint64_t *a2, uint64_t *a3, _OWORD *a4)
{
  __n128 result;

  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, a2, a3);
  if (*(_QWORD *)a4 < *a3)
  {
    result = *(__n128 *)a3;
    *(_OWORD *)a3 = *a4;
    *a4 = result;
    if (*a3 < *a2)
    {
      result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*a2 < *(_QWORD *)a1)
      {
        result = (__n128)*a1;
        *a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

__n128 std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(__int128 *a1, uint64_t *a2, uint64_t *a3, __n128 *a4, __n128 *a5)
{
  __n128 result;

  result.n128_u64[0] = std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(a1, a2, a3, a4).n128_u64[0];
  if ((int64_t)a5->n128_u64[0] < (int64_t)a4->n128_u64[0])
  {
    result = *a4;
    *a4 = *a5;
    *a5 = result;
    if ((int64_t)a4->n128_u64[0] < *a3)
    {
      result = *(__n128 *)a3;
      *(__n128 *)a3 = *a4;
      *a4 = result;
      if (*a3 < *a2)
      {
        result = *(__n128 *)a2;
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(__n128 *)a3 = result;
        if (*a2 < *(_QWORD *)a1)
        {
          result = (__n128)*a1;
          *a1 = *(_OWORD *)a2;
          *(__n128 *)a2 = result;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _BOOL8 result;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = ((uint64_t)a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = (__int128 *)(a2 - 2);
      if (*(a2 - 2) < *(_QWORD *)a1)
      {
        v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (_OWORD *)a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (__n128 *)(a1 + 48), (__n128 *)a2 - 1);
      return 1;
    default:
      v8 = (_QWORD *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32));
      v9 = (_QWORD *)(a1 + 48);
      if ((_QWORD *)(a1 + 48) == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = *v9;
    if (*v9 < *v8)
    {
      v13 = v9[1];
      v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32)
          break;
        v15 = *(_QWORD *)(a1 + v14 + 16);
        v14 -= 16;
        if (v12 >= v15)
        {
          v16 = (_QWORD *)(a1 + v14 + 48);
          goto LABEL_12;
        }
      }
      v16 = (_QWORD *)a1;
LABEL_12:
      *v16 = v12;
      v16[1] = v13;
      if (++v11 == 8)
        return v9 + 2 == a2;
    }
    v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2)
      return 1;
  }
}

_QWORD *google::protobuf::Map<long long,double>::operator[](uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  google::protobuf::Arena *v12;
  uint64_t *Aligned;
  _QWORD *v14;
  uint64_t v16;
  char v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20[4];
  _QWORD v21[4];

  v4 = *(_QWORD **)(a1 + 16);
  v19 = (unint64_t)*a2;
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(v21, v4, (uint64_t *)&v19, 0);
  v6 = v21[0];
  if (v21[0])
    goto LABEL_12;
  v7 = v4[1];
  v8 = *v4 + 1;
  v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      v16 = 2 * v7;
LABEL_26:
      google::protobuf::Map<long long,double>::InnerMap::Resize((uint64_t)v4, v16, v5);
      google::protobuf::Map<long long,double>::InnerMap::FindHelper(v20, v4, (uint64_t *)&v19, 0);
      v11 = v20[3];
      goto LABEL_8;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    v17 = 0;
    v18 = ((5 * v8) >> 2) + 1;
    do
      ++v17;
    while (v18 << v17 < v9);
    v16 = v7 >> v17 <= 8 ? 8 : v7 >> v17;
    if (v16 != v7)
      goto LABEL_26;
  }
  v11 = v21[3];
LABEL_8:
  v12 = (google::protobuf::Arena *)v4[5];
  if (v12)
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E0DE4EE8], 24);
  else
    Aligned = (uint64_t *)operator new(0x18uLL);
  *(_OWORD *)Aligned = v19;
  google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v20, (uint64_t)v4, v11, Aligned);
  ++*v4;
  v6 = v20[0];
LABEL_12:
  v14 = *(_QWORD **)(v6 + 8);
  if (!v14)
  {
    if (*(_QWORD *)a1)
    {
      v14 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E0DE4EE8], 16);
      *v14 = 0;
      v14[1] = 0;
      *v14 = *a2;
    }
    else
    {
      v14 = (_QWORD *)operator new();
      *v14 = *a2;
      v14[1] = 0;
    }
    *(_QWORD *)(v6 + 8) = v14;
  }
  return v14 + 1;
}

double google::protobuf::Map<long long,double>::erase(uint64_t a1, uint64_t *a2)
{
  double result;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v6, *(_QWORD **)(a1 + 16), a2, 0);
  result = *(double *)&v6;
  if ((_QWORD)v6)
  {
    v4 = v6;
    v5 = v7;
    *(_QWORD *)&result = google::protobuf::Map<long long,double>::erase((uint64_t)&v6, (_QWORD *)a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(google::protobuf::Arena *a1)
{
  uint64_t result;

  if (a1)
  {
    *(_DWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)(result + 32) = a1;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  else
  {
    result = operator new();
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_DWORD *)(result + 40) = 0;
  }
  *(_QWORD *)result = &off_1E9567A90;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<long long,double>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  double *v2;
  uint64_t v3;
  double result;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 136))(*(_QWORD *)(a1 + 32));
  v2 = (double *)google::protobuf::Map<long long,double>::operator[](*(_QWORD *)(a1 + 8), (_QWORD *)(a1 + 16));
  *(_QWORD *)(a1 + 24) = v2;
  v3 = *(_QWORD *)(a1 + 32);
  *(_DWORD *)(v3 + 40) |= 2u;
  result = *(double *)(v3 + 24);
  *v2 = result;
  return result;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  unint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v4 = a4;
  v5 = a3;
  v7 = result;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[2] = 0;
    *(_QWORD *)(v8 + 8 * a3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(_QWORD *)(v8 + 8 * (a3 ^ 1)))
  {
    v10 = 0;
    v11 = *(_QWORD *)(v8 + 8 * a3);
    do
    {
      ++v10;
      v11 = *(_QWORD *)(v11 + 16);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[2] = v9;
      *(_QWORD *)(v8 + 8 * a3) = a4;
LABEL_11:
      *v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<long long,double>::InnerMap::TreeConvert(a2, a3);
    v4[2] = 0;
    v14 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8 * v5);
    v15 = v4;
    result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    v4 = (uint64_t *)result[4];
LABEL_8:
    v12 = *(_QWORD *)(a2 + 24);
    if (v5 < v12)
      v12 = v5;
    *(_QWORD *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[2] = 0;
  v13 = *(_QWORD *)(v8 + 8 * a3);
  v15 = a4;
  result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v13, a4, (uint64_t *)&v15);
  *v7 = result[4];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  google::protobuf::Arena *v4;
  _QWORD *Aligned;
  uint64_t v6;
  uint64_t v7;
  uint64_t **v8;
  _QWORD **v9;
  uint64_t *v10;
  uint64_t **v11;
  uint64_t v12;
  uint64_t **v13;
  BOOL v14;
  uint64_t v15;
  uint64_t **v16;
  uint64_t **v17;
  uint64_t *v18;
  _QWORD *v19;
  _QWORD **v20;
  uint64_t v21;
  uint64_t *result;
  _QWORD **v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4)
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E0DE4EE8], 32);
  else
    Aligned = operator new(0x20uLL);
  v6 = (uint64_t)Aligned;
  v25 = *(_QWORD *)(a1 + 40);
  v7 = v25;
  v26 = 0;
  v23 = &v24;
  v24 = 0;
  Aligned[1] = 0;
  v8 = (uint64_t **)(Aligned + 1);
  Aligned[2] = v7;
  Aligned[3] = 0;
  *Aligned = Aligned + 1;
  v9 = v23;
  if (v23 != &v24)
  {
    do
    {
      v10 = *(uint64_t **)(v6 + 8);
      v11 = v8;
      if (*(uint64_t ***)v6 == v8)
        goto LABEL_11;
      v12 = *(_QWORD *)(v6 + 8);
      v13 = v8;
      if (v10)
      {
        do
        {
          v11 = (uint64_t **)v12;
          v12 = *(_QWORD *)(v12 + 8);
        }
        while (v12);
      }
      else
      {
        do
        {
          v11 = (uint64_t **)v13[2];
          v14 = *v11 == (uint64_t *)v13;
          v13 = v11;
        }
        while (v14);
      }
      v15 = *v9[4];
      if (*v11[4] < v15)
      {
LABEL_11:
        if (v10)
          v16 = v11;
        else
          v16 = v8;
        if (v10)
          v17 = v11 + 1;
        else
          v17 = v8;
      }
      else
      {
        v16 = v8;
        v17 = v8;
        if (v10)
        {
          v17 = v8;
          while (1)
          {
            while (1)
            {
              v16 = (uint64_t **)v10;
              v21 = *(_QWORD *)v10[4];
              if (v15 >= v21)
                break;
              v10 = *v16;
              v17 = v16;
              if (!*v16)
                goto LABEL_18;
            }
            if (v21 >= v15)
              break;
            v17 = v16 + 1;
            v10 = v16[1];
            if (!v10)
              goto LABEL_18;
          }
        }
      }
      if (!*v17)
      {
LABEL_18:
        v18 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(v6 + 16));
        v18[4] = (uint64_t)v9[4];
        std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)v6, (uint64_t)v16, v17, v18);
      }
      v19 = v9[1];
      if (v19)
      {
        do
        {
          v20 = (_QWORD **)v19;
          v19 = (_QWORD *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          v20 = (_QWORD **)v9[2];
          v14 = *v20 == v9;
          v9 = v20;
        }
        while (!v14);
      }
      v9 = v20;
    }
    while (v20 != &v24);
  }
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v23, v24);
  google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  result = google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_1D3B43948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;

  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v10, *(_QWORD **)(v10 + 8));
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t v7;
  uint64_t **v8;
  uint64_t v9;
  uint64_t *v10;

  v6 = (uint64_t **)(a1 + 8);
  v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = *(_QWORD *)v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = (uint64_t **)(a1 + 8);
LABEL_10:
    v10 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(a1 + 16));
    v10[4] = *a3;
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t *google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t *v6;

  v3 = (uint64_t *)result[a2];
  if (v3)
  {
    do
    {
      v6 = v3;
      result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(a3, v3, (uint64_t *)&v6);
      v5 = (uint64_t *)v3[2];
      v3[2] = 0;
      v3 = v5;
    }
    while (v5);
  }
  return result;
}

void google::protobuf::Map<long long,double>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  google::protobuf::Arena **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15[3];

  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2;
  v6 = *(_QWORD **)(a1 + 32);
  v7 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        v11 = *(_QWORD **)v9;
        do
        {
          google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v15, a1, (*(_QWORD *)(a1 + 8) - 1) & (*(_QWORD *)(a1 + 16) + *(_QWORD *)v11[4]), (uint64_t *)v11[4]);
          v12 = (_QWORD *)v11[1];
          if (v12)
          {
            do
            {
              v13 = v12;
              v12 = (_QWORD *)*v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              v13 = (_QWORD *)v11[2];
              v14 = *v13 == (_QWORD)v11;
              v11 = v13;
            }
            while (!v14);
          }
          v11 = v13;
        }
        while (v13 != (_QWORD *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(_QWORD *)(a1 + 40), (_QWORD **)v9);
      }
      else
      {
        do
        {
          v10 = *(_QWORD *)(v9 + 16);
          google::protobuf::Map<long long,double>::InnerMap::InsertUnique(v15, a1, (*(_QWORD *)(a1 + 8) - 1) & (*(_QWORD *)(a1 + 16) + *(_QWORD *)v9), (uint64_t *)v9);
          v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(_QWORD *)(a1 + 40))
    operator delete(v6);
}

void *CoreML::Specification::Int64ToDoubleMap::MergeFrom(CoreML::Specification::Int64ToDoubleMap *this, const CoreML::Specification::Int64ToDoubleMap *a2)
{
  uint64_t v4;
  void *result;
  uint64_t *v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10[3];

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  result = google::protobuf::Map<std::string,std::string>::begin(v10, *((_QWORD **)a2 + 5));
  v6 = v10[0];
  if (v10[0])
  {
    v7 = (char *)this + 24;
    do
    {
      v8 = (_QWORD *)v6[1];
      v9 = v8[1];
      *google::protobuf::Map<long long,double>::operator[]((uint64_t)v7, v8) = v9;
      result = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v10);
      v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64ToDoubleMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToDoubleMap>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToDoubleMap>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

_QWORD *google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(_QWORD *result)
{
  *result = &off_1E9567358;
  return result;
}

void google::protobuf::internal::MapEntryLite<long long,double,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E9567358;
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::Map<std::string,double>::InnerMap::InnerMap(_QWORD *a1, google::protobuf::Arena *a2)
{
  std::random_device *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  google::protobuf::Arena **v9;
  __int128 v11;
  unsigned int v12[258];
  std::random_device v13;

  *a1 = 0;
  v4 = std::random_device::random_device[abi:ne180100](&v13);
  v5 = MEMORY[0x1D82518F0](v4);
  v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1)
    v6 = 1;
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  v11 = xmmword_1D3BDFCA0;
  v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1D3B43DA8(void *a1)
{
  uint64_t v1;

  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D3B43D64);
}

void CoreML::Specification::StringToDoubleMap::~StringToDoubleMap(CoreML::Specification::StringToDoubleMap *this)
{
  *(_QWORD *)this = &off_1E955DFF8;
  google::protobuf::Map<std::string,long long>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955DFF8;
  google::protobuf::Map<std::string,long long>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::StringToDoubleMap::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringToDoubleMap");
}

CoreML::Specification::StringToDoubleMap *CoreML::Specification::StringToDoubleMap::New(CoreML::Specification::StringToDoubleMap *this)
{
  return CoreML::Specification::StringToDoubleMap::New(this, 0);
}

CoreML::Specification::StringToDoubleMap *CoreML::Specification::StringToDoubleMap::New(CoreML::Specification::StringToDoubleMap *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::StringToDoubleMap *v3;

  v3 = (CoreML::Specification::StringToDoubleMap *)operator new();
  CoreML::Specification::StringToDoubleMap::StringToDoubleMap(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::StringToDoubleMap>(a2, v3);
  return v3;
}

void sub_1D3B43EB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::StringToDoubleMap::Clear(CoreML::Specification::StringToDoubleMap *this)
{
  google::protobuf::Map<std::string,long long>::clear((_QWORD *)this + 3);
}

uint64_t CoreML::Specification::StringToDoubleMap::IsInitialized(CoreML::Specification::StringToDoubleMap *this)
{
  return 1;
}

uint64_t CoreML::Specification::StringToDoubleMap::MergePartialFromCodedStream(CoreML::Specification::StringToDoubleMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::Arena **v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  int v12;
  char *v13;
  int VarintSizeAsIntFallback;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t *v22;
  char *v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  google::protobuf::Arena **v28;
  _QWORD *v29;
  _DWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  __int128 v33;
  int v34;
  __n128 v35;
  uint64_t v36;
  std::string *v37;
  __n128 v38;
  unsigned int *p_p;
  int v40;
  _BOOL4 v41;
  BOOL v42;
  google::protobuf::Arena **v44;
  _QWORD *v45;
  std::string __p;
  google::protobuf::Arena **v47;
  _DWORD *v48;
  unint64_t v49;

  v4 = (google::protobuf::Arena **)((char *)this + 16);
  v5 = (_QWORD *)((char *)this + 24);
  while (1)
  {
    v6 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v7) = 0;
    }
    else
    {
      v7 = *v6;
      if (*v6 >= 1)
      {
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_12;
        goto LABEL_8;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
    v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v8 & 0x100000000) == 0)
      goto LABEL_12;
LABEL_8:
    if (v8 == 10 && (v8 & 0xFFFFFFF8) == 8)
    {
      v44 = v4;
      v45 = v5;
      memset(&__p, 0, sizeof(__p));
      v48 = 0;
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v13 & 0x80000000) == 0)
      {
        VarintSizeAsIntFallback = *v13;
        *(_QWORD *)a2 = v13 + 1;
        goto LABEL_24;
      }
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        goto LABEL_83;
LABEL_24:
      v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v16 = *((_DWORD *)a2 + 13);
      v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 13) = v16;
      if (v16 < 0 == v17)
      {
        v18 = v15;
        v19 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && *v19 == 10)
        {
          *(_QWORD *)a2 = v19 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p))
            goto LABEL_83;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) >= 1 && **(_BYTE **)a2 == 17)
          {
            v20 = *(_QWORD *)v45[2];
            v47 = google::protobuf::Map<std::string,double>::operator[]((uint64_t)v45, (uint64_t)&__p);
            if (v20 != *(_QWORD *)v45[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              v21 = v47;
              v49 = 0;
              v22 = *(unint64_t **)a2;
              v23 = (char *)*((_QWORD *)a2 + 1);
              if ((int)((_DWORD)v23 - *(_QWORD *)a2) < 8)
              {
                if (google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v49))
                {
                  v26 = v49;
                  v24 = *(char **)a2;
                  v23 = (char *)*((_QWORD *)a2 + 1);
                  goto LABEL_33;
                }
                google::protobuf::Map<std::string,long long>::erase(v45, (unsigned __int8 *)&__p);
                goto LABEL_83;
              }
              v25 = *v22;
              v24 = (char *)(v22 + 1);
              v26 = v25;
              *(_QWORD *)a2 = v24;
LABEL_33:
              *v21 = v26;
              if (v24 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                *((_BYTE *)a2 + 36) = 1;
LABEL_60:
                if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18))
                {
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    p_p = (unsigned int *)&__p;
                  else
                    p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                    v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                  else
                    v40 = __p.__r_.__value_.__r.__words[1];
                  v41 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v40, 0, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
                  v42 = v41;
                  if (v41)
                    v12 = 0;
                  else
                    v12 = 6;
                  goto LABEL_70;
                }
                goto LABEL_83;
              }
              v27 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v44);
              if (v48 != (_DWORD *)v27)
              {
                if (v48)
                  (*(void (**)(void))(*(_QWORD *)v48 + 8))();
                v48 = (_DWORD *)v27;
              }
              v28 = v47;
              v29 = v45;
              *(_DWORD *)(v27 + 40) |= 2u;
              *(_QWORD *)(v27 + 24) = *v28;
              google::protobuf::Map<std::string,long long>::erase(v29, (unsigned __int8 *)&__p);
              v30 = v48;
              v48[10] |= 1u;
              v31 = (uint64_t *)(v30 + 4);
              v32 = *((_QWORD *)v30 + 2);
              if ((uint64_t *)v32 == &google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)v30 + 2, *((google::protobuf::Arena ***)v30 + 4), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
                v32 = *v31;
              }
              if (*(char *)(v32 + 23) < 0)
                operator delete(*(void **)v32);
              v33 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              *(_QWORD *)(v32 + 16) = *((_QWORD *)&__p.__r_.__value_.__l + 2);
              *(_OWORD *)v32 = v33;
              *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
              __p.__r_.__value_.__s.__data_[0] = 0;
              v34 = (*(uint64_t (**)(_DWORD *, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v48 + 88))(v48, a2);
              if (v34)
                v35.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry((uint64_t)&v44);
              if (!(*(uint64_t (**)(_DWORD *, __n128))(*(_QWORD *)v48 + 40))(v48, v35))
              {
LABEL_45:
                if (v34)
                  goto LABEL_60;
                goto LABEL_83;
              }
LABEL_59:
              v48 = 0;
              if ((v34 & 1) != 0)
                goto LABEL_60;
              v42 = 0;
              v12 = 6;
LABEL_72:
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              if (!v42)
                goto LABEL_18;
              goto LABEL_17;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          memset(&__p, 0, sizeof(__p));
        }
        v36 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(*v44);
        if (v48 != (_DWORD *)v36)
        {
          if (v48)
            (*(void (**)(void))(*(_QWORD *)v48 + 8))();
          v48 = (_DWORD *)v36;
        }
        v37 = *(std::string **)(v36 + 16);
        *(_DWORD *)(v36 + 40) |= 1u;
        if (v37 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(v36 + 16), *(google::protobuf::Arena ***)(v36 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v37 = *(std::string **)(v36 + 16);
        }
        std::string::operator=(v37, &__p);
        v34 = (*(uint64_t (**)(_DWORD *, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v48 + 88))(v48, a2);
        if (v34)
          v38.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry((uint64_t)&v44);
        if (!(*(uint64_t (**)(_DWORD *, __n128))(*(_QWORD *)v48 + 40))(v48, v38))
          goto LABEL_45;
        goto LABEL_59;
      }
LABEL_83:
      v42 = 0;
      v12 = 6;
LABEL_70:
      if (v48)
        (*(void (**)(_DWORD *))(*(_QWORD *)v48 + 8))(v48);
      goto LABEL_72;
    }
LABEL_12:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3))return 0;
LABEL_17:
    v12 = 0;
LABEL_18:
    if (v12)
      return 0;
  }
}

void sub_1D3B44398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18)
{
  if (a18)
    (*(void (**)(uint64_t))(*(_QWORD *)a18 + 8))(a18);
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::StringToDoubleMap::ByteSizeLong(CoreML::Specification::StringToDoubleMap *this)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8[3];

  v2 = (_QWORD *)*((_QWORD *)this + 5);
  v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  v4 = 0;
  while (v8[0])
  {
    v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((_QWORD *)v8[0] + 3), *((_QWORD *)v8[0] + 3) + 24, *((google::protobuf::Arena **)this + 2));
    if (v4 != (_DWORD *)v5)
    {
      if (v4)
        (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
      v4 = (_DWORD *)v5;
    }
    v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v8);
  }
  if (v4)
    (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1D3B44494(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *CoreML::Specification::StringToDoubleMap::SerializeWithCachedSizes(_QWORD *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  google::protobuf::io::CodedOutputStream *v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  unsigned __int8 *v24[3];

  v3 = (unint64_t *)this[5];
  v4 = *v3;
  if (!*v3)
    return this;
  v5 = (uint64_t)this;
  if (*((_BYTE *)a2 + 26))
  {
    if (v4 >= 2 && *((_BYTE *)a2 + 27) != 0)
    {
LABEL_24:
      v13 = operator new[]();
      google::protobuf::Map<std::string,std::string>::begin(v24, *(_QWORD **)(v5 + 40));
      v14 = v24[0];
      if (v24[0])
      {
        v15 = 0;
        do
        {
          *(_QWORD *)(v13 + 8 * v15) = *((_QWORD *)v14 + 3);
          google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v24);
          ++v15;
          v14 = v24[0];
        }
        while (v24[0]);
      }
      else
      {
        v15 = 0;
      }
      v16 = 126 - 2 * __clz(v15);
      if (v15)
        v17 = v16;
      else
        v17 = 0;
      std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(v13, (char *)(v13 + 8 * v15), v17, 1);
      if (v15)
      {
        v18 = 0;
        v19 = 0;
        do
        {
          v21 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*(_QWORD *)(v13 + 8 * v18), *(_QWORD *)(v13 + 8 * v18) + 24, *(google::protobuf::Arena **)(v5 + 16));
          if (v19 != v21)
          {
            if (v19)
              (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
            v19 = v21;
          }
          google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v19, a2, v20);
          v22 = *(unsigned int **)(v13 + 8 * v18);
          if (*((char *)v22 + 23) < 0)
          {
            v22 = *(unsigned int **)v22;
            v23 = *(_QWORD *)(*(_QWORD *)(v13 + 8 * v18) + 8);
          }
          else
          {
            LODWORD(v23) = *((unsigned __int8 *)v22 + 23);
          }
          google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v23, 1, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
          ++v18;
        }
        while (v15 != v18);
        (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
      }
      return (_QWORD *)MEMORY[0x1D8251A28](v13, 0x60C8044C4A2DFLL);
    }
  }
  else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
  {
    goto LABEL_24;
  }
  this = google::protobuf::Map<std::string,std::string>::begin(v24, v3);
  v7 = 0;
  while (v24[0])
  {
    v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(*((_QWORD *)v24[0] + 3), *((_QWORD *)v24[0] + 3) + 24, *(google::protobuf::Arena **)(v5 + 16));
    if (v7 != v9)
    {
      if (v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      v7 = v9;
    }
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
    v10 = (unsigned int *)*((_QWORD *)v24[0] + 3);
    if (*((char *)v10 + 23) < 0)
    {
      v10 = *(unsigned int **)v10;
      v11 = *(_QWORD *)(*((_QWORD *)v24[0] + 3) + 8);
    }
    else
    {
      LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.StringToDoubleMap.MapEntry.key");
    this = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v24);
  }
  if (v7)
    return (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  return this;
}

void sub_1D3B44710(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  MEMORY[0x1D8251A28](v1, 0x60C8044C4A2DFLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StringToDoubleMap::GetCachedSize(CoreML::Specification::StringToDoubleMap *this)
{
  return *((unsigned int *)this + 12);
}

uint64_t std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(uint64_t result, char *a2, uint64_t a3, char a4)
{
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  BOOL v28;
  BOOL v29;
  _QWORD *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  _QWORD *v41;
  char *v42;
  BOOL v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  int64_t v51;
  int64_t v52;
  int64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  _BOOL4 v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  _QWORD *v81;
  _QWORD *v82;
  char *v83;
  BOOL v84;
  _QWORD *v85;
  _QWORD *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  _QWORD *v93;
  char *v94;
  int64_t v95;
  uint64_t v96;
  char *v97;

  v6 = (char *)result;
LABEL_2:
  v94 = a2 - 8;
  v90 = a2 - 24;
  v91 = a2 - 16;
  v7 = v6;
  while (2)
  {
    v8 = v7;
    v9 = a2 - v7;
    v10 = (a2 - v7) >> 3;
    switch(v10)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v40 = *(_QWORD **)v94;
        v41 = *(_QWORD **)v7;
        result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v94, *(_QWORD **)v7);
        if ((_DWORD)result)
        {
          *(_QWORD *)v7 = v40;
          *(_QWORD *)v94 = v41;
        }
        return result;
      case 3:
        return std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v7 + 1, (_QWORD **)v94);
      case 4:
        return std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v7 + 1, (_QWORD **)v7 + 2, (_QWORD **)v94);
      case 5:
        return std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v7 + 1, (_QWORD **)v7 + 2, (_QWORD **)v7 + 3, (_QWORD **)v94);
      default:
        if (v9 <= 191)
        {
          v42 = v7 + 8;
          v44 = v7 == a2 || v42 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v44)
            {
              v45 = 0;
              v46 = v7;
              do
              {
                v48 = *(_QWORD **)v46;
                v47 = (_QWORD *)*((_QWORD *)v46 + 1);
                v46 = v42;
                result = std::less<std::string>::operator()[abi:ne180100](v47, v48);
                if ((_DWORD)result)
                {
                  v49 = v45;
                  while (1)
                  {
                    *(_QWORD *)&v7[v49 + 8] = v48;
                    if (!v49)
                      break;
                    v48 = *(_QWORD **)&v7[v49 - 8];
                    result = std::less<std::string>::operator()[abi:ne180100](v47, v48);
                    v49 -= 8;
                    if ((result & 1) == 0)
                    {
                      v50 = &v7[v49 + 8];
                      goto LABEL_73;
                    }
                  }
                  v50 = v7;
LABEL_73:
                  *(_QWORD *)v50 = v47;
                }
                v42 = v46 + 8;
                v45 += 8;
              }
              while (v46 + 8 != a2);
            }
          }
          else if (!v44)
          {
            do
            {
              v86 = *(_QWORD **)v8;
              v85 = (_QWORD *)*((_QWORD *)v8 + 1);
              v8 = v42;
              result = std::less<std::string>::operator()[abi:ne180100](v85, v86);
              if ((_DWORD)result)
              {
                v87 = v8;
                do
                {
                  *(_QWORD *)v87 = v86;
                  v86 = (_QWORD *)*((_QWORD *)v87 - 2);
                  result = std::less<std::string>::operator()[abi:ne180100](v85, v86);
                  v87 -= 8;
                }
                while ((result & 1) != 0);
                *(_QWORD *)v87 = v85;
              }
              v42 = v8 + 8;
            }
            while (v8 + 8 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v7 != a2)
          {
            v97 = v7;
            v51 = (unint64_t)(v10 - 2) >> 1;
            v52 = v51;
            v88 = a2;
            v89 = a2 - v7;
            do
            {
              v53 = v52;
              if (v9 >= 16 && v51 >= v52)
              {
                v54 = (2 * v52) | 1;
                v55 = &v97[8 * v54];
                v56 = 2 * v52 + 2;
                v95 = v52;
                if (v56 >= v10)
                {
                  v58 = *(_QWORD **)v55;
                }
                else
                {
                  v57 = *(_QWORD **)v55;
                  v58 = (_QWORD *)*((_QWORD *)v55 + 1);
                  v59 = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v55, v58);
                  if (v59)
                    v55 += 8;
                  else
                    v58 = v57;
                  if (v59)
                    v54 = v56;
                }
                v60 = &v97[8 * v53];
                v61 = *(_QWORD **)v60;
                result = std::less<std::string>::operator()[abi:ne180100](v58, *(_QWORD **)v60);
                v9 = v89;
                if ((result & 1) == 0)
                {
                  do
                  {
                    v62 = v55;
                    *(_QWORD *)v60 = v58;
                    if (v51 < v54)
                      break;
                    v63 = (2 * v54) | 1;
                    v55 = &v97[8 * v63];
                    v64 = 2 * v54 + 2;
                    if (v64 >= v10)
                    {
                      v58 = *(_QWORD **)v55;
                      v54 = (2 * v54) | 1;
                    }
                    else
                    {
                      v58 = *(_QWORD **)v55;
                      v65 = (_QWORD *)*((_QWORD *)v55 + 1);
                      if (std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v55, v65))
                      {
                        v58 = v65;
                        v55 += 8;
                        v54 = v64;
                      }
                      else
                      {
                        v54 = v63;
                      }
                    }
                    result = std::less<std::string>::operator()[abi:ne180100](v58, v61);
                    v60 = v62;
                  }
                  while (!(_DWORD)result);
                  *(_QWORD *)v62 = v61;
                  a2 = v88;
                  v9 = v89;
                  v53 = v95;
                }
              }
              v52 = v53 - 1;
            }
            while (v53);
            v66 = (unint64_t)v9 >> 3;
            v67 = v97;
            do
            {
              v68 = a2;
              v69 = 0;
              v70 = v66 - 2;
              v93 = *(_QWORD **)v67;
              if (v66 < 2)
                v70 = v66 - 1;
              v71 = v70 >> 1;
              do
              {
                v72 = &v67[8 * v69 + 8];
                v73 = (2 * v69) | 1;
                v74 = 2 * v69 + 2;
                if (v74 >= v66)
                {
                  v77 = *(_QWORD **)v72;
                  v69 = (2 * v69) | 1;
                }
                else
                {
                  v75 = *(_QWORD **)v72;
                  v76 = *(_QWORD **)&v67[8 * v69 + 16];
                  result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v72, v76);
                  if ((_DWORD)result)
                    v77 = v76;
                  else
                    v77 = v75;
                  if ((_DWORD)result)
                  {
                    v72 += 8;
                    v69 = v74;
                  }
                  else
                  {
                    v69 = v73;
                  }
                }
                *(_QWORD *)v67 = v77;
                v67 = v72;
              }
              while (v69 <= v71);
              a2 = v68 - 8;
              if (v72 == v68 - 8)
              {
                *(_QWORD *)v72 = v93;
              }
              else
              {
                *(_QWORD *)v72 = *(_QWORD *)a2;
                *(_QWORD *)a2 = v93;
                v78 = v72 - v97 + 8;
                if (v78 >= 9)
                {
                  v79 = (unint64_t)((v78 >> 3) - 2) >> 1;
                  v80 = &v97[8 * v79];
                  v81 = *(_QWORD **)v80;
                  v82 = *(_QWORD **)v72;
                  result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v80, *(_QWORD **)v72);
                  if ((_DWORD)result)
                  {
                    do
                    {
                      v83 = v80;
                      *(_QWORD *)v72 = v81;
                      if (!v79)
                        break;
                      v79 = (v79 - 1) >> 1;
                      v80 = &v97[8 * v79];
                      v81 = *(_QWORD **)v80;
                      result = std::less<std::string>::operator()[abi:ne180100](*(_QWORD **)v80, v82);
                      v72 = v83;
                    }
                    while ((result & 1) != 0);
                    *(_QWORD *)v83 = v82;
                  }
                }
              }
              v84 = v66-- <= 2;
              v67 = v97;
            }
            while (!v84);
          }
          return result;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &v7[8 * ((unint64_t)v10 >> 1)];
        if ((unint64_t)v9 < 0x401)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v12, (_QWORD **)v7, (_QWORD **)v94);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7, (_QWORD **)v12, (_QWORD **)v94);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7 + 1, (_QWORD **)v12 - 1, (_QWORD **)v91);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v7 + 2, (_QWORD **)&v7[8 * v11 + 8], (_QWORD **)v90);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>((_QWORD **)v12 - 1, (_QWORD **)v12, (_QWORD **)&v7[8 * v11 + 8]);
          v13 = *(_QWORD **)v7;
          *(_QWORD *)v7 = *(_QWORD *)v12;
          *(_QWORD *)v12 = v13;
        }
        --a3;
        v14 = *(_QWORD **)v7;
        v15 = v7;
        if ((a4 & 1) == 0)
        {
          v15 = v7;
          if (!std::less<std::string>::operator()[abi:ne180100](*((_QWORD **)v7 - 1), *(_QWORD **)v7))
          {
            result = std::less<std::string>::operator()[abi:ne180100](v14, *(_QWORD **)v94);
            if ((result & 1) != 0)
            {
              do
              {
                v30 = (_QWORD *)*((_QWORD *)v7 + 1);
                v7 += 8;
                result = std::less<std::string>::operator()[abi:ne180100](v14, v30);
              }
              while ((result & 1) == 0);
            }
            else
            {
              v31 = v7 + 8;
              do
              {
                v7 = v31;
                if (v31 >= a2)
                  break;
                v31 += 8;
                result = std::less<std::string>::operator()[abi:ne180100](v14, *(_QWORD **)v7);
              }
              while (!(_DWORD)result);
            }
            v32 = a2;
            if (v7 < a2)
            {
              v32 = a2;
              do
              {
                v33 = (_QWORD *)*((_QWORD *)v32 - 1);
                v32 -= 8;
                result = std::less<std::string>::operator()[abi:ne180100](v14, v33);
              }
              while ((result & 1) != 0);
            }
            v34 = a2;
            if (v7 < v32)
            {
              v35 = *(_QWORD **)v7;
              v36 = *(_QWORD **)v32;
              do
              {
                *(_QWORD *)v7 = v36;
                *(_QWORD *)v32 = v35;
                do
                {
                  v37 = (_QWORD *)*((_QWORD *)v7 + 1);
                  v7 += 8;
                  v35 = v37;
                }
                while (!std::less<std::string>::operator()[abi:ne180100](v14, v37));
                do
                {
                  v38 = (_QWORD *)*((_QWORD *)v32 - 1);
                  v32 -= 8;
                  v36 = v38;
                  result = std::less<std::string>::operator()[abi:ne180100](v14, v38);
                }
                while ((result & 1) != 0);
              }
              while (v7 < v32);
            }
            v39 = v7 - 8;
            a2 = v34;
            if (v7 - 8 != v8)
              *(_QWORD *)v8 = *(_QWORD *)v39;
            a4 = 0;
            *(_QWORD *)v39 = v14;
            continue;
          }
        }
        do
        {
          v16 = v15;
          v18 = (_QWORD *)*((_QWORD *)v15 + 1);
          v15 += 8;
          v17 = v18;
        }
        while (std::less<std::string>::operator()[abi:ne180100](v18, v14));
        v96 = a3;
        v19 = a2;
        if (v16 == v8)
        {
          v19 = a2;
          do
          {
            if (v15 >= v19)
              break;
            v21 = (_QWORD *)*((_QWORD *)v19 - 1);
            v19 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v21, v14));
        }
        else
        {
          do
          {
            v20 = (_QWORD *)*((_QWORD *)v19 - 1);
            v19 -= 8;
          }
          while (!std::less<std::string>::operator()[abi:ne180100](v20, v14));
        }
        v6 = v8;
        v22 = a2;
        if (v15 < v19)
        {
          v23 = *(_QWORD **)v19;
          v24 = v15;
          v25 = v19;
          do
          {
            *(_QWORD *)v24 = v23;
            *(_QWORD *)v25 = v17;
            do
            {
              v16 = v24;
              v26 = (_QWORD *)*((_QWORD *)v24 + 1);
              v24 += 8;
              v17 = v26;
            }
            while (std::less<std::string>::operator()[abi:ne180100](v26, v14));
            do
            {
              v27 = (_QWORD *)*((_QWORD *)v25 - 1);
              v25 -= 8;
              v23 = v27;
            }
            while (!std::less<std::string>::operator()[abi:ne180100](v27, v14));
          }
          while (v24 < v25);
        }
        if (v16 != v6)
          *(_QWORD *)v6 = *(_QWORD *)v16;
        *(_QWORD *)v16 = v14;
        v28 = v15 >= v19;
        a2 = v22;
        a3 = v96;
        if (!v28)
        {
LABEL_30:
          result = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**,false>(v6, v16, v96, a4 & 1);
          a4 = 0;
          v7 = v16 + 8;
          continue;
        }
        v29 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>((_QWORD **)v6, (_QWORD **)v16);
        v7 = v16 + 8;
        result = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>((_QWORD **)v16 + 1, (_QWORD **)v22);
        if (!(_DWORD)result)
        {
          if (v29)
            continue;
          goto LABEL_30;
        }
        a2 = v16;
        if (!v29)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Wrap(uint64_t a1, uint64_t a2, google::protobuf::Arena *a3)
{
  uint64_t result;

  if (a3)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)result = &off_1E9566EC0;
  *(_QWORD *)(result + 48) = a1;
  *(_QWORD *)(result + 56) = a2;
  *(_DWORD *)(result + 40) = 3;
  return result;
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E9566F68;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E9566F68;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1D3BDFB5D);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E9567898;
  *(_QWORD *)(result + 8) = v3;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  uint64_t result;

  if (a2)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a2;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E9567898;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 8) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetArena(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Clear(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::IsInitialized()
{
  return 1;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2;
  std::string **v5;
  const std::string *v6;
  double result;
  double *v8;

  v2 = a2[10];
  if (v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (std::string **)(a1 + 16);
      if (*(uint64_t **)(a1 + 16) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 16), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 16), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)v6);
      else
        std::string::operator=(*v5, v6);
      *(_DWORD *)(a1 + 40) |= 1u;
      v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      v8 = (double *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 144))(a2);
      result = *v8;
      *(double *)(a1 + 24) = *v8;
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
  return result;
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MergePartialFromCodedStream(uint64_t a1, unint64_t **a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  unint64_t TagFallback;
  std::string *v8;
  int v9;
  unsigned __int8 *v10;
  char *v11;
  unint64_t *v12;
  int v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  _BOOL8 result;
  unint64_t v18;

  v5 = (google::protobuf::Arena **)(a1 + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*a2;
        if (*a2 >= a2[1])
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          TagFallback = *v6;
          if ((*v6 & 0x80000000) == 0)
          {
            *a2 = (unint64_t *)(v6 + 1);
            goto LABEL_7;
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_7:
        if ((_DWORD)TagFallback != 10)
          break;
        *(_DWORD *)(a1 + 40) |= 1u;
        v8 = *(std::string **)(a1 + 16);
        if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v8 = *(std::string **)(a1 + 16);
        }
        result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v8);
        if (!result)
          return result;
        v9 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v9;
        v11 = (char *)*a2;
        v10 = (unsigned __int8 *)a2[1];
        if (*a2 < (unint64_t *)v10 && *v11 == 17)
        {
          v12 = (unint64_t *)(v11 + 1);
          *a2 = v12;
          goto LABEL_20;
        }
      }
      if ((_DWORD)TagFallback == 17)
        break;
      if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
        return 1;
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0;
    }
    v9 = *(_DWORD *)(a1 + 40);
    v12 = *a2;
    v10 = (unsigned __int8 *)a2[1];
LABEL_20:
    v13 = v9 | 2;
    *(_DWORD *)(a1 + 40) = v13;
    v18 = 0;
    if ((int)v10 - (int)v12 < 8)
    {
      result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v18);
      if (!result)
        return result;
      v16 = v18;
      v13 = *(_DWORD *)(a1 + 40);
      v14 = (char *)*a2;
      v10 = (unsigned __int8 *)a2[1];
    }
    else
    {
      v15 = *v12;
      v14 = (char *)(v12 + 1);
      v16 = v15;
      *a2 = (unint64_t *)v14;
    }
    *(_QWORD *)(a1 + 24) = v16;
    *(_DWORD *)(a1 + 40) = v13 | 2;
  }
  while (v14 != (char *)v10 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::ByteSizeLong(_DWORD *a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v5 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1);
    v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0)
      v6 = *(_DWORD *)(v5 + 8);
    v3 = (int)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    return v4 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v4 = 9;
  return v4 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  double *v5;
  google::protobuf::io::CodedOutputStream *v6;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  v5 = (double *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, *v5, v6);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::GetCachedSize(_DWORD *a1)
{
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  int v6;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v5 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1);
    v6 = *(unsigned __int8 *)(v5 + 23);
    if ((v6 & 0x80u) != 0)
      v6 = *(_DWORD *)(v5 + 8);
    v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    return v4 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v4 = 9;
  return v4 + v3;
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  const void **v5;
  char *v6;
  uint64_t v7;

  v5 = (const void **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  *a3 = 10;
  v6 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v5, a3 + 1);
  v7 = *(_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  *v6 = 17;
  *(_QWORD *)(v6 + 1) = v7;
  return v6 + 9;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E9566F68;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E9566F68;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  JUMPOUT(0x1D8251A40);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::value(uint64_t a1)
{
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  if (!*(_QWORD *)(a1 + 8))
  {
    v3 = 3;
    v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return a1 + 24;
}

void sub_1D3B456C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,double> const*> &,google::protobuf::MapPair<std::string,double> const**>(_QWORD **a1, _QWORD **a2)
{
  uint64_t v4;
  _BOOL8 result;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD **v8;
  _QWORD **v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _QWORD *v17;

  v4 = a2 - a1;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 1);
      v7 = *a1;
      if (std::less<std::string>::operator()[abi:ne180100](v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      v8 = a1 + 2;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByDerefFirst<google::protobuf::MapPair<std::string,std::string> const*> &,google::protobuf::MapPair<std::string,std::string> const**>(a1, a1 + 1, a1 + 2);
      v9 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v10 = 0;
      v11 = 24;
      break;
  }
  while (1)
  {
    v12 = *v9;
    v13 = *v8;
    if (std::less<std::string>::operator()[abi:ne180100](*v9, v13))
    {
      v14 = v11;
      while (1)
      {
        *(_QWORD **)((char *)a1 + v14) = v13;
        v15 = v14 - 8;
        if (v14 == 8)
          break;
        v13 = *(_QWORD **)((char *)a1 + v14 - 16);
        v16 = std::less<std::string>::operator()[abi:ne180100](v12, v13);
        v14 = v15;
        if (!v16)
        {
          v17 = (_QWORD **)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      v17 = a1;
LABEL_12:
      *v17 = v12;
      if (++v10 == 8)
        return v9 + 1 == a2;
    }
    v8 = v9;
    v11 += 8;
    if (++v9 == a2)
      return 1;
  }
}

google::protobuf::Arena **google::protobuf::Map<std::string,double>::operator[](uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  google::protobuf::Arena *v12;
  std::string *Aligned;
  std::string::__raw *v14;
  __int128 v15;
  google::protobuf::Arena **v16;
  google::protobuf::Arena *v17;
  std::string *v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  std::string __p;
  std::string::size_type v24;
  uint64_t v25[4];
  _QWORD v26[4];

  v4 = *(_QWORD **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  v24 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  v6 = v26[0];
  if (v26[0])
    goto LABEL_18;
  v7 = v4[1];
  v8 = *v4 + 1;
  v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      v20 = 2 * v7;
LABEL_37:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v20, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v25, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      v11 = v25[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    v21 = 0;
    v22 = ((5 * v8) >> 2) + 1;
    do
      ++v21;
    while (v22 << v21 < v9);
    v20 = v7 >> v21 <= 8 ? 8 : v7 >> v21;
    if (v20 != v7)
      goto LABEL_37;
  }
  v11 = v26[3];
LABEL_11:
  v12 = (google::protobuf::Arena *)v4[5];
  if (v12)
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E0DE4EE8], 40);
  else
    Aligned = (std::string *)operator new(0x28uLL);
  v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v24;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v25, (uint64_t)v4, v11, v14);
  ++*v4;
  v6 = v25[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (*(_QWORD *)a1)
    {
      v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E0DE4EE8], 32);
      v17 = *(google::protobuf::Arena **)a1;
      v16[1] = 0;
      v16[2] = 0;
      *v16 = 0;
      google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
      v16[3] = 0;
      std::string::operator=((std::string *)v16, (const std::string *)a2);
    }
    else
    {
      v18 = (std::string *)operator new();
      v16 = (google::protobuf::Arena **)v18;
      if (*(char *)(a2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v18, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
      }
      else
      {
        *(_OWORD *)&v18->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
        v18->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
      }
      v16[3] = 0;
    }
    *(_QWORD *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1D3B45AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  MEMORY[0x1D8251A40](v14, 0x1012C4092066FB6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::NewEntry(google::protobuf::Arena *a1)
{
  uint64_t result;

  if (a1)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a1;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E9567898;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::MessageLite,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>,google::protobuf::Map<std::string,double>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  const std::string *v2;
  google::protobuf::Arena **v3;
  uint64_t v4;
  double result;

  v2 = (const std::string *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 48) + 136))(*(_QWORD *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  v3 = google::protobuf::Map<std::string,double>::operator[](*(_QWORD *)(a1 + 8), a1 + 16);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a1 + 48);
  *(_DWORD *)(v4 + 40) |= 2u;
  result = *(double *)(v4 + 24);
  *(double *)v3 = result;
  return result;
}

void *CoreML::Specification::StringToDoubleMap::MergeFrom(CoreML::Specification::StringToDoubleMap *this, const CoreML::Specification::StringToDoubleMap *a2)
{
  uint64_t v4;
  void *result;
  unsigned __int8 *v6;
  char *v7;
  uint64_t v8;
  google::protobuf::Arena *v9;
  unsigned __int8 *v10[3];

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  result = google::protobuf::Map<std::string,std::string>::begin(v10, *((_QWORD **)a2 + 5));
  v6 = v10[0];
  if (v10[0])
  {
    v7 = (char *)this + 24;
    do
    {
      v8 = *((_QWORD *)v6 + 3);
      v9 = *(google::protobuf::Arena **)(v8 + 24);
      *google::protobuf::Map<std::string,double>::operator[]((uint64_t)v7, v8) = v9;
      result = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v10);
      v6 = v10[0];
    }
    while (v10[0]);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringToDoubleMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToDoubleMap>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringToDoubleMap>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

_QWORD *google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E9566F68;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  return a1;
}

void google::protobuf::internal::MapEntryLite<std::string,double,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)1,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E9566F68;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[2]);
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::Map<long long,std::string>::~Map(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  google::protobuf::Map<long long,std::string>::clear(a1);
  if (!*a1)
  {
    v2 = a1[2];
    if (v2)
    {
      v3 = google::protobuf::Map<long long,double>::InnerMap::~InnerMap(v2);
      MEMORY[0x1D8251A40](v3, 0x10E0C40D5F42F35);
    }
  }
  return a1;
}

void google::protobuf::Map<long long,std::string>::clear(_QWORD *a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];
  _QWORD v8[3];

  v1 = (_QWORD *)a1[2];
  v2 = v1[3];
  v3 = v1[1];
  if (v3 > v2)
  {
    v5 = v1[4];
    while (1)
    {
      v6 = *(_QWORD *)(v5 + 8 * v2);
      if (v6)
        break;
      if (v3 == ++v2)
        return;
    }
    if (v6 != *(_QWORD *)(v5 + 8 * (v2 ^ 1)) || (v6 = *(_QWORD *)(*(_QWORD *)v6 + 32)) != 0)
    {
      do
      {
        v7[0] = v6;
        v7[1] = (uint64_t)v1;
        v7[2] = v2;
        google::protobuf::Map<long long,std::string>::erase((uint64_t)v8, a1, v7);
        v6 = v8[0];
        v1 = (_QWORD *)v8[1];
        v2 = v8[2];
      }
      while (v8[0]);
    }
  }
}

__n128 google::protobuf::Map<long long,std::string>::erase(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  _BOOL4 v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __n128 result;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  _QWORD *v29;

  v6 = *a3;
  if (!*a2)
  {
    v7 = *(_QWORD *)(v6 + 8);
    if (v7)
    {
      if (*(char *)(v7 + 31) < 0)
        operator delete(*(void **)(v7 + 8));
      MEMORY[0x1D8251A40](v7, 0x1012C404EF22A49);
      v6 = *a3;
    }
  }
  v27 = *(__n128 *)a3;
  v28 = a3[2];
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
    goto LABEL_7;
  v29 = 0;
  if (google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, &v29))
  {
    v9 = a3[2] + 1;
  }
  else
  {
    v10 = a3[2];
    v11 = *(_QWORD *)(*(_QWORD *)(a3[1] + 32) + 8 * v10);
    v12 = v29;
    v13 = (_QWORD *)v29[1];
    if (v13)
    {
      do
      {
        v14 = v13;
        v13 = (_QWORD *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        v14 = (_QWORD *)v12[2];
        v15 = *v14 == (_QWORD)v12;
        v12 = v14;
      }
      while (!v15);
    }
    v29 = v14;
    if (v14 != (_QWORD *)(v11 + 8))
    {
      v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  v16 = (_QWORD *)a2[2];
  v29 = 0;
  v17 = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, &v29);
  v18 = v28;
  v19 = (void *)v27.n128_u64[0];
  v20 = v16[4];
  v21 = *(_QWORD *)(v20 + 8 * v28);
  if (v17)
  {
    v22 = google::protobuf::Map<long long,double>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(_QWORD *)(v20 + 8 * v28));
LABEL_25:
    *(_QWORD *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  v23 = (uint64_t *)std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::find<long long *>(v21, (uint64_t *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23)
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  if (!*(_QWORD *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (_QWORD **)v21);
    v22 = 0;
    *(_QWORD *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  if (!v16[5])
    operator delete(v19);
  --*v16;
  if (v18 == v16[3])
  {
    v25 = v16[1];
    if (v18 < v25)
    {
      v26 = v16[4];
      do
      {
        if (*(_QWORD *)(v26 + 8 * v18))
          break;
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 16) = a3[2];
  return result;
}

_QWORD *google::protobuf::Map<long long,std::string>::InnerMap::InnerMap(_QWORD *a1, google::protobuf::Arena *a2)
{
  std::random_device *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  google::protobuf::Arena **v9;
  __int128 v11;
  unsigned int v12[258];
  std::random_device v13;

  *a1 = 0;
  v4 = std::random_device::random_device[abi:ne180100](&v13);
  v5 = MEMORY[0x1D82518F0](v4);
  v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1)
    v6 = 1;
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  v11 = xmmword_1D3BDFCA0;
  v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1D3B46114(void *a1)
{
  uint64_t v1;

  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D3B460D0);
}

void CoreML::Specification::Int64ToStringMap::~Int64ToStringMap(CoreML::Specification::Int64ToStringMap *this)
{
  *(_QWORD *)this = &off_1E955D120;
  google::protobuf::Map<long long,std::string>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955D120;
  google::protobuf::Map<long long,std::string>::~Map((_QWORD *)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::Int64ToStringMap::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64ToStringMap");
}

CoreML::Specification::Int64ToStringMap *CoreML::Specification::Int64ToStringMap::New(CoreML::Specification::Int64ToStringMap *this)
{
  return CoreML::Specification::Int64ToStringMap::New(this, 0);
}

CoreML::Specification::Int64ToStringMap *CoreML::Specification::Int64ToStringMap::New(CoreML::Specification::Int64ToStringMap *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Int64ToStringMap *v3;

  v3 = (CoreML::Specification::Int64ToStringMap *)operator new();
  CoreML::Specification::Int64ToStringMap::Int64ToStringMap(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Int64ToStringMap>(a2, v3);
  return v3;
}

void sub_1D3B46224(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407031D3CFLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::Int64ToStringMap::Clear(CoreML::Specification::Int64ToStringMap *this)
{
  google::protobuf::Map<long long,std::string>::clear((_QWORD *)this + 3);
}

uint64_t CoreML::Specification::Int64ToStringMap::IsInitialized(CoreML::Specification::Int64ToStringMap *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64ToStringMap::MergePartialFromCodedStream(CoreML::Specification::Int64ToStringMap *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int TagFallback;
  int v14;
  char *v15;
  int VarintSizeAsIntFallback;
  __n128 v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  char *v25;
  unint64_t Varint64Fallback;
  char v27;
  uint64_t v28;
  std::string *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  BOOL v35;
  uint64_t *v36;
  uint64_t v37;
  __int128 v38;
  double v39;
  unsigned int *v40;
  std::string::size_type v41;
  _BOOL4 v42;
  uint64_t *v44;
  _QWORD v45[2];
  unint64_t v46;
  std::string::__raw *v47;
  uint64_t v48;

  v5 = (google::protobuf::Arena **)((char *)this + 16);
  v6 = (char *)this + 24;
  v7 = (uint64_t *)&v46;
  while (1)
  {
    v8 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v9) = 0;
    }
    else
    {
      v9 = *v8;
      if (*v8 >= 1)
      {
        *(_QWORD *)a2 = v8 + 1;
        v10 = v9 | 0x100000000;
        if ((v10 & 0x100000000) == 0)
          goto LABEL_12;
        goto LABEL_8;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v10 & 0x100000000) == 0)
      goto LABEL_12;
LABEL_8:
    if (v10 == 10 && (v10 & 0xFFFFFFF8) == 8)
    {
      v45[0] = v5;
      v45[1] = v6;
      v48 = 0;
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v15 & 0x80000000) == 0)
      {
        VarintSizeAsIntFallback = *v15;
        *(_QWORD *)a2 = v15 + 1;
        goto LABEL_24;
      }
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        goto LABEL_49;
LABEL_24:
      v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v19 = *((_DWORD *)a2 + 13);
      v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 13) = v19;
      if (v19 < 0 != v20)
        goto LABEL_49;
      v21 = v18;
      v23 = *(char **)a2;
      v22 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 < v22 && *v23 == 8)
      {
        *(_QWORD *)a2 = v23 + 1;
        if ((unint64_t)(v23 + 1) >= v22 || v23[1] < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) != 0)
          {
            v24 = Varint64Fallback;
            v25 = *(char **)a2;
            v22 = *((_QWORD *)a2 + 1);
            goto LABEL_33;
          }
          goto LABEL_49;
        }
        v24 = v23[1];
        v25 = v23 + 2;
        *(_QWORD *)a2 = v25;
LABEL_33:
        v46 = v24;
        if ((int)v22 - (int)v25 >= 1 && *v25 == 18)
        {
          v28 = **((_QWORD **)this + 5);
          v29 = (std::string *)google::protobuf::Map<long long,std::string>::operator[]((uint64_t)v6, v7);
          v47 = (std::string::__raw *)v29;
          if (v28 != **((_QWORD **)this + 5))
          {
            google::protobuf::io::CodedInputStream::Skip(a2, 1u);
            if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v29))
            {
              v17.n128_f64[0] = google::protobuf::Map<long long,std::string>::erase((uint64_t)v6, v7);
              goto LABEL_49;
            }
            if (*(_QWORD *)a2 == *((_QWORD *)a2 + 1)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              *((_BYTE *)a2 + 36) = 1;
              goto LABEL_62;
            }
            v30 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v5);
            v44 = v7;
            if (v30)
            {
              v48 = v30;
              v31 = v30;
            }
            else
            {
              v31 = 0;
            }
            v36 = (uint64_t *)(v30 + 24);
            v37 = *(_QWORD *)(v30 + 24);
            *(_DWORD *)(v30 + 40) |= 2u;
            if ((uint64_t *)v37 == &google::protobuf::internal::fixed_address_empty_string)
            {
              google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(v30 + 24), *(google::protobuf::Arena ***)(v30 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              v37 = *v36;
            }
            if (*(char *)(v37 + 23) < 0)
              operator delete(*(void **)v37);
            v38 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
            *(_QWORD *)(v37 + 16) = *((_QWORD *)&v29->__r_.__value_.__l + 2);
            *(_OWORD *)v37 = v38;
            *((_BYTE *)&v29->__r_.__value_.__s + 23) = 0;
            v29->__r_.__value_.__s.__data_[0] = 0;
            v7 = v44;
            v39 = google::protobuf::Map<long long,std::string>::erase((uint64_t)v6, v44);
            *(_DWORD *)(v31 + 40) |= 1u;
            *(_QWORD *)(v31 + 16) = v24;
            v34 = (*(uint64_t (**)(uint64_t, google::protobuf::io::CodedInputStream *, double))(*(_QWORD *)v31 + 88))(v31, a2, v39);
            if (v34)
            {
              google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry((uint64_t)v45);
              v31 = v48;
            }
            if (!(*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 40))(v31))
            {
LABEL_61:
              if (v34)
                goto LABEL_62;
              goto LABEL_49;
            }
LABEL_46:
            v48 = 0;
            if ((v34 & 1) == 0)
              return 0;
LABEL_62:
            if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21))
            {
              v40 = (unsigned int *)v47;
              if (SHIBYTE(v47->__words[2]) < 0)
              {
                v40 = (unsigned int *)v47->__words[0];
                v41 = v47->__words[1];
              }
              else
              {
                LODWORD(v41) = HIBYTE(v47->__words[2]);
              }
              v42 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(v40, v41, 0, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
              v35 = v42;
              if (v42)
                v14 = 0;
              else
                v14 = 6;
            }
            else
            {
LABEL_49:
              v35 = 0;
              v14 = 6;
            }
            if (v48)
              (*(void (**)(uint64_t, __n128))(*(_QWORD *)v48 + 8))(v48, v17);
            if (!v35)
              goto LABEL_18;
            goto LABEL_17;
          }
        }
      }
      else
      {
        v24 = 0;
        v46 = 0;
      }
      v32 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(*v5);
      if (v32)
      {
        v48 = v32;
        v33 = v32;
      }
      else
      {
        v33 = 0;
      }
      *(_DWORD *)(v32 + 40) |= 1u;
      *(_QWORD *)(v32 + 16) = v24;
      v34 = (*(uint64_t (**)(uint64_t, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v32 + 88))(v32, a2);
      if (v34)
      {
        google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry((uint64_t)v45);
        v33 = v48;
      }
      if (!(*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 40))(v33))
        goto LABEL_61;
      goto LABEL_46;
    }
LABEL_12:
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3))return 0;
LABEL_17:
    v14 = 0;
LABEL_18:
    if (v14)
      return 0;
  }
}

void sub_1D3B46678(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14)
    (*(void (**)(uint64_t))(*(_QWORD *)a14 + 8))(a14);
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::Int64ToStringMap::ByteSizeLong(CoreML::Specification::Int64ToStringMap *this)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v8[3];

  v2 = (_QWORD *)*((_QWORD *)this + 5);
  v3 = *(unsigned int *)v2;
  google::protobuf::Map<std::string,std::string>::begin(v8, v2);
  v4 = 0;
  while (v8[0])
  {
    v5 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(v8[0][1], v8[0][1] + 8, *((google::protobuf::Arena **)this + 2));
    if (v4 != (_DWORD *)v5)
    {
      if (v4)
        (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
      v4 = (_DWORD *)v5;
    }
    v6 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(v4);
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v8);
  }
  if (v4)
    (*(void (**)(_DWORD *))(*(_QWORD *)v4 + 8))(v4);
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void sub_1D3B46764(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

_QWORD *CoreML::Specification::Int64ToStringMap::SerializeWithCachedSizes(_QWORD *this, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v7;
  google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  google::protobuf::io::CodedOutputStream *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  uint64_t v28;
  uint64_t *v29[3];

  v3 = (unint64_t *)this[5];
  v4 = *v3;
  if (!*v3)
    return this;
  v5 = (uint64_t)this;
  if (*((_BYTE *)a2 + 26))
  {
    if (v4 >= 2 && *((_BYTE *)a2 + 27) != 0)
    {
LABEL_24:
      v14 = operator new[]();
      google::protobuf::Map<std::string,std::string>::begin(v29, *(_QWORD **)(v5 + 40));
      v15 = v29[0];
      if (v29[0])
      {
        v16 = 0;
        v17 = (_QWORD *)(v14 + 8);
        do
        {
          v18 = (_QWORD *)v15[1];
          *(v17 - 1) = *v18;
          *v17 = v18;
          google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v29);
          ++v16;
          v15 = v29[0];
          v17 += 2;
        }
        while (v29[0]);
      }
      else
      {
        v16 = 0;
      }
      v19 = 126 - 2 * __clz(v16);
      if (v16)
        v20 = v19;
      else
        v20 = 0;
      v21.n128_f64[0] = std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(v14, (_QWORD *)(v14 + 16 * v16), v20, 1);
      if (v16)
      {
        v22 = 0;
        v23 = 8;
        do
        {
          v25 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(*(_QWORD *)(v14 + v23), *(_QWORD *)(v14 + v23) + 8, *(google::protobuf::Arena **)(v5 + 16));
          if (v22 != v25)
          {
            if (v22)
              (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
            v22 = v25;
          }
          google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v22, a2, v24);
          v26 = *(_QWORD *)(v14 + v23);
          if (*(char *)(v26 + 31) < 0)
          {
            v27 = *(unsigned int **)(v26 + 8);
            v28 = *(_QWORD *)(v26 + 16);
          }
          else
          {
            v27 = (unsigned int *)(v26 + 8);
            LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
          }
          google::protobuf::internal::WireFormatLite::VerifyUtf8String(v27, v28, 1, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
          v23 += 16;
          --v16;
        }
        while (v16);
        (*(void (**)(uint64_t))(*(_QWORD *)v22 + 8))(v22);
      }
      return (_QWORD *)MEMORY[0x1D8251A28](v14, 0x1060C80832E3BDALL, v21);
    }
  }
  else if (v4 >= 2 && google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ != 0)
  {
    goto LABEL_24;
  }
  this = google::protobuf::Map<std::string,std::string>::begin(v29, v3);
  v7 = 0;
  while (v29[0])
  {
    v9 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(v29[0][1], v29[0][1] + 8, *(google::protobuf::Arena **)(v5 + 16));
    if (v7 != v9)
    {
      if (v7)
        (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
      v7 = v9;
    }
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v7, a2, v8);
    v10 = v29[0][1];
    if (*(char *)(v10 + 31) < 0)
    {
      v11 = *(unsigned int **)(v10 + 8);
      v12 = *(_QWORD *)(v10 + 16);
    }
    else
    {
      v11 = (unsigned int *)(v10 + 8);
      LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.Int64ToStringMap.MapEntry.value");
    this = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v29);
  }
  if (v7)
    return (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  return this;
}

void sub_1D3B469F4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  MEMORY[0x1D8251A28](v1, 0x1060C80832E3BDALL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64ToStringMap::GetCachedSize(CoreML::Specification::Int64ToStringMap *this)
{
  return *((unsigned int *)this + 12);
}

double std::__introsort<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*,false>(uint64_t a1, _QWORD *a2, uint64_t a3, char a4)
{
  __int128 *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  _QWORD *v36;
  BOOL v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  int64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Wrap(uint64_t a1, uint64_t a2, google::protobuf::Arena *a3)
{
  uint64_t result;

  if (a3)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 32) = a3;
  }
  else
  {
    result = operator new();
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_QWORD *)(result + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)result = &off_1E9567160;
  *(_QWORD *)(result + 48) = a1;
  *(_QWORD *)(result + 56) = a2;
  *(_DWORD *)(result + 40) = 3;
  return result;
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E9567208;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  *a1 = &off_1E9567208;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1D3BDFB5D);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = operator new();
  *(_QWORD *)(result + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E95679E8;
  *(_QWORD *)(result + 8) = v3;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  uint64_t result;
  uint64_t v5;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 32) = a2;
  }
  else
  {
    result = operator new();
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_QWORD *)(result + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(result + 40) = 0;
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E95679E8;
  *(_QWORD *)(result + 8) = v5;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetArena(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Clear(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = 0;
  v1 = *(_QWORD *)(result + 24);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  *(_DWORD *)(result + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::IsInitialized()
{
  return 1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2;
  std::string **v5;
  const std::string *v6;

  v2 = a2[10];
  if (v2)
  {
    if ((v2 & 1) != 0)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 136))(a2);
      *(_DWORD *)(a1 + 40) |= 1u;
      v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      v5 = (std::string **)(a1 + 24);
      if (*(uint64_t **)(a1 + 24) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 24), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 144))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 24), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)v6);
      else
        std::string::operator=(*v5, v6);
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MergePartialFromCodedStream(uint64_t a1, char **a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  unint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  unint64_t Varint64Fallback;
  char *v12;
  int v13;
  char v14;
  std::string *v15;
  _BOOL8 result;

  v5 = (google::protobuf::Arena **)(a1 + 24);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          TagFallback = *v6;
          if ((*v6 & 0x80000000) == 0)
          {
            *a2 = v6 + 1;
            goto LABEL_7;
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_7:
        if ((_DWORD)TagFallback != 8)
          break;
        v8 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v8;
        v10 = *a2;
        v9 = (unint64_t)a2[1];
        if ((unint64_t)*a2 >= v9 || *v10 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v14 & 1) == 0)
            return 0;
          v8 = *(_DWORD *)(a1 + 40);
          v12 = *a2;
          v9 = (unint64_t)a2[1];
        }
        else
        {
          Varint64Fallback = *v10;
          v12 = v10 + 1;
          *a2 = v12;
        }
        *(_QWORD *)(a1 + 16) = Varint64Fallback;
        v13 = v8 | 1;
        *(_DWORD *)(a1 + 40) = v13;
        if ((unint64_t)v12 < v9 && *v12 == 18)
        {
          *a2 = v12 + 1;
          goto LABEL_22;
        }
      }
      if ((_DWORD)TagFallback != 18)
        break;
      v13 = *(_DWORD *)(a1 + 40);
LABEL_22:
      *(_DWORD *)(a1 + 40) = v13 | 2;
      v15 = *(std::string **)(a1 + 24);
      if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v15 = *(std::string **)(a1 + 24);
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v15);
      if (!result)
        return result;
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*a2 == a2[1] && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

unint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::ByteSizeLong(_DWORD *a1)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v3 = ((9 * (__clz(*(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v6 = 0;
    return v6 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  v4 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0)
    v5 = *(_DWORD *)(v4 + 8);
  v6 = (int)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6)) + 1;
  return v6 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  unint64_t *v4;
  google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;

  v4 = (unint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteInt64(1, *v4, a2, v5);
  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteString(2u, v6, a2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::GetCachedSize(_DWORD *a1)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v3 = ((9 * (__clz(*(_QWORD *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1) | 1) ^ 0x3F) + 73) >> 6)
       + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v6 = 0;
    return v6 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  v4 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v5 = *(unsigned __int8 *)(v4 + 23);
  if ((v5 & 0x80u) != 0)
    v5 = *(_DWORD *)(v4 + 8);
  v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

char *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  unint64_t v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  const void **v9;

  v5 = *(_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  *a3 = 8;
  v6 = a3 + 1;
  if (v5 < 0x80)
  {
    LOBYTE(v7) = v5;
  }
  else
  {
    do
    {
      *v6++ = v5 | 0x80;
      v7 = v5 >> 7;
      v8 = v5 >> 14;
      v5 >>= 7;
    }
    while (v8);
  }
  *v6 = v7;
  v9 = (const void **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  v6[1] = 18;
  return google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v9, v6 + 2);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E9567208;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  return a1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryImpl(_QWORD *a1)
{
  *a1 = &off_1E9567208;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  JUMPOUT(0x1D8251A40);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::key(uint64_t a1)
{
  return a1 + 16;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::value(uint64_t a1)
{
  int v3;
  const char *v4;
  int v5;
  std::string __p;

  if (!*(_QWORD *)(a1 + 8))
  {
    v3 = 3;
    v4 = "/Library/Caches/com.apple.xbs/Sources/CoreML/coremltools-internal/deps/protobuf/src/google/protobuf/map_entry_lite.h";
    v5 = 162;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: default_instance_ != NULL: ");
    google::protobuf::internal::LogMessage::Finish((google::protobuf::internal::LogMessage *)&v3);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 24);
}

void sub_1D3B47920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,std::string> const*>*>(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _BOOL8 result;
  __int128 *v6;
  __int128 v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = ((uint64_t)a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = (__int128 *)(a2 - 2);
      if (*(a2 - 2) < *(_QWORD *)a1)
      {
        v7 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *v6;
        *v6 = v7;
      }
      return result;
    case 3:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), a2 - 2);
      return 1;
    case 4:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (_OWORD *)a2 - 1);
      return 1;
    case 5:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32), (__n128 *)(a1 + 48), (__n128 *)a2 - 1);
      return 1;
    default:
      v8 = (_QWORD *)(a1 + 32);
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,google::protobuf::internal::CompareByFirstField<google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>> &,google::protobuf::internal::SortItem<long long,google::protobuf::MapPair<long long,double> const*>*>((__int128 *)a1, (uint64_t *)(a1 + 16), (uint64_t *)(a1 + 32));
      v9 = (_QWORD *)(a1 + 48);
      if ((_QWORD *)(a1 + 48) == a2)
        return 1;
      v10 = 0;
      v11 = 0;
      break;
  }
  while (1)
  {
    v12 = *v9;
    if (*v9 < *v8)
    {
      v13 = v9[1];
      v14 = v10;
      while (1)
      {
        *(_OWORD *)(a1 + v14 + 48) = *(_OWORD *)(a1 + v14 + 32);
        if (v14 == -32)
          break;
        v15 = *(_QWORD *)(a1 + v14 + 16);
        v14 -= 16;
        if (v12 >= v15)
        {
          v16 = (_QWORD *)(a1 + v14 + 48);
          goto LABEL_12;
        }
      }
      v16 = (_QWORD *)a1;
LABEL_12:
      *v16 = v12;
      v16[1] = v13;
      if (++v11 == 8)
        return v9 + 2 == a2;
    }
    v8 = v9;
    v10 += 16;
    v9 += 2;
    if (v9 == a2)
      return 1;
  }
}

_QWORD *google::protobuf::Map<long long,std::string>::operator[](uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  google::protobuf::Arena *v12;
  uint64_t *Aligned;
  _QWORD *v14;
  google::protobuf::Arena *v15;
  uint64_t v17;
  char v18;
  unint64_t v19;
  __int128 v20;
  uint64_t v21[4];
  _QWORD v22[4];

  v4 = *(_QWORD **)(a1 + 16);
  v20 = (unint64_t)*a2;
  google::protobuf::Map<long long,double>::InnerMap::FindHelper(v22, v4, (uint64_t *)&v20, 0);
  v6 = v22[0];
  if (v22[0])
    goto LABEL_12;
  v7 = v4[1];
  v8 = *v4 + 1;
  v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      v17 = 2 * v7;
LABEL_26:
      google::protobuf::Map<long long,std::string>::InnerMap::Resize((uint64_t)v4, v17, v5);
      google::protobuf::Map<long long,double>::InnerMap::FindHelper(v21, v4, (uint64_t *)&v20, 0);
      v11 = v21[3];
      goto LABEL_8;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    v18 = 0;
    v19 = ((5 * v8) >> 2) + 1;
    do
      ++v18;
    while (v19 << v18 < v9);
    v17 = v7 >> v18 <= 8 ? 8 : v7 >> v18;
    if (v17 != v7)
      goto LABEL_26;
  }
  v11 = v22[3];
LABEL_8:
  v12 = (google::protobuf::Arena *)v4[5];
  if (v12)
    Aligned = (uint64_t *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E0DE4EE8], 24);
  else
    Aligned = (uint64_t *)operator new(0x18uLL);
  *(_OWORD *)Aligned = v20;
  google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v21, (uint64_t)v4, v11, Aligned);
  ++*v4;
  v6 = v21[0];
LABEL_12:
  v14 = *(_QWORD **)(v6 + 8);
  if (!v14)
  {
    if (*(_QWORD *)a1)
    {
      v14 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E0DE4EE8], 32);
      *v14 = 0;
      v15 = *(google::protobuf::Arena **)a1;
      v14[2] = 0;
      v14[3] = 0;
      v14[1] = 0;
      google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v15, (google::protobuf::Arena *)(v14 + 1));
      *v14 = *a2;
    }
    else
    {
      v14 = (_QWORD *)operator new();
      *v14 = *a2;
      v14[1] = 0;
      v14[2] = 0;
      v14[3] = 0;
    }
    *(_QWORD *)(v6 + 8) = v14;
  }
  return v14 + 1;
}

double google::protobuf::Map<long long,std::string>::erase(uint64_t a1, uint64_t *a2)
{
  double result;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  google::protobuf::Map<long long,double>::InnerMap::FindHelper(&v6, *(_QWORD **)(a1 + 16), a2, 0);
  result = *(double *)&v6;
  if ((_QWORD)v6)
  {
    v4 = v6;
    v5 = v7;
    *(_QWORD *)&result = google::protobuf::Map<long long,std::string>::erase((uint64_t)&v6, (_QWORD *)a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::NewEntry(google::protobuf::Arena *a1)
{
  uint64_t result;

  if (a1)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 32) = a1;
  }
  else
  {
    result = operator new();
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_QWORD *)(result + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E95679E8;
  return result;
}

__n128 google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::MessageLite,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>,google::protobuf::Map<long long,std::string>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  void **v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 136))(*(_QWORD *)(a1 + 32));
  v2 = (void **)google::protobuf::Map<long long,std::string>::operator[](*(_QWORD *)(a1 + 8), (_QWORD *)(a1 + 16));
  *(_QWORD *)(a1 + 24) = v2;
  v3 = *(_QWORD *)(a1 + 32);
  *(_DWORD *)(v3 + 40) |= 2u;
  v4 = *(_QWORD *)(v3 + 24);
  if ((uint64_t *)v4 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(v3 + 24), *(google::protobuf::Arena ***)(v3 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
    v4 = *(_QWORD *)(v3 + 24);
    v2 = *(void ***)(a1 + 24);
  }
  if (*((char *)v2 + 23) < 0)
    operator delete(*v2);
  result = *(__n128 *)v4;
  v2[2] = *(void **)(v4 + 16);
  *(__n128 *)v2 = result;
  *(_BYTE *)(v4 + 23) = 0;
  *(_BYTE *)v4 = 0;
  return result;
}

uint64_t *google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  unint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v4 = a4;
  v5 = a3;
  v7 = result;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(v8 + 8 * a3);
  if (!v9)
  {
    a4[2] = 0;
    *(_QWORD *)(v8 + 8 * a3) = a4;
    goto LABEL_8;
  }
  if (v9 != *(_QWORD *)(v8 + 8 * (a3 ^ 1)))
  {
    v10 = 0;
    v11 = *(_QWORD *)(v8 + 8 * a3);
    do
    {
      ++v10;
      v11 = *(_QWORD *)(v11 + 16);
    }
    while (v11);
    if (v10 < 8)
    {
      a4[2] = v9;
      *(_QWORD *)(v8 + 8 * a3) = a4;
LABEL_11:
      *v7 = v4;
      v7[1] = a2;
      v7[2] = v5;
      return result;
    }
    google::protobuf::Map<long long,std::string>::InnerMap::TreeConvert(a2, a3);
    v4[2] = 0;
    v14 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8 * v5);
    v15 = v4;
    result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v14, v4, (uint64_t *)&v15);
    v5 &= ~1uLL;
    v4 = (uint64_t *)result[4];
LABEL_8:
    v12 = *(_QWORD *)(a2 + 24);
    if (v5 < v12)
      v12 = v5;
    *(_QWORD *)(a2 + 24) = v12;
    goto LABEL_11;
  }
  a4[2] = 0;
  v13 = *(_QWORD *)(v8 + 8 * a3);
  v15 = a4;
  result = std::__tree<long long *,google::protobuf::Map<long long,double>::InnerMap::KeyCompare,google::protobuf::Map<long long,double>::MapAllocator<long long *>>::__emplace_unique_key_args<long long *,long long *>(v13, a4, (uint64_t *)&v15);
  *v7 = result[4];
  v7[1] = a2;
  v7[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

uint64_t *google::protobuf::Map<long long,std::string>::InnerMap::TreeConvert(uint64_t a1, uint64_t a2)
{
  google::protobuf::Arena *v4;
  _QWORD *Aligned;
  uint64_t v6;
  uint64_t v7;
  uint64_t **v8;
  _QWORD **v9;
  uint64_t *v10;
  uint64_t **v11;
  uint64_t v12;
  uint64_t **v13;
  BOOL v14;
  uint64_t v15;
  uint64_t **v16;
  uint64_t **v17;
  uint64_t *v18;
  _QWORD *v19;
  _QWORD **v20;
  uint64_t v21;
  uint64_t *result;
  _QWORD **v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(google::protobuf::Arena **)(a1 + 40);
  if (v4)
    Aligned = google::protobuf::Arena::AllocateAligned(v4, MEMORY[0x1E0DE4EE8], 32);
  else
    Aligned = operator new(0x20uLL);
  v6 = (uint64_t)Aligned;
  v25 = *(_QWORD *)(a1 + 40);
  v7 = v25;
  v26 = 0;
  v23 = &v24;
  v24 = 0;
  Aligned[1] = 0;
  v8 = (uint64_t **)(Aligned + 1);
  Aligned[2] = v7;
  Aligned[3] = 0;
  *Aligned = Aligned + 1;
  v9 = v23;
  if (v23 != &v24)
  {
    do
    {
      v10 = *(uint64_t **)(v6 + 8);
      v11 = v8;
      if (*(uint64_t ***)v6 == v8)
        goto LABEL_11;
      v12 = *(_QWORD *)(v6 + 8);
      v13 = v8;
      if (v10)
      {
        do
        {
          v11 = (uint64_t **)v12;
          v12 = *(_QWORD *)(v12 + 8);
        }
        while (v12);
      }
      else
      {
        do
        {
          v11 = (uint64_t **)v13[2];
          v14 = *v11 == (uint64_t *)v13;
          v13 = v11;
        }
        while (v14);
      }
      v15 = *v9[4];
      if (*v11[4] < v15)
      {
LABEL_11:
        if (v10)
          v16 = v11;
        else
          v16 = v8;
        if (v10)
          v17 = v11 + 1;
        else
          v17 = v8;
      }
      else
      {
        v16 = v8;
        v17 = v8;
        if (v10)
        {
          v17 = v8;
          while (1)
          {
            while (1)
            {
              v16 = (uint64_t **)v10;
              v21 = *(_QWORD *)v10[4];
              if (v15 >= v21)
                break;
              v10 = *v16;
              v17 = v16;
              if (!*v16)
                goto LABEL_18;
            }
            if (v21 >= v15)
              break;
            v17 = v16 + 1;
            v10 = v16[1];
            if (!v10)
              goto LABEL_18;
          }
        }
      }
      if (!*v17)
      {
LABEL_18:
        v18 = (uint64_t *)google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<std::__tree_node<std::string*,void *>>::allocate(*(google::protobuf::Arena **)(v6 + 16));
        v18[4] = (uint64_t)v9[4];
        std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::__insert_node_at((uint64_t **)v6, (uint64_t)v16, v17, v18);
      }
      v19 = v9[1];
      if (v19)
      {
        do
        {
          v20 = (_QWORD **)v19;
          v19 = (_QWORD *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          v20 = (_QWORD **)v9[2];
          v14 = *v20 == v9;
          v9 = v20;
        }
        while (!v14);
      }
      v9 = v20;
    }
    while (v20 != &v24);
  }
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&v23, v24);
  google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2, v6);
  result = google::protobuf::Map<long long,double>::InnerMap::CopyListToTree(*(uint64_t **)(a1 + 32), a2 ^ 1, v6);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * (a2 ^ 1)) = v6;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * a2) = v6;
  return result;
}

void sub_1D3B480FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10)
{
  uint64_t v10;

  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy(v10, *(_QWORD **)(v10 + 8));
  std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::destroy((uint64_t)&a9, a10);
  _Unwind_Resume(a1);
}

void google::protobuf::Map<long long,std::string>::InnerMap::Resize(uint64_t a1, uint64_t a2, size_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  google::protobuf::Arena **v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15[3];

  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2;
  v6 = *(_QWORD **)(a1 + 32);
  v7 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(*(google::protobuf::Arena **)(a1 + 40), a2, a3);
  bzero(v7, 8 * a2);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 32) = v7;
  while (v8 < v5)
  {
    v9 = v6[v8];
    if (v9)
    {
      if (v9 == v6[v8 ^ 1])
      {
        v11 = *(_QWORD **)v9;
        do
        {
          google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v15, a1, (*(_QWORD *)(a1 + 8) - 1) & (*(_QWORD *)(a1 + 16) + *(_QWORD *)v11[4]), (uint64_t *)v11[4]);
          v12 = (_QWORD *)v11[1];
          if (v12)
          {
            do
            {
              v13 = v12;
              v12 = (_QWORD *)*v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              v13 = (_QWORD *)v11[2];
              v14 = *v13 == (_QWORD)v11;
              v11 = v13;
            }
            while (!v14);
          }
          v11 = v13;
        }
        while (v13 != (_QWORD *)(v9 + 8));
        ++v8;
        google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(*(_QWORD *)(a1 + 40), (_QWORD **)v9);
      }
      else
      {
        do
        {
          v10 = *(_QWORD *)(v9 + 16);
          google::protobuf::Map<long long,std::string>::InnerMap::InsertUnique(v15, a1, (*(_QWORD *)(a1 + 8) - 1) & (*(_QWORD *)(a1 + 16) + *(_QWORD *)v9), (uint64_t *)v9);
          v9 = v10;
        }
        while (v10);
      }
    }
    ++v8;
  }
  if (!*(_QWORD *)(a1 + 40))
    operator delete(v6);
}

void *CoreML::Specification::Int64ToStringMap::MergeFrom(CoreML::Specification::Int64ToStringMap *this, const CoreML::Specification::Int64ToStringMap *a2)
{
  uint64_t v4;
  void *result;
  uint64_t *v6;
  char *v7;
  _QWORD *v8;
  const std::string *v9;
  std::string *v10;
  uint64_t *v11[3];

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  result = google::protobuf::Map<std::string,std::string>::begin(v11, *((_QWORD **)a2 + 5));
  v6 = v11[0];
  if (v11[0])
  {
    v7 = (char *)this + 24;
    do
    {
      v8 = (_QWORD *)v6[1];
      v9 = (const std::string *)(v8 + 1);
      v10 = (std::string *)google::protobuf::Map<long long,std::string>::operator[]((uint64_t)v7, v8);
      std::string::operator=(v10, v9);
      result = google::protobuf::Map<long long,double>::InnerMap::iterator_base<google::protobuf::Map<long long,double>::KeyValuePair const>::operator++(v11);
      v6 = v11[0];
    }
    while (v11[0]);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64ToStringMap>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToStringMap>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64ToStringMap>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

_QWORD *google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E9567208;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  return a1;
}

void google::protobuf::internal::MapEntryLite<long long,std::string,(google::protobuf::internal::WireFormatLite::FieldType)3,(google::protobuf::internal::WireFormatLite::FieldType)9,0>::~MapEntryLite(_QWORD *a1)
{
  *a1 = &off_1E9567208;
  if ((_QWORD *)a1[1] != a1 && !a1[4])
    google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(a1[3]);
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::Map<std::string,long long>::InnerMap::InnerMap(_QWORD *a1, google::protobuf::Arena *a2)
{
  std::random_device *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  size_t v8;
  google::protobuf::Arena **v9;
  __int128 v11;
  unsigned int v12[258];
  std::random_device v13;

  *a1 = 0;
  v4 = std::random_device::random_device[abi:ne180100](&v13);
  v5 = MEMORY[0x1D82518F0](v4);
  v6 = v5 + ((v5 / 0x7FFFFFFF) | ((v5 / 0x7FFFFFFF) << 31));
  if (v6 <= 1)
    v6 = 1;
  v12[0] = v6;
  std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>::__init[abi:ne180100](v12);
  v11 = xmmword_1D3BDFCA0;
  v7 = std::uniform_int_distribution<unsigned long>::operator()<std::shuffle_order_engine<std::linear_congruential_engine<unsigned int,16807u,0u,2147483647u>,256ul>>((uint64_t)v12, &v11);
  std::random_device::~random_device(&v13);
  a1[2] = v7;
  a1[4] = 0;
  a1[5] = a2;
  v9 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::MapAllocator<void *>::allocate(a2, 8, v8);
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  a1[3] = 8;
  a1[4] = v9;
  a1[1] = 8;
  return a1;
}

void sub_1D3B484C8(void *a1)
{
  uint64_t v1;

  std::random_device::~random_device((std::random_device *)(v1 - 36));
  __cxa_begin_catch(a1);
  __cxa_end_catch();
  JUMPOUT(0x1D3B48484);
}

uint64_t *CoreML::Specification::Int64Range::default_instance(CoreML::Specification::Int64Range *this)
{
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  return &CoreML::Specification::_Int64Range_default_instance_;
}

uint64_t *CoreML::Specification::Int64Set::default_instance(CoreML::Specification::Int64Set *this)
{
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  return &CoreML::Specification::_Int64Set_default_instance_;
}

uint64_t *CoreML::Specification::DoubleRange::default_instance(CoreML::Specification::DoubleRange *this)
{
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(this);
  return &CoreML::Specification::_DoubleRange_default_instance_;
}

void CoreML::Specification::BayesianProbitRegressor_Gaussian::~BayesianProbitRegressor_Gaussian(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  *(_QWORD *)this = &off_1E9563C00;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9563C00;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::BayesianProbitRegressor_Gaussian::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.Gaussian");
}

CoreML::Specification::BayesianProbitRegressor_Gaussian *CoreML::Specification::BayesianProbitRegressor_Gaussian::New(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return CoreML::Specification::BayesianProbitRegressor_Gaussian::New(this, 0);
}

CoreML::Specification::BayesianProbitRegressor_Gaussian *CoreML::Specification::BayesianProbitRegressor_Gaussian::New(CoreML::Specification::BayesianProbitRegressor_Gaussian *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::BayesianProbitRegressor_Gaussian *v3;

  v3 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)operator new();
  CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_Gaussian>(a2, v3);
  return v3;
}

void sub_1D3B48624(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::IsInitialized(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return 1;
}

BOOL CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_Gaussian *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  BOOL v14;
  _BOOL8 result;
  unint64_t v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 17)
          goto LABEL_20;
        v16 = 0;
        v12 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_QWORD *)this + 3) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 9)
        break;
      v16 = 0;
      v10 = (unint64_t *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
        if (!result)
          return result;
        v11 = v16;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  uint64_t v1;

  v1 = 9;
  if (*((double *)this + 2) == 0.0)
    v1 = 0;
  if (*((double *)this + 3) != 0.0)
    v1 += 9;
  *((_DWORD *)this + 8) = v1;
  return v1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  double v5;
  double v6;

  v4 = this;
  v5 = *(double *)(this + 16);
  if (v5 != 0.0)
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v5, a3);
  v6 = *(double *)(v4 + 24);
  if (v6 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  return this;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_Gaussian::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  return *((unsigned int *)this + 8);
}

CoreML::Specification::BayesianProbitRegressor_Gaussian *CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(CoreML::Specification::BayesianProbitRegressor_Gaussian *this)
{
  *(_QWORD *)this = &off_1E9563C00;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BayesianProbitRegressor_Gaussian *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_)
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B48880(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_Gaussian>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_Gaussian>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_Gaussian>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::TableStruct *this)
{
  double result;

  google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_ = (uint64_t)&off_1E9563C00;
  unk_1EDB934F0 = 0;
  qword_1EDB934F8 = 0;
  unk_1EDB93500 = 0;
  dword_1EDB93508 = 0;
  byte_1EDB93510 = 1;
  CoreML::Specification::_BayesianProbitRegressor_default_instance_ = (uint64_t)&off_1E95610A8;
  result = 0.0;
  unk_1EDB922A8 = 0u;
  unk_1EDB922B8 = 0u;
  qword_1EDB922C8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB922D0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB922D8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB922E0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB922E8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB922F0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB922F8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB92300 = &google::protobuf::internal::fixed_address_empty_string;
  byte_1EDB92318 = 1;
  qword_1EDB92308 = (uint64_t)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
  unk_1EDB92310 = 0;
  return result;
}

void CoreML::Specification::BayesianProbitRegressor::~BayesianProbitRegressor(CoreML::Specification::BayesianProbitRegressor *this)
{
  CoreML::Specification::BayesianProbitRegressor::~BayesianProbitRegressor(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_1E95610A8;
  v2 = *((_QWORD *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D8251A40](v4, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 7);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x1D8251A40](v6, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 8);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x1D8251A40](v7, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x1D8251A40](v8, 0x1012C40EC159624);
  }
  v9 = *((_QWORD *)this + 10);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    MEMORY[0x1D8251A40](v9, 0x1012C40EC159624);
  }
  v10 = *((_QWORD *)this + 11);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    MEMORY[0x1D8251A40](v10, 0x1012C40EC159624);
  }
  v11 = *((_QWORD *)this + 12);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    MEMORY[0x1D8251A40](v11, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    v12 = *((_QWORD *)this + 13);
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::BayesianProbitRegressor::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor");
}

CoreML::Specification::BayesianProbitRegressor *CoreML::Specification::BayesianProbitRegressor::New(CoreML::Specification::BayesianProbitRegressor *this)
{
  return CoreML::Specification::BayesianProbitRegressor::New(this, 0);
}

CoreML::Specification::BayesianProbitRegressor *CoreML::Specification::BayesianProbitRegressor::New(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::BayesianProbitRegressor *v3;

  v3 = (CoreML::Specification::BayesianProbitRegressor *)operator new();
  CoreML::Specification::BayesianProbitRegressor::BayesianProbitRegressor(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor>(a2, v3);
  return v3;
}

void sub_1D3B48A54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4092A090F6);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::Clear(CoreML::Specification::BayesianProbitRegressor *this)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (uint64_t *)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(v4 + 16);
      *(_DWORD *)(v4 + 40) = 0;
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  v5 = *((_QWORD *)this + 5);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
    }
  }
  v6 = *((_QWORD *)this + 6);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
    }
  }
  v7 = *((_QWORD *)this + 7);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(_BYTE **)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v7 = 0;
      *(_BYTE *)(v7 + 23) = 0;
    }
  }
  v8 = *((_QWORD *)this + 8);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0)
    {
      **(_BYTE **)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v8 = 0;
      *(_BYTE *)(v8 + 23) = 0;
    }
  }
  v9 = *((_QWORD *)this + 9);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      **(_BYTE **)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v9 = 0;
      *(_BYTE *)(v9 + 23) = 0;
    }
  }
  v10 = *((_QWORD *)this + 10);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
    {
      **(_BYTE **)v10 = 0;
      *(_QWORD *)(v10 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v10 = 0;
      *(_BYTE *)(v10 + 23) = 0;
    }
  }
  v11 = *((_QWORD *)this + 11);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(_BYTE **)v11 = 0;
      *(_QWORD *)(v11 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v11 = 0;
      *(_BYTE *)(v11 + 23) = 0;
    }
  }
  v12 = *((_QWORD *)this + 12);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(_BYTE **)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v12 = 0;
      *(_BYTE *)(v12 + 23) = 0;
    }
  }
  result = *((_QWORD *)this + 13);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::IsInitialized(CoreML::Specification::BayesianProbitRegressor *this)
{
  return 1;
}

BOOL CoreML::Specification::BayesianProbitRegressor::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  std::string **v6;
  std::string **v7;
  std::string **v8;
  unsigned __int8 *v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  BOOL v15;
  unsigned int TagFallback;
  char *v17;
  int v18;
  CoreML::Specification::BayesianProbitRegressor_Gaussian *v19;
  char *v20;
  int VarintSizeAsIntFallback;
  int *v22;
  int v23;
  int v24;
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight *Aligned;
  std::string *v26;
  _BOOL8 result;
  std::string *v28;
  std::string::size_type size;
  std::string *v30;
  std::string *v31;
  std::string *v32;
  std::string *v33;
  std::string *v34;
  std::string *v35;
  std::string *v36;
  int v37;
  unsigned int v38;
  int v39;
  BOOL v40;
  int v41;
  const char *v42;
  google::protobuf::Arena *v43;
  google::protobuf::Arena **v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  uint64_t Varint32Fallback;
  google::protobuf::internal::RepeatedPtrFieldBase *v55;
  std::string **v56;
  std::string **v57;
  std::string **v58;
  std::string **v59;

  v58 = (std::string **)((char *)this + 88);
  v59 = (std::string **)((char *)this + 96);
  v56 = (std::string **)((char *)this + 72);
  v57 = (std::string **)((char *)this + 80);
  v5 = (std::string **)((char *)this + 64);
  v6 = (std::string **)((char *)this + 56);
  v7 = (std::string **)((char *)this + 48);
  v8 = (std::string **)((char *)this + 40);
  v55 = (CoreML::Specification::BayesianProbitRegressor *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v9 = *(unsigned __int8 **)a2;
    v10 = *((_QWORD *)a2 + 1);
    if (*(_QWORD *)a2 >= v10)
    {
      LODWORD(v12) = 0;
      goto LABEL_16;
    }
    v11 = v9 + 1;
    v12 = *v9;
    if ((char)*v9 >= 1)
    {
      *(_QWORD *)a2 = v11;
      v13 = v12 | 0x100000000;
      if ((v13 & 0x100000000) != 0)
        goto LABEL_17;
      goto LABEL_9;
    }
    if ((unint64_t)v11 < v10)
    {
      v14 = *v11;
      if ((v12 & ~v14) >= 0x80)
        break;
    }
LABEL_16:
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
    v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v13 & 0x100000000) != 0)
      goto LABEL_17;
LABEL_9:
    if ((_DWORD)v13)
      v15 = (v13 & 7) == 4;
    else
      v15 = 1;
    if (v15)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)
      goto LABEL_123;
  }
  *(_QWORD *)a2 = v9 + 2;
  v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v13 >> 3)
  {
    case 1u:
      if (v13 != 8)
        goto LABEL_9;
      v17 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v18 = 0;
      }
      else
      {
        v18 = *v17;
        if ((*v17 & 0x80000000) == 0)
        {
          *((_DWORD *)this + 28) = v18;
          *(_QWORD *)a2 = v17 + 1;
          goto LABEL_2;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
      *((_DWORD *)this + 28) = Varint32Fallback;
      if (Varint32Fallback < 0)
        goto LABEL_123;
      goto LABEL_2;
    case 2u:
      if (v13 != 18)
        goto LABEL_9;
      v19 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((_QWORD *)this + 13);
      if (!v19)
      {
        v19 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)operator new();
        CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(v19);
        *((_QWORD *)this + 13) = v19;
      }
      v20 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          goto LABEL_123;
      }
      else
      {
        VarintSizeAsIntFallback = *v20;
        *(_QWORD *)a2 = v20 + 1;
      }
      v37 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v39 = *((_DWORD *)a2 + 13);
      v40 = __OFSUB__(v39--, 1);
      *((_DWORD *)a2 + 13) = v39;
      if (v39 < 0 != v40)
        goto LABEL_123;
      v41 = v37;
      result = CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(v19, (char **)a2, v38);
      if (!result)
        return result;
      goto LABEL_119;
    case 3u:
      if (v13 != 26)
        goto LABEL_9;
      v22 = (int *)*((_QWORD *)this + 4);
      if (!v22)
      {
        v23 = *((_DWORD *)this + 6);
        v24 = *((_DWORD *)this + 7);
LABEL_104:
        if (v23 <= v24)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v55, v24 - v23 + 1);
          v22 = (int *)*((_QWORD *)this + 4);
        }
        v24 = *v22;
        goto LABEL_107;
      }
      v23 = *((_DWORD *)this + 6);
      v24 = *v22;
      if (v23 < *v22)
      {
        *((_DWORD *)this + 6) = v23 + 1;
        Aligned = *(CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)&v22[2 * v23 + 2];
        goto LABEL_113;
      }
      if (v24 == *((_DWORD *)this + 7))
        goto LABEL_104;
LABEL_107:
      *v22 = v24 + 1;
      v43 = *(google::protobuf::Arena **)v55;
      if (*(_QWORD *)v55)
      {
        CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(Aligned);
        v44 = google::protobuf::Arena::AllocateAligned(v43, 0, 24);
        *v44 = Aligned;
        v44[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
        v45 = (unint64_t *)((char *)v43 + 32);
        do
          v46 = __ldxr(v45);
        while (__stxr((unint64_t)v44, v45));
        v44[2] = (google::protobuf::Arena *)v46;
      }
      else
      {
        Aligned = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)operator new();
        CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(Aligned);
      }
      v47 = *((_QWORD *)this + 4);
      v48 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v48 + 1;
      *(_QWORD *)(v47 + 8 * v48 + 8) = Aligned;
LABEL_113:
      v49 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v49 < 0)
      {
        v50 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v50 < 0)
          goto LABEL_123;
      }
      else
      {
        v50 = *v49;
        *(_QWORD *)a2 = v49 + 1;
      }
      v51 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50);
      v53 = *((_DWORD *)a2 + 13);
      v40 = __OFSUB__(v53--, 1);
      *((_DWORD *)a2 + 13) = v53;
      if (v53 < 0 == v40)
      {
        v41 = v51;
        result = CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergePartialFromCodedStream(Aligned, a2, v52);
        if (!result)
          return result;
LABEL_119:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v41))
          goto LABEL_2;
      }
LABEL_123:
      result = 0;
      break;
    case 0xAu:
      if (v13 != 82)
        goto LABEL_9;
      v26 = *v8;
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v26 = *v8;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v26);
      if (!result)
        return result;
      v28 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName";
      goto LABEL_101;
    case 0xBu:
      if (v13 != 90)
        goto LABEL_9;
      v30 = *v7;
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v30 = *v7;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v30);
      if (!result)
        return result;
      v28 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName";
      goto LABEL_101;
    case 0xCu:
      if (v13 != 98)
        goto LABEL_9;
      v31 = *v6;
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v31 = *v6;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v31);
      if (!result)
        return result;
      v28 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName";
      goto LABEL_101;
    case 0xDu:
      if (v13 != 106)
        goto LABEL_9;
      v32 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v32 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v32);
      if (!result)
        return result;
      v28 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName";
      goto LABEL_101;
    case 0x14u:
      if (v13 != 162)
        goto LABEL_9;
      v33 = *v56;
      if (*v56 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v56, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v33 = *v56;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v33);
      if (!result)
        return result;
      v28 = *v56;
      if (SHIBYTE((*v56)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v56)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v56)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName";
      goto LABEL_101;
    case 0x15u:
      if (v13 != 170)
        goto LABEL_9;
      v34 = *v57;
      if (*v57 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v57, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v34 = *v57;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v34);
      if (!result)
        return result;
      v28 = *v57;
      if (SHIBYTE((*v57)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v57)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v57)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName";
      goto LABEL_101;
    case 0x16u:
      if (v13 != 178)
        goto LABEL_9;
      v35 = *v58;
      if (*v58 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v58, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v35 = *v58;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v35);
      if (!result)
        return result;
      v28 = *v58;
      if (SHIBYTE((*v58)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v58)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v58)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName";
      goto LABEL_101;
    case 0x17u:
      if (v13 != 186)
        goto LABEL_9;
      v36 = *v59;
      if (*v59 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v59, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v36 = *v59;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v36);
      if (!result)
        return result;
      v28 = *v59;
      if (SHIBYTE((*v59)->__r_.__value_.__r.__words[2]) < 0)
      {
        v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
        size = (*v59)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v59)->__r_.__value_.__r.__words[2]);
      }
      v42 = "CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName";
LABEL_101:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v28, size, 0, (uint64_t)v42))
        goto LABEL_123;
      goto LABEL_2;
    default:
      goto LABEL_9;
  }
  return result;
}

void sub_1D3B49334(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::BayesianProbitRegressor_FeatureWeight::ByteSizeLong(*(CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((_QWORD *)this + 5);
  v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v6 + 23))
  {
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v6 + 8);
  if ((v7 & 0x80u) == 0)
    v8 = v7;
  v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  v9 = *((_QWORD *)this + 6);
  v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_16;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_16;
  }
  v11 = *(_QWORD *)(v9 + 8);
  if ((v10 & 0x80u) == 0)
    v11 = v10;
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  v12 = *((_QWORD *)this + 7);
  v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(_QWORD *)(v12 + 8))
      goto LABEL_21;
  }
  else if (!*(_BYTE *)(v12 + 23))
  {
    goto LABEL_21;
  }
  v14 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v14 = v13;
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  v15 = *((_QWORD *)this + 8);
  v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_26;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_26;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if ((v16 & 0x80u) == 0)
    v17 = v16;
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_26:
  v18 = *((_QWORD *)this + 9);
  v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(_QWORD *)(v18 + 8))
      goto LABEL_31;
  }
  else if (!*(_BYTE *)(v18 + 23))
  {
    goto LABEL_31;
  }
  v20 = *(_QWORD *)(v18 + 8);
  if ((v19 & 0x80u) == 0)
    v20 = v19;
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_31:
  v21 = *((_QWORD *)this + 10);
  v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(_QWORD *)(v21 + 8))
      goto LABEL_36;
  }
  else if (!*(_BYTE *)(v21 + 23))
  {
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v21 + 8);
  if ((v22 & 0x80u) == 0)
    v23 = v22;
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_36:
  v24 = *((_QWORD *)this + 11);
  v25 = *(unsigned __int8 *)(v24 + 23);
  if (*(char *)(v24 + 23) < 0)
  {
    if (!*(_QWORD *)(v24 + 8))
      goto LABEL_41;
  }
  else if (!*(_BYTE *)(v24 + 23))
  {
    goto LABEL_41;
  }
  v26 = *(_QWORD *)(v24 + 8);
  if ((v25 & 0x80u) == 0)
    v26 = v25;
  v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_41:
  v27 = *((_QWORD *)this + 12);
  v28 = *(unsigned __int8 *)(v27 + 23);
  if (*(char *)(v27 + 23) < 0)
  {
    if (!*(_QWORD *)(v27 + 8))
      goto LABEL_46;
  }
  else if (!*(_BYTE *)(v27 + 23))
  {
    goto LABEL_46;
  }
  v29 = *(_QWORD *)(v27 + 8);
  if ((v28 & 0x80u) == 0)
    v29 = v28;
  v4 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_46:
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    v30 = *((_QWORD *)this + 13);
    if (v30)
    {
      v31 = 9;
      if (*(double *)(v30 + 16) == 0.0)
        v31 = 0;
      if (*(double *)(v30 + 24) != 0.0)
        v31 += 9;
      *(_DWORD *)(v30 + 32) = v31;
      v4 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v32 = *((_DWORD *)this + 28);
  if (v32)
    v4 += ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  *((_DWORD *)this + 29) = v4;
  return v4;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int i;
  unsigned int *v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v6 = *((unsigned int *)this + 28);
  if ((_DWORD)v6)
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    v7 = *((_QWORD *)this + 13);
    if (v7)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  v8 = *((_DWORD *)this + 6);
  if (v8)
  {
    for (i = 0; i != v8; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*((_QWORD *)this + 4) + 8 * i + 8), a2, a4);
  }
  v10 = (unsigned int *)*((_QWORD *)this + 5);
  if (*((char *)v10 + 23) < 0)
  {
    v11 = *((_QWORD *)v10 + 1);
    if (!v11)
      goto LABEL_15;
    v10 = *(unsigned int **)v10;
    goto LABEL_14;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((_BYTE *)v10 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((_QWORD *)this + 5), a2);
  }
LABEL_15:
  v12 = (unsigned int *)*((_QWORD *)this + 6);
  if (*((char *)v12 + 23) < 0)
  {
    v13 = *((_QWORD *)v12 + 1);
    if (!v13)
      goto LABEL_21;
    v12 = *(unsigned int **)v12;
    goto LABEL_20;
  }
  LODWORD(v13) = *((unsigned __int8 *)v12 + 23);
  if (*((_BYTE *)v12 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((_QWORD *)this + 6), a2);
  }
LABEL_21:
  v14 = (unsigned int *)*((_QWORD *)this + 7);
  if (*((char *)v14 + 23) < 0)
  {
    v15 = *((_QWORD *)v14 + 1);
    if (!v15)
      goto LABEL_27;
    v14 = *(unsigned int **)v14;
    goto LABEL_26;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((_BYTE *)v14 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((_QWORD *)this + 7), a2);
  }
LABEL_27:
  v16 = (unsigned int *)*((_QWORD *)this + 8);
  if (*((char *)v16 + 23) < 0)
  {
    v17 = *((_QWORD *)v16 + 1);
    if (!v17)
      goto LABEL_33;
    v16 = *(unsigned int **)v16;
    goto LABEL_32;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((_BYTE *)v16 + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, *((_QWORD *)this + 8), a2);
  }
LABEL_33:
  v18 = (unsigned int *)*((_QWORD *)this + 9);
  if (*((char *)v18 + 23) < 0)
  {
    v19 = *((_QWORD *)v18 + 1);
    if (!v19)
      goto LABEL_39;
    v18 = *(unsigned int **)v18;
    goto LABEL_38;
  }
  LODWORD(v19) = *((unsigned __int8 *)v18 + 23);
  if (*((_BYTE *)v18 + 23))
  {
LABEL_38:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, v19, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((_QWORD *)this + 9), a2);
  }
LABEL_39:
  v20 = (unsigned int *)*((_QWORD *)this + 10);
  if (*((char *)v20 + 23) < 0)
  {
    v21 = *((_QWORD *)v20 + 1);
    if (!v21)
      goto LABEL_45;
    v20 = *(unsigned int **)v20;
    goto LABEL_44;
  }
  LODWORD(v21) = *((unsigned __int8 *)v20 + 23);
  if (*((_BYTE *)v20 + 23))
  {
LABEL_44:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v20, v21, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((_QWORD *)this + 10), a2);
  }
LABEL_45:
  v22 = (unsigned int *)*((_QWORD *)this + 11);
  if (*((char *)v22 + 23) < 0)
  {
    v23 = *((_QWORD *)v22 + 1);
    if (!v23)
      goto LABEL_51;
    v22 = *(unsigned int **)v22;
    goto LABEL_50;
  }
  LODWORD(v23) = *((unsigned __int8 *)v22 + 23);
  if (*((_BYTE *)v22 + 23))
  {
LABEL_50:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v23, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x16u, *((_QWORD *)this + 11), a2);
  }
LABEL_51:
  result = *((_QWORD *)this + 12);
  if (*(char *)(result + 23) < 0)
  {
    v25 = *(_QWORD *)(result + 8);
    if (!v25)
      return result;
    result = *(_QWORD *)result;
    goto LABEL_56;
  }
  LODWORD(v25) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_56:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v25, 1, (uint64_t)"CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x17u, *((_QWORD *)this + 12), a2);
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor::GetCachedSize(CoreML::Specification::BayesianProbitRegressor *this)
{
  return *((unsigned int *)this + 29);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::ByteSizeLong(*(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((_DWORD *)this + 10);
  if (v6)
    v4 += ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::ByteSizeLong(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  if (this == (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    v1 = 0;
  }
  else
  {
    v1 = *((_QWORD *)this + 2);
    if (v1)
    {
      v2 = 9;
      if (*(double *)(v1 + 16) == 0.0)
        v2 = 0;
      if (*(double *)(v1 + 24) != 0.0)
        v2 += 9;
      *(_DWORD *)(v1 + 32) = v2;
      v1 = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v3 = *((_DWORD *)this + 6);
  if (v3)
    v1 += ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  *((_DWORD *)this + 7) = v1;
  return v1;
}

BOOL CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v11;
  int v12;
  int *v13;
  int v14;
  int v15;
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *Aligned;
  google::protobuf::Arena *v18;
  google::protobuf::Arena **v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int VarintSizeAsIntFallback;
  int v26;
  unsigned int v27;
  int v28;
  BOOL v29;
  int v30;
  _BOOL8 result;
  uint64_t Varint32Fallback;

  v5 = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_21;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_21;
LABEL_8:
        if (v8 >> 3 != 2)
          break;
        if (v8 != 18)
          goto LABEL_21;
        v13 = (int *)*((_QWORD *)this + 4);
        if (!v13)
        {
          v14 = *((_DWORD *)this + 6);
          v15 = *((_DWORD *)this + 7);
          goto LABEL_29;
        }
        v14 = *((_DWORD *)this + 6);
        v15 = *v13;
        if (v14 >= *v13)
        {
          if (v15 == *((_DWORD *)this + 7))
          {
LABEL_29:
            if (v14 <= v15)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v15 - v14 + 1);
              v13 = (int *)*((_QWORD *)this + 4);
            }
            v15 = *v13;
          }
          *v13 = v15 + 1;
          v18 = *(google::protobuf::Arena **)v5;
          if (*(_QWORD *)v5)
          {
            CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(Aligned);
            v19 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
            *v19 = Aligned;
            v19[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
            v20 = (unint64_t *)((char *)v18 + 32);
            do
              v21 = __ldxr(v20);
            while (__stxr((unint64_t)v19, v20));
            v19[2] = (google::protobuf::Arena *)v21;
          }
          else
          {
            Aligned = (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)operator new();
            CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(Aligned);
          }
          v22 = *((_QWORD *)this + 4);
          v23 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v23 + 1;
          *(_QWORD *)(v22 + 8 * v23 + 8) = Aligned;
          goto LABEL_38;
        }
        *((_DWORD *)this + 6) = v14 + 1;
        Aligned = *(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)&v13[2 * v14 + 2];
LABEL_38:
        v24 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v24 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v24;
          *(_QWORD *)a2 = v24 + 1;
        }
        v26 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        v28 = *((_DWORD *)a2 + 13);
        v29 = __OFSUB__(v28--, 1);
        *((_DWORD *)a2 + 13) = v28;
        if (v28 < 0 == v29)
        {
          v30 = v26;
          result = CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergePartialFromCodedStream(Aligned, a2, v27);
          if (!result)
            return result;
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v30))
            continue;
        }
        return 0;
      }
      if (v8 >> 3 != 1 || v8 != 8)
        break;
      v11 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v12 = 0;
        goto LABEL_47;
      }
      v12 = *v11;
      if (*v11 < 0)
      {
LABEL_47:
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v12);
        *((_DWORD *)this + 10) = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
      }
      else
      {
        *((_DWORD *)this + 10) = v12;
        *(_QWORD *)a2 = v11 + 1;
      }
    }
LABEL_21:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B49E24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergePartialFromCodedStream(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  int v11;
  CoreML::Specification::BayesianProbitRegressor_Gaussian *v12;
  char *v13;
  int VarintSizeAsIntFallback;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BOOL8 result;
  uint64_t Varint32Fallback;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_22;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *(_QWORD *)a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_22;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 18)
          goto LABEL_22;
        v12 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((_QWORD *)this + 2);
        if (!v12)
        {
          v12 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)operator new();
          CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(v12);
          *((_QWORD *)this + 2) = v12;
        }
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        v18 = *((_DWORD *)a2 + 13);
        v19 = __OFSUB__(v18--, 1);
        *((_DWORD *)a2 + 13) = v18;
        if (v18 < 0 == v19)
        {
          v20 = v16;
          result = CoreML::Specification::BayesianProbitRegressor_Gaussian::MergePartialFromCodedStream(v12, (char **)a2, v17);
          if (!result)
            return result;
          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20))
            continue;
        }
        return 0;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v11 = 0;
        goto LABEL_34;
      }
      v11 = *v10;
      if (*v10 < 0)
      {
LABEL_34:
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
        *((_DWORD *)this + 6) = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
      }
      else
      {
        *((_DWORD *)this + 6) = v11;
        *(_QWORD *)a2 = v10 + 1;
      }
    }
LABEL_22:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B49FF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  *(_QWORD *)this = &off_1E9564910;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B4A064(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::BayesianProbitRegressor_FeatureWeight *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  *(_QWORD *)this = &off_1E95644E8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureWeight_default_instance_)
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  return this;
}

void sub_1D3B4A0E4(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void CoreML::Specification::BayesianProbitRegressor::MergeFrom(CoreML::Specification::BayesianProbitRegressor *this, const CoreML::Specification::BayesianProbitRegressor *a2)
{
  CoreML::Specification::BayesianProbitRegressor *v3;
  uint64_t v4;
  int v5;
  google::protobuf::Arena **v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **v13;
  uint64_t **v14;
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *v15;
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *v16;
  uint64_t *v17;
  google::protobuf::Arena *v18;
  int v19;
  uint64_t v20;
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight **v21;
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **v22;
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *v23;
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight *Aligned;
  google::protobuf::Arena **v25;
  unint64_t *v26;
  unint64_t v27;
  int v28;
  int *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  const CoreML::Specification::SigmoidKernel *v46;
  CoreML::Specification::BayesianProbitRegressor_Gaussian *v47;
  const CoreML::Specification::SigmoidKernel *v48;
  int v49;
  CoreML::Specification::BayesianProbitRegressor *v50;
  uint64_t v51;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (google::protobuf::Arena **)((char *)v3 + 16);
    v51 = *((_QWORD *)a2 + 4);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::BayesianProbitRegressor *)((char *)v3 + 16), v5);
    v8 = v7;
    v9 = **((int **)v3 + 4);
    v50 = v3;
    v10 = *((int *)v3 + 6);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(v51 + 8);
      v14 = (uint64_t **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = *v6;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)((char *)v8 + v20);
      v22 = (const CoreML::Specification::BayesianProbitRegressor_FeatureWeight **)(v20 + v51 + 8);
      do
      {
        v23 = *v22;
        if (v18)
        {
          CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(Aligned);
          v25 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
          *v25 = Aligned;
          v25[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
          v26 = (unint64_t *)((char *)v18 + 32);
          do
            v27 = __ldxr(v26);
          while (__stxr((unint64_t)v25, v26));
          v25[2] = (google::protobuf::Arena *)v27;
        }
        else
        {
          Aligned = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)operator new();
          CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(Aligned);
        }
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(v23, (uint64_t *)Aligned);
        *v21++ = Aligned;
        ++v22;
        --v19;
      }
      while (v19);
    }
    v3 = v50;
    v28 = *((_DWORD *)v50 + 6) + v5;
    *((_DWORD *)v50 + 6) = v28;
    v29 = (int *)*((_QWORD *)v50 + 4);
    if (*v29 < v28)
      *v29 = v28;
  }
  v30 = *((_QWORD *)a2 + 5);
  if (*(char *)(v30 + 23) < 0)
  {
    if (!*(_QWORD *)(v30 + 8))
      goto LABEL_28;
  }
  else if (!*(_BYTE *)(v30 + 23))
  {
    goto LABEL_28;
  }
  v31 = (uint64_t *)*((_QWORD *)v3 + 5);
  if (v31 != (uint64_t *)v30)
  {
    if (v31 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 5, v30);
    else
      std::string::operator=(*((std::string **)v3 + 5), (const std::string *)v30);
  }
LABEL_28:
  v32 = *((_QWORD *)a2 + 6);
  if (*(char *)(v32 + 23) < 0)
  {
    if (!*(_QWORD *)(v32 + 8))
      goto LABEL_36;
  }
  else if (!*(_BYTE *)(v32 + 23))
  {
    goto LABEL_36;
  }
  v33 = (uint64_t *)*((_QWORD *)v3 + 6);
  if (v33 != (uint64_t *)v32)
  {
    if (v33 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 6, v32);
    else
      std::string::operator=(*((std::string **)v3 + 6), (const std::string *)v32);
  }
LABEL_36:
  v34 = *((_QWORD *)a2 + 7);
  if (*(char *)(v34 + 23) < 0)
  {
    if (!*(_QWORD *)(v34 + 8))
      goto LABEL_44;
  }
  else if (!*(_BYTE *)(v34 + 23))
  {
    goto LABEL_44;
  }
  v35 = (uint64_t *)*((_QWORD *)v3 + 7);
  if (v35 != (uint64_t *)v34)
  {
    if (v35 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 7, v34);
    else
      std::string::operator=(*((std::string **)v3 + 7), (const std::string *)v34);
  }
LABEL_44:
  v36 = *((_QWORD *)a2 + 8);
  if (*(char *)(v36 + 23) < 0)
  {
    if (!*(_QWORD *)(v36 + 8))
      goto LABEL_52;
  }
  else if (!*(_BYTE *)(v36 + 23))
  {
    goto LABEL_52;
  }
  v37 = (uint64_t *)*((_QWORD *)v3 + 8);
  if (v37 != (uint64_t *)v36)
  {
    if (v37 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 8, v36);
    else
      std::string::operator=(*((std::string **)v3 + 8), (const std::string *)v36);
  }
LABEL_52:
  v38 = *((_QWORD *)a2 + 9);
  if (*(char *)(v38 + 23) < 0)
  {
    if (!*(_QWORD *)(v38 + 8))
      goto LABEL_60;
  }
  else if (!*(_BYTE *)(v38 + 23))
  {
    goto LABEL_60;
  }
  v39 = (uint64_t *)*((_QWORD *)v3 + 9);
  if (v39 != (uint64_t *)v38)
  {
    if (v39 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 9, v38);
    else
      std::string::operator=(*((std::string **)v3 + 9), (const std::string *)v38);
  }
LABEL_60:
  v40 = *((_QWORD *)a2 + 10);
  if (*(char *)(v40 + 23) < 0)
  {
    if (!*(_QWORD *)(v40 + 8))
      goto LABEL_68;
  }
  else if (!*(_BYTE *)(v40 + 23))
  {
    goto LABEL_68;
  }
  v41 = (uint64_t *)*((_QWORD *)v3 + 10);
  if (v41 != (uint64_t *)v40)
  {
    if (v41 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 10, v40);
    else
      std::string::operator=(*((std::string **)v3 + 10), (const std::string *)v40);
  }
LABEL_68:
  v42 = *((_QWORD *)a2 + 11);
  if (*(char *)(v42 + 23) < 0)
  {
    if (!*(_QWORD *)(v42 + 8))
      goto LABEL_76;
  }
  else if (!*(_BYTE *)(v42 + 23))
  {
    goto LABEL_76;
  }
  v43 = (uint64_t *)*((_QWORD *)v3 + 11);
  if (v43 != (uint64_t *)v42)
  {
    if (v43 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 11, v42);
    else
      std::string::operator=(*((std::string **)v3 + 11), (const std::string *)v42);
  }
LABEL_76:
  v44 = *((_QWORD *)a2 + 12);
  if (*(char *)(v44 + 23) < 0)
  {
    if (!*(_QWORD *)(v44 + 8))
      goto LABEL_84;
  }
  else if (!*(_BYTE *)(v44 + 23))
  {
    goto LABEL_84;
  }
  v45 = (uint64_t *)*((_QWORD *)v3 + 12);
  if (v45 != (uint64_t *)v44)
  {
    if (v45 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 12, v44);
    else
      std::string::operator=(*((std::string **)v3 + 12), (const std::string *)v44);
  }
LABEL_84:
  if (a2 != (const CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
  {
    v46 = (const CoreML::Specification::SigmoidKernel *)*((_QWORD *)a2 + 13);
    if (v46)
    {
      v47 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)*((_QWORD *)v3 + 13);
      if (!v47)
      {
        v47 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)operator new();
        CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(v47);
        *((_QWORD *)v3 + 13) = v47;
        v46 = (const CoreML::Specification::SigmoidKernel *)*((_QWORD *)a2 + 13);
      }
      if (v46)
        v48 = v46;
      else
        v48 = (const CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
      CoreML::Specification::SigmoidKernel::MergeFrom((std::string *)v47, v48);
    }
  }
  v49 = *((_DWORD *)a2 + 28);
  if (v49)
    *((_DWORD *)v3 + 28) = v49;
}

void sub_1D3B4A5A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>::Merge(const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *a1, uint64_t *a2)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergeFrom(a2, a1);
}

uint64_t *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::MergeFrom(uint64_t *this, const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *a2)
{
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **v11;
  std::string **v12;
  const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *v13;
  const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *v14;
  std::string *v15;
  google::protobuf::Arena *v16;
  int v17;
  uint64_t v18;
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **v19;
  const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **v20;
  const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *v21;
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  int *v27;
  int v28;
  const CoreML::Specification::BayesianProbitRegressor_FeatureWeight *v29;
  uint64_t v30;

  v2 = a2;
  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)v2 + 6);
  if (v5)
  {
    v29 = v2;
    v30 = *((_QWORD *)v2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v6 = this;
    v7 = *(int *)v3[4];
    v8 = *((int *)v3 + 6);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5)
      v10 = v5;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(v30 + 8);
      v12 = (std::string **)this;
      do
      {
        v14 = *v11++;
        v13 = v14;
        v15 = *v12++;
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      v16 = (google::protobuf::Arena *)v3[2];
      v17 = v8 + v5 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)((char *)v6 + v18);
      v20 = (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight **)(v18 + v30 + 8);
      do
      {
        v21 = *v20;
        if (v16)
        {
          CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(Aligned);
          v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *v23 = Aligned;
          v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
          v24 = (unint64_t *)((char *)v16 + 32);
          do
            v25 = __ldxr(v24);
          while (__stxr((unint64_t)v23, v24));
          v23[2] = (google::protobuf::Arena *)v25;
        }
        else
        {
          Aligned = (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)operator new();
          CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(Aligned);
        }
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    v27 = (int *)v3[4];
    v2 = v29;
    if (*v27 < v26)
      *v27 = v26;
  }
  v28 = *((_DWORD *)v2 + 10);
  if (v28)
    *((_DWORD *)v3 + 10) = v28;
  return this;
}

void sub_1D3B4A7AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::Merge(const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *a1, std::string *a2)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergeFrom(a2, a1);
}

std::string *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::MergeFrom(std::string *this, const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *a2)
{
  std::string *v3;
  uint64_t v4;
  const CoreML::Specification::SigmoidKernel *v5;
  CoreML::Specification::BayesianProbitRegressor_Gaussian *v7;
  const CoreML::Specification::SigmoidKernel *v8;
  int v9;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = (const CoreML::Specification::SigmoidKernel *)*((_QWORD *)a2 + 2);
  if (a2 != (const CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_
    && v5 != 0)
  {
    v7 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)v3->__r_.__value_.__r.__words[2];
    if (!v7)
    {
      v7 = (CoreML::Specification::BayesianProbitRegressor_Gaussian *)operator new();
      CoreML::Specification::BayesianProbitRegressor_Gaussian::BayesianProbitRegressor_Gaussian(v7);
      v3->__r_.__value_.__r.__words[2] = (std::string::size_type)v7;
      v5 = (const CoreML::Specification::SigmoidKernel *)*((_QWORD *)a2 + 2);
    }
    if (v5)
      v8 = v5;
    else
      v8 = (const CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_BayesianProbitRegressor_Gaussian_default_instance_;
    this = CoreML::Specification::SigmoidKernel::MergeFrom((std::string *)v7, v8);
  }
  v9 = *((_DWORD *)a2 + 6);
  if (v9)
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
  return this;
}

void sub_1D3B4A888(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    v2 = result;
    v3 = *(_QWORD *)(result + 16) + 8;
    do
    {
      v4 = *(_QWORD *)v3;
      result = *(_QWORD *)(*(_QWORD *)v3 + 16);
      if (result)
        result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
      *(_QWORD *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 24) = 0;
      v3 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

CoreML::Specification::BayesianProbitRegressor *CoreML::Specification::BayesianProbitRegressor::BayesianProbitRegressor(CoreML::Specification::BayesianProbitRegressor *this)
{
  *(_QWORD *)this = &off_1E95610A8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BayesianProbitRegressor *)&CoreML::Specification::_BayesianProbitRegressor_default_instance_)
    CoreML::Specification::protobuf_BayesianProbitRegressor_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  return this;
}

void sub_1D3B4A98C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureWeight::~BayesianProbitRegressor_FeatureWeight(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight::~BayesianProbitRegressor_FeatureWeight(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E95644E8;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.FeatureWeight");
}

CoreML::Specification::BayesianProbitRegressor_FeatureWeight *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(this, 0);
}

CoreML::Specification::BayesianProbitRegressor_FeatureWeight *CoreML::Specification::BayesianProbitRegressor_FeatureWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight *v3;

  v3 = (CoreML::Specification::BayesianProbitRegressor_FeatureWeight *)operator new();
  CoreML::Specification::BayesianProbitRegressor_FeatureWeight::BayesianProbitRegressor_FeatureWeight(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(a2, v3);
  return v3;
}

void sub_1D3B4ACD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C408C5061CCLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::Clear(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  uint64_t result;

  result = google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>::TypeHandler>((uint64_t)this + 16);
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::IsInitialized(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result;
  int v7;
  int i;

  result = *((unsigned int *)this + 10);
  if ((_DWORD)result)
    result = google::protobuf::internal::WireFormatLite::WriteUInt32(result, a2, a3, a4);
  v7 = *((_DWORD *)this + 6);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
      result = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*((_QWORD *)this + 4) + 8 * i + 8), a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureWeight::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_FeatureWeight *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureWeight>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::~BayesianProbitRegressor_FeatureValueWeight(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::~BayesianProbitRegressor_FeatureValueWeight(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E9564910;
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight");
}

CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(this, 0);
}

CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::New(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *v3;

  v3 = (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)operator new();
  CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::BayesianProbitRegressor_FeatureValueWeight(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(a2, v3);
  return v3;
}

void sub_1D3B4AECC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::Clear(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  uint64_t result;

  result = *((_QWORD *)this + 2);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::IsInitialized(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return 1;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::SerializeWithCachedSizes(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result;
  uint64_t v7;

  result = *((unsigned int *)this + 6);
  if ((_DWORD)result)
    result = google::protobuf::internal::WireFormatLite::WriteUInt32(result, a2, a3, a4);
  if (this != (CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *)&CoreML::Specification::_BayesianProbitRegressor_FeatureValueWeight_default_instance_)
  {
    v7 = *((_QWORD *)this + 2);
    if (v7)
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight::GetCachedSize(CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight *this)
{
  return *((unsigned int *)this + 7);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BayesianProbitRegressor_FeatureValueWeight>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::CoreMLModels::WordEmbedding::~WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E955A5C8;
  v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E955A5C8;
  v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::CoreMLModels::WordEmbedding::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordEmbedding");
}

CoreML::Specification::CoreMLModels::WordEmbedding *CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return CoreML::Specification::CoreMLModels::WordEmbedding::New(this, 0);
}

CoreML::Specification::CoreMLModels::WordEmbedding *CoreML::Specification::CoreMLModels::WordEmbedding::New(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::CoreMLModels::WordEmbedding *v3;

  v3 = (CoreML::Specification::CoreMLModels::WordEmbedding *)operator new();
  CoreML::Specification::CoreMLModels::WordEmbedding::WordEmbedding(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordEmbedding>(a2, v3);
  return v3;
}

void sub_1D3B4B144(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  v2 = *(_QWORD *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::IsInitialized(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return 1;
}

BOOL CoreML::Specification::CoreMLModels::WordEmbedding::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  std::string **v6;
  unsigned __int8 *v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  char *v15;
  int v16;
  std::string *v17;
  std::string *v18;
  _BOOL8 result;
  unsigned int *v20;
  std::string::size_type size;
  unsigned int TagFallback;
  uint64_t Varint32Fallback;

  v5 = (std::string **)((char *)this + 24);
  v6 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v7 = *(unsigned __int8 **)a2;
          v8 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v8)
          {
            LODWORD(v10) = 0;
LABEL_34:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
            v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v11 & 0x100000000) == 0)
              goto LABEL_35;
            goto LABEL_9;
          }
          v9 = v7 + 1;
          v10 = *v7;
          if ((char)*v7 < 1)
          {
            if ((unint64_t)v9 < v8)
            {
              v12 = *v9;
              if ((v10 & ~v12) >= 0x80)
              {
                *(_QWORD *)a2 = v7 + 2;
                v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
                goto LABEL_9;
              }
            }
            goto LABEL_34;
          }
          *(_QWORD *)a2 = v9;
          v11 = v10 | 0x100000000;
          if ((v11 & 0x100000000) == 0)
            goto LABEL_35;
LABEL_9:
          v13 = v11 >> 3;
          if (v11 >> 3 != 100)
            break;
          if (v11 != 34)
            goto LABEL_35;
          v17 = *v5;
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            v17 = *v5;
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v17))
            return 0;
        }
        if (v13 != 10)
          break;
        if (v11 != 82)
          goto LABEL_35;
        v18 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v18 = *v6;
        }
        result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v18);
        if (!result)
          return result;
        v20 = (unsigned int *)*v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          v20 = *(unsigned int **)v20;
          size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v20, size, 0, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language"))return 0;
      }
      if (v13 != 1 || v11 != 8)
        break;
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v16 = 0;
        goto LABEL_42;
      }
      v16 = *v15;
      if (*v15 < 0)
      {
LABEL_42:
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
        *((_DWORD *)this + 8) = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
      }
      else
      {
        *((_DWORD *)this + 8) = v16;
        *(_QWORD *)a2 = v15 + 1;
      }
    }
LABEL_35:
    if (!(_DWORD)v11 || (v11 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)
      return 0;
  }
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::ByteSizeLong(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v5 = *((_QWORD *)this + 3);
  v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v7 = v6;
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  v8 = *((_DWORD *)this + 8);
  if (v8)
    v4 += ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordEmbedding *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v6 = *((unsigned int *)this + 8);
  if ((_DWORD)v6)
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  result = *((_QWORD *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    v8 = *(_QWORD *)(result + 8);
    if (!v8)
      goto LABEL_9;
    result = *(_QWORD *)result;
    goto LABEL_8;
  }
  LODWORD(v8) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordEmbedding.language");
    result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((_QWORD *)this + 2), a2);
  }
LABEL_9:
  v9 = *((_QWORD *)this + 3);
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(v9 + 23))
      return result;
    return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
  }
  if (*(_QWORD *)(v9 + 8))
    return google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v9, a2);
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::WordEmbedding::GetCachedSize(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  return *((unsigned int *)this + 9);
}

void CoreML::Specification::CoreMLModels::WordEmbedding::MergeFrom(CoreML::Specification::CoreMLModels::WordEmbedding *this, const CoreML::Specification::CoreMLModels::WordEmbedding *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_11;
  }
  v6 = (uint64_t *)*((_QWORD *)this + 2);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v5);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v5);
  }
LABEL_11:
  v7 = *((_QWORD *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(_QWORD *)(v7 + 8))
      goto LABEL_19;
  }
  else if (!*(_BYTE *)(v7 + 23))
  {
    goto LABEL_19;
  }
  v8 = (uint64_t *)*((_QWORD *)this + 3);
  if (v8 != (uint64_t *)v7)
  {
    if (v8 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, v7);
    else
      std::string::operator=(*((std::string **)this + 3), (const std::string *)v7);
  }
LABEL_19:
  v9 = *((_DWORD *)a2 + 8);
  if (v9)
    *((_DWORD *)this + 8) = v9;
}

CoreML::Specification::CoreMLModels::WordEmbedding *CoreML::Specification::CoreMLModels::WordEmbedding::WordEmbedding(CoreML::Specification::CoreMLModels::WordEmbedding *this)
{
  *(_QWORD *)this = &off_1E955A5C8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordEmbedding *)&CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_)
    CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B4B6A0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordEmbedding>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordEmbedding>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_WordEmbedding_2eproto::TableStruct *this)
{
  unint64_t *inited;
  unint64_t *result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_WordEmbedding_default_instance_ = (uint64_t)&off_1E955A5C8;
  unk_1EDB8F1D0 = 0;
  qword_1EDB8F1D8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB8F1E0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB8F1E8 = 0;
  byte_1EDB8F1F0 = 1;
  return result;
}

void CoreML::Specification::Int64Parameter::~Int64Parameter(CoreML::Specification::Int64Parameter *this)
{
  CoreML::Specification::Int64Parameter::~Int64Parameter(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E955B9F8;
  if (*((_DWORD *)this + 9))
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::Int64Parameter::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Int64Parameter");
}

CoreML::Specification::Int64Parameter *CoreML::Specification::Int64Parameter::New(CoreML::Specification::Int64Parameter *this)
{
  return CoreML::Specification::Int64Parameter::New(this, 0);
}

CoreML::Specification::Int64Parameter *CoreML::Specification::Int64Parameter::New(CoreML::Specification::Int64Parameter *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Int64Parameter *v3;

  v3 = (CoreML::Specification::Int64Parameter *)operator new();
  CoreML::Specification::Int64Parameter::Int64Parameter(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Int64Parameter>(a2, v3);
  return v3;
}

void sub_1D3B4B840(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Int64Parameter::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  return CoreML::Specification::Int64Parameter::clear_AllowedValues(this);
}

uint64_t CoreML::Specification::Int64Parameter::IsInitialized(CoreML::Specification::Int64Parameter *this)
{
  return 1;
}

uint64_t CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(CoreML::Specification::Int64Parameter *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t Varint64Fallback;
  CoreML::Specification::Int64Set *v13;
  CoreML::Specification::Int64Range *v14;
  char *v16;
  int VarintSizeAsIntFallback;
  char *v18;
  int v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  uint64_t result;
  int v27;
  unsigned int v28;
  int v29;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_23;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *(_QWORD *)a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_23;
LABEL_7:
        v9 = v7 >> 3;
        if (v7 >> 3 == 11)
        {
          if (v7 != 90)
            goto LABEL_23;
          if (*((_DWORD *)this + 9) == 11)
          {
            v13 = (CoreML::Specification::Int64Set *)*((_QWORD *)this + 3);
          }
          else
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            v13 = (CoreML::Specification::Int64Set *)operator new();
            CoreML::Specification::Int64Set::Int64Set(v13);
            *((_QWORD *)this + 3) = v13;
          }
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v23 = *((_DWORD *)a2 + 13);
          v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 13) = v23;
          if (v23 < 0 != v24)
            return 0;
          v25 = v21;
          result = CoreML::Specification::Int64Set::MergePartialFromCodedStream(v13, a2, v22);
          if (!(_DWORD)result)
            return result;
          goto LABEL_46;
        }
        if (v9 != 10)
          break;
        if (v7 != 82)
          goto LABEL_23;
        if (*((_DWORD *)this + 9) == 10)
        {
          v14 = (CoreML::Specification::Int64Range *)*((_QWORD *)this + 3);
        }
        else
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          v14 = (CoreML::Specification::Int64Range *)operator new();
          CoreML::Specification::Int64Range::Int64Range(v14);
          *((_QWORD *)this + 3) = v14;
        }
        v18 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
        {
          v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0)
            return 0;
        }
        else
        {
          v19 = *v18;
          *(_QWORD *)a2 = v18 + 1;
        }
        v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        v29 = *((_DWORD *)a2 + 13);
        v24 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 13) = v29;
        if (v29 < 0 != v24)
          return 0;
        v25 = v27;
        result = CoreML::Specification::Int64Range::MergePartialFromCodedStream(v14, (char **)a2, v28);
        if (!(_DWORD)result)
          return result;
LABEL_46:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25))
          return 0;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *(_QWORD *)a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_23:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B4BB00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

unint64_t CoreML::Specification::Int64Parameter::ByteSizeLong(CoreML::Specification::Int64Parameter *this)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;

  v2 = *((_QWORD *)this + 2);
  v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    v6 = CoreML::Specification::Int64Set::ByteSizeLong(*((CoreML::Specification::Int64Set **)this + 3));
    goto LABEL_8;
  }
  if (v5 == 10)
  {
    v6 = CoreML::Specification::Int64Range::ByteSizeLong(*((CoreML::Specification::Int64Range **)this + 3));
LABEL_8:
    v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Int64Parameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;

  v5 = this;
  v6 = *(_QWORD *)(this + 16);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteInt64(1, v6, a2, a4);
  v7 = *(_DWORD *)(v5 + 36);
  if (v7 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 24), a2, a4);
    v7 = *(_DWORD *)(v5 + 36);
  }
  if (v7 == 11)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(v5 + 24), a2, a4);
  return this;
}

uint64_t CoreML::Specification::Int64Parameter::GetCachedSize(CoreML::Specification::Int64Parameter *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t CoreML::Specification::Int64Parameter::clear_AllowedValues(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 36);
  if (v2 == 11 || v2 == 10)
  {
    this = *(_QWORD *)(this + 24);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

std::string *CoreML::Specification::Int64Parameter::MergeFrom(std::string *this, const CoreML::Specification::Int64Parameter *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  CoreML::Specification::Int64Range *v7;
  CoreML::Specification::Int64Set *v8;
  CoreML::Specification::Int64Range *v9;
  const CoreML::Specification::Int64Range *v10;
  CoreML::Specification::Int64Set *v11;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v12;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (v5)
    *(_QWORD *)(v3 + 16) = v5;
  v6 = *((_DWORD *)a2 + 9);
  if (v6 == 11)
  {
    if (*(_DWORD *)(v3 + 36) == 11)
    {
      v8 = *(CoreML::Specification::Int64Set **)(v3 + 24);
    }
    else
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 11;
      v8 = (CoreML::Specification::Int64Set *)operator new();
      v11 = CoreML::Specification::Int64Set::Int64Set(v8);
      *(_QWORD *)(v3 + 24) = v8;
      if (*((_DWORD *)a2 + 9) != 11)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v11);
        v12 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_Int64Set_default_instance_;
        return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v8, v12);
      }
    }
    v12 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 3);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v8, v12);
  }
  if (v6 == 10)
  {
    if (*(_DWORD *)(v3 + 36) == 10)
    {
      v7 = *(CoreML::Specification::Int64Range **)(v3 + 24);
    }
    else
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues(v3);
      *(_DWORD *)(v3 + 36) = 10;
      v7 = (CoreML::Specification::Int64Range *)operator new();
      v9 = CoreML::Specification::Int64Range::Int64Range(v7);
      *(_QWORD *)(v3 + 24) = v7;
      if (*((_DWORD *)a2 + 9) != 10)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v9);
        v10 = (const CoreML::Specification::Int64Range *)&CoreML::Specification::_Int64Range_default_instance_;
        return CoreML::Specification::Int64Range::MergeFrom((std::string *)v7, v10);
      }
    }
    v10 = (const CoreML::Specification::Int64Range *)*((_QWORD *)a2 + 3);
    return CoreML::Specification::Int64Range::MergeFrom((std::string *)v7, v10);
  }
  return this;
}

void sub_1D3B4BDEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::Int64Parameter *CoreML::Specification::Int64Parameter::Int64Parameter(CoreML::Specification::Int64Parameter *this)
{
  *(_QWORD *)this = &off_1E955B9F8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_)
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B4BE7C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Int64Parameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Parameter>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Int64Parameter>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(CoreML::Specification::protobuf_Parameters_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_Parameters_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_Parameters_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_Parameters_2eproto::TableStruct *this)
{
  unint64_t *inited;
  double result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  result = 0.0;
  qword_1EDB8FF50 = 0;
  qword_1EDB8FF38 = 0;
  unk_1EDB8FF40 = 0;
  CoreML::Specification::_Int64Parameter_default_instance_ = (uint64_t)&off_1E955B9F8;
  byte_1EDB8FF58 = 1;
  qword_1EDB901D0 = 0;
  qword_1EDB901B8 = 0;
  unk_1EDB901C0 = 0;
  CoreML::Specification::_DoubleParameter_default_instance_ = (uint64_t)&off_1E955C378;
  byte_1EDB901D8 = 1;
  CoreML::Specification::_StringParameter_default_instance_ = (uint64_t)&off_1E955C838;
  unk_1EDB90310 = 0;
  qword_1EDB90318 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB90320 = 0;
  byte_1EDB90328 = 1;
  CoreML::Specification::_BoolParameter_default_instance_ = (uint64_t)&off_1E955B240;
  *(_QWORD *)algn_1EDB8FC38 = 0;
  byte_1EDB8FC40 = 0;
  dword_1EDB8FC44 = 0;
  byte_1EDB8FC48 = 1;
  return result;
}

void CoreML::Specification::BoolParameter::~BoolParameter(CoreML::Specification::BoolParameter *this)
{
  *(_QWORD *)this = &off_1E955B240;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955B240;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::BoolParameter::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.BoolParameter");
}

CoreML::Specification::BoolParameter *CoreML::Specification::BoolParameter::New(CoreML::Specification::BoolParameter *this)
{
  return CoreML::Specification::BoolParameter::New(this, 0);
}

CoreML::Specification::BoolParameter *CoreML::Specification::BoolParameter::New(CoreML::Specification::BoolParameter *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::BoolParameter *v3;

  v3 = (CoreML::Specification::BoolParameter *)operator new();
  CoreML::Specification::BoolParameter::BoolParameter(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::BoolParameter>(a2, v3);
  return v3;
}

void sub_1D3B4C0C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BoolParameter::Clear(uint64_t this)
{
  *(_BYTE *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::BoolParameter::IsInitialized(CoreML::Specification::BoolParameter *this)
{
  return 1;
}

std::string *CoreML::Specification::BoolParameter::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  std::string *v3;
  uint64_t v4;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (*((_BYTE *)a2 + 16))
    v3->__r_.__value_.__s.__data_[16] = 1;
  return this;
}

uint64_t CoreML::Specification::BoolParameter::MergePartialFromCodedStream(CoreML::Specification::BoolParameter *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_BYTE *)this + 16) = Varint64Fallback != 0;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::BoolParameter::ByteSizeLong(CoreML::Specification::BoolParameter *this)
{
  uint64_t v1;

  v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

uint64_t CoreML::Specification::BoolParameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(_BYTE *)(this + 16))
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  return this;
}

uint64_t CoreML::Specification::BoolParameter::GetCachedSize(CoreML::Specification::BoolParameter *this)
{
  return *((unsigned int *)this + 5);
}

CoreML::Specification::BoolParameter *CoreML::Specification::BoolParameter::BoolParameter(CoreML::Specification::BoolParameter *this)
{
  *(_QWORD *)this = &off_1E955B240;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BoolParameter *)&CoreML::Specification::_BoolParameter_default_instance_)
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  *((_BYTE *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1D3B4C2BC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::BoolParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::BoolParameter>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::BoolParameter>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::StringParameter::~StringParameter(CoreML::Specification::StringParameter *this)
{
  *(_QWORD *)this = &off_1E955C838;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((_QWORD *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E955C838;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((_QWORD *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::StringParameter::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.StringParameter");
}

CoreML::Specification::StringParameter *CoreML::Specification::StringParameter::New(CoreML::Specification::StringParameter *this)
{
  return CoreML::Specification::StringParameter::New(this, 0);
}

CoreML::Specification::StringParameter *CoreML::Specification::StringParameter::New(CoreML::Specification::StringParameter *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::StringParameter *v3;

  v3 = (CoreML::Specification::StringParameter *)operator new();
  CoreML::Specification::StringParameter::StringParameter(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::StringParameter>(a2, v3);
  return v3;
}

void sub_1D3B4C424(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4084265165);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StringParameter::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  return this;
}

uint64_t CoreML::Specification::StringParameter::IsInitialized(CoreML::Specification::StringParameter *this)
{
  return 1;
}

BOOL CoreML::Specification::StringParameter::MergePartialFromCodedStream(CoreML::Specification::StringParameter *this, char **a2, unsigned int a3)
{
  std::string **v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  std::string *v11;
  _BOOL8 result;
  unsigned int *v13;
  std::string::size_type size;

  v4 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_7;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_8:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *v4;
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v11 = *v4;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v11);
      if (!result)
        return result;
      v13 = (unsigned int *)*v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = *(unsigned int **)v13;
        size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.StringParameter.defaultValue"))return 0;
    }
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

uint64_t CoreML::Specification::StringParameter::ByteSizeLong(CoreML::Specification::StringParameter *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  *((_DWORD *)this + 6) = v4;
  return v4;
}

uint64_t CoreML::Specification::StringParameter::SerializeWithCachedSizes(CoreML::Specification::StringParameter *this, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t result;
  uint64_t v5;

  result = *((_QWORD *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    v5 = *(_QWORD *)(result + 8);
    if (!v5)
      return result;
    result = *(_QWORD *)result;
    goto LABEL_6;
  }
  LODWORD(v5) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v5, 1, (uint64_t)"CoreML.Specification.StringParameter.defaultValue");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((_QWORD *)this + 2), a2);
  }
  return result;
}

uint64_t CoreML::Specification::StringParameter::GetCachedSize(CoreML::Specification::StringParameter *this)
{
  return *((unsigned int *)this + 6);
}

CoreML::Specification::StringParameter *CoreML::Specification::StringParameter::StringParameter(CoreML::Specification::StringParameter *this)
{
  *(_QWORD *)this = &off_1E955C838;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::StringParameter *)&CoreML::Specification::_StringParameter_default_instance_)
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B4C6D8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::StringParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::StringParameter>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::StringParameter>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::DoubleParameter::~DoubleParameter(CoreML::Specification::DoubleParameter *this)
{
  CoreML::Specification::DoubleParameter::~DoubleParameter(this);
  JUMPOUT(0x1D8251A40);
}

{
  int v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E955C378;
  v2 = *((_DWORD *)this + 9);
  if (v2)
  {
    if (v2 == 10)
    {
      v3 = *((_QWORD *)this + 3);
      if (v3)
        (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    }
    *((_DWORD *)this + 9) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::DoubleParameter::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DoubleParameter");
}

CoreML::Specification::DoubleParameter *CoreML::Specification::DoubleParameter::New(CoreML::Specification::DoubleParameter *this)
{
  return CoreML::Specification::DoubleParameter::New(this, 0);
}

CoreML::Specification::DoubleParameter *CoreML::Specification::DoubleParameter::New(CoreML::Specification::DoubleParameter *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::DoubleParameter *v3;

  v3 = (CoreML::Specification::DoubleParameter *)operator new();
  CoreML::Specification::DoubleParameter::DoubleParameter(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::DoubleParameter>(a2, v3);
  return v3;
}

void sub_1D3B4C7E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DoubleParameter::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = this;
  *(_QWORD *)(this + 16) = 0;
  if (*(_DWORD *)(this + 36) == 10)
  {
    this = *(_QWORD *)(this + 24);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreML::Specification::DoubleParameter::IsInitialized(CoreML::Specification::DoubleParameter *this)
{
  return 1;
}

BOOL CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(CoreML::Specification::DoubleParameter *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unint64_t *v10;
  unint64_t v11;
  CoreML::Specification::DoubleRange *v12;
  BOOL v13;
  char *v14;
  int VarintSizeAsIntFallback;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BOOL8 result;
  unint64_t v22;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0)
          goto LABEL_7;
LABEL_19:
        if ((_DWORD)v7)
          v13 = (v7 & 7) == 4;
        else
          v13 = 1;
        if (v13)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        goto LABEL_19;
LABEL_7:
      if (v7 >> 3 == 10)
        break;
      if (v7 >> 3 != 1 || v7 != 9)
        goto LABEL_19;
      v22 = 0;
      v10 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v22);
        if (!result)
          return result;
        v11 = v22;
      }
      else
      {
        v11 = *v10;
        *(_QWORD *)a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
    if (v7 != 82)
      goto LABEL_19;
    if (*((_DWORD *)this + 9) == 10)
    {
      v12 = (CoreML::Specification::DoubleRange *)*((_QWORD *)this + 3);
    }
    else
    {
      *((_DWORD *)this + 9) = 10;
      v12 = (CoreML::Specification::DoubleRange *)operator new();
      CoreML::Specification::DoubleRange::DoubleRange(v12);
      *((_QWORD *)this + 3) = v12;
    }
    v14 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
    {
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        return 0;
    }
    else
    {
      VarintSizeAsIntFallback = *v14;
      *(_QWORD *)a2 = v14 + 1;
    }
    v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    v18 = *((_DWORD *)a2 + 13);
    v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 13) = v18;
    if (v18 < 0 != v19)
      break;
    v20 = v16;
    result = CoreML::Specification::DoubleRange::MergePartialFromCodedStream(v12, (char **)a2, v17);
    if (!result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1D3B4CA28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DoubleParameter::ByteSizeLong(CoreML::Specification::DoubleParameter *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = 9;
  if (*((double *)this + 2) == 0.0)
    v1 = 0;
  if (*((_DWORD *)this + 9) == 10)
  {
    v2 = *((_QWORD *)this + 3);
    v3 = 9;
    if (*(double *)(v2 + 16) == 0.0)
      v3 = 0;
    if (*(double *)(v2 + 24) != 0.0)
      v3 += 9;
    *(_DWORD *)(v2 + 32) = v3;
    v1 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

uint64_t CoreML::Specification::DoubleParameter::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  double v6;

  v5 = this;
  v6 = *(double *)(this + 16);
  if (v6 != 0.0)
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)1, a2, v6, a3);
  if (*(_DWORD *)(v5 + 36) == 10)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(v5 + 24), a2, a4);
  return this;
}

uint64_t CoreML::Specification::DoubleParameter::GetCachedSize(CoreML::Specification::DoubleParameter *this)
{
  return *((unsigned int *)this + 8);
}

std::string *CoreML::Specification::DoubleParameter::MergeFrom(std::string *this, const CoreML::Specification::DoubleParameter *a2)
{
  std::string *v3;
  uint64_t v4;
  double v5;
  CoreML::Specification::DoubleRange *data;
  CoreML::Specification::DoubleRange *v7;
  const CoreML::Specification::SigmoidKernel *v8;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((double *)a2 + 2);
  if (v5 != 0.0)
    *(double *)&v3->__r_.__value_.__r.__words[2] = v5;
  if (*((_DWORD *)a2 + 9) == 10)
  {
    if (HIDWORD(v3[1].__r_.__value_.__r.__words[1]) == 10)
    {
      data = (CoreML::Specification::DoubleRange *)v3[1].__r_.__value_.__l.__data_;
    }
    else
    {
      HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = 10;
      data = (CoreML::Specification::DoubleRange *)operator new();
      v7 = CoreML::Specification::DoubleRange::DoubleRange(data);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      if (*((_DWORD *)a2 + 9) != 10)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v7);
        v8 = (const CoreML::Specification::SigmoidKernel *)&CoreML::Specification::_DoubleRange_default_instance_;
        return CoreML::Specification::SigmoidKernel::MergeFrom((std::string *)data, v8);
      }
    }
    v8 = (const CoreML::Specification::SigmoidKernel *)*((_QWORD *)a2 + 3);
    return CoreML::Specification::SigmoidKernel::MergeFrom((std::string *)data, v8);
  }
  return this;
}

void sub_1D3B4CBEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::DoubleParameter *CoreML::Specification::DoubleParameter::DoubleParameter(CoreML::Specification::DoubleParameter *this)
{
  *(_QWORD *)this = &off_1E955C378;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_)
    CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B4CC60(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DoubleParameter>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleParameter>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DoubleParameter>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(unint64_t a1)
{
  if (a1 >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(8 * a1);
}

void CoreML::Specification::NonMaximumSuppression_PickTop::~NonMaximumSuppression_PickTop(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  *(_QWORD *)this = &off_1E9563578;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E9563578;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::NonMaximumSuppression_PickTop::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NonMaximumSuppression.PickTop");
}

CoreML::Specification::NonMaximumSuppression_PickTop *CoreML::Specification::NonMaximumSuppression_PickTop::New(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return CoreML::Specification::NonMaximumSuppression_PickTop::New(this, 0);
}

CoreML::Specification::NonMaximumSuppression_PickTop *CoreML::Specification::NonMaximumSuppression_PickTop::New(CoreML::Specification::NonMaximumSuppression_PickTop *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::NonMaximumSuppression_PickTop *v3;

  v3 = (CoreML::Specification::NonMaximumSuppression_PickTop *)operator new();
  CoreML::Specification::NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression_PickTop>(a2, v3);
  return v3;
}

void sub_1D3B4CE98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::Clear(uint64_t this)
{
  *(_BYTE *)(this + 16) = 0;
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::IsInitialized(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return 1;
}

std::string *CoreML::Specification::NonMaximumSuppression_PickTop::CheckTypeAndMergeFrom(std::string *this, const google::protobuf::MessageLite *a2)
{
  std::string *v3;
  uint64_t v4;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (*((_BYTE *)a2 + 16))
    v3->__r_.__value_.__s.__data_[16] = 1;
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppression_PickTop *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_BYTE *)this + 16) = Varint64Fallback != 0;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::ByteSizeLong(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  uint64_t v1;

  v1 = 2 * *((unsigned __int8 *)this + 16);
  *((_DWORD *)this + 5) = v1;
  return v1;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  if (*(_BYTE *)(this + 16))
    return google::protobuf::internal::WireFormatLite::WriteBool(1, 1u, a2, a4);
  return this;
}

uint64_t CoreML::Specification::NonMaximumSuppression_PickTop::GetCachedSize(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  return *((unsigned int *)this + 5);
}

CoreML::Specification::NonMaximumSuppression_PickTop *CoreML::Specification::NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop(CoreML::Specification::NonMaximumSuppression_PickTop *this)
{
  *(_QWORD *)this = &off_1E9563578;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppression_PickTop *)&CoreML::Specification::_NonMaximumSuppression_PickTop_default_instance_)
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(this);
  *((_BYTE *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1D3B4D08C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression_PickTop>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression_PickTop>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression_PickTop>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(CoreML::Specification::protobuf_NonMaximumSuppression_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::TableStruct *this)
{
  unint64_t *inited;
  unint64_t *result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_NonMaximumSuppression_PickTop_default_instance_ = (uint64_t)&off_1E9563578;
  qword_1EDB93278 = 0;
  byte_1EDB93280 = 0;
  dword_1EDB93284 = 0;
  byte_1EDB93288 = 1;
  CoreML::Specification::_NonMaximumSuppression_default_instance_ = (uint64_t)&off_1E9560398;
  *(_QWORD *)algn_1EDB91CC8 = 0;
  qword_1EDB91CD0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB91CD8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB91CE0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB91CE8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB91CF0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB91CF8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB91D00 = 0;
  unk_1EDB91D08 = 0;
  dword_1EDB91D28 = 0;
  qword_1EDB91D20 = 0;
  byte_1EDB91D30 = 1;
  return result;
}

void CoreML::Specification::NonMaximumSuppression::~NonMaximumSuppression(CoreML::Specification::NonMaximumSuppression *this)
{
  CoreML::Specification::NonMaximumSuppression::~NonMaximumSuppression(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_QWORD *)this = &off_1E9560398;
  v2 = *((_QWORD *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D8251A40](v4, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 4);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x1D8251A40](v6, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 5);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x1D8251A40](v7, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 6);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x1D8251A40](v8, 0x1012C40EC159624);
  }
  v9 = *((_QWORD *)this + 7);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    MEMORY[0x1D8251A40](v9, 0x1012C40EC159624);
  }
  v10 = *((_DWORD *)this + 25);
  if (v10)
  {
    if (v10 == 1)
    {
      v11 = *((_QWORD *)this + 10);
      if (v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    }
    *((_DWORD *)this + 25) = 0;
  }
  if (*((_DWORD *)this + 26))
    CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::NonMaximumSuppression::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NonMaximumSuppression");
}

CoreML::Specification::NonMaximumSuppression *CoreML::Specification::NonMaximumSuppression::New(CoreML::Specification::NonMaximumSuppression *this)
{
  return CoreML::Specification::NonMaximumSuppression::New(this, 0);
}

CoreML::Specification::NonMaximumSuppression *CoreML::Specification::NonMaximumSuppression::New(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::NonMaximumSuppression *v3;

  v3 = (CoreML::Specification::NonMaximumSuppression *)operator new();
  CoreML::Specification::NonMaximumSuppression::NonMaximumSuppression(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression>(a2, v3);
  return v3;
}

void sub_1D3B4D25C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40D18C2FB1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression::Clear(CoreML::Specification::NonMaximumSuppression *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *((_QWORD *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  v3 = *((_QWORD *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
  v4 = *((_QWORD *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v4 = 0;
      *(_BYTE *)(v4 + 23) = 0;
    }
  }
  v5 = *((_QWORD *)this + 5);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
    }
  }
  v6 = *((_QWORD *)this + 6);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
    }
  }
  v7 = *((_QWORD *)this + 7);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(_BYTE **)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v7 = 0;
      *(_BYTE *)(v7 + 23) = 0;
    }
  }
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  if (*((_DWORD *)this + 25) == 1)
  {
    v8 = *((_QWORD *)this + 10);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
  *((_DWORD *)this + 25) = 0;
  return CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
}

uint64_t CoreML::Specification::NonMaximumSuppression::IsInitialized(CoreML::Specification::NonMaximumSuppression *this)
{
  return 1;
}

uint64_t CoreML::Specification::NonMaximumSuppression::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  std::string **v6;
  std::string **v7;
  std::string **v8;
  unsigned __int8 *v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  BOOL v15;
  unsigned int TagFallback;
  unsigned int v17;
  std::string *v18;
  uint64_t result;
  std::string *v20;
  std::string::size_type size;
  CoreML::Specification::Int64Vector *v22;
  unint64_t *v23;
  unint64_t v24;
  CoreML::Specification::NonMaximumSuppression_PickTop *v25;
  CoreML::Specification::StringVector *v26;
  std::string *v27;
  std::string *v28;
  std::string *v29;
  std::string *v30;
  std::string *v31;
  unint64_t *v32;
  unint64_t v33;
  char *v34;
  int v35;
  char *v36;
  int VarintSizeAsIntFallback;
  char *v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  BOOL v43;
  int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;
  const char *v51;
  std::string **v52;
  std::string **v53;
  unint64_t v54;

  v52 = (std::string **)((char *)this + 48);
  v53 = (std::string **)((char *)this + 56);
  v5 = (std::string **)((char *)this + 40);
  v6 = (std::string **)((char *)this + 32);
  v7 = (std::string **)((char *)this + 24);
  v8 = (std::string **)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v9 = *(unsigned __int8 **)a2;
    v10 = *((_QWORD *)a2 + 1);
    if (*(_QWORD *)a2 >= v10)
    {
      LODWORD(v12) = 0;
    }
    else
    {
      v11 = v9 + 1;
      v12 = *v9;
      if ((char)*v9 >= 1)
      {
        *(_QWORD *)a2 = v11;
        v13 = v12 | 0x100000000;
        if ((v13 & 0x100000000) == 0)
          goto LABEL_9;
        goto LABEL_17;
      }
      if ((unint64_t)v11 < v10)
      {
        v14 = *v11;
        if ((v12 & ~v14) >= 0x80)
        {
          *(_QWORD *)a2 = v9 + 2;
          v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
    v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v13 & 0x100000000) == 0)
      goto LABEL_9;
LABEL_17:
    v17 = v13 >> 3;
    if (v13 >> 3 > 0x6D)
      break;
    if (v17 == 1)
    {
      if (v13 != 10)
        goto LABEL_9;
      if (*((_DWORD *)this + 25) == 1)
      {
        v25 = (CoreML::Specification::NonMaximumSuppression_PickTop *)*((_QWORD *)this + 10);
      }
      else
      {
        *((_DWORD *)this + 25) = 1;
        v25 = (CoreML::Specification::NonMaximumSuppression_PickTop *)operator new();
        CoreML::Specification::NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop(v25);
        *((_QWORD *)this + 10) = v25;
      }
      v36 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v36 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v36;
        *(_QWORD *)a2 = v36 + 1;
      }
      v45 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v47 = *((_DWORD *)a2 + 13);
      v43 = __OFSUB__(v47--, 1);
      *((_DWORD *)a2 + 13) = v47;
      if (v47 < 0 != v43)
        return 0;
      v44 = v45;
      result = CoreML::Specification::NonMaximumSuppression_PickTop::MergePartialFromCodedStream(v25, (char **)a2, v46);
      if (!(_DWORD)result)
        return result;
    }
    else if (v17 == 100)
    {
      if (v13 != 34)
        goto LABEL_9;
      if (*((_DWORD *)this + 26) == 100)
      {
        v26 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 11);
      }
      else
      {
        CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
        *((_DWORD *)this + 26) = 100;
        v26 = (CoreML::Specification::StringVector *)operator new();
        CoreML::Specification::StringVector::StringVector(v26);
        *((_QWORD *)this + 11) = v26;
      }
      v38 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v38 < 0)
      {
        v39 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v39 < 0)
          return 0;
      }
      else
      {
        v39 = *v38;
        *(_QWORD *)a2 = v38 + 1;
      }
      v48 = google::protobuf::io::CodedInputStream::PushLimit(a2, v39);
      v50 = *((_DWORD *)a2 + 13);
      v43 = __OFSUB__(v50--, 1);
      *((_DWORD *)a2 + 13) = v50;
      if (v50 < 0 != v43)
        return 0;
      v44 = v48;
      result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v26, (char **)a2, v49);
      if (!(_DWORD)result)
        return result;
    }
    else
    {
      if (v17 != 101 || v13 != 42)
        goto LABEL_9;
      if (*((_DWORD *)this + 26) == 101)
      {
        v22 = (CoreML::Specification::Int64Vector *)*((_QWORD *)this + 11);
      }
      else
      {
        CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
        *((_DWORD *)this + 26) = 101;
        v22 = (CoreML::Specification::Int64Vector *)operator new();
        CoreML::Specification::Int64Vector::Int64Vector(v22);
        *((_QWORD *)this + 11) = v22;
      }
      v34 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v34 < 0)
      {
        v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v35 < 0)
          return 0;
      }
      else
      {
        v35 = *v34;
        *(_QWORD *)a2 = v34 + 1;
      }
      v40 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
      v42 = *((_DWORD *)a2 + 13);
      v43 = __OFSUB__(v42--, 1);
      *((_DWORD *)a2 + 13) = v42;
      if (v42 < 0 != v43)
        return 0;
      v44 = v40;
      result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v22, a2, v41);
      if (!(_DWORD)result)
        return result;
    }
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v44))
      return 0;
  }
  switch(v17)
  {
    case 0xC8u:
      if (v13 != 66)
        goto LABEL_9;
      v18 = *v8;
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v18 = *v8;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v18);
      if (!(_DWORD)result)
        return result;
      v20 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      v51 = "CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName";
      goto LABEL_114;
    case 0xC9u:
      if (v13 != 74)
        goto LABEL_9;
      v27 = *v7;
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v27 = *v7;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v27);
      if (!(_DWORD)result)
        return result;
      v20 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      v51 = "CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName";
      goto LABEL_114;
    case 0xCAu:
      if (v13 != 82)
        goto LABEL_9;
      v28 = *v6;
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v28 = *v6;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v28);
      if (!(_DWORD)result)
        return result;
      v20 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      v51 = "CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName";
      goto LABEL_114;
    case 0xCBu:
      if (v13 != 90)
        goto LABEL_9;
      v29 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v29 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v29);
      if (!(_DWORD)result)
        return result;
      v20 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      v51 = "CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName";
      goto LABEL_114;
    case 0xCCu:
    case 0xCDu:
    case 0xCEu:
    case 0xCFu:
    case 0xD0u:
    case 0xD1u:
      goto LABEL_9;
    case 0xD2u:
      if (v13 != 146)
        goto LABEL_9;
      v30 = *v52;
      if (*v52 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v52, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v30 = *v52;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v30);
      if (!(_DWORD)result)
        return result;
      v20 = *v52;
      if (SHIBYTE((*v52)->__r_.__value_.__r.__words[2]) < 0)
      {
        v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        size = (*v52)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v52)->__r_.__value_.__r.__words[2]);
      }
      v51 = "CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName";
      goto LABEL_114;
    case 0xD3u:
      if (v13 != 154)
        goto LABEL_9;
      v31 = *v53;
      if (*v53 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v53, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v31 = *v53;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v31);
      if (!(_DWORD)result)
        return result;
      v20 = *v53;
      if (SHIBYTE((*v53)->__r_.__value_.__r.__words[2]) < 0)
      {
        v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
        size = (*v53)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v53)->__r_.__value_.__r.__words[2]);
      }
      v51 = "CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName";
LABEL_114:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v20, size, 0, (uint64_t)v51))
        return 0;
      goto LABEL_2;
    default:
      if (v17 != 110)
      {
        if (v17 != 111 || v13 != 121)
          goto LABEL_9;
        v54 = 0;
        v23 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v54);
          if (!(_DWORD)result)
            return result;
          v24 = v54;
        }
        else
        {
          v24 = *v23;
          *(_QWORD *)a2 = v23 + 1;
        }
        *((_QWORD *)this + 9) = v24;
        goto LABEL_2;
      }
      if (v13 == 113)
      {
        v54 = 0;
        v32 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v54);
          if (!(_DWORD)result)
            return result;
          v33 = v54;
        }
        else
        {
          v33 = *v32;
          *(_QWORD *)a2 = v32 + 1;
        }
        *((_QWORD *)this + 8) = v33;
        goto LABEL_2;
      }
LABEL_9:
      if ((_DWORD)v13)
        v15 = (v13 & 7) == 4;
      else
        v15 = 1;
      if (!v15)
      {
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0;
        goto LABEL_2;
      }
      return 1;
  }
}

void sub_1D3B4DA6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NonMaximumSuppression::ByteSizeLong(CoreML::Specification::NonMaximumSuppression *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  v2 = *((_QWORD *)this + 2);
  v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(_QWORD *)(v2 + 8))
      goto LABEL_3;
LABEL_7:
    v5 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v2 + 23))
    goto LABEL_7;
LABEL_3:
  v4 = *(_QWORD *)(v2 + 8);
  if ((v3 & 0x80u) == 0)
    v4 = v3;
  v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_8:
  v6 = *((_QWORD *)this + 3);
  v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v6 + 23))
  {
    goto LABEL_13;
  }
  v8 = *(_QWORD *)(v6 + 8);
  if ((v7 & 0x80u) == 0)
    v8 = v7;
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  v9 = *((_QWORD *)this + 4);
  v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_18;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_18;
  }
  v11 = *(_QWORD *)(v9 + 8);
  if ((v10 & 0x80u) == 0)
    v11 = v10;
  v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_18:
  v12 = *((_QWORD *)this + 5);
  v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(_QWORD *)(v12 + 8))
      goto LABEL_23;
  }
  else if (!*(_BYTE *)(v12 + 23))
  {
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v14 = v13;
  v5 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  v15 = *((_QWORD *)this + 6);
  v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_28;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_28;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if ((v16 & 0x80u) == 0)
    v17 = v16;
  v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_28:
  v18 = *((_QWORD *)this + 7);
  v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(_QWORD *)(v18 + 8))
      goto LABEL_33;
  }
  else if (!*(_BYTE *)(v18 + 23))
  {
    goto LABEL_33;
  }
  v20 = *(_QWORD *)(v18 + 8);
  if ((v19 & 0x80u) == 0)
    v20 = v19;
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  if (*((double *)this + 8) != 0.0)
    v5 += 10;
  if (*((double *)this + 9) == 0.0)
    v21 = v5;
  else
    v21 = v5 + 10;
  if (*((_DWORD *)this + 25) == 1)
  {
    v22 = *((_QWORD *)this + 10);
    v23 = *(unsigned __int8 *)(v22 + 16);
    *(_DWORD *)(v22 + 20) = 2 * v23;
    v21 += 2 * v23 + 2;
  }
  v24 = *((_DWORD *)this + 26);
  if (v24 == 101)
  {
    v25 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 11));
    goto LABEL_54;
  }
  if (v24 == 100)
  {
    v25 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 11));
LABEL_54:
    v21 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 24) = v21;
  return v21;
}

uint64_t CoreML::Specification::NonMaximumSuppression::SerializeWithCachedSizes(CoreML::Specification::NonMaximumSuppression *this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  double v7;
  double v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  if (*((_DWORD *)this + 25) == 1)
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *((_QWORD *)this + 10), a2, a4);
  v6 = *((_DWORD *)this + 26);
  if (v6 == 100)
  {
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x64, *((_QWORD *)this + 11), a2, a4);
    v6 = *((_DWORD *)this + 26);
  }
  if (v6 == 101)
    google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x65, *((_QWORD *)this + 11), a2, a4);
  v7 = *((double *)this + 8);
  if (v7 != 0.0)
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x6E, a2, v7, a3);
  v8 = *((double *)this + 9);
  if (v8 != 0.0)
    google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x6F, a2, v8, a3);
  v9 = (unsigned int *)*((_QWORD *)this + 2);
  if (*((char *)v9 + 23) < 0)
  {
    v10 = *((_QWORD *)v9 + 1);
    if (!v10)
      goto LABEL_17;
    v9 = *(unsigned int **)v9;
    goto LABEL_16;
  }
  LODWORD(v10) = *((unsigned __int8 *)v9 + 23);
  if (*((_BYTE *)v9 + 23))
  {
LABEL_16:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xC8u, *((_QWORD *)this + 2), a2);
  }
LABEL_17:
  v11 = (unsigned int *)*((_QWORD *)this + 3);
  if (*((char *)v11 + 23) < 0)
  {
    v12 = *((_QWORD *)v11 + 1);
    if (!v12)
      goto LABEL_23;
    v11 = *(unsigned int **)v11;
    goto LABEL_22;
  }
  LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
  if (*((_BYTE *)v11 + 23))
  {
LABEL_22:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xC9u, *((_QWORD *)this + 3), a2);
  }
LABEL_23:
  v13 = (unsigned int *)*((_QWORD *)this + 4);
  if (*((char *)v13 + 23) < 0)
  {
    v14 = *((_QWORD *)v13 + 1);
    if (!v14)
      goto LABEL_29;
    v13 = *(unsigned int **)v13;
    goto LABEL_28;
  }
  LODWORD(v14) = *((unsigned __int8 *)v13 + 23);
  if (*((_BYTE *)v13 + 23))
  {
LABEL_28:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, v14, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCAu, *((_QWORD *)this + 4), a2);
  }
LABEL_29:
  v15 = (unsigned int *)*((_QWORD *)this + 5);
  if (*((char *)v15 + 23) < 0)
  {
    v16 = *((_QWORD *)v15 + 1);
    if (!v16)
      goto LABEL_35;
    v15 = *(unsigned int **)v15;
    goto LABEL_34;
  }
  LODWORD(v16) = *((unsigned __int8 *)v15 + 23);
  if (*((_BYTE *)v15 + 23))
  {
LABEL_34:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v15, v16, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCBu, *((_QWORD *)this + 5), a2);
  }
LABEL_35:
  v17 = (unsigned int *)*((_QWORD *)this + 6);
  if (*((char *)v17 + 23) < 0)
  {
    v18 = *((_QWORD *)v17 + 1);
    if (!v18)
      goto LABEL_41;
    v17 = *(unsigned int **)v17;
    goto LABEL_40;
  }
  LODWORD(v18) = *((unsigned __int8 *)v17 + 23);
  if (*((_BYTE *)v17 + 23))
  {
LABEL_40:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v17, v18, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xD2u, *((_QWORD *)this + 6), a2);
  }
LABEL_41:
  result = *((_QWORD *)this + 7);
  if (*(char *)(result + 23) < 0)
  {
    v20 = *(_QWORD *)(result + 8);
    if (!v20)
      return result;
    result = *(_QWORD *)result;
    goto LABEL_46;
  }
  LODWORD(v20) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_46:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v20, 1, (uint64_t)"CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xD3u, *((_QWORD *)this + 7), a2);
  }
  return result;
}

uint64_t CoreML::Specification::NonMaximumSuppression::GetCachedSize(CoreML::Specification::NonMaximumSuppression *this)
{
  return *((unsigned int *)this + 24);
}

uint64_t CoreML::Specification::NonMaximumSuppression::clear_ClassLabels(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 104);
  if (v2 == 101 || v2 == 100)
  {
    this = *(_QWORD *)(this + 88);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 104) = 0;
  return this;
}

void CoreML::Specification::NonMaximumSuppression::MergeFrom(CoreML::Specification::NonMaximumSuppression *this, const CoreML::Specification::NonMaximumSuppression *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  double v17;
  double v18;
  uint64_t v19;
  CoreML::Specification::NonMaximumSuppression_PickTop *v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  CoreML::Specification::StringVector *v24;
  CoreML::Specification::Int64Vector *v25;
  CoreML::Specification::StringVector *v26;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v27;
  CoreML::Specification::Int64Vector *v28;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v29;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_11;
  }
  v6 = (uint64_t *)*((_QWORD *)this + 2);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v5);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v5);
  }
LABEL_11:
  v7 = *((_QWORD *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(_QWORD *)(v7 + 8))
      goto LABEL_19;
  }
  else if (!*(_BYTE *)(v7 + 23))
  {
    goto LABEL_19;
  }
  v8 = (uint64_t *)*((_QWORD *)this + 3);
  if (v8 != (uint64_t *)v7)
  {
    if (v8 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, v7);
    else
      std::string::operator=(*((std::string **)this + 3), (const std::string *)v7);
  }
LABEL_19:
  v9 = *((_QWORD *)a2 + 4);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_27;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_27;
  }
  v10 = (uint64_t *)*((_QWORD *)this + 4);
  if (v10 != (uint64_t *)v9)
  {
    if (v10 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, v9);
    else
      std::string::operator=(*((std::string **)this + 4), (const std::string *)v9);
  }
LABEL_27:
  v11 = *((_QWORD *)a2 + 5);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(_QWORD *)(v11 + 8))
      goto LABEL_35;
  }
  else if (!*(_BYTE *)(v11 + 23))
  {
    goto LABEL_35;
  }
  v12 = (uint64_t *)*((_QWORD *)this + 5);
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, v11);
    else
      std::string::operator=(*((std::string **)this + 5), (const std::string *)v11);
  }
LABEL_35:
  v13 = *((_QWORD *)a2 + 6);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(_QWORD *)(v13 + 8))
      goto LABEL_43;
  }
  else if (!*(_BYTE *)(v13 + 23))
  {
    goto LABEL_43;
  }
  v14 = (uint64_t *)*((_QWORD *)this + 6);
  if (v14 != (uint64_t *)v13)
  {
    if (v14 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, v13);
    else
      std::string::operator=(*((std::string **)this + 6), (const std::string *)v13);
  }
LABEL_43:
  v15 = *((_QWORD *)a2 + 7);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_51;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_51;
  }
  v16 = (uint64_t *)*((_QWORD *)this + 7);
  if (v16 != (uint64_t *)v15)
  {
    if (v16 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 7, v15);
    else
      std::string::operator=(*((std::string **)this + 7), (const std::string *)v15);
  }
LABEL_51:
  v17 = *((double *)a2 + 8);
  if (v17 != 0.0)
    *((double *)this + 8) = v17;
  v18 = *((double *)a2 + 9);
  if (v18 != 0.0)
    *((double *)this + 9) = v18;
  if (*((_DWORD *)a2 + 25) == 1)
  {
    if (*((_DWORD *)this + 25) == 1)
    {
      v19 = *((_QWORD *)this + 10);
    }
    else
    {
      *((_DWORD *)this + 25) = 1;
      v19 = operator new();
      v20 = CoreML::Specification::NonMaximumSuppression_PickTop::NonMaximumSuppression_PickTop((CoreML::Specification::NonMaximumSuppression_PickTop *)v19);
      *((_QWORD *)this + 10) = v19;
      if (*((_DWORD *)a2 + 25) != 1)
      {
        CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(v20);
        v21 = &CoreML::Specification::_NonMaximumSuppression_PickTop_default_instance_;
        goto LABEL_61;
      }
    }
    v21 = (uint64_t *)*((_QWORD *)a2 + 10);
LABEL_61:
    v22 = v21[1];
    if ((v22 & 1) != 0)
      google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v19 + 8), v22 & 0xFFFFFFFFFFFFFFFELL);
    if (*((_BYTE *)v21 + 16))
      *(_BYTE *)(v19 + 16) = 1;
  }
  v23 = *((_DWORD *)a2 + 26);
  if (v23 == 101)
  {
    if (*((_DWORD *)this + 26) == 101)
    {
      v25 = (CoreML::Specification::Int64Vector *)*((_QWORD *)this + 11);
    }
    else
    {
      CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
      *((_DWORD *)this + 26) = 101;
      v25 = (CoreML::Specification::Int64Vector *)operator new();
      v28 = CoreML::Specification::Int64Vector::Int64Vector(v25);
      *((_QWORD *)this + 11) = v25;
      if (*((_DWORD *)a2 + 26) != 101)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v28);
        v29 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_Int64Vector_default_instance_;
        goto LABEL_79;
      }
    }
    v29 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 11);
LABEL_79:
    CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v25, v29);
    return;
  }
  if (v23 == 100)
  {
    if (*((_DWORD *)this + 26) == 100)
    {
      v24 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 11);
    }
    else
    {
      CoreML::Specification::NonMaximumSuppression::clear_ClassLabels((uint64_t)this);
      *((_DWORD *)this + 26) = 100;
      v24 = (CoreML::Specification::StringVector *)operator new();
      v26 = CoreML::Specification::StringVector::StringVector(v24);
      *((_QWORD *)this + 11) = v24;
      if (*((_DWORD *)a2 + 26) != 100)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v26);
        v27 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::_StringVector_default_instance_;
        goto LABEL_77;
      }
    }
    v27 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 11);
LABEL_77:
    CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v24, v27);
  }
}

void sub_1D3B4E3EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppression *CoreML::Specification::NonMaximumSuppression::NonMaximumSuppression(CoreML::Specification::NonMaximumSuppression *this)
{
  *(_QWORD *)this = &off_1E9560398;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppression *)&CoreML::Specification::_NonMaximumSuppression_default_instance_)
    CoreML::Specification::protobuf_NonMaximumSuppression_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 26) = 0;
  *((_QWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B4E4A8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NonMaximumSuppression>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NonMaximumSuppression>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::~ItemSimilarityRecommender_ConnectedItem(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  *(_QWORD *)this = &off_1E95647E0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E95647E0;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender.ConnectedItem");
}

CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(this, 0);
}

CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::New(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v3;

  v3 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)operator new();
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(a2, v3);
  return v3;
}

void sub_1D3B4E7C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::IsInitialized(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return 1;
}

BOOL CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  BOOL v13;
  char v14;
  _BOOL8 result;
  unint64_t v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 17)
          goto LABEL_20;
        v16 = 0;
        v11 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result)
            return result;
          v12 = v16;
        }
        else
        {
          v12 = *v11;
          *a2 = (char *)(v11 + 1);
        }
        *((_QWORD *)this + 3) = v12;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v14 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 2) = *v10;
        *a2 = v10 + 1;
      }
    }
LABEL_20:
    if ((_DWORD)v7)
      v13 = (v7 & 7) == 4;
    else
      v13 = 1;
    if (v13)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

unint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((double *)this + 3) != 0.0)
    v3 += 9;
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  unint64_t v6;
  double v7;

  v5 = this;
  v6 = *(_QWORD *)(this + 16);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  v7 = *(double *)(v5 + 24);
  if (v7 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  return *((unsigned int *)this + 8);
}

std::string *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergeFrom(std::string *this, const CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *a2)
{
  std::string *v3;
  uint64_t v4;
  std::string::size_type v5;
  double v6;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (v5)
    v3->__r_.__value_.__r.__words[2] = v5;
  v6 = *((double *)a2 + 3);
  if (v6 != 0.0)
    *(double *)&v3[1].__r_.__value_.__l.__data_ = v6;
  return this;
}

CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *this)
{
  *(_QWORD *)this = &off_1E95647E0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)&CoreML::Specification::_ItemSimilarityRecommender_ConnectedItem_default_instance_)
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B4EA88(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::TableStruct *this)
{
  unint64_t *inited;
  double result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_ItemSimilarityRecommender_default_instance_ = (uint64_t)&off_1E9561EE8;
  result = 0.0;
  unk_1EDB929B8 = 0u;
  unk_1EDB929C8 = 0u;
  qword_1EDB929D8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB929E0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB929E8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB929F0 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB929F8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB92A00 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB92A18 = 0;
  byte_1EDB92A20 = 1;
  qword_1EDB92A08 = (uint64_t)&CoreML::Specification::_StringVector_default_instance_;
  unk_1EDB92A10 = &CoreML::Specification::_Int64Vector_default_instance_;
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender(CoreML::Specification::ItemSimilarityRecommender *this)
{
  CoreML::Specification::ItemSimilarityRecommender::~ItemSimilarityRecommender(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_1E9561EE8;
  v2 = *((_QWORD *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D8251A40](v4, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 7);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x1D8251A40](v6, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 8);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x1D8251A40](v7, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x1D8251A40](v8, 0x1012C40EC159624);
  }
  v9 = *((_QWORD *)this + 10);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    MEMORY[0x1D8251A40](v9, 0x1012C40EC159624);
  }
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    v10 = *((_QWORD *)this + 11);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = *((_QWORD *)this + 12);
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::ItemSimilarityRecommender::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender");
}

CoreML::Specification::ItemSimilarityRecommender *CoreML::Specification::ItemSimilarityRecommender::New(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return CoreML::Specification::ItemSimilarityRecommender::New(this, 0);
}

CoreML::Specification::ItemSimilarityRecommender *CoreML::Specification::ItemSimilarityRecommender::New(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::ItemSimilarityRecommender *v3;

  v3 = (CoreML::Specification::ItemSimilarityRecommender *)operator new();
  CoreML::Specification::ItemSimilarityRecommender::ItemSimilarityRecommender(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender>(a2, v3);
  return v3;
}

void sub_1D3B4EC50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40BDA5CB28);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::Clear(CoreML::Specification::ItemSimilarityRecommender *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = 0;
    v4 = *((_QWORD *)this + 4) + 8;
    do
    {
      v5 = *(_QWORD *)(v4 + 8 * v3);
      v6 = *(unsigned int *)(v5 + 24);
      if ((int)v6 >= 1)
      {
        v7 = (uint64_t *)(*(_QWORD *)(v5 + 32) + 8);
        do
        {
          v8 = *v7++;
          *(_QWORD *)(v8 + 16) = 0;
          *(_QWORD *)(v8 + 24) = 0;
          --v6;
        }
        while (v6);
        *(_DWORD *)(v5 + 24) = 0;
      }
      ++v3;
      *(_QWORD *)(v5 + 40) = 0;
      *(_QWORD *)(v5 + 48) = 0;
    }
    while (v3 != v2);
    *((_DWORD *)this + 6) = 0;
  }
  v9 = *((_QWORD *)this + 5);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0)
    {
      **(_BYTE **)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v9 = 0;
      *(_BYTE *)(v9 + 23) = 0;
    }
  }
  v10 = *((_QWORD *)this + 6);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0)
    {
      **(_BYTE **)v10 = 0;
      *(_QWORD *)(v10 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v10 = 0;
      *(_BYTE *)(v10 + 23) = 0;
    }
  }
  v11 = *((_QWORD *)this + 7);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v11 + 23) < 0)
    {
      **(_BYTE **)v11 = 0;
      *(_QWORD *)(v11 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v11 = 0;
      *(_BYTE *)(v11 + 23) = 0;
    }
  }
  v12 = *((_QWORD *)this + 8);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v12 + 23) < 0)
    {
      **(_BYTE **)v12 = 0;
      *(_QWORD *)(v12 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v12 = 0;
      *(_BYTE *)(v12 + 23) = 0;
    }
  }
  v13 = *((_QWORD *)this + 9);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v13 + 23) < 0)
    {
      **(_BYTE **)v13 = 0;
      *(_QWORD *)(v13 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v13 = 0;
      *(_BYTE *)(v13 + 23) = 0;
    }
  }
  v14 = *((_QWORD *)this + 10);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v14 + 23) < 0)
    {
      **(_BYTE **)v14 = 0;
      *(_QWORD *)(v14 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v14 = 0;
      *(_BYTE *)(v14 + 23) = 0;
    }
  }
  v15 = *((_QWORD *)this + 11);
  if (v15)
    (*(void (**)(uint64_t))(*(_QWORD *)v15 + 8))(v15);
  *((_QWORD *)this + 11) = 0;
  result = *((_QWORD *)this + 12);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 12) = 0;
  return result;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::IsInitialized(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  std::string **v6;
  std::string **v7;
  std::string **v8;
  unsigned __int8 *v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  BOOL v15;
  unsigned int TagFallback;
  int *v17;
  int v18;
  int v19;
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems *Aligned;
  CoreML::Specification::StringVector *v21;
  char *v22;
  int v23;
  CoreML::Specification::Int64Vector *v24;
  char *v25;
  int v26;
  std::string *v27;
  uint64_t result;
  std::string *v29;
  std::string::size_type size;
  std::string *v31;
  std::string *v32;
  std::string *v33;
  std::string *v34;
  std::string *v35;
  int v36;
  unsigned int v37;
  int v38;
  BOOL v39;
  int v40;
  int v41;
  unsigned int v42;
  int v43;
  const char *v44;
  google::protobuf::Arena *v45;
  google::protobuf::Arena **v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int VarintSizeAsIntFallback;
  int v53;
  unsigned int v54;
  int v55;
  google::protobuf::internal::RepeatedPtrFieldBase *v56;
  std::string **v57;
  std::string **v58;

  v57 = (std::string **)((char *)this + 72);
  v58 = (std::string **)((char *)this + 80);
  v5 = (std::string **)((char *)this + 64);
  v6 = (std::string **)((char *)this + 56);
  v7 = (std::string **)((char *)this + 48);
  v8 = (std::string **)((char *)this + 40);
  v56 = (CoreML::Specification::ItemSimilarityRecommender *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v9 = *(unsigned __int8 **)a2;
    v10 = *((_QWORD *)a2 + 1);
    if (*(_QWORD *)a2 >= v10)
    {
      LODWORD(v12) = 0;
      goto LABEL_16;
    }
    v11 = v9 + 1;
    v12 = *v9;
    if ((char)*v9 >= 1)
    {
      *(_QWORD *)a2 = v11;
      v13 = v12 | 0x100000000;
      if ((v13 & 0x100000000) != 0)
        goto LABEL_17;
      goto LABEL_9;
    }
    if ((unint64_t)v11 < v10)
    {
      v14 = *v11;
      if ((v12 & ~v14) >= 0x80)
        break;
    }
LABEL_16:
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
    v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v13 & 0x100000000) != 0)
      goto LABEL_17;
LABEL_9:
    if ((_DWORD)v13)
      v15 = (v13 & 7) == 4;
    else
      v15 = 1;
    if (v15)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)
      goto LABEL_110;
  }
  *(_QWORD *)a2 = v9 + 2;
  v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v13 >> 3)
  {
    case 1u:
      if (v13 != 10)
        goto LABEL_9;
      v17 = (int *)*((_QWORD *)this + 4);
      if (!v17)
      {
        v18 = *((_DWORD *)this + 6);
        v19 = *((_DWORD *)this + 7);
LABEL_94:
        if (v18 <= v19)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v56, v19 - v18 + 1);
          v17 = (int *)*((_QWORD *)this + 4);
        }
        v19 = *v17;
        goto LABEL_97;
      }
      v18 = *((_DWORD *)this + 6);
      v19 = *v17;
      if (v18 < *v17)
      {
        *((_DWORD *)this + 6) = v18 + 1;
        Aligned = *(CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)&v17[2 * v18 + 2];
        goto LABEL_103;
      }
      if (v19 == *((_DWORD *)this + 7))
        goto LABEL_94;
LABEL_97:
      *v17 = v19 + 1;
      v45 = *(google::protobuf::Arena **)v56;
      if (*(_QWORD *)v56)
      {
        CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(Aligned);
        v46 = google::protobuf::Arena::AllocateAligned(v45, 0, 24);
        *v46 = Aligned;
        v46[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
        v47 = (unint64_t *)((char *)v45 + 32);
        do
          v48 = __ldxr(v47);
        while (__stxr((unint64_t)v46, v47));
        v46[2] = (google::protobuf::Arena *)v48;
      }
      else
      {
        Aligned = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)operator new();
        CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(Aligned);
      }
      v49 = *((_QWORD *)this + 4);
      v50 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v50 + 1;
      *(_QWORD *)(v49 + 8 * v50 + 8) = Aligned;
LABEL_103:
      v51 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v51 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          goto LABEL_110;
      }
      else
      {
        VarintSizeAsIntFallback = *v51;
        *(_QWORD *)a2 = v51 + 1;
      }
      v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v55 = *((_DWORD *)a2 + 13);
      v39 = __OFSUB__(v55--, 1);
      *((_DWORD *)a2 + 13) = v55;
      if (v55 < 0 == v39)
      {
        v40 = v53;
        result = CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergePartialFromCodedStream(Aligned, a2, v54);
        if (!(_DWORD)result)
          return result;
LABEL_109:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v40))
          goto LABEL_2;
      }
LABEL_110:
      result = 0;
      break;
    case 2u:
      if (v13 != 18)
        goto LABEL_9;
      v21 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 11);
      if (!v21)
      {
        v21 = (CoreML::Specification::StringVector *)operator new();
        CoreML::Specification::StringVector::StringVector(v21);
        *((_QWORD *)this + 11) = v21;
      }
      v22 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
      {
        v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v23 < 0)
          goto LABEL_110;
      }
      else
      {
        v23 = *v22;
        *(_QWORD *)a2 = v22 + 1;
      }
      v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
      v38 = *((_DWORD *)a2 + 13);
      v39 = __OFSUB__(v38--, 1);
      *((_DWORD *)a2 + 13) = v38;
      if (v38 < 0 != v39)
        goto LABEL_110;
      v40 = v36;
      result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v21, (char **)a2, v37);
      if (!(_DWORD)result)
        return result;
      goto LABEL_109;
    case 3u:
      if (v13 != 26)
        goto LABEL_9;
      v24 = (CoreML::Specification::Int64Vector *)*((_QWORD *)this + 12);
      if (!v24)
      {
        v24 = (CoreML::Specification::Int64Vector *)operator new();
        CoreML::Specification::Int64Vector::Int64Vector(v24);
        *((_QWORD *)this + 12) = v24;
      }
      v25 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v25 < 0)
      {
        v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v26 < 0)
          goto LABEL_110;
      }
      else
      {
        v26 = *v25;
        *(_QWORD *)a2 = v25 + 1;
      }
      v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
      v43 = *((_DWORD *)a2 + 13);
      v39 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 13) = v43;
      if (v43 < 0 != v39)
        goto LABEL_110;
      v40 = v41;
      result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v24, a2, v42);
      if (!(_DWORD)result)
        return result;
      goto LABEL_109;
    case 0xAu:
      if (v13 != 82)
        goto LABEL_9;
      v27 = *v8;
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v27 = *v8;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v27);
      if (!(_DWORD)result)
        return result;
      v29 = *v8;
      if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
      {
        v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        size = (*v8)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
      }
      v44 = "CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName";
      goto LABEL_91;
    case 0xBu:
      if (v13 != 90)
        goto LABEL_9;
      v31 = *v7;
      if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v31 = *v7;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v31);
      if (!(_DWORD)result)
        return result;
      v29 = *v7;
      if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
      {
        v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        size = (*v7)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
      }
      v44 = "CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName";
      goto LABEL_91;
    case 0xCu:
      if (v13 != 98)
        goto LABEL_9;
      v32 = *v6;
      if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v32 = *v6;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v32);
      if (!(_DWORD)result)
        return result;
      v29 = *v6;
      if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
      {
        v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        size = (*v6)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
      }
      v44 = "CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName";
      goto LABEL_91;
    case 0xDu:
      if (v13 != 106)
        goto LABEL_9;
      v33 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v33 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v33);
      if (!(_DWORD)result)
        return result;
      v29 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      v44 = "CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName";
      goto LABEL_91;
    case 0x14u:
      if (v13 != 162)
        goto LABEL_9;
      v34 = *v57;
      if (*v57 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v57, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v34 = *v57;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v34);
      if (!(_DWORD)result)
        return result;
      v29 = *v57;
      if (SHIBYTE((*v57)->__r_.__value_.__r.__words[2]) < 0)
      {
        v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        size = (*v57)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v57)->__r_.__value_.__r.__words[2]);
      }
      v44 = "CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName";
      goto LABEL_91;
    case 0x15u:
      if (v13 != 170)
        goto LABEL_9;
      v35 = *v58;
      if (*v58 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v58, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v35 = *v58;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v35);
      if (!(_DWORD)result)
        return result;
      v29 = *v58;
      if (SHIBYTE((*v58)->__r_.__value_.__r.__words[2]) < 0)
      {
        v29 = (std::string *)v29->__r_.__value_.__r.__words[0];
        size = (*v58)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v58)->__r_.__value_.__r.__words[2]);
      }
      v44 = "CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName";
LABEL_91:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v29, size, 0, (uint64_t)v44))
        goto LABEL_110;
      goto LABEL_2;
    default:
      goto LABEL_9;
  }
  return result;
}

void sub_1D3B4F480(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  CoreML::Specification::StringVector *v24;
  uint64_t v25;
  CoreML::Specification::Int64Vector *v26;
  uint64_t v27;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ByteSizeLong(*(CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((_QWORD *)this + 5);
  v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v6 + 23))
  {
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(v6 + 8);
  if ((v7 & 0x80u) == 0)
    v8 = v7;
  v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  v9 = *((_QWORD *)this + 6);
  v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_16;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_16;
  }
  v11 = *(_QWORD *)(v9 + 8);
  if ((v10 & 0x80u) == 0)
    v11 = v10;
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  v12 = *((_QWORD *)this + 7);
  v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(_QWORD *)(v12 + 8))
      goto LABEL_21;
  }
  else if (!*(_BYTE *)(v12 + 23))
  {
    goto LABEL_21;
  }
  v14 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v14 = v13;
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  v15 = *((_QWORD *)this + 8);
  v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_26;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_26;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if ((v16 & 0x80u) == 0)
    v17 = v16;
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_26:
  v18 = *((_QWORD *)this + 9);
  v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(_QWORD *)(v18 + 8))
      goto LABEL_31;
  }
  else if (!*(_BYTE *)(v18 + 23))
  {
    goto LABEL_31;
  }
  v20 = *(_QWORD *)(v18 + 8);
  if ((v19 & 0x80u) == 0)
    v20 = v19;
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_31:
  v21 = *((_QWORD *)this + 10);
  v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(_QWORD *)(v21 + 8))
      goto LABEL_36;
  }
  else if (!*(_BYTE *)(v21 + 23))
  {
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v21 + 8);
  if ((v22 & 0x80u) == 0)
    v23 = v22;
  v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_36:
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    v24 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 11);
    if (v24)
    {
      v25 = CoreML::Specification::StringVector::ByteSizeLong(v24);
      v4 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v26 = (CoreML::Specification::Int64Vector *)*((_QWORD *)this + 12);
    if (v26)
    {
      v27 = CoreML::Specification::Int64Vector::ByteSizeLong(v26);
      v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 26) = v4;
  return v4;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::SerializeWithCachedSizes(CoreML::Specification::ItemSimilarityRecommender *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v6;
  int i;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*((_QWORD *)this + 4) + 8 * i + 8), a2, a4);
  }
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    v8 = *((_QWORD *)this + 11);
    if (v8)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
    v9 = *((_QWORD *)this + 12);
    if (v9)
      google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  v10 = (unsigned int *)*((_QWORD *)this + 5);
  if (*((char *)v10 + 23) < 0)
  {
    v11 = *((_QWORD *)v10 + 1);
    if (!v11)
      goto LABEL_15;
    v10 = *(unsigned int **)v10;
    goto LABEL_14;
  }
  LODWORD(v11) = *((unsigned __int8 *)v10 + 23);
  if (*((_BYTE *)v10 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v10, v11, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((_QWORD *)this + 5), a2);
  }
LABEL_15:
  v12 = (unsigned int *)*((_QWORD *)this + 6);
  if (*((char *)v12 + 23) < 0)
  {
    v13 = *((_QWORD *)v12 + 1);
    if (!v13)
      goto LABEL_21;
    v12 = *(unsigned int **)v12;
    goto LABEL_20;
  }
  LODWORD(v13) = *((unsigned __int8 *)v12 + 23);
  if (*((_BYTE *)v12 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xBu, *((_QWORD *)this + 6), a2);
  }
LABEL_21:
  v14 = (unsigned int *)*((_QWORD *)this + 7);
  if (*((char *)v14 + 23) < 0)
  {
    v15 = *((_QWORD *)v14 + 1);
    if (!v15)
      goto LABEL_27;
    v14 = *(unsigned int **)v14;
    goto LABEL_26;
  }
  LODWORD(v15) = *((unsigned __int8 *)v14 + 23);
  if (*((_BYTE *)v14 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, v15, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xCu, *((_QWORD *)this + 7), a2);
  }
LABEL_27:
  v16 = (unsigned int *)*((_QWORD *)this + 8);
  if (*((char *)v16 + 23) < 0)
  {
    v17 = *((_QWORD *)v16 + 1);
    if (!v17)
      goto LABEL_33;
    v16 = *(unsigned int **)v16;
    goto LABEL_32;
  }
  LODWORD(v17) = *((unsigned __int8 *)v16 + 23);
  if (*((_BYTE *)v16 + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v16, v17, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xDu, *((_QWORD *)this + 8), a2);
  }
LABEL_33:
  v18 = (unsigned int *)*((_QWORD *)this + 9);
  if (*((char *)v18 + 23) < 0)
  {
    v19 = *((_QWORD *)v18 + 1);
    if (!v19)
      goto LABEL_39;
    v18 = *(unsigned int **)v18;
    goto LABEL_38;
  }
  LODWORD(v19) = *((unsigned __int8 *)v18 + 23);
  if (*((_BYTE *)v18 + 23))
  {
LABEL_38:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v18, v19, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((_QWORD *)this + 9), a2);
  }
LABEL_39:
  result = *((_QWORD *)this + 10);
  if (*(char *)(result + 23) < 0)
  {
    v21 = *(_QWORD *)(result + 8);
    if (!v21)
      return result;
    result = *(_QWORD *)result;
    goto LABEL_44;
  }
  LODWORD(v21) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_44:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v21, 1, (uint64_t)"CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((_QWORD *)this + 10), a2);
  }
  return result;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender *this)
{
  return *((unsigned int *)this + 26);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ByteSizeLong(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *((_DWORD *)this + 6);
  if (v1)
  {
    v2 = 0;
    v3 = *((_QWORD *)this + 4);
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = *(_QWORD *)(v3 + 8 * v2 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = (9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6;
      if (v6)
        v8 = v7 + 1;
      else
        v8 = 0;
      if (*(double *)(v5 + 24) != 0.0)
        v8 += 9;
      *(_DWORD *)(v5 + 32) = v8;
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    v4 = 0;
  }
  v9 = *((_QWORD *)this + 5);
  v10 = v4 + ((9 * (__clz(v9 | 1) ^ 0x3F) + 73) >> 6);
  if (v9)
    v4 = v10 + 1;
  if (*((double *)this + 6) != 0.0)
    v4 += 9;
  *((_DWORD *)this + 14) = v4;
  return v4;
}

BOOL CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergePartialFromCodedStream(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v12;
  unint64_t *v13;
  unint64_t v14;
  int *v15;
  int v16;
  int v17;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *Aligned;
  BOOL v19;
  char v20;
  google::protobuf::Arena *v21;
  google::protobuf::Arena **v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  int VarintSizeAsIntFallback;
  int v29;
  unsigned int v30;
  int v31;
  BOOL v32;
  int v33;
  _BOOL8 result;
  unint64_t v35;

  v5 = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *(char **)a2;
          if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
            break;
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0)
            goto LABEL_8;
LABEL_26:
          if ((_DWORD)v8)
            v19 = (v8 & 7) == 4;
          else
            v19 = 1;
          if (v19)
            return 1;
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_26;
LABEL_8:
        v10 = v8 >> 3;
        if (v8 >> 3 != 3)
          break;
        if (v8 != 25)
          goto LABEL_26;
        v35 = 0;
        v13 = *(unint64_t **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v35);
          if (!result)
            return result;
          v14 = v35;
        }
        else
        {
          v14 = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_QWORD *)this + 6) = v14;
      }
      if (v10 == 2)
        break;
      if (v10 != 1 || v8 != 8)
        goto LABEL_26;
      v12 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
      {
        *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 5) = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
    }
    if (v8 != 18)
      goto LABEL_26;
    v15 = (int *)*((_QWORD *)this + 4);
    if (!v15)
    {
      v16 = *((_DWORD *)this + 6);
      v17 = *((_DWORD *)this + 7);
LABEL_36:
      if (v16 <= v17)
      {
        google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v17 - v16 + 1);
        v15 = (int *)*((_QWORD *)this + 4);
      }
      v17 = *v15;
      goto LABEL_39;
    }
    v16 = *((_DWORD *)this + 6);
    v17 = *v15;
    if (v16 < *v15)
    {
      *((_DWORD *)this + 6) = v16 + 1;
      Aligned = *(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)&v15[2 * v16 + 2];
      goto LABEL_45;
    }
    if (v17 == *((_DWORD *)this + 7))
      goto LABEL_36;
LABEL_39:
    *v15 = v17 + 1;
    v21 = *(google::protobuf::Arena **)v5;
    if (*(_QWORD *)v5)
    {
      CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(Aligned);
      v22 = google::protobuf::Arena::AllocateAligned(v21, 0, 24);
      *v22 = Aligned;
      v22[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
      v23 = (unint64_t *)((char *)v21 + 32);
      do
        v24 = __ldxr(v23);
      while (__stxr((unint64_t)v22, v23));
      v22[2] = (google::protobuf::Arena *)v24;
    }
    else
    {
      Aligned = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)operator new();
      CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(Aligned);
    }
    v25 = *((_QWORD *)this + 4);
    v26 = *((int *)this + 6);
    *((_DWORD *)this + 6) = v26 + 1;
    *(_QWORD *)(v25 + 8 * v26 + 8) = Aligned;
LABEL_45:
    v27 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v27 < 0)
    {
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        return 0;
    }
    else
    {
      VarintSizeAsIntFallback = *v27;
      *(_QWORD *)a2 = v27 + 1;
    }
    v29 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    v31 = *((_DWORD *)a2 + 13);
    v32 = __OFSUB__(v31--, 1);
    *((_DWORD *)a2 + 13) = v31;
    if (v31 < 0 != v32)
      break;
    v33 = v29;
    result = CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergePartialFromCodedStream(Aligned, (char **)a2, v30);
    if (!result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v33));
  return 0;
}

void sub_1D3B4FE14(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::ItemSimilarityRecommender_SimilarItems *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  *(_QWORD *)this = &off_1E95646B0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)&CoreML::Specification::_ItemSimilarityRecommender_SimilarItems_default_instance_)
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1D3B4FEA8(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void CoreML::Specification::ItemSimilarityRecommender::MergeFrom(CoreML::Specification::ItemSimilarityRecommender *this, const CoreML::Specification::ItemSimilarityRecommender *a2)
{
  CoreML::Specification::ItemSimilarityRecommender *v3;
  uint64_t v4;
  int v5;
  google::protobuf::Arena **v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **v13;
  uint64_t **v14;
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *v15;
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *v16;
  uint64_t *v17;
  google::protobuf::Arena *v18;
  int v19;
  uint64_t v20;
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems **v21;
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **v22;
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *v23;
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems *Aligned;
  google::protobuf::Arena **v25;
  unint64_t *v26;
  unint64_t v27;
  int v28;
  int *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v42;
  CoreML::Specification::StringVector *v43;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v44;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v45;
  CoreML::Specification::Int64Vector *v46;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v47;
  CoreML::Specification::ItemSimilarityRecommender *v48;
  uint64_t v49;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (google::protobuf::Arena **)((char *)v3 + 16);
    v49 = *((_QWORD *)a2 + 4);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::ItemSimilarityRecommender *)((char *)v3 + 16), v5);
    v8 = v7;
    v9 = **((int **)v3 + 4);
    v48 = v3;
    v10 = *((int *)v3 + 6);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(v49 + 8);
      v14 = (uint64_t **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = *v6;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)((char *)v8 + v20);
      v22 = (const CoreML::Specification::ItemSimilarityRecommender_SimilarItems **)(v20 + v49 + 8);
      do
      {
        v23 = *v22;
        if (v18)
        {
          CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(Aligned);
          v25 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
          *v25 = Aligned;
          v25[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
          v26 = (unint64_t *)((char *)v18 + 32);
          do
            v27 = __ldxr(v26);
          while (__stxr((unint64_t)v25, v26));
          v25[2] = (google::protobuf::Arena *)v27;
        }
        else
        {
          Aligned = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)operator new();
          CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(Aligned);
        }
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(v23, (uint64_t *)Aligned);
        *v21++ = Aligned;
        ++v22;
        --v19;
      }
      while (v19);
    }
    v3 = v48;
    v28 = *((_DWORD *)v48 + 6) + v5;
    *((_DWORD *)v48 + 6) = v28;
    v29 = (int *)*((_QWORD *)v48 + 4);
    if (*v29 < v28)
      *v29 = v28;
  }
  v30 = *((_QWORD *)a2 + 5);
  if (*(char *)(v30 + 23) < 0)
  {
    if (!*(_QWORD *)(v30 + 8))
      goto LABEL_28;
  }
  else if (!*(_BYTE *)(v30 + 23))
  {
    goto LABEL_28;
  }
  v31 = (uint64_t *)*((_QWORD *)v3 + 5);
  if (v31 != (uint64_t *)v30)
  {
    if (v31 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 5, v30);
    else
      std::string::operator=(*((std::string **)v3 + 5), (const std::string *)v30);
  }
LABEL_28:
  v32 = *((_QWORD *)a2 + 6);
  if (*(char *)(v32 + 23) < 0)
  {
    if (!*(_QWORD *)(v32 + 8))
      goto LABEL_36;
  }
  else if (!*(_BYTE *)(v32 + 23))
  {
    goto LABEL_36;
  }
  v33 = (uint64_t *)*((_QWORD *)v3 + 6);
  if (v33 != (uint64_t *)v32)
  {
    if (v33 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 6, v32);
    else
      std::string::operator=(*((std::string **)v3 + 6), (const std::string *)v32);
  }
LABEL_36:
  v34 = *((_QWORD *)a2 + 7);
  if (*(char *)(v34 + 23) < 0)
  {
    if (!*(_QWORD *)(v34 + 8))
      goto LABEL_44;
  }
  else if (!*(_BYTE *)(v34 + 23))
  {
    goto LABEL_44;
  }
  v35 = (uint64_t *)*((_QWORD *)v3 + 7);
  if (v35 != (uint64_t *)v34)
  {
    if (v35 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 7, v34);
    else
      std::string::operator=(*((std::string **)v3 + 7), (const std::string *)v34);
  }
LABEL_44:
  v36 = *((_QWORD *)a2 + 8);
  if (*(char *)(v36 + 23) < 0)
  {
    if (!*(_QWORD *)(v36 + 8))
      goto LABEL_52;
  }
  else if (!*(_BYTE *)(v36 + 23))
  {
    goto LABEL_52;
  }
  v37 = (uint64_t *)*((_QWORD *)v3 + 8);
  if (v37 != (uint64_t *)v36)
  {
    if (v37 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 8, v36);
    else
      std::string::operator=(*((std::string **)v3 + 8), (const std::string *)v36);
  }
LABEL_52:
  v38 = *((_QWORD *)a2 + 9);
  if (*(char *)(v38 + 23) < 0)
  {
    if (!*(_QWORD *)(v38 + 8))
      goto LABEL_60;
  }
  else if (!*(_BYTE *)(v38 + 23))
  {
    goto LABEL_60;
  }
  v39 = (uint64_t *)*((_QWORD *)v3 + 9);
  if (v39 != (uint64_t *)v38)
  {
    if (v39 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 9, v38);
    else
      std::string::operator=(*((std::string **)v3 + 9), (const std::string *)v38);
  }
LABEL_60:
  v40 = *((_QWORD *)a2 + 10);
  if (*(char *)(v40 + 23) < 0)
  {
    if (!*(_QWORD *)(v40 + 8))
      goto LABEL_68;
  }
  else if (!*(_BYTE *)(v40 + 23))
  {
    goto LABEL_68;
  }
  v41 = (uint64_t *)*((_QWORD *)v3 + 10);
  if (v41 != (uint64_t *)v40)
  {
    if (v41 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)v3 + 10, v40);
    else
      std::string::operator=(*((std::string **)v3 + 10), (const std::string *)v40);
  }
LABEL_68:
  if (a2 != (const CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
  {
    v42 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 11);
    if (v42)
    {
      v43 = (CoreML::Specification::StringVector *)*((_QWORD *)v3 + 11);
      if (!v43)
      {
        v43 = (CoreML::Specification::StringVector *)operator new();
        CoreML::Specification::StringVector::StringVector(v43);
        *((_QWORD *)v3 + 11) = v43;
        v42 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 11);
      }
      if (v42)
        v44 = v42;
      else
        v44 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::_StringVector_default_instance_;
      CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v43, v44);
    }
    v45 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 12);
    if (v45)
    {
      v46 = (CoreML::Specification::Int64Vector *)*((_QWORD *)v3 + 12);
      if (!v46)
      {
        v46 = (CoreML::Specification::Int64Vector *)operator new();
        CoreML::Specification::Int64Vector::Int64Vector(v46);
        *((_QWORD *)v3 + 12) = v46;
        v45 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 12);
      }
      if (v45)
        v47 = v45;
      else
        v47 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_Int64Vector_default_instance_;
      CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v46, v47);
    }
  }
}

void sub_1D3B5032C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>::Merge(const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *a1, uint64_t *a2)
{
  return CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergeFrom(a2, a1);
}

uint64_t *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::MergeFrom(uint64_t *this, const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *a2)
{
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *v2;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **v11;
  std::string **v12;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v13;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v14;
  std::string *v15;
  google::protobuf::Arena *v16;
  int v17;
  uint64_t v18;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **v19;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **v20;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v21;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;
  double v29;
  const CoreML::Specification::ItemSimilarityRecommender_SimilarItems *v30;
  uint64_t v31;

  v2 = a2;
  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)v2 + 6);
  if (v5)
  {
    v30 = v2;
    v31 = *((_QWORD *)v2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v6 = this;
    v7 = *(int *)v3[4];
    v8 = *((int *)v3 + 6);
    v9 = v7 - v8;
    if ((int)v7 - (int)v8 >= v5)
      v10 = v5;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v31 + 8);
      v12 = (std::string **)this;
      do
      {
        v14 = *v11++;
        v13 = v14;
        v15 = *v12++;
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v5)
    {
      v16 = (google::protobuf::Arena *)v3[2];
      v17 = v8 + v5 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)((char *)v6 + v18);
      v20 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v18 + v31 + 8);
      do
      {
        v21 = *v20;
        if (v16)
        {
          CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(Aligned);
          v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *v23 = Aligned;
          v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>;
          v24 = (unint64_t *)((char *)v16 + 32);
          do
            v25 = __ldxr(v24);
          while (__stxr((unint64_t)v23, v24));
          v23[2] = (google::protobuf::Arena *)v25;
        }
        else
        {
          Aligned = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *)operator new();
          CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::ItemSimilarityRecommender_ConnectedItem(Aligned);
        }
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    v26 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v26;
    v27 = (int *)v3[4];
    v2 = v30;
    if (*v27 < v26)
      *v27 = v26;
  }
  v28 = *((_QWORD *)v2 + 5);
  if (v28)
    v3[5] = v28;
  v29 = *((double *)v2 + 6);
  if (v29 != 0.0)
    *((double *)v3 + 6) = v29;
  return this;
}

void sub_1D3B5054C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *a1, std::string *this)
{
  return CoreML::Specification::ItemSimilarityRecommender_ConnectedItem::MergeFrom(this, a1);
}

CoreML::Specification::ItemSimilarityRecommender *CoreML::Specification::ItemSimilarityRecommender::ItemSimilarityRecommender(CoreML::Specification::ItemSimilarityRecommender *this)
{
  *(_QWORD *)this = &off_1E9561EE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::ItemSimilarityRecommender *)&CoreML::Specification::_ItemSimilarityRecommender_default_instance_)
    CoreML::Specification::protobuf_ItemSimilarityRecommender_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  return this;
}

void sub_1D3B505F8(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::ItemSimilarityRecommender_SimilarItems::~ItemSimilarityRecommender_SimilarItems(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems::~ItemSimilarityRecommender_SimilarItems(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E95646B0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.ItemSimilarityRecommender.SimilarItems");
}

CoreML::Specification::ItemSimilarityRecommender_SimilarItems *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(this, 0);
}

CoreML::Specification::ItemSimilarityRecommender_SimilarItems *CoreML::Specification::ItemSimilarityRecommender_SimilarItems::New(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems *v3;

  v3 = (CoreML::Specification::ItemSimilarityRecommender_SimilarItems *)operator new();
  CoreML::Specification::ItemSimilarityRecommender_SimilarItems::ItemSimilarityRecommender_SimilarItems(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(a2, v3);
  return v3;
}

void sub_1D3B508E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407C6D6C37);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    v2 = (uint64_t *)(*(_QWORD *)(this + 32) + 8);
    do
    {
      v3 = *v2++;
      *(_QWORD *)(v3 + 16) = 0;
      *(_QWORD *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::IsInitialized(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return 1;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  int i;
  double v9;

  v5 = this;
  v6 = *(_QWORD *)(this + 40);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  v7 = *(_DWORD *)(v5 + 24);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  v9 = *(double *)(v5 + 48);
  if (v9 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)3, a2, v9, a3);
  return this;
}

uint64_t CoreML::Specification::ItemSimilarityRecommender_SimilarItems::GetCachedSize(CoreML::Specification::ItemSimilarityRecommender_SimilarItems *this)
{
  return *((unsigned int *)this + 14);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::ItemSimilarityRecommender_SimilarItems>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::FeatureVectorizer_InputColumn::~FeatureVectorizer_InputColumn(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  *(_QWORD *)this = &off_1E95633B0;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((_QWORD *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E95633B0;
  google::protobuf::internal::MapTypeHandler<(google::protobuf::internal::WireFormatLite::FieldType)9,std::string>::DeleteNoArena(*((_QWORD *)this + 2));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::FeatureVectorizer_InputColumn::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureVectorizer.InputColumn");
}

CoreML::Specification::FeatureVectorizer_InputColumn *CoreML::Specification::FeatureVectorizer_InputColumn::New(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return CoreML::Specification::FeatureVectorizer_InputColumn::New(this, 0);
}

CoreML::Specification::FeatureVectorizer_InputColumn *CoreML::Specification::FeatureVectorizer_InputColumn::New(CoreML::Specification::FeatureVectorizer_InputColumn *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::FeatureVectorizer_InputColumn *v3;

  v3 = (CoreML::Specification::FeatureVectorizer_InputColumn *)operator new();
  CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer_InputColumn>(a2, v3);
  return v3;
}

void sub_1D3B50B6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::IsInitialized(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return 1;
}

BOOL CoreML::Specification::FeatureVectorizer_InputColumn::MergePartialFromCodedStream(CoreML::Specification::FeatureVectorizer_InputColumn *this, char **a2, unsigned int a3)
{
  std::string **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  std::string *v11;
  _BOOL8 result;
  unsigned int *v13;
  std::string::size_type size;
  char *v15;
  char v17;

  v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_23;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_23;
LABEL_8:
        if (v8 >> 3 != 2)
          break;
        if (v8 != 16)
          goto LABEL_23;
        v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          *((_QWORD *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v17 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 3) = *v15;
          *a2 = v15 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 10)
        break;
      v11 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v11 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v11);
      if (!result)
        return result;
      v13 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = *(unsigned int **)v13;
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn"))return 0;
    }
LABEL_23:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
  }
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::ByteSizeLong(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v5 = *((_QWORD *)this + 3);
  if (v5)
    v4 += ((9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6) + 1;
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::SerializeWithCachedSizes(CoreML::Specification::FeatureVectorizer_InputColumn *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result;
  uint64_t v7;
  unint64_t v8;

  result = *((_QWORD *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      goto LABEL_7;
    result = *(_QWORD *)result;
    goto LABEL_6;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn");
    result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((_QWORD *)this + 2), a2);
  }
LABEL_7:
  v8 = *((_QWORD *)this + 3);
  if (v8)
    return google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  return result;
}

uint64_t CoreML::Specification::FeatureVectorizer_InputColumn::GetCachedSize(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  return *((unsigned int *)this + 8);
}

CoreML::Specification::FeatureVectorizer_InputColumn *CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(CoreML::Specification::FeatureVectorizer_InputColumn *this)
{
  *(_QWORD *)this = &off_1E95633B0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FeatureVectorizer_InputColumn *)&CoreML::Specification::_FeatureVectorizer_InputColumn_default_instance_)
    CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B50EB8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer_InputColumn>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(CoreML::Specification::protobuf_FeatureVectorizer_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_FeatureVectorizer_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_FeatureVectorizer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_FeatureVectorizer_2eproto::TableStruct *this)
{
  double result;

  google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::_FeatureVectorizer_default_instance_ = (uint64_t)&off_1E955DBD0;
  result = 0.0;
  unk_1EDB90A78 = 0u;
  unk_1EDB90A88 = 0u;
  dword_1EDB90A98 = 0;
  byte_1EDB90AA0 = 1;
  return result;
}

void CoreML::Specification::FeatureVectorizer::~FeatureVectorizer(CoreML::Specification::FeatureVectorizer *this)
{
  CoreML::Specification::FeatureVectorizer::~FeatureVectorizer(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E955DBD0;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::FeatureVectorizer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.FeatureVectorizer");
}

CoreML::Specification::FeatureVectorizer *CoreML::Specification::FeatureVectorizer::New(CoreML::Specification::FeatureVectorizer *this)
{
  return CoreML::Specification::FeatureVectorizer::New(this, 0);
}

CoreML::Specification::FeatureVectorizer *CoreML::Specification::FeatureVectorizer::New(CoreML::Specification::FeatureVectorizer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::FeatureVectorizer *v3;

  v3 = (CoreML::Specification::FeatureVectorizer *)operator new();
  CoreML::Specification::FeatureVectorizer::FeatureVectorizer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer>(a2, v3);
  return v3;
}

void sub_1D3B51054(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FeatureVectorizer::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    v2 = *(_QWORD *)(this + 32) + 8;
    do
    {
      v3 = *(_QWORD *)v2;
      v4 = *(_QWORD *)(*(_QWORD *)v2 + 16);
      if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
      *(_QWORD *)(v3 + 24) = 0;
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(this + 24) = 0;
  }
  return this;
}

uint64_t CoreML::Specification::FeatureVectorizer::IsInitialized(CoreML::Specification::FeatureVectorizer *this)
{
  return 1;
}

BOOL CoreML::Specification::FeatureVectorizer::MergePartialFromCodedStream(CoreML::Specification::FeatureVectorizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  int *v12;
  int v13;
  int v14;
  CoreML::Specification::FeatureVectorizer_InputColumn *Aligned;
  google::protobuf::Arena *v16;
  google::protobuf::Arena **v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int VarintSizeAsIntFallback;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  _BOOL8 result;

  v5 = (CoreML::Specification::FeatureVectorizer *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if (v8 != 10 || (v8 & 0xFFFFFFF8) != 8)
        break;
      v12 = (int *)*((_QWORD *)this + 4);
      if (!v12)
      {
        v13 = *((_DWORD *)this + 6);
        v14 = *((_DWORD *)this + 7);
LABEL_23:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          v12 = (int *)*((_QWORD *)this + 4);
        }
        v14 = *v12;
        goto LABEL_26;
      }
      v13 = *((_DWORD *)this + 6);
      v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(CoreML::Specification::FeatureVectorizer_InputColumn **)&v12[2 * v13 + 2];
        goto LABEL_32;
      }
      if (v14 == *((_DWORD *)this + 7))
        goto LABEL_23;
LABEL_26:
      *v12 = v14 + 1;
      v16 = *(google::protobuf::Arena **)v5;
      if (*(_QWORD *)v5)
      {
        CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(Aligned);
        v17 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
        *v17 = Aligned;
        v17[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
        v18 = (unint64_t *)((char *)v16 + 32);
        do
          v19 = __ldxr(v18);
        while (__stxr((unint64_t)v17, v18));
        v17[2] = (google::protobuf::Arena *)v19;
      }
      else
      {
        Aligned = (CoreML::Specification::FeatureVectorizer_InputColumn *)operator new();
        CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(Aligned);
      }
      v20 = *((_QWORD *)this + 4);
      v21 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v21 + 1;
      *(_QWORD *)(v20 + 8 * v21 + 8) = Aligned;
LABEL_32:
      v22 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v22;
        *(_QWORD *)a2 = v22 + 1;
      }
      v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v26 = *((_DWORD *)a2 + 13);
      v27 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 == v27)
      {
        v28 = v24;
        result = CoreML::Specification::FeatureVectorizer_InputColumn::MergePartialFromCodedStream(Aligned, (char **)a2, v25);
        if (!result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
          continue;
      }
      return 0;
    }
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B51328(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FeatureVectorizer::ByteSizeLong(CoreML::Specification::FeatureVectorizer *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::FeatureVectorizer_InputColumn::ByteSizeLong(*(CoreML::Specification::FeatureVectorizer_InputColumn **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

uint64_t CoreML::Specification::FeatureVectorizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  int v4;
  uint64_t v6;
  int i;

  v4 = *(_DWORD *)(this + 24);
  if (v4)
  {
    v6 = this;
    for (i = 0; i != v4; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v6 + 32) + 8 * i + 8), a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::FeatureVectorizer::GetCachedSize(CoreML::Specification::FeatureVectorizer *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void CoreML::Specification::FeatureVectorizer::MergeFrom(CoreML::Specification::FeatureVectorizer *this, const CoreML::Specification::FeatureVectorizer *a2)
{
  uint64_t v4;
  int v5;
  unsigned int *v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  CoreML::Specification::MILSpec::Value_BlobFileValue **v12;
  CoreML::Specification::MILSpec::Value_BlobFileValue **v13;
  CoreML::Specification::MILSpec::Value_BlobFileValue *v14;
  CoreML::Specification::MILSpec::Value_BlobFileValue *v15;
  CoreML::Specification::MILSpec::Value_BlobFileValue *v16;
  google::protobuf::Arena *v17;
  int v18;
  uint64_t v19;
  CoreML::Specification::FeatureVectorizer_InputColumn **v20;
  CoreML::Specification::MILSpec::Value_BlobFileValue **v21;
  CoreML::Specification::MILSpec::Value_BlobFileValue *v22;
  CoreML::Specification::FeatureVectorizer_InputColumn *Aligned;
  google::protobuf::Arena **v24;
  unint64_t *v25;
  unint64_t v26;
  int v27;
  int *v28;
  uint64_t v29;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v29 = *((_QWORD *)a2 + 4);
    v6 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::FeatureVectorizer *)((char *)this + 16), v5);
    v7 = v6;
    v8 = **((int **)this + 4);
    v9 = *((int *)this + 6);
    v10 = v8 - v9;
    if ((int)v8 - (int)v9 >= v5)
      v11 = v5;
    else
      v11 = v10;
    if ((int)v11 >= 1)
    {
      v12 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)(v29 + 8);
      v13 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)v6;
      do
      {
        v15 = *v12++;
        v14 = v15;
        v16 = *v13++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v14, v16);
        --v11;
      }
      while (v11);
    }
    if (v10 < v5)
    {
      v17 = (google::protobuf::Arena *)*((_QWORD *)this + 2);
      v18 = v9 + v5 - v8;
      v19 = 8 * v8 - 8 * v9;
      v20 = (CoreML::Specification::FeatureVectorizer_InputColumn **)((char *)v7 + v19);
      v21 = (CoreML::Specification::MILSpec::Value_BlobFileValue **)(v19 + v29 + 8);
      do
      {
        v22 = *v21;
        if (v17)
        {
          CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(Aligned);
          v24 = google::protobuf::Arena::AllocateAligned(v17, 0, 24);
          *v24 = Aligned;
          v24[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::FeatureVectorizer_InputColumn>;
          v25 = (unint64_t *)((char *)v17 + 32);
          do
            v26 = __ldxr(v25);
          while (__stxr((unint64_t)v24, v25));
          v24[2] = (google::protobuf::Arena *)v26;
        }
        else
        {
          Aligned = (CoreML::Specification::FeatureVectorizer_InputColumn *)operator new();
          CoreML::Specification::FeatureVectorizer_InputColumn::FeatureVectorizer_InputColumn(Aligned);
        }
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(v22, Aligned);
        *v20++ = Aligned;
        ++v21;
        --v18;
      }
      while (v18);
    }
    v27 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v27;
    v28 = (int *)*((_QWORD *)this + 4);
    if (*v28 < v27)
      *v28 = v27;
  }
}

void sub_1D3B515DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4056DF9CA5);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CoreML::Specification::FeatureVectorizer_InputColumn>::Merge(CoreML::Specification::MILSpec::Value_BlobFileValue *a1, CoreML::Specification::MILSpec::Value_BlobFileValue *this)
{
  CoreML::Specification::MILSpec::Value_BlobFileValue::MergeFrom(this, a1);
}

CoreML::Specification::FeatureVectorizer *CoreML::Specification::FeatureVectorizer::FeatureVectorizer(CoreML::Specification::FeatureVectorizer *this)
{
  *(_QWORD *)this = &off_1E955DBD0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::FeatureVectorizer *)&CoreML::Specification::_FeatureVectorizer_default_instance_)
    CoreML::Specification::protobuf_FeatureVectorizer_2eproto::InitDefaults(this);
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B51670(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::FeatureVectorizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::FeatureVectorizer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::CoreMLModels::WordTagger::~WordTagger(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  CoreML::Specification::CoreMLModels::WordTagger::~WordTagger(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_QWORD *)this = &off_1E955A530;
  v2 = *((_QWORD *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1D8251A40](v4, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 4);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x1D8251A40](v6, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 5);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x1D8251A40](v7, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 6);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x1D8251A40](v8, 0x1012C40EC159624);
  }
  v9 = *((_QWORD *)this + 7);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    MEMORY[0x1D8251A40](v9, 0x1012C40EC159624);
  }
  v10 = *((_DWORD *)this + 21);
  if (v10)
  {
    if (v10 == 200)
    {
      v11 = *((_QWORD *)this + 9);
      if (v11)
        (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    }
    *((_DWORD *)this + 21) = 0;
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::CoreMLModels::WordTagger::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CoreMLModels.WordTagger");
}

CoreML::Specification::CoreMLModels::WordTagger *CoreML::Specification::CoreMLModels::WordTagger::New(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return CoreML::Specification::CoreMLModels::WordTagger::New(this, 0);
}

CoreML::Specification::CoreMLModels::WordTagger *CoreML::Specification::CoreMLModels::WordTagger::New(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::CoreMLModels::WordTagger *v3;

  v3 = (CoreML::Specification::CoreMLModels::WordTagger *)operator new();
  CoreML::Specification::CoreMLModels::WordTagger::WordTagger(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordTagger>(a2, v3);
  return v3;
}

void sub_1D3B517C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403AEF19A0);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  v2 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  v3 = *(_QWORD *)(this + 24);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
  v4 = *(_QWORD *)(this + 32);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v4 = 0;
      *(_BYTE *)(v4 + 23) = 0;
    }
  }
  v5 = *(_QWORD *)(this + 40);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
    }
  }
  v6 = *(_QWORD *)(this + 48);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
    }
  }
  v7 = *(_QWORD *)(this + 56);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0)
    {
      **(_BYTE **)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v7 = 0;
      *(_BYTE *)(v7 + 23) = 0;
    }
  }
  *(_DWORD *)(this + 64) = 0;
  if (*(_DWORD *)(this + 84) == 200)
  {
    this = *(_QWORD *)(this + 72);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::IsInitialized(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return 1;
}

BOOL CoreML::Specification::CoreMLModels::WordTagger::MergePartialFromCodedStream(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  CoreML::Specification::CoreMLModels::WordTagger *v4;
  std::string **v5;
  std::string **v6;
  std::string **v7;
  std::string **v8;
  std::string **v9;
  std::string **v10;
  uint64_t *v11;
  unsigned __int8 *v12;
  unint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  BOOL v18;
  unsigned int TagFallback;
  unsigned int v20;
  std::string *v21;
  _BOOL8 result;
  std::string *v23;
  std::string::size_type size;
  std::string *v25;
  CoreML::Specification::StringVector *v26;
  std::string *v27;
  std::string *v28;
  std::string *v29;
  char *v30;
  int v31;
  std::string *v32;
  char *v33;
  int VarintSizeAsIntFallback;
  uint64_t *v35;
  std::string **v36;
  std::string **v37;
  std::string **v38;
  std::string **v39;
  std::string **v40;
  std::string **v41;
  int v42;
  unsigned int v43;
  int v44;
  BOOL v45;
  int v46;
  BOOL v47;
  const char *v48;
  uint64_t Varint32Fallback;

  v4 = this;
  v5 = (std::string **)((char *)this + 56);
  v6 = (std::string **)((char *)this + 48);
  v7 = (std::string **)((char *)this + 40);
  v8 = (std::string **)((char *)this + 32);
  v9 = (std::string **)((char *)this + 24);
  v10 = (std::string **)((char *)this + 16);
  v11 = &google::protobuf::internal::fixed_address_empty_string;
  while (1)
  {
LABEL_2:
    v12 = *(unsigned __int8 **)a2;
    v13 = *((_QWORD *)a2 + 1);
    if (*(_QWORD *)a2 >= v13)
    {
      LODWORD(v15) = 0;
    }
    else
    {
      v14 = v12 + 1;
      v15 = *v12;
      if ((char)*v12 >= 1)
      {
        *(_QWORD *)a2 = v14;
        v16 = v15 | 0x100000000;
        if ((v16 & 0x100000000) == 0)
          goto LABEL_9;
        goto LABEL_17;
      }
      if ((unint64_t)v14 < v13)
      {
        v17 = *v14;
        if ((v15 & ~v17) >= 0x80)
        {
          *(_QWORD *)a2 = v12 + 2;
          v16 = (v15 + (v17 << 7) - 128) | 0x100000000;
          goto LABEL_17;
        }
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v15);
    v16 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v16 & 0x100000000) == 0)
      goto LABEL_9;
LABEL_17:
    v20 = v16 >> 3;
    if (v16 >> 3 > 0x13)
      break;
    if (v20 == 1)
    {
      if (v16 == 8)
      {
        v30 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v31 = 0;
          goto LABEL_87;
        }
        v31 = *v30;
        if (*v30 < 0)
        {
LABEL_87:
          Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
          *((_DWORD *)v4 + 16) = Varint32Fallback;
          if (Varint32Fallback < 0)
            return 0;
        }
        else
        {
          *((_DWORD *)v4 + 16) = v31;
          *(_QWORD *)a2 = v30 + 1;
        }
      }
      else
      {
LABEL_9:
        if ((_DWORD)v16)
          v18 = (v16 & 7) == 4;
        else
          v18 = 1;
        if (v18)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v16, a3) & 1) == 0)return 0;
      }
    }
    else
    {
      if (v20 != 10 || v16 != 82)
        goto LABEL_9;
      v25 = *v10;
      if (*v10 == (std::string *)v11)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)v11);
        v25 = *v10;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v25);
      if (!result)
        return result;
      v23 = *v10;
      if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
      {
        v23 = (std::string *)v23->__r_.__value_.__r.__words[0];
        size = (*v10)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
      }
      v48 = "CoreML.Specification.CoreMLModels.WordTagger.language";
LABEL_84:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v23, size, 0, (uint64_t)v48))
        return 0;
    }
  }
  switch(v20)
  {
    case 0x14u:
      if (v16 != 162)
        goto LABEL_9;
      v21 = *v9;
      if (*v9 == (std::string *)v11)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v9, (uint64_t)v11);
        v21 = *v9;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v21);
      if (result)
      {
        v23 = *v9;
        if (SHIBYTE((*v9)->__r_.__value_.__r.__words[2]) < 0)
        {
          v23 = (std::string *)v23->__r_.__value_.__r.__words[0];
          size = (*v9)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v9)->__r_.__value_.__r.__words[2]);
        }
        v48 = "CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName";
        goto LABEL_84;
      }
      break;
    case 0x15u:
      if (v16 != 170)
        goto LABEL_9;
      v27 = *v8;
      if (*v8 == (std::string *)v11)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)v11);
        v27 = *v8;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v27);
      if (result)
      {
        v23 = *v8;
        if (SHIBYTE((*v8)->__r_.__value_.__r.__words[2]) < 0)
        {
          v23 = (std::string *)v23->__r_.__value_.__r.__words[0];
          size = (*v8)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v8)->__r_.__value_.__r.__words[2]);
        }
        v48 = "CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName";
        goto LABEL_84;
      }
      break;
    case 0x16u:
      if (v16 != 178)
        goto LABEL_9;
      v28 = *v7;
      if (*v7 == (std::string *)v11)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)v11);
        v28 = *v7;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v28);
      if (result)
      {
        v23 = *v7;
        if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
        {
          v23 = (std::string *)v23->__r_.__value_.__r.__words[0];
          size = (*v7)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
        }
        v48 = "CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName";
        goto LABEL_84;
      }
      break;
    case 0x17u:
      if (v16 != 186)
        goto LABEL_9;
      v29 = *v6;
      if (*v6 == (std::string *)v11)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)v11);
        v29 = *v6;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v29);
      if (result)
      {
        v23 = *v6;
        if (SHIBYTE((*v6)->__r_.__value_.__r.__words[2]) < 0)
        {
          v23 = (std::string *)v23->__r_.__value_.__r.__words[0];
          size = (*v6)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v6)->__r_.__value_.__r.__words[2]);
        }
        v48 = "CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName";
        goto LABEL_84;
      }
      break;
    default:
      if (v20 == 100)
      {
        if (v16 != 34)
          goto LABEL_9;
        v32 = *v5;
        if (*v5 == (std::string *)v11)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)v11);
          v32 = *v5;
        }
        if (google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v32))
          goto LABEL_2;
        return 0;
      }
      if (v20 != 200 || v16 != 66)
        goto LABEL_9;
      if (*((_DWORD *)v4 + 21) == 200)
      {
        v26 = (CoreML::Specification::StringVector *)*((_QWORD *)v4 + 9);
      }
      else
      {
        *((_DWORD *)v4 + 21) = 200;
        v26 = (CoreML::Specification::StringVector *)operator new();
        CoreML::Specification::StringVector::StringVector(v26);
        *((_QWORD *)v4 + 9) = v26;
      }
      v33 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v33 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v33;
        *(_QWORD *)a2 = v33 + 1;
      }
      v35 = v11;
      v36 = v10;
      v37 = v9;
      v38 = v8;
      v39 = v7;
      v40 = v6;
      v41 = v5;
      v42 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v44 = *((_DWORD *)a2 + 13);
      v45 = __OFSUB__(v44--, 1);
      *((_DWORD *)a2 + 13) = v44;
      if (v44 < 0 != v45)
        return 0;
      v46 = v42;
      result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v26, (char **)a2, v43);
      if (result)
      {
        v47 = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v46);
        v5 = v41;
        v6 = v40;
        v7 = v39;
        v8 = v38;
        v9 = v37;
        v10 = v36;
        v11 = v35;
        v4 = this;
        if (v47)
          goto LABEL_2;
        return 0;
      }
      break;
  }
  return result;
}

void sub_1D3B51E0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::ByteSizeLong(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v2 = *((_QWORD *)this + 2);
  v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(_QWORD *)(v2 + 8))
      goto LABEL_3;
LABEL_7:
    v5 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v2 + 23))
    goto LABEL_7;
LABEL_3:
  v4 = *(_QWORD *)(v2 + 8);
  if ((v3 & 0x80u) == 0)
    v4 = v3;
  v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v6 = *((_QWORD *)this + 3);
  v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v6 + 23))
  {
    goto LABEL_13;
  }
  v8 = *(_QWORD *)(v6 + 8);
  if ((v7 & 0x80u) == 0)
    v8 = v7;
  v5 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  v9 = *((_QWORD *)this + 4);
  v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_18;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_18;
  }
  v11 = *(_QWORD *)(v9 + 8);
  if ((v10 & 0x80u) == 0)
    v11 = v10;
  v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_18:
  v12 = *((_QWORD *)this + 5);
  v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(_QWORD *)(v12 + 8))
      goto LABEL_23;
  }
  else if (!*(_BYTE *)(v12 + 23))
  {
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v14 = v13;
  v5 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  v15 = *((_QWORD *)this + 6);
  v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_28;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_28;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if ((v16 & 0x80u) == 0)
    v17 = v16;
  v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_28:
  v18 = *((_QWORD *)this + 7);
  v19 = *(unsigned __int8 *)(v18 + 23);
  if (*(char *)(v18 + 23) < 0)
  {
    if (!*(_QWORD *)(v18 + 8))
      goto LABEL_33;
  }
  else if (!*(_BYTE *)(v18 + 23))
  {
    goto LABEL_33;
  }
  v20 = *(_QWORD *)(v18 + 8);
  if ((v19 & 0x80u) == 0)
    v20 = v19;
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_33:
  v21 = *((_DWORD *)this + 16);
  if (v21)
    v5 += ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (*((_DWORD *)this + 21) == 200)
  {
    v22 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 9));
    v5 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 20) = v5;
  return v5;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::SerializeWithCachedSizes(CoreML::Specification::CoreMLModels::WordTagger *this, google::protobuf::io::CodedOutputStream *a2, unsigned int a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;

  v6 = *((unsigned int *)this + 16);
  if ((_DWORD)v6)
    google::protobuf::internal::WireFormatLite::WriteUInt32(v6, a2, a3, a4);
  v7 = (unsigned int *)*((_QWORD *)this + 2);
  if (*((char *)v7 + 23) < 0)
  {
    v8 = *((_QWORD *)v7 + 1);
    if (!v8)
      goto LABEL_9;
    v7 = *(unsigned int **)v7;
    goto LABEL_8;
  }
  LODWORD(v8) = *((unsigned __int8 *)v7 + 23);
  if (*((_BYTE *)v7 + 23))
  {
LABEL_8:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.language");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0xAu, *((_QWORD *)this + 2), a2);
  }
LABEL_9:
  v9 = (unsigned int *)*((_QWORD *)this + 3);
  if (*((char *)v9 + 23) < 0)
  {
    v10 = *((_QWORD *)v9 + 1);
    if (!v10)
      goto LABEL_15;
    v9 = *(unsigned int **)v9;
    goto LABEL_14;
  }
  LODWORD(v10) = *((unsigned __int8 *)v9 + 23);
  if (*((_BYTE *)v9 + 23))
  {
LABEL_14:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v9, v10, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x14u, *((_QWORD *)this + 3), a2);
  }
LABEL_15:
  v11 = (unsigned int *)*((_QWORD *)this + 4);
  if (*((char *)v11 + 23) < 0)
  {
    v12 = *((_QWORD *)v11 + 1);
    if (!v12)
      goto LABEL_21;
    v11 = *(unsigned int **)v11;
    goto LABEL_20;
  }
  LODWORD(v12) = *((unsigned __int8 *)v11 + 23);
  if (*((_BYTE *)v11 + 23))
  {
LABEL_20:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v12, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x15u, *((_QWORD *)this + 4), a2);
  }
LABEL_21:
  v13 = (unsigned int *)*((_QWORD *)this + 5);
  if (*((char *)v13 + 23) < 0)
  {
    v14 = *((_QWORD *)v13 + 1);
    if (!v14)
      goto LABEL_27;
    v13 = *(unsigned int **)v13;
    goto LABEL_26;
  }
  LODWORD(v14) = *((unsigned __int8 *)v13 + 23);
  if (*((_BYTE *)v13 + 23))
  {
LABEL_26:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, v14, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x16u, *((_QWORD *)this + 5), a2);
  }
LABEL_27:
  result = *((_QWORD *)this + 6);
  if (*(char *)(result + 23) < 0)
  {
    v16 = *(_QWORD *)(result + 8);
    if (!v16)
      goto LABEL_33;
    result = *(_QWORD *)result;
    goto LABEL_32;
  }
  LODWORD(v16) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_32:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v16, 1, (uint64_t)"CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName");
    result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(0x17u, *((_QWORD *)this + 6), a2);
  }
LABEL_33:
  v17 = *((_QWORD *)this + 7);
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(v17 + 23))
      goto LABEL_36;
    goto LABEL_35;
  }
  if (*(_QWORD *)(v17 + 8))
LABEL_35:
    result = google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(0x64u, v17, a2);
LABEL_36:
  if (*((_DWORD *)this + 21) == 200)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xC8, *((_QWORD *)this + 9), a2, a4);
  return result;
}

uint64_t CoreML::Specification::CoreMLModels::WordTagger::GetCachedSize(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  return *((unsigned int *)this + 20);
}

void CoreML::Specification::CoreMLModels::WordTagger::MergeFrom(CoreML::Specification::CoreMLModels::WordTagger *this, const CoreML::Specification::CoreMLModels::WordTagger *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  int v17;
  CoreML::Specification::StringVector *v18;
  CoreML::Specification::StringVector *v19;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v20;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_11;
  }
  v6 = (uint64_t *)*((_QWORD *)this + 2);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v5);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v5);
  }
LABEL_11:
  v7 = *((_QWORD *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
  {
    if (!*(_QWORD *)(v7 + 8))
      goto LABEL_19;
  }
  else if (!*(_BYTE *)(v7 + 23))
  {
    goto LABEL_19;
  }
  v8 = (uint64_t *)*((_QWORD *)this + 3);
  if (v8 != (uint64_t *)v7)
  {
    if (v8 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, v7);
    else
      std::string::operator=(*((std::string **)this + 3), (const std::string *)v7);
  }
LABEL_19:
  v9 = *((_QWORD *)a2 + 4);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_27;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_27;
  }
  v10 = (uint64_t *)*((_QWORD *)this + 4);
  if (v10 != (uint64_t *)v9)
  {
    if (v10 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, v9);
    else
      std::string::operator=(*((std::string **)this + 4), (const std::string *)v9);
  }
LABEL_27:
  v11 = *((_QWORD *)a2 + 5);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(_QWORD *)(v11 + 8))
      goto LABEL_35;
  }
  else if (!*(_BYTE *)(v11 + 23))
  {
    goto LABEL_35;
  }
  v12 = (uint64_t *)*((_QWORD *)this + 5);
  if (v12 != (uint64_t *)v11)
  {
    if (v12 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, v11);
    else
      std::string::operator=(*((std::string **)this + 5), (const std::string *)v11);
  }
LABEL_35:
  v13 = *((_QWORD *)a2 + 6);
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(_QWORD *)(v13 + 8))
      goto LABEL_43;
  }
  else if (!*(_BYTE *)(v13 + 23))
  {
    goto LABEL_43;
  }
  v14 = (uint64_t *)*((_QWORD *)this + 6);
  if (v14 != (uint64_t *)v13)
  {
    if (v14 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, v13);
    else
      std::string::operator=(*((std::string **)this + 6), (const std::string *)v13);
  }
LABEL_43:
  v15 = *((_QWORD *)a2 + 7);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_51;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_51;
  }
  v16 = (uint64_t *)*((_QWORD *)this + 7);
  if (v16 != (uint64_t *)v15)
  {
    if (v16 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 7, v15);
    else
      std::string::operator=(*((std::string **)this + 7), (const std::string *)v15);
  }
LABEL_51:
  v17 = *((_DWORD *)a2 + 16);
  if (v17)
    *((_DWORD *)this + 16) = v17;
  if (*((_DWORD *)a2 + 21) == 200)
  {
    if (*((_DWORD *)this + 21) == 200)
    {
      v18 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 9);
    }
    else
    {
      *((_DWORD *)this + 21) = 200;
      v18 = (CoreML::Specification::StringVector *)operator new();
      v19 = CoreML::Specification::StringVector::StringVector(v18);
      *((_QWORD *)this + 9) = v18;
      if (*((_DWORD *)a2 + 21) != 200)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v19);
        v20 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::_StringVector_default_instance_;
        goto LABEL_60;
      }
    }
    v20 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 9);
LABEL_60:
    CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v18, v20);
  }
}

void sub_1D3B52548(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::CoreMLModels::WordTagger *CoreML::Specification::CoreMLModels::WordTagger::WordTagger(CoreML::Specification::CoreMLModels::WordTagger *this)
{
  *(_QWORD *)this = &off_1E955A530;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CoreMLModels::WordTagger *)&CoreML::Specification::CoreMLModels::_WordTagger_default_instance_)
    CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B525D0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CoreMLModels::WordTagger>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordTagger>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CoreMLModels::WordTagger>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::CoreMLModels::protobuf_WordTagger_2eproto::TableStruct *this)
{
  unint64_t *inited;
  unint64_t *result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::CoreMLModels::_WordTagger_default_instance_ = (uint64_t)&off_1E955A530;
  *(_QWORD *)algn_1EDB8F168 = 0;
  qword_1EDB8F170 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB8F178 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB8F180 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB8F188 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB8F190 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB8F198 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB8F1A0 = 0;
  qword_1EDB8F1B0 = 0;
  byte_1EDB8F1B8 = 1;
  return result;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::~TreeEnsembleParameters_TreeNode_EvaluationInfo(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  *(_QWORD *)this = &off_1E95649A8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(_QWORD *)this = &off_1E95649A8;
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo");
}

CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(this, 0);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::New(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *v3;

  v3 = (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)operator new();
  CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(a2, v3);
  return v3;
}

void sub_1D3B52980(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::Clear(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::IsInitialized(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return 1;
}

BOOL CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t *v11;
  unint64_t v12;
  BOOL v13;
  char v14;
  _BOOL8 result;
  unint64_t v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 17)
          goto LABEL_20;
        v16 = 0;
        v11 = (unint64_t *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 8)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v16);
          if (!result)
            return result;
          v12 = v16;
        }
        else
        {
          v12 = *v11;
          *a2 = (char *)(v11 + 1);
        }
        *((_QWORD *)this + 3) = v12;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v14 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 2) = *v10;
        *a2 = v10 + 1;
      }
    }
LABEL_20:
    if ((_DWORD)v7)
      v13 = (v7 & 7) == 4;
    else
      v13 = 1;
    if (v13)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

unint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((double *)this + 3) != 0.0)
    v3 += 9;
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  unint64_t v6;
  double v7;

  v5 = this;
  v6 = *(_QWORD *)(this + 16);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  v7 = *(double *)(v5 + 24);
  if (v7 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)2, a2, v7, a3);
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::GetCachedSize(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  return *((unsigned int *)this + 8);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *this)
{
  *(_QWORD *)this = &off_1E95649A8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)&CoreML::Specification::_TreeEnsembleParameters_TreeNode_EvaluationInfo_default_instance_)
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B52BF0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(CoreML::Specification::protobuf_TreeEnsemble_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_TreeEnsemble_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

double CoreML::Specification::protobuf_TreeEnsemble_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_TreeEnsemble_2eproto::TableStruct *this)
{
  unint64_t *inited;
  double result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_TreeEnsembleParameters_default_instance_ = (uint64_t)&off_1E9561010;
  result = 0.0;
  unk_1EDB92250 = 0u;
  unk_1EDB92260 = 0u;
  unk_1EDB92270 = 0u;
  qword_1EDB92288 = 0;
  dword_1EDB92290 = 0;
  byte_1EDB92298 = 1;
  qword_1EDB92228 = 0;
  CoreML::Specification::_TreeEnsembleClassifier_default_instance_ = (uint64_t)&off_1E9560F78;
  *(_QWORD *)algn_1EDB92208 = 0;
  dword_1EDB92218 = 0;
  byte_1EDB92230 = 1;
  CoreML::Specification::_TreeEnsembleRegressor_default_instance_ = (uint64_t)&off_1E95605F8;
  *(_QWORD *)algn_1EDB91DF8 = 0;
  byte_1EDB91E10 = 1;
  qword_1EDB92210 = (uint64_t)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
  qword_1EDB91E00 = (uint64_t)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
  unk_1EDB91E08 = 0;
  return result;
}

void CoreML::Specification::TreeEnsembleRegressor::~TreeEnsembleRegressor(CoreML::Specification::TreeEnsembleRegressor *this)
{
  CoreML::Specification::TreeEnsembleRegressor::~TreeEnsembleRegressor(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E95605F8;
  if (this != (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::TreeEnsembleRegressor::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleRegressor");
}

CoreML::Specification::TreeEnsembleRegressor *CoreML::Specification::TreeEnsembleRegressor::New(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return CoreML::Specification::TreeEnsembleRegressor::New(this, 0);
}

CoreML::Specification::TreeEnsembleRegressor *CoreML::Specification::TreeEnsembleRegressor::New(CoreML::Specification::TreeEnsembleRegressor *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::TreeEnsembleRegressor *v3;

  v3 = (CoreML::Specification::TreeEnsembleRegressor *)operator new();
  CoreML::Specification::TreeEnsembleRegressor::TreeEnsembleRegressor(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleRegressor>(a2, v3);
  return v3;
}

void sub_1D3B52DD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::Clear(CoreML::Specification::TreeEnsembleRegressor *this)
{
  uint64_t result;

  result = *((_QWORD *)this + 2);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::IsInitialized(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return 1;
}

BOOL CoreML::Specification::TreeEnsembleRegressor::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::TreeEnsembleParameters *v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BOOL8 result;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) != 0)
          goto LABEL_7;
LABEL_22:
        if ((_DWORD)v7)
          v15 = (v7 & 7) == 4;
        else
          v15 = 1;
        if (v15)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        goto LABEL_22;
LABEL_7:
      if (v7 >> 3 != 2)
        break;
      if (v7 != 16)
        goto LABEL_22;
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v14 = 0;
      }
      else
      {
        v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(_QWORD *)a2 = v13 + 1;
          goto LABEL_35;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      v14 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_35:
      *((_DWORD *)this + 6) = v14;
    }
    if (v7 >> 3 != 1 || v7 != 10)
      goto LABEL_22;
    v10 = (CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)this + 2);
    if (!v10)
    {
      v10 = (CoreML::Specification::TreeEnsembleParameters *)operator new();
      CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(v10);
      *((_QWORD *)this + 2) = v10;
    }
    v11 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
    {
      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (VarintSizeAsIntFallback < 0)
        return 0;
    }
    else
    {
      VarintSizeAsIntFallback = *v11;
      *(_QWORD *)a2 = v11 + 1;
    }
    v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
    v18 = *((_DWORD *)a2 + 13);
    v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 13) = v18;
    if (v18 < 0 != v19)
      break;
    v20 = v16;
    result = CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(v10, a2, v17);
    if (!result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1D3B52FF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleRegressor::ByteSizeLong(CoreML::Specification::TreeEnsembleRegressor *this)
{
  CoreML::Specification::TreeEnsembleParameters *result;
  uint64_t v3;
  int v4;
  uint64_t v5;

  if (this == (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    result = 0;
  }
  else
  {
    result = (CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)this + 2);
    if (result)
    {
      v3 = CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(result);
      result = (CoreML::Specification::TreeEnsembleParameters *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0)
      v5 = 11;
    else
      v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    result = (CoreML::Specification::TreeEnsembleParameters *)((char *)result + v5);
  }
  *((_DWORD *)this + 7) = (_DWORD)result;
  return result;
}

uint64_t *CoreML::Specification::TreeEnsembleRegressor::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t *v5;
  uint64_t v6;
  signed int v7;

  v5 = this;
  if (this != &CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
  {
    v6 = this[2];
    if (v6)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  v7 = *((_DWORD *)v5 + 6);
  if (v7)
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteEnum(2, v7, a2, a4);
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleRegressor::GetCachedSize(CoreML::Specification::TreeEnsembleRegressor *this)
{
  return *((unsigned int *)this + 7);
}

uint64_t CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::TreeEnsembleParameters_TreeNode::ByteSizeLong(*(CoreML::Specification::TreeEnsembleParameters_TreeNode **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((unsigned int *)this + 10);
  v7 = 8 * v6;
  if ((_DWORD)v6)
  {
    v8 = 11;
    v9 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v7 >= 0)
      v8 = v9;
    v4 += v8;
  }
  *((_DWORD *)this + 14) = v7;
  v10 = v4 + v7;
  v11 = *((_QWORD *)this + 8);
  v12 = v10 + ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6);
  if (v11)
    result = v12 + 1;
  else
    result = v10;
  *((_DWORD *)this + 18) = result;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::ByteSizeLong(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v1 = *((unsigned int *)this + 6);
  v2 = 2 * v1;
  if ((_DWORD)v1)
  {
    v3 = 0;
    v4 = *((_QWORD *)this + 4);
    do
    {
      v5 = *(_QWORD *)(v4 + 8 * v3 + 8);
      v6 = *(_QWORD *)(v5 + 16);
      v7 = (9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6;
      if (v6)
        v8 = v7 + 1;
      else
        v8 = 0;
      if (*(double *)(v5 + 24) != 0.0)
        v8 += 9;
      *(_DWORD *)(v5 + 32) = v8;
      v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while ((_DWORD)v1 != v3);
  }
  v9 = *((_QWORD *)this + 5);
  v10 = v2 + ((9 * (__clz(v9 | 1) ^ 0x3F) + 73) >> 6);
  if (v9)
    v2 = v10 + 1;
  v11 = *((_QWORD *)this + 6);
  v12 = v2 + ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6);
  if (v11)
    v2 = v12 + 1;
  v13 = *((_DWORD *)this + 14);
  v14 = 11;
  v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0)
    v14 = v15;
  v16 = v14 + v2;
  if (v13)
    v2 = v16;
  if (*((_BYTE *)this + 60))
    v2 += 2;
  v17 = *((_QWORD *)this + 8);
  v18 = v2 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17)
    v2 = v18 + 1;
  if (*((double *)this + 9) != 0.0)
    v2 += 9;
  v19 = *((_QWORD *)this + 10);
  v20 = *((_QWORD *)this + 11);
  v21 = v2 + ((9 * (__clz(v19 | 1) ^ 0x3F) + 73) >> 6);
  if (v19)
    v2 = v21 + 1;
  v22 = v2 + ((9 * (__clz(v20 | 1) ^ 0x3F) + 73) >> 6);
  if (v20)
    v2 = v22 + 1;
  if (*((double *)this + 12) != 0.0)
    v2 += 10;
  *((_DWORD *)this + 26) = v2;
  return v2;
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(CoreML::Specification::TreeEnsembleParameters *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E9561010;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  if (this != (CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_)
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  return this;
}

void sub_1D3B53400(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  v5 = *(_QWORD **)(v2 + 48);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  google::protobuf::internal::RepeatedPtrFieldBase *v6;
  const std::type_info *v7;
  google::protobuf::Arena *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int TagFallback;
  unsigned int v13;
  int *v15;
  int v16;
  int v17;
  CoreML::Specification::TreeEnsembleParameters_TreeNode *Aligned;
  char *v19;
  unsigned int v20;
  char *v21;
  BOOL v22;
  char v23;
  google::protobuf::Arena *v24;
  google::protobuf::Arena **v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int VarintSizeAsIntFallback;
  int v32;
  unsigned int v33;
  int v34;
  BOOL v35;
  int v36;
  _BOOL8 result;
  int v38;
  int v39;
  int v40;
  int v41;
  signed int v42;
  unsigned int v43;
  int v44;
  int v45;
  int v46;
  unint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  const std::type_info *v50;
  google::protobuf::Arena *v51;
  signed int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v5 = (unsigned int *)((char *)this + 40);
  v6 = (CoreML::Specification::TreeEnsembleParameters *)((char *)this + 16);
  v8 = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            v9 = *(char **)a2;
            if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
              break;
            LODWORD(v10) = 0;
LABEL_7:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
            v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v11 & 0x100000000) != 0)
              goto LABEL_8;
LABEL_27:
            if ((_DWORD)v11)
              v22 = (v11 & 7) == 4;
            else
              v22 = 1;
            if (v22)
              return 1;
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)return 0;
          }
          v10 = *v9;
          if (*v9 < 1)
            goto LABEL_7;
          *(_QWORD *)a2 = v9 + 1;
          v11 = v10 | 0x100000000;
          if ((v11 & 0x100000000) == 0)
            goto LABEL_27;
LABEL_8:
          v13 = v11 >> 3;
          if (v11 >> 3 == 3)
            break;
          if (v13 == 2)
          {
            if (v11 != 16)
              goto LABEL_27;
            v21 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
            {
              *((_QWORD *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v23 & 1) == 0)
                return 0;
            }
            else
            {
              *((_QWORD *)this + 8) = *v21;
              *(_QWORD *)a2 = v21 + 1;
            }
          }
          else
          {
            if (v13 != 1 || v11 != 10)
              goto LABEL_27;
            v15 = (int *)*((_QWORD *)this + 4);
            if (!v15)
            {
              v16 = *((_DWORD *)this + 6);
              v17 = *((_DWORD *)this + 7);
              goto LABEL_39;
            }
            v16 = *((_DWORD *)this + 6);
            v17 = *v15;
            if (v16 >= *v15)
            {
              if (v17 == *((_DWORD *)this + 7))
              {
LABEL_39:
                if (v16 <= v17)
                {
                  google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v6, v17 - v16 + 1);
                  v15 = (int *)*((_QWORD *)this + 4);
                }
                v17 = *v15;
              }
              *v15 = v17 + 1;
              v24 = *(google::protobuf::Arena **)v6;
              if (*(_QWORD *)v6)
              {
                Aligned = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)v6, v7, 112);
                CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(Aligned);
                v25 = google::protobuf::Arena::AllocateAligned(v24, 0, 24);
                *v25 = Aligned;
                v25[1] = v8;
                v26 = (unint64_t *)((char *)v24 + 32);
                do
                  v27 = __ldxr(v26);
                while (__stxr((unint64_t)v25, v26));
                v25[2] = (google::protobuf::Arena *)v27;
              }
              else
              {
                Aligned = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)operator new();
                CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(Aligned);
              }
              v28 = *((_QWORD *)this + 4);
              v29 = *((int *)this + 6);
              *((_DWORD *)this + 6) = v29 + 1;
              *(_QWORD *)(v28 + 8 * v29 + 8) = Aligned;
              goto LABEL_48;
            }
            *((_DWORD *)this + 6) = v16 + 1;
            Aligned = *(CoreML::Specification::TreeEnsembleParameters_TreeNode **)&v15[2 * v16 + 2];
LABEL_48:
            v30 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v30 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v30;
              *(_QWORD *)a2 = v30 + 1;
            }
            v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            v34 = *((_DWORD *)a2 + 13);
            v35 = __OFSUB__(v34--, 1);
            *((_DWORD *)a2 + 13) = v34;
            if (v34 < 0 != v35)
              return 0;
            v36 = v32;
            result = CoreML::Specification::TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream(Aligned, a2, v33);
            if (!result)
              return result;
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v36))
              return 0;
          }
        }
        if (v11 != 25)
          break;
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<double,(google::protobuf::internal::WireFormatLite::FieldType)1>(26, (unint64_t **)a2, (uint64_t)v5))return 0;
      }
      if (v11 != 26)
        goto LABEL_27;
      v19 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
      {
        v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v20 & 0x80000000) != 0)
          return 0;
      }
      else
      {
        v20 = *v19;
        *(_QWORD *)a2 = v19 + 1;
      }
      if ((v20 & 7) != 0)
        return 0;
      v38 = *((_DWORD *)a2 + 12);
      v39 = v38 == 0x7FFFFFFF
          ? -1
          : v38 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v40 = *((_DWORD *)a2 + 10);
      v41 = v40 == 0x7FFFFFFF
          ? -1
          : v40 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v42 = *v5;
      v43 = v20 >> 3;
      v44 = v41 >= v39 ? v39 : v41;
      v45 = v39 == -1 ? v41 : v44;
      if (v45 >= (uint64_t)v20)
        break;
      if (v20 >= 8)
      {
        if (v43 <= 1)
          v46 = 1;
        else
          v46 = v20 >> 3;
        do
        {
          v56 = 0;
          v47 = *(unint64_t **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v56);
            if (!result)
              return result;
            v48 = v56;
            v42 = *v5;
          }
          else
          {
            v48 = *v47;
            *(_QWORD *)a2 = v47 + 1;
          }
          if (v42 == *((_DWORD *)this + 11))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v42 + 1);
            v42 = *v5;
          }
          v49 = *((_QWORD *)this + 6) + 8 * v42;
          *((_DWORD *)this + 10) = v42 + 1;
          *(_QWORD *)(v49 + 8) = v48;
          ++v42;
          --v46;
        }
        while (v46);
      }
    }
    v50 = v7;
    v51 = v8;
    v52 = v42 + v43;
    if (v20 > 7)
    {
      google::protobuf::RepeatedField<double>::Reserve(v5, v42 + v43);
      v53 = *((_QWORD *)this + 6);
      v54 = 8 * v52 - 8 * *((int *)this + 10);
      if (v54 >= 1)
        bzero((void *)(v53 + 8 + 8 * *((int *)this + 10)), 8 * (((unint64_t)v54 >> 3) - ((unint64_t)v54 > 7)) + 8);
    }
    else
    {
      v53 = *((_QWORD *)this + 6);
    }
    *v5 = v52;
    v55 = v53 + 8;
    if (!v53)
      v55 = 0;
    v8 = v51;
    v7 = v50;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v55 + 8 * v42), v20));
  if ((int)*v5 >= 1)
  {
    result = 0;
    *v5 = v42;
    return result;
  }
  return 0;
}

void sub_1D3B53920(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::TreeEnsembleParameters_TreeNode::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleParameters_TreeNode *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::internal::RepeatedPtrFieldBase *v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  BOOL v12;
  unsigned int TagFallback;
  char *v14;
  unint64_t *v15;
  unint64_t v16;
  char *v17;
  int v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  unint64_t Varint64Fallback;
  int *v23;
  int v24;
  int v25;
  CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *Aligned;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  google::protobuf::Arena *v33;
  google::protobuf::Arena **v34;
  unint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int VarintSizeAsIntFallback;
  int v41;
  unsigned int v42;
  int v43;
  BOOL v44;
  int v45;
  _BOOL8 result;
  uint64_t Varint32Fallback;
  unint64_t v48;

  v5 = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v6 = *(unsigned __int8 **)a2;
    v7 = *((_QWORD *)a2 + 1);
    if (*(_QWORD *)a2 >= v7)
    {
      LODWORD(v9) = 0;
      goto LABEL_16;
    }
    v8 = v6 + 1;
    v9 = *v6;
    if ((char)*v6 >= 1)
    {
      *(_QWORD *)a2 = v8;
      v10 = v9 | 0x100000000;
      if ((v10 & 0x100000000) != 0)
        goto LABEL_17;
      goto LABEL_9;
    }
    if ((unint64_t)v8 < v7)
    {
      v11 = *v8;
      if ((v9 & ~v11) >= 0x80)
        break;
    }
LABEL_16:
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v10 & 0x100000000) != 0)
      goto LABEL_17;
LABEL_9:
    if ((_DWORD)v10)
      v12 = (v10 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)
      goto LABEL_100;
  }
  *(_QWORD *)a2 = v6 + 2;
  v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
LABEL_17:
  switch(v10 >> 3)
  {
    case 1u:
      if (v10 != 8)
        goto LABEL_9;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((_QWORD *)this + 5) = *v14;
        goto LABEL_51;
      }
      *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v27 & 1) == 0)
        goto LABEL_100;
      goto LABEL_2;
    case 2u:
      if (v10 != 16)
        goto LABEL_9;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((_QWORD *)this + 6) = *v14;
        goto LABEL_51;
      }
      *((_QWORD *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v28 & 1) == 0)
        goto LABEL_100;
      goto LABEL_2;
    case 3u:
      if (v10 != 24)
        goto LABEL_9;
      v17 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v18 = 0;
      }
      else
      {
        v18 = *v17;
        if ((*v17 & 0x80000000) == 0)
        {
          *(_QWORD *)a2 = v17 + 1;
          goto LABEL_93;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
      v18 = Varint32Fallback;
      if (Varint32Fallback < 0)
        goto LABEL_100;
LABEL_93:
      *((_DWORD *)this + 14) = v18;
      goto LABEL_2;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
    case 0x13u:
      goto LABEL_9;
    case 0xAu:
      if (v10 != 80)
        goto LABEL_9;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((_QWORD *)this + 8) = *v14;
        goto LABEL_51;
      }
      *((_QWORD *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v29 & 1) == 0)
        goto LABEL_100;
      goto LABEL_2;
    case 0xBu:
      if (v10 != 89)
        goto LABEL_9;
      v48 = 0;
      v19 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
        if (!result)
          return result;
        v20 = v48;
      }
      else
      {
        v20 = *v19;
        *(_QWORD *)a2 = v19 + 1;
      }
      *((_QWORD *)this + 9) = v20;
      goto LABEL_2;
    case 0xCu:
      if (v10 != 96)
        goto LABEL_9;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((_QWORD *)this + 10) = *v14;
        goto LABEL_51;
      }
      *((_QWORD *)this + 10) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v30 & 1) == 0)
        goto LABEL_100;
      goto LABEL_2;
    case 0xDu:
      if (v10 != 104)
        goto LABEL_9;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
      {
        *((_QWORD *)this + 11) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v31 & 1) == 0)
          goto LABEL_100;
      }
      else
      {
        *((_QWORD *)this + 11) = *v14;
LABEL_51:
        *(_QWORD *)a2 = v14 + 1;
      }
      goto LABEL_2;
    case 0xEu:
      if (v10 != 112)
        goto LABEL_9;
      v21 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v32 & 1) == 0)
          goto LABEL_100;
      }
      else
      {
        Varint64Fallback = *v21;
        *(_QWORD *)a2 = v21 + 1;
      }
      *((_BYTE *)this + 60) = Varint64Fallback != 0;
      goto LABEL_2;
    case 0x14u:
      if (v10 != 162)
        goto LABEL_9;
      v23 = (int *)*((_QWORD *)this + 4);
      if (!v23)
      {
        v24 = *((_DWORD *)this + 6);
        v25 = *((_DWORD *)this + 7);
LABEL_74:
        if (v24 <= v25)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v25 - v24 + 1);
          v23 = (int *)*((_QWORD *)this + 4);
        }
        v25 = *v23;
        goto LABEL_77;
      }
      v24 = *((_DWORD *)this + 6);
      v25 = *v23;
      if (v24 < *v23)
      {
        *((_DWORD *)this + 6) = v24 + 1;
        Aligned = *(CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo **)&v23[2 * v24 + 2];
        goto LABEL_83;
      }
      if (v25 == *((_DWORD *)this + 7))
        goto LABEL_74;
LABEL_77:
      *v23 = v25 + 1;
      v33 = *(google::protobuf::Arena **)v5;
      if (*(_QWORD *)v5)
      {
        CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(Aligned);
        v34 = google::protobuf::Arena::AllocateAligned(v33, 0, 24);
        *v34 = Aligned;
        v34[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
        v35 = (unint64_t *)((char *)v33 + 32);
        do
          v36 = __ldxr(v35);
        while (__stxr((unint64_t)v34, v35));
        v34[2] = (google::protobuf::Arena *)v36;
      }
      else
      {
        Aligned = (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)operator new();
        CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(Aligned);
      }
      v37 = *((_QWORD *)this + 4);
      v38 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v38 + 1;
      *(_QWORD *)(v37 + 8 * v38 + 8) = Aligned;
LABEL_83:
      v39 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v39 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          goto LABEL_100;
      }
      else
      {
        VarintSizeAsIntFallback = *v39;
        *(_QWORD *)a2 = v39 + 1;
      }
      v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v43 = *((_DWORD *)a2 + 13);
      v44 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 13) = v43;
      if (v43 < 0 == v44)
      {
        v45 = v41;
        result = CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::MergePartialFromCodedStream(Aligned, (char **)a2, v42);
        if (!result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45))
          goto LABEL_2;
      }
LABEL_100:
      result = 0;
      break;
    default:
      if (v10 >> 3 != 30 || v10 != 241)
        goto LABEL_9;
      v48 = 0;
      v15 = *(unint64_t **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v48);
        if (!result)
          return result;
        v16 = v48;
      }
      else
      {
        v16 = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      *((_QWORD *)this + 12) = v16;
      goto LABEL_2;
  }
  return result;
}

void sub_1D3B53E6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode *CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  *(_QWORD *)this = &off_1E9563B68;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::TreeEnsembleParameters_TreeNode *)&CoreML::Specification::_TreeEnsembleParameters_TreeNode_default_instance_)
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  *((_DWORD *)this + 26) = 0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return this;
}

void sub_1D3B53F60(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

std::string *CoreML::Specification::TreeEnsembleRegressor::MergeFrom(std::string *this, const CoreML::Specification::TreeEnsembleRegressor *a2)
{
  std::string *v3;
  uint64_t v4;
  const CoreML::Specification::TreeEnsembleParameters *v5;
  CoreML::Specification::TreeEnsembleParameters *v7;
  const CoreML::Specification::TreeEnsembleParameters *v8;
  int v9;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = (const CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)a2 + 2);
  if (a2 != (const CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_
    && v5 != 0)
  {
    v7 = (CoreML::Specification::TreeEnsembleParameters *)v3->__r_.__value_.__r.__words[2];
    if (!v7)
    {
      v7 = (CoreML::Specification::TreeEnsembleParameters *)operator new();
      CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(v7);
      v3->__r_.__value_.__r.__words[2] = (std::string::size_type)v7;
      v5 = (const CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)a2 + 2);
    }
    if (v5)
      v8 = v5;
    else
      v8 = (const CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
    this = (std::string *)CoreML::Specification::TreeEnsembleParameters::MergeFrom((uint64_t *)v7, v8);
  }
  v9 = *((_DWORD *)a2 + 6);
  if (v9)
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
  return this;
}

void sub_1D3B54034(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::TreeEnsembleParameters::MergeFrom(uint64_t *this, const CoreML::Specification::TreeEnsembleParameters *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  google::protobuf::Arena **v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  const CoreML::Specification::TreeEnsembleParameters_TreeNode **v12;
  uint64_t **v13;
  const CoreML::Specification::TreeEnsembleParameters_TreeNode *v14;
  const CoreML::Specification::TreeEnsembleParameters_TreeNode *v15;
  uint64_t *v16;
  google::protobuf::Arena *v17;
  int v18;
  uint64_t v19;
  CoreML::Specification::TreeEnsembleParameters_TreeNode **v20;
  const CoreML::Specification::TreeEnsembleParameters_TreeNode **v21;
  const CoreML::Specification::TreeEnsembleParameters_TreeNode *v22;
  CoreML::Specification::TreeEnsembleParameters_TreeNode *Aligned;
  google::protobuf::Arena **v24;
  unint64_t *v25;
  unint64_t v26;
  int v27;
  int *v28;
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (google::protobuf::Arena **)(v3 + 2);
    v32 = *((_QWORD *)a2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v7 = this;
    v8 = *(int *)v3[4];
    v31 = v3;
    v9 = *((int *)v3 + 6);
    v10 = v8 - v9;
    if ((int)v8 - (int)v9 >= v5)
      v11 = v5;
    else
      v11 = v10;
    if ((int)v11 >= 1)
    {
      v12 = (const CoreML::Specification::TreeEnsembleParameters_TreeNode **)(v32 + 8);
      v13 = (uint64_t **)this;
      do
      {
        v15 = *v12++;
        v14 = v15;
        v16 = *v13++;
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(v14, v16);
        --v11;
      }
      while (v11);
    }
    if (v10 < v5)
    {
      v17 = *v6;
      v18 = v9 + v5 - v8;
      v19 = 8 * v8 - 8 * v9;
      v20 = (CoreML::Specification::TreeEnsembleParameters_TreeNode **)((char *)v7 + v19);
      v21 = (const CoreML::Specification::TreeEnsembleParameters_TreeNode **)(v19 + v32 + 8);
      do
      {
        v22 = *v21;
        if (v17)
        {
          CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(Aligned);
          v24 = google::protobuf::Arena::AllocateAligned(v17, 0, 24);
          *v24 = Aligned;
          v24[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
          v25 = (unint64_t *)((char *)v17 + 32);
          do
            v26 = __ldxr(v25);
          while (__stxr((unint64_t)v24, v25));
          v24[2] = (google::protobuf::Arena *)v26;
        }
        else
        {
          Aligned = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)operator new();
          CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(Aligned);
        }
        this = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(v22, (uint64_t *)Aligned);
        *v20++ = Aligned;
        ++v21;
        --v18;
      }
      while (v18);
    }
    v3 = v31;
    v27 = *((_DWORD *)v31 + 6) + v5;
    *((_DWORD *)v31 + 6) = v27;
    v28 = (int *)v31[4];
    if (*v28 < v27)
      *v28 = v27;
  }
  v29 = *((_DWORD *)a2 + 10);
  if (v29)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 10, *((_DWORD *)v3 + 10) + v29);
    this = (uint64_t *)memcpy((void *)(v3[6] + 8 * *((int *)v3 + 10) + 8), (const void *)(*((_QWORD *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  v30 = *((_QWORD *)a2 + 8);
  if (v30)
    v3[8] = v30;
  return this;
}

void sub_1D3B54260(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::GenericTypeHandler<CoreML::Specification::TreeEnsembleParameters_TreeNode>::Merge(const CoreML::Specification::TreeEnsembleParameters_TreeNode *a1, uint64_t *a2)
{
  return CoreML::Specification::TreeEnsembleParameters_TreeNode::MergeFrom(a2, a1);
}

uint64_t *CoreML::Specification::TreeEnsembleParameters_TreeNode::MergeFrom(uint64_t *this, const CoreML::Specification::TreeEnsembleParameters_TreeNode *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **v11;
  std::string **v12;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v13;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v14;
  std::string *v15;
  google::protobuf::Arena *v16;
  int v17;
  uint64_t v18;
  CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo **v19;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **v20;
  CoreML::Specification::ItemSimilarityRecommender_ConnectedItem *v21;
  CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  int v37;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v36 = *((_QWORD *)a2 + 4);
    this = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    v6 = this;
    v7 = *(int *)v3[4];
    v8 = *((int *)v3 + 6);
    v9 = v7 - v8;
    v37 = v5;
    if ((int)v7 - (int)v8 >= v5)
      v10 = v5;
    else
      v10 = v9;
    if ((int)v10 >= 1)
    {
      v11 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v36 + 8);
      v12 = (std::string **)this;
      do
      {
        v14 = *v11++;
        v13 = v14;
        v15 = *v12++;
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v13, v15);
        --v10;
      }
      while (v10);
    }
    if (v9 < v37)
    {
      v16 = (google::protobuf::Arena *)v3[2];
      v17 = v8 + v37 - v7;
      v18 = 8 * v7 - 8 * v8;
      v19 = (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo **)((char *)v6 + v18);
      v20 = (CoreML::Specification::ItemSimilarityRecommender_ConnectedItem **)(v18 + v36 + 8);
      do
      {
        v21 = *v20;
        if (v16)
        {
          CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(Aligned);
          v23 = google::protobuf::Arena::AllocateAligned(v16, 0, 24);
          *v23 = Aligned;
          v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo>;
          v24 = (unint64_t *)((char *)v16 + 32);
          do
            v25 = __ldxr(v24);
          while (__stxr((unint64_t)v23, v24));
          v23[2] = (google::protobuf::Arena *)v25;
        }
        else
        {
          Aligned = (CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo *)operator new();
          CoreML::Specification::TreeEnsembleParameters_TreeNode_EvaluationInfo::TreeEnsembleParameters_TreeNode_EvaluationInfo(Aligned);
        }
        this = (uint64_t *)google::protobuf::internal::GenericTypeHandler<CoreML::Specification::ItemSimilarityRecommender_ConnectedItem>::Merge(v21, (std::string *)Aligned);
        *v19++ = Aligned;
        ++v20;
        --v17;
      }
      while (v17);
    }
    v26 = *((_DWORD *)v3 + 6) + v37;
    *((_DWORD *)v3 + 6) = v26;
    v27 = (int *)v3[4];
    if (*v27 < v26)
      *v27 = v26;
  }
  v28 = *((_QWORD *)a2 + 5);
  if (v28)
    v3[5] = v28;
  v29 = *((_QWORD *)a2 + 6);
  if (v29)
    v3[6] = v29;
  v30 = *((_DWORD *)a2 + 14);
  if (v30)
    *((_DWORD *)v3 + 14) = v30;
  if (*((_BYTE *)a2 + 60))
    *((_BYTE *)v3 + 60) = 1;
  v31 = *((_QWORD *)a2 + 8);
  if (v31)
    v3[8] = v31;
  v32 = *((double *)a2 + 9);
  if (v32 != 0.0)
    *((double *)v3 + 9) = v32;
  v33 = *((_QWORD *)a2 + 10);
  if (v33)
    v3[10] = v33;
  v34 = *((_QWORD *)a2 + 11);
  if (v34)
    v3[11] = v34;
  v35 = *((double *)a2 + 12);
  if (v35 != 0.0)
    *((double *)v3 + 12) = v35;
  return this;
}

void sub_1D3B544C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleRegressor *CoreML::Specification::TreeEnsembleRegressor::TreeEnsembleRegressor(CoreML::Specification::TreeEnsembleRegressor *this)
{
  *(_QWORD *)this = &off_1E95605F8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleRegressor *)&CoreML::Specification::_TreeEnsembleRegressor_default_instance_)
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B54530(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleRegressor>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleRegressor>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleRegressor>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::TreeEnsembleClassifier::~TreeEnsembleClassifier(CoreML::Specification::TreeEnsembleClassifier *this)
{
  CoreML::Specification::TreeEnsembleClassifier::~TreeEnsembleClassifier(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E9560F78;
  if (this != (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  if (*((_DWORD *)this + 11))
    CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::TreeEnsembleClassifier::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleClassifier");
}

CoreML::Specification::TreeEnsembleClassifier *CoreML::Specification::TreeEnsembleClassifier::New(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return CoreML::Specification::TreeEnsembleClassifier::New(this, 0);
}

CoreML::Specification::TreeEnsembleClassifier *CoreML::Specification::TreeEnsembleClassifier::New(CoreML::Specification::TreeEnsembleClassifier *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::TreeEnsembleClassifier *v3;

  v3 = (CoreML::Specification::TreeEnsembleClassifier *)operator new();
  CoreML::Specification::TreeEnsembleClassifier::TreeEnsembleClassifier(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleClassifier>(a2, v3);
  return v3;
}

void sub_1D3B54690(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403B3CA634);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::Clear(CoreML::Specification::TreeEnsembleClassifier *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 2);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::IsInitialized(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::MergePartialFromCodedStream(CoreML::Specification::TreeEnsembleClassifier *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  char *v13;
  int v14;
  CoreML::Specification::Int64Vector *v15;
  CoreML::Specification::TreeEnsembleParameters *v16;
  char *v17;
  int VarintSizeAsIntFallback;
  CoreML::Specification::StringVector *v19;
  char *v20;
  int v21;
  char *v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  uint64_t result;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int TagFallback;
  BOOL v37;
  uint64_t Varint32Fallback;

  while (1)
  {
    while (1)
    {
      v5 = *(unsigned __int8 **)a2;
      v6 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        v7 = v5 + 1;
        v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(_QWORD *)a2 = v7;
          v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0)
            goto LABEL_55;
          goto LABEL_8;
        }
        if ((unint64_t)v7 < v6)
        {
          v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(_QWORD *)a2 = v5 + 2;
            v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_8;
          }
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_55;
LABEL_8:
      v11 = v9 >> 3;
      if (v9 >> 3 > 0x63)
        break;
      if (v11 == 1)
      {
        if (v9 == 10)
        {
          v16 = (CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)this + 2);
          if (!v16)
          {
            v16 = (CoreML::Specification::TreeEnsembleParameters *)operator new();
            CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(v16);
            *((_QWORD *)this + 2) = v16;
          }
          v17 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v17;
            *(_QWORD *)a2 = v17 + 1;
          }
          v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v26 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 13) = v26;
          if (v26 < 0 != v27)
            return 0;
          v28 = v24;
          result = CoreML::Specification::TreeEnsembleParameters::MergePartialFromCodedStream(v16, a2, v25);
          if (!(_DWORD)result)
            return result;
          goto LABEL_51;
        }
LABEL_55:
        if ((_DWORD)v9)
          v37 = (v9 & 7) == 4;
        else
          v37 = 1;
        if (v37)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0;
      }
      else
      {
        if (v11 != 2 || v9 != 16)
          goto LABEL_55;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v14 = 0;
        }
        else
        {
          v14 = *v13;
          if ((*v13 & 0x80000000) == 0)
          {
            *(_QWORD *)a2 = v13 + 1;
            goto LABEL_63;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
        v14 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
LABEL_63:
        *((_DWORD *)this + 6) = v14;
      }
    }
    if (v11 == 100)
      break;
    if (v11 != 101 || v9 != 42)
      goto LABEL_55;
    if (*((_DWORD *)this + 11) == 101)
    {
      v15 = (CoreML::Specification::Int64Vector *)*((_QWORD *)this + 4);
    }
    else
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
      *((_DWORD *)this + 11) = 101;
      v15 = (CoreML::Specification::Int64Vector *)operator new();
      CoreML::Specification::Int64Vector::Int64Vector(v15);
      *((_QWORD *)this + 4) = v15;
    }
    v20 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
    {
      v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v21 < 0)
        return 0;
    }
    else
    {
      v21 = *v20;
      *(_QWORD *)a2 = v20 + 1;
    }
    v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
    v32 = *((_DWORD *)a2 + 13);
    v27 = __OFSUB__(v32--, 1);
    *((_DWORD *)a2 + 13) = v32;
    if (v32 < 0 != v27)
      return 0;
    v28 = v30;
    result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v15, a2, v31);
    if (!(_DWORD)result)
      return result;
LABEL_51:
    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
      return 0;
  }
  if (v9 != 34)
    goto LABEL_55;
  if (*((_DWORD *)this + 11) == 100)
  {
    v19 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 4);
  }
  else
  {
    CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels((uint64_t)this);
    *((_DWORD *)this + 11) = 100;
    v19 = (CoreML::Specification::StringVector *)operator new();
    CoreML::Specification::StringVector::StringVector(v19);
    *((_QWORD *)this + 4) = v19;
  }
  v22 = *(char **)a2;
  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
  {
    v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v23 < 0)
      return 0;
  }
  else
  {
    v23 = *v22;
    *(_QWORD *)a2 = v22 + 1;
  }
  v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
  v35 = *((_DWORD *)a2 + 13);
  v27 = __OFSUB__(v35--, 1);
  *((_DWORD *)a2 + 13) = v35;
  if (v35 < 0 == v27)
  {
    v28 = v33;
    result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v19, (char **)a2, v34);
    if (!(_DWORD)result)
      return result;
    goto LABEL_51;
  }
  return 0;
}

void sub_1D3B54A78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::ByteSizeLong(CoreML::Specification::TreeEnsembleClassifier *this)
{
  CoreML::Specification::TreeEnsembleParameters *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  if (this == (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_
    || (v2 = (CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)this + 2)) == 0)
  {
    v4 = 0;
  }
  else
  {
    v3 = CoreML::Specification::TreeEnsembleParameters::ByteSizeLong(v2);
    v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v5 = *((_DWORD *)this + 6);
  if (v5)
  {
    if (v5 < 0)
      v6 = 11;
    else
      v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v4 += v6;
  }
  v7 = *((_DWORD *)this + 11);
  if (v7 == 101)
  {
    v8 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 4));
    goto LABEL_14;
  }
  if (v7 == 100)
  {
    v8 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 4));
LABEL_14:
    v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

uint64_t *CoreML::Specification::TreeEnsembleClassifier::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t *v5;
  uint64_t v6;
  signed int v7;
  int v8;

  v5 = this;
  if (this != &CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
  {
    v6 = this[2];
    if (v6)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  v7 = *((_DWORD *)v5 + 6);
  if (v7)
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteEnum(2, v7, a2, a4);
  v8 = *((_DWORD *)v5 + 11);
  if (v8 == 100)
  {
    this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x64, v5[4], a2, a4);
    v8 = *((_DWORD *)v5 + 11);
  }
  if (v8 == 101)
    return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x65, v5[4], a2, a4);
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::GetCachedSize(CoreML::Specification::TreeEnsembleClassifier *this)
{
  return *((unsigned int *)this + 10);
}

uint64_t CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 44);
  if (v2 == 101 || v2 == 100)
  {
    this = *(_QWORD *)(this + 32);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

std::string *CoreML::Specification::TreeEnsembleClassifier::MergeFrom(std::string *this, const CoreML::Specification::TreeEnsembleClassifier *a2)
{
  uint64_t v3;
  uint64_t v4;
  const CoreML::Specification::TreeEnsembleParameters *v5;
  CoreML::Specification::TreeEnsembleParameters *v7;
  const CoreML::Specification::TreeEnsembleParameters *v8;
  int v9;
  int v10;
  CoreML::Specification::StringVector *v11;
  CoreML::Specification::Int64Vector *v12;
  CoreML::Specification::StringVector *v13;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v14;
  CoreML::Specification::Int64Vector *v15;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v16;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = (const CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)a2 + 2);
  if (a2 != (const CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_
    && v5 != 0)
  {
    v7 = *(CoreML::Specification::TreeEnsembleParameters **)(v3 + 16);
    if (!v7)
    {
      v7 = (CoreML::Specification::TreeEnsembleParameters *)operator new();
      CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(v7);
      *(_QWORD *)(v3 + 16) = v7;
      v5 = (const CoreML::Specification::TreeEnsembleParameters *)*((_QWORD *)a2 + 2);
    }
    if (v5)
      v8 = v5;
    else
      v8 = (const CoreML::Specification::TreeEnsembleParameters *)&CoreML::Specification::_TreeEnsembleParameters_default_instance_;
    this = (std::string *)CoreML::Specification::TreeEnsembleParameters::MergeFrom((uint64_t *)v7, v8);
  }
  v9 = *((_DWORD *)a2 + 6);
  if (v9)
    *(_DWORD *)(v3 + 24) = v9;
  v10 = *((_DWORD *)a2 + 11);
  if (v10 == 101)
  {
    if (*(_DWORD *)(v3 + 44) == 101)
    {
      v12 = *(CoreML::Specification::Int64Vector **)(v3 + 32);
    }
    else
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 44) = 101;
      v12 = (CoreML::Specification::Int64Vector *)operator new();
      v15 = CoreML::Specification::Int64Vector::Int64Vector(v12);
      *(_QWORD *)(v3 + 32) = v12;
      if (*((_DWORD *)a2 + 11) != 101)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v15);
        v16 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_Int64Vector_default_instance_;
        return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v12, v16);
      }
    }
    v16 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 4);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v12, v16);
  }
  if (v10 == 100)
  {
    if (*(_DWORD *)(v3 + 44) == 100)
    {
      v11 = *(CoreML::Specification::StringVector **)(v3 + 32);
    }
    else
    {
      CoreML::Specification::TreeEnsembleClassifier::clear_ClassLabels(v3);
      *(_DWORD *)(v3 + 44) = 100;
      v11 = (CoreML::Specification::StringVector *)operator new();
      v13 = CoreML::Specification::StringVector::StringVector(v11);
      *(_QWORD *)(v3 + 32) = v11;
      if (*((_DWORD *)a2 + 11) != 100)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v13);
        v14 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::_StringVector_default_instance_;
        return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v11, v14);
      }
    }
    v14 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 4);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v11, v14);
  }
  return this;
}

void sub_1D3B54E48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::TreeEnsembleClassifier *CoreML::Specification::TreeEnsembleClassifier::TreeEnsembleClassifier(CoreML::Specification::TreeEnsembleClassifier *this)
{
  *(_QWORD *)this = &off_1E9560F78;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::TreeEnsembleClassifier *)&CoreML::Specification::_TreeEnsembleClassifier_default_instance_)
    CoreML::Specification::protobuf_TreeEnsemble_2eproto::InitDefaults(this);
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 5) = 0;
  return this;
}

void sub_1D3B54EE8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleClassifier>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleClassifier>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleClassifier>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::TreeEnsembleParameters::~TreeEnsembleParameters(CoreML::Specification::TreeEnsembleParameters *this)
{
  CoreML::Specification::TreeEnsembleParameters::~TreeEnsembleParameters(this);
  JUMPOUT(0x1D8251A40);
}

{
  _QWORD *v2;

  *(_QWORD *)this = &off_1E9561010;
  v2 = (_QWORD *)*((_QWORD *)this + 6);
  if (v2 && !*v2)
    operator delete(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::TreeEnsembleParameters::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters");
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleParameters::New(CoreML::Specification::TreeEnsembleParameters *this)
{
  return CoreML::Specification::TreeEnsembleParameters::New(this, 0);
}

CoreML::Specification::TreeEnsembleParameters *CoreML::Specification::TreeEnsembleParameters::New(CoreML::Specification::TreeEnsembleParameters *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::TreeEnsembleParameters *v3;

  v3 = (CoreML::Specification::TreeEnsembleParameters *)operator new();
  CoreML::Specification::TreeEnsembleParameters::TreeEnsembleParameters(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters>(a2, v3);
  return v3;
}

void sub_1D3B5505C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40CFA7A0FDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TreeEnsembleParameters::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v1 = *(unsigned int *)(this + 24);
  if ((int)v1 >= 1)
  {
    v2 = 0;
    v3 = *(_QWORD *)(this + 32) + 8;
    do
    {
      v4 = *(_QWORD *)(v3 + 8 * v2);
      v5 = *(unsigned int *)(v4 + 24);
      if ((int)v5 >= 1)
      {
        v6 = (uint64_t *)(*(_QWORD *)(v4 + 32) + 8);
        do
        {
          v7 = *v6++;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)(v7 + 24) = 0;
          --v5;
        }
        while (v5);
        *(_DWORD *)(v4 + 24) = 0;
      }
      ++v2;
      *(_OWORD *)(v4 + 88) = 0uLL;
      *(_OWORD *)(v4 + 72) = 0uLL;
      *(_OWORD *)(v4 + 56) = 0uLL;
      *(_OWORD *)(v4 + 40) = 0uLL;
    }
    while (v2 != v1);
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 64) = 0;
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::IsInitialized(CoreML::Specification::TreeEnsembleParameters *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int i;
  unint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  _BYTE *v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char __src[5];

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  v8 = *(_QWORD *)(v5 + 64);
  if (v8)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(2, v8, a2, a4);
  if (*(int *)(v5 + 40) >= 1)
  {
    if (*((int *)a2 + 4) < 5)
    {
      __src[0] = 26;
      google::protobuf::io::CodedOutputStream::WriteRaw(a2, __src, 1);
      v9 = *((_DWORD *)a2 + 4);
    }
    else
    {
      *(_BYTE *)(*((_QWORD *)a2 + 1))++ = 26;
      v9 = *((_DWORD *)a2 + 4) - 1;
      *((_DWORD *)a2 + 4) = v9;
    }
    v10 = *(_DWORD *)(v5 + 56);
    if (v9 < 5)
    {
      google::protobuf::io::CodedOutputStream::WriteVarint32SlowPath(a2, v10);
    }
    else
    {
      v11 = *((_QWORD *)a2 + 1);
      if (v10 < 0x80)
      {
        v13 = *(_DWORD *)(v5 + 56);
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      }
      else
      {
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        do
        {
          *v12++ = v10 | 0x80;
          v13 = v10 >> 7;
          v14 = v10 >> 14;
          v10 >>= 7;
        }
        while (v14);
      }
      *v12 = v13;
      v15 = (_DWORD)v12 - v11 + 1;
      *((_QWORD *)a2 + 1) += v15;
      *((_DWORD *)a2 + 4) -= v15;
    }
    v16 = *(_QWORD *)(v5 + 48);
    if (v16)
      v17 = (char *)(v16 + 8);
    else
      v17 = 0;
    return google::protobuf::io::CodedOutputStream::WriteRaw(a2, v17, 8 * *(_DWORD *)(v5 + 40));
  }
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters::GetCachedSize(CoreML::Specification::TreeEnsembleParameters *this)
{
  return *((unsigned int *)this + 18);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  CoreML::Specification::TreeEnsembleParameters_TreeNode::~TreeEnsembleParameters_TreeNode(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E9563B68;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::TreeEnsembleParameters_TreeNode::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.TreeEnsembleParameters.TreeNode");
}

CoreML::Specification::TreeEnsembleParameters_TreeNode *CoreML::Specification::TreeEnsembleParameters_TreeNode::New(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return CoreML::Specification::TreeEnsembleParameters_TreeNode::New(this, 0);
}

CoreML::Specification::TreeEnsembleParameters_TreeNode *CoreML::Specification::TreeEnsembleParameters_TreeNode::New(CoreML::Specification::TreeEnsembleParameters_TreeNode *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::TreeEnsembleParameters_TreeNode *v3;

  v3 = (CoreML::Specification::TreeEnsembleParameters_TreeNode *)operator new();
  CoreML::Specification::TreeEnsembleParameters_TreeNode::TreeEnsembleParameters_TreeNode(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode>(a2, v3);
  return v3;
}

void sub_1D3B553C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40FA1F30E5);
  _Unwind_Resume(a1);
}

double CoreML::Specification::TreeEnsembleParameters_TreeNode::Clear(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  double result;

  v1 = *((unsigned int *)this + 6);
  if ((int)v1 >= 1)
  {
    v2 = (uint64_t *)(*((_QWORD *)this + 4) + 8);
    do
    {
      v3 = *v2++;
      *(_QWORD *)(v3 + 16) = 0;
      *(_QWORD *)(v3 + 24) = 0;
      --v1;
    }
    while (v1);
    *((_DWORD *)this + 6) = 0;
  }
  result = 0.0;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::IsInitialized(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return 1;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, google::protobuf::io::CodedOutputStream *a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  signed int v8;
  unint64_t v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int i;
  double v15;

  v5 = this;
  v6 = *(_QWORD *)(this + 40);
  if (v6)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(1, v6, a2, a4);
  v7 = *(_QWORD *)(v5 + 48);
  if (v7)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(2, v7, a2, a4);
  v8 = *(_DWORD *)(v5 + 56);
  if (v8)
    this = google::protobuf::internal::WireFormatLite::WriteEnum(3, v8, a2, a4);
  v9 = *(_QWORD *)(v5 + 64);
  if (v9)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(10, v9, a2, a4);
  v10 = *(double *)(v5 + 72);
  if (v10 != 0.0)
    this = google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0xB, a2, v10, a3);
  v11 = *(_QWORD *)(v5 + 80);
  if (v11)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(12, v11, a2, a4);
  v12 = *(_QWORD *)(v5 + 88);
  if (v12)
    this = google::protobuf::internal::WireFormatLite::WriteUInt64(13, v12, a2, a4);
  if (*(_BYTE *)(v5 + 60))
    this = google::protobuf::internal::WireFormatLite::WriteBool(14, 1u, a2, a4);
  v13 = *(_DWORD *)(v5 + 24);
  if (v13)
  {
    for (i = 0; i != v13; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x14, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  v15 = *(double *)(v5 + 96);
  if (v15 != 0.0)
    return google::protobuf::internal::WireFormatLite::WriteDouble((google::protobuf::internal::WireFormatLite *)0x1E, a2, v15, a3);
  return this;
}

uint64_t CoreML::Specification::TreeEnsembleParameters_TreeNode::GetCachedSize(CoreML::Specification::TreeEnsembleParameters_TreeNode *this)
{
  return *((unsigned int *)this + 26);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::TreeEnsembleParameters_TreeNode>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::TreeEnsembleParameters_TreeNode>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E9556EA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E9556EA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1D8251A40);
}

uint64_t std::__shared_ptr_emplace<CoreML::Specification::FeatureType>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

CoreML::FeatureType *CoreML::FeatureType::FeatureType(CoreML::FeatureType *this, const CoreML::Specification::FeatureType *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  CoreML::Specification::Int64FeatureType *v9;
  uint64_t *v10;
  CoreML::Specification::DoubleFeatureType *v11;
  CoreML::Specification::StringFeatureType *v12;
  CoreML::Specification::ImageFeatureType *v13;
  CoreML::Specification::ImageFeatureType *v14;
  const CoreML::Specification::ImageFeatureType *v15;
  CoreML::Specification::ArrayFeatureType *v16;
  CoreML::Specification::ArrayFeatureType *v17;
  const CoreML::Specification::ArrayFeatureType *v18;
  CoreML::Specification::DictionaryFeatureType *v19;
  CoreML::Specification::DictionaryFeatureType *v20;
  const CoreML::Specification::DictionaryFeatureType *v21;
  CoreML::Specification::SequenceFeatureType *v22;
  CoreML::Specification::SequenceFeatureType *v23;
  const CoreML::Specification::SequenceFeatureType *v24;
  CoreML::Specification::StateFeatureType *v25;
  CoreML::Specification::StateFeatureType *v26;
  const CoreML::Specification::StateFeatureType *v27;
  uint64_t v28;

  v4 = operator new(0x40uLL);
  v5 = v4;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = &off_1E955A108;
  v6 = (uint64_t)(v4 + 3);
  *v4 = &off_1E9556EA8;
  v4[4] = 0;
  *((_DWORD *)v4 + 14) = 0;
  v7 = *((_QWORD *)a2 + 1);
  if ((v7 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4 + 4, v7 & 0xFFFFFFFFFFFFFFFELL);
  *((_BYTE *)v5 + 40) = *((_BYTE *)a2 + 16);
  *((_DWORD *)v5 + 15) = 0;
  switch(*((_DWORD *)a2 + 9))
  {
    case 1:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 1;
      v8 = (uint64_t *)operator new();
      v9 = CoreML::Specification::Int64FeatureType::Int64FeatureType((CoreML::Specification::Int64FeatureType *)v8);
      v5[6] = v8;
      if (*((_DWORD *)a2 + 9) == 1)
        goto LABEL_9;
      CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v9);
      v10 = &CoreML::Specification::_Int64FeatureType_default_instance_;
      goto LABEL_21;
    case 2:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 2;
      v8 = (uint64_t *)operator new();
      v11 = CoreML::Specification::DoubleFeatureType::DoubleFeatureType((CoreML::Specification::DoubleFeatureType *)v8);
      v5[6] = v8;
      if (*((_DWORD *)a2 + 9) == 2)
        goto LABEL_9;
      CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v11);
      v10 = &CoreML::Specification::_DoubleFeatureType_default_instance_;
      goto LABEL_21;
    case 3:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 3;
      v8 = (uint64_t *)operator new();
      v12 = CoreML::Specification::StringFeatureType::StringFeatureType((CoreML::Specification::StringFeatureType *)v8);
      v5[6] = v8;
      if (*((_DWORD *)a2 + 9) == 3)
      {
LABEL_9:
        v10 = (uint64_t *)*((_QWORD *)a2 + 3);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v12);
        v10 = &CoreML::Specification::_StringFeatureType_default_instance_;
      }
LABEL_21:
      v28 = v10[1];
      if ((v28 & 1) != 0)
        google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v8 + 1, v28 & 0xFFFFFFFFFFFFFFFELL);
      break;
    case 4:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 4;
      v13 = (CoreML::Specification::ImageFeatureType *)operator new();
      v14 = CoreML::Specification::ImageFeatureType::ImageFeatureType(v13);
      v5[6] = v13;
      if (*((_DWORD *)a2 + 9) == 4)
      {
        v15 = (const CoreML::Specification::ImageFeatureType *)*((_QWORD *)a2 + 3);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v14);
        v15 = (const CoreML::Specification::ImageFeatureType *)&CoreML::Specification::_ImageFeatureType_default_instance_;
      }
      CoreML::Specification::ImageFeatureType::MergeFrom((std::string *)v13, v15);
      break;
    case 5:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 5;
      v16 = (CoreML::Specification::ArrayFeatureType *)operator new();
      v17 = CoreML::Specification::ArrayFeatureType::ArrayFeatureType(v16);
      v5[6] = v16;
      if (*((_DWORD *)a2 + 9) == 5)
      {
        v18 = (const CoreML::Specification::ArrayFeatureType *)*((_QWORD *)a2 + 3);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v17);
        v18 = (const CoreML::Specification::ArrayFeatureType *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      CoreML::Specification::ArrayFeatureType::MergeFrom((uint64_t *)v16, v18);
      break;
    case 6:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 6;
      v19 = (CoreML::Specification::DictionaryFeatureType *)operator new();
      v20 = CoreML::Specification::DictionaryFeatureType::DictionaryFeatureType(v19);
      v5[6] = v19;
      if (*((_DWORD *)a2 + 9) == 6)
      {
        v21 = (const CoreML::Specification::DictionaryFeatureType *)*((_QWORD *)a2 + 3);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v20);
        v21 = (const CoreML::Specification::DictionaryFeatureType *)&CoreML::Specification::_DictionaryFeatureType_default_instance_;
      }
      CoreML::Specification::DictionaryFeatureType::MergeFrom((std::string *)v19, v21);
      break;
    case 7:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 7;
      v22 = (CoreML::Specification::SequenceFeatureType *)operator new();
      v23 = CoreML::Specification::SequenceFeatureType::SequenceFeatureType(v22);
      v5[6] = v22;
      if (*((_DWORD *)a2 + 9) == 7)
      {
        v24 = (const CoreML::Specification::SequenceFeatureType *)*((_QWORD *)a2 + 3);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v23);
        v24 = (const CoreML::Specification::SequenceFeatureType *)&CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      CoreML::Specification::SequenceFeatureType::MergeFrom((std::string *)v22, v24);
      break;
    case 8:
      CoreML::Specification::FeatureType::clear_Type(v6);
      *((_DWORD *)v5 + 15) = 8;
      v25 = (CoreML::Specification::StateFeatureType *)operator new();
      v26 = CoreML::Specification::StateFeatureType::StateFeatureType(v25);
      v5[6] = v25;
      if (*((_DWORD *)a2 + 9) == 8)
      {
        v27 = (const CoreML::Specification::StateFeatureType *)*((_QWORD *)a2 + 3);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v26);
        v27 = (const CoreML::Specification::StateFeatureType *)&CoreML::Specification::_StateFeatureType_default_instance_;
      }
      CoreML::Specification::StateFeatureType::MergeFrom((std::string *)v25, v27);
      break;
    default:
      break;
  }
  *(_QWORD *)this = v6;
  *((_QWORD *)this + 1) = v5;
  return this;
}

void sub_1D3B559EC(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v5;

  MEMORY[0x1D8251A40](v3, 0x10A1C406A65A86DLL);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v5);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t v8;
  size_t v9;

  if (a4)
  {
    v4 = result;
    if (a4 >> 61)
      std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
    result = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(a4);
    v7 = result;
    *v4 = result;
    v4[1] = result;
    v4[2] = &result[v8];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memmove(result, a2, v9);
    v4[1] = (char *)v7 + v9;
  }
  return result;
}

void sub_1D3B55B08(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::FeatureType::toString@<X0>(CoreML::FeatureType *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v4;
  std::string *p_p;
  std::string::size_type size;
  CoreML::Specification::protobuf_FeatureTypes_2eproto *inited;
  const ImageFeatureType *v8;
  int *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  std::string *v13;
  std::string::size_type v14;
  void *v15;
  void **v16;
  uint64_t v17;
  _QWORD *v18;
  std::string *v19;
  std::string::size_type v20;
  void **v21;
  uint64_t v22;
  std::string *v23;
  std::string::size_type v24;
  std::string *v25;
  std::string::size_type v26;
  int v27;
  char *v28;
  int *v29;
  _QWORD *v30;
  std::string *v31;
  std::string::size_type v32;
  void **v33;
  uint64_t v34;
  std::string *v35;
  std::string::size_type v36;
  _QWORD *v37;
  uint64_t *v38;
  std::string *v39;
  std::string::size_type v40;
  const std::string::value_type *v41;
  std::string *v42;
  uint64_t v43;
  void *v45;
  uint64_t v46;
  unsigned __int8 v47;
  std::string __p;
  _QWORD v49[2];
  _QWORD v50[11];
  char v51;
  uint64_t v52;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v49);
  v4 = *(int *)(*(_QWORD *)this + 36);
  std::string::basic_string[abi:ne180100]<0>(&__p, (&off_1E9568CC8)[v4]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    p_p = &__p;
  else
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  inited = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  switch((int)v4)
  {
    case 4:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 4)
      {
        v8 = *(const ImageFeatureType **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        v8 = (const ImageFeatureType *)&CoreML::Specification::_ImageFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      CoreML::colorSpaceToString(&__p, v8->colorspace_);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = &__p;
      else
        v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v14 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v13, v14);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      CoreML::defaultSizeOf((CoreML *)&__p, v8);
      v15 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v45, &__p, 0);
        v16 = (v47 & 0x80u) == 0 ? &v45 : (void **)v45;
        v17 = (v47 & 0x80u) == 0 ? v47 : v46;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v16, v17);
        if ((char)v47 < 0)
          operator delete(v45);
      }
      goto LABEL_101;
    case 5:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 5)
      {
        v9 = *(int **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        v9 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      CoreML::dataTypeToString(&__p, v9[9]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v19 = &__p;
      else
        v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v20 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v19, v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      CoreML::defaultShapeOf((unint64_t)&__p, (const CoreML::Specification::ArrayFeatureType *)v9);
      v15 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v45, &__p, 0);
        v21 = (v47 & 0x80u) == 0 ? &v45 : (void **)v45;
        v22 = (v47 & 0x80u) == 0 ? v47 : v46;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v21, v22);
        if ((char)v47 < 0)
          operator delete(v45);
      }
      goto LABEL_101;
    case 6:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 6)
      {
        v10 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        v10 = &CoreML::Specification::_DictionaryFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      std::string::basic_string[abi:ne180100]<0>(&__p, (&off_1E9568D10)[*((int *)v10 + 7)]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v23 = &__p;
      else
        v23 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v24 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v23, v24);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" → ", 5);
      std::string::basic_string[abi:ne180100]<0>(&__p, "Double");
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v25 = &__p;
      else
        v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v26 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v25, v26);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_123;
    case 7:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 7)
      {
        v11 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        v11 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      v27 = *((_DWORD *)v11 + 9);
      if (v27)
      {
        if (v27 == 1)
          v28 = "Int64";
        else
          v28 = "String";
      }
      else
      {
        v28 = "Invalid";
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, v28);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v35 = &__p;
      else
        v35 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v36 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v36 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v35, v36);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v37 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
      v38 = (uint64_t *)v11[2];
      if (!v38)
        v38 = &CoreML::Specification::_SizeRange_default_instance_;
      CoreML::rangeToString((CoreML *)&__p, v38[2], v38[3], 0);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v39 = &__p;
      else
        v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v40 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v37, (uint64_t)v39, v40);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
LABEL_123:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)")", 1);
      break;
    case 8:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 8)
      {
        v12 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        inited = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        v12 = &CoreML::Specification::_StateFeatureType_default_instance_;
      }
      if (*((_DWORD *)v12 + 7) == 1)
      {
        v29 = (int *)v12[2];
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(inited);
        v29 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      v30 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" (", 2);
      CoreML::dataTypeToString(&__p, v29[9]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v31 = &__p;
      else
        v31 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v32 = __p.__r_.__value_.__l.__size_;
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v30, (uint64_t)v31, v32);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      CoreML::defaultShapeOf((unint64_t)&__p, (const CoreML::Specification::ArrayFeatureType *)v29);
      v15 = (void *)__p.__r_.__value_.__r.__words[0];
      if (__p.__r_.__value_.__l.__size_ != __p.__r_.__value_.__r.__words[0])
      {
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)" ", 1);
        CoreML::dimensionsToString((uint64_t)&v45, &__p, 0);
        v33 = (v47 & 0x80u) == 0 ? &v45 : (void **)v45;
        v34 = (v47 & 0x80u) == 0 ? v47 : v46;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)v33, v34);
        if ((char)v47 < 0)
          operator delete(v45);
      }
LABEL_101:
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)")", 1);
      if (v15)
        operator delete(v15);
      break;
    default:
      break;
  }
  std::stringbuf::str();
  if (*(_BYTE *)(*(_QWORD *)this + 16))
    v41 = "?";
  else
    v41 = (const std::string::value_type *)&unk_1D3BDFB5D;
  v42 = std::string::append(&__p, v41);
  *a2 = *v42;
  v42->__r_.__value_.__l.__size_ = 0;
  v42->__r_.__value_.__r.__words[2] = 0;
  v42->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v49[0] = *MEMORY[0x1E0DE4F50];
  v43 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v49 + *(_QWORD *)(v49[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v50[0] = v43;
  v50[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v51 < 0)
    operator delete((void *)v50[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1D82519D4](&v52);
}

void sub_1D3B561F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  void *v22;

  if (a15 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a22);
  _Unwind_Resume(a1);
}

_QWORD *CoreML::dataTypeToString(_QWORD *a1, int a2)
{
  char *v2;

  if (a2 <= 65567)
  {
    if (a2 != 0x80000000 && a2)
    {
      v2 = "Float16";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
LABEL_12:
    v2 = "Invalid";
    return std::string::basic_string[abi:ne180100]<0>(a1, v2);
  }
  if (a2 > 131103)
  {
    if (a2 == 131104)
    {
      v2 = "Int32";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
    goto LABEL_12;
  }
  if (a2 == 65568)
    v2 = "Float32";
  else
    v2 = "Double";
  return std::string::basic_string[abi:ne180100]<0>(a1, v2);
}

void CoreML::defaultShapeOf(unint64_t this, const CoreML::Specification::ArrayFeatureType *a2)
{
  _QWORD *v3;
  char *v4;
  unint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t j;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t i;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v3 = (_QWORD *)this;
  *(_QWORD *)this = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  if (*((int *)a2 + 4) < 1)
  {
    v16 = *((_DWORD *)a2 + 15);
    if (v16 == 21)
    {
      v30 = 0;
      v31 = 0;
      v32 = 0;
      for (i = 0; ; ++i)
      {
        if (v16 == 21)
        {
          v34 = (uint64_t *)*((_QWORD *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          v34 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
        }
        if (i >= *(int *)(*(_QWORD *)(v34[4] + 8) + 16))
          break;
        if (*((_DWORD *)a2 + 15) == 21)
        {
          v35 = (uint64_t *)*((_QWORD *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          v35 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
        }
        v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v35[4] + 8) + 24) + 8 * i + 8);
        if (v32 >= v31)
        {
          v38 = (v32 - v30) >> 3;
          v39 = v38 + 1;
          if ((unint64_t)(v38 + 1) >> 61)
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          if ((v31 - v30) >> 2 > v39)
            v39 = (v31 - v30) >> 2;
          if ((unint64_t)(v31 - v30) >= 0x7FFFFFFFFFFFFFF8)
            this = 0x1FFFFFFFFFFFFFFFLL;
          else
            this = v39;
          if (this)
            this = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(this);
          else
            v40 = 0;
          v41 = (char *)(this + 8 * v38);
          *(_QWORD *)v41 = v36;
          v37 = v41 + 8;
          while (v32 != v30)
          {
            v42 = *((_QWORD *)v32 - 1);
            v32 -= 8;
            *((_QWORD *)v41 - 1) = v42;
            v41 -= 8;
          }
          v31 = (char *)(this + 8 * v40);
          *v3 = v41;
          v3[1] = v37;
          v3[2] = v31;
          if (v30)
            operator delete(v30);
          v30 = v41;
        }
        else
        {
          *(_QWORD *)v32 = v36;
          v37 = v32 + 8;
        }
        v3[1] = v37;
        v16 = *((_DWORD *)a2 + 15);
        v32 = v37;
      }
    }
    else if (v16 == 31)
    {
      v17 = 0;
      v18 = 0;
      v19 = 0;
      for (j = 0; ; ++j)
      {
        if (v16 == 31)
        {
          v21 = (uint64_t *)*((_QWORD *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          v21 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
        }
        if (j >= *((int *)v21 + 6))
          break;
        if (*((_DWORD *)a2 + 15) == 31)
        {
          v22 = (uint64_t *)*((_QWORD *)a2 + 5);
        }
        else
        {
          this = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)this);
          v22 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
        }
        v23 = *(_QWORD *)(*(_QWORD *)(v22[4] + 8 * j + 8) + 16);
        if (v19 >= v18)
        {
          v25 = (v19 - v17) >> 3;
          v26 = v25 + 1;
          if ((unint64_t)(v25 + 1) >> 61)
            std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
          if ((v18 - v17) >> 2 > v26)
            v26 = (v18 - v17) >> 2;
          if ((unint64_t)(v18 - v17) >= 0x7FFFFFFFFFFFFFF8)
            this = 0x1FFFFFFFFFFFFFFFLL;
          else
            this = v26;
          if (this)
            this = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(this);
          else
            v27 = 0;
          v28 = (char *)(this + 8 * v25);
          *(_QWORD *)v28 = v23;
          v24 = v28 + 8;
          while (v19 != v17)
          {
            v29 = *((_QWORD *)v19 - 1);
            v19 -= 8;
            *((_QWORD *)v28 - 1) = v29;
            v28 -= 8;
          }
          v18 = (char *)(this + 8 * v27);
          *v3 = v28;
          v3[1] = v24;
          v3[2] = v18;
          if (v17)
            operator delete(v17);
          v17 = v28;
        }
        else
        {
          *(_QWORD *)v19 = v23;
          v24 = v19 + 8;
        }
        v3[1] = v24;
        v16 = *((_DWORD *)a2 + 15);
        v19 = v24;
      }
    }
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(*((_QWORD *)a2 + 3) + 8 * v7 + 8);
      if ((unint64_t)v6 >= v5)
      {
        v10 = (v6 - v4) >> 3;
        v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 61)
          std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
        if ((uint64_t)(v5 - (_QWORD)v4) >> 2 > v11)
          v11 = (uint64_t)(v5 - (_QWORD)v4) >> 2;
        if (v5 - (unint64_t)v4 >= 0x7FFFFFFFFFFFFFF8)
          v12 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v12 = v11;
        if (v12)
          v12 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v12);
        else
          v13 = 0;
        v14 = (char *)(v12 + 8 * v10);
        *(_QWORD *)v14 = v8;
        v9 = v14 + 8;
        while (v6 != v4)
        {
          v15 = *((_QWORD *)v6 - 1);
          v6 -= 8;
          *((_QWORD *)v14 - 1) = v15;
          v14 -= 8;
        }
        v5 = v12 + 8 * v13;
        *v3 = v14;
        v3[1] = v9;
        v3[2] = v5;
        if (v4)
          operator delete(v4);
        v4 = v14;
      }
      else
      {
        *(_QWORD *)v6 = v8;
        v9 = v6 + 8;
      }
      v3[1] = v9;
      ++v7;
      v6 = v9;
    }
    while (v7 < *((int *)a2 + 4));
  }
}

void sub_1D3B566C4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::dimensionsToString(uint64_t a1, _QWORD *a2, int a3)
{
  char *v5;
  unint64_t v6;
  unint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  void *__p[2];
  unsigned __int8 v13;
  _QWORD v14[2];
  _QWORD v15[11];
  char v16;
  uint64_t v17;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v14);
  if (a3)
    v5 = ", ";
  else
    v5 = " × ";
  std::string::basic_string[abi:ne180100]<0>(__p, v5);
  if (a3)
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"[", 1);
  if (a2[1] != *a2)
  {
    v6 = 0;
    do
    {
      std::ostream::operator<<();
      v7 = (uint64_t)(a2[1] - *a2) >> 3;
      if (v6 < v7 - 1)
      {
        if ((v13 & 0x80u) == 0)
          v8 = __p;
        else
          v8 = (void **)__p[0];
        if ((v13 & 0x80u) == 0)
          v9 = v13;
        else
          v9 = (uint64_t)__p[1];
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)v8, v9);
        v7 = (uint64_t)(a2[1] - *a2) >> 3;
      }
      ++v6;
    }
    while (v6 < v7);
  }
  if ((a3 & 1) != 0)
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"]", 1);
  std::stringbuf::str();
  if ((char)v13 < 0)
    operator delete(__p[0]);
  v14[0] = *MEMORY[0x1E0DE4F50];
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v14 + *(_QWORD *)(v14[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v15[0] = v10;
  v15[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v16 < 0)
    operator delete((void *)v15[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1D82519D4](&v17);
}

void sub_1D3B56898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a15);
  _Unwind_Resume(a1);
}

_QWORD *CoreML::colorSpaceToString(_QWORD *a1, int a2)
{
  char *v2;

  if (a2 <= 19)
  {
    if (a2 != 0x80000000 && a2)
    {
      v2 = "Grayscale";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
LABEL_12:
    v2 = "Invalid";
    return std::string::basic_string[abi:ne180100]<0>(a1, v2);
  }
  if (a2 > 39)
  {
    if (a2 == 40)
    {
      v2 = "Grayscale16Half";
      return std::string::basic_string[abi:ne180100]<0>(a1, v2);
    }
    goto LABEL_12;
  }
  if (a2 == 20)
    v2 = "RGB";
  else
    v2 = "BGR";
  return std::string::basic_string[abi:ne180100]<0>(a1, v2);
}

void CoreML::defaultSizeOf(CoreML *this, const ImageFeatureType *a2)
{
  int64_t width;
  int64_t height;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  SizeFlexibilityUnion v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  width = a2->width_;
  if (width < 1 || (height = a2->height_, height < 1))
  {
    v8 = a2->_oneof_case_[0];
    if (v8 == 31)
    {
      v11.enumeratedsizes_ = (ImageFeatureType_EnumeratedImageSizes *)a2->SizeFlexibility_;
      v12 = (uint64_t *)*((_QWORD *)v11.enumeratedsizes_ + 2);
      if (!v12)
        v12 = &CoreML::Specification::_SizeRange_default_instance_;
      v13 = v12[2];
      v5 = operator new(8uLL);
      *v5 = v13;
      *(_QWORD *)this = v5;
      *((_QWORD *)this + 1) = v5 + 1;
      *((_QWORD *)this + 2) = v5 + 1;
      v14 = (uint64_t *)*((_QWORD *)v11.enumeratedsizes_ + 3);
      if (!v14)
        v14 = &CoreML::Specification::_SizeRange_default_instance_;
      height = v14[2];
      v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(2uLL);
    }
    else
    {
      if (v8 != 21)
        return;
      v9 = *(_QWORD *)(*((_QWORD *)a2->SizeFlexibility_.enumeratedsizes_ + 4) + 8);
      v10 = *(_QWORD *)(v9 + 16);
      v5 = operator new(8uLL);
      *v5 = v10;
      *(_QWORD *)this = v5;
      *((_QWORD *)this + 1) = v5 + 1;
      *((_QWORD *)this + 2) = v5 + 1;
      height = *(_QWORD *)(v9 + 24);
      v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(2uLL);
    }
  }
  else
  {
    v5 = operator new(8uLL);
    *v5 = width;
    *(_QWORD *)this = v5;
    *((_QWORD *)this + 1) = v5 + 1;
    *((_QWORD *)this + 2) = v5 + 1;
    v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(2uLL);
  }
  v6[1] = height;
  v15 = v6 + 2;
  *v6 = *v5;
  *(_QWORD *)this = v6;
  *((_QWORD *)this + 1) = v6 + 2;
  *((_QWORD *)this + 2) = &v6[v7];
  operator delete(v5);
  *((_QWORD *)this + 1) = v15;
}

void sub_1D3B56A6C(_Unwind_Exception *a1)
{
  uint64_t v1;
  void *v2;

  *(_QWORD *)(v1 + 8) = v2;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t CoreML::rangeToString(CoreML *this, uint64_t a2, uint64_t a3, int a4)
{
  _QWORD *v7;
  _QWORD *v8;
  const char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[11];
  char v16;
  uint64_t v17;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v14);
  if (a4)
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)"[", 1);
    v7 = (_QWORD *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)", ", 2);
    v8 = (_QWORD *)std::ostream::operator<<();
    v9 = "]";
    v10 = 1;
LABEL_3:
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)v9, v10);
    goto LABEL_8;
  }
  if (a2 != a3)
  {
    if (a3 < 0)
    {
      v8 = (_QWORD *)std::ostream::operator<<();
      v9 = "...";
      v10 = 3;
      goto LABEL_3;
    }
    v11 = (_QWORD *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"...", 3);
  }
  std::ostream::operator<<();
LABEL_8:
  std::stringbuf::str();
  v14[0] = *MEMORY[0x1E0DE4F50];
  v12 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v14 + *(_QWORD *)(v14[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v15[0] = v12;
  v15[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v16 < 0)
    operator delete((void *)v15[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1D82519D4](&v17);
}

void sub_1D3B56BE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)va);
  _Unwind_Resume(a1);
}

void CoreML::FeatureType::toDictionary(CoreML::FeatureType *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t **v3;
  uint64_t v4;
  uint64_t **v5;
  void **v6;
  const char *v7;
  uint64_t **v8;
  unint64_t *v9;
  const ImageFeatureType *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  int *v15;
  uint64_t **v16;
  int v17;
  char *v18;
  _QWORD *v19;
  uint64_t **v20;
  void **v21;
  uint64_t **v22;
  void **v23;
  uint64_t **v24;
  void **v25;
  int colorspace;
  const char *v28;
  uint64_t **v29;
  const char *v30;
  uint64_t **v31;
  unint64_t *inited;
  unsigned int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _OWORD *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t **v42;
  void **v43;
  uint64_t **v44;
  void **v45;
  const char *v46;
  uint64_t **v47;
  unint64_t v48;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  std::string::size_type v56;
  std::string::size_type v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  _QWORD *v62;
  std::string::size_type v63;
  uint64_t **v64;
  void **v65;
  uint64_t **v66;
  void **v67;
  void *v68;
  uint64_t **v69;
  void **v70;
  uint64_t *v71;
  void **v72;
  void *v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  _BYTE *v77;
  std::string::size_type v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  std::string::size_type v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t *enumeratedsizes;
  uint64_t *v92;
  uint64_t v93;
  CoreML::Specification::protobuf_FeatureTypes_2eproto *v94;
  CoreML::Specification::protobuf_FeatureTypes_2eproto *v95;
  uint64_t v96;
  uint64_t v97;
  std::string::size_type v98;
  char *v99;
  uint64_t *v100;
  uint64_t v101;
  std::string::size_type v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  void *v110;
  uint64_t **v111;
  uint64_t **v112;
  uint64_t **v113;
  uint64_t **v114;
  uint64_t **v115;
  void **v116;
  uint64_t **v117;
  void **v118;
  uint64_t **v119;
  void **v120;
  uint64_t **v121;
  void **v122;
  unint64_t *v123;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  void *v129;
  uint64_t **v130;
  uint64_t **v131;
  uint64_t **v132;
  uint64_t **v133;
  void *v135[2];
  char v136;
  void *v137[2];
  uint64_t *v138;
  void *__p[2];
  uint64_t *v140;
  std::string v141;

  v3 = (uint64_t **)a2;
  v4 = *(int *)(*(_QWORD *)this + 36);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = a2 + 8;
  std::string::basic_string[abi:ne180100]<0>(&v141, (&off_1E9568CC8)[v4]);
  std::string::basic_string[abi:ne180100]<0>(__p, "type");
  v5 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
  v6 = (void **)(v5 + 7);
  if (*((char *)v5 + 79) < 0)
    operator delete(*v6);
  *(std::string *)v6 = v141;
  *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
  v141.__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(v140) < 0)
  {
    operator delete(__p[0]);
    if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v141.__r_.__value_.__l.__data_);
  }
  if (*(_BYTE *)(*(_QWORD *)this + 16))
    v7 = "1";
  else
    v7 = "0";
  std::string::basic_string[abi:ne180100]<0>(&v141, "isOptional");
  v8 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
  v9 = (unint64_t *)MEMORY[0x1D82517DC](v8 + 7, v7);
  if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v141.__r_.__value_.__l.__data_);
  switch((int)v4)
  {
    case 4:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 4)
      {
        v10 = *(const ImageFeatureType **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        v10 = (const ImageFeatureType *)&CoreML::Specification::_ImageFeatureType_default_instance_;
      }
      CoreML::defaultSizeOf((CoreML *)__p, v10);
      v19 = __p[0];
      std::to_string(&v141, *(_QWORD *)__p[0]);
      std::string::basic_string[abi:ne180100]<0>(v137, "width");
      v20 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      v21 = (void **)(v20 + 7);
      if (*((char *)v20 + 79) < 0)
        operator delete(*v21);
      *(std::string *)v21 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      std::to_string(&v141, v19[1]);
      std::string::basic_string[abi:ne180100]<0>(v137, "height");
      v22 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      v23 = (void **)(v22 + 7);
      if (*((char *)v22 + 79) < 0)
        operator delete(*v23);
      *(std::string *)v23 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      CoreML::colorSpaceToString(&v141, v10->colorspace_);
      std::string::basic_string[abi:ne180100]<0>(v137, "colorspace");
      v24 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      v25 = (void **)(v24 + 7);
      if (*((char *)v24 + 79) < 0)
        operator delete(*v25);
      *(std::string *)v25 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      colorspace = v10->colorspace_;
      if (colorspace == 40 || colorspace == 10)
        v28 = "0";
      else
        v28 = "1";
      std::string::basic_string[abi:ne180100]<0>(&v141, "isColor");
      v29 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
      MEMORY[0x1D82517DC](v29 + 7, v28);
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v141.__r_.__value_.__l.__data_);
      if (v10->_oneof_case_[0])
        v30 = "1";
      else
        v30 = "0";
      std::string::basic_string[abi:ne180100]<0>(&v141, "hasSizeFlexibility");
      v31 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
      inited = (unint64_t *)MEMORY[0x1D82517DC](v31 + 7, v30);
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v141.__r_.__value_.__l.__data_);
      v33 = v10->_oneof_case_[0];
      if (v33 == 21)
      {
        v90 = 0;
        v137[0] = 0;
        v137[1] = 0;
        v138 = 0;
        while (1)
        {
          if (v33 == 21)
          {
            enumeratedsizes = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          }
          else
          {
            inited = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
            enumeratedsizes = &CoreML::Specification::_ImageFeatureType_EnumeratedImageSizes_default_instance_;
          }
          if (v90 >= *((int *)enumeratedsizes + 6))
            break;
          memset(&v141, 0, sizeof(v141));
          if (v10->_oneof_case_[0] == 21)
          {
            v92 = (uint64_t *)((char *)v10->SizeFlexibility_.enumeratedsizes_ + 32);
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)inited);
            v92 = &qword_1EDB93830;
          }
          v93 = *(_QWORD *)(*(_QWORD *)(*v92 + 8 * v90 + 8) + 16);
          v94 = (CoreML::Specification::protobuf_FeatureTypes_2eproto *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(1uLL);
          v95 = v94;
          v97 = v96;
          v98 = (std::string::size_type)v94 + 8 * v96;
          *(_QWORD *)v94 = v93;
          v99 = (char *)v94 + 8;
          v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v94;
          v141.__r_.__value_.__r.__words[2] = v98;
          if (v10->_oneof_case_[0] == 21)
          {
            v100 = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults(v94);
            v100 = &CoreML::Specification::_ImageFeatureType_EnumeratedImageSizes_default_instance_;
          }
          v101 = *(_QWORD *)(*(_QWORD *)(v100[4] + 8 * v90 + 8) + 24);
          if (v97 < 2)
          {
            v103 = (v99 - (char *)v95) >> 3;
            v104 = v103 + 1;
            if ((unint64_t)(v103 + 1) >> 61)
              std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
            if ((uint64_t)(v98 - (_QWORD)v95) >> 2 > v104)
              v104 = (uint64_t)(v98 - (_QWORD)v95) >> 2;
            if (v98 - (unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8)
              v105 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v105 = v104;
            if (v105)
              v105 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v105);
            else
              v106 = 0;
            v107 = 0;
            v108 = (_QWORD *)(v105 + 8 * v103);
            *v108 = v101;
            v102 = (std::string::size_type)(v108 + 1);
            do
            {
              v108[v107 - 1] = *(_QWORD *)((char *)v95 + v107 * 8);
              --v107;
            }
            while (v107 != -1);
            v141.__r_.__value_.__r.__words[0] = (std::string::size_type)(v108 - 1);
            v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v108 + 1);
            v141.__r_.__value_.__r.__words[2] = v105 + 8 * v106;
            operator delete(v95);
          }
          else
          {
            *((_QWORD *)v95 + 1) = v101;
            v102 = (std::string::size_type)v95 + 16;
          }
          v141.__r_.__value_.__l.__size_ = v102;
          v109 = v137[1];
          if (v137[1] >= v138)
          {
            v110 = (void *)std::vector<std::vector<long long>>::__push_back_slow_path<std::vector<long long> const&>((uint64_t *)v137, (uint64_t)&v141);
          }
          else
          {
            *(_QWORD *)v137[1] = 0;
            v109[1] = 0;
            v109[2] = 0;
            std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v109, v141.__r_.__value_.__l.__data_, v102, (uint64_t)(v102 - v141.__r_.__value_.__r.__words[0]) >> 3);
            v110 = v109 + 3;
          }
          v137[1] = v110;
          inited = (unint64_t *)v141.__r_.__value_.__r.__words[0];
          if (v141.__r_.__value_.__r.__words[0])
            operator delete(v141.__r_.__value_.__l.__data_);
          ++v90;
          v33 = v10->_oneof_case_[0];
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)v137, 1);
        std::string::basic_string[abi:ne180100]<0>(v135, "enumeratedSizes");
        v115 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v135, (uint64_t)v135);
        v116 = (void **)(v115 + 7);
        if (*((char *)v115 + 79) < 0)
          operator delete(*v116);
        *(std::string *)v116 = v141;
        *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v141.__r_.__value_.__l.__data_);
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)v137, 0);
        std::string::basic_string[abi:ne180100]<0>(v135, "sizeFlexibility");
        v117 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v135, (uint64_t)v135);
        v118 = (void **)(v117 + 7);
        if (*((char *)v117 + 79) < 0)
          operator delete(*v118);
        *(std::string *)v118 = v141;
        *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v141.__r_.__value_.__l.__data_);
        }
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v137;
        std::vector<std::vector<long long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v141);
      }
      else if (v33 == 31)
      {
        memset(&v141, 0, sizeof(v141));
        v34 = (uint64_t *)*((_QWORD *)v10->SizeFlexibility_.enumeratedsizes_ + 2);
        if (!v34)
          v34 = &CoreML::Specification::_SizeRange_default_instance_;
        v35 = v34[2];
        v36 = v34[3];
        v37 = operator new(0x10uLL);
        v38 = v37;
        *v37 = v35;
        v37[1] = v36;
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v37;
        v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v37 + 2);
        v141.__r_.__value_.__r.__words[2] = (std::string::size_type)(v37 + 2);
        if (v10->_oneof_case_[0] == 31)
        {
          v39 = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          v40 = (uint64_t *)v39[3];
          if (!v40)
            v40 = &CoreML::Specification::_SizeRange_default_instance_;
          v41 = v40[2];
        }
        else
        {
          v123 = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v37);
          v124 = (uint64_t *)qword_1EDB93428;
          if (!qword_1EDB93428)
            v124 = &CoreML::Specification::_SizeRange_default_instance_;
          v41 = v124[2];
          if (v10->_oneof_case_[0] == 31)
          {
            v39 = (uint64_t *)v10->SizeFlexibility_.enumeratedsizes_;
          }
          else
          {
            CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v123);
            v39 = &CoreML::Specification::_ImageFeatureType_ImageSizeRange_default_instance_;
          }
        }
        v125 = (uint64_t *)v39[3];
        if (!v125)
          v125 = &CoreML::Specification::_SizeRange_default_instance_;
        v126 = v125[3];
        v127 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<long long,long long>>>(2uLL);
        v127[2] = v41;
        v127[3] = v126;
        *(_OWORD *)v127 = *v38;
        v129 = (void *)v141.__r_.__value_.__r.__words[0];
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v127;
        v141.__r_.__value_.__r.__words[2] = (std::string::size_type)&v127[2 * v128];
        if (v129)
          operator delete(v129);
        v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v127 + 4);
        CoreML::dimensionRangesToString((uint64_t)v137, (uint64_t *)&v141, 1);
        std::string::basic_string[abi:ne180100]<0>(v135, "sizeRange");
        v130 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v135, (uint64_t)v135);
        v131 = v130 + 7;
        if (*((char *)v130 + 79) < 0)
          operator delete(*v131);
        *(_OWORD *)v131 = *(_OWORD *)v137;
        v131[2] = v138;
        HIBYTE(v138) = 0;
        LOBYTE(v137[0]) = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v138) < 0)
            operator delete(v137[0]);
        }
        CoreML::dimensionRangesToString((uint64_t)v137, (uint64_t *)&v141, 0);
        std::string::basic_string[abi:ne180100]<0>(v135, "sizeFlexibility");
        v132 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v135, (uint64_t)v135);
        v133 = v132 + 7;
        if (*((char *)v132 + 79) < 0)
          operator delete(*v133);
        *(_OWORD *)v133 = *(_OWORD *)v137;
        v133[2] = v138;
        HIBYTE(v138) = 0;
        LOBYTE(v137[0]) = 0;
        if (v136 < 0)
        {
          operator delete(v135[0]);
          if (SHIBYTE(v138) < 0)
            operator delete(v137[0]);
        }
        if (v127)
        {
          v141.__r_.__value_.__l.__size_ = (std::string::size_type)v127;
          v68 = v127;
          goto LABEL_266;
        }
      }
      goto LABEL_267;
    case 5:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 5)
      {
        v14 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        v14 = &CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      CoreML::dataTypeToString(&v141, *((_DWORD *)v14 + 9));
      std::string::basic_string[abi:ne180100]<0>(__p, "dataType");
      v42 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      v43 = (void **)(v42 + 7);
      if (*((char *)v42 + 79) < 0)
        operator delete(*v43);
      *(std::string *)v43 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v140) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      CoreML::defaultShapeOf((unint64_t)__p, (const CoreML::Specification::ArrayFeatureType *)v14);
      CoreML::dimensionsToString((uint64_t)&v141, __p, 1);
      std::string::basic_string[abi:ne180100]<0>(v137, "shape");
      v44 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      v45 = (void **)(v44 + 7);
      if (*((char *)v44 + 79) < 0)
        operator delete(*v45);
      *(std::string *)v45 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      if (__p[0])
        operator delete(__p[0]);
      if (*((_DWORD *)v14 + 15))
        v46 = "1";
      else
        v46 = "0";
      std::string::basic_string[abi:ne180100]<0>(&v141, "hasShapeFlexibility");
      v47 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, &v141, (uint64_t)&v141);
      v48 = MEMORY[0x1D82517DC](v47 + 7, v46);
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v141.__r_.__value_.__l.__data_);
      v49 = *((_DWORD *)v14 + 15);
      if (v49 == 21)
      {
        v74 = 0;
        __p[0] = 0;
        __p[1] = 0;
        v140 = 0;
        while (1)
        {
          if (v49 == 21)
          {
            v75 = (uint64_t *)v14[5];
          }
          else
          {
            v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
            v75 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
          }
          if (v74 >= *((int *)v75 + 6))
            break;
          v76 = 0;
          v77 = 0;
          v78 = 0;
          v79 = 0;
          memset(&v141, 0, sizeof(v141));
          while (1)
          {
            if (*((_DWORD *)v14 + 15) == 21)
            {
              v80 = (uint64_t *)v14[5];
            }
            else
            {
              v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
              v80 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
            }
            if (v79 >= *(int *)(*(_QWORD *)(v80[4] + 8 * v74 + 8) + 16))
              break;
            if (*((_DWORD *)v14 + 15) == 21)
            {
              v81 = (uint64_t *)v14[5];
            }
            else
            {
              v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
              v81 = &CoreML::Specification::_ArrayFeatureType_EnumeratedShapes_default_instance_;
            }
            v82 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v81[4] + 8 * v74 + 8) + 24) + 8 * v79 + 8);
            if ((unint64_t)v76 >= v78)
            {
              v84 = (v76 - v77) >> 3;
              v85 = v84 + 1;
              if ((unint64_t)(v84 + 1) >> 61)
              {
                v141.__r_.__value_.__r.__words[2] = v78;
                v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
                std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
              }
              if ((uint64_t)(v78 - (_QWORD)v77) >> 2 > v85)
                v85 = (uint64_t)(v78 - (_QWORD)v77) >> 2;
              if (v78 - (unint64_t)v77 >= 0x7FFFFFFFFFFFFFF8)
                v48 = 0x1FFFFFFFFFFFFFFFLL;
              else
                v48 = v85;
              if (v48)
                v48 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v48);
              else
                v86 = 0;
              v87 = (_QWORD *)(v48 + 8 * v84);
              *v87 = v82;
              v83 = (std::string::size_type)(v87 + 1);
              while (v76 != v77)
              {
                v88 = *((_QWORD *)v76 - 1);
                v76 -= 8;
                *--v87 = v88;
              }
              v78 = v48 + 8 * v86;
              v141.__r_.__value_.__l.__size_ = v83;
              if (v77)
                operator delete(v77);
              v77 = v87;
            }
            else
            {
              *(_QWORD *)v76 = v82;
              v83 = (std::string::size_type)(v76 + 8);
            }
            v141.__r_.__value_.__l.__size_ = v83;
            ++v79;
            v76 = (char *)v83;
          }
          v141.__r_.__value_.__r.__words[2] = v78;
          v141.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
          v89 = __p[1];
          if (__p[1] >= v140)
          {
            v48 = std::vector<std::vector<long long>>::__push_back_slow_path<std::vector<long long> const&>((uint64_t *)__p, (uint64_t)&v141);
          }
          else
          {
            *(_QWORD *)__p[1] = 0;
            v89[1] = 0;
            v89[2] = 0;
            std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v89, v77, (uint64_t)v76, (v76 - v77) >> 3);
            v48 = (unint64_t)(v89 + 3);
            v77 = (_BYTE *)v141.__r_.__value_.__r.__words[0];
          }
          __p[1] = (void *)v48;
          if (v77)
          {
            v141.__r_.__value_.__l.__size_ = (std::string::size_type)v77;
            operator delete(v77);
          }
          ++v74;
          v49 = *((_DWORD *)v14 + 15);
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)__p, 1);
        std::string::basic_string[abi:ne180100]<0>(v137, "enumeratedShapes");
        v119 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v137, (uint64_t)v137);
        v120 = (void **)(v119 + 7);
        if (*((char *)v119 + 79) < 0)
          operator delete(*v120);
        *(std::string *)v120 = v141;
        *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v141.__r_.__value_.__l.__data_);
        }
        CoreML::enumeratedShapesToString((uint64_t)&v141, (uint64_t *)__p, 0);
        std::string::basic_string[abi:ne180100]<0>(v137, "shapeFlexibility");
        v121 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>((uint64_t **)a2, v137, (uint64_t)v137);
        v122 = (void **)(v121 + 7);
        if (*((char *)v121 + 79) < 0)
          operator delete(*v122);
        *(std::string *)v122 = v141;
        *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
        v141.__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v141.__r_.__value_.__l.__data_);
        }
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::vector<std::vector<long long>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v141);
      }
      else if (v49 == 31)
      {
        v50 = 0;
        v51 = 0;
        memset(&v141, 0, sizeof(v141));
        while (1)
        {
          if (v49 == 31)
          {
            v52 = (uint64_t *)v14[5];
          }
          else
          {
            v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
            v52 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
          }
          if (v51 >= *((int *)v52 + 6))
            break;
          if (*((_DWORD *)v14 + 15) == 31)
          {
            v53 = (uint64_t *)v14[5];
            v54 = *(_QWORD *)(*(_QWORD *)(v53[4] + 8 * v51 + 8) + 16);
          }
          else
          {
            v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
            v54 = *(_QWORD *)(*(_QWORD *)(qword_1EDB92EB8 + 8 * v51 + 8) + 16);
            if (*((_DWORD *)v14 + 15) == 31)
            {
              v53 = (uint64_t *)v14[5];
            }
            else
            {
              v48 = (unint64_t)CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v48);
              v53 = &CoreML::Specification::_ArrayFeatureType_ShapeRange_default_instance_;
            }
          }
          v55 = *(_QWORD *)(*(_QWORD *)(v53[4] + 8 * v51 + 8) + 24);
          if ((unint64_t)v50 >= v141.__r_.__value_.__r.__words[2])
          {
            v57 = v141.__r_.__value_.__r.__words[0];
            v58 = (uint64_t)((uint64_t)v50 - v141.__r_.__value_.__r.__words[0]) >> 4;
            v59 = v58 + 1;
            if ((unint64_t)(v58 + 1) >> 60)
              std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
            v60 = v141.__r_.__value_.__r.__words[2] - v141.__r_.__value_.__r.__words[0];
            if ((uint64_t)(v141.__r_.__value_.__r.__words[2] - v141.__r_.__value_.__r.__words[0]) >> 3 > v59)
              v59 = v60 >> 3;
            if ((unint64_t)v60 >= 0x7FFFFFFFFFFFFFF0)
              v48 = 0xFFFFFFFFFFFFFFFLL;
            else
              v48 = v59;
            if (v48)
              v48 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<long long,long long>>>(v48);
            else
              v61 = 0;
            v62 = (_QWORD *)(v48 + 16 * v58);
            *v62 = v54;
            v62[1] = v55;
            v63 = (std::string::size_type)v62;
            if (v50 == (_QWORD *)v57)
            {
              v3 = (uint64_t **)a2;
            }
            else
            {
              v3 = (uint64_t **)a2;
              do
              {
                *(_OWORD *)(v63 - 16) = *((_OWORD *)v50 - 1);
                v63 -= 16;
                v50 -= 2;
              }
              while (v50 != (_QWORD *)v57);
              v50 = (_QWORD *)v141.__r_.__value_.__r.__words[0];
            }
            v56 = (std::string::size_type)(v62 + 2);
            v141.__r_.__value_.__r.__words[0] = v63;
            v141.__r_.__value_.__l.__size_ = (std::string::size_type)(v62 + 2);
            v141.__r_.__value_.__r.__words[2] = v48 + 16 * v61;
            if (v50)
              operator delete(v50);
          }
          else
          {
            *v50 = v54;
            v50[1] = v55;
            v56 = (std::string::size_type)(v50 + 2);
            v3 = (uint64_t **)a2;
          }
          v141.__r_.__value_.__l.__size_ = v56;
          ++v51;
          v49 = *((_DWORD *)v14 + 15);
          v50 = (_QWORD *)v56;
        }
        CoreML::dimensionRangesToString((uint64_t)__p, (uint64_t *)&v141, 1);
        std::string::basic_string[abi:ne180100]<0>(v137, "shapeRange");
        v111 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
        v112 = v111 + 7;
        if (*((char *)v111 + 79) < 0)
          operator delete(*v112);
        *(_OWORD *)v112 = *(_OWORD *)__p;
        v112[2] = v140;
        HIBYTE(v140) = 0;
        LOBYTE(__p[0]) = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v140) < 0)
            operator delete(__p[0]);
        }
        CoreML::dimensionRangesToString((uint64_t)__p, (uint64_t *)&v141, 0);
        std::string::basic_string[abi:ne180100]<0>(v137, "shapeFlexibility");
        v113 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
        v114 = v113 + 7;
        if (*((char *)v113 + 79) < 0)
          operator delete(*v114);
        *(_OWORD *)v114 = *(_OWORD *)__p;
        v114[2] = v140;
        HIBYTE(v140) = 0;
        LOBYTE(__p[0]) = 0;
        if (SHIBYTE(v138) < 0)
        {
          operator delete(v137[0]);
          if (SHIBYTE(v140) < 0)
            operator delete(__p[0]);
        }
        v73 = (void *)v141.__r_.__value_.__r.__words[0];
        if (v141.__r_.__value_.__r.__words[0])
LABEL_268:
          operator delete(v73);
      }
      return;
    case 6:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 6)
      {
        v12 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        v12 = &CoreML::Specification::_DictionaryFeatureType_default_instance_;
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, (&off_1E9568D10)[*((int *)v12 + 7)]);
      std::string::basic_string[abi:ne180100]<0>(__p, "keyType");
      v16 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      goto LABEL_138;
    case 7:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 7)
      {
        v13 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        v13 = &CoreML::Specification::_SequenceFeatureType_default_instance_;
      }
      v17 = *((_DWORD *)v13 + 9);
      if (v17)
      {
        if (v17 == 1)
          v18 = "Int64";
        else
          v18 = "String";
      }
      else
      {
        v18 = "Invalid";
      }
      std::string::basic_string[abi:ne180100]<0>(&v141, v18);
      std::string::basic_string[abi:ne180100]<0>(__p, "valueType");
      v69 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      v70 = (void **)(v69 + 7);
      if (*((char *)v69 + 79) < 0)
        operator delete(*v70);
      *(std::string *)v70 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v140) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      v71 = (uint64_t *)v13[2];
      if (!v71)
        v71 = &CoreML::Specification::_SizeRange_default_instance_;
      CoreML::rangeToString((CoreML *)&v141, v71[2], v71[3], 1);
      std::string::basic_string[abi:ne180100]<0>(__p, "sizeRange");
      v16 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
LABEL_138:
      v72 = (void **)(v16 + 7);
      if (*((char *)v16 + 79) < 0)
        operator delete(*v72);
      *(std::string *)v72 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if ((SHIBYTE(v140) & 0x80000000) == 0)
        return;
      operator delete(__p[0]);
      if ((SHIBYTE(v141.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
      v73 = (void *)v141.__r_.__value_.__r.__words[0];
      goto LABEL_268;
    case 8:
      if (*(_DWORD *)(*(_QWORD *)this + 36) == 8)
      {
        v11 = *(uint64_t **)(*(_QWORD *)this + 24);
      }
      else
      {
        v9 = CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        v11 = &CoreML::Specification::_StateFeatureType_default_instance_;
      }
      if (*((_DWORD *)v11 + 7) == 1)
      {
        v15 = (int *)v11[2];
      }
      else
      {
        CoreML::Specification::protobuf_FeatureTypes_2eproto::InitDefaults((CoreML::Specification::protobuf_FeatureTypes_2eproto *)v9);
        v15 = (int *)&CoreML::Specification::_ArrayFeatureType_default_instance_;
      }
      CoreML::dataTypeToString(&v141, v15[9]);
      std::string::basic_string[abi:ne180100]<0>(__p, "dataType");
      v64 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, __p, (uint64_t)__p);
      v65 = (void **)(v64 + 7);
      if (*((char *)v64 + 79) < 0)
        operator delete(*v65);
      *(std::string *)v65 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v140) < 0)
      {
        operator delete(__p[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v141.__r_.__value_.__l.__data_);
      }
      CoreML::defaultShapeOf((unint64_t)__p, (const CoreML::Specification::ArrayFeatureType *)v15);
      CoreML::dimensionsToString((uint64_t)&v141, __p, 1);
      std::string::basic_string[abi:ne180100]<0>(v137, "shape");
      v66 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v3, v137, (uint64_t)v137);
      v67 = (void **)(v66 + 7);
      if (*((char *)v66 + 79) < 0)
        operator delete(*v67);
      *(std::string *)v67 = v141;
      *((_BYTE *)&v141.__r_.__value_.__s + 23) = 0;
      v141.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v138) < 0)
      {
        operator delete(v137[0]);
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0)
        {
          v68 = (void *)v141.__r_.__value_.__r.__words[0];
LABEL_266:
          operator delete(v68);
        }
      }
LABEL_267:
      v73 = __p[0];
      if (__p[0])
        goto LABEL_268;
      return;
    default:
      return;
  }
}

void sub_1D3B57E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  void *v34;

  operator delete(v34);
  if (__p)
    operator delete(__p);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a10, *(_QWORD **)(a10 + 8));
  _Unwind_Resume(a1);
}

uint64_t **std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t **v6;
  _QWORD *v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v6 = (uint64_t **)v5;
        v8 = v5 + 4;
        if (!std::less<std::string>::operator()[abi:ne180100](a2, v5 + 4))
          break;
        v5 = *v6;
        v9 = v6;
        if (!*v6)
          goto LABEL_9;
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v8, a2))
        break;
      v9 = v6 + 1;
      v5 = v6[1];
      if (!v5)
        goto LABEL_9;
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_9:
    v10 = (uint64_t *)v6;
    v6 = (uint64_t **)operator new(0x50uLL);
    *((_OWORD *)v6 + 2) = *(_OWORD *)a3;
    v11 = *(uint64_t **)(a3 + 16);
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    v6[6] = v11;
    v6[7] = 0;
    v6[8] = 0;
    v6[9] = 0;
    *v6 = 0;
    v6[1] = 0;
    v6[2] = v10;
    *v9 = (uint64_t *)v6;
    v12 = (uint64_t *)**a1;
    v13 = (uint64_t *)v6;
    if (v12)
    {
      *a1 = v12;
      v13 = *v9;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v13);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v6;
}

uint64_t std::vector<std::vector<long long>>::__push_back_slow_path<std::vector<long long> const&>(uint64_t *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  __int128 v13;
  int64x2_t v14;
  char *v15;
  char *v17;
  int64x2_t v18;
  char *v19;
  _QWORD *v20;

  v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL)
    std::vector<nlohmann::basic_json<std::map,std::vector,std::string,BOOL,long long,unsigned long long,double,std::allocator,nlohmann::adl_serializer,std::vector<unsigned char>>>::__throw_length_error[abi:ne180100]();
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3)
    v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v3;
  v20 = a1 + 2;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v2];
  v17 = v7;
  v18.i64[0] = (uint64_t)v8;
  v18.i64[1] = (uint64_t)v8;
  v19 = &v7[24 * v6];
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = 0;
  std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(v8, *(const void **)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3);
  v9 = v18.i64[0];
  v10 = v18.i64[1] + 24;
  v18.i64[1] += 24;
  v12 = (_QWORD *)*a1;
  v11 = (_QWORD *)a1[1];
  if (v11 == (_QWORD *)*a1)
  {
    v14 = vdupq_n_s64((unint64_t)v11);
  }
  else
  {
    do
    {
      *(_QWORD *)(v9 - 24) = 0;
      *(_QWORD *)(v9 - 16) = 0;
      v9 -= 24;
      *(_QWORD *)(v9 + 16) = 0;
      v13 = *(_OWORD *)(v11 - 3);
      v11 -= 3;
      *(_OWORD *)v9 = v13;
      *(_QWORD *)(v9 + 16) = v11[2];
      *v11 = 0;
      v11[1] = 0;
      v11[2] = 0;
    }
    while (v11 != v12);
    v14 = *(int64x2_t *)a1;
    v10 = v18.i64[1];
  }
  *a1 = v9;
  a1[1] = v10;
  v18 = v14;
  v15 = (char *)a1[2];
  a1[2] = (uint64_t)v19;
  v19 = v15;
  v17 = (char *)v14.i64[0];
  std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)&v17);
  return v10;
}

void sub_1D3B583B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<long long>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<long long>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;
  void *v7;
  void *v8;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = (char *)v1[1];
      do
      {
        v8 = (void *)*((_QWORD *)v6 - 3);
        v6 -= 24;
        v7 = v8;
        if (v8)
        {
          *((_QWORD *)v4 - 2) = v7;
          operator delete(v7);
        }
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t CoreML::enumeratedShapesToString(uint64_t a1, uint64_t *a2, int a3)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void **v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void *__p[2];
  unsigned __int8 v17;
  void *v18[2];
  unsigned __int8 v19;
  _QWORD v20[2];
  _QWORD v21[11];
  char v22;
  uint64_t v23;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v20);
  if (a3)
    v5 = ", ";
  else
    v5 = " | ";
  std::string::basic_string[abi:ne180100]<0>(v18, v5);
  if (a3)
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"[", 1);
  v6 = *a2;
  if (a2[1] != *a2)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      CoreML::dimensionsToString((uint64_t)__p, (_QWORD *)(v6 + v7), a3);
      if ((v17 & 0x80u) == 0)
        v9 = __p;
      else
        v9 = (void **)__p[0];
      if ((v17 & 0x80u) == 0)
        v10 = v17;
      else
        v10 = (uint64_t)__p[1];
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v9, v10);
      if ((char)v17 < 0)
        operator delete(__p[0]);
      v6 = *a2;
      v11 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
      if (v8 < v11 - 1)
      {
        if ((v19 & 0x80u) == 0)
          v12 = v18;
        else
          v12 = (void **)v18[0];
        if ((v19 & 0x80u) == 0)
          v13 = v19;
        else
          v13 = (uint64_t)v18[1];
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v12, v13);
        v6 = *a2;
        v11 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
      }
      ++v8;
      v7 += 24;
    }
    while (v8 < v11);
  }
  if ((a3 & 1) != 0)
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"]", 1);
  std::stringbuf::str();
  if ((char)v19 < 0)
    operator delete(v18[0]);
  v20[0] = *MEMORY[0x1E0DE4F50];
  v14 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v20 + *(_QWORD *)(v20[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v21[0] = v14;
  v21[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v22 < 0)
    operator delete((void *)v21[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1D82519D4](&v23);
}

void sub_1D3B5863C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::pair<long long,long long>>>(unint64_t a1)
{
  if (a1 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a1);
}

uint64_t CoreML::dimensionRangesToString(uint64_t a1, uint64_t *a2, int a3)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void **v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  void *__p[2];
  unsigned __int8 v17;
  void *v18[2];
  unsigned __int8 v19;
  _QWORD v20[2];
  _QWORD v21[11];
  char v22;
  uint64_t v23;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v20);
  if (a3)
    v5 = ", ";
  else
    v5 = " × ";
  std::string::basic_string[abi:ne180100]<0>(v18, v5);
  if (a3)
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"[", 1);
  v6 = *a2;
  if (a2[1] != *a2)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      CoreML::rangeToString((CoreML *)__p, *(_QWORD *)(v6 + v7), *(_QWORD *)(v6 + v7 + 8), a3);
      if ((v17 & 0x80u) == 0)
        v9 = __p;
      else
        v9 = (void **)__p[0];
      if ((v17 & 0x80u) == 0)
        v10 = v17;
      else
        v10 = (uint64_t)__p[1];
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v9, v10);
      if ((char)v17 < 0)
        operator delete(__p[0]);
      v6 = *a2;
      v11 = (a2[1] - *a2) >> 4;
      if (v8 < v11 - 1)
      {
        if ((v19 & 0x80u) == 0)
          v12 = v18;
        else
          v12 = (void **)v18[0];
        if ((v19 & 0x80u) == 0)
          v13 = v19;
        else
          v13 = (uint64_t)v18[1];
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)v12, v13);
        v6 = *a2;
        v11 = (a2[1] - *a2) >> 4;
      }
      ++v8;
      v7 += 16;
    }
    while (v8 < v11);
  }
  if ((a3 & 1) != 0)
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"]", 1);
  std::stringbuf::str();
  if ((char)v19 < 0)
    operator delete(v18[0]);
  v20[0] = *MEMORY[0x1E0DE4F50];
  v14 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
  *(_QWORD *)((char *)v20 + *(_QWORD *)(v20[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 64);
  v21[0] = v14;
  v21[1] = MEMORY[0x1E0DE4FB8] + 16;
  if (v22 < 0)
    operator delete((void *)v21[9]);
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1D82519D4](&v23);
}

void sub_1D3B588A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a22);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<std::vector<long long>>::~__split_buffer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != v3)
  {
    v4 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v4)
    {
      *(_QWORD *)(v2 - 16) = v4;
      operator delete(v4);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void CoreML::Specification::DictVectorizer::~DictVectorizer(CoreML::Specification::DictVectorizer *this)
{
  CoreML::Specification::DictVectorizer::~DictVectorizer(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E955B830;
  if (*((_DWORD *)this + 7))
    CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::DictVectorizer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.DictVectorizer");
}

CoreML::Specification::DictVectorizer *CoreML::Specification::DictVectorizer::New(CoreML::Specification::DictVectorizer *this)
{
  return CoreML::Specification::DictVectorizer::New(this, 0);
}

CoreML::Specification::DictVectorizer *CoreML::Specification::DictVectorizer::New(CoreML::Specification::DictVectorizer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::DictVectorizer *v3;

  v3 = (CoreML::Specification::DictVectorizer *)operator new();
  CoreML::Specification::DictVectorizer::DictVectorizer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::DictVectorizer>(a2, v3);
  return v3;
}

void sub_1D3B589E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DictVectorizer::IsInitialized(CoreML::Specification::DictVectorizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::DictVectorizer::MergePartialFromCodedStream(CoreML::Specification::DictVectorizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::StringVector *v10;
  CoreML::Specification::Int64Vector *v11;
  char *v13;
  int v14;
  char *v15;
  int VarintSizeAsIntFallback;
  int v17;
  unsigned int v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t result;
  int v23;
  unsigned int v24;
  int v25;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_18;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        goto LABEL_18;
LABEL_7:
      if (v7 >> 3 != 2)
        break;
      if (v7 != 18)
        goto LABEL_18;
      if (*((_DWORD *)this + 7) == 2)
      {
        v11 = (CoreML::Specification::Int64Vector *)*((_QWORD *)this + 2);
      }
      else
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 2;
        v11 = (CoreML::Specification::Int64Vector *)operator new();
        CoreML::Specification::Int64Vector::Int64Vector(v11);
        *((_QWORD *)this + 2) = v11;
      }
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v25 = *((_DWORD *)a2 + 13);
      v20 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 13) = v25;
      if (v25 < 0 != v20)
        return 0;
      v21 = v23;
      result = CoreML::Specification::Int64Vector::MergePartialFromCodedStream(v11, a2, v24);
      if (!(_DWORD)result)
        return result;
LABEL_39:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21))
        return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      if (*((_DWORD *)this + 7) == 1)
      {
        v10 = (CoreML::Specification::StringVector *)*((_QWORD *)this + 2);
      }
      else
      {
        CoreML::Specification::MILSpec::Dimension::clear_dimension((uint64_t)this);
        *((_DWORD *)this + 7) = 1;
        v10 = (CoreML::Specification::StringVector *)operator new();
        CoreML::Specification::StringVector::StringVector(v10);
        *((_QWORD *)this + 2) = v10;
      }
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
      {
        v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v14 < 0)
          return 0;
      }
      else
      {
        v14 = *v13;
        *(_QWORD *)a2 = v13 + 1;
      }
      v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
      v19 = *((_DWORD *)a2 + 13);
      v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 13) = v19;
      if (v19 < 0 != v20)
        return 0;
      v21 = v17;
      result = CoreML::Specification::StringVector::MergePartialFromCodedStream(v10, (char **)a2, v18);
      if (!(_DWORD)result)
        return result;
      goto LABEL_39;
    }
LABEL_18:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B58C50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DictVectorizer::ByteSizeLong(CoreML::Specification::DictVectorizer *this)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *((_DWORD *)this + 7);
  if (v2 == 2)
  {
    v3 = CoreML::Specification::Int64Vector::ByteSizeLong(*((CoreML::Specification::Int64Vector **)this + 2));
  }
  else
  {
    if (v2 != 1)
    {
      result = 0;
      goto LABEL_7;
    }
    v3 = CoreML::Specification::StringVector::ByteSizeLong(*((CoreML::Specification::StringVector **)this + 2));
  }
  result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::DictVectorizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if (v6 == 1)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 2)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), a2, a4);
  return this;
}

uint64_t CoreML::Specification::DictVectorizer::GetCachedSize(CoreML::Specification::DictVectorizer *this)
{
  return *((unsigned int *)this + 6);
}

std::string *CoreML::Specification::DictVectorizer::MergeFrom(std::string *this, const CoreML::Specification::DictVectorizer *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  CoreML::Specification::StringVector *v6;
  CoreML::Specification::Int64Vector *v7;
  CoreML::Specification::StringVector *v8;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *v9;
  CoreML::Specification::Int64Vector *v10;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v11;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 7);
  if (v5 == 2)
  {
    if (*(_DWORD *)(v3 + 28) == 2)
    {
      v7 = *(CoreML::Specification::Int64Vector **)(v3 + 16);
    }
    else
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 2;
      v7 = (CoreML::Specification::Int64Vector *)operator new();
      v10 = CoreML::Specification::Int64Vector::Int64Vector(v7);
      *(_QWORD *)(v3 + 16) = v7;
      if (*((_DWORD *)a2 + 7) != 2)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v10);
        v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_Int64Vector_default_instance_;
        return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v7, v11);
      }
    }
    v11 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 2);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v7, v11);
  }
  if (v5 == 1)
  {
    if (*(_DWORD *)(v3 + 28) == 1)
    {
      v6 = *(CoreML::Specification::StringVector **)(v3 + 16);
    }
    else
    {
      CoreML::Specification::MILSpec::Dimension::clear_dimension(v3);
      *(_DWORD *)(v3 + 28) = 1;
      v6 = (CoreML::Specification::StringVector *)operator new();
      v8 = CoreML::Specification::StringVector::StringVector(v6);
      *(_QWORD *)(v3 + 16) = v6;
      if (*((_DWORD *)a2 + 7) != 1)
      {
        CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults(v8);
        v9 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)&CoreML::Specification::_StringVector_default_instance_;
        return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v6, v9);
      }
    }
    v9 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedStrings *)*((_QWORD *)a2 + 2);
    return CoreML::Specification::MILSpec::TensorValue_RepeatedStrings::MergeFrom((std::string *)v6, v9);
  }
  return this;
}

void sub_1D3B58EA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::DictVectorizer *CoreML::Specification::DictVectorizer::DictVectorizer(CoreML::Specification::DictVectorizer *this)
{
  *(_QWORD *)this = &off_1E955B830;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::DictVectorizer *)&CoreML::Specification::_DictVectorizer_default_instance_)
    CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(this);
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B58F2C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::DictVectorizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::DictVectorizer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::DictVectorizer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

unint64_t *CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(CoreML::Specification::protobuf_DictVectorizer_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_DictVectorizer_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_DictVectorizer_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

unint64_t *CoreML::Specification::protobuf_DictVectorizer_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_DictVectorizer_2eproto::TableStruct *this)
{
  unint64_t *inited;
  unint64_t *result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  result = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::_DictVectorizer_default_instance_ = (uint64_t)&off_1E955B830;
  *(_QWORD *)algn_1EDB8FE50 = 0;
  qword_1EDB8FE60 = 0;
  byte_1EDB8FE68 = 1;
  return result;
}

void CoreML::Specification::NeuralNetwork::~NeuralNetwork(CoreML::Specification::NeuralNetwork *this)
{
  CoreML::Specification::NeuralNetwork::~NeuralNetwork(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E955B408;
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    v2 = *((_QWORD *)this + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::NeuralNetwork::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetwork");
}

CoreML::Specification::NeuralNetwork *CoreML::Specification::NeuralNetwork::New(CoreML::Specification::NeuralNetwork *this)
{
  return CoreML::Specification::NeuralNetwork::New(this, 0);
}

CoreML::Specification::NeuralNetwork *CoreML::Specification::NeuralNetwork::New(CoreML::Specification::NeuralNetwork *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::NeuralNetwork *v3;

  v3 = (CoreML::Specification::NeuralNetwork *)operator new();
  CoreML::Specification::NeuralNetwork::NeuralNetwork(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::NeuralNetwork>(a2, v3);
  return v3;
}

void sub_1D3B59108(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetwork::Clear(CoreML::Specification::NeuralNetwork *this)
{
  uint64_t v2;
  CoreML::Specification::NeuralNetworkLayer **v3;
  CoreML::Specification::NeuralNetworkLayer *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;

  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (CoreML::Specification::NeuralNetworkLayer **)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      CoreML::Specification::NeuralNetworkLayer::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    v6 = (uint64_t *)(*((_QWORD *)this + 7) + 8);
    do
    {
      v7 = *v6++;
      CoreML::Specification::NeuralNetworkPreprocessing::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 12) = 0;
  }
  v10 = *((_QWORD *)this + 8);
  v9 = (_QWORD *)((char *)this + 64);
  result = v10;
  if (v10)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *v9 = 0;
  v9[1] = 0;
  return result;
}

uint64_t CoreML::Specification::NeuralNetwork::IsInitialized(CoreML::Specification::NeuralNetwork *this)
{
  return 1;
}

uint64_t CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(CoreML::Specification::NeuralNetwork *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int TagFallback;
  CoreML::Specification::NeuralNetworkLayer *v12;
  char *v13;
  int VarintSizeAsIntFallback;
  CoreML::Specification::NeuralNetworkPreprocessing *v15;
  char *v16;
  int v17;
  char *v18;
  int v19;
  char *v20;
  int v21;
  CoreML::Specification::NetworkUpdateParameters *v22;
  char *v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  BOOL v28;
  int v29;
  uint64_t result;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  uint64_t Varint32Fallback;
  uint64_t v38;

  v5 = (char *)this + 40;
  v6 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      v7 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v8) = 0;
LABEL_7:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_8;
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10)
            goto LABEL_8;
          v12 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>((uint64_t)v6);
          v13 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v13;
            *(_QWORD *)a2 = v13 + 1;
          }
          v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v27 = *((_DWORD *)a2 + 13);
          v28 = __OFSUB__(v27--, 1);
          *((_DWORD *)a2 + 13) = v27;
          if (v27 < 0 != v28)
            return 0;
          v29 = v25;
          result = CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(v12, a2, v26);
          if (!(_DWORD)result)
            return result;
          goto LABEL_48;
        case 2u:
          if (v9 != 18)
            goto LABEL_8;
          v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((uint64_t)v5);
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v17 < 0)
              return 0;
          }
          else
          {
            v17 = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
          v33 = *((_DWORD *)a2 + 13);
          v28 = __OFSUB__(v33--, 1);
          *((_DWORD *)a2 + 13) = v33;
          if (v33 < 0 != v28)
            return 0;
          v29 = v31;
          result = CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(v15, a2, v32);
          if (!(_DWORD)result)
            return result;
          goto LABEL_48;
        case 5u:
          if (v9 != 40)
            goto LABEL_8;
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            v19 = 0;
          }
          else
          {
            v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *(_QWORD *)a2 = v18 + 1;
              goto LABEL_52;
            }
          }
          Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          v19 = Varint32Fallback;
          if (Varint32Fallback < 0)
            return 0;
LABEL_52:
          *((_DWORD *)this + 18) = v19;
          continue;
        case 6u:
          if (v9 != 48)
            goto LABEL_8;
          v20 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            v21 = 0;
          }
          else
          {
            v21 = *v20;
            if ((*v20 & 0x80000000) == 0)
            {
              *(_QWORD *)a2 = v20 + 1;
              goto LABEL_55;
            }
          }
          v38 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v21);
          v21 = v38;
          if (v38 < 0)
            return 0;
LABEL_55:
          *((_DWORD *)this + 19) = v21;
          break;
        case 0xAu:
          if (v9 != 82)
            goto LABEL_8;
          v22 = (CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)this + 8);
          if (!v22)
          {
            v22 = (CoreML::Specification::NetworkUpdateParameters *)operator new();
            CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(v22);
            *((_QWORD *)this + 8) = v22;
          }
          v23 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v23 < 0)
          {
            v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0)
              return 0;
          }
          else
          {
            v24 = *v23;
            *(_QWORD *)a2 = v23 + 1;
          }
          v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          v36 = *((_DWORD *)a2 + 13);
          v28 = __OFSUB__(v36--, 1);
          *((_DWORD *)a2 + 13) = v36;
          if (v36 < 0 != v28)
            return 0;
          v29 = v34;
          result = CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(v22, a2, v35);
          if (!(_DWORD)result)
            return result;
LABEL_48:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29))
            return 0;
          continue;
        default:
          goto LABEL_8;
      }
    }
    v8 = *v7;
    if (*v7 < 1)
      goto LABEL_7;
    *(_QWORD *)a2 = v7 + 1;
    v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0)
      goto LABEL_14;
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B594E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetwork::ByteSizeLong(CoreML::Specification::NeuralNetwork *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  CoreML::Specification::NetworkUpdateParameters *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((unsigned int *)this + 12);
  v7 = v4 + v6;
  if ((_DWORD)v6)
  {
    v8 = 0;
    do
    {
      v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((_QWORD *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while ((_DWORD)v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    v10 = (CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)this + 8);
    if (v10)
    {
      v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v12 = 11;
  v13 = *((_DWORD *)this + 18);
  v14 = *((_DWORD *)this + 19);
  v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0)
    v12 = v15;
  v16 = v12 + v7;
  if (!v13)
    v16 = v7;
  v17 = 11;
  v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0)
    v17 = v18;
  v19 = v17 + v16;
  if (v14)
    result = v19;
  else
    result = v16;
  *((_DWORD *)this + 20) = result;
  return result;
}

uint64_t CoreML::Specification::NeuralNetwork::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int i;
  int v8;
  int j;
  signed int v10;
  signed int v11;
  uint64_t v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (j = 0; j != v8; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * j + 8), a2, a4);
  }
  v10 = *(_DWORD *)(v5 + 72);
  if (v10)
    this = google::protobuf::internal::WireFormatLite::WriteEnum(5, v10, a2, a4);
  v11 = *(_DWORD *)(v5 + 76);
  if (v11)
    this = google::protobuf::internal::WireFormatLite::WriteEnum(6, v11, a2, a4);
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetwork_default_instance_)
  {
    v12 = *(_QWORD *)(v5 + 64);
    if (v12)
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetwork::GetCachedSize(CoreML::Specification::NeuralNetwork *this)
{
  return *((unsigned int *)this + 20);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(CoreML::Specification::NeuralNetworkLayer *this)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = *((unsigned int *)this + 6);
  if ((int)v2 < 1)
  {
    v4 = *((unsigned int *)this + 6);
  }
  else
  {
    v3 = (uint64_t *)(*((_QWORD *)this + 4) + 8);
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = *v3++;
      v6 = *(unsigned __int8 *)(v5 + 23);
      v7 = *(_QWORD *)(v5 + 8);
      if ((v6 & 0x80u) == 0)
        v7 = v6;
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  v8 = *((unsigned int *)this + 12);
  v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    v10 = (uint64_t *)(*((_QWORD *)this + 7) + 8);
    do
    {
      v11 = *v10++;
      v12 = *(unsigned __int8 *)(v11 + 23);
      v13 = *(_QWORD *)(v11 + 8);
      if ((v12 & 0x80u) == 0)
        v13 = v12;
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  v14 = *((unsigned int *)this + 18);
  v15 = v9 + v14;
  if ((_DWORD)v14)
  {
    v16 = 0;
    do
    {
      v17 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((_QWORD *)this + 10)
                                                                                          + 8 * v16
                                                                                          + 8));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      ++v16;
    }
    while ((_DWORD)v14 != v16);
  }
  v18 = *((unsigned int *)this + 24);
  v19 = v15 + v18;
  if ((_DWORD)v18)
  {
    v20 = 0;
    do
    {
      v21 = CoreML::Specification::Tensor::ByteSizeLong(*(CoreML::Specification::Tensor **)(*((_QWORD *)this + 13)
                                                                                          + 8 * v20
                                                                                          + 8));
      v19 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      ++v20;
    }
    while ((_DWORD)v18 != v20);
  }
  v22 = *((_QWORD *)this + 14);
  v23 = *(unsigned __int8 *)(v22 + 23);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(_QWORD *)(v22 + 8))
      goto LABEL_24;
  }
  else if (!*(_BYTE *)(v22 + 23))
  {
    goto LABEL_24;
  }
  v24 = *(_QWORD *)(v22 + 8);
  if ((v23 & 0x80u) == 0)
    v24 = v23;
  v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  if (*((_BYTE *)this + 120))
    v19 += 2;
  v25 = *((_DWORD *)this + 35);
  if (v25 <= 879)
  {
    if (v25 > 604)
    {
      if (v25 <= 759)
      {
        if (v25 > 684)
        {
          if (v25 > 729)
          {
            if (v25 <= 739)
            {
              if (v25 != 730 && v25 != 735)
                goto LABEL_370;
            }
            else if (v25 != 740 && v25 != 750 && v25 != 755)
            {
              goto LABEL_370;
            }
          }
          else if (v25 <= 709)
          {
            if (v25 != 685 && v25 != 700)
              goto LABEL_370;
          }
          else if (v25 != 710 && v25 != 715 && v25 != 720)
          {
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 <= 639)
        {
          if (v25 <= 619)
          {
            if (v25 == 605)
            {
              v26 = CoreML::Specification::BranchLayerParams::ByteSizeLong(*((CoreML::Specification::BranchLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            if (v25 == 615)
            {
              v26 = CoreML::Specification::LoopLayerParams::ByteSizeLong(*((CoreML::Specification::LoopLayerParams **)this
                                                                         + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          if (v25 == 620 || v25 == 625)
            goto LABEL_331;
          if (v25 != 635)
            goto LABEL_370;
          v27 = *((_QWORD *)this + 16);
          v28 = 5;
          if (*(float *)(v27 + 16) == 0.0)
            v28 = 0;
          if (*(float *)(v27 + 20) != 0.0)
            v28 += 5;
          if (*(float *)(v27 + 24) != 0.0)
            v28 += 5;
          *(_DWORD *)(v27 + 28) = v28;
          goto LABEL_281;
        }
        if (v25 > 664)
        {
          if (v25 != 665 && v25 != 670 && v25 != 680)
            goto LABEL_370;
          goto LABEL_331;
        }
        if (v25 != 640 && v25 != 660)
          goto LABEL_370;
LABEL_275:
        v35 = *((_QWORD *)this + 16);
        v28 = 5;
        if (*(float *)(v35 + 16) == 0.0)
          v28 = 0;
        v38 = v28 + 5;
        v39 = *(float *)(v35 + 20) == 0.0;
LABEL_278:
        if (!v39)
          v28 = v38;
        goto LABEL_280;
      }
      if (v25 > 824)
      {
        if (v25 <= 849)
        {
          switch(v25)
          {
            case 825:
            case 827:
            case 830:
            case 832:
              goto LABEL_86;
            case 826:
            case 828:
            case 829:
            case 831:
              goto LABEL_370;
            default:
              if (v25 == 840 || v25 == 845)
                goto LABEL_331;
              break;
          }
          goto LABEL_370;
        }
        if (v25 <= 864)
        {
          if (v25 != 850 && v25 != 855)
            goto LABEL_370;
        }
        else if (v25 != 865 && v25 != 870 && v25 != 875)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 789)
      {
        if (v25 > 774)
        {
          if (v25 != 775 && v25 != 780)
            goto LABEL_370;
        }
        else if (v25 != 760 && v25 != 770)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 > 814)
      {
        if (v25 != 815 && v25 != 820)
          goto LABEL_370;
        goto LABEL_86;
      }
      if (v25 == 790)
        goto LABEL_331;
      if (v25 != 795)
        goto LABEL_370;
      goto LABEL_211;
    }
    if (v25 <= 249)
    {
      if (v25 <= 189)
      {
        if (v25 <= 159)
        {
          if (v25 <= 129)
          {
            if (v25 == 100)
            {
              v26 = CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(*((CoreML::Specification::ConvolutionLayerParams **)this
                                                                                + 16));
              goto LABEL_368;
            }
            if (v25 == 120)
            {
              v26 = CoreML::Specification::PoolingLayerParams::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
          }
          else
          {
            switch(v25)
            {
              case 130:
                v26 = CoreML::Specification::ActivationParams::ByteSizeLong(*((CoreML::Specification::ActivationParams **)this
                                                                            + 16));
                goto LABEL_368;
              case 140:
                v26 = CoreML::Specification::InnerProductLayerParams::ByteSizeLong(*((CoreML::Specification::InnerProductLayerParams **)this
                                                                                   + 16));
                goto LABEL_368;
              case 150:
                v26 = CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingLayerParams **)this
                                                                                + 16));
LABEL_368:
                v42 = v19 + v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
                goto LABEL_369;
            }
          }
          goto LABEL_370;
        }
        if (v25 > 169)
        {
          if (v25 != 170)
          {
            if (v25 != 175)
            {
              if (v25 == 180)
              {
                v26 = CoreML::Specification::LRNLayerParams::ByteSizeLong(*((CoreML::Specification::LRNLayerParams **)this
                                                                          + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_331;
          }
          goto LABEL_86;
        }
        if (v25 == 160)
        {
          v26 = CoreML::Specification::BatchnormLayerParams::ByteSizeLong(*((CoreML::Specification::BatchnormLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        if (v25 != 165)
          goto LABEL_370;
        v35 = *((_QWORD *)this + 16);
        v28 = 2 * *(unsigned __int8 *)(v35 + 16);
        if (*(_BYTE *)(v35 + 17))
          v28 += 2;
        v38 = v28 + 5;
        v39 = *(float *)(v35 + 20) == 0.0;
        goto LABEL_278;
      }
      if (v25 <= 219)
      {
        if (v25 <= 209)
        {
          if (v25 == 190)
          {
            v26 = CoreML::Specification::CropLayerParams::ByteSizeLong(*((CoreML::Specification::CropLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 == 200)
          {
            v26 = (uint64_t)CoreML::Specification::PaddingLayerParams::ByteSizeLong(*((CoreML::Specification::PaddingLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 210:
              v26 = CoreML::Specification::UpsampleLayerParams::ByteSizeLong(*((CoreML::Specification::UpsampleLayerParams **)this
                                                                             + 16));
              goto LABEL_368;
            case 211:
              v26 = CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(*((CoreML::Specification::ResizeBilinearLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            case 212:
              v26 = CoreML::Specification::CropResizeLayerParams::ByteSizeLong(*((CoreML::Specification::CropResizeLayerParams **)this
                                                                               + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 <= 230)
      {
        if (v25 == 220)
        {
          v26 = CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(*((CoreML::Specification::UnaryFunctionLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        }
        if (v25 != 230)
          goto LABEL_370;
      }
      else if (v25 != 231)
      {
        if (v25 != 240)
        {
          if (v25 == 245)
          {
            v26 = CoreML::Specification::ScaleLayerParams::ByteSizeLong(*((CoreML::Specification::ScaleLayerParams **)this
                                                                        + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      goto LABEL_86;
    }
    if (v25 <= 329)
    {
      if (v25 <= 289)
      {
        if (v25 <= 260)
        {
          if (v25 == 250)
          {
            v26 = CoreML::Specification::BiasLayerParams::ByteSizeLong(*((CoreML::Specification::BiasLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          if (v25 != 260)
            goto LABEL_370;
          goto LABEL_331;
        }
        if (v25 != 261)
        {
          if (v25 != 270)
          {
            if (v25 == 280)
            {
              v26 = CoreML::Specification::ReduceLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLayerParams **)this
                                                                           + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          v40 = *((_QWORD *)this + 16);
          v41 = *(unsigned __int8 *)(v40 + 16);
          *(_DWORD *)(v40 + 20) = 2 * v41;
          v31 = v19 + 2 * v41;
LABEL_282:
          v19 = v31 + 3;
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 300)
      {
        if (v25 == 290)
        {
          v26 = CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantLayerParams **)this
                                                                             + 16));
          goto LABEL_368;
        }
        if (v25 == 300)
        {
          v26 = CoreML::Specification::ReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 != 301)
      {
        if (v25 == 310)
        {
          v26 = CoreML::Specification::PermuteLayerParams::ByteSizeLong(*((CoreML::Specification::PermuteLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        if (v25 != 320)
          goto LABEL_370;
        v30 = *((_QWORD *)this + 16);
        v28 = 3;
        if (!*(_BYTE *)(v30 + 16))
          v28 = 0;
        goto LABEL_216;
      }
LABEL_211:
      v30 = *((_QWORD *)this + 16);
      v32 = *(_DWORD *)(v30 + 16);
      v33 = 11;
      v34 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v32 >= 0)
        v33 = v34;
      if (v32)
        v28 = v33;
      else
        v28 = 0;
      goto LABEL_216;
    }
    if (v25 > 409)
    {
      if (v25 <= 429)
      {
        if (v25 == 410)
        {
          v26 = CoreML::Specification::GRULayerParams::ByteSizeLong(*((CoreML::Specification::GRULayerParams **)this + 16));
          goto LABEL_368;
        }
        if (v25 == 420)
        {
          v26 = CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::UniDirectionalLSTMLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 430)
      {
        v26 = CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(*((CoreML::Specification::BiDirectionalLSTMLayerParams **)this
                                                                                + 16));
        goto LABEL_368;
      }
      if (v25 == 500)
      {
        v26 = CoreML::Specification::CustomLayerParams::ByteSizeLong(*((CoreML::Specification::CustomLayerParams **)this
                                                                     + 16));
        goto LABEL_368;
      }
      if (v25 != 600)
        goto LABEL_370;
      goto LABEL_331;
    }
    if (v25 > 344)
    {
      switch(v25)
      {
        case 345:
          v26 = CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(*((CoreML::Specification::ReorganizeDataLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        case 350:
          v26 = CoreML::Specification::SliceLayerParams::ByteSizeLong(*((CoreML::Specification::SliceLayerParams **)this
                                                                      + 16));
          goto LABEL_368;
        case 400:
          v26 = CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(*((CoreML::Specification::SimpleRecurrentLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
      }
      goto LABEL_370;
    }
    if (v25 != 330 && v25 != 340)
      goto LABEL_370;
LABEL_253:
    v35 = *((_QWORD *)this + 16);
    v36 = *(_QWORD *)(v35 + 16);
    v37 = (9 * (__clz(v36 | 1) ^ 0x3F) + 73) >> 6;
    if (v36)
      v28 = v37 + 1;
    else
      v28 = 0;
LABEL_280:
    *(_DWORD *)(v35 + 24) = v28;
    goto LABEL_281;
  }
  if (v25 <= 1139)
  {
    if (v25 > 994)
    {
      if (v25 > 1079)
      {
        if (v25 <= 1109)
        {
          if (v25 <= 1089)
          {
            if (v25 != 1080)
            {
              if (v25 == 1085)
              {
                v26 = CoreML::Specification::FillStaticLayerParams::ByteSizeLong(*((CoreML::Specification::FillStaticLayerParams **)this
                                                                                 + 16));
                goto LABEL_368;
              }
              goto LABEL_370;
            }
            goto LABEL_86;
          }
          if (v25 == 1090)
          {
LABEL_86:
            v30 = *((_QWORD *)this + 16);
            v28 = 5;
            if (*(float *)(v30 + 16) == 0.0)
              v28 = 0;
LABEL_216:
            *(_DWORD *)(v30 + 20) = v28;
LABEL_281:
            v31 = v19 + v28;
            goto LABEL_282;
          }
          if (v25 != 1100)
          {
            if (v25 == 1105)
            {
              v26 = CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(*((CoreML::Specification::BroadcastToStaticLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
LABEL_331:
          *(_DWORD *)(*((_QWORD *)this + 16) + 16) = 0;
          v19 += 3;
          goto LABEL_370;
        }
        if (v25 <= 1124)
        {
          if (v25 != 1110)
          {
            if (v25 == 1120)
            {
              v26 = CoreML::Specification::SqueezeLayerParams::ByteSizeLong(*((CoreML::Specification::SqueezeLayerParams **)this
                                                                            + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 == 1125)
        {
          v26 = CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(*((CoreML::Specification::ExpandDimsLayerParams **)this
                                                                           + 16));
          goto LABEL_368;
        }
        if (v25 != 1130)
        {
          if (v25 != 1135)
            goto LABEL_370;
          goto LABEL_331;
        }
        goto LABEL_253;
      }
      if (v25 > 1024)
      {
        if (v25 > 1044)
        {
          if (v25 == 1045)
          {
            v26 = CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(*((CoreML::Specification::BatchedMatMulLayerParams **)this
                                                                                + 16));
            goto LABEL_368;
          }
          if (v25 != 1065)
          {
            if (v25 == 1070)
            {
              v26 = CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(*((CoreML::Specification::LoadConstantNDLayerParams **)this
                                                                                   + 16));
              goto LABEL_368;
            }
            goto LABEL_370;
          }
          goto LABEL_331;
        }
        if (v25 != 1025)
        {
          if (v25 == 1040)
          {
            v26 = CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(*((CoreML::Specification::EmbeddingNDLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
      }
      else
      {
        if (v25 <= 1004)
        {
          if (v25 == 995)
          {
            v26 = CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(*((CoreML::Specification::SliceStaticLayerParams **)this
                                                                              + 16));
            goto LABEL_368;
          }
          if (v25 == 1000)
          {
            v26 = CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::SliceDynamicLayerParams **)this
                                                                               + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        if (v25 == 1005)
        {
          v26 = CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(*((CoreML::Specification::SlidingWindowsLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        if (v25 == 1015)
        {
          v26 = CoreML::Specification::TopKLayerParams::ByteSizeLong(*((CoreML::Specification::TopKLayerParams **)this
                                                                     + 16));
          goto LABEL_368;
        }
        if (v25 != 1020)
          goto LABEL_370;
      }
      goto LABEL_82;
    }
    if (v25 <= 939)
    {
      if (v25 <= 904)
      {
        if (v25 <= 889)
        {
          if (v25 != 880 && v25 != 885)
            goto LABEL_370;
        }
        else if (v25 != 890 && v25 != 895 && v25 != 900)
        {
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 <= 924)
      {
        if (v25 != 905)
        {
          if (v25 == 920)
          {
            v26 = CoreML::Specification::TileLayerParams::ByteSizeLong(*((CoreML::Specification::TileLayerParams **)this
                                                                       + 16));
            goto LABEL_368;
          }
          goto LABEL_370;
        }
        goto LABEL_331;
      }
      if (v25 != 925 && v25 != 930)
      {
        if (v25 == 935)
        {
          v26 = CoreML::Specification::ScatterLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterLayerParams **)this
                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_253;
    }
    if (v25 <= 959)
    {
      switch(v25)
      {
        case 945:
          goto LABEL_211;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          goto LABEL_370;
        case 950:
        case 952:
          goto LABEL_253;
        case 954:
          v26 = CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(*((CoreML::Specification::ScatterAlongAxisLayerParams **)this
                                                                                 + 16));
          goto LABEL_368;
        default:
          if (v25 == 940)
            goto LABEL_331;
          break;
      }
      goto LABEL_370;
    }
    if (v25 > 974)
    {
      if (v25 == 975)
      {
        v26 = CoreML::Specification::SplitNDLayerParams::ByteSizeLong(*((CoreML::Specification::SplitNDLayerParams **)this
                                                                      + 16));
        goto LABEL_368;
      }
      if (v25 != 980)
      {
        if (v25 == 985)
        {
          v26 = CoreML::Specification::TransposeLayerParams::ByteSizeLong(*((CoreML::Specification::TransposeLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
LABEL_82:
      v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(*((_QWORD *)this + 16));
      goto LABEL_365;
    }
    if (v25 != 960)
    {
      if (v25 == 965)
      {
        v26 = CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(*((CoreML::Specification::ReverseSeqLayerParams **)this
                                                                         + 16));
        goto LABEL_368;
      }
      goto LABEL_370;
    }
    v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(*((unsigned int **)this + 16));
LABEL_365:
    v42 = v19 + v29;
LABEL_369:
    v19 = v42 + 2;
    goto LABEL_370;
  }
  if (v25 <= 1274)
  {
    if (v25 <= 1199)
    {
      if (v25 > 1169)
      {
        if (v25 <= 1179)
        {
          if (v25 == 1170)
          {
            v26 = CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalLikeLayerParams **)this
                                                                                   + 16));
            goto LABEL_368;
          }
          if (v25 == 1175)
          {
            v26 = CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalStaticLayerParams **)this
                                                                                     + 16));
            goto LABEL_368;
          }
        }
        else
        {
          switch(v25)
          {
            case 1180:
              v26 = CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomNormalDynamicLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
            case 1190:
              v26 = CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformLikeLayerParams **)this
                                                                                      + 16));
              goto LABEL_368;
            case 1195:
              v26 = CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformStaticLayerParams **)this
                                                                                        + 16));
              goto LABEL_368;
          }
        }
        goto LABEL_370;
      }
      if (v25 > 1149)
      {
        if (v25 == 1150)
        {
          v26 = CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(*((CoreML::Specification::RankPreservingReshapeLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        }
        if (v25 == 1155)
        {
          v26 = CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(*((CoreML::Specification::ConstantPaddingLayerParams **)this
                                                                                + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      if (v25 == 1140)
      {
        v26 = CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(*((CoreML::Specification::ReshapeStaticLayerParams **)this
                                                                            + 16));
        goto LABEL_368;
      }
      if (v25 != 1145)
        goto LABEL_370;
      goto LABEL_331;
    }
    if (v25 > 1249)
    {
      if (v25 <= 1259)
      {
        if (v25 == 1250)
        {
          v26 = CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL1LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
        if (v25 == 1255)
        {
          v26 = CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(*((CoreML::Specification::ReduceL2LayerParams **)this
                                                                         + 16));
          goto LABEL_368;
        }
      }
      else
      {
        switch(v25)
        {
          case 1260:
            v26 = CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMaxLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1265:
            v26 = CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMinLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
          case 1270:
            v26 = CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumLayerParams **)this
                                                                            + 16));
            goto LABEL_368;
        }
      }
      goto LABEL_370;
    }
    if (v25 <= 1214)
    {
      if (v25 == 1200)
      {
        v26 = CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(*((CoreML::Specification::RandomUniformDynamicLayerParams **)this
                                                                                   + 16));
        goto LABEL_368;
      }
      if (v25 != 1210)
        goto LABEL_370;
    }
    else
    {
      if (v25 == 1215)
      {
        v26 = CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(*((CoreML::Specification::RandomBernoulliStaticLayerParams **)this
                                                                                    + 16));
        goto LABEL_368;
      }
      if (v25 != 1220)
      {
        if (v25 == 1230)
        {
          v26 = CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(*((CoreML::Specification::CategoricalDistributionLayerParams **)this
                                                                                        + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
    }
    v29 = google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(*((_QWORD *)this + 16));
    goto LABEL_365;
  }
  if (v25 > 1349)
  {
    if (v25 <= 1454)
    {
      switch(v25)
      {
        case 1350:
          v26 = CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(*((CoreML::Specification::LayerNormalizationLayerParams **)this
                                                                                   + 16));
          goto LABEL_368;
        case 1400:
          v26 = CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(*((CoreML::Specification::NonMaximumSuppressionLayerParams **)this
                                                                                      + 16));
          goto LABEL_368;
        case 1450:
          v26 = CoreML::Specification::OneHotLayerParams::ByteSizeLong(*((CoreML::Specification::OneHotLayerParams **)this
                                                                       + 16));
          goto LABEL_368;
      }
    }
    else
    {
      switch(v25)
      {
        case 1455:
          v31 = v19
              + CoreML::Specification::CumSumLayerParams::ByteSizeLong(*((CoreML::Specification::CumSumLayerParams **)this
                                                                       + 16));
          goto LABEL_282;
        case 1460:
          goto LABEL_275;
        case 1461:
          goto LABEL_82;
        case 1465:
          v26 = CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(*((CoreML::Specification::Pooling3DLayerParams **)this
                                                                          + 16));
          goto LABEL_368;
        case 1466:
          goto LABEL_211;
        case 1470:
          v26 = CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(*((CoreML::Specification::SliceBySizeLayerParams **)this
                                                                            + 16));
          goto LABEL_368;
        case 1471:
          v26 = CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(*((CoreML::Specification::Convolution3DLayerParams **)this
                                                                              + 16));
          goto LABEL_368;
        default:
          goto LABEL_370;
      }
    }
    goto LABEL_370;
  }
  if (v25 > 1312)
  {
    if (v25 <= 1319)
    {
      if (v25 != 1313)
      {
        if (v25 == 1315)
        {
          v26 = CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(*((CoreML::Specification::MatrixBandPartLayerParams **)this
                                                                               + 16));
          goto LABEL_368;
        }
        goto LABEL_370;
      }
      goto LABEL_331;
    }
    if (v25 != 1320 && v25 != 1325)
    {
      if (v25 != 1330)
        goto LABEL_370;
      goto LABEL_331;
    }
    goto LABEL_253;
  }
  if (v25 <= 1284)
  {
    if (v25 == 1275)
    {
      v26 = CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceProdLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
    if (v25 == 1280)
    {
      v26 = CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceMeanLayerParams **)this
                                                                       + 16));
      goto LABEL_368;
    }
  }
  else
  {
    switch(v25)
    {
      case 1285:
        v26 = CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumLayerParams **)this
                                                                           + 16));
        goto LABEL_368;
      case 1290:
        v26 = CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceSumSquareLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
      case 1295:
        v26 = CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(*((CoreML::Specification::ReduceLogSumExpLayerParams **)this
                                                                              + 16));
        goto LABEL_368;
    }
  }
LABEL_370:
  *((_DWORD *)this + 34) = v19;
  return v19;
}

uint64_t CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v5 = *((_DWORD *)this + 9);
  if (v5 == 11)
  {
    v10 = (unsigned int *)*((_QWORD *)this + 3);
    v11 = v10[4];
    v12 = 4 * v11;
    if ((_DWORD)v11)
    {
      if ((v12 & 0x80000000) != 0)
        v13 = 11;
      else
        v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v13 = 0;
    }
    v14 = v13 + v12;
    v10[8] = v12;
    v10[9] = v14;
    v8 = (9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6;
    v9 = v4 + v14;
LABEL_27:
    v4 = v9 + v8 + 1;
    goto LABEL_28;
  }
  if (v5 == 10)
  {
    v6 = *((_QWORD *)this + 3);
    v7 = 6;
    if (*(float *)(v6 + 16) == 0.0)
      v7 = 0;
    if (*(float *)(v6 + 20) != 0.0)
      v7 += 5;
    if (*(float *)(v6 + 24) != 0.0)
      v7 += 6;
    if (*(float *)(v6 + 28) != 0.0)
      v7 += 6;
    if (*(float *)(v6 + 32) != 0.0)
      v7 += 6;
    *(_DWORD *)(v6 + 36) = v7;
    v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    v9 = v4 + v7;
    goto LABEL_27;
  }
LABEL_28:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(CoreML::Specification::NetworkUpdateParameters *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  CoreML::Specification::Optimizer *v6;
  uint64_t v7;
  CoreML::Specification::Int64Parameter *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CoreML::Specification::Int64Parameter *v12;
  unint64_t v13;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::LossLayer::ByteSizeLong(*(CoreML::Specification::LossLayer **)(*((_QWORD *)this + 4)
                                                                                               + 8 * v3
                                                                                               + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    v6 = (CoreML::Specification::Optimizer *)*((_QWORD *)this + 5);
    if (v6)
    {
      v7 = CoreML::Specification::Optimizer::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 6);
    if (v8)
    {
      v9 = CoreML::Specification::Int64Parameter::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 = *((_QWORD *)this + 7);
    if (v10)
    {
      v11 = *(unsigned __int8 *)(v10 + 16);
      *(_DWORD *)(v10 + 20) = 2 * v11;
      v4 += 2 * v11 + 2;
    }
    v12 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 8);
    if (v12)
    {
      v13 = CoreML::Specification::Int64Parameter::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  *((_DWORD *)this + 18) = v4;
  return v4;
}

uint64_t CoreML::Specification::LossLayer::ByteSizeLong(CoreML::Specification::LossLayer *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v2 = *((_QWORD *)this + 2);
  v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(_QWORD *)(v2 + 8))
      goto LABEL_3;
LABEL_7:
    v5 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v2 + 23))
    goto LABEL_7;
LABEL_3:
  v4 = *(_QWORD *)(v2 + 8);
  if ((v3 & 0x80u) == 0)
    v4 = v3;
  v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v6 = *((_DWORD *)this + 9);
  if (v6 == 11)
  {
    v7 = CoreML::Specification::MeanSquaredErrorLossLayer::ByteSizeLong(*((CoreML::Specification::MeanSquaredErrorLossLayer **)this
                                                                        + 3));
    goto LABEL_12;
  }
  if (v6 == 10)
  {
    v7 = CoreML::Specification::CategoricalCrossEntropyLossLayer::ByteSizeLong(*((CoreML::Specification::CategoricalCrossEntropyLossLayer **)this
                                                                               + 3));
LABEL_12:
    v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  *((_DWORD *)this + 8) = v5;
  return v5;
}

uint64_t CoreML::Specification::Optimizer::ByteSizeLong(CoreML::Specification::Optimizer *this)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *((_DWORD *)this + 7);
  if (v2 == 11)
  {
    v3 = CoreML::Specification::AdamOptimizer::ByteSizeLong(*((CoreML::Specification::AdamOptimizer **)this + 2));
  }
  else
  {
    if (v2 != 10)
    {
      result = 0;
      goto LABEL_7;
    }
    v3 = CoreML::Specification::SGDOptimizer::ByteSizeLong(*((CoreML::Specification::SGDOptimizer **)this + 2));
  }
  result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::SGDOptimizer::ByteSizeLong(CoreML::Specification::SGDOptimizer *this)
{
  CoreML::Specification::DoubleParameter *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::Int64Parameter *v5;
  unint64_t v6;
  CoreML::Specification::DoubleParameter *v7;
  uint64_t v8;

  if (this == (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::DoubleParameter::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::Int64Parameter::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 4);
    if (v7)
    {
      v8 = CoreML::Specification::DoubleParameter::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

uint64_t CoreML::Specification::AdamOptimizer::ByteSizeLong(CoreML::Specification::AdamOptimizer *this)
{
  CoreML::Specification::DoubleParameter *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::Int64Parameter *v5;
  unint64_t v6;
  CoreML::Specification::DoubleParameter *v7;
  uint64_t v8;
  CoreML::Specification::DoubleParameter *v9;
  uint64_t v10;
  CoreML::Specification::DoubleParameter *v11;
  uint64_t v12;

  if (this == (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::DoubleParameter::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::Int64Parameter::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 4);
    if (v7)
    {
      v8 = CoreML::Specification::DoubleParameter::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 5);
    if (v9)
    {
      v10 = CoreML::Specification::DoubleParameter::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v11 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 6);
    if (v11)
    {
      v12 = CoreML::Specification::DoubleParameter::ByteSizeLong(v11);
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 14) = v4;
  return v4;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::ByteSizeLong(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v5 = *((_QWORD *)this + 3);
  v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v7 = v6;
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::ByteSizeLong(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  v5 = *((_QWORD *)this + 3);
  v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v7 = v6;
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Tensor::ByteSizeLong(CoreML::Specification::Tensor *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  v7 = *((_DWORD *)this + 9);
  if (v7)
    v6 += ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::ByteSizeLong(CoreML::Specification::ConvolutionLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CoreML::Specification::WeightParams *v27;
  uint64_t v28;
  CoreML::Specification::WeightParams *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  CoreML::Specification::BorderAmounts *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v7 = 0;
    goto LABEL_11;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 10;
  else
    v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  v8 = v7 + v3;
  v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    v11 = (uint64_t *)(*((_QWORD *)this + 6) + 8);
    do
    {
      v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0)
        v13 = 10;
      else
        v13 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      v8 += v13 + 2;
    }
  }
  *((_DWORD *)this + 14) = v10;
  v14 = v8 + v10;
  v15 = *((unsigned int *)this + 16);
  if ((int)v15 < 1)
  {
    v16 = 0;
  }
  else
  {
    v16 = 0;
    v17 = (uint64_t *)(*((_QWORD *)this + 9) + 8);
    do
    {
      v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0)
        v19 = 12;
      else
        v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
      v14 += v19;
    }
  }
  *((_DWORD *)this + 20) = v16;
  v20 = v14 + v16;
  v21 = *((unsigned int *)this + 22);
  if ((int)v21 < 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = 0;
    v23 = (uint64_t *)(*((_QWORD *)this + 12) + 8);
    do
    {
      v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0)
        v25 = 12;
      else
        v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
      v20 += v25;
    }
  }
  *((_DWORD *)this + 26) = v22;
  v26 = v20 + v22;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    v27 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 14);
    if (v27)
    {
      v28 = CoreML::Specification::WeightParams::ByteSizeLong(v27);
      v26 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v29 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 15);
    if (v29)
    {
      v30 = CoreML::Specification::WeightParams::ByteSizeLong(v29);
      v26 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v31 = *((_QWORD *)this + 16);
  if (v31)
    v26 += ((9 * (__clz(v31 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v32 = *((_QWORD *)this + 17);
  if (v32)
    v26 += ((9 * (__clz(v32 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v33 = *((_QWORD *)this + 18);
  if (v33)
    v26 += ((9 * (__clz(v33 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 152))
    v34 = v26 + 3;
  else
    v34 = v26;
  if (*((_BYTE *)this + 153))
    v35 = v34 + 3;
  else
    v35 = v34;
  v36 = *((_DWORD *)this + 43);
  if (v36 == 51)
  {
    v38 = *((_QWORD *)this + 20);
    v39 = *(_DWORD *)(v38 + 16);
    if (v39)
    {
      if (v39 < 0)
        v40 = 11;
      else
        v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v40 = 0;
    }
    *(_DWORD *)(v38 + 20) = v40;
    v35 += v40 + 3;
  }
  else if (v36 == 50)
  {
    v37 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 20));
    v35 += (uint64_t)v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  *((_DWORD *)this + 42) = v35;
  return v35;
}

uint64_t CoreML::Specification::PoolingLayerParams::ByteSizeLong(CoreML::Specification::PoolingLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  CoreML::Specification::BorderAmounts *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_9:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_9;
  v6 = 11;
  v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0)
    v6 = v7;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v8 = v6 + v3;
  v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    v11 = (uint64_t *)(*((_QWORD *)this + 6) + 8);
    do
    {
      v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0)
        v13 = 12;
      else
        v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  v14 = v8 + v10;
  v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0)
      v16 = 11;
    else
      v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v14 += v16;
  }
  if (*((_BYTE *)this + 64))
    v14 += 3;
  if (*((_BYTE *)this + 65))
    v17 = v14 + 3;
  else
    v17 = v14;
  v18 = *((_DWORD *)this + 21);
  switch(v18)
  {
    case 32:
      v19 = (CoreML::Specification::BorderAmounts *)CoreML::Specification::PoolingLayerParams_ValidCompletePadding::ByteSizeLong(*((CoreML::Specification::PoolingLayerParams_ValidCompletePadding **)this + 9));
      goto LABEL_34;
    case 31:
      v20 = *((_QWORD *)this + 9);
      v21 = *(_DWORD *)(v20 + 16);
      if (v21)
      {
        if (v21 < 0)
          v22 = 11;
        else
          v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v22 = 0;
      }
      *(_DWORD *)(v20 + 20) = v22;
      v17 += v22 + 3;
      break;
    case 30:
      v19 = CoreML::Specification::ValidPadding::ByteSizeLong(*((CoreML::Specification::ValidPadding **)this + 9));
LABEL_34:
      v17 += (uint64_t)v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
      break;
  }
  *((_DWORD *)this + 20) = v17;
  return v17;
}

uint64_t CoreML::Specification::ActivationParams::ByteSizeLong(CoreML::Specification::ActivationParams *this)
{
  uint64_t result;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CoreML::Specification::WeightParams *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = 0;
  v3 = *((_DWORD *)this + 7);
  if (v3 <= 30)
  {
    if (v3 <= 19)
    {
      switch(v3)
      {
        case 5:
          v10 = *((_QWORD *)this + 2);
          v11 = 5;
          if (*(float *)(v10 + 16) == 0.0)
            v11 = 0;
          if (*(float *)(v10 + 20) != 0.0)
            v11 += 5;
          *(_DWORD *)(v10 + 24) = v11;
          result = v11 + 2;
          break;
        case 10:
          *(_DWORD *)(*((_QWORD *)this + 2) + 16) = 0;
          result = 2;
          break;
        case 15:
          v4 = *((_QWORD *)this + 2);
          v5 = 5;
          if (*(float *)(v4 + 16) == 0.0)
            v5 = 0;
          *(_DWORD *)(v4 + 20) = v5;
          result = v5 | 2;
          break;
      }
      goto LABEL_42;
    }
    if (v3 == 20)
    {
LABEL_30:
      v9 = *((_QWORD *)this + 2);
      v7 = 5;
      if (*(float *)(v9 + 16) == 0.0)
        v7 = 0;
      *(_DWORD *)(v9 + 20) = v7;
LABEL_33:
      result = v7 + 3;
      goto LABEL_42;
    }
    if (v3 == 25)
    {
      v8 = CoreML::Specification::ActivationPReLU::ByteSizeLong(*((CoreML::Specification::ActivationPReLU **)this + 2));
      goto LABEL_41;
    }
    if (v3 != 30)
      goto LABEL_42;
    goto LABEL_29;
  }
  if (v3 <= 49)
  {
    if (v3 != 31)
    {
      if (v3 == 40)
        goto LABEL_29;
      if (v3 != 41)
        goto LABEL_42;
    }
    v6 = *((_QWORD *)this + 2);
    v7 = 5;
    if (*(float *)(v6 + 16) == 0.0)
      v7 = 0;
    if (*(float *)(v6 + 20) != 0.0)
      v7 += 5;
    *(_DWORD *)(v6 + 24) = v7;
    goto LABEL_33;
  }
  if (v3 <= 69)
  {
    if (v3 != 50)
    {
      if (v3 != 60)
        goto LABEL_42;
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  if (v3 == 70)
  {
LABEL_29:
    *(_DWORD *)(*((_QWORD *)this + 2) + 16) = 0;
    result = 3;
    goto LABEL_42;
  }
  if (v3 == 71)
  {
    v8 = (CoreML::Specification::WeightParams *)CoreML::Specification::ActivationParametricSoftplus::ByteSizeLong(*((CoreML::Specification::ActivationParametricSoftplus **)this + 2));
LABEL_41:
    result = (uint64_t)v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_42:
  *((_DWORD *)this + 6) = result;
  return result;
}

uint64_t CoreML::Specification::InnerProductLayerParams::ByteSizeLong(CoreML::Specification::InnerProductLayerParams *this)
{
  CoreML::Specification::WeightParams *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::WeightParams *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (this == (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v7 = *((_QWORD *)this + 4);
  if (v7)
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v8 = *((_QWORD *)this + 5);
  if (v8)
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 48))
    v9 = v4 + 2;
  else
    v9 = v4;
  if (*((_BYTE *)this + 49))
    result = v9 + 3;
  else
    result = v9;
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::EmbeddingLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingLayerParams *this)
{
  CoreML::Specification::WeightParams *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::WeightParams *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (this == (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v7 = *((_QWORD *)this + 4);
  if (v7)
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v8 = *((_QWORD *)this + 5);
  if (v8)
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 48))
    result = v4 + 2;
  else
    result = v4;
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::BatchnormLayerParams::ByteSizeLong(CoreML::Specification::BatchnormLayerParams *this)
{
  CoreML::Specification::WeightParams *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::WeightParams *v5;
  uint64_t v6;
  CoreML::Specification::WeightParams *v7;
  uint64_t v8;
  CoreML::Specification::WeightParams *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (this == (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v7 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 4);
    if (v7)
    {
      v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v9 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v9)
    {
      v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v11 = *((_QWORD *)this + 6);
  if (v11)
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 56))
    v12 = v4 + 2;
  else
    v12 = v4;
  if (*((_BYTE *)this + 57))
    v12 += 2;
  if (*((float *)this + 15) == 0.0)
    result = v12;
  else
    result = v12 + 5;
  *((_DWORD *)this + 16) = result;
  return result;
}

uint64_t CoreML::Specification::LRNLayerParams::ByteSizeLong(CoreML::Specification::LRNLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = 5;
  if (*((float *)this + 4) == 0.0)
    v1 = 0;
  if (*((float *)this + 5) != 0.0)
    v1 += 5;
  v2 = *((_QWORD *)this + 3);
  v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v1 = v3 + 1;
  if (*((float *)this + 8) != 0.0)
    v1 += 5;
  *((_DWORD *)this + 9) = v1;
  return v1;
}

uint64_t CoreML::Specification::CropLayerParams::ByteSizeLong(CoreML::Specification::CropLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CoreML::Specification::BorderAmounts *v8;
  uint64_t v9;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 11;
  else
    v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v7 = v6 + v3;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
  {
    v8 = (CoreML::Specification::BorderAmounts *)*((_QWORD *)this + 5);
    if (v8)
    {
      v9 = CoreML::Specification::BorderAmounts::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::PaddingLayerParams::ByteSizeLong(CoreML::Specification::PaddingLayerParams *this)
{
  CoreML::Specification::BorderAmounts *result;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  if (this == (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_)
  {
    result = 0;
  }
  else
  {
    result = (CoreML::Specification::BorderAmounts *)*((_QWORD *)this + 2);
    if (result)
    {
      v3 = CoreML::Specification::BorderAmounts::ByteSizeLong(result);
      result = (CoreML::Specification::BorderAmounts *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
  }
  v4 = *((_DWORD *)this + 9);
  if (v4 == 3 || v4 == 2)
  {
    *(_DWORD *)(*((_QWORD *)this + 3) + 16) = 0;
    result = (CoreML::Specification::BorderAmounts *)((char *)result + 2);
  }
  else if (v4 == 1)
  {
    v5 = *((_QWORD *)this + 3);
    v6 = 5;
    if (*(float *)(v5 + 16) == 0.0)
      v6 = 0;
    *(_DWORD *)(v5 + 20) = v6;
    result = (CoreML::Specification::BorderAmounts *)((char *)result + v6 + 2);
  }
  *((_DWORD *)this + 8) = (_DWORD)result;
  return result;
}

uint64_t CoreML::Specification::UpsampleLayerParams::ByteSizeLong(CoreML::Specification::UpsampleLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  v7 = *((unsigned int *)this + 10);
  v8 = 4 * v7;
  if ((_DWORD)v7)
  {
    if ((v8 & 0x80000000) != 0)
      v9 = 11;
    else
      v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v6 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  v10 = v6 + v8;
  v11 = *((_DWORD *)this + 15);
  if (v11)
  {
    if (v11 < 0)
      v12 = 11;
    else
      v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v10 += v12;
  }
  v13 = *((_DWORD *)this + 16);
  if (v13)
  {
    if (v13 < 0)
      v14 = 11;
    else
      v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v10 += v14;
  }
  *((_DWORD *)this + 17) = v10;
  return v10;
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::ByteSizeLong(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_9;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    v7 = *((_QWORD *)this + 5);
    if (v7)
    {
      v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0)
          v9 = 11;
        else
          v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v9 = 0;
      }
      *(_DWORD *)(v7 + 20) = v9;
      v6 += v9 + 2;
    }
  }
  *((_DWORD *)this + 12) = v6;
  return v6;
}

uint64_t CoreML::Specification::CropResizeLayerParams::ByteSizeLong(CoreML::Specification::CropResizeLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_9;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    v7 = *((_QWORD *)this + 5);
    if (v7)
    {
      v8 = *(_DWORD *)(v7 + 16);
      if (v8)
      {
        if (v8 < 0)
          v9 = 11;
        else
          v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v9 = 0;
      }
      *(_DWORD *)(v7 + 20) = v9;
      v6 += v9 + 2;
    }
    v10 = *((_QWORD *)this + 6);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 16);
      if (v11)
      {
        if (v11 < 0)
          v12 = 11;
        else
          v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      else
      {
        v12 = 0;
      }
      *(_DWORD *)(v10 + 20) = v12;
      v6 += v12 + 2;
    }
  }
  if (*((_BYTE *)this + 56))
    v6 += 2;
  if (*((float *)this + 15) != 0.0)
    v6 += 5;
  *((_DWORD *)this + 16) = v6;
  return v6;
}

uint64_t CoreML::Specification::UnaryFunctionLayerParams::ByteSizeLong(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v1 >= 0)
      v3 = v2;
    else
      v3 = 11;
  }
  else
  {
    v3 = 0;
  }
  if (*((float *)this + 5) != 0.0)
    v3 += 5;
  if (*((float *)this + 6) != 0.0)
    v3 += 5;
  if (*((float *)this + 7) != 0.0)
    v3 += 5;
  if (*((float *)this + 8) != 0.0)
    v3 += 5;
  *((_DWORD *)this + 9) = v3;
  return v3;
}

uint64_t CoreML::Specification::ScaleLayerParams::ByteSizeLong(CoreML::Specification::ScaleLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CoreML::Specification::WeightParams *v15;
  uint64_t v16;
  CoreML::Specification::WeightParams *v17;
  uint64_t v18;
  uint64_t result;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_9:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_9;
  v6 = 11;
  v7 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0)
    v6 = v7;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v8 = v6 + v3;
  v9 = *((unsigned int *)this + 10);
  if ((int)v9 < 1)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    v11 = (uint64_t *)(*((_QWORD *)this + 6) + 8);
    do
    {
      v12 = *v11++;
      v10 += (9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6;
      --v9;
    }
    while (v9);
    if (v10)
    {
      if ((v10 & 0x80000000) != 0)
        v13 = 11;
      else
        v13 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v8 += v13;
    }
  }
  *((_DWORD *)this + 14) = v10;
  v14 = v8 + v10;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 8);
    if (v15)
    {
      v16 = CoreML::Specification::WeightParams::ByteSizeLong(v15);
      v14 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v17 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 9);
    if (v17)
    {
      v18 = CoreML::Specification::WeightParams::ByteSizeLong(v17);
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((_BYTE *)this + 80))
    result = v14 + 2;
  else
    result = v14;
  *((_DWORD *)this + 21) = result;
  return result;
}

uint64_t CoreML::Specification::BiasLayerParams::ByteSizeLong(CoreML::Specification::BiasLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CoreML::Specification::WeightParams *v8;
  uint64_t v9;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 11;
  else
    v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v7 = v6 + v3;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    v8 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v8)
    {
      v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::ReduceLayerParams::ByteSizeLong(CoreML::Specification::ReduceLayerParams *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *((_DWORD *)this + 4);
  v2 = 11;
  v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v1 >= 0)
    v2 = v3;
  if (v1)
    v4 = v2;
  else
    v4 = 0;
  if (*((float *)this + 5) != 0.0)
    v4 += 5;
  v5 = *((_DWORD *)this + 6);
  v6 = 11;
  v7 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v5 >= 0)
    v6 = v7;
  v8 = v6 + v4;
  if (v5)
    v4 = v8;
  *((_DWORD *)this + 7) = v4;
  return v4;
}

uint64_t CoreML::Specification::LoadConstantLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CoreML::Specification::WeightParams *v8;
  uint64_t v9;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 11;
  else
    v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_)
  {
    v8 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v8)
    {
      v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::ReshapeLayerParams::ByteSizeLong(CoreML::Specification::ReshapeLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  v7 = *((_DWORD *)this + 9);
  if (v7)
  {
    if (v7 < 0)
      v8 = 11;
    else
      v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v6 += v8;
  }
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::PermuteLayerParams::ByteSizeLong(CoreML::Specification::PermuteLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

unint64_t CoreML::Specification::ReorganizeDataLayerParams::ByteSizeLong(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0)
      v5 = 11;
    else
      v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

unint64_t CoreML::Specification::SliceLayerParams::ByteSizeLong(CoreML::Specification::SliceLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  v6 = *((_QWORD *)this + 4);
  v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6)
    v4 = v7 + 1;
  v8 = *((_DWORD *)this + 10);
  if (v8)
  {
    if (v8 < 0)
      v9 = 11;
    else
      v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v4 += v9;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::ByteSizeLong(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  CoreML::Specification::ActivationParams *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::WeightParams *v5;
  uint64_t v6;
  CoreML::Specification::WeightParams *v7;
  uint64_t v8;
  CoreML::Specification::WeightParams *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  if (this == (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::ActivationParams *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::ActivationParams::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v7 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 4);
    if (v7)
    {
      v8 = CoreML::Specification::WeightParams::ByteSizeLong(v7);
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v9 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v9)
    {
      v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v11 = *((_QWORD *)this + 6);
  if (v11)
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v12 = *((_QWORD *)this + 7);
  if (v12)
    v4 += ((9 * (__clz(v12 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 64))
    v13 = v4 + 2;
  else
    v13 = v4;
  if (*((_BYTE *)this + 65))
    v13 += 3;
  if (*((_BYTE *)this + 66))
    result = v13 + 3;
  else
    result = v13;
  *((_DWORD *)this + 17) = result;
  return result;
}

uint64_t CoreML::Specification::GRULayerParams::ByteSizeLong(CoreML::Specification::GRULayerParams *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  CoreML::Specification::WeightParams *v6;
  uint64_t v7;
  CoreML::Specification::WeightParams *v8;
  uint64_t v9;
  CoreML::Specification::WeightParams *v10;
  uint64_t v11;
  CoreML::Specification::WeightParams *v12;
  uint64_t v13;
  CoreML::Specification::WeightParams *v14;
  uint64_t v15;
  CoreML::Specification::WeightParams *v16;
  uint64_t v17;
  CoreML::Specification::WeightParams *v18;
  uint64_t v19;
  CoreML::Specification::WeightParams *v20;
  uint64_t v21;
  CoreML::Specification::WeightParams *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
  {
    v6 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v6)
    {
      v7 = CoreML::Specification::WeightParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v8 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
    if (v8)
    {
      v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v10 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 7);
    if (v10)
    {
      v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 8);
    if (v12)
    {
      v13 = CoreML::Specification::WeightParams::ByteSizeLong(v12);
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 9);
    if (v14)
    {
      v15 = CoreML::Specification::WeightParams::ByteSizeLong(v14);
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v16 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 10);
    if (v16)
    {
      v17 = CoreML::Specification::WeightParams::ByteSizeLong(v16);
      v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v18 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 11);
    if (v18)
    {
      v19 = CoreML::Specification::WeightParams::ByteSizeLong(v18);
      v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v20 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 12);
    if (v20)
    {
      v21 = CoreML::Specification::WeightParams::ByteSizeLong(v20);
      v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v22 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 13);
    if (v22)
    {
      v23 = CoreML::Specification::WeightParams::ByteSizeLong(v22);
      v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v24 = *((_QWORD *)this + 14);
  if (v24)
    v4 += ((9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v25 = *((_QWORD *)this + 15);
  if (v25)
    v4 += ((9 * (__clz(v25 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 128))
    v26 = v4 + 2;
  else
    v26 = v4;
  if (*((_BYTE *)this + 129))
    v26 += 3;
  if (*((_BYTE *)this + 130))
    result = v26 + 3;
  else
    result = v26;
  *((_DWORD *)this + 33) = result;
  return result;
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  CoreML::Specification::LSTMParams *v6;
  uint64_t v7;
  CoreML::Specification::LSTMWeightParams *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
  {
    v6 = (CoreML::Specification::LSTMParams *)*((_QWORD *)this + 5);
    if (v6)
    {
      v7 = CoreML::Specification::LSTMParams::ByteSizeLong(v6);
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 = (CoreML::Specification::LSTMWeightParams *)*((_QWORD *)this + 6);
    if (v8)
    {
      v9 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v10 = *((_QWORD *)this + 7);
  if (v10)
    v4 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v11 = *((_QWORD *)this + 8);
  if (v11)
    v4 += ((9 * (__clz(v11 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 72))
    result = v4 + 3;
  else
    result = v4;
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::ByteSizeLong(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  CoreML::Specification::LSTMParams *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((unsigned int *)this + 12);
  v7 = v4 + v6;
  if ((_DWORD)v6)
  {
    v8 = 0;
    do
    {
      v9 = CoreML::Specification::ActivationParams::ByteSizeLong(*(CoreML::Specification::ActivationParams **)(*((_QWORD *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while ((_DWORD)v6 != v8);
  }
  v10 = *((unsigned int *)this + 18);
  v11 = v7 + 2 * v10;
  if ((_DWORD)v10)
  {
    v12 = 0;
    do
    {
      v13 = CoreML::Specification::LSTMWeightParams::ByteSizeLong(*(CoreML::Specification::LSTMWeightParams **)(*((_QWORD *)this + 10) + 8 * v12 + 8));
      v11 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      ++v12;
    }
    while ((_DWORD)v10 != v12);
  }
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
  {
    v14 = (CoreML::Specification::LSTMParams *)*((_QWORD *)this + 11);
    if (v14)
    {
      v15 = CoreML::Specification::LSTMParams::ByteSizeLong(v14);
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v16 = *((_QWORD *)this + 12);
  v17 = *((_QWORD *)this + 13);
  v18 = v16 == 0;
  v19 = v11 + ((9 * (__clz(v16 | 1) ^ 0x3F) + 73) >> 6);
  if (v18)
    v20 = v11;
  else
    v20 = v19 + 1;
  v21 = v20 + ((9 * (__clz(v17 | 1) ^ 0x3F) + 73) >> 6);
  if (v17)
    result = v21 + 1;
  else
    result = v20;
  *((_DWORD *)this + 28) = result;
  return result;
}

uint64_t CoreML::Specification::CustomLayerParams::ByteSizeLong(CoreML::Specification::CustomLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v19[3];

  v2 = *((unsigned int *)this + 6);
  v3 = 2 * v2;
  if ((_DWORD)v2)
  {
    v4 = 0;
    do
    {
      v5 = CoreML::Specification::WeightParams::ByteSizeLong(*(CoreML::Specification::WeightParams **)(*((_QWORD *)this + 4) + 8 * v4 + 8));
      v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v4;
    }
    while ((_DWORD)v2 != v4);
  }
  v6 = (uint64_t *)*((_QWORD *)this + 8);
  v7 = *v6;
  google::protobuf::Map<std::string,std::string>::begin(v19, v6);
  v8 = 0;
  v9 = 2 * v7 + v3;
  while (v19[0])
  {
    v10 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(*((_QWORD *)v19[0] + 3), *((_QWORD *)v19[0] + 3) + 24, *((google::protobuf::Arena **)this + 5));
    if (v8 != (_DWORD *)v10)
    {
      if (v8)
        (*(void (**)(_DWORD *))(*(_QWORD *)v8 + 8))(v8);
      v8 = (_DWORD *)v10;
    }
    v11 = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(v8);
    v9 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::KeyValuePair const>::operator++(v19);
  }
  if (v8)
    (*(void (**)(_DWORD *))(*(_QWORD *)v8 + 8))(v8);
  v12 = *((_QWORD *)this + 9);
  v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(_QWORD *)(v12 + 8))
      goto LABEL_18;
  }
  else if (!*(_BYTE *)(v12 + 23))
  {
    goto LABEL_18;
  }
  v14 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v14 = v13;
  v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  v15 = *((_QWORD *)this + 10);
  v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(_QWORD *)(v15 + 8))
      goto LABEL_23;
  }
  else if (!*(_BYTE *)(v15 + 23))
  {
    goto LABEL_23;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if ((v16 & 0x80u) == 0)
    v17 = v16;
  v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_23:
  *((_DWORD *)this + 22) = v9;
  return v9;
}

void sub_1D3B5CCF4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (v1)
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 8))(v1);
  _Unwind_Resume(exception_object);
}

uint64_t CoreML::Specification::BranchLayerParams::ByteSizeLong(CoreML::Specification::BranchLayerParams *this)
{
  CoreML::Specification::NeuralNetwork *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::NeuralNetwork *v5;
  uint64_t v6;

  if (this == (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LoopLayerParams::ByteSizeLong(CoreML::Specification::LoopLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CoreML::Specification::NeuralNetwork *v6;
  uint64_t v7;
  CoreML::Specification::NeuralNetwork *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *((_QWORD *)this + 2);
  v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(_QWORD *)(v2 + 8))
      goto LABEL_3;
LABEL_7:
    v5 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v2 + 23))
    goto LABEL_7;
LABEL_3:
  v4 = *(_QWORD *)(v2 + 8);
  if ((v3 & 0x80u) == 0)
    v4 = v3;
  v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
  {
    v6 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 3);
    if (v6)
    {
      v7 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v6);
      v5 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 4);
    if (v8)
    {
      v9 = CoreML::Specification::NeuralNetwork::ByteSizeLong(v8);
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v10 = *((_QWORD *)this + 5);
  if (v10)
    v5 += ((9 * (__clz(v10 | 1) ^ 0x3F) + 73) >> 6) + 1;
  *((_DWORD *)this + 12) = v5;
  return v5;
}

uint64_t CoreML::Specification::TileLayerParams::ByteSizeLong(CoreML::Specification::TileLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

unint64_t CoreML::Specification::ScatterLayerParams::ByteSizeLong(CoreML::Specification::ScatterLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0)
      v5 = 11;
    else
      v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

unint64_t CoreML::Specification::ScatterAlongAxisLayerParams::ByteSizeLong(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0)
      v5 = 11;
    else
      v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v5;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ReverseLayerParams>(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1[4];
  if ((_DWORD)v1)
  {
    if ((v1 & 0x80000000) != 0)
      v2 = 11;
    else
      v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v2 = 0;
  }
  v3 = v2 + v1;
  a1[8] = v1;
  a1[9] = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

unint64_t CoreML::Specification::ReverseSeqLayerParams::ByteSizeLong(CoreML::Specification::ReverseSeqLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::SplitNDLayerParams::ByteSizeLong(CoreML::Specification::SplitNDLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  v7 = *((_QWORD *)this + 5);
  if (v7)
    v6 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v8 = *((_QWORD *)this + 6);
  if (v8)
    v6 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  *((_DWORD *)this + 14) = v6;
  return v6;
}

unint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::ConcatNDLayerParams>(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*(_BYTE *)(a1 + 24))
    v3 += 2;
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + 1;
}

uint64_t CoreML::Specification::TransposeLayerParams::ByteSizeLong(CoreML::Specification::TransposeLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::SliceStaticLayerParams::ByteSizeLong(CoreML::Specification::SliceStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_9:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_9;
  v5 = 11;
  v6 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v2 >= 0)
    v5 = v6;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v7 = v5 + v2;
  v8 = *((unsigned int *)this + 10);
  if ((_DWORD)v8)
  {
    if ((v8 & 0x80000000) != 0)
      v9 = 11;
    else
      v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v7 += v9;
  }
  *((_DWORD *)this + 14) = v8;
  v10 = v7 + v8;
  v11 = *((unsigned int *)this + 16);
  if ((int)v11 < 1)
  {
    v12 = 0;
  }
  else
  {
    v12 = 0;
    v13 = (uint64_t *)(*((_QWORD *)this + 9) + 8);
    do
    {
      v14 = *v13++;
      v12 += (9 * (__clz(v14 | 1) ^ 0x3F) + 73) >> 6;
      --v11;
    }
    while (v11);
    if (v12)
    {
      if ((v12 & 0x80000000) != 0)
        v15 = 11;
      else
        v15 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v10 += v15;
    }
  }
  *((_DWORD *)this + 20) = v12;
  v16 = v10 + v12;
  v17 = *((unsigned int *)this + 22);
  if ((_DWORD)v17)
  {
    v18 = 11;
    v19 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v17 >= 0)
      v18 = v19;
    v16 += v18;
  }
  *((_DWORD *)this + 26) = v17;
  v20 = v16 + v17;
  v21 = *((unsigned int *)this + 28);
  if ((int)v21 < 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = 0;
    v23 = (uint64_t *)(*((_QWORD *)this + 15) + 8);
    do
    {
      v24 = *v23++;
      v22 += (9 * (__clz(v24 | 1) ^ 0x3F) + 73) >> 6;
      --v21;
    }
    while (v21);
    if (v22)
    {
      if ((v22 & 0x80000000) != 0)
        v25 = 11;
      else
        v25 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v20 += v25;
    }
  }
  *((_DWORD *)this + 32) = v22;
  v26 = v20 + v22;
  v27 = *((unsigned int *)this + 34);
  if ((_DWORD)v27)
  {
    if ((v27 & 0x80000000) != 0)
      v28 = 11;
    else
      v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v26 += v28;
  }
  v29 = v26 + v27;
  *((_DWORD *)this + 38) = v27;
  *((_DWORD *)this + 39) = v29;
  return v29;
}

uint64_t CoreML::Specification::SliceDynamicLayerParams::ByteSizeLong(CoreML::Specification::SliceDynamicLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *((unsigned int *)this + 4);
  if ((_DWORD)v1)
  {
    v2 = 11;
    v3 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v1 >= 0)
      v2 = v3;
  }
  else
  {
    v2 = 0;
  }
  *((_DWORD *)this + 8) = v1;
  v4 = v2 + v1;
  v5 = *((unsigned int *)this + 10);
  if ((int)v5 < 1)
  {
    v6 = 0;
  }
  else
  {
    v6 = 0;
    v7 = (uint64_t *)(*((_QWORD *)this + 6) + 8);
    do
    {
      v8 = *v7++;
      v6 += (9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6;
      --v5;
    }
    while (v5);
    if (v6)
    {
      if ((v6 & 0x80000000) != 0)
        v9 = 11;
      else
        v9 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v4 += v9;
    }
  }
  *((_DWORD *)this + 14) = v6;
  v10 = v4 + v6;
  v11 = *((unsigned int *)this + 16);
  if ((_DWORD)v11)
  {
    v12 = 11;
    v13 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((int)v11 >= 0)
      v12 = v13;
    v10 += v12;
  }
  *((_DWORD *)this + 20) = v11;
  v14 = v10 + v11;
  v15 = *((unsigned int *)this + 22);
  if ((int)v15 < 1)
  {
    v16 = 0;
  }
  else
  {
    v16 = 0;
    v17 = (uint64_t *)(*((_QWORD *)this + 12) + 8);
    do
    {
      v18 = *v17++;
      v16 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
      --v15;
    }
    while (v15);
    if (v16)
    {
      if ((v16 & 0x80000000) != 0)
        v19 = 11;
      else
        v19 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v14 += v19;
    }
  }
  *((_DWORD *)this + 26) = v16;
  v20 = v14 + v16;
  v21 = *((unsigned int *)this + 28);
  if ((_DWORD)v21)
  {
    if ((v21 & 0x80000000) != 0)
      v22 = 11;
    else
      v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v20 += v22;
  }
  v23 = v20 + v21;
  *((_DWORD *)this + 32) = v21;
  *((_DWORD *)this + 33) = v23;
  return v23;
}

unint64_t CoreML::Specification::SlidingWindowsLayerParams::ByteSizeLong(CoreML::Specification::SlidingWindowsLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  v6 = *((_QWORD *)this + 4);
  v7 = v4 + ((9 * (__clz(v6 | 1) ^ 0x3F) + 73) >> 6);
  if (v6)
    v4 = v7 + 1;
  *((_DWORD *)this + 10) = v4;
  return v4;
}

unint64_t CoreML::Specification::TopKLayerParams::ByteSizeLong(CoreML::Specification::TopKLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  if (*((_BYTE *)this + 32))
    v4 += 2;
  *((_DWORD *)this + 9) = v4;
  return v4;
}

uint64_t CoreML::Specification::EmbeddingNDLayerParams::ByteSizeLong(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  CoreML::Specification::WeightParams *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::WeightParams *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (this == (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v7 = *((_QWORD *)this + 4);
  if (v7)
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v8 = *((_QWORD *)this + 5);
  if (v8)
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 48))
    result = v4 + 2;
  else
    result = v4;
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::BatchedMatMulLayerParams::ByteSizeLong(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  CoreML::Specification::WeightParams *v2;
  uint64_t v3;
  uint64_t v4;
  CoreML::Specification::WeightParams *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  if (this == (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
  {
    v4 = 0;
  }
  else
  {
    v2 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
    if (v2)
    {
      v3 = CoreML::Specification::WeightParams::ByteSizeLong(v2);
      v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v4 = 0;
    }
    v5 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
    if (v5)
    {
      v6 = CoreML::Specification::WeightParams::ByteSizeLong(v5);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v7 = *((_QWORD *)this + 4);
  if (v7)
    v4 += ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6) + 1;
  v8 = *((_QWORD *)this + 5);
  if (v8)
    v4 += ((9 * (__clz(v8 | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (*((_BYTE *)this + 48))
    v9 = v4 + 2;
  else
    v9 = v4;
  if (*((_BYTE *)this + 49))
    v9 += 2;
  if (*((_BYTE *)this + 50))
    v9 += 2;
  if (*((_BYTE *)this + 51))
    result = v9 + 2;
  else
    result = v9;
  *((_DWORD *)this + 13) = result;
  return result;
}

uint64_t CoreML::Specification::LoadConstantNDLayerParams::ByteSizeLong(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CoreML::Specification::WeightParams *v8;
  uint64_t v9;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 11;
  else
    v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v7 = v6 + v3;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
  {
    v8 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v8)
    {
      v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  *((_DWORD *)this + 12) = v7;
  return v7;
}

uint64_t CoreML::Specification::FillStaticLayerParams::ByteSizeLong(CoreML::Specification::FillStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0)
    v6 += 5;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::ByteSizeLong(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::SqueezeLayerParams::ByteSizeLong(CoreML::Specification::SqueezeLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ExpandDimsLayerParams::ByteSizeLong(CoreML::Specification::ExpandDimsLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReshapeStaticLayerParams::ByteSizeLong(CoreML::Specification::ReshapeStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::ByteSizeLong(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  *((_DWORD *)this + 8) = v2;
  *((_DWORD *)this + 9) = v6;
  return v6;
}

uint64_t CoreML::Specification::ConstantPaddingLayerParams::ByteSizeLong(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((float *)this + 9) != 0.0)
    v6 += 5;
  if (*((_BYTE *)this + 40))
    v6 += 2;
  *((_DWORD *)this + 11) = v6;
  return v6;
}

unint64_t CoreML::Specification::RandomNormalLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((float *)this + 6) != 0.0)
    v3 += 5;
  if (*((float *)this + 7) != 0.0)
    v3 += 5;
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomNormalStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v12;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  v7 = *((_QWORD *)this + 5);
  v8 = v7 == 0;
  v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8)
    v6 = v9 + 1;
  v10 = *((float *)this + 12);
  v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  v12 = v6 + 5;
  if (v10 == 0.0)
    v12 = v6;
  if (v11 != 0.0)
    v12 += 5;
  *((_DWORD *)this + 14) = v12;
  return v12;
}

unint64_t CoreML::Specification::RandomNormalDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((float *)this + 6) != 0.0)
    v3 += 5;
  if (*((float *)this + 7) != 0.0)
    v3 += 5;
  *((_DWORD *)this + 8) = v3;
  return v3;
}

unint64_t CoreML::Specification::RandomUniformLikeLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((float *)this + 6) != 0.0)
    v3 += 5;
  if (*((float *)this + 7) != 0.0)
    v3 += 5;
  *((_DWORD *)this + 8) = v3;
  return v3;
}

uint64_t CoreML::Specification::RandomUniformStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  float v10;
  float v11;
  uint64_t v12;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  v6 = v5 + v2;
  v7 = *((_QWORD *)this + 5);
  v8 = v7 == 0;
  v9 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (!v8)
    v6 = v9 + 1;
  v10 = *((float *)this + 12);
  v11 = *((float *)this + 13);
  *((_DWORD *)this + 8) = v2;
  v12 = v6 + 5;
  if (v10 == 0.0)
    v12 = v6;
  if (v11 != 0.0)
    v12 += 5;
  *((_DWORD *)this + 14) = v12;
  return v12;
}

unint64_t CoreML::Specification::RandomUniformDynamicLayerParams::ByteSizeLong(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((float *)this + 6) != 0.0)
    v3 += 5;
  if (*((float *)this + 7) != 0.0)
    v3 += 5;
  *((_DWORD *)this + 8) = v3;
  return v3;
}

unint64_t google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual<CoreML::Specification::RandomBernoulliLikeLayerParams>(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*(float *)(a1 + 24) != 0.0)
    v3 += 5;
  *(_DWORD *)(a1 + 28) = v3;
  return v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
}

uint64_t CoreML::Specification::RandomBernoulliStaticLayerParams::ByteSizeLong(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  v7 = *((_QWORD *)this + 5);
  v8 = v6 + ((9 * (__clz(v7 | 1) ^ 0x3F) + 73) >> 6);
  if (v7)
    v6 = v8 + 1;
  if (*((float *)this + 12) != 0.0)
    v6 += 5;
  *((_DWORD *)this + 13) = v6;
  return v6;
}

unint64_t CoreML::Specification::CategoricalDistributionLayerParams::ByteSizeLong(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  if (*((_BYTE *)this + 32))
    v4 += 2;
  if (*((float *)this + 9) != 0.0)
    v4 += 5;
  if (*((float *)this + 10) != 0.0)
    v4 += 5;
  *((_DWORD *)this + 11) = v4;
  return v4;
}

uint64_t CoreML::Specification::ReduceL1LayerParams::ByteSizeLong(CoreML::Specification::ReduceL1LayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceL2LayerParams::ByteSizeLong(CoreML::Specification::ReduceL2LayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMaxLayerParams::ByteSizeLong(CoreML::Specification::ReduceMaxLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMinLayerParams::ByteSizeLong(CoreML::Specification::ReduceMinLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceSumLayerParams::ByteSizeLong(CoreML::Specification::ReduceSumLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceProdLayerParams::ByteSizeLong(CoreML::Specification::ReduceProdLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceMeanLayerParams::ByteSizeLong(CoreML::Specification::ReduceMeanLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceLogSumLayerParams::ByteSizeLong(CoreML::Specification::ReduceLogSumLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceSumSquareLayerParams::ByteSizeLong(CoreML::Specification::ReduceSumSquareLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

uint64_t CoreML::Specification::ReduceLogSumExpLayerParams::ByteSizeLong(CoreML::Specification::ReduceLogSumExpLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *((unsigned int *)this + 4);
  if ((int)v1 < 1)
  {
    v2 = 0;
LABEL_8:
    v5 = 0;
    goto LABEL_10;
  }
  v2 = 0;
  v3 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v4 = *v3++;
    v2 += (9 * (__clz(v4 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  if (!v2)
    goto LABEL_8;
  if ((v2 & 0x80000000) != 0)
    v5 = 11;
  else
    v5 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v2;
  v6 = v5 + v2;
  if (*((_BYTE *)this + 36))
    v6 += 2;
  if (*((_BYTE *)this + 37))
    v6 += 2;
  *((_DWORD *)this + 10) = v6;
  return v6;
}

unint64_t CoreML::Specification::MatrixBandPartLayerParams::ByteSizeLong(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LayerNormalizationLayerParams::ByteSizeLong(CoreML::Specification::LayerNormalizationLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CoreML::Specification::WeightParams *v8;
  uint64_t v9;
  CoreML::Specification::WeightParams *v10;
  uint64_t v11;
  uint64_t result;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v6 = 0;
    goto LABEL_10;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 11;
  else
    v6 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  *((_DWORD *)this + 8) = v3;
  v7 = v6 + v3;
  if (this != (CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_)
  {
    v8 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v8)
    {
      v9 = CoreML::Specification::WeightParams::ByteSizeLong(v8);
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
    if (v10)
    {
      v11 = CoreML::Specification::WeightParams::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if (*((float *)this + 14) == 0.0)
    result = v7;
  else
    result = v7 + 5;
  *((_DWORD *)this + 15) = result;
  return result;
}

uint64_t CoreML::Specification::NonMaximumSuppressionLayerParams::ByteSizeLong(CoreML::Specification::NonMaximumSuppressionLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = 5;
  if (*((float *)this + 4) == 0.0)
    v1 = 0;
  if (*((float *)this + 5) != 0.0)
    v1 += 5;
  v2 = *((_QWORD *)this + 3);
  v3 = v1 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v1 = v3 + 1;
  if (*((_BYTE *)this + 32))
    v1 += 2;
  *((_DWORD *)this + 9) = v1;
  return v1;
}

unint64_t CoreML::Specification::OneHotLayerParams::ByteSizeLong(CoreML::Specification::OneHotLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  if (*((float *)this + 8) != 0.0)
    v4 += 5;
  if (*((float *)this + 9) != 0.0)
    v4 += 5;
  *((_DWORD *)this + 10) = v4;
  return v4;
}

unint64_t CoreML::Specification::CumSumLayerParams::ByteSizeLong(CoreML::Specification::CumSumLayerParams *this)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v3 = v2 + 1;
  else
    v3 = 0;
  if (*((_BYTE *)this + 24))
    v3 += 2;
  if (*((_BYTE *)this + 25))
    v3 += 2;
  *((_DWORD *)this + 7) = v3;
  return v3;
}

uint64_t CoreML::Specification::Pooling3DLayerParams::ByteSizeLong(CoreML::Specification::Pooling3DLayerParams *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0)
      v2 = 10;
    else
      v2 = (9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6;
    v3 = v2 + 1;
  }
  else
  {
    v3 = 0;
  }
  v4 = *((_DWORD *)this + 5);
  if (v4)
  {
    if (v4 < 0)
      v5 = 10;
    else
      v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    v3 += v5 + 1;
  }
  v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    if (v6 < 0)
      v7 = 10;
    else
      v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    v3 += v7 + 1;
  }
  v8 = *((_DWORD *)this + 7);
  if (v8)
  {
    if (v8 < 0)
      v9 = 10;
    else
      v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    v3 += v9 + 1;
  }
  v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    if (v10 < 0)
      v11 = 10;
    else
      v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    v3 += v11 + 1;
  }
  v12 = *((_DWORD *)this + 9);
  if (v12)
  {
    if (v12 < 0)
      v13 = 10;
    else
      v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
    v3 += v13 + 1;
  }
  v14 = *((_DWORD *)this + 10);
  if (v14)
  {
    if (v14 < 0)
      v15 = 11;
    else
      v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v15;
  }
  v16 = *((_DWORD *)this + 11);
  if (v16)
  {
    if (v16 < 0)
      v17 = 11;
    else
      v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v17;
  }
  v18 = *((_DWORD *)this + 12);
  if (v18)
  {
    if (v18 < 0)
      v19 = 11;
    else
      v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v19;
  }
  v20 = *((_DWORD *)this + 13);
  if (v20)
  {
    if (v20 < 0)
      v21 = 11;
    else
      v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v21;
  }
  v22 = *((_DWORD *)this + 14);
  if (v22)
  {
    if (v22 < 0)
      v23 = 11;
    else
      v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v23;
  }
  v24 = *((_DWORD *)this + 15);
  if (v24)
  {
    if (v24 < 0)
      v25 = 11;
    else
      v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v25;
  }
  v26 = *((_DWORD *)this + 16);
  if (v26)
  {
    if (v26 < 0)
      v27 = 11;
    else
      v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v27;
  }
  if (*((_BYTE *)this + 68))
    v3 += 2;
  v28 = *((_DWORD *)this + 18);
  if (v28)
  {
    if (v28 < 0)
      v29 = 11;
    else
      v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v3 += v29;
  }
  *((_DWORD *)this + 19) = v3;
  return v3;
}

unint64_t CoreML::Specification::SliceBySizeLayerParams::ByteSizeLong(CoreML::Specification::SliceBySizeLayerParams *this)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *((_QWORD *)this + 2);
  v2 = *((_QWORD *)this + 3);
  v3 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = v4 + ((9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6);
  if (v2)
    v4 = v5 + 1;
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::Convolution3DLayerParams::ByteSizeLong(CoreML::Specification::Convolution3DLayerParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CoreML::Specification::WeightParams *v9;
  uint64_t v10;
  CoreML::Specification::WeightParams *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t result;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;

  v2 = *((unsigned int *)this + 4);
  if ((int)v2 < 1)
  {
    v3 = 0;
LABEL_8:
    v7 = 0;
    goto LABEL_11;
  }
  v3 = 0;
  v4 = (uint64_t *)(*((_QWORD *)this + 3) + 8);
  do
  {
    v5 = *v4++;
    v3 += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v2;
  }
  while (v2);
  if (!v3)
    goto LABEL_8;
  if ((v3 & 0x80000000) != 0)
    v6 = 10;
  else
    v6 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
  v7 = v6 + 2;
LABEL_11:
  *((_DWORD *)this + 8) = v3;
  v8 = v7 + v3;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
  {
    v9 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (v9)
    {
      v10 = CoreML::Specification::WeightParams::ByteSizeLong(v9);
      v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v11 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
    if (v11)
    {
      v12 = CoreML::Specification::WeightParams::ByteSizeLong(v11);
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  v13 = *((_DWORD *)this + 14);
  if (v13)
  {
    if (v13 < 0)
      v14 = 10;
    else
      v14 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v14 + 1;
  }
  v15 = *((_DWORD *)this + 15);
  if (v15)
  {
    if (v15 < 0)
      v16 = 10;
    else
      v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v16 + 1;
  }
  v17 = *((_DWORD *)this + 16);
  if (v17)
  {
    if (v17 < 0)
      v18 = 10;
    else
      v18 = (9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v18 + 1;
  }
  v19 = *((_DWORD *)this + 17);
  if (v19)
  {
    if (v19 < 0)
      v20 = 10;
    else
      v20 = (9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v20 + 2;
  }
  v21 = *((_DWORD *)this + 18);
  if (v21)
  {
    if (v21 < 0)
      v22 = 10;
    else
      v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v22 + 2;
  }
  v23 = *((_DWORD *)this + 19);
  if (v23)
  {
    if (v23 < 0)
      v24 = 10;
    else
      v24 = (9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v24 + 2;
  }
  v25 = *((_DWORD *)this + 20);
  if (v25)
  {
    if (v25 < 0)
      v26 = 10;
    else
      v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v26 + 2;
  }
  v27 = *((_DWORD *)this + 21);
  if (v27)
  {
    if (v27 < 0)
      v28 = 10;
    else
      v28 = (9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v28 + 2;
  }
  v29 = *((_DWORD *)this + 22);
  if (v29)
  {
    if (v29 < 0)
      v30 = 10;
    else
      v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v30 + 2;
  }
  v31 = *((_DWORD *)this + 23);
  if (v31)
  {
    if (v31 < 0)
      v32 = 10;
    else
      v32 = (9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v32 + 2;
  }
  v33 = *((_DWORD *)this + 24);
  if (v33)
  {
    if (v33 < 0)
      v34 = 10;
    else
      v34 = (9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6;
    v8 += v34 + 2;
  }
  v35 = *((_DWORD *)this + 25);
  if (v35)
  {
    if (v35 < 0)
      v36 = 12;
    else
      v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
    v8 += v36;
  }
  if (*((_BYTE *)this + 104))
    v37 = v8 + 3;
  else
    v37 = v8;
  if (*((_BYTE *)this + 105))
    result = v37 + 3;
  else
    result = v37;
  v39 = *((_DWORD *)this + 27);
  if (v39)
  {
    if (v39 < 0)
      v40 = 12;
    else
      v40 = ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v40;
  }
  v41 = *((_DWORD *)this + 28);
  if (v41)
  {
    if (v41 < 0)
      v42 = 12;
    else
      v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v42;
  }
  v43 = *((_DWORD *)this + 29);
  if (v43)
  {
    if (v43 < 0)
      v44 = 12;
    else
      v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v44;
  }
  v45 = *((_DWORD *)this + 30);
  if (v45)
  {
    if (v45 < 0)
      v46 = 12;
    else
      v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v46;
  }
  v47 = *((_DWORD *)this + 31);
  if (v47)
  {
    if (v47 < 0)
      v48 = 12;
    else
      v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v48;
  }
  v49 = *((_DWORD *)this + 32);
  if (v49)
  {
    if (v49 < 0)
      v50 = 12;
    else
      v50 = ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v50;
  }
  v51 = *((_DWORD *)this + 33);
  if (v51)
  {
    if (v51 < 0)
      v52 = 12;
    else
      v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
    result += v52;
  }
  *((_DWORD *)this + 34) = result;
  return result;
}

uint64_t CoreML::Specification::WeightParams::ByteSizeLong(CoreML::Specification::WeightParams *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CoreML::Specification::QuantizationParams *v15;
  uint64_t v16;
  uint64_t result;

  v2 = *((unsigned int *)this + 4);
  v3 = 4 * v2;
  if ((_DWORD)v2)
  {
    if ((v3 & 0x80000000) != 0)
      v4 = 11;
    else
      v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 8) = v3;
  v5 = *((_QWORD *)this + 5);
  if (*(char *)(v5 + 23) < 0)
    v6 = *(_QWORD *)(v5 + 8);
  else
    v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = v4 + v3;
  if (v6)
  {
    if (*(char *)(v5 + 23) >= 0)
      v8 = *(unsigned __int8 *)(v5 + 23);
    else
      v8 = *(_QWORD *)(v5 + 8);
    v7 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v9 = *((_QWORD *)this + 6);
  v10 = *(unsigned __int8 *)(v9 + 23);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_19;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_19;
  }
  v11 = *(_QWORD *)(v9 + 8);
  if ((v10 & 0x80u) == 0)
    v11 = v10;
  v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_19:
  v12 = *((_QWORD *)this + 7);
  v13 = *(unsigned __int8 *)(v12 + 23);
  if (*(char *)(v12 + 23) < 0)
  {
    if (!*(_QWORD *)(v12 + 8))
      goto LABEL_24;
  }
  else if (!*(_BYTE *)(v12 + 23))
  {
    goto LABEL_24;
  }
  v14 = *(_QWORD *)(v12 + 8);
  if ((v13 & 0x80u) == 0)
    v14 = v13;
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_24:
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_)
  {
    v15 = (CoreML::Specification::QuantizationParams *)*((_QWORD *)this + 8);
    if (v15)
    {
      v16 = CoreML::Specification::QuantizationParams::ByteSizeLong(v15);
      v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if (*((_BYTE *)this + 72))
    result = v7 + 3;
  else
    result = v7;
  *((_DWORD *)this + 19) = result;
  return result;
}

uint64_t CoreML::Specification::QuantizationParams::ByteSizeLong(CoreML::Specification::QuantizationParams *this)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *((_QWORD *)this + 2);
  v3 = (9 * (__clz(v2 | 1) ^ 0x3F) + 73) >> 6;
  if (v2)
    v4 = v3 + 1;
  else
    v4 = 0;
  v5 = *((_DWORD *)this + 9);
  if (v5 == 102)
  {
    v9 = (unsigned int *)*((_QWORD *)this + 3);
    v10 = v9[4];
    v11 = 4 * v10;
    if ((_DWORD)v10)
    {
      if ((v11 & 0x80000000) != 0)
        v12 = 11;
      else
        v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      v12 = 0;
    }
    v13 = v12 + v11;
    v9[8] = v11;
    v9[9] = v13;
    v7 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
    v8 = v4 + v13;
    goto LABEL_13;
  }
  if (v5 == 101)
  {
    v6 = CoreML::Specification::LinearQuantizationParams::ByteSizeLong(*((CoreML::Specification::LinearQuantizationParams **)this
                                                                       + 3));
    v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    v8 = v4 + v6;
LABEL_13:
    v4 = v8 + v7 + 2;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

uint64_t CoreML::Specification::LinearQuantizationParams::ByteSizeLong(CoreML::Specification::LinearQuantizationParams *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *((unsigned int *)this + 4);
  v2 = 4 * v1;
  if ((_DWORD)v1)
  {
    if ((v2 & 0x80000000) != 0)
      v3 = 11;
    else
      v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 8) = v2;
  v4 = v3 + v2;
  v5 = *((unsigned int *)this + 10);
  v6 = 4 * v5;
  if ((_DWORD)v5)
  {
    if ((v6 & 0x80000000) != 0)
      v7 = 11;
    else
      v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v4 += v7;
  }
  v8 = v4 + v6;
  *((_DWORD *)this + 14) = v6;
  *((_DWORD *)this + 15) = v8;
  return v8;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Wrap(uint64_t a1, uint64_t a2, google::protobuf::Arena *a3)
{
  uint64_t result;

  if (a3)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)result = &off_1E95666E0;
  *(_QWORD *)(result + 48) = a1;
  *(_QWORD *)(result + 56) = a2;
  *(_DWORD *)(result + 40) = 3;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::ByteSizeLong(_DWORD *a1)
{
  int v2;
  uint64_t v3;
  CoreML::Specification::CustomLayerParams_CustomLayerParamValue *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v7 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1);
    v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) != 0)
      v8 = *(_DWORD *)(v7 + 8);
    v3 = (int)(v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)) + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v6 = 0;
    return v6 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  v4 = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v5 = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(v4);
  v6 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v6 + v3;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::ByteSizeLong(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  int v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;

  v1 = *((_DWORD *)this + 7);
  if (v1 <= 29)
  {
    if (v1 == 10)
    {
      v3 = 9;
      goto LABEL_19;
    }
    if (v1 != 20)
    {
      v3 = 0;
      goto LABEL_19;
    }
    v4 = *((_QWORD *)this + 2);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v6 = *(_QWORD *)(v4 + 8);
    if ((v5 & 0x80u) == 0)
      v6 = v5;
    v7 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
    goto LABEL_15;
  }
  if (v1 == 30)
  {
    v8 = *((_DWORD *)this + 4);
    if (v8 < 0)
      v3 = 12;
    else
      v3 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
    goto LABEL_19;
  }
  if (v1 == 40)
  {
    v7 = (9 * (__clz(*((_QWORD *)this + 2) | 1) ^ 0x3F) + 73) >> 6;
LABEL_15:
    v3 = v7 + 2;
    goto LABEL_19;
  }
  v2 = v1 == 50;
  v3 = 3;
  if (!v2)
    v3 = 0;
LABEL_19:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::~MapEntryWrapper(_QWORD *a1)
{
  google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::~MapEntryImpl(a1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, (char *)&unk_1D3BDFB5D);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)result = &off_1E95674A8;
  *(_QWORD *)(result + 8) = v3;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::New(uint64_t a1, google::protobuf::Arena *a2)
{
  uint64_t result;

  if (a2)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a2;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E95674A8;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 8) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetArena(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Clear(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  result = *(_QWORD *)(a1 + 24);
  if (result)
    result = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(result);
  *(_DWORD *)(a1 + 40) &= 0xFFFFFFFC;
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::IsInitialized()
{
  return 1;
}

void google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::CheckTypeAndMergeFrom(uint64_t a1, _DWORD *a2)
{
  int v2;
  std::string **v5;
  const std::string *v6;
  google::protobuf::Arena *v7;
  CoreML::Specification::CustomLayerParams_CustomLayerParamValue *Aligned;
  google::protobuf::Arena **v9;
  unint64_t *v10;
  unint64_t v11;
  const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *v12;

  v2 = a2[10];
  if (v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (std::string **)(a1 + 16);
      if (*(uint64_t **)(a1 + 16) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 16), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      v6 = (const std::string *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 136))(a2);
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(a1 + 16), *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)v6);
      else
        std::string::operator=(*v5, v6);
      *(_DWORD *)(a1 + 40) |= 1u;
      v2 = a2[10];
    }
    if ((v2 & 2) != 0)
    {
      if (!*(_QWORD *)(a1 + 24))
      {
        v7 = *(google::protobuf::Arena **)(a1 + 32);
        if (v7)
        {
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(Aligned);
          v9 = google::protobuf::Arena::AllocateAligned(v7, 0, 24);
          *v9 = Aligned;
          v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
          v10 = (unint64_t *)((char *)v7 + 32);
          do
            v11 = __ldxr(v10);
          while (__stxr((unint64_t)v9, v10));
          v9[2] = (google::protobuf::Arena *)v11;
        }
        else
        {
          Aligned = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)operator new();
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(Aligned);
        }
        *(_QWORD *)(a1 + 24) = Aligned;
      }
      v12 = (const CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 144))(a2);
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergeFrom(*(CoreML::Specification::CustomLayerParams_CustomLayerParamValue **)(a1 + 24), v12);
      *(_DWORD *)(a1 + 40) |= 2u;
    }
  }
}

void sub_1D3B5FBD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MergePartialFromCodedStream(uint64_t a1, unsigned __int8 **a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  unint64_t TagFallback;
  std::string *v8;
  _BOOL8 result;
  int v10;
  char *v11;
  CoreML::Specification::CustomLayerParams_CustomLayerParamValue *Aligned;
  google::protobuf::Arena *v13;
  google::protobuf::Arena **v14;
  unint64_t *v15;
  unint64_t v16;
  char *v17;
  int VarintSizeAsIntFallback;
  int v19;
  unsigned int v20;
  int v21;
  BOOL v22;
  int v23;

  v5 = (google::protobuf::Arena **)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*a2;
        if (*a2 >= a2[1])
        {
          LODWORD(TagFallback) = 0;
        }
        else
        {
          TagFallback = *v6;
          if ((*v6 & 0x80000000) == 0)
          {
            *a2 = (unsigned __int8 *)(v6 + 1);
            goto LABEL_7;
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_7:
        if ((_DWORD)TagFallback != 10)
          break;
        *(_DWORD *)(a1 + 40) |= 1u;
        v8 = *(std::string **)(a1 + 16);
        if (v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, *(google::protobuf::Arena ***)(a1 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v8 = *(std::string **)(a1 + 16);
        }
        result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v8);
        if (!result)
          return result;
        v10 = *(_DWORD *)(a1 + 40) | 1;
        *(_DWORD *)(a1 + 40) = v10;
        v11 = (char *)*a2;
        if (*a2 < a2[1] && *v11 == 18)
        {
          *a2 = (unsigned __int8 *)(v11 + 1);
          goto LABEL_20;
        }
      }
      if ((_DWORD)TagFallback != 18)
        break;
      v10 = *(_DWORD *)(a1 + 40);
LABEL_20:
      *(_DWORD *)(a1 + 40) = v10 | 2;
      Aligned = *(CoreML::Specification::CustomLayerParams_CustomLayerParamValue **)(a1 + 24);
      if (!Aligned)
      {
        v13 = *(google::protobuf::Arena **)(a1 + 32);
        if (v13)
        {
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(Aligned);
          v14 = google::protobuf::Arena::AllocateAligned(v13, 0, 24);
          *v14 = Aligned;
          v14[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
          v15 = (unint64_t *)((char *)v13 + 32);
          do
            v16 = __ldxr(v15);
          while (__stxr((unint64_t)v14, v15));
          v14[2] = (google::protobuf::Arena *)v16;
        }
        else
        {
          Aligned = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)operator new();
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(Aligned);
        }
        *(_QWORD *)(a1 + 24) = Aligned;
      }
      v17 = (char *)*a2;
      if (*a2 >= a2[1] || *v17 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v17;
        *a2 = (unsigned __int8 *)(v17 + 1);
      }
      v19 = google::protobuf::io::CodedInputStream::PushLimit((google::protobuf::io::CodedInputStream *)a2, VarintSizeAsIntFallback);
      v21 = *((_DWORD *)a2 + 13);
      v22 = __OFSUB__(v21--, 1);
      *((_DWORD *)a2 + 13) = v21;
      if (v21 < 0 != v22)
        return 0;
      v23 = v19;
      result = CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(Aligned, (google::protobuf::io::CodedInputStream *)a2, v20);
      if (!result)
        return result;
      result = google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit((google::protobuf::io::CodedInputStream *)a2, v23);
      if (!result)
        return result;
      *(_DWORD *)(a1 + 40) |= 2u;
      if (*a2 == a2[1] && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0;
  }
}

void sub_1D3B5FE54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::SerializeWithCachedSizes(uint64_t a1, google::protobuf::io::CodedOutputStream *a2)
{
  uint64_t v4;
  google::protobuf::internal::WireFormatLite *v5;
  const google::protobuf::MessageLite *v6;
  google::protobuf::io::CodedOutputStream *v7;

  v4 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  google::protobuf::internal::WireFormatLite::WriteString(1u, v4, a2);
  v5 = (google::protobuf::internal::WireFormatLite *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  return google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(v5, a2, v6, v7);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::GetCachedSize(_DWORD *a1)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  v2 = a1[10];
  if ((v2 & 1) != 0)
  {
    v6 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 136))(a1);
    v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0)
      v7 = *(_DWORD *)(v6 + 8);
    v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[10] & 2) != 0)
      goto LABEL_3;
LABEL_7:
    v5 = 0;
    return v5 + v3;
  }
  v3 = 0;
  if ((v2 & 2) == 0)
    goto LABEL_7;
LABEL_3:
  v4 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a1 + 144))(a1);
  v5 = *(_DWORD *)(v4 + 24) + ((9 * (__clz(*(_DWORD *)(v4 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::InternalSerializeWithCachedSizesToArray(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  const void **v6;
  char *v7;
  uint64_t v8;
  _BYTE *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;

  v6 = (const void **)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 136))(a1);
  *a3 = 10;
  v7 = google::protobuf::io::CodedOutputStream::WriteStringWithSizeToArray(v6, a3 + 1);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a1);
  *v7 = 18;
  v9 = v7 + 1;
  v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 120))(v8);
  if (v10 < 0x80)
  {
    LOBYTE(v11) = v10;
  }
  else
  {
    do
    {
      *v9++ = v10 | 0x80;
      v11 = v10 >> 7;
      v12 = v10 >> 14;
      v10 >>= 7;
    }
    while (v12);
  }
  *v9 = v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *))(*(_QWORD *)v8 + 128))(v8, a2, v9 + 1);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::key(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48);
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::MapEntryWrapper::value(uint64_t a1)
{
  return *(_QWORD *)(a1 + 56);
}

CoreML::Specification::CustomLayerParams_CustomLayerParamValue *CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(_QWORD *)this = &off_1E9564748;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)&CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B60088(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

BOOL CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  BOOL v12;
  unsigned int TagFallback;
  unsigned int v14;
  char *v15;
  unint64_t v16;
  std::string *v17;
  char *v18;
  int v19;
  char *v20;
  unint64_t Varint64Fallback;
  unint64_t *v22;
  unint64_t v23;
  _BOOL8 result;
  int v25;
  std::string *v26;
  std::string *v27;
  std::string::size_type size;
  char v29;
  char v30;
  uint64_t Varint32Fallback;
  unint64_t v32;

  v5 = (std::string **)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(unsigned __int8 **)a2;
        v7 = *((_QWORD *)a2 + 1);
        if (*(_QWORD *)a2 >= v7)
        {
          LODWORD(v9) = 0;
        }
        else
        {
          v8 = v6 + 1;
          v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(_QWORD *)a2 = v8;
            v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0)
              goto LABEL_9;
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(_QWORD *)a2 = v6 + 2;
              v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0)
          goto LABEL_9;
LABEL_17:
        v14 = v10 >> 3;
        if (v10 >> 3 > 0x1D)
          break;
        if (v14 == 10)
        {
          if (v10 == 81)
          {
            CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
            v32 = 0;
            v22 = *(unint64_t **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 8)
            {
              result = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)a2, &v32);
              if (!result)
                return result;
              v23 = v32;
            }
            else
            {
              v23 = *v22;
              *(_QWORD *)a2 = v22 + 1;
            }
            *v5 = (std::string *)v23;
            goto LABEL_64;
          }
          goto LABEL_9;
        }
        if (v14 != 20 || v10 != 162)
          goto LABEL_9;
        if (*((_DWORD *)this + 7) != 20)
        {
          CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
          *((_DWORD *)this + 7) = 20;
          *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_44:
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v17 = *v5;
          goto LABEL_45;
        }
        v17 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_44;
LABEL_45:
        result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v17);
        if (!result)
          return result;
        v25 = *((_DWORD *)this + 7);
        v26 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
        if (v25 == 20)
          v26 = *v5;
        if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0)
          v26 = (std::string *)v26->__r_.__value_.__r.__words[0];
        v27 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
        if (v25 == 20)
          v27 = *v5;
        if (SHIBYTE(v27->__r_.__value_.__r.__words[2]) < 0)
          size = v27->__r_.__value_.__l.__size_;
        else
          LODWORD(size) = HIBYTE(v27->__r_.__value_.__r.__words[2]);
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v26, size, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue"))return 0;
      }
      if (v14 == 30)
      {
        if (v10 != 240)
          goto LABEL_9;
        CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
        v18 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v19 = 0;
        }
        else
        {
          v19 = *v18;
          if ((*v18 & 0x80000000) == 0)
          {
            *(_QWORD *)a2 = v18 + 1;
LABEL_63:
            *(_DWORD *)v5 = v19;
            goto LABEL_64;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
        v19 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
        goto LABEL_63;
      }
      if (v14 != 40)
        break;
      if (v10 != 64)
        goto LABEL_9;
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
      v20 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v30 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v20;
        *(_QWORD *)a2 = v20 + 1;
      }
      *v5 = (std::string *)Varint64Fallback;
LABEL_64:
      *((_DWORD *)this + 7) = v14;
    }
    if (v14 == 50 && v10 == 144)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
      {
        v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v29 & 1) == 0)
          return 0;
      }
      else
      {
        v16 = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      *(_BYTE *)v5 = v16 != 0;
      goto LABEL_64;
    }
LABEL_9:
    if ((_DWORD)v10)
      v12 = (v10 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = this;
  if (*(_DWORD *)(this + 28) == 20)
  {
    v2 = *(_QWORD *)(this + 16);
    if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
    {
      if (*(char *)(v2 + 23) < 0)
        operator delete(*(void **)v2);
      this = MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

unint64_t *CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(CoreML::Specification::protobuf_NeuralNetwork_2eproto *this)
{
  unint64_t v1;
  unint64_t *result;
  _QWORD v3[2];
  char v4;

  v1 = atomic_load(&CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(void)::once);
  if (v1 != 2)
  {
    v3[0] = &off_1E9567B38;
    v3[1] = CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct::InitDefaultsImpl;
    v4 = 0;
    return google::protobuf::GoogleOnceInitImpl(&CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(void)::once, (uint64_t)v3);
  }
  return result;
}

uint64_t *CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct::InitDefaultsImpl(CoreML::Specification::protobuf_NeuralNetwork_2eproto::TableStruct *this)
{
  unint64_t *inited;
  unint64_t *v2;
  uint64_t *result;

  inited = google::protobuf::internal::InitProtobufDefaults(this);
  v2 = CoreML::Specification::protobuf_DataStructures_2eproto::InitDefaults((CoreML::Specification::protobuf_DataStructures_2eproto *)inited);
  CoreML::Specification::protobuf_Parameters_2eproto::InitDefaults((CoreML::Specification::protobuf_Parameters_2eproto *)v2);
  CoreML::Specification::_NeuralNetwork_default_instance_ = (uint64_t)&off_1E955B408;
  CoreML::Specification::_NeuralNetworkImageScaler_default_instance_ = (uint64_t)&off_1E9561B58;
  unk_1EDB92848 = 0u;
  unk_1EDB92858 = 0u;
  byte_1EDB92868 = 1;
  CoreML::Specification::_NeuralNetworkMeanImage_default_instance_ = (uint64_t)&off_1E9560B50;
  *(_QWORD *)algn_1EDB92008 = 0;
  qword_1EDB92010 = 0;
  unk_1EDB92018 = 0;
  dword_1EDB92024 = 0;
  byte_1EDB92028 = 1;
  CoreML::Specification::_ActivationReLU_default_instance_ = (uint64_t)&off_1E955B5D0;
  qword_1EDB8FDD0 = 0;
  dword_1EDB8FDD8 = 0;
  byte_1EDB8FDE0 = 1;
  qword_1EDB91548 = 0;
  *(_QWORD *)&dword_1EDB91550 = 0;
  CoreML::Specification::_ActivationLeakyReLU_default_instance_ = (uint64_t)&off_1E955EC70;
  byte_1EDB91558 = 1;
  CoreML::Specification::_ActivationTanh_default_instance_ = (uint64_t)&off_1E955B668;
  qword_1EDB8FDF0 = 0;
  dword_1EDB8FDF8 = 0;
  byte_1EDB8FE00 = 1;
  dword_1EDB91798 = 0;
  CoreML::Specification::_ActivationScaledTanh_default_instance_ = (uint64_t)&off_1E955F428;
  *(_QWORD *)algn_1EDB91788 = 0;
  qword_1EDB91790 = 0;
  byte_1EDB917A0 = 1;
  CoreML::Specification::_ActivationSigmoid_default_instance_ = (uint64_t)&off_1E955D710;
  qword_1EDB90908 = 0;
  dword_1EDB90910 = 0;
  byte_1EDB90918 = 1;
  qword_1EDB903D8 = 0;
  unk_1EDB903E0 = 0;
  CoreML::Specification::_ActivationLinear_default_instance_ = (uint64_t)&off_1E955CB30;
  dword_1EDB903E8 = 0;
  byte_1EDB903F0 = 1;
  qword_1EDB91A90 = 0;
  unk_1EDB91A98 = 0;
  CoreML::Specification::_ActivationSigmoidHard_default_instance_ = (uint64_t)&off_1E955FD10;
  dword_1EDB91AA0 = 0;
  byte_1EDB91AA8 = 1;
  CoreML::Specification::_ActivationELU_default_instance_ = (uint64_t)&off_1E955B110;
  qword_1EDB8FBD0 = 0;
  qword_1EDB8FBD8 = 0;
  byte_1EDB8FBE0 = 1;
  qword_1EDB928F8 = 0;
  *(_QWORD *)&dword_1EDB92900 = 0;
  CoreML::Specification::_ActivationThresholdedReLU_default_instance_ = (uint64_t)&off_1E9561DB8;
  byte_1EDB92908 = 1;
  CoreML::Specification::_ActivationSoftsign_default_instance_ = (uint64_t)&off_1E955E128;
  qword_1EDB90C00 = 0;
  dword_1EDB90C08 = 0;
  byte_1EDB90C10 = 1;
  CoreML::Specification::_ActivationSoftplus_default_instance_ = (uint64_t)&off_1E955E090;
  qword_1EDB90BE0 = 0;
  dword_1EDB90BE8 = 0;
  byte_1EDB90BF0 = 1;
  CoreML::Specification::_ActivationParametricSoftplus_default_instance_ = (uint64_t)&off_1E95630B8;
  CoreML::Specification::_ActivationParams_default_instance_ = (uint64_t)&off_1E955CBC8;
  CoreML::Specification::_BranchLayerParams_default_instance_ = (uint64_t)&off_1E955D8D8;
  CoreML::Specification::_LoopLayerParams_default_instance_ = (uint64_t)&off_1E955C5D8;
  CoreML::Specification::_LoopBreakLayerParams_default_instance_ = (uint64_t)&off_1E955F720;
  qword_1EDB91880 = 0;
  dword_1EDB91888 = 0;
  byte_1EDB91890 = 1;
  CoreML::Specification::_LoopContinueLayerParams_default_instance_ = (uint64_t)&off_1E95613A0;
  qword_1EDB923F8 = 0;
  dword_1EDB92400 = 0;
  byte_1EDB92408 = 1;
  CoreML::Specification::_CopyLayerParams_default_instance_ = (uint64_t)&off_1E955C1B0;
  qword_1EDB90138 = 0;
  dword_1EDB90140 = 0;
  byte_1EDB90148 = 1;
  qword_1EDB91FC8 = 0;
  unk_1EDB91FD0 = 0;
  CoreML::Specification::_GreaterThanLayerParams_default_instance_ = (uint64_t)&off_1E9560A20;
  byte_1EDB91FD8 = 1;
  qword_1EDB92358 = 0;
  unk_1EDB92360 = 0;
  CoreML::Specification::_GreaterEqualLayerParams_default_instance_ = (uint64_t)&off_1E95611D8;
  byte_1EDB92368 = 1;
  qword_1EDB91628 = 0;
  unk_1EDB91630 = 0;
  CoreML::Specification::_LessThanLayerParams_default_instance_ = (uint64_t)&off_1E955F000;
  byte_1EDB91638 = 1;
  qword_1EDB91840 = 0;
  unk_1EDB91848 = 0;
  CoreML::Specification::_LessEqualLayerParams_default_instance_ = (uint64_t)&off_1E955F5F0;
  byte_1EDB91850 = 1;
  qword_1EDB90540 = 0;
  unk_1EDB90548 = 0;
  CoreML::Specification::_EqualLayerParams_default_instance_ = (uint64_t)&off_1E955CE28;
  byte_1EDB90550 = 1;
  qword_1EDB91668 = 0;
  unk_1EDB91670 = 0;
  CoreML::Specification::_NotEqualLayerParams_default_instance_ = (uint64_t)&off_1E955F130;
  byte_1EDB91678 = 1;
  CoreML::Specification::_LogicalAndLayerParams_default_instance_ = (uint64_t)&off_1E9560138;
  qword_1EDB91BF8 = 0;
  dword_1EDB91C00 = 0;
  byte_1EDB91C08 = 1;
  CoreML::Specification::_LogicalOrLayerParams_default_instance_ = (uint64_t)&off_1E955F688;
  qword_1EDB91860 = 0;
  dword_1EDB91868 = 0;
  byte_1EDB91870 = 1;
  CoreML::Specification::_LogicalXorLayerParams_default_instance_ = (uint64_t)&off_1E9560268;
  qword_1EDB91C38 = 0;
  dword_1EDB91C40 = 0;
  byte_1EDB91C48 = 1;
  CoreML::Specification::_LogicalNotLayerParams_default_instance_ = (uint64_t)&off_1E95601D0;
  qword_1EDB91C18 = 0;
  dword_1EDB91C20 = 0;
  byte_1EDB91C28 = 1;
  CoreML::Specification::_BorderAmounts_default_instance_ = (uint64_t)&off_1E955B2D8;
  dword_1EDB8FC78 = 0;
  unk_1EDB8FC68 = 0u;
  unk_1EDB8FC58 = 0u;
  byte_1EDB8FC80 = 1;
  qword_1EDB8FB50 = 0;
  qword_1EDB8FB58 = 0;
  CoreML::Specification::_ValidPadding_default_instance_ = (uint64_t)&off_1E955AFE0;
  dword_1EDB8FB60 = 0;
  byte_1EDB8FB68 = 1;
  qword_1EDB8F998 = 0;
  *(_QWORD *)&dword_1EDB8F9A0 = 0;
  CoreML::Specification::_SamePadding_default_instance_ = (uint64_t)&off_1E955A400;
  byte_1EDB8F9A8 = 1;
  qword_1EDB8FAC0 = 0;
  unk_1EDB8FAC8 = 0;
  CoreML::Specification::_SamplingMode_default_instance_ = (uint64_t)&off_1E955AE18;
  byte_1EDB8FAD0 = 1;
  qword_1EDB90C68 = 0;
  unk_1EDB90C70 = 0;
  CoreML::Specification::_BoxCoordinatesMode_default_instance_ = (uint64_t)&off_1E955E2F0;
  byte_1EDB90C78 = 1;
  CoreML::Specification::_WeightParams_default_instance_ = (uint64_t)&off_1E955B078;
  *(_QWORD *)algn_1EDB8FB78 = 0;
  qword_1EDB8FB80 = 0;
  unk_1EDB8FB88 = 0;
  qword_1EDB8FB98 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB8FBA0 = &google::protobuf::internal::fixed_address_empty_string;
  byte_1EDB8FBB8 = 0;
  qword_1EDB8FBA8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB8FBB0 = 0;
  dword_1EDB8FBBC = 0;
  byte_1EDB8FBC0 = 1;
  qword_1EDB913F0 = 0;
  qword_1EDB913D8 = 0;
  unk_1EDB913E0 = 0;
  CoreML::Specification::_QuantizationParams_default_instance_ = (uint64_t)&off_1E955E848;
  byte_1EDB913F8 = 1;
  qword_1EDB92820 = 0;
  unk_1EDB92828 = 0;
  CoreML::Specification::_LinearQuantizationParams_default_instance_ = (uint64_t)&off_1E9561AC0;
  unk_1EDB92800 = 0;
  qword_1EDB92808 = 0;
  unk_1EDB92810 = 0;
  dword_1EDB92834 = 0;
  byte_1EDB92838 = 1;
  CoreML::Specification::_LookUpTableQuantizationParams_default_instance_ = (uint64_t)&off_1E95634E0;
  *(_QWORD *)algn_1EDB93248 = 0;
  qword_1EDB93250 = 0;
  unk_1EDB93258 = 0;
  dword_1EDB93264 = 0;
  byte_1EDB93268 = 1;
  qword_1EDB91E98 = 0;
  unk_1EDB91EA0 = 0;
  qword_1EDB91EB0 = 0;
  unk_1EDB91EB8 = 0;
  qword_1EDB91EC8 = 0;
  unk_1EDB91ED0 = 0;
  CoreML::Specification::_ConvolutionLayerParams_default_instance_ = (uint64_t)&off_1E95607C0;
  *(_QWORD *)algn_1EDB91E78 = 0;
  qword_1EDB91E80 = 0;
  unk_1EDB91E88 = 0;
  unk_1EDB91EFA = 0u;
  xmmword_1EDB91EE0 = 0u;
  unk_1EDB91EF0 = 0u;
  qword_1EDB91F18 = 0;
  byte_1EDB91F20 = 1;
  CoreML::Specification::_Convolution3DLayerParams_default_instance_ = (uint64_t)&off_1E95618F8;
  *(_QWORD *)algn_1EDB92718 = 0;
  qword_1EDB92720 = 0;
  unk_1EDB92728 = 0;
  dword_1EDB92798 = 0;
  unk_1EDB92788 = 0u;
  unk_1EDB92778 = 0u;
  unk_1EDB92768 = 0u;
  unk_1EDB92758 = 0u;
  unk_1EDB92748 = 0u;
  *(_OWORD *)&qword_1EDB92738 = 0u;
  byte_1EDB927A0 = 1;
  CoreML::Specification::_InnerProductLayerParams_default_instance_ = (uint64_t)&off_1E9561270;
  dword_1EDB923A4 = 0;
  *(_OWORD *)((char *)&xmmword_1EDB92388 + 10) = 0u;
  xmmword_1EDB92388 = 0u;
  *(_OWORD *)algn_1EDB92378 = 0u;
  byte_1EDB923A8 = 1;
  CoreML::Specification::_EmbeddingLayerParams_default_instance_ = (uint64_t)&off_1E955F558;
  dword_1EDB9182C = 0;
  *(_OWORD *)((char *)&xmmword_1EDB91810 + 9) = 0u;
  xmmword_1EDB91810 = 0u;
  unk_1EDB91800 = 0u;
  byte_1EDB91830 = 1;
  CoreML::Specification::_EmbeddingNDLayerParams_default_instance_ = (uint64_t)&off_1E9560858;
  dword_1EDB91F6C = 0;
  *(_OWORD *)((char *)&xmmword_1EDB91F50 + 9) = 0u;
  xmmword_1EDB91F50 = 0u;
  unk_1EDB91F40 = 0u;
  byte_1EDB91F70 = 1;
  CoreML::Specification::_BatchnormLayerParams_default_instance_ = (uint64_t)&off_1E955F4C0;
  CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_ = (uint64_t)&off_1E9564878;
  *(_QWORD *)algn_1EDB93938 = 0;
  qword_1EDB93940 = 0;
  unk_1EDB93948 = 0;
  dword_1EDB93954 = 0;
  byte_1EDB93958 = 1;
  qword_1EDB91380 = 0;
  unk_1EDB91388 = 0;
  CoreML::Specification::_PoolingLayerParams_default_instance_ = (uint64_t)&off_1E955E7B0;
  unk_1EDB91360 = 0;
  qword_1EDB91368 = 0;
  unk_1EDB91370 = 0;
  word_1EDB91398 = 0;
  dword_1EDB91394 = 0;
  qword_1EDB913A8 = 0;
  byte_1EDB913B0 = 1;
  CoreML::Specification::_Pooling3DLayerParams_default_instance_ = (uint64_t)&off_1E955F7B8;
  qword_1EDB918E0 = 0;
  unk_1EDB918D0 = 0u;
  unk_1EDB918C0 = 0u;
  unk_1EDB918B0 = 0u;
  unk_1EDB918A0 = 0u;
  byte_1EDB918E8 = 1;
  qword_1EDB92CA8 = 0;
  unk_1EDB92CB0 = 0;
  CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_ = (uint64_t)&off_1E9562608;
  byte_1EDB92CB8 = 1;
  qword_1EDB937A0 = 0;
  *(_QWORD *)&dword_1EDB937A8 = 0;
  CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_ = (uint64_t)&off_1E95643B8;
  byte_1EDB937B0 = 1;
  CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_ = (uint64_t)&off_1E9564450;
  qword_1EDB937C0 = 0;
  dword_1EDB937C8 = 0;
  byte_1EDB937D0 = 1;
  CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_ = (uint64_t)&off_1E9564618;
  qword_1EDB93850 = 0;
  dword_1EDB93858 = 0;
  byte_1EDB93860 = 1;
  CoreML::Specification::_PaddingLayerParams_default_instance_ = (uint64_t)&off_1E955E5E8;
  CoreML::Specification::_ConcatLayerParams_default_instance_ = (uint64_t)&off_1E955D970;
  *(_QWORD *)algn_1EDB909A8 = 0;
  byte_1EDB909B0 = 0;
  dword_1EDB909B4 = 0;
  byte_1EDB909B8 = 1;
  CoreML::Specification::_LRNLayerParams_default_instance_ = (uint64_t)&off_1E955BA90;
  unk_1EDB8FF88 = 0u;
  unk_1EDB8FF78 = 0u;
  byte_1EDB8FF98 = 1;
  CoreML::Specification::_SoftmaxLayerParams_default_instance_ = (uint64_t)&off_1E955EAA8;
  qword_1EDB914A8 = 0;
  dword_1EDB914B0 = 0;
  byte_1EDB914B8 = 1;
  qword_1EDB90858 = 0;
  unk_1EDB90860 = 0;
  CoreML::Specification::_SplitLayerParams_default_instance_ = (uint64_t)&off_1E955D4B0;
  dword_1EDB90868 = 0;
  byte_1EDB90870 = 1;
  qword_1EDB8FE10 = 0;
  unk_1EDB8FE18 = 0;
  CoreML::Specification::_AddLayerParams_default_instance_ = (uint64_t)&off_1E955B700;
  byte_1EDB8FE20 = 1;
  qword_1EDB91648 = 0;
  unk_1EDB91650 = 0;
  CoreML::Specification::_MultiplyLayerParams_default_instance_ = (uint64_t)&off_1E955F098;
  byte_1EDB91658 = 1;
  CoreML::Specification::_UnaryFunctionLayerParams_default_instance_ = (uint64_t)&off_1E9561D20;
  unk_1EDB928D8 = 0u;
  unk_1EDB928C8 = 0u;
  byte_1EDB928E8 = 1;
  qword_1EDB91758 = 0;
  unk_1EDB91760 = 0;
  CoreML::Specification::_UpsampleLayerParams_default_instance_ = (uint64_t)&off_1E955F390;
  *(_QWORD *)algn_1EDB91738 = 0;
  qword_1EDB91740 = 0;
  unk_1EDB91748 = 0;
  unk_1EDB9176C = 0;
  dword_1EDB91774 = 0;
  byte_1EDB91778 = 1;
  CoreML::Specification::_ResizeBilinearLayerParams_default_instance_ = (uint64_t)&off_1E9562278;
  CoreML::Specification::_CropResizeLayerParams_default_instance_ = (uint64_t)&off_1E955FE40;
  CoreML::Specification::_BiasLayerParams_default_instance_ = (uint64_t)&off_1E955BFE8;
  CoreML::Specification::_ScaleLayerParams_default_instance_ = (uint64_t)&off_1E955D380;
  CoreML::Specification::_LoadConstantLayerParams_default_instance_ = (uint64_t)&off_1E9561308;
  qword_1EDB91FE8 = 0;
  unk_1EDB91FF0 = 0;
  CoreML::Specification::_L2NormalizeLayerParams_default_instance_ = (uint64_t)&off_1E9560AB8;
  byte_1EDB91FF8 = 1;
  qword_1EDB90D18 = 0;
  unk_1EDB90D20 = 0;
  CoreML::Specification::_FlattenLayerParams_default_instance_ = (uint64_t)&off_1E955E4B8;
  byte_1EDB90D28 = 1;
  CoreML::Specification::_ReshapeLayerParams_default_instance_ = (uint64_t)&off_1E955E8E0;
  *(_QWORD *)algn_1EDB91418 = 0;
  qword_1EDB91420 = 0;
  unk_1EDB91428 = 0;
  unk_1EDB91434 = 0;
  byte_1EDB91440 = 1;
  CoreML::Specification::_PermuteLayerParams_default_instance_ = (uint64_t)&off_1E955E680;
  *(_QWORD *)algn_1EDB91308 = 0;
  qword_1EDB91310 = 0;
  unk_1EDB91318 = 0;
  dword_1EDB91324 = 0;
  byte_1EDB91328 = 1;
  CoreML::Specification::_ReorganizeDataLayerParams_default_instance_ = (uint64_t)&off_1E9562148;
  *(_QWORD *)algn_1EDB92B08 = 0;
  qword_1EDB92B10 = 0;
  unk_1EDB92B18 = 0;
  byte_1EDB92B20 = 1;
  CoreML::Specification::_SliceLayerParams_default_instance_ = (uint64_t)&off_1E955D418;
  qword_1EDB90840 = 0;
  *(_OWORD *)&algn_1EDB90820[16] = 0u;
  *(_OWORD *)algn_1EDB90820 = 0u;
  byte_1EDB90848 = 1;
  qword_1EDB90B40 = 0;
  unk_1EDB90B48 = 0;
  CoreML::Specification::_ReduceLayerParams_default_instance_ = (uint64_t)&off_1E955DE30;
  *(_QWORD *)algn_1EDB90B38 = 0;
  byte_1EDB90B50 = 1;
  CoreML::Specification::_CropLayerParams_default_instance_ = (uint64_t)&off_1E955C2E0;
  CoreML::Specification::_AverageLayerParams_default_instance_ = (uint64_t)&off_1E955E258;
  qword_1EDB90C48 = 0;
  dword_1EDB90C50 = 0;
  byte_1EDB90C58 = 1;
  CoreML::Specification::_MaxLayerParams_default_instance_ = (uint64_t)&off_1E955BB28;
  qword_1EDB8FFA8 = 0;
  dword_1EDB8FFB0 = 0;
  byte_1EDB8FFB8 = 1;
  CoreML::Specification::_MinLayerParams_default_instance_ = (uint64_t)&off_1E955BBC0;
  qword_1EDB8FFC8 = 0;
  dword_1EDB8FFD0 = 0;
  byte_1EDB8FFD8 = 1;
  CoreML::Specification::_DotProductLayerParams_default_instance_ = (uint64_t)&off_1E955FF70;
  unk_1EDB91B70 = 0;
  byte_1EDB91B78 = 0;
  dword_1EDB91B7C = 0;
  byte_1EDB91B80 = 1;
  dword_1EDB93580 = 0;
  qword_1EDB93570 = 0;
  unk_1EDB93578 = 0;
  CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_ = (uint64_t)&off_1E9563DC8;
  byte_1EDB93588 = 1;
  dword_1EDB92BA0 = 0;
  qword_1EDB92B90 = 0;
  unk_1EDB92B98 = 0;
  CoreML::Specification::_SequenceRepeatLayerParams_default_instance_ = (uint64_t)&off_1E9562310;
  byte_1EDB92BA8 = 1;
  CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_ = (uint64_t)&off_1E9562998;
  CoreML::Specification::_GRULayerParams_default_instance_ = (uint64_t)&off_1E955B960;
  CoreML::Specification::_LSTMParams_default_instance_ = (uint64_t)&off_1E9559CE0;
  CoreML::Specification::_LSTMWeightParams_default_instance_ = (uint64_t)&off_1E955D1B8;
  CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_ = (uint64_t)&off_1E95636A8;
  CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_ = (uint64_t)&off_1E9563150;
  CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_ = (uint64_t)&off_1E9564748;
  CoreML::Specification::_CustomLayerParams_ParametersEntry_default_instance_ = (uint64_t)&off_1E95674A8;
  qword_1EDB936B0 = 0;
  CoreML::Specification::_ActivationPReLU_default_instance_ = (uint64_t)&off_1E955BE20;
  *(_QWORD *)algn_1EDB90048 = 0;
  unk_1EDB8FD00 = 0u;
  unk_1EDB8FD10 = 0u;
  unk_1EDB8FD20 = 0u;
  unk_1EDB8FD30 = 0u;
  *(_OWORD *)((char *)&qword_1EDB8FD38 + 4) = 0u;
  byte_1EDB8FD50 = 1;
  qword_1EDB90050 = 0;
  dword_1EDB90058 = 0;
  byte_1EDB90060 = 1;
  qword_1EDB930A0 = 0;
  qword_1EDB930A8 = 0;
  dword_1EDB930B8 = 0;
  qword_1EDB930B0 = 0;
  byte_1EDB930C0 = 1;
  qword_1EDB90400 = 0;
  qword_1EDB90410 = 0;
  byte_1EDB90418 = 1;
  qword_1EDB90978 = 0;
  qword_1EDB90980 = 0;
  dword_1EDB90990 = 0;
  qword_1EDB90988 = 0;
  byte_1EDB90998 = 1;
  qword_1EDB90260 = 0;
  unk_1EDB90268 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB90270 = 0;
  unk_1EDB90278 = 0;
  dword_1EDB90288 = 0;
  qword_1EDB90280 = 0;
  byte_1EDB90290 = 1;
  *(_OWORD *)((char *)xmmword_1EDB917D0 + 12) = 0u;
  xmmword_1EDB917D0[0] = 0u;
  unk_1EDB917C0 = 0u;
  unk_1EDB917B0 = 0u;
  byte_1EDB917F0 = 1;
  qword_1EDB912D8 = 0;
  qword_1EDB912C0 = 0;
  qword_1EDB912C8 = 0;
  byte_1EDB912E0 = 1;
  qword_1EDB92B50 = 0;
  unk_1EDB92B58 = 0;
  qword_1EDB92B60 = 0;
  qword_1EDB92B70 = 0;
  dword_1EDB92B78 = 0;
  byte_1EDB92B80 = 1;
  qword_1EDB91AE8 = 0;
  unk_1EDB91AF0 = 0;
  qword_1EDB91AF8 = 0;
  qword_1EDB91B08 = 0;
  qword_1EDB91B10 = 0;
  dword_1EDB91B20 = 0;
  qword_1EDB91B18 = 0;
  byte_1EDB91B28 = 1;
  qword_1EDB900B0 = 0;
  unk_1EDB900B8 = 0;
  qword_1EDB900C0 = 0;
  qword_1EDB900D0 = 0;
  dword_1EDB900D8 = 0;
  byte_1EDB900E0 = 1;
  qword_1EDB907E0 = 0;
  unk_1EDB907E8 = 0;
  qword_1EDB907C0 = 0;
  unk_1EDB907C8 = 0;
  qword_1EDB907D0 = 0;
  qword_1EDB907F8 = 0;
  unk_1EDB90800 = 0;
  byte_1EDB90808 = 0;
  dword_1EDB9080C = 0;
  byte_1EDB90810 = 1;
  qword_1EDB923B8 = 0;
  unk_1EDB923C0 = 0;
  qword_1EDB923C8 = 0;
  qword_1EDB923D8 = 0;
  dword_1EDB923E0 = 0;
  byte_1EDB923E8 = 1;
  qword_1EDB90180 = 0;
  unk_1EDB90188 = 0;
  qword_1EDB90178 = 0;
  qword_1EDB90198 = 0;
  dword_1EDB901A0 = 0;
  byte_1EDB901A8 = 1;
  dword_1EDB92E0C = 0;
  *(_OWORD *)((char *)&xmmword_1EDB92DF0 + 11) = 0u;
  xmmword_1EDB92DF0 = 0u;
  unk_1EDB92DE0 = 0u;
  unk_1EDB92DD0 = 0u;
  byte_1EDB92E10 = 1;
  dword_1EDB8FF24 = 0;
  unk_1EDB8FF13 = 0u;
  *(_OWORD *)&qword_1EDB8FF08 = 0u;
  *(_OWORD *)&qword_1EDB8FEF8 = 0u;
  *(_OWORD *)&qword_1EDB8FEE8 = 0u;
  *(_OWORD *)&qword_1EDB8FED8 = 0u;
  *(_OWORD *)&qword_1EDB8FEC8 = 0u;
  unk_1EDB8FEB8 = 0u;
  unk_1EDB8FEA8 = 0u;
  byte_1EDB8FF28 = 1;
  dword_1EDB8F7AC = 0;
  qword_1EDB8F798 = 0;
  unk_1EDB8F7A0 = 0;
  byte_1EDB8F7A8 = 0;
  byte_1EDB8F7B0 = 1;
  dword_1EDB906D0 = 0;
  unk_1EDB906C0 = 0u;
  unk_1EDB906B0 = 0u;
  unk_1EDB906A0 = 0u;
  unk_1EDB90690 = 0u;
  unk_1EDB90680 = 0u;
  unk_1EDB90670 = 0u;
  unk_1EDB90660 = 0u;
  unk_1EDB90650 = 0u;
  byte_1EDB906D8 = 1;
  dword_1EDB93324 = 0;
  byte_1EDB93320 = 0;
  unk_1EDB93310 = 0u;
  *(_OWORD *)&qword_1EDB93300 = 0u;
  *(_OWORD *)&algn_1EDB932E0[16] = 0u;
  *(_OWORD *)algn_1EDB932E0 = 0u;
  byte_1EDB93328 = 1;
  *(_OWORD *)&algn_1EDB93128[4] = 0u;
  *(_OWORD *)&qword_1EDB93120 = 0u;
  unk_1EDB93110 = 0u;
  unk_1EDB93100 = 0u;
  unk_1EDB930F0 = 0u;
  unk_1EDB930E0 = 0u;
  unk_1EDB930D0 = 0u;
  byte_1EDB93140 = 1;
  qword_1EDB938B8 = 0;
  qword_1EDB938C8 = 0;
  byte_1EDB938D0 = 1;
  qword_1EDB936C0 = 0;
  unk_1EDB936C8 = 0;
  qword_1EDB936B8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB936D0 = 0;
  byte_1EDB936D8 = 1;
  *((_BYTE *)CoreML::Specification::CustomLayerParams::CustomLayerParams((CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_)
  + 96) = 1;
  qword_1EDB90050 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB8FB58 = (uint64_t)&CoreML::Specification::_BorderAmounts_default_instance_;
  qword_1EDB8FBB0 = (uint64_t)&CoreML::Specification::_QuantizationParams_default_instance_;
  qword_1EDB912C8 = (uint64_t)&CoreML::Specification::_BorderAmounts_default_instance_;
  qword_1EDB90980 = (uint64_t)&CoreML::Specification::_NeuralNetwork_default_instance_;
  CoreML::Specification::_TransposeLayerParams_default_instance_ = (uint64_t)&off_1E955FC78;
  unk_1EDB91A60 = 0;
  qword_1EDB91A68 = 0;
  unk_1EDB91A70 = 0;
  dword_1EDB91A7C = 0;
  byte_1EDB91A80 = 1;
  CoreML::Specification::_BatchedMatMulLayerParams_default_instance_ = (uint64_t)&off_1E9561860;
  CoreML::Specification::_ConcatNDLayerParams_default_instance_ = (uint64_t)&off_1E955ED08;
  *(_QWORD *)algn_1EDB91568 = 0;
  dword_1EDB9157C = 0;
  qword_1EDB91570 = 0;
  byte_1EDB91578 = 0;
  byte_1EDB91580 = 1;
  CoreML::Specification::_SoftmaxNDLayerParams_default_instance_ = (uint64_t)&off_1E955FB48;
  unk_1EDB91A00 = 0;
  qword_1EDB91A08 = 0;
  dword_1EDB91A10 = 0;
  byte_1EDB91A18 = 1;
  CoreML::Specification::_ReverseLayerParams_default_instance_ = (uint64_t)&off_1E955E978;
  unk_1EDB91450 = 0;
  qword_1EDB91458 = 0;
  unk_1EDB91460 = 0;
  dword_1EDB9146C = 0;
  byte_1EDB91470 = 1;
  CoreML::Specification::_ReverseSeqLayerParams_default_instance_ = (uint64_t)&off_1E9560560;
  *(_QWORD *)algn_1EDB91DC8 = 0;
  dword_1EDB91DE0 = 0;
  qword_1EDB91DD0 = 0;
  unk_1EDB91DD8 = 0;
  byte_1EDB91DE8 = 1;
  CoreML::Specification::_FillLikeLayerParams_default_instance_ = (uint64_t)&off_1E955EE38;
  *(_QWORD *)algn_1EDB915C8 = 0;
  qword_1EDB915D0 = 0;
  byte_1EDB915D8 = 1;
  CoreML::Specification::_FillStaticLayerParams_default_instance_ = (uint64_t)&off_1E95600A0;
  unk_1EDB91BC0 = 0;
  qword_1EDB91BC8 = 0;
  unk_1EDB91BD0 = 0;
  unk_1EDB91BDC = 0;
  byte_1EDB91BE8 = 1;
  CoreML::Specification::_FillDynamicLayerParams_default_instance_ = (uint64_t)&off_1E95608F0;
  unk_1EDB91F80 = 0;
  qword_1EDB91F88 = 0;
  byte_1EDB91F90 = 1;
  CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9563740;
  qword_1EDB93338 = 0;
  dword_1EDB93340 = 0;
  byte_1EDB93348 = 1;
  CoreML::Specification::_SinLayerParams_default_instance_ = (uint64_t)&off_1E955BC58;
  qword_1EDB8FFE8 = 0;
  dword_1EDB8FFF0 = 0;
  byte_1EDB8FFF8 = 1;
  CoreML::Specification::_CosLayerParams_default_instance_ = (uint64_t)&off_1E955B798;
  qword_1EDB8FE30 = 0;
  dword_1EDB8FE38 = 0;
  byte_1EDB8FE40 = 1;
  CoreML::Specification::_TanLayerParams_default_instance_ = (uint64_t)&off_1E955BCF0;
  qword_1EDB90008 = 0;
  dword_1EDB90010 = 0;
  byte_1EDB90018 = 1;
  CoreML::Specification::_AsinLayerParams_default_instance_ = (uint64_t)&off_1E955BEB8;
  qword_1EDB90070 = 0;
  dword_1EDB90078 = 0;
  byte_1EDB90080 = 1;
  CoreML::Specification::_AcosLayerParams_default_instance_ = (uint64_t)&off_1E955BD88;
  qword_1EDB90028 = 0;
  dword_1EDB90030 = 0;
  byte_1EDB90038 = 1;
  CoreML::Specification::_AtanLayerParams_default_instance_ = (uint64_t)&off_1E955BF50;
  qword_1EDB90090 = 0;
  dword_1EDB90098 = 0;
  byte_1EDB900A0 = 1;
  CoreML::Specification::_SinhLayerParams_default_instance_ = (uint64_t)&off_1E955C7A0;
  qword_1EDB902F0 = 0;
  dword_1EDB902F8 = 0;
  byte_1EDB90300 = 1;
  CoreML::Specification::_CoshLayerParams_default_instance_ = (uint64_t)&off_1E955C248;
  qword_1EDB90158 = 0;
  dword_1EDB90160 = 0;
  byte_1EDB90168 = 1;
  CoreML::Specification::_TanhLayerParams_default_instance_ = (uint64_t)&off_1E955C8D0;
  qword_1EDB90338 = 0;
  dword_1EDB90340 = 0;
  byte_1EDB90348 = 1;
  CoreML::Specification::_AsinhLayerParams_default_instance_ = (uint64_t)&off_1E955CCF8;
  qword_1EDB90500 = 0;
  dword_1EDB90508 = 0;
  byte_1EDB90510 = 1;
  CoreML::Specification::_AcoshLayerParams_default_instance_ = (uint64_t)&off_1E955CA98;
  qword_1EDB903B8 = 0;
  dword_1EDB903C0 = 0;
  byte_1EDB903C8 = 1;
  CoreML::Specification::_AtanhLayerParams_default_instance_ = (uint64_t)&off_1E955CD90;
  qword_1EDB90520 = 0;
  dword_1EDB90528 = 0;
  byte_1EDB90530 = 1;
  CoreML::Specification::_PowBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9562EF0;
  qword_1EDB93028 = 0;
  dword_1EDB93030 = 0;
  byte_1EDB93038 = 1;
  CoreML::Specification::_Exp2LayerParams_default_instance_ = (uint64_t)&off_1E955C410;
  qword_1EDB901F0 = 0;
  dword_1EDB901F8 = 0;
  byte_1EDB90200 = 1;
  CoreML::Specification::_WhereNonZeroLayerParams_default_instance_ = (uint64_t)&off_1E95617C8;
  qword_1EDB926B8 = 0;
  dword_1EDB926C0 = 0;
  byte_1EDB926C8 = 1;
  CoreML::Specification::_MatrixBandPartLayerParams_default_instance_ = (uint64_t)&off_1E9562018;
  unk_1EDB92A70 = 0;
  dword_1EDB92A88 = 0;
  qword_1EDB92A78 = 0;
  unk_1EDB92A80 = 0;
  byte_1EDB92A90 = 1;
  CoreML::Specification::_UpperTriangularLayerParams_default_instance_ = (uint64_t)&off_1E9562A30;
  *(_QWORD *)algn_1EDB92E58 = 0;
  dword_1EDB92E68 = 0;
  qword_1EDB92E60 = 0;
  byte_1EDB92E70 = 1;
  CoreML::Specification::_LowerTriangularLayerParams_default_instance_ = (uint64_t)&off_1E9562738;
  *(_QWORD *)algn_1EDB92CF8 = 0;
  dword_1EDB92D08 = 0;
  qword_1EDB92D00 = 0;
  byte_1EDB92D10 = 1;
  CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_ = (uint64_t)&off_1E9562440;
  qword_1EDB92C28 = 0;
  dword_1EDB92C30 = 0;
  byte_1EDB92C38 = 1;
  CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_ = (uint64_t)&off_1E95631E8;
  unk_1EDB93150 = 0;
  qword_1EDB93158 = 0;
  unk_1EDB93160 = 0;
  dword_1EDB9316C = 0;
  byte_1EDB93170 = 1;
  CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_ = (uint64_t)&off_1E9563318;
  qword_1EDB931B0 = 0;
  dword_1EDB931B8 = 0;
  byte_1EDB931C0 = 1;
  CoreML::Specification::_AddBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9562AC8;
  qword_1EDB92E80 = 0;
  dword_1EDB92E88 = 0;
  byte_1EDB92E90 = 1;
  CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9562D28;
  qword_1EDB92FC8 = 0;
  dword_1EDB92FD0 = 0;
  byte_1EDB92FD8 = 1;
  CoreML::Specification::_MinBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9562DC0;
  qword_1EDB92FE8 = 0;
  dword_1EDB92FF0 = 0;
  byte_1EDB92FF8 = 1;
  CoreML::Specification::_ModBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9562E58;
  qword_1EDB93008 = 0;
  dword_1EDB93010 = 0;
  byte_1EDB93018 = 1;
  CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9563D30;
  qword_1EDB93550 = 0;
  dword_1EDB93558 = 0;
  byte_1EDB93560 = 1;
  CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E95640C0;
  qword_1EDB93658 = 0;
  dword_1EDB93660 = 0;
  byte_1EDB93668 = 1;
  CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E9563E60;
  qword_1EDB93598 = 0;
  dword_1EDB935A0 = 0;
  byte_1EDB935A8 = 1;
  CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_ = (uint64_t)&off_1E95637D8;
  qword_1EDB93358 = 0;
  dword_1EDB93360 = 0;
  byte_1EDB93368 = 1;
  CoreML::Specification::_GatherLayerParams_default_instance_ = (uint64_t)&off_1E955DC68;
  unk_1EDB90AB0 = 0;
  dword_1EDB90AC0 = 0;
  qword_1EDB90AB8 = 0;
  byte_1EDB90AC8 = 1;
  CoreML::Specification::_ScatterLayerParams_default_instance_ = (uint64_t)&off_1E955EA10;
  unk_1EDB91480 = 0;
  qword_1EDB91488 = 0;
  unk_1EDB91490 = 0;
  byte_1EDB91498 = 1;
  CoreML::Specification::_GatherNDLayerParams_default_instance_ = (uint64_t)&off_1E955EED0;
  qword_1EDB915E8 = 0;
  dword_1EDB915F0 = 0;
  byte_1EDB915F8 = 1;
  CoreML::Specification::_ScatterNDLayerParams_default_instance_ = (uint64_t)&off_1E955FAB0;
  unk_1EDB919E0 = 0;
  qword_1EDB919E8 = 0;
  byte_1EDB919F0 = 1;
  CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_ = (uint64_t)&off_1E9562570;
  unk_1EDB92C80 = 0;
  dword_1EDB92C90 = 0;
  qword_1EDB92C88 = 0;
  byte_1EDB92C98 = 1;
  CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_ = (uint64_t)&off_1E9563020;
  *(_QWORD *)algn_1EDB93078 = 0;
  qword_1EDB93080 = 0;
  unk_1EDB93088 = 0;
  byte_1EDB93090 = 1;
  CoreML::Specification::_StackLayerParams_default_instance_ = (uint64_t)&off_1E955D548;
  unk_1EDB90880 = 0;
  dword_1EDB90890 = 0;
  qword_1EDB90888 = 0;
  byte_1EDB90898 = 1;
  CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_ = (uint64_t)&off_1E9564028;
  *(_QWORD *)algn_1EDB93628 = 0;
  qword_1EDB93630 = 0;
  unk_1EDB93638 = 0;
  dword_1EDB93644 = 0;
  byte_1EDB93648 = 1;
  CoreML::Specification::_ConstantPaddingLayerParams_default_instance_ = (uint64_t)&off_1E95624D8;
  *(_QWORD *)algn_1EDB92C48 = 0;
  qword_1EDB92C50 = 0;
  unk_1EDB92C58 = 0;
  byte_1EDB92C68 = 0;
  dword_1EDB92C64 = 0;
  dword_1EDB92C6C = 0;
  byte_1EDB92C70 = 1;
  CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_ = (uint64_t)&off_1E9562F88;
  *(_QWORD *)algn_1EDB93048 = 0;
  dword_1EDB93060 = 0;
  qword_1EDB93050 = 0;
  unk_1EDB93058 = 0;
  byte_1EDB93068 = 1;
  CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_ = (uint64_t)&off_1E9563610;
  *(_QWORD *)algn_1EDB93298 = 0;
  qword_1EDB932A0 = 0;
  unk_1EDB932A8 = 0;
  qword_1EDB932B8 = 0;
  unk_1EDB932C0 = 0;
  dword_1EDB932C8 = 0;
  byte_1EDB932D0 = 1;
  CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_ = (uint64_t)&off_1E9563908;
  unk_1EDB933A0 = 0;
  dword_1EDB933B8 = 0;
  qword_1EDB933A8 = 0;
  unk_1EDB933B0 = 0;
  byte_1EDB933C0 = 1;
  CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_ = (uint64_t)&off_1E9563280;
  unk_1EDB93180 = 0;
  dword_1EDB93198 = 0;
  qword_1EDB93188 = 0;
  unk_1EDB93190 = 0;
  byte_1EDB931A0 = 1;
  CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_ = (uint64_t)&off_1E95639A0;
  CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_ = (uint64_t)&off_1E9563AD0;
  CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_ = (uint64_t)&off_1E9563F90;
  CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_ = (uint64_t)&off_1E9564288;
  CoreML::Specification::_ReduceL1LayerParams_default_instance_ = (uint64_t)&off_1E955F1C8;
  CoreML::Specification::_ReduceL2LayerParams_default_instance_ = (uint64_t)&off_1E955F260;
  CoreML::Specification::_ArgMinLayerParams_default_instance_ = (uint64_t)&off_1E955D840;
  unk_1EDB90950 = 0;
  dword_1EDB90964 = 0;
  qword_1EDB90958 = 0;
  qword_1EDB914D8 = 0;
  byte_1EDB90960 = 0;
  byte_1EDB90968 = 1;
  CoreML::Specification::_SplitNDLayerParams_default_instance_ = (uint64_t)&off_1E955EB40;
  CoreML::Specification::_ArgMaxLayerParams_default_instance_ = (uint64_t)&off_1E955D7A8;
  *(_QWORD *)algn_1EDB90928 = 0;
  dword_1EDB9093C = 0;
  qword_1EDB90930 = 0;
  byte_1EDB90938 = 0;
  byte_1EDB90940 = 1;
  CoreML::Specification::_TopKLayerParams_default_instance_ = (uint64_t)&off_1E955CA00;
  *(_QWORD *)algn_1EDB90388 = 0;
  byte_1EDB903A0 = 0;
  byte_1EDB903A8 = 1;
  qword_1EDB90390 = 0;
  unk_1EDB90398 = 0;
  CoreML::Specification::_SqueezeLayerParams_default_instance_ = (uint64_t)&off_1E955EBD8;
  unk_1EDB91510 = 0;
  dword_1EDB903A4 = 0;
  qword_1EDB91518 = 0;
  unk_1EDB91520 = 0;
  dword_1EDB91530 = 0;
  byte_1EDB91538 = 1;
  byte_1EDB9152C = 0;
  CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_ = (uint64_t)&off_1E95621E0;
  qword_1EDB92B30 = 0;
  dword_1EDB92B38 = 0;
  byte_1EDB92B40 = 1;
  CoreML::Specification::_ReshapeStaticLayerParams_default_instance_ = (uint64_t)&off_1E9561BF0;
  *(_QWORD *)algn_1EDB92878 = 0;
  CoreML::Specification::_ReshapeLikeLayerParams_default_instance_ = (uint64_t)&off_1E9560D18;
  qword_1EDB920C0 = 0;
  dword_1EDB920C8 = 0;
  byte_1EDB920D0 = 1;
  qword_1EDB92880 = 0;
  unk_1EDB92888 = 0;
  dword_1EDB92894 = 0;
  byte_1EDB92898 = 1;
  CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_ = (uint64_t)&off_1E9562868;
  unk_1EDB92D60 = 0;
  CoreML::Specification::_FlattenTo2DLayerParams_default_instance_ = (uint64_t)&off_1E9560988;
  unk_1EDB91FA0 = 0;
  dword_1EDB91FB0 = 0;
  qword_1EDB91FA8 = 0;
  byte_1EDB91FB8 = 1;
  dword_1EDB91BAC = 0;
  byte_1EDB91BB0 = 1;
  CoreML::Specification::_ExpandDimsLayerParams_default_instance_ = (uint64_t)&off_1E9560008;
  unk_1EDB91B90 = 0;
  qword_1EDB91B98 = 0;
  unk_1EDB91BA0 = 0;
  byte_1EDB92D88 = 1;
  qword_1EDB92D68 = 0;
  unk_1EDB92D70 = 0;
  word_1EDB92D7C = 0;
  dword_1EDB92D80 = 0;
  CoreML::Specification::_ReduceSumLayerParams_default_instance_ = (uint64_t)&off_1E955FA18;
  CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_ = (uint64_t)&off_1E9562900;
  *(_QWORD *)algn_1EDB92D98 = 0;
  word_1EDB92DB4 = 0;
  dword_1EDB92DB8 = 0;
  byte_1EDB92DC0 = 1;
  qword_1EDB92DA0 = 0;
  unk_1EDB92DA8 = 0;
  CoreML::Specification::_ReduceLogSumLayerParams_default_instance_ = (uint64_t)&off_1E9561600;
  *(_QWORD *)algn_1EDB92518 = 0;
  qword_1EDB92520 = 0;
  unk_1EDB92528 = 0;
  word_1EDB92534 = 0;
  dword_1EDB92538 = 0;
  byte_1EDB92540 = 1;
  byte_1EDB91D80 = 1;
  CoreML::Specification::_ReduceMeanLayerParams_default_instance_ = (uint64_t)&off_1E9560430;
  *(_QWORD *)algn_1EDB91D58 = 0;
  qword_1EDB91D60 = 0;
  unk_1EDB91D68 = 0;
  word_1EDB91D74 = 0;
  dword_1EDB91D78 = 0;
  dword_1EDB91DB0 = 0;
  byte_1EDB91DB8 = 1;
  CoreML::Specification::_ReduceProdLayerParams_default_instance_ = (uint64_t)&off_1E95604C8;
  unk_1EDB91D90 = 0;
  qword_1EDB91D98 = 0;
  unk_1EDB91DA0 = 0;
  word_1EDB91DAC = 0;
  qword_1EDB919B0 = 0;
  unk_1EDB919B8 = 0;
  word_1EDB919C4 = 0;
  dword_1EDB919C8 = 0;
  byte_1EDB919D0 = 1;
  qword_1EDB919A8 = 0;
  CoreML::Specification::_ReduceMinLayerParams_default_instance_ = (uint64_t)&off_1E955F980;
  unk_1EDB91970 = 0;
  word_1EDB9198C = 0;
  dword_1EDB91990 = 0;
  byte_1EDB91998 = 1;
  CoreML::Specification::_ReduceMaxLayerParams_default_instance_ = (uint64_t)&off_1E955F8E8;
  *(_QWORD *)algn_1EDB91938 = 0;
  qword_1EDB91978 = 0;
  unk_1EDB91980 = 0;
  word_1EDB91954 = 0;
  dword_1EDB91958 = 0;
  byte_1EDB91960 = 1;
  qword_1EDB91940 = 0;
  unk_1EDB91948 = 0;
  dword_1EDB916E0 = 0;
  byte_1EDB916E8 = 1;
  qword_1EDB916C8 = 0;
  unk_1EDB916D0 = 0;
  qword_1EDB916C0 = 0;
  word_1EDB916DC = 0;
  qword_1EDB91690 = 0;
  unk_1EDB91698 = 0;
  byte_1EDB916B0 = 1;
  qword_1EDB91688 = 0;
  word_1EDB916A4 = 0;
  dword_1EDB916A8 = 0;
  qword_1EDB93748 = 0;
  unk_1EDB93750 = 0;
  qword_1EDB93740 = 0;
  unk_1EDB93768 = 0u;
  byte_1EDB93790 = 1;
  byte_1EDB93758 = 1;
  CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_ = (uint64_t)&off_1E9564320;
  qword_1EDB93788 = 0;
  unk_1EDB93778 = 0u;
  qword_1EDB935F0 = 0;
  unk_1EDB935F8 = 0;
  qword_1EDB935E8 = 0;
  qword_1EDB93608 = 0;
  unk_1EDB93610 = 0;
  byte_1EDB93618 = 1;
  dword_1EDB93460 = 0;
  qword_1EDB93450 = 0;
  unk_1EDB93458 = 0;
  qword_1EDB93448 = 0;
  byte_1EDB93468 = 1;
  CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_ = (uint64_t)&off_1E9563870;
  *(_QWORD *)algn_1EDB93378 = 0;
  qword_1EDB93380 = 0;
  unk_1EDB93388 = 0;
  byte_1EDB93390 = 1;
  qword_1EDB933D8 = 0;
  unk_1EDB933E0 = 0;
  qword_1EDB933D0 = 0;
  qword_1EDB933F0 = 0;
  unk_1EDB933F8 = 0;
  dword_1EDB93400 = 0;
  byte_1EDB93408 = 1;
  qword_1EDB914C8 = 0;
  unk_1EDB914D0 = 0;
  qword_1EDB914E8 = 0;
  unk_1EDB914F0 = 0;
  dword_1EDB914F8 = 0;
  byte_1EDB91500 = 1;
  CoreML::Specification::_CeilLayerParams_default_instance_ = (uint64_t)&off_1E955C080;
  qword_1EDB900F0 = 0;
  dword_1EDB900F8 = 0;
  byte_1EDB90100 = 1;
  CoreML::Specification::_RoundLayerParams_default_instance_ = (uint64_t)&off_1E955D2E8;
  qword_1EDB907A0 = 0;
  dword_1EDB907A8 = 0;
  byte_1EDB907B0 = 1;
  CoreML::Specification::_FloorLayerParams_default_instance_ = (uint64_t)&off_1E955CEC0;
  qword_1EDB90560 = 0;
  dword_1EDB90568 = 0;
  byte_1EDB90570 = 1;
  CoreML::Specification::_SignLayerParams_default_instance_ = (uint64_t)&off_1E955C708;
  qword_1EDB902D0 = 0;
  dword_1EDB902D8 = 0;
  byte_1EDB902E0 = 1;
  CoreML::Specification::_ClipLayerParams_default_instance_ = (uint64_t)&off_1E955C118;
  unk_1EDB90110 = 0;
  dword_1EDB90120 = 0;
  qword_1EDB90118 = 0;
  byte_1EDB90128 = 1;
  CoreML::Specification::_SliceStaticLayerParams_default_instance_ = (uint64_t)&off_1E9560E48;
  unk_1EDB92110 = 0;
  qword_1EDB92130 = 0;
  unk_1EDB92138 = 0;
  qword_1EDB92148 = 0;
  unk_1EDB92150 = 0;
  qword_1EDB92160 = 0;
  unk_1EDB92168 = 0;
  qword_1EDB92178 = 0;
  unk_1EDB92180 = 0;
  qword_1EDB92190 = 0;
  unk_1EDB92198 = 0;
  qword_1EDB92118 = 0;
  unk_1EDB92120 = 0;
  dword_1EDB921A4 = 0;
  byte_1EDB921A8 = 1;
  CoreML::Specification::_SliceDynamicLayerParams_default_instance_ = (uint64_t)&off_1E9561698;
  unk_1EDB92550 = 0;
  qword_1EDB92570 = 0;
  unk_1EDB92578 = 0;
  qword_1EDB92588 = 0;
  unk_1EDB92590 = 0;
  qword_1EDB925A0 = 0;
  unk_1EDB925A8 = 0;
  qword_1EDB925B8 = 0;
  unk_1EDB925C0 = 0;
  qword_1EDB92558 = 0;
  unk_1EDB92560 = 0;
  dword_1EDB925CC = 0;
  byte_1EDB925D0 = 1;
  CoreML::Specification::_TileLayerParams_default_instance_ = (uint64_t)&off_1E955C968;
  *(_QWORD *)algn_1EDB90358 = 0;
  qword_1EDB90360 = 0;
  unk_1EDB90368 = 0;
  dword_1EDB90374 = 0;
  byte_1EDB90378 = 1;
  CoreML::Specification::_GetShapeLayerParams_default_instance_ = (uint64_t)&off_1E955EF68;
  qword_1EDB91608 = 0;
  dword_1EDB91610 = 0;
  byte_1EDB91618 = 1;
  CoreML::Specification::_ErfLayerParams_default_instance_ = (uint64_t)&off_1E955B8C8;
  qword_1EDB8FE88 = 0;
  dword_1EDB8FE90 = 0;
  byte_1EDB8FE98 = 1;
  CoreML::Specification::_GeluLayerParams_default_instance_ = (uint64_t)&off_1E955C4A8;
  unk_1EDB90210 = 0;
  qword_1EDB90218 = 0;
  byte_1EDB90220 = 1;
  CoreML::Specification::_RangeStaticLayerParams_default_instance_ = (uint64_t)&off_1E9560C80;
  *(_QWORD *)algn_1EDB92098 = 0;
  qword_1EDB920A0 = 0;
  unk_1EDB920A8 = 0;
  byte_1EDB920B0 = 1;
  CoreML::Specification::_RangeDynamicLayerParams_default_instance_ = (uint64_t)&off_1E9561568;
  unk_1EDB924F0 = 0;
  dword_1EDB92500 = 0;
  qword_1EDB924F8 = 0;
  byte_1EDB92508 = 1;
  CoreML::Specification::_SlidingWindowsLayerParams_default_instance_ = (uint64_t)&off_1E95623A8;
  dword_1EDB92BD8 = 0;
  unk_1EDB92BC8 = 0u;
  unk_1EDB92BB8 = 0u;
  byte_1EDB92BE0 = 1;
  CoreML::Specification::_LayerNormalizationLayerParams_default_instance_ = (uint64_t)&off_1E9563448;
  CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_ = (uint64_t)&off_1E9563EF8;
  *(_QWORD *)algn_1EDB935B8 = 0;
  dword_1EDB935D4 = 0;
  byte_1EDB935D0 = 0;
  qword_1EDB935C0 = 0;
  unk_1EDB935C8 = 0;
  byte_1EDB935D8 = 1;
  CoreML::Specification::_ClampedReLULayerParams_default_instance_ = (uint64_t)&off_1E9560728;
  unk_1EDB91E50 = 0;
  dword_1EDB91E60 = 0;
  qword_1EDB91E58 = 0;
  byte_1EDB91E68 = 1;
  CoreML::Specification::_ArgSortLayerParams_default_instance_ = (uint64_t)&off_1E955E1C0;
  unk_1EDB90C20 = 0;
  dword_1EDB90C34 = 0;
  qword_1EDB90C28 = 0;
  byte_1EDB90C30 = 0;
  byte_1EDB90C38 = 1;
  CoreML::Specification::_SliceBySizeLayerParams_default_instance_ = (uint64_t)&off_1E9560DB0;
  unk_1EDB920E0 = 0;
  dword_1EDB920F8 = 0;
  qword_1EDB920E8 = 0;
  unk_1EDB920F0 = 0;
  byte_1EDB92100 = 1;
  CoreML::Specification::_NeuralNetworkClassifier_default_instance_ = (uint64_t)&off_1E95614D0;
  CoreML::Specification::_OneHotLayerParams_default_instance_ = (uint64_t)&off_1E955DD00;
  dword_1EDB90AF8 = 0;
  unk_1EDB90AE8 = 0u;
  unk_1EDB90AD8 = 0u;
  byte_1EDB90B00 = 1;
  CoreML::Specification::_CumSumLayerParams_default_instance_ = (uint64_t)&off_1E955DA08;
  *(_QWORD *)algn_1EDB909C8 = 0;
  dword_1EDB909DC = 0;
  qword_1EDB909D0 = 0;
  word_1EDB909D8 = 0;
  byte_1EDB909E0 = 1;
  CoreML::Specification::_NeuralNetworkRegressor_default_instance_ = (uint64_t)&off_1E9560BE8;
  CoreML::Specification::_NetworkUpdateParameters_default_instance_ = (uint64_t)&off_1E9561438;
  CoreML::Specification::_CategoricalCrossEntropyLossLayer_default_instance_ = (uint64_t)&off_1E9563C98;
  unk_1EDB93520 = 0;
  qword_1EDB93528 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB93530 = &google::protobuf::internal::fixed_address_empty_string;
  dword_1EDB93538 = 0;
  byte_1EDB93540 = 1;
  qword_1EDB924A8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  qword_1EDB92AA8 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1EDB92AB0 = &google::protobuf::internal::fixed_address_empty_string;
  CoreML::Specification::_MeanSquaredErrorLossLayer_default_instance_ = (uint64_t)&off_1E95620B0;
  unk_1EDB92AA0 = 0;
  dword_1EDB92AB8 = 0;
  byte_1EDB92AC0 = 1;
  CoreML::Specification::_Optimizer_default_instance_ = (uint64_t)&off_1E9566200;
  CoreML::Specification::_SGDOptimizer_default_instance_ = (uint64_t)&off_1E955AD80;
  CoreML::Specification::_AdamOptimizer_default_instance_ = (uint64_t)&off_1E955B1A8;
  byte_1EDB92708 = 1;
  byte_1EDB92A60 = 1;
  byte_1EDB93238 = 1;
  byte_1EDB924D0 = 1;
  byte_1EDB92088 = 1;
  byte_1EDB92460 = 1;
  byte_1EDB8F720 = 1;
  byte_1EDB8FAB0 = 1;
  byte_1EDB8FC28 = 1;
  qword_1EDB90988 = (uint64_t)&CoreML::Specification::_NeuralNetwork_default_instance_;
  qword_1EDB90270 = (uint64_t)&CoreML::Specification::_NeuralNetwork_default_instance_;
  unk_1EDB90278 = &CoreML::Specification::_NeuralNetwork_default_instance_;
  qword_1EDB8FD38 = (uint64_t)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
  qword_1EDB930A8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB930B0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB91EE0 = &CoreML::Specification::_WeightParams_default_instance_;
  *((_QWORD *)&xmmword_1EDB91EE0 + 1) = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB92738 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB92740 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB92380 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB92388 = &CoreML::Specification::_WeightParams_default_instance_;
  CoreML::Specification::_LoadConstantNDLayerParams_default_instance_ = (uint64_t)&off_1E9561F80;
  unk_1EDB92A30 = 0;
  qword_1EDB924A0 = 0;
  *(_OWORD *)algn_1EDB926D8 = 0u;
  xmmword_1EDB926E8[0] = 0u;
  xmmword_1EDB926E8[1] = 0u;
  qword_1EDB92A38 = 0;
  unk_1EDB92A40 = 0;
  dword_1EDB92A58 = 0;
  qword_1EDB93208 = 0;
  unk_1EDB93210 = 0;
  qword_1EDB93200 = 0;
  qword_1EDB93230 = 0;
  unk_1EDB92490 = 0u;
  unk_1EDB92480 = 0u;
  unk_1EDB92470 = 0u;
  unk_1EDB924B8 = 0;
  qword_1EDB924C8 = 0;
  *(_OWORD *)((char *)&qword_1EDB92070 + 4) = 0u;
  unk_1EDB92068 = 0u;
  unk_1EDB92058 = 0u;
  unk_1EDB92048 = 0u;
  unk_1EDB92038 = 0u;
  dword_1EDB92458 = 0;
  unk_1EDB92428 = 0u;
  unk_1EDB92418 = 0u;
  qword_1EDB8F708 = 0;
  qword_1EDB8F718 = 0;
  dword_1EDB8FAA8 = 0;
  *(_OWORD *)algn_1EDB8FA88 = 0u;
  dword_1EDB8FC20 = 0;
  unk_1EDB8FBF0 = 0u;
  qword_1EDB91808 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB91810 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB91F48 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB91F50 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB917B8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB917C0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB917C8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB917D0[0] = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB92B70 = (uint64_t)&CoreML::Specification::_SamplingMode_default_instance_;
  qword_1EDB91B08 = (uint64_t)&CoreML::Specification::_SamplingMode_default_instance_;
  qword_1EDB91B10 = (uint64_t)&CoreML::Specification::_BoxCoordinatesMode_default_instance_;
  qword_1EDB900D0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB907F8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB90800 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB923D8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB90198 = (uint64_t)&CoreML::Specification::_BorderAmounts_default_instance_;
  qword_1EDB92DD8 = (uint64_t)&CoreML::Specification::_ActivationParams_default_instance_;
  unk_1EDB92DE0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB92DE8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB92DF0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB8FEC8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB8FED0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB8FED8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB8FEE0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB8FEE8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB8FEF0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB8FEF8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB8FF00 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB8FF08 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB90658 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB90660 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB90668 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB90670 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB90678 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB90680 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB90688 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB90690 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB90698 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB906A0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB906A8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB906B0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB906B8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB906C0 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB906C8 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB93300 = (uint64_t)&CoreML::Specification::_LSTMParams_default_instance_;
  unk_1EDB93308 = &CoreML::Specification::_LSTMWeightParams_default_instance_;
  result = &CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_;
  qword_1EDB93120 = (uint64_t)&CoreML::Specification::_LSTMParams_default_instance_;
  qword_1EDB936B0 = (uint64_t)&CoreML::Specification::_CustomLayerParams_ParametersEntry_default_instance_;
  qword_1EDB936C0 = (uint64_t)&CoreML::Specification::_CustomLayerParams_CustomLayerParamValue_default_instance_;
  qword_1EDB926E0 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  *(_QWORD *)&xmmword_1EDB926E8[0] = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB92A50 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB93220 = (uint64_t)&CoreML::Specification::_WeightParams_default_instance_;
  unk_1EDB93228 = &CoreML::Specification::_WeightParams_default_instance_;
  qword_1EDB924B0 = (uint64_t)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
  qword_1EDB92070 = (uint64_t)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
  qword_1EDB92438 = (uint64_t)&CoreML::Specification::_Optimizer_default_instance_;
  unk_1EDB92440 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_1EDB92448 = (uint64_t)&CoreML::Specification::_BoolParameter_default_instance_;
  unk_1EDB92450 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_1EDB8FA90 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  unk_1EDB8FA98 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_1EDB8FAA0 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  qword_1EDB8FBF8 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  unk_1EDB8FC00 = &CoreML::Specification::_Int64Parameter_default_instance_;
  qword_1EDB8FC08 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  unk_1EDB8FC10 = &CoreML::Specification::_DoubleParameter_default_instance_;
  qword_1EDB8FC18 = (uint64_t)&CoreML::Specification::_DoubleParameter_default_instance_;
  return result;
}

CoreML::Specification::CustomLayerParams *CoreML::Specification::CustomLayerParams::CustomLayerParams(CoreML::Specification::CustomLayerParams *this)
{
  _QWORD *v2;
  CoreML::Specification::protobuf_NeuralNetwork_2eproto *v3;

  *(_QWORD *)this = &off_1E955DAA0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  v2 = (_QWORD *)operator new();
  v3 = (CoreML::Specification::protobuf_NeuralNetwork_2eproto *)google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::InnerMap::InnerMap(v2, 0);
  *((_QWORD *)this + 8) = v2;
  *((_DWORD *)this + 14) = 0;
  if (this != (CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v3);
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 22) = 0;
  return this;
}

void sub_1D3B6212C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = v3;
  google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::~Map(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)(v2 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void CoreML::Specification::AdamOptimizer::~AdamOptimizer(CoreML::Specification::AdamOptimizer *this)
{
  CoreML::Specification::AdamOptimizer::~AdamOptimizer(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_1E955B1A8;
  if (this != (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 5);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 6);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::AdamOptimizer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.AdamOptimizer");
}

CoreML::Specification::AdamOptimizer *CoreML::Specification::AdamOptimizer::New(CoreML::Specification::AdamOptimizer *this)
{
  return CoreML::Specification::AdamOptimizer::New(this, 0);
}

CoreML::Specification::AdamOptimizer *CoreML::Specification::AdamOptimizer::New(CoreML::Specification::AdamOptimizer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::AdamOptimizer *v3;

  v3 = (CoreML::Specification::AdamOptimizer *)operator new();
  CoreML::Specification::AdamOptimizer::AdamOptimizer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::AdamOptimizer>(a2, v3);
  return v3;
}

void sub_1D3B62214(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AdamOptimizer::Clear(CoreML::Specification::AdamOptimizer *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *((_QWORD *)this + 2);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  *((_QWORD *)this + 2) = 0;
  v3 = *((_QWORD *)this + 3);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *((_QWORD *)this + 3) = 0;
  v4 = *((_QWORD *)this + 4);
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  *((_QWORD *)this + 4) = 0;
  v5 = *((_QWORD *)this + 5);
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *((_QWORD *)this + 5) = 0;
  result = *((_QWORD *)this + 6);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 6) = 0;
  return result;
}

uint64_t CoreML::Specification::AdamOptimizer::IsInitialized(CoreML::Specification::AdamOptimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::AdamOptimizer::MergePartialFromCodedStream(CoreML::Specification::AdamOptimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::DoubleParameter *v9;
  CoreML::Specification::Int64Parameter *v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  int v14;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  uint64_t result;
  int v22;
  unsigned int v23;
  int v24;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_29;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10)
            goto LABEL_29;
          v9 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 2);
          if (!v9)
          {
            v9 = (CoreML::Specification::DoubleParameter *)operator new();
            CoreML::Specification::DoubleParameter::DoubleParameter(v9);
            *((_QWORD *)this + 2) = v9;
          }
          goto LABEL_26;
        case 2u:
          if (v7 != 18)
            goto LABEL_29;
          v10 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 3);
          if (!v10)
          {
            v10 = (CoreML::Specification::Int64Parameter *)operator new();
            CoreML::Specification::Int64Parameter::Int64Parameter(v10);
            *((_QWORD *)this + 3) = v10;
          }
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v24 = *((_DWORD *)a2 + 13);
          v19 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 13) = v24;
          if (v24 < 0 != v19)
            return 0;
          v20 = v22;
          result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v10, a2, v23);
          if (!(_DWORD)result)
            return result;
LABEL_38:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20))
            return 0;
          break;
        case 3u:
          if (v7 != 26)
            goto LABEL_29;
          v9 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 4);
          if (!v9)
          {
            v9 = (CoreML::Specification::DoubleParameter *)operator new();
            CoreML::Specification::DoubleParameter::DoubleParameter(v9);
            *((_QWORD *)this + 4) = v9;
          }
          goto LABEL_26;
        case 4u:
          if (v7 != 34)
            goto LABEL_29;
          v9 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 5);
          if (!v9)
          {
            v9 = (CoreML::Specification::DoubleParameter *)operator new();
            CoreML::Specification::DoubleParameter::DoubleParameter(v9);
            *((_QWORD *)this + 5) = v9;
          }
          goto LABEL_26;
        case 5u:
          if (v7 != 42)
            goto LABEL_29;
          v9 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 6);
          if (!v9)
          {
            v9 = (CoreML::Specification::DoubleParameter *)operator new();
            CoreML::Specification::DoubleParameter::DoubleParameter(v9);
            *((_QWORD *)this + 6) = v9;
          }
LABEL_26:
          v13 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
          {
            v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v14 < 0)
              return 0;
          }
          else
          {
            v14 = *v13;
            *(_QWORD *)a2 = v13 + 1;
          }
          v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
          v18 = *((_DWORD *)a2 + 13);
          v19 = __OFSUB__(v18--, 1);
          *((_DWORD *)a2 + 13) = v18;
          if (v18 < 0 != v19)
            return 0;
          v20 = v16;
          result = CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(v9, a2, v17);
          if ((_DWORD)result)
            goto LABEL_38;
          return result;
        default:
          goto LABEL_29;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *(_QWORD *)a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_29:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B625AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::AdamOptimizer::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (this != &CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    v5 = this;
    v6 = this[2];
    if (v6)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    v7 = v5[3];
    if (v7)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    v8 = v5[4];
    if (v8)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
    v9 = v5[5];
    if (v9)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
    v10 = v5[6];
    if (v10)
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::AdamOptimizer::GetCachedSize(CoreML::Specification::AdamOptimizer *this)
{
  return *((unsigned int *)this + 14);
}

std::string *CoreML::Specification::AdamOptimizer::MergeFrom(std::string *this, const CoreML::Specification::AdamOptimizer *a2)
{
  std::string *v3;
  uint64_t v4;
  const CoreML::Specification::DoubleParameter *v5;
  CoreML::Specification::DoubleParameter *v6;
  const CoreML::Specification::DoubleParameter *v7;
  const CoreML::Specification::Int64Parameter *v8;
  CoreML::Specification::Int64Parameter *data;
  const CoreML::Specification::Int64Parameter *v10;
  const CoreML::Specification::DoubleParameter *v11;
  CoreML::Specification::DoubleParameter *size;
  const CoreML::Specification::DoubleParameter *v13;
  const CoreML::Specification::DoubleParameter *v14;
  CoreML::Specification::DoubleParameter *v15;
  const CoreML::Specification::DoubleParameter *v16;
  const CoreML::Specification::DoubleParameter *v17;
  CoreML::Specification::DoubleParameter *v18;
  const CoreML::Specification::DoubleParameter *v19;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
  {
    v5 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = (CoreML::Specification::DoubleParameter *)v3->__r_.__value_.__r.__words[2];
      if (!v6)
      {
        v6 = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(v6);
        v3->__r_.__value_.__r.__words[2] = (std::string::size_type)v6;
        v5 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_;
      this = CoreML::Specification::DoubleParameter::MergeFrom((std::string *)v6, v7);
    }
    v8 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      data = (CoreML::Specification::Int64Parameter *)v3[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        data = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(data);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        v8 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_;
      this = CoreML::Specification::Int64Parameter::MergeFrom((std::string *)data, v10);
    }
    v11 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 4);
    if (v11)
    {
      size = (CoreML::Specification::DoubleParameter *)v3[1].__r_.__value_.__l.__size_;
      if (!size)
      {
        size = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(size);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)size;
        v11 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 4);
      }
      if (v11)
        v13 = v11;
      else
        v13 = (const CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_;
      this = CoreML::Specification::DoubleParameter::MergeFrom((std::string *)size, v13);
    }
    v14 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 5);
    if (v14)
    {
      v15 = (CoreML::Specification::DoubleParameter *)v3[1].__r_.__value_.__r.__words[2];
      if (!v15)
      {
        v15 = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(v15);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v15;
        v14 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 5);
      }
      if (v14)
        v16 = v14;
      else
        v16 = (const CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_;
      this = CoreML::Specification::DoubleParameter::MergeFrom((std::string *)v15, v16);
    }
    v17 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 6);
    if (v17)
    {
      v18 = (CoreML::Specification::DoubleParameter *)v3[2].__r_.__value_.__l.__data_;
      if (!v18)
      {
        v18 = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(v18);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v18;
        v17 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 6);
      }
      if (v17)
        v19 = v17;
      else
        v19 = (const CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_;
      return CoreML::Specification::DoubleParameter::MergeFrom((std::string *)v18, v19);
    }
  }
  return this;
}

void sub_1D3B62854(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::AdamOptimizer *CoreML::Specification::AdamOptimizer::AdamOptimizer(CoreML::Specification::AdamOptimizer *this)
{
  *(_QWORD *)this = &off_1E955B1A8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_OWORD *)((char *)this + 44) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1D3B628DC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::AdamOptimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::AdamOptimizer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::AdamOptimizer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::SGDOptimizer::~SGDOptimizer(CoreML::Specification::SGDOptimizer *this)
{
  CoreML::Specification::SGDOptimizer::~SGDOptimizer(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E955AD80;
  if (this != (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::SGDOptimizer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.SGDOptimizer");
}

CoreML::Specification::SGDOptimizer *CoreML::Specification::SGDOptimizer::New(CoreML::Specification::SGDOptimizer *this)
{
  return CoreML::Specification::SGDOptimizer::New(this, 0);
}

CoreML::Specification::SGDOptimizer *CoreML::Specification::SGDOptimizer::New(CoreML::Specification::SGDOptimizer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::SGDOptimizer *v3;

  v3 = (CoreML::Specification::SGDOptimizer *)operator new();
  CoreML::Specification::SGDOptimizer::SGDOptimizer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::SGDOptimizer>(a2, v3);
  return v3;
}

void sub_1D3B62A8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C400A278675);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SGDOptimizer::Clear(CoreML::Specification::SGDOptimizer *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *((_QWORD *)this + 2);
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  *((_QWORD *)this + 2) = 0;
  v3 = *((_QWORD *)this + 3);
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  *((_QWORD *)this + 3) = 0;
  result = *((_QWORD *)this + 4);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 4) = 0;
  return result;
}

uint64_t CoreML::Specification::SGDOptimizer::IsInitialized(CoreML::Specification::SGDOptimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::SGDOptimizer::MergePartialFromCodedStream(CoreML::Specification::SGDOptimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  CoreML::Specification::DoubleParameter *v11;
  char *v12;
  int v13;
  CoreML::Specification::Int64Parameter *v14;
  char *v15;
  int VarintSizeAsIntFallback;
  int v18;
  unsigned int v19;
  int v20;
  BOOL v21;
  int v22;
  uint64_t result;
  int v24;
  unsigned int v25;
  int v26;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_28;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        goto LABEL_28;
LABEL_7:
      v9 = v7 >> 3;
      if (v7 >> 3 == 3)
      {
        if (v7 != 26)
          goto LABEL_28;
        v11 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 4);
        if (!v11)
        {
          v11 = (CoreML::Specification::DoubleParameter *)operator new();
          CoreML::Specification::DoubleParameter::DoubleParameter(v11);
          *((_QWORD *)this + 4) = v11;
        }
        goto LABEL_19;
      }
      if (v9 != 2)
        break;
      if (v7 != 18)
        goto LABEL_28;
      v14 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 3);
      if (!v14)
      {
        v14 = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(v14);
        *((_QWORD *)this + 3) = v14;
      }
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v26 = *((_DWORD *)a2 + 13);
      v21 = __OFSUB__(v26--, 1);
      *((_DWORD *)a2 + 13) = v26;
      if (v26 < 0 != v21)
        return 0;
      v22 = v24;
      result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v14, a2, v25);
      if (!(_DWORD)result)
        return result;
LABEL_41:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22))
        return 0;
    }
    if (v9 == 1 && v7 == 10)
    {
      v11 = (CoreML::Specification::DoubleParameter *)*((_QWORD *)this + 2);
      if (!v11)
      {
        v11 = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(v11);
        *((_QWORD *)this + 2) = v11;
      }
LABEL_19:
      v12 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
      {
        v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v13 < 0)
          return 0;
      }
      else
      {
        v13 = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
      v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
      v20 = *((_DWORD *)a2 + 13);
      v21 = __OFSUB__(v20--, 1);
      *((_DWORD *)a2 + 13) = v20;
      if (v20 < 0 != v21)
        return 0;
      v22 = v18;
      result = CoreML::Specification::DoubleParameter::MergePartialFromCodedStream(v11, a2, v19);
      if (!(_DWORD)result)
        return result;
      goto LABEL_41;
    }
LABEL_28:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B62D60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::SGDOptimizer::SerializeWithCachedSizes(uint64_t *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (this != &CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    v5 = this;
    v6 = this[2];
    if (v6)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
    v7 = v5[3];
    if (v7)
      this = (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
    v8 = v5[4];
    if (v8)
      return (uint64_t *)google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::SGDOptimizer::GetCachedSize(CoreML::Specification::SGDOptimizer *this)
{
  return *((unsigned int *)this + 10);
}

std::string *CoreML::Specification::SGDOptimizer::MergeFrom(std::string *this, const CoreML::Specification::SGDOptimizer *a2)
{
  std::string *v3;
  uint64_t v4;
  const CoreML::Specification::DoubleParameter *v5;
  CoreML::Specification::DoubleParameter *v6;
  const CoreML::Specification::DoubleParameter *v7;
  const CoreML::Specification::Int64Parameter *v8;
  CoreML::Specification::Int64Parameter *data;
  const CoreML::Specification::Int64Parameter *v10;
  const CoreML::Specification::DoubleParameter *v11;
  CoreML::Specification::DoubleParameter *size;
  const CoreML::Specification::DoubleParameter *v13;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
  {
    v5 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = (CoreML::Specification::DoubleParameter *)v3->__r_.__value_.__r.__words[2];
      if (!v6)
      {
        v6 = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(v6);
        v3->__r_.__value_.__r.__words[2] = (std::string::size_type)v6;
        v5 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_;
      this = CoreML::Specification::DoubleParameter::MergeFrom((std::string *)v6, v7);
    }
    v8 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      data = (CoreML::Specification::Int64Parameter *)v3[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        data = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(data);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        v8 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_;
      this = CoreML::Specification::Int64Parameter::MergeFrom((std::string *)data, v10);
    }
    v11 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 4);
    if (v11)
    {
      size = (CoreML::Specification::DoubleParameter *)v3[1].__r_.__value_.__l.__size_;
      if (!size)
      {
        size = (CoreML::Specification::DoubleParameter *)operator new();
        CoreML::Specification::DoubleParameter::DoubleParameter(size);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)size;
        v11 = (const CoreML::Specification::DoubleParameter *)*((_QWORD *)a2 + 4);
      }
      if (v11)
        v13 = v11;
      else
        v13 = (const CoreML::Specification::DoubleParameter *)&CoreML::Specification::_DoubleParameter_default_instance_;
      return CoreML::Specification::DoubleParameter::MergeFrom((std::string *)size, v13);
    }
  }
  return this;
}

void sub_1D3B62F48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

CoreML::Specification::SGDOptimizer *CoreML::Specification::SGDOptimizer::SGDOptimizer(CoreML::Specification::SGDOptimizer *this)
{
  *(_QWORD *)this = &off_1E955AD80;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B62FC8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::SGDOptimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::SGDOptimizer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::SGDOptimizer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::Optimizer::~Optimizer(CoreML::Specification::Optimizer *this)
{
  CoreML::Specification::Optimizer::~Optimizer(this);
  JUMPOUT(0x1D8251A40);
}

{
  *(_QWORD *)this = &off_1E9566200;
  if (*((_DWORD *)this + 7))
    CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::Optimizer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.Optimizer");
}

CoreML::Specification::Optimizer *CoreML::Specification::Optimizer::New(CoreML::Specification::Optimizer *this)
{
  return CoreML::Specification::Optimizer::New(this, 0);
}

CoreML::Specification::Optimizer *CoreML::Specification::Optimizer::New(CoreML::Specification::Optimizer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::Optimizer *v3;

  v3 = (CoreML::Specification::Optimizer *)operator new();
  CoreML::Specification::Optimizer::Optimizer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::Optimizer>(a2, v3);
  return v3;
}

void sub_1D3B63150(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Optimizer::IsInitialized(CoreML::Specification::Optimizer *this)
{
  return 1;
}

uint64_t CoreML::Specification::Optimizer::MergePartialFromCodedStream(CoreML::Specification::Optimizer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::SGDOptimizer *v9;
  CoreML::Specification::AdamOptimizer *v10;
  char *v12;
  int v13;
  char *v14;
  int VarintSizeAsIntFallback;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  uint64_t result;
  int v22;
  unsigned int v23;
  int v24;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_15;
LABEL_7:
      if (v7 >> 3 == 11)
      {
        if (v7 != 90)
          goto LABEL_15;
        if (*((_DWORD *)this + 7) == 11)
        {
          v10 = (CoreML::Specification::AdamOptimizer *)*((_QWORD *)this + 2);
        }
        else
        {
          CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
          *((_DWORD *)this + 7) = 11;
          v10 = (CoreML::Specification::AdamOptimizer *)operator new();
          CoreML::Specification::AdamOptimizer::AdamOptimizer(v10);
          *((_QWORD *)this + 2) = v10;
        }
        v14 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v14;
          *(_QWORD *)a2 = v14 + 1;
        }
        v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        v24 = *((_DWORD *)a2 + 13);
        v19 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 13) = v24;
        if (v24 < 0 != v19)
          return 0;
        v20 = v22;
        result = CoreML::Specification::AdamOptimizer::MergePartialFromCodedStream(v10, a2, v23);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        if (v7 >> 3 != 10 || v7 != 82)
          goto LABEL_15;
        if (*((_DWORD *)this + 7) == 10)
        {
          v9 = (CoreML::Specification::SGDOptimizer *)*((_QWORD *)this + 2);
        }
        else
        {
          CoreML::Specification::Optimizer::clear_OptimizerType((uint64_t)this);
          *((_DWORD *)this + 7) = 10;
          v9 = (CoreML::Specification::SGDOptimizer *)operator new();
          CoreML::Specification::SGDOptimizer::SGDOptimizer(v9);
          *((_QWORD *)this + 2) = v9;
        }
        v12 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
        {
          v13 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v13 < 0)
            return 0;
        }
        else
        {
          v13 = *v12;
          *(_QWORD *)a2 = v12 + 1;
        }
        v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v13);
        v18 = *((_DWORD *)a2 + 13);
        v19 = __OFSUB__(v18--, 1);
        *((_DWORD *)a2 + 13) = v18;
        if (v18 < 0 != v19)
          return 0;
        v20 = v16;
        result = CoreML::Specification::SGDOptimizer::MergePartialFromCodedStream(v9, a2, v17);
        if (!(_DWORD)result)
          return result;
      }
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20))
        return 0;
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *(_QWORD *)a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_15:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B633C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Optimizer::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if (v6 == 10)
  {
    this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(this + 16), a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if (v6 == 11)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xB, *(_QWORD *)(v5 + 16), a2, a4);
  return this;
}

uint64_t CoreML::Specification::Optimizer::GetCachedSize(CoreML::Specification::Optimizer *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t CoreML::Specification::Optimizer::clear_OptimizerType(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 28);
  if (v2 == 11 || v2 == 10)
  {
    this = *(_QWORD *)(this + 16);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

std::string *CoreML::Specification::Optimizer::MergeFrom(std::string *this, const CoreML::Specification::Optimizer *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  CoreML::Specification::SGDOptimizer *v6;
  CoreML::Specification::AdamOptimizer *v7;
  CoreML::Specification::SGDOptimizer *v8;
  const CoreML::Specification::SGDOptimizer *v9;
  CoreML::Specification::AdamOptimizer *v10;
  const CoreML::Specification::AdamOptimizer *v11;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 7);
  if (v5 == 11)
  {
    if (*(_DWORD *)(v3 + 28) == 11)
    {
      v7 = *(CoreML::Specification::AdamOptimizer **)(v3 + 16);
    }
    else
    {
      CoreML::Specification::Optimizer::clear_OptimizerType(v3);
      *(_DWORD *)(v3 + 28) = 11;
      v7 = (CoreML::Specification::AdamOptimizer *)operator new();
      v10 = CoreML::Specification::AdamOptimizer::AdamOptimizer(v7);
      *(_QWORD *)(v3 + 16) = v7;
      if (*((_DWORD *)a2 + 7) != 11)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v10);
        v11 = (const CoreML::Specification::AdamOptimizer *)&CoreML::Specification::_AdamOptimizer_default_instance_;
        return CoreML::Specification::AdamOptimizer::MergeFrom((std::string *)v7, v11);
      }
    }
    v11 = (const CoreML::Specification::AdamOptimizer *)*((_QWORD *)a2 + 2);
    return CoreML::Specification::AdamOptimizer::MergeFrom((std::string *)v7, v11);
  }
  if (v5 == 10)
  {
    if (*(_DWORD *)(v3 + 28) == 10)
    {
      v6 = *(CoreML::Specification::SGDOptimizer **)(v3 + 16);
    }
    else
    {
      CoreML::Specification::Optimizer::clear_OptimizerType(v3);
      *(_DWORD *)(v3 + 28) = 10;
      v6 = (CoreML::Specification::SGDOptimizer *)operator new();
      v8 = CoreML::Specification::SGDOptimizer::SGDOptimizer(v6);
      *(_QWORD *)(v3 + 16) = v6;
      if (*((_DWORD *)a2 + 7) != 10)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v8);
        v9 = (const CoreML::Specification::SGDOptimizer *)&CoreML::Specification::_SGDOptimizer_default_instance_;
        return CoreML::Specification::SGDOptimizer::MergeFrom((std::string *)v6, v9);
      }
    }
    v9 = (const CoreML::Specification::SGDOptimizer *)*((_QWORD *)a2 + 2);
    return CoreML::Specification::SGDOptimizer::MergeFrom((std::string *)v6, v9);
  }
  return this;
}

void sub_1D3B635F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

CoreML::Specification::Optimizer *CoreML::Specification::Optimizer::Optimizer(CoreML::Specification::Optimizer *this)
{
  *(_QWORD *)this = &off_1E9566200;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::Optimizer *)&CoreML::Specification::_Optimizer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B63678(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::Optimizer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::Optimizer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::Optimizer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::MeanSquaredErrorLossLayer::~MeanSquaredErrorLossLayer(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E95620B0;
  v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E95620B0;
  v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::MeanSquaredErrorLossLayer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.MeanSquaredErrorLossLayer");
}

CoreML::Specification::MeanSquaredErrorLossLayer *CoreML::Specification::MeanSquaredErrorLossLayer::New(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return CoreML::Specification::MeanSquaredErrorLossLayer::New(this, 0);
}

CoreML::Specification::MeanSquaredErrorLossLayer *CoreML::Specification::MeanSquaredErrorLossLayer::New(CoreML::Specification::MeanSquaredErrorLossLayer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::MeanSquaredErrorLossLayer *v3;

  v3 = (CoreML::Specification::MeanSquaredErrorLossLayer *)operator new();
  CoreML::Specification::MeanSquaredErrorLossLayer::MeanSquaredErrorLossLayer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::MeanSquaredErrorLossLayer>(a2, v3);
  return v3;
}

void sub_1D3B63828(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  v2 = *(_QWORD *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  return this;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::IsInitialized(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return 1;
}

BOOL CoreML::Specification::MeanSquaredErrorLossLayer::MergePartialFromCodedStream(CoreML::Specification::MeanSquaredErrorLossLayer *this, char **a2, unsigned int a3)
{
  std::string **v4;
  std::string **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  std::string *v11;
  _BOOL8 result;
  std::string *v13;
  std::string::size_type size;
  std::string *v15;
  const char *v17;

  v4 = (std::string **)((char *)this + 24);
  v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          goto LABEL_25;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_25;
LABEL_8:
      if (v8 >> 3 != 2)
        break;
      if (v8 != 18)
        goto LABEL_25;
      v15 = *v4;
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v15 = *v4;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v15);
      if (!result)
        return result;
      v13 = *v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (std::string *)v13->__r_.__value_.__r.__words[0];
        size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      v17 = "CoreML.Specification.MeanSquaredErrorLossLayer.target";
LABEL_35:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v13, size, 0, (uint64_t)v17))
        return 0;
    }
    if (v8 >> 3 == 1 && v8 == 10)
    {
      v11 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v11 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v11);
      if (!result)
        return result;
      v13 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (std::string *)v13->__r_.__value_.__r.__words[0];
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      v17 = "CoreML.Specification.MeanSquaredErrorLossLayer.input";
      goto LABEL_35;
    }
LABEL_25:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
  }
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::SerializeWithCachedSizes(CoreML::Specification::MeanSquaredErrorLossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  unsigned int *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = (unsigned int *)*((_QWORD *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    v5 = *((_QWORD *)v4 + 1);
    if (!v5)
      goto LABEL_7;
    v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((_BYTE *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.MeanSquaredErrorLossLayer.input");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((_QWORD *)this + 2), a2);
  }
LABEL_7:
  result = *((_QWORD *)this + 3);
  if (*(char *)(result + 23) < 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      return result;
    result = *(_QWORD *)result;
    goto LABEL_12;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.MeanSquaredErrorLossLayer.target");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, *((_QWORD *)this + 3), a2);
  }
  return result;
}

uint64_t CoreML::Specification::MeanSquaredErrorLossLayer::GetCachedSize(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  return *((unsigned int *)this + 8);
}

CoreML::Specification::MeanSquaredErrorLossLayer *CoreML::Specification::MeanSquaredErrorLossLayer::MeanSquaredErrorLossLayer(CoreML::Specification::MeanSquaredErrorLossLayer *this)
{
  *(_QWORD *)this = &off_1E95620B0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanSquaredErrorLossLayer *)&CoreML::Specification::_MeanSquaredErrorLossLayer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B63B5C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::MeanSquaredErrorLossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanSquaredErrorLossLayer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::MeanSquaredErrorLossLayer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::CategoricalCrossEntropyLossLayer::~CategoricalCrossEntropyLossLayer(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E9563C98;
  v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E9563C98;
  v1 = (uint64_t *)((char *)this + 8);
  CoreML::Specification::SerializedModel::SharedDtor((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1D8251A40);
}

_QWORD *CoreML::Specification::CategoricalCrossEntropyLossLayer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.CategoricalCrossEntropyLossLayer");
}

CoreML::Specification::CategoricalCrossEntropyLossLayer *CoreML::Specification::CategoricalCrossEntropyLossLayer::New(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return CoreML::Specification::CategoricalCrossEntropyLossLayer::New(this, 0);
}

CoreML::Specification::CategoricalCrossEntropyLossLayer *CoreML::Specification::CategoricalCrossEntropyLossLayer::New(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::CategoricalCrossEntropyLossLayer *v3;

  v3 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)operator new();
  CoreML::Specification::CategoricalCrossEntropyLossLayer::CategoricalCrossEntropyLossLayer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::CategoricalCrossEntropyLossLayer>(a2, v3);
  return v3;
}

void sub_1D3B63CC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  v2 = *(_QWORD *)(this + 24);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  return this;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::IsInitialized(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return 1;
}

BOOL CoreML::Specification::CategoricalCrossEntropyLossLayer::MergePartialFromCodedStream(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, char **a2, unsigned int a3)
{
  std::string **v4;
  std::string **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  std::string *v11;
  _BOOL8 result;
  std::string *v13;
  std::string::size_type size;
  std::string *v15;
  const char *v17;

  v4 = (std::string **)((char *)this + 24);
  v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          goto LABEL_25;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_25;
LABEL_8:
      if (v8 >> 3 != 2)
        break;
      if (v8 != 18)
        goto LABEL_25;
      v15 = *v4;
      if (*v4 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v4, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v15 = *v4;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v15);
      if (!result)
        return result;
      v13 = *v4;
      if (SHIBYTE((*v4)->__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (std::string *)v13->__r_.__value_.__r.__words[0];
        size = (*v4)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v4)->__r_.__value_.__r.__words[2]);
      }
      v17 = "CoreML.Specification.CategoricalCrossEntropyLossLayer.target";
LABEL_35:
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v13, size, 0, (uint64_t)v17))
        return 0;
    }
    if (v8 >> 3 == 1 && v8 == 10)
    {
      v11 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v11 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes(a2, v11);
      if (!result)
        return result;
      v13 = *v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (std::string *)v13->__r_.__value_.__r.__words[0];
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      v17 = "CoreML.Specification.CategoricalCrossEntropyLossLayer.input";
      goto LABEL_35;
    }
LABEL_25:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
  }
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::SerializeWithCachedSizes(CoreML::Specification::CategoricalCrossEntropyLossLayer *this, google::protobuf::io::CodedOutputStream *a2)
{
  unsigned int *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = (unsigned int *)*((_QWORD *)this + 2);
  if (*((char *)v4 + 23) < 0)
  {
    v5 = *((_QWORD *)v4 + 1);
    if (!v5)
      goto LABEL_7;
    v4 = *(unsigned int **)v4;
    goto LABEL_6;
  }
  LODWORD(v5) = *((unsigned __int8 *)v4 + 23);
  if (*((_BYTE *)v4 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v4, v5, 1, (uint64_t)"CoreML.Specification.CategoricalCrossEntropyLossLayer.input");
    google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((_QWORD *)this + 2), a2);
  }
LABEL_7:
  result = *((_QWORD *)this + 3);
  if (*(char *)(result + 23) < 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      return result;
    result = *(_QWORD *)result;
    goto LABEL_12;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.CategoricalCrossEntropyLossLayer.target");
    return google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(2u, *((_QWORD *)this + 3), a2);
  }
  return result;
}

uint64_t CoreML::Specification::CategoricalCrossEntropyLossLayer::GetCachedSize(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  return *((unsigned int *)this + 8);
}

CoreML::Specification::CategoricalCrossEntropyLossLayer *CoreML::Specification::CategoricalCrossEntropyLossLayer::CategoricalCrossEntropyLossLayer(CoreML::Specification::CategoricalCrossEntropyLossLayer *this)
{
  *(_QWORD *)this = &off_1E9563C98;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalCrossEntropyLossLayer *)&CoreML::Specification::_CategoricalCrossEntropyLossLayer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B63FF8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::CategoricalCrossEntropyLossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalCrossEntropyLossLayer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::CategoricalCrossEntropyLossLayer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::LossLayer::~LossLayer(CoreML::Specification::LossLayer *this)
{
  CoreML::Specification::LossLayer::~LossLayer(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E9566168;
  v2 = *((_QWORD *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1D8251A40](v2, 0x1012C40EC159624);
  }
  if (*((_DWORD *)this + 9))
    CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::LossLayer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.LossLayer");
}

CoreML::Specification::LossLayer *CoreML::Specification::LossLayer::New(CoreML::Specification::LossLayer *this)
{
  return CoreML::Specification::LossLayer::New(this, 0);
}

CoreML::Specification::LossLayer *CoreML::Specification::LossLayer::New(CoreML::Specification::LossLayer *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::LossLayer *v3;

  v3 = (CoreML::Specification::LossLayer *)operator new();
  CoreML::Specification::LossLayer::LossLayer(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::LossLayer>(a2, v3);
  return v3;
}

void sub_1D3B64100(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LossLayer::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = *(_QWORD *)(this + 16);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  return CoreML::Specification::Int64Parameter::clear_AllowedValues(this);
}

uint64_t CoreML::Specification::LossLayer::IsInitialized(CoreML::Specification::LossLayer *this)
{
  return 1;
}

BOOL CoreML::Specification::LossLayer::MergePartialFromCodedStream(CoreML::Specification::LossLayer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  std::string *v12;
  _BOOL8 result;
  unsigned int *v14;
  std::string::size_type size;
  CoreML::Specification::MeanSquaredErrorLossLayer *v16;
  CoreML::Specification::CategoricalCrossEntropyLossLayer *v17;
  char *v19;
  int VarintSizeAsIntFallback;
  char *v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;

  v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_26;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_26;
LABEL_8:
        v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90)
            goto LABEL_26;
          if (*((_DWORD *)this + 9) == 11)
          {
            v16 = (CoreML::Specification::MeanSquaredErrorLossLayer *)*((_QWORD *)this + 3);
          }
          else
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            v16 = (CoreML::Specification::MeanSquaredErrorLossLayer *)operator new();
            CoreML::Specification::MeanSquaredErrorLossLayer::MeanSquaredErrorLossLayer(v16);
            *((_QWORD *)this + 3) = v16;
          }
          v19 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v19;
            *(_QWORD *)a2 = v19 + 1;
          }
          v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v25 = *((_DWORD *)a2 + 13);
          v26 = __OFSUB__(v25--, 1);
          *((_DWORD *)a2 + 13) = v25;
          if (v25 < 0 != v26)
            return 0;
          v27 = v23;
          result = CoreML::Specification::MeanSquaredErrorLossLayer::MergePartialFromCodedStream(v16, (char **)a2, v24);
          if (!result)
            return result;
          goto LABEL_47;
        }
        if (v10 != 10)
          break;
        if (v8 != 82)
          goto LABEL_26;
        if (*((_DWORD *)this + 9) == 10)
        {
          v17 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)*((_QWORD *)this + 3);
        }
        else
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          v17 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)operator new();
          CoreML::Specification::CategoricalCrossEntropyLossLayer::CategoricalCrossEntropyLossLayer(v17);
          *((_QWORD *)this + 3) = v17;
        }
        v21 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
        {
          v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0)
            return 0;
        }
        else
        {
          v22 = *v21;
          *(_QWORD *)a2 = v21 + 1;
        }
        v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
        v30 = *((_DWORD *)a2 + 13);
        v26 = __OFSUB__(v30--, 1);
        *((_DWORD *)a2 + 13) = v30;
        if (v30 < 0 != v26)
          return 0;
        v27 = v28;
        result = CoreML::Specification::CategoricalCrossEntropyLossLayer::MergePartialFromCodedStream(v17, (char **)a2, v29);
        if (!result)
          return result;
LABEL_47:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27))
          return 0;
      }
      if (v10 != 1 || v8 != 10)
        break;
      v12 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v12);
      if (!result)
        return result;
      v14 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v14 = *(unsigned int **)v14;
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, size, 0, (uint64_t)"CoreML.Specification.LossLayer.name"))return 0;
    }
LABEL_26:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B64430(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LossLayer::SerializeWithCachedSizes(CoreML::Specification::LossLayer *this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t result;
  uint64_t v7;
  int v8;

  result = *((_QWORD *)this + 2);
  if (*(char *)(result + 23) < 0)
  {
    v7 = *(_QWORD *)(result + 8);
    if (!v7)
      goto LABEL_7;
    result = *(_QWORD *)result;
    goto LABEL_6;
  }
  LODWORD(v7) = *(unsigned __int8 *)(result + 23);
  if (*(_BYTE *)(result + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)result, v7, 1, (uint64_t)"CoreML.Specification.LossLayer.name");
    result = google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1u, *((_QWORD *)this + 2), a2);
  }
LABEL_7:
  v8 = *((_DWORD *)this + 9);
  if (v8 == 10)
  {
    result = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, *((_QWORD *)this + 3), a2, a4);
    v8 = *((_DWORD *)this + 9);
  }
  if (v8 == 11)
    return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xB, *((_QWORD *)this + 3), a2, a4);
  return result;
}

uint64_t CoreML::Specification::LossLayer::GetCachedSize(CoreML::Specification::LossLayer *this)
{
  return *((unsigned int *)this + 8);
}

void CoreML::Specification::LossLayer::MergeFrom(CoreML::Specification::LossLayer *this, const CoreML::Specification::LossLayer *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  CoreML::Specification::CategoricalCrossEntropyLossLayer *v8;
  CoreML::Specification::MeanSquaredErrorLossLayer *v9;
  CoreML::Specification::CategoricalCrossEntropyLossLayer *v10;
  uint64_t *v11;
  CoreML::Specification::MeanSquaredErrorLossLayer *v12;
  CoreML::Specification::SerializedModel *v13;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_11;
  }
  v6 = (uint64_t *)*((_QWORD *)this + 2);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v5);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v5);
  }
LABEL_11:
  v7 = *((_DWORD *)a2 + 9);
  if (v7 == 11)
  {
    if (*((_DWORD *)this + 9) == 11)
    {
      v9 = (CoreML::Specification::MeanSquaredErrorLossLayer *)*((_QWORD *)this + 3);
    }
    else
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
      *((_DWORD *)this + 9) = 11;
      v9 = (CoreML::Specification::MeanSquaredErrorLossLayer *)operator new();
      v12 = CoreML::Specification::MeanSquaredErrorLossLayer::MeanSquaredErrorLossLayer(v9);
      *((_QWORD *)this + 3) = v9;
      if (*((_DWORD *)a2 + 9) != 11)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v12);
        v11 = &CoreML::Specification::_MeanSquaredErrorLossLayer_default_instance_;
        goto LABEL_26;
      }
    }
    v11 = (uint64_t *)*((_QWORD *)a2 + 3);
LABEL_26:
    v13 = v9;
    goto LABEL_24;
  }
  if (v7 == 10)
  {
    if (*((_DWORD *)this + 9) == 10)
    {
      v8 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)*((_QWORD *)this + 3);
    }
    else
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
      *((_DWORD *)this + 9) = 10;
      v8 = (CoreML::Specification::CategoricalCrossEntropyLossLayer *)operator new();
      v10 = CoreML::Specification::CategoricalCrossEntropyLossLayer::CategoricalCrossEntropyLossLayer(v8);
      *((_QWORD *)this + 3) = v8;
      if (*((_DWORD *)a2 + 9) != 10)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v10);
        v11 = &CoreML::Specification::_CategoricalCrossEntropyLossLayer_default_instance_;
        goto LABEL_23;
      }
    }
    v11 = (uint64_t *)*((_QWORD *)a2 + 3);
LABEL_23:
    v13 = v8;
LABEL_24:
    CoreML::Specification::SerializedModel::MergeFrom(v13, (const CoreML::Specification::SerializedModel *)v11);
  }
}

void sub_1D3B6469C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40C9A46F13);
  _Unwind_Resume(a1);
}

CoreML::Specification::LossLayer *CoreML::Specification::LossLayer::LossLayer(CoreML::Specification::LossLayer *this)
{
  *(_QWORD *)this = &off_1E9566168;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LossLayer *)&CoreML::Specification::_LossLayer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B6471C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::LossLayer>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::LossLayer>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::LossLayer>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::NetworkUpdateParameters::~NetworkUpdateParameters(CoreML::Specification::NetworkUpdateParameters *this)
{
  CoreML::Specification::NetworkUpdateParameters::~NetworkUpdateParameters(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_1E9561438;
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    v2 = *((_QWORD *)this + 5);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 7);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 8);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::NetworkUpdateParameters::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NetworkUpdateParameters");
}

CoreML::Specification::NetworkUpdateParameters *CoreML::Specification::NetworkUpdateParameters::New(CoreML::Specification::NetworkUpdateParameters *this)
{
  return CoreML::Specification::NetworkUpdateParameters::New(this, 0);
}

CoreML::Specification::NetworkUpdateParameters *CoreML::Specification::NetworkUpdateParameters::New(CoreML::Specification::NetworkUpdateParameters *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::NetworkUpdateParameters *v3;

  v3 = (CoreML::Specification::NetworkUpdateParameters *)operator new();
  CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::NetworkUpdateParameters>(a2, v3);
  return v3;
}

void sub_1D3B648AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::Clear(CoreML::Specification::NetworkUpdateParameters *this)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (uint64_t *)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      CoreML::Specification::LossLayer::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  v5 = *((_QWORD *)this + 5);
  if (v5)
    (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  *((_QWORD *)this + 5) = 0;
  v6 = *((_QWORD *)this + 6);
  if (v6)
    (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  *((_QWORD *)this + 6) = 0;
  v7 = *((_QWORD *)this + 7);
  if (v7)
    (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  *((_QWORD *)this + 7) = 0;
  result = *((_QWORD *)this + 8);
  if (result)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *((_QWORD *)this + 8) = 0;
  return result;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::IsInitialized(CoreML::Specification::NetworkUpdateParameters *this)
{
  return 1;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(CoreML::Specification::NetworkUpdateParameters *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::internal::RepeatedPtrFieldBase *v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  int *v12;
  int v13;
  int v14;
  CoreML::Specification::LossLayer *Aligned;
  CoreML::Specification::Int64Parameter *v16;
  CoreML::Specification::Optimizer *v17;
  char *v18;
  int v19;
  char *v20;
  int v21;
  CoreML::Specification::BoolParameter *v22;
  char *v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  BOOL v28;
  int v29;
  uint64_t result;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  google::protobuf::Arena *v37;
  google::protobuf::Arena **v38;
  unint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int VarintSizeAsIntFallback;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int TagFallback;
  BOOL v49;

  v5 = (CoreML::Specification::NetworkUpdateParameters *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v6 = *(unsigned __int8 **)a2;
    v7 = *((_QWORD *)a2 + 1);
    if (*(_QWORD *)a2 >= v7)
    {
      LODWORD(v9) = 0;
      goto LABEL_68;
    }
    v8 = v6 + 1;
    v9 = *v6;
    if ((char)*v6 >= 1)
    {
      *(_QWORD *)a2 = v8;
      v10 = v9 | 0x100000000;
      if ((v10 & 0x100000000) != 0)
        goto LABEL_9;
      goto LABEL_69;
    }
    if ((unint64_t)v8 < v7)
    {
      v11 = *v8;
      if ((v9 & ~v11) >= 0x80)
        break;
    }
LABEL_68:
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
    v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
    if ((v10 & 0x100000000) != 0)
      goto LABEL_9;
LABEL_69:
    if ((_DWORD)v10)
      v49 = (v10 & 7) == 4;
    else
      v49 = 1;
    if (v49)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)
      goto LABEL_74;
  }
  *(_QWORD *)a2 = v6 + 2;
  v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
LABEL_9:
  switch(v10 >> 3)
  {
    case 1u:
      if (v10 != 10)
        goto LABEL_69;
      v12 = (int *)*((_QWORD *)this + 4);
      if (!v12)
      {
        v13 = *((_DWORD *)this + 6);
        v14 = *((_DWORD *)this + 7);
LABEL_50:
        if (v13 <= v14)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v14 - v13 + 1);
          v12 = (int *)*((_QWORD *)this + 4);
        }
        v14 = *v12;
        goto LABEL_53;
      }
      v13 = *((_DWORD *)this + 6);
      v14 = *v12;
      if (v13 < *v12)
      {
        *((_DWORD *)this + 6) = v13 + 1;
        Aligned = *(CoreML::Specification::LossLayer **)&v12[2 * v13 + 2];
        goto LABEL_59;
      }
      if (v14 == *((_DWORD *)this + 7))
        goto LABEL_50;
LABEL_53:
      *v12 = v14 + 1;
      v37 = *(google::protobuf::Arena **)v5;
      if (*(_QWORD *)v5)
      {
        CoreML::Specification::LossLayer::LossLayer(Aligned);
        v38 = google::protobuf::Arena::AllocateAligned(v37, 0, 24);
        *v38 = Aligned;
        v38[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>;
        v39 = (unint64_t *)((char *)v37 + 32);
        do
          v40 = __ldxr(v39);
        while (__stxr((unint64_t)v38, v39));
        v38[2] = (google::protobuf::Arena *)v40;
      }
      else
      {
        Aligned = (CoreML::Specification::LossLayer *)operator new();
        CoreML::Specification::LossLayer::LossLayer(Aligned);
      }
      v41 = *((_QWORD *)this + 4);
      v42 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v42 + 1;
      *(_QWORD *)(v41 + 8 * v42 + 8) = Aligned;
LABEL_59:
      v43 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v43 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          goto LABEL_74;
      }
      else
      {
        VarintSizeAsIntFallback = *v43;
        *(_QWORD *)a2 = v43 + 1;
      }
      v45 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v47 = *((_DWORD *)a2 + 13);
      v28 = __OFSUB__(v47--, 1);
      *((_DWORD *)a2 + 13) = v47;
      if (v47 < 0 == v28)
      {
        v29 = v45;
        result = CoreML::Specification::LossLayer::MergePartialFromCodedStream(Aligned, a2, v46);
        if (!(_DWORD)result)
          return result;
LABEL_65:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29))
          goto LABEL_2;
      }
LABEL_74:
      result = 0;
      break;
    case 2u:
      if (v10 != 18)
        goto LABEL_69;
      v17 = (CoreML::Specification::Optimizer *)*((_QWORD *)this + 5);
      if (!v17)
      {
        v17 = (CoreML::Specification::Optimizer *)operator new();
        CoreML::Specification::Optimizer::Optimizer(v17);
        *((_QWORD *)this + 5) = v17;
      }
      v18 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
      {
        v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0)
          goto LABEL_74;
      }
      else
      {
        v19 = *v18;
        *(_QWORD *)a2 = v18 + 1;
      }
      v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      v33 = *((_DWORD *)a2 + 13);
      v28 = __OFSUB__(v33--, 1);
      *((_DWORD *)a2 + 13) = v33;
      if (v33 < 0 != v28)
        goto LABEL_74;
      v29 = v31;
      result = CoreML::Specification::Optimizer::MergePartialFromCodedStream(v17, a2, v32);
      if (!(_DWORD)result)
        return result;
      goto LABEL_65;
    case 3u:
      if (v10 != 26)
        goto LABEL_69;
      v16 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 6);
      if (!v16)
      {
        v16 = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(v16);
        *((_QWORD *)this + 6) = v16;
      }
      goto LABEL_27;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
      goto LABEL_69;
    case 0xAu:
      if (v10 != 82)
        goto LABEL_69;
      v22 = (CoreML::Specification::BoolParameter *)*((_QWORD *)this + 7);
      if (!v22)
      {
        v22 = (CoreML::Specification::BoolParameter *)operator new();
        CoreML::Specification::BoolParameter::BoolParameter(v22);
        *((_QWORD *)this + 7) = v22;
      }
      v23 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v23 < 0)
      {
        v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v24 < 0)
          goto LABEL_74;
      }
      else
      {
        v24 = *v23;
        *(_QWORD *)a2 = v23 + 1;
      }
      v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
      v36 = *((_DWORD *)a2 + 13);
      v28 = __OFSUB__(v36--, 1);
      *((_DWORD *)a2 + 13) = v36;
      if (v36 < 0 != v28)
        goto LABEL_74;
      v29 = v34;
      result = CoreML::Specification::BoolParameter::MergePartialFromCodedStream(v22, (char **)a2, v35);
      if (!(_DWORD)result)
        return result;
      goto LABEL_65;
    default:
      if (v10 >> 3 != 20 || v10 != 162)
        goto LABEL_69;
      v16 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)this + 8);
      if (!v16)
      {
        v16 = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(v16);
        *((_QWORD *)this + 8) = v16;
      }
LABEL_27:
      v20 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
      {
        v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0)
          goto LABEL_74;
      }
      else
      {
        v21 = *v20;
        *(_QWORD *)a2 = v20 + 1;
      }
      v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      v27 = *((_DWORD *)a2 + 13);
      v28 = __OFSUB__(v27--, 1);
      *((_DWORD *)a2 + 13) = v27;
      if (v27 < 0 != v28)
        goto LABEL_74;
      v29 = v25;
      result = CoreML::Specification::Int64Parameter::MergePartialFromCodedStream(v16, a2, v26);
      if (!(_DWORD)result)
        return result;
      goto LABEL_65;
  }
  return result;
}

void sub_1D3B64E3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NetworkUpdateParameters::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t *v5;
  int v6;
  int i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = (uint64_t *)this;
  v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(v5[4] + 8 * i + 8), a2, a4);
  }
  if (v5 != &CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    v8 = v5[5];
    if (v8)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
    v9 = v5[6];
    if (v9)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
    v10 = v5[7];
    if (v10)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v10, a2, a4);
    v11 = v5[8];
    if (v11)
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0x14, v11, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::NetworkUpdateParameters::GetCachedSize(CoreML::Specification::NetworkUpdateParameters *this)
{
  return *((unsigned int *)this + 18);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void CoreML::Specification::NetworkUpdateParameters::MergeFrom(CoreML::Specification::NetworkUpdateParameters *this, const CoreML::Specification::NetworkUpdateParameters *a2)
{
  CoreML::Specification::NetworkUpdateParameters *v3;
  uint64_t v4;
  int v5;
  google::protobuf::Arena **v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  CoreML::Specification::LossLayer **v13;
  CoreML::Specification::LossLayer **v14;
  CoreML::Specification::LossLayer *v15;
  CoreML::Specification::LossLayer *v16;
  CoreML::Specification::LossLayer *v17;
  google::protobuf::Arena *v18;
  int v19;
  uint64_t v20;
  CoreML::Specification::LossLayer **v21;
  CoreML::Specification::LossLayer **v22;
  CoreML::Specification::LossLayer *v23;
  CoreML::Specification::LossLayer *Aligned;
  google::protobuf::Arena **v25;
  unint64_t *v26;
  unint64_t v27;
  int v28;
  int *v29;
  const CoreML::Specification::Optimizer *v30;
  CoreML::Specification::Optimizer *v31;
  const CoreML::Specification::Optimizer *v32;
  const CoreML::Specification::Int64Parameter *v33;
  CoreML::Specification::Int64Parameter *v34;
  const CoreML::Specification::Int64Parameter *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  const CoreML::Specification::Int64Parameter *v40;
  CoreML::Specification::Int64Parameter *v41;
  const CoreML::Specification::Int64Parameter *v42;
  CoreML::Specification::NetworkUpdateParameters *v43;
  uint64_t v44;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (google::protobuf::Arena **)((char *)v3 + 16);
    v44 = *((_QWORD *)a2 + 4);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NetworkUpdateParameters *)((char *)v3 + 16), v5);
    v8 = v7;
    v9 = **((int **)v3 + 4);
    v43 = v3;
    v10 = *((int *)v3 + 6);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (CoreML::Specification::LossLayer **)(v44 + 8);
      v14 = (CoreML::Specification::LossLayer **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = *v6;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (CoreML::Specification::LossLayer **)((char *)v8 + v20);
      v22 = (CoreML::Specification::LossLayer **)(v20 + v44 + 8);
      do
      {
        v23 = *v22;
        if (v18)
        {
          CoreML::Specification::LossLayer::LossLayer(Aligned);
          v25 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
          *v25 = Aligned;
          v25[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LossLayer>;
          v26 = (unint64_t *)((char *)v18 + 32);
          do
            v27 = __ldxr(v26);
          while (__stxr((unint64_t)v25, v26));
          v25[2] = (google::protobuf::Arena *)v27;
        }
        else
        {
          Aligned = (CoreML::Specification::LossLayer *)operator new();
          CoreML::Specification::LossLayer::LossLayer(Aligned);
        }
        google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(v23, Aligned);
        *v21++ = Aligned;
        ++v22;
        --v19;
      }
      while (v19);
    }
    v3 = v43;
    v28 = *((_DWORD *)v43 + 6) + v5;
    *((_DWORD *)v43 + 6) = v28;
    v29 = (int *)*((_QWORD *)v43 + 4);
    if (*v29 < v28)
      *v29 = v28;
  }
  if (a2 != (const CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
  {
    v30 = (const CoreML::Specification::Optimizer *)*((_QWORD *)a2 + 5);
    if (v30)
    {
      v31 = (CoreML::Specification::Optimizer *)*((_QWORD *)v3 + 5);
      if (!v31)
      {
        v31 = (CoreML::Specification::Optimizer *)operator new();
        CoreML::Specification::Optimizer::Optimizer(v31);
        *((_QWORD *)v3 + 5) = v31;
        v30 = (const CoreML::Specification::Optimizer *)*((_QWORD *)a2 + 5);
      }
      if (v30)
        v32 = v30;
      else
        v32 = (const CoreML::Specification::Optimizer *)&CoreML::Specification::_Optimizer_default_instance_;
      CoreML::Specification::Optimizer::MergeFrom((std::string *)v31, v32);
    }
    v33 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 6);
    if (v33)
    {
      v34 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)v3 + 6);
      if (!v34)
      {
        v34 = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(v34);
        *((_QWORD *)v3 + 6) = v34;
        v33 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 6);
      }
      if (v33)
        v35 = v33;
      else
        v35 = (const CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_;
      CoreML::Specification::Int64Parameter::MergeFrom((std::string *)v34, v35);
    }
    v36 = (uint64_t *)*((_QWORD *)a2 + 7);
    if (v36)
    {
      v37 = *((_QWORD *)v3 + 7);
      if (!v37)
      {
        v37 = operator new();
        CoreML::Specification::BoolParameter::BoolParameter((CoreML::Specification::BoolParameter *)v37);
        *((_QWORD *)v3 + 7) = v37;
        v36 = (uint64_t *)*((_QWORD *)a2 + 7);
      }
      if (v36)
        v38 = v36;
      else
        v38 = &CoreML::Specification::_BoolParameter_default_instance_;
      v39 = v38[1];
      if ((v39 & 1) != 0)
        google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v37 + 8), v39 & 0xFFFFFFFFFFFFFFFELL);
      if (*((_BYTE *)v38 + 16))
        *(_BYTE *)(v37 + 16) = 1;
    }
    v40 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 8);
    if (v40)
    {
      v41 = (CoreML::Specification::Int64Parameter *)*((_QWORD *)v3 + 8);
      if (!v41)
      {
        v41 = (CoreML::Specification::Int64Parameter *)operator new();
        CoreML::Specification::Int64Parameter::Int64Parameter(v41);
        *((_QWORD *)v3 + 8) = v41;
        v40 = (const CoreML::Specification::Int64Parameter *)*((_QWORD *)a2 + 8);
      }
      if (v40)
        v42 = v40;
      else
        v42 = (const CoreML::Specification::Int64Parameter *)&CoreML::Specification::_Int64Parameter_default_instance_;
      CoreML::Specification::Int64Parameter::MergeFrom((std::string *)v41, v42);
    }
  }
}

void sub_1D3B652D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CoreML::Specification::LossLayer>::Merge(CoreML::Specification::LossLayer *a1, CoreML::Specification::LossLayer *this)
{
  CoreML::Specification::LossLayer::MergeFrom(this, a1);
}

CoreML::Specification::NetworkUpdateParameters *CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(CoreML::Specification::NetworkUpdateParameters *this)
{
  *(_QWORD *)this = &off_1E9561438;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return this;
}

void sub_1D3B653BC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Arena::Own<CoreML::Specification::NetworkUpdateParameters>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_delete_object<CoreML::Specification::NetworkUpdateParameters>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_delete_object<CoreML::Specification::NetworkUpdateParameters>(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

void CoreML::Specification::NeuralNetworkRegressor::~NeuralNetworkRegressor(CoreML::Specification::NeuralNetworkRegressor *this)
{
  CoreML::Specification::NeuralNetworkRegressor::~NeuralNetworkRegressor(this);
  JUMPOUT(0x1D8251A40);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E9560BE8;
  if (this != (CoreML::Specification::NeuralNetworkRegressor *)&CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    v2 = *((_QWORD *)this + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>((_QWORD *)this + 2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *CoreML::Specification::NeuralNetworkRegressor::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "CoreML.Specification.NeuralNetworkRegressor");
}

CoreML::Specification::NeuralNetworkRegressor *CoreML::Specification::NeuralNetworkRegressor::New(CoreML::Specification::NeuralNetworkRegressor *this)
{
  return CoreML::Specification::NeuralNetworkRegressor::New(this, 0);
}

CoreML::Specification::NeuralNetworkRegressor *CoreML::Specification::NeuralNetworkRegressor::New(CoreML::Specification::NeuralNetworkRegressor *this, google::protobuf::Arena **a2)
{
  CoreML::Specification::NeuralNetworkRegressor *v3;

  v3 = (CoreML::Specification::NeuralNetworkRegressor *)operator new();
  CoreML::Specification::NeuralNetworkRegressor::NeuralNetworkRegressor(v3);
  if (a2)
    google::protobuf::Arena::Own<CoreML::Specification::NeuralNetworkRegressor>(a2, v3);
  return v3;
}

void sub_1D3B65570(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::Clear(CoreML::Specification::NeuralNetworkRegressor *this)
{
  uint64_t v2;
  CoreML::Specification::NeuralNetworkLayer **v3;
  CoreML::Specification::NeuralNetworkLayer *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;

  v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    v3 = (CoreML::Specification::NeuralNetworkLayer **)(*((_QWORD *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      CoreML::Specification::NeuralNetworkLayer::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    v6 = (uint64_t *)(*((_QWORD *)this + 7) + 8);
    do
    {
      v7 = *v6++;
      CoreML::Specification::NeuralNetworkPreprocessing::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 12) = 0;
  }
  v10 = *((_QWORD *)this + 8);
  v9 = (_QWORD *)((char *)this + 64);
  result = v10;
  if (v10)
    result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  *v9 = 0;
  v9[1] = 0;
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::IsInitialized(CoreML::Specification::NeuralNetworkRegressor *this)
{
  return 1;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkRegressor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int TagFallback;
  CoreML::Specification::NeuralNetworkLayer *v12;
  char *v13;
  int VarintSizeAsIntFallback;
  CoreML::Specification::NeuralNetworkPreprocessing *v15;
  char *v16;
  int v17;
  char *v18;
  int v19;
  char *v20;
  int v21;
  CoreML::Specification::NetworkUpdateParameters *v22;
  char *v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  BOOL v28;
  int v29;
  uint64_t result;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  uint64_t Varint32Fallback;
  uint64_t v38;

  v5 = (char *)this + 40;
  v6 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      v7 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v8) = 0;
LABEL_7:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_8;
LABEL_14:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10)
            goto LABEL_8;
          v12 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>((uint64_t)v6);
          v13 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v13;
            *(_QWORD *)a2 = v13 + 1;
          }
          v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v27 = *((_DWORD *)a2 + 13);
          v28 = __OFSUB__(v27--, 1);
          *((_DWORD *)a2 + 13) = v27;
          if (v27 < 0 != v28)
            return 0;
          v29 = v25;
          result = CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(v12, a2, v26);
          if (!(_DWORD)result)
            return result;
          goto LABEL_48;
        case 2u:
          if (v9 != 18)
            goto LABEL_8;
          v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((uint64_t)v5);
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v17 < 0)
              return 0;
          }
          else
          {
            v17 = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
          v33 = *((_DWORD *)a2 + 13);
          v28 = __OFSUB__(v33--, 1);
          *((_DWORD *)a2 + 13) = v33;
          if (v33 < 0 != v28)
            return 0;
          v29 = v31;
          result = CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(v15, a2, v32);
          if (!(_DWORD)result)
            return result;
          goto LABEL_48;
        case 5u:
          if (v9 != 40)
            goto LABEL_8;
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            v19 = 0;
          }
          else
          {
            v19 = *v18;
            if ((*v18 & 0x80000000) == 0)
            {
              *(_QWORD *)a2 = v18 + 1;
              goto LABEL_52;
            }
          }
          Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v19);
          v19 = Varint32Fallback;
          if (Varint32Fallback < 0)
            return 0;
LABEL_52:
          *((_DWORD *)this + 18) = v19;
          continue;
        case 6u:
          if (v9 != 48)
            goto LABEL_8;
          v20 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            v21 = 0;
          }
          else
          {
            v21 = *v20;
            if ((*v20 & 0x80000000) == 0)
            {
              *(_QWORD *)a2 = v20 + 1;
              goto LABEL_55;
            }
          }
          v38 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v21);
          v21 = v38;
          if (v38 < 0)
            return 0;
LABEL_55:
          *((_DWORD *)this + 19) = v21;
          break;
        case 0xAu:
          if (v9 != 82)
            goto LABEL_8;
          v22 = (CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)this + 8);
          if (!v22)
          {
            v22 = (CoreML::Specification::NetworkUpdateParameters *)operator new();
            CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(v22);
            *((_QWORD *)this + 8) = v22;
          }
          v23 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v23 < 0)
          {
            v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v24 < 0)
              return 0;
          }
          else
          {
            v24 = *v23;
            *(_QWORD *)a2 = v23 + 1;
          }
          v34 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
          v36 = *((_DWORD *)a2 + 13);
          v28 = __OFSUB__(v36--, 1);
          *((_DWORD *)a2 + 13) = v36;
          if (v36 < 0 != v28)
            return 0;
          v29 = v34;
          result = CoreML::Specification::NetworkUpdateParameters::MergePartialFromCodedStream(v22, a2, v35);
          if (!(_DWORD)result)
            return result;
LABEL_48:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v29))
            return 0;
          continue;
        default:
          goto LABEL_8;
      }
    }
    v8 = *v7;
    if (*v7 < 1)
      goto LABEL_7;
    *(_QWORD *)a2 = v7 + 1;
    v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0)
      goto LABEL_14;
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B65950(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::ByteSizeLong(CoreML::Specification::NeuralNetworkRegressor *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  CoreML::Specification::NetworkUpdateParameters *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v2 = *((_DWORD *)this + 6);
  if (v2)
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 6);
    do
    {
      v5 = CoreML::Specification::NeuralNetworkLayer::ByteSizeLong(*(CoreML::Specification::NeuralNetworkLayer **)(*((_QWORD *)this + 4) + 8 * v3 + 8));
      v4 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    v4 = 0;
  }
  v6 = *((unsigned int *)this + 12);
  v7 = v4 + v6;
  if ((_DWORD)v6)
  {
    v8 = 0;
    do
    {
      v9 = CoreML::Specification::NeuralNetworkPreprocessing::ByteSizeLong(*(CoreML::Specification::NeuralNetworkPreprocessing **)(*((_QWORD *)this + 7) + 8 * v8 + 8));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      ++v8;
    }
    while ((_DWORD)v6 != v8);
  }
  if (this != (CoreML::Specification::NeuralNetworkRegressor *)&CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    v10 = (CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)this + 8);
    if (v10)
    {
      v11 = CoreML::Specification::NetworkUpdateParameters::ByteSizeLong(v10);
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v12 = 11;
  v13 = *((_DWORD *)this + 18);
  v14 = *((_DWORD *)this + 19);
  v15 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v13 >= 0)
    v12 = v15;
  v16 = v12 + v7;
  if (!v13)
    v16 = v7;
  v17 = 11;
  v18 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v14 >= 0)
    v17 = v18;
  v19 = v17 + v16;
  if (v14)
    result = v19;
  else
    result = v16;
  *((_DWORD *)this + 20) = result;
  return result;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::SerializeWithCachedSizes(uint64_t this, google::protobuf::io::CodedOutputStream *a2, uint64_t a3, google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int i;
  int v8;
  int j;
  signed int v10;
  signed int v11;
  uint64_t v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * i + 8), a2, a4);
  }
  v8 = *(_DWORD *)(v5 + 48);
  if (v8)
  {
    for (j = 0; j != v8; ++j)
      this = google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * j + 8), a2, a4);
  }
  v10 = *(_DWORD *)(v5 + 72);
  if (v10)
    this = google::protobuf::internal::WireFormatLite::WriteEnum(5, v10, a2, a4);
  v11 = *(_DWORD *)(v5 + 76);
  if (v11)
    this = google::protobuf::internal::WireFormatLite::WriteEnum(6, v11, a2, a4);
  if ((uint64_t *)v5 != &CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    v12 = *(_QWORD *)(v5 + 64);
    if (v12)
      return google::protobuf::internal::WireFormatLite::WriteMessage((google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
  }
  return this;
}

uint64_t CoreML::Specification::NeuralNetworkRegressor::GetCachedSize(CoreML::Specification::NeuralNetworkRegressor *this)
{
  return *((unsigned int *)this + 20);
}

CoreML::Specification::NeuralNetworkLayer *google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(uint64_t a1)
{
  int *v2;
  int v3;
  int v4;
  CoreML::Specification::NeuralNetworkLayer *Aligned;
  google::protobuf::Arena *v6;
  google::protobuf::Arena **v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    v3 = *(_DWORD *)(a1 + 8);
    v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v4 - v3 + 1);
      v2 = *(int **)(a1 + 16);
    }
    v4 = *v2;
    goto LABEL_9;
  }
  v3 = *(_DWORD *)(a1 + 8);
  v4 = *v2;
  if (v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::NeuralNetworkLayer **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12))
    goto LABEL_6;
LABEL_9:
  *v2 = v4 + 1;
  v6 = *(google::protobuf::Arena **)a1;
  if (*(_QWORD *)a1)
  {
    CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(Aligned);
    v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    *v7 = Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>;
    v8 = (unint64_t *)((char *)v6 + 32);
    do
      v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    v7[2] = (google::protobuf::Arena *)v9;
  }
  else
  {
    Aligned = (CoreML::Specification::NeuralNetworkLayer *)operator new();
    CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(Aligned);
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1D3B65CF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40665201BALL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::NeuralNetworkLayer::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkLayer *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  _DWORD *v5;
  CoreML::Specification::CategoricalDistributionLayerParams **v6;
  char *v7;
  char *v8;
  google::protobuf::internal::RepeatedPtrFieldBase *v9;
  std::string **v10;
  unsigned __int8 *v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  unsigned int TagFallback;
  unsigned int v19;
  std::string *v20;
  uint64_t result;
  std::string *v22;
  std::string::size_type size;
  CoreML::Specification::MultiplyBroadcastableLayerParams *v24;
  char *v25;
  int v26;
  CoreML::Specification::SinLayerParams *v27;
  char *v28;
  int v29;
  CoreML::Specification::CumSumLayerParams *v30;
  CoreML::Specification::ScaleLayerParams *v31;
  CoreML::Specification::SlidingWindowsLayerParams *v32;
  CoreML::Specification::TanhLayerParams *v33;
  char *v34;
  int v35;
  CoreML::Specification::RankPreservingReshapeLayerParams *v36;
  CoreML::Specification::LRNLayerParams *v37;
  CoreML::Specification::ScatterNDLayerParams *v38;
  CoreML::Specification::CopyLayerParams *v39;
  char *v40;
  int v41;
  CoreML::Specification::ReduceSumSquareLayerParams *v42;
  CoreML::Specification::ConcatLayerParams *v43;
  CoreML::Specification::FillDynamicLayerParams *v44;
  CoreML::Specification::LessThanLayerParams *v45;
  CoreML::Specification::RandomBernoulliDynamicLayerParams *v46;
  CoreML::Specification::EmbeddingLayerParams *v47;
  CoreML::Specification::PowBroadcastableLayerParams *v48;
  char *v49;
  int v50;
  CoreML::Specification::SignLayerParams *v51;
  char *v52;
  int v53;
  CoreML::Specification::ReduceLayerParams *v54;
  CoreML::Specification::BatchedMatMulLayerParams *v55;
  CoreML::Specification::GeluLayerParams *v56;
  CoreML::Specification::RandomUniformLikeLayerParams *v57;
  CoreML::Specification::CropResizeLayerParams *v58;
  CoreML::Specification::RangeStaticLayerParams *v59;
  CoreML::Specification::UpperTriangularLayerParams *v60;
  CoreML::Specification::SimpleRecurrentLayerParams *v61;
  CoreML::Specification::ExpandDimsLayerParams *v62;
  CoreML::Specification::ReduceMinLayerParams *v63;
  CoreML::Specification::NonMaximumSuppressionLayerParams *v64;
  CoreML::Specification::LogicalXorLayerParams *v65;
  char *v66;
  int v67;
  CoreML::Specification::GatherNDLayerParams *v68;
  char *v69;
  int v70;
  CoreML::Specification::StackLayerParams *v71;
  CoreML::Specification::AsinLayerParams *v72;
  char *v73;
  int v74;
  CoreML::Specification::SplitNDLayerParams *v75;
  CoreML::Specification::AddLayerParams *v76;
  CoreML::Specification::TransposeLayerParams *v77;
  CoreML::Specification::AtanLayerParams *v78;
  char *v79;
  int v80;
  CoreML::Specification::ReshapeLikeLayerParams *v81;
  char *v82;
  int v83;
  CoreML::Specification::MeanVarianceNormalizeLayerParams *v84;
  CoreML::Specification::UniDirectionalLSTMLayerParams *v85;
  CoreML::Specification::ReduceProdLayerParams *v86;
  CoreML::Specification::ReshapeLayerParams *v87;
  CoreML::Specification::LoadConstantNDLayerParams *v88;
  CoreML::Specification::NotEqualLayerParams *v89;
  CoreML::Specification::RandomUniformDynamicLayerParams *v90;
  CoreML::Specification::PoolingLayerParams *v91;
  CoreML::Specification::MinBroadcastableLayerParams *v92;
  char *v93;
  int v94;
  CoreML::Specification::ClipLayerParams *v95;
  CoreML::Specification::MaxLayerParams *v96;
  char *v97;
  int v98;
  CoreML::Specification::ArgMinLayerParams *v99;
  CoreML::Specification::AcoshLayerParams *v100;
  char *v101;
  int v102;
  CoreML::Specification::RandomNormalLikeLayerParams *v103;
  CoreML::Specification::PaddingLayerParams *v104;
  CoreML::Specification::LoopLayerParams *v105;
  CoreML::Specification::WhereNonZeroLayerParams *v106;
  char *v107;
  int v108;
  CoreML::Specification::SequenceRepeatLayerParams *v109;
  CoreML::Specification::BroadcastToStaticLayerParams *v110;
  CoreML::Specification::ReduceL1LayerParams *v111;
  CoreML::Specification::LogicalAndLayerParams *v112;
  char *v113;
  int v114;
  CoreML::Specification::WhereBroadcastableLayerParams *v115;
  char *v116;
  int v117;
  CoreML::Specification::LayerNormalizationLayerParams *v118;
  CoreML::Specification::LessEqualLayerParams *v119;
  CoreML::Specification::GreaterThanLayerParams *v120;
  CoreML::Specification::GreaterEqualLayerParams *v121;
  int *v122;
  uint64_t v123;
  int v124;
  std::string *Aligned;
  int *v126;
  uint64_t v127;
  int v128;
  std::string *v129;
  uint64_t v130;
  CoreML::Specification::Tensor *v131;
  char *v132;
  int v133;
  char *v134;
  unint64_t Varint64Fallback;
  CoreML::Specification::SoftmaxNDLayerParams *v136;
  CoreML::Specification::GatherAlongAxisLayerParams *v137;
  CoreML::Specification::ScatterAlongAxisLayerParams *v138;
  CoreML::Specification::DivideBroadcastableLayerParams *v139;
  char *v140;
  int v141;
  CoreML::Specification::FloorDivBroadcastableLayerParams *v142;
  char *v143;
  int v144;
  CoreML::Specification::RoundLayerParams *v145;
  char *v146;
  int v147;
  CoreML::Specification::Exp2LayerParams *v148;
  char *v149;
  int v150;
  CoreML::Specification::MultiplyLayerParams *v151;
  CoreML::Specification::AverageLayerParams *v152;
  char *v153;
  int v154;
  CoreML::Specification::SliceStaticLayerParams *v155;
  CoreML::Specification::SliceDynamicLayerParams *v156;
  CoreML::Specification::SinhLayerParams *v157;
  char *v158;
  int v159;
  CoreML::Specification::CoshLayerParams *v160;
  char *v161;
  int v162;
  CoreML::Specification::ReshapeStaticLayerParams *v163;
  CoreML::Specification::ReshapeDynamicLayerParams *v164;
  char *v165;
  int v166;
  CoreML::Specification::L2NormalizeLayerParams *v167;
  CoreML::Specification::SoftmaxLayerParams *v168;
  char *v169;
  int v170;
  CoreML::Specification::BiDirectionalLSTMLayerParams *v171;
  CoreML::Specification::CustomLayerParams *v172;
  CoreML::Specification::ReduceMeanLayerParams *v173;
  CoreML::Specification::ReduceLogSumLayerParams *v174;
  CoreML::Specification::FlattenLayerParams *v175;
  CoreML::Specification::PermuteLayerParams *v176;
  CoreML::Specification::FillLikeLayerParams *v177;
  CoreML::Specification::FillStaticLayerParams *v178;
  CoreML::Specification::RandomBernoulliLikeLayerParams *v179;
  CoreML::Specification::RandomBernoulliStaticLayerParams *v180;
  CoreML::Specification::ActivationParams *v181;
  CoreML::Specification::InnerProductLayerParams *v182;
  CoreML::Specification::MaxBroadcastableLayerParams *v183;
  char *v184;
  int v185;
  CoreML::Specification::AddBroadcastableLayerParams *v186;
  char *v187;
  int v188;
  CoreML::Specification::CeilLayerParams *v189;
  char *v190;
  int v191;
  CoreML::Specification::FloorLayerParams *v192;
  char *v193;
  int v194;
  CoreML::Specification::MinLayerParams *v195;
  char *v196;
  int v197;
  CoreML::Specification::DotProductLayerParams *v198;
  CoreML::Specification::ArgMaxLayerParams *v199;
  CoreML::Specification::EmbeddingNDLayerParams *v200;
  CoreML::Specification::AtanhLayerParams *v201;
  char *v202;
  int v203;
  CoreML::Specification::ErfLayerParams *v204;
  char *v205;
  int v206;
  CoreML::Specification::RandomNormalStaticLayerParams *v207;
  CoreML::Specification::RandomNormalDynamicLayerParams *v208;
  CoreML::Specification::UpsampleLayerParams *v209;
  CoreML::Specification::ResizeBilinearLayerParams *v210;
  CoreML::Specification::LoopBreakLayerParams *v211;
  char *v212;
  int v213;
  CoreML::Specification::LoopContinueLayerParams *v214;
  char *v215;
  int v216;
  CoreML::Specification::MatrixBandPartLayerParams *v217;
  CoreML::Specification::LowerTriangularLayerParams *v218;
  CoreML::Specification::ReorganizeDataLayerParams *v219;
  CoreML::Specification::SliceLayerParams *v220;
  CoreML::Specification::BroadcastToDynamicLayerParams *v221;
  char *v222;
  int v223;
  CoreML::Specification::SqueezeLayerParams *v224;
  CoreML::Specification::ReduceL2LayerParams *v225;
  CoreML::Specification::ReduceMaxLayerParams *v226;
  CoreML::Specification::LogicalOrLayerParams *v227;
  char *v228;
  int v229;
  CoreML::Specification::GatherLayerParams *v230;
  CoreML::Specification::ScatterLayerParams *v231;
  CoreML::Specification::SubtractBroadcastableLayerParams *v232;
  char *v233;
  int v234;
  CoreML::Specification::TileLayerParams *v235;
  CoreML::Specification::CosLayerParams *v236;
  char *v237;
  int v238;
  CoreML::Specification::TanLayerParams *v239;
  char *v240;
  int v241;
  CoreML::Specification::ReverseLayerParams *v242;
  CoreML::Specification::ReverseSeqLayerParams *v243;
  CoreML::Specification::UnaryFunctionLayerParams *v244;
  CoreML::Specification::ConcatNDLayerParams *v245;
  CoreML::Specification::AcosLayerParams *v246;
  char *v247;
  int v248;
  CoreML::Specification::FlattenTo2DLayerParams *v249;
  CoreML::Specification::BatchnormLayerParams *v250;
  CoreML::Specification::GRULayerParams *v251;
  CoreML::Specification::ReduceSumLayerParams *v252;
  CoreML::Specification::LoadConstantLayerParams *v253;
  CoreML::Specification::GetShapeLayerParams *v254;
  char *v255;
  int v256;
  CoreML::Specification::RandomUniformStaticLayerParams *v257;
  CoreML::Specification::ConvolutionLayerParams *v258;
  CoreML::Specification::ModBroadcastableLayerParams *v259;
  char *v260;
  int v261;
  CoreML::Specification::RangeDynamicLayerParams *v262;
  CoreML::Specification::BiasLayerParams *v263;
  CoreML::Specification::TopKLayerParams *v264;
  CoreML::Specification::AsinhLayerParams *v265;
  char *v266;
  int v267;
  CoreML::Specification::ConstantPaddingLayerParams *v268;
  CoreML::Specification::CropLayerParams *v269;
  CoreML::Specification::BranchLayerParams *v270;
  CoreML::Specification::ReduceLogSumExpLayerParams *v271;
  CoreML::Specification::SplitLayerParams *v272;
  CoreML::Specification::BroadcastToLikeLayerParams *v273;
  char *v274;
  int v275;
  CoreML::Specification::CategoricalDistributionLayerParams *v276;
  CoreML::Specification::LogicalNotLayerParams *v277;
  char *v278;
  int v279;
  CoreML::Specification::EqualLayerParams *v280;
  CoreML::Specification::OneHotLayerParams *v281;
  CoreML::Specification::ClampedReLULayerParams *v282;
  CoreML::Specification::ArgSortLayerParams *v283;
  CoreML::Specification::Pooling3DLayerParams *v284;
  CoreML::Specification::GlobalPooling3DLayerParams *v285;
  CoreML::Specification::SliceBySizeLayerParams *v286;
  CoreML::Specification::Convolution3DLayerParams *v287;
  int v288;
  unsigned int v289;
  int v290;
  BOOL v291;
  int v292;
  char *v293;
  int v294;
  char *v295;
  int v296;
  char *v297;
  int v298;
  char *v299;
  int v300;
  char *v301;
  int v302;
  char *v303;
  int v304;
  char *v305;
  int v306;
  char *v307;
  int v308;
  char *v309;
  int v310;
  char *v311;
  int v312;
  char *v313;
  int v314;
  char *v315;
  int v316;
  char *v317;
  int v318;
  char *v319;
  int v320;
  char *v321;
  int v322;
  char *v323;
  int v324;
  char *v325;
  int v326;
  char *v327;
  int v328;
  char *v329;
  int v330;
  char *v331;
  int v332;
  char *v333;
  int v334;
  char *v335;
  int v336;
  char *v337;
  int v338;
  char *v339;
  int v340;
  char *v341;
  int v342;
  char *v343;
  int v344;
  char *v345;
  int v346;
  char *v347;
  int v348;
  char *v349;
  int v350;
  char *v351;
  int v352;
  char *v353;
  int v354;
  char *v355;
  int v356;
  char *v357;
  int v358;
  char *v359;
  int v360;
  char *v361;
  int v362;
  char *v363;
  int v364;
  char *v365;
  int v366;
  char *v367;
  int v368;
  char *v369;
  int v370;
  char *v371;
  int v372;
  char *v373;
  int v374;
  char *v375;
  int v376;
  char *v377;
  int v378;
  char *v379;
  int v380;
  char *v381;
  int v382;
  char *v383;
  int v384;
  char *v385;
  int v386;
  char *v387;
  int v388;
  char *v389;
  int v390;
  char *v391;
  int v392;
  char *v393;
  int v394;
  char *v395;
  int v396;
  char *v397;
  int v398;
  char *v399;
  int v400;
  char *v401;
  int v402;
  char *v403;
  int v404;
  char *v405;
  int v406;
  char *v407;
  int v408;
  char *v409;
  int v410;
  char *v411;
  int v412;
  char *v413;
  int v414;
  char *v415;
  int v416;
  char *v417;
  int v418;
  char *v419;
  int v420;
  char *v421;
  int v422;
  char *v423;
  int v424;
  char *v425;
  int v426;
  char *v427;
  int v428;
  char *v429;
  int v430;
  char *v431;
  int v432;
  char *v433;
  int v434;
  char *v435;
  int v436;
  char *v437;
  int v438;
  char *v439;
  int v440;
  char *v441;
  int v442;
  char *v443;
  int v444;
  char *v445;
  int v446;
  char *v447;
  int v448;
  char *v449;
  int v450;
  char *v451;
  int v452;
  char *v453;
  int v454;
  char *v455;
  int v456;
  char *v457;
  int v458;
  char *v459;
  int v460;
  char *v461;
  int v462;
  char *v463;
  int v464;
  char *v465;
  int v466;
  char *v467;
  int v468;
  char *v469;
  int v470;
  char *v471;
  int v472;
  char *v473;
  int v474;
  char *v475;
  int v476;
  char *v477;
  int v478;
  char *v479;
  int v480;
  char *v481;
  int v482;
  char *v483;
  int v484;
  char *v485;
  int v486;
  char *v487;
  int v488;
  char *v489;
  int v490;
  char *v491;
  int v492;
  char *v493;
  int v494;
  char *v495;
  int VarintSizeAsIntFallback;
  CoreML::Specification::WhereBroadcastableLayerParams *v497;
  unsigned int v498;
  int v499;
  int v500;
  int v501;
  unsigned int v502;
  int v503;
  int v504;
  int v505;
  unsigned int v506;
  int v507;
  int v508;
  char *v509;
  int v510;
  char *v511;
  int v512;
  char *v513;
  int v514;
  char *v515;
  int v516;
  char *v517;
  int v518;
  char *v519;
  int v520;
  char *v521;
  int v522;
  char *v523;
  int v524;
  char *v525;
  int v526;
  char *v527;
  int v528;
  int v529;
  unsigned int v530;
  int v531;
  int v532;
  int v533;
  unsigned int v534;
  int v535;
  int v536;
  int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  unsigned int v542;
  int v543;
  int v544;
  char v545;
  int v546;
  unsigned int v547;
  int v548;
  int v549;
  int v550;
  unsigned int v551;
  int v552;
  int v553;
  int v554;
  unsigned int v555;
  int v556;
  int v557;
  int v558;
  unsigned int v559;
  int v560;
  int v561;
  const char *v562;
  CoreML::Specification::MultiplyBroadcastableLayerParams *v563;
  unsigned int v564;
  int v565;
  int v566;
  CoreML::Specification::SinLayerParams *v567;
  unsigned int v568;
  int v569;
  int v570;
  CoreML::Specification::TanhLayerParams *v571;
  unsigned int v572;
  int v573;
  int v574;
  CoreML::Specification::CopyLayerParams *v575;
  unsigned int v576;
  int v577;
  int v578;
  CoreML::Specification::PowBroadcastableLayerParams *v579;
  unsigned int v580;
  int v581;
  int v582;
  CoreML::Specification::SignLayerParams *v583;
  unsigned int v584;
  int v585;
  int v586;
  CoreML::Specification::LogicalXorLayerParams *v587;
  unsigned int v588;
  int v589;
  int v590;
  CoreML::Specification::GatherNDLayerParams *v591;
  unsigned int v592;
  int v593;
  int v594;
  CoreML::Specification::AsinLayerParams *v595;
  unsigned int v596;
  int v597;
  int v598;
  CoreML::Specification::AtanLayerParams *v599;
  unsigned int v600;
  int v601;
  int v602;
  CoreML::Specification::ReshapeLikeLayerParams *v603;
  unsigned int v604;
  int v605;
  int v606;
  CoreML::Specification::MinBroadcastableLayerParams *v607;
  unsigned int v608;
  int v609;
  int v610;
  CoreML::Specification::MaxLayerParams *v611;
  unsigned int v612;
  int v613;
  int v614;
  CoreML::Specification::AcoshLayerParams *v615;
  unsigned int v616;
  int v617;
  int v618;
  CoreML::Specification::WhereNonZeroLayerParams *v619;
  unsigned int v620;
  int v621;
  int v622;
  CoreML::Specification::LogicalAndLayerParams *v623;
  unsigned int v624;
  int v625;
  int v626;
  CoreML::Specification::DivideBroadcastableLayerParams *v627;
  unsigned int v628;
  int v629;
  int v630;
  CoreML::Specification::FloorDivBroadcastableLayerParams *v631;
  unsigned int v632;
  int v633;
  int v634;
  CoreML::Specification::RoundLayerParams *v635;
  unsigned int v636;
  int v637;
  int v638;
  CoreML::Specification::Exp2LayerParams *v639;
  unsigned int v640;
  int v641;
  int v642;
  CoreML::Specification::AverageLayerParams *v643;
  unsigned int v644;
  int v645;
  int v646;
  CoreML::Specification::SinhLayerParams *v647;
  unsigned int v648;
  int v649;
  int v650;
  CoreML::Specification::CoshLayerParams *v651;
  unsigned int v652;
  int v653;
  int v654;
  CoreML::Specification::ReshapeDynamicLayerParams *v655;
  unsigned int v656;
  int v657;
  int v658;
  CoreML::Specification::SoftmaxLayerParams *v659;
  unsigned int v660;
  int v661;
  CoreML::Specification::MaxBroadcastableLayerParams *v662;
  unsigned int v663;
  int v664;
  int v665;
  CoreML::Specification::AddBroadcastableLayerParams *v666;
  unsigned int v667;
  int v668;
  int v669;
  CoreML::Specification::CeilLayerParams *v670;
  unsigned int v671;
  int v672;
  int v673;
  CoreML::Specification::FloorLayerParams *v674;
  unsigned int v675;
  int v676;
  int v677;
  CoreML::Specification::MinLayerParams *v678;
  unsigned int v679;
  int v680;
  int v681;
  CoreML::Specification::AtanhLayerParams *v682;
  unsigned int v683;
  int v684;
  int v685;
  CoreML::Specification::ErfLayerParams *v686;
  unsigned int v687;
  int v688;
  int v689;
  CoreML::Specification::LoopBreakLayerParams *v690;
  unsigned int v691;
  int v692;
  int v693;
  CoreML::Specification::LoopContinueLayerParams *v694;
  unsigned int v695;
  int v696;
  int v697;
  CoreML::Specification::BroadcastToDynamicLayerParams *v698;
  unsigned int v699;
  int v700;
  int v701;
  CoreML::Specification::LogicalOrLayerParams *v702;
  unsigned int v703;
  int v704;
  int v705;
  CoreML::Specification::SubtractBroadcastableLayerParams *v706;
  unsigned int v707;
  int v708;
  int v709;
  CoreML::Specification::CosLayerParams *v710;
  unsigned int v711;
  int v712;
  int v713;
  CoreML::Specification::TanLayerParams *v714;
  unsigned int v715;
  int v716;
  int v717;
  CoreML::Specification::AcosLayerParams *v718;
  unsigned int v719;
  int v720;
  int v721;
  CoreML::Specification::GetShapeLayerParams *v722;
  unsigned int v723;
  int v724;
  int v725;
  CoreML::Specification::ModBroadcastableLayerParams *v726;
  unsigned int v727;
  int v728;
  int v729;
  CoreML::Specification::AsinhLayerParams *v730;
  unsigned int v731;
  int v732;
  int v733;
  CoreML::Specification::BroadcastToLikeLayerParams *v734;
  unsigned int v735;
  int v736;
  int v737;
  CoreML::Specification::LogicalNotLayerParams *v738;
  unsigned int v739;
  int v740;
  int v741;
  int v742;
  unsigned int v743;
  int v744;
  int v745;
  int v746;
  unsigned int v747;
  int v748;
  int v749;
  int v750;
  unsigned int v751;
  int v752;
  int v753;
  int v754;
  unsigned int v755;
  int v756;
  int v757;
  int v758;
  unsigned int v759;
  int v760;
  int v761;
  int v762;
  unsigned int v763;
  int v764;
  int v765;
  int v766;
  unsigned int v767;
  int v768;
  int v769;
  int v770;
  unsigned int v771;
  int v772;
  int v773;
  int v774;
  unsigned int v775;
  int v776;
  int v777;
  unsigned int v778;
  int v779;
  int v780;
  int v781;
  unsigned int v782;
  int v783;
  int v784;
  int v785;
  unsigned int v786;
  int v787;
  int v788;
  int v789;
  unsigned int v790;
  int v791;
  int v792;
  int v793;
  unsigned int v794;
  int v795;
  int v796;
  int v797;
  unsigned int v798;
  int v799;
  int v800;
  int v801;
  unsigned int v802;
  int v803;
  int v804;
  int v805;
  unsigned int v806;
  int v807;
  int v808;
  int v809;
  unsigned int v810;
  int v811;
  int v812;
  int v813;
  unsigned int v814;
  int v815;
  int v816;
  int v817;
  unsigned int v818;
  int v819;
  int v820;
  int v821;
  unsigned int v822;
  int v823;
  int v824;
  int v825;
  unsigned int v826;
  int v827;
  int v828;
  int v829;
  unsigned int v830;
  int v831;
  int v832;
  int v833;
  unsigned int v834;
  int v835;
  int v836;
  unsigned int v837;
  int v838;
  int v839;
  int v840;
  unsigned int v841;
  int v842;
  int v843;
  int v844;
  unsigned int v845;
  int v846;
  int v847;
  int v848;
  unsigned int v849;
  int v850;
  int v851;
  int v852;
  unsigned int v853;
  int v854;
  int v855;
  int v856;
  unsigned int v857;
  int v858;
  int v859;
  unsigned int v860;
  int v861;
  int v862;
  int v863;
  unsigned int v864;
  int v865;
  int v866;
  int v867;
  unsigned int v868;
  int v869;
  int v870;
  int v871;
  unsigned int v872;
  int v873;
  int v874;
  int v875;
  unsigned int v876;
  int v877;
  int v878;
  int v879;
  unsigned int v880;
  int v881;
  int v882;
  int v883;
  unsigned int v884;
  int v885;
  int v886;
  int v887;
  unsigned int v888;
  int v889;
  int v890;
  int v891;
  unsigned int v892;
  int v893;
  int v894;
  int v895;
  unsigned int v896;
  int v897;
  int v898;
  int v899;
  unsigned int v900;
  int v901;
  int v902;
  int v903;
  unsigned int v904;
  int v905;
  int v906;
  int v907;
  unsigned int v908;
  int v909;
  int v910;
  unsigned int v911;
  int v912;
  int v913;
  int v914;
  unsigned int v915;
  int v916;
  int v917;
  int v918;
  unsigned int v919;
  int v920;
  int v921;
  int v922;
  unsigned int v923;
  int v924;
  int v925;
  int v926;
  unsigned int v927;
  int v928;
  int v929;
  int v930;
  unsigned int v931;
  int v932;
  int v933;
  int v934;
  unsigned int v935;
  int v936;
  int v937;
  int v938;
  unsigned int v939;
  int v940;
  int v941;
  int v942;
  unsigned int v943;
  int v944;
  int v945;
  int v946;
  unsigned int v947;
  int v948;
  int v949;
  int v950;
  unsigned int v951;
  int v952;
  int v953;
  unsigned int v954;
  int v955;
  int v956;
  unsigned int v957;
  int v958;
  int v959;
  int v960;
  unsigned int v961;
  int v962;
  int v963;
  int v964;
  unsigned int v965;
  int v966;
  int v967;
  int v968;
  unsigned int v969;
  int v970;
  int v971;
  int v972;
  unsigned int v973;
  int v974;
  int v975;
  int v976;
  unsigned int v977;
  int v978;
  int v979;
  int v980;
  unsigned int v981;
  int v982;
  int v983;
  int v984;
  unsigned int v985;
  int v986;
  int v987;
  int v988;
  unsigned int v989;
  int v990;
  int v991;
  int v992;
  unsigned int v993;
  int v994;
  int v995;
  int v996;
  unsigned int v997;
  int v998;
  int v999;
  int v1000;
  unsigned int v1001;
  int v1002;
  int v1003;
  int v1004;
  unsigned int v1005;
  int v1006;
  int v1007;
  int v1008;
  unsigned int v1009;
  int v1010;
  int v1011;
  int v1012;
  unsigned int v1013;
  int v1014;
  int v1015;
  int v1016;
  unsigned int v1017;
  int v1018;
  int v1019;
  int v1020;
  unsigned int v1021;
  int v1022;
  int v1023;
  int v1024;
  unsigned int v1025;
  int v1026;
  int v1027;
  int v1028;
  unsigned int v1029;
  int v1030;
  int v1031;
  int v1032;
  unsigned int v1033;
  int v1034;
  int v1035;
  int v1036;
  unsigned int v1037;
  int v1038;
  int v1039;
  int v1040;
  unsigned int v1041;
  int v1042;
  int v1043;
  int v1044;
  unsigned int v1045;
  int v1046;
  int v1047;
  unsigned int v1048;
  int v1049;
  int v1050;
  int v1051;
  unsigned int v1052;
  int v1053;
  int v1054;
  int v1055;
  unsigned int v1056;
  int v1057;
  int v1058;
  int v1059;
  unsigned int v1060;
  int v1061;
  int v1062;
  int v1063;
  unsigned int v1064;
  int v1065;
  int v1066;
  unsigned int v1067;
  int v1068;
  int v1069;
  int v1070;
  unsigned int v1071;
  int v1072;
  int v1073;
  int v1074;
  unsigned int v1075;
  int v1076;
  int v1077;
  int v1078;
  unsigned int v1079;
  int v1080;
  int v1081;
  int v1082;
  unsigned int v1083;
  int v1084;
  int v1085;
  int v1086;
  unsigned int v1087;
  int v1088;
  int v1089;
  int v1090;
  unsigned int v1091;
  int v1092;
  int v1093;
  int v1094;
  unsigned int v1095;
  int v1096;
  int v1097;
  int v1098;
  unsigned int v1099;
  int v1100;
  int v1101;
  int v1102;
  unsigned int v1103;
  int v1104;
  int v1105;
  int v1106;
  unsigned int v1107;
  int v1108;
  int v1109;
  int v1110;
  unsigned int v1111;
  int v1112;
  int v1113;
  int v1114;
  unsigned int v1115;
  int v1116;
  int v1117;
  int v1118;
  unsigned int v1119;
  int v1120;
  int v1121;
  int v1122;
  unsigned int v1123;
  int v1124;
  int v1125;
  int v1126;
  unsigned int v1127;
  int v1128;
  int v1129;
  int v1130;
  unsigned int v1131;
  int v1132;
  int v1133;
  int v1134;
  unsigned int v1135;
  int v1136;
  int v1137;
  int v1138;
  unsigned int v1139;
  int v1140;
  int v1141;
  int v1142;
  google::protobuf::Arena *v1143;
  google::protobuf::Arena **v1144;
  unint64_t *v1145;
  unint64_t v1146;
  int v1147;
  google::protobuf::Arena *v1148;
  google::protobuf::Arena **v1149;
  unint64_t *v1150;
  unint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  google::protobuf::internal::RepeatedPtrFieldBase *v1158;

  v5 = (_DWORD *)((char *)this + 140);
  v6 = (CoreML::Specification::CategoricalDistributionLayerParams **)((char *)this + 128);
  v7 = (char *)this + 88;
  v8 = (char *)this + 64;
  v1158 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 40);
  v9 = (CoreML::Specification::NeuralNetworkLayer *)((char *)this + 16);
  v10 = (std::string **)((char *)this + 112);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                v11 = *(unsigned __int8 **)a2;
                v12 = *((_QWORD *)a2 + 1);
                if (*(_QWORD *)a2 >= v12)
                {
                  LODWORD(v14) = 0;
                }
                else
                {
                  v13 = v11 + 1;
                  v14 = *v11;
                  if ((char)*v11 >= 1)
                  {
                    *(_QWORD *)a2 = v13;
                    v15 = v14 | 0x100000000;
                    if ((v15 & 0x100000000) == 0)
                      goto LABEL_9;
                    goto LABEL_17;
                  }
                  if ((unint64_t)v13 < v12)
                  {
                    v16 = *v13;
                    if ((v14 & ~v16) >= 0x80)
                    {
                      *(_QWORD *)a2 = v11 + 2;
                      v15 = (v14 + (v16 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v14);
                v15 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v15 & 0x100000000) == 0)
                  goto LABEL_9;
LABEL_17:
                v19 = v15 >> 3;
                if (v15 >> 3 <= 0x360)
                  break;
                if (v15 >> 3 > 0x469)
                {
                  if (v15 >> 3 <= 0x4F5)
                  {
                    if (v15 >> 3 > 0x4AA)
                    {
                      if (v15 >> 3 > 0x4CD)
                      {
                        if (v15 >> 3 <= 0x4E6)
                        {
                          if (v19 == 1230)
                          {
                            if (v15 != 114)
                              goto LABEL_9;
                            if (*v5 == 1230)
                            {
                              v276 = *v6;
                            }
                            else
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1230;
                              v276 = (CoreML::Specification::CategoricalDistributionLayerParams *)operator new();
                              CoreML::Specification::CategoricalDistributionLayerParams::CategoricalDistributionLayerParams(v276);
                              *v6 = v276;
                            }
                            v495 = *(char **)a2;
                            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v495 < 0)
                            {
                              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (VarintSizeAsIntFallback < 0)
                                return 0;
                            }
                            else
                            {
                              VarintSizeAsIntFallback = *v495;
                              *(_QWORD *)a2 = v495 + 1;
                            }
                            v1098 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                            v1100 = *((_DWORD *)a2 + 13);
                            v291 = __OFSUB__(v1100--, 1);
                            *((_DWORD *)a2 + 13) = v1100;
                            if (v1100 < 0 != v291)
                              return 0;
                            v1101 = v1098;
                            result = CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(v276, (char **)a2, v1099);
                            if (!(_DWORD)result)
                              return result;
                            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1101))
                              return 0;
                          }
                          else
                          {
                            if (v19 != 1250 || v15 != 18)
                              goto LABEL_9;
                            if (*v5 == 1250)
                            {
                              v111 = *v6;
                            }
                            else
                            {
                              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                              *((_DWORD *)this + 35) = 1250;
                              v111 = (CoreML::Specification::ReduceL1LayerParams *)operator new();
                              CoreML::Specification::ReduceL1LayerParams::ReduceL1LayerParams(v111);
                              *v6 = v111;
                            }
                            v387 = *(char **)a2;
                            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v387 < 0)
                            {
                              v388 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                              if (v388 < 0)
                                return 0;
                            }
                            else
                            {
                              v388 = *v387;
                              *(_QWORD *)a2 = v387 + 1;
                            }
                            v887 = google::protobuf::io::CodedInputStream::PushLimit(a2, v388);
                            v889 = *((_DWORD *)a2 + 13);
                            v291 = __OFSUB__(v889--, 1);
                            *((_DWORD *)a2 + 13) = v889;
                            if (v889 < 0 != v291)
                              return 0;
                            v890 = v887;
                            result = CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(v111, a2, v888);
                            if (!(_DWORD)result)
                              return result;
                            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v890))
                              return 0;
                          }
                        }
                        else if (v19 == 1255)
                        {
                          if (v15 != 58)
                            goto LABEL_9;
                          if (*v5 == 1255)
                          {
                            v225 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1255;
                            v225 = (CoreML::Specification::ReduceL2LayerParams *)operator new();
                            CoreML::Specification::ReduceL2LayerParams::ReduceL2LayerParams(v225);
                            *v6 = v225;
                          }
                          v447 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v447 < 0)
                          {
                            v448 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v448 < 0)
                              return 0;
                          }
                          else
                          {
                            v448 = *v447;
                            *(_QWORD *)a2 = v447 + 1;
                          }
                          v1004 = google::protobuf::io::CodedInputStream::PushLimit(a2, v448);
                          v1006 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1006--, 1);
                          *((_DWORD *)a2 + 13) = v1006;
                          if (v1006 < 0 != v291)
                            return 0;
                          v1007 = v1004;
                          result = CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(v225, a2, v1005);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1007))
                            return 0;
                        }
                        else if (v19 == 1260)
                        {
                          if (v15 != 98)
                            goto LABEL_9;
                          if (*v5 == 1260)
                          {
                            v226 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1260;
                            v226 = (CoreML::Specification::ReduceMaxLayerParams *)operator new();
                            CoreML::Specification::ReduceMaxLayerParams::ReduceMaxLayerParams(v226);
                            *v6 = v226;
                          }
                          v449 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v449 < 0)
                          {
                            v450 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v450 < 0)
                              return 0;
                          }
                          else
                          {
                            v450 = *v449;
                            *(_QWORD *)a2 = v449 + 1;
                          }
                          v1008 = google::protobuf::io::CodedInputStream::PushLimit(a2, v450);
                          v1010 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1010--, 1);
                          *((_DWORD *)a2 + 13) = v1010;
                          if (v1010 < 0 != v291)
                            return 0;
                          v1011 = v1008;
                          result = CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(v226, a2, v1009);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1011))
                            return 0;
                        }
                        else
                        {
                          if (v19 != 1265 || v15 != 138)
                            goto LABEL_9;
                          if (*v5 == 1265)
                          {
                            v63 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1265;
                            v63 = (CoreML::Specification::ReduceMinLayerParams *)operator new();
                            CoreML::Specification::ReduceMinLayerParams::ReduceMinLayerParams(v63);
                            *v6 = v63;
                          }
                          v349 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v349 < 0)
                          {
                            v350 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v350 < 0)
                              return 0;
                          }
                          else
                          {
                            v350 = *v349;
                            *(_QWORD *)a2 = v349 + 1;
                          }
                          v813 = google::protobuf::io::CodedInputStream::PushLimit(a2, v350);
                          v815 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v815--, 1);
                          *((_DWORD *)a2 + 13) = v815;
                          if (v815 < 0 != v291)
                            return 0;
                          v816 = v813;
                          result = CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(v63, a2, v814);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v816))
                            return 0;
                        }
                      }
                      else if (v15 >> 3 <= 0x4B9)
                      {
                        if (v19 == 1195)
                        {
                          if (v15 != 90)
                            goto LABEL_9;
                          if (*v5 == 1195)
                          {
                            v257 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1195;
                            v257 = (CoreML::Specification::RandomUniformStaticLayerParams *)operator new();
                            CoreML::Specification::RandomUniformStaticLayerParams::RandomUniformStaticLayerParams(v257);
                            *v6 = v257;
                          }
                          v475 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v475 < 0)
                          {
                            v476 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v476 < 0)
                              return 0;
                          }
                          else
                          {
                            v476 = *v475;
                            *(_QWORD *)a2 = v475 + 1;
                          }
                          v1059 = google::protobuf::io::CodedInputStream::PushLimit(a2, v476);
                          v1061 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1061--, 1);
                          *((_DWORD *)a2 + 13) = v1061;
                          if (v1061 < 0 != v291)
                            return 0;
                          v1062 = v1059;
                          result = CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(v257, a2, v1060);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1062))
                            return 0;
                        }
                        else
                        {
                          if (v19 != 1200 || v15 != 130)
                            goto LABEL_9;
                          if (*v5 == 1200)
                          {
                            v90 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1200;
                            v90 = (CoreML::Specification::RandomUniformDynamicLayerParams *)operator new();
                            CoreML::Specification::RandomUniformDynamicLayerParams::RandomUniformDynamicLayerParams(v90);
                            *v6 = v90;
                          }
                          v369 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v369 < 0)
                          {
                            v370 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v370 < 0)
                              return 0;
                          }
                          else
                          {
                            v370 = *v369;
                            *(_QWORD *)a2 = v369 + 1;
                          }
                          v852 = google::protobuf::io::CodedInputStream::PushLimit(a2, v370);
                          v854 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v854--, 1);
                          *((_DWORD *)a2 + 13) = v854;
                          if (v854 < 0 != v291)
                            return 0;
                          v855 = v852;
                          result = CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(v90, (char **)a2, v853);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v855))
                            return 0;
                        }
                      }
                      else if (v19 == 1210)
                      {
                        if (v15 != 210)
                          goto LABEL_9;
                        if (*v5 == 1210)
                        {
                          v179 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1210;
                          v179 = (CoreML::Specification::RandomBernoulliLikeLayerParams *)operator new();
                          CoreML::Specification::RandomBernoulliLikeLayerParams::RandomBernoulliLikeLayerParams(v179);
                          *v6 = v179;
                        }
                        v415 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v415 < 0)
                        {
                          v416 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v416 < 0)
                            return 0;
                        }
                        else
                        {
                          v416 = *v415;
                          *(_QWORD *)a2 = v415 + 1;
                        }
                        v942 = google::protobuf::io::CodedInputStream::PushLimit(a2, v416);
                        v944 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v944--, 1);
                        *((_DWORD *)a2 + 13) = v944;
                        if (v944 < 0 != v291)
                          return 0;
                        v945 = v942;
                        result = CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(v179, (char **)a2, v943);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v945))
                          return 0;
                      }
                      else if (v19 == 1215)
                      {
                        if (v15 != 250)
                          goto LABEL_9;
                        if (*v5 == 1215)
                        {
                          v180 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1215;
                          v180 = (CoreML::Specification::RandomBernoulliStaticLayerParams *)operator new();
                          CoreML::Specification::RandomBernoulliStaticLayerParams::RandomBernoulliStaticLayerParams(v180);
                          *v6 = v180;
                        }
                        v417 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v417 < 0)
                        {
                          v418 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v418 < 0)
                            return 0;
                        }
                        else
                        {
                          v418 = *v417;
                          *(_QWORD *)a2 = v417 + 1;
                        }
                        v946 = google::protobuf::io::CodedInputStream::PushLimit(a2, v418);
                        v948 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v948--, 1);
                        *((_DWORD *)a2 + 13) = v948;
                        if (v948 < 0 != v291)
                          return 0;
                        v949 = v946;
                        result = CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(v180, a2, v947);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v949))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1220 || v15 != 34)
                          goto LABEL_9;
                        if (*v5 == 1220)
                        {
                          v46 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1220;
                          v46 = (CoreML::Specification::RandomBernoulliDynamicLayerParams *)operator new();
                          CoreML::Specification::RandomBernoulliDynamicLayerParams::RandomBernoulliDynamicLayerParams(v46);
                          *v6 = v46;
                        }
                        v327 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v327 < 0)
                        {
                          v328 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v328 < 0)
                            return 0;
                        }
                        else
                        {
                          v328 = *v327;
                          *(_QWORD *)a2 = v327 + 1;
                        }
                        v770 = google::protobuf::io::CodedInputStream::PushLimit(a2, v328);
                        v772 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v772--, 1);
                        *((_DWORD *)a2 + 13) = v772;
                        if (v772 < 0 != v291)
                          return 0;
                        v773 = v770;
                        result = CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(v46, (char **)a2, v771);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v773))
                          return 0;
                      }
                    }
                    else if (v15 >> 3 > 0x482)
                    {
                      if (v15 >> 3 <= 0x496)
                      {
                        if (v19 == 1155)
                        {
                          if (v15 != 26)
                            goto LABEL_9;
                          if (*v5 == 1155)
                          {
                            v268 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1155;
                            v268 = (CoreML::Specification::ConstantPaddingLayerParams *)operator new();
                            CoreML::Specification::ConstantPaddingLayerParams::ConstantPaddingLayerParams(v268);
                            *v6 = v268;
                          }
                          v485 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v485 < 0)
                          {
                            v486 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v486 < 0)
                              return 0;
                          }
                          else
                          {
                            v486 = *v485;
                            *(_QWORD *)a2 = v485 + 1;
                          }
                          v1078 = google::protobuf::io::CodedInputStream::PushLimit(a2, v486);
                          v1080 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1080--, 1);
                          *((_DWORD *)a2 + 13) = v1080;
                          if (v1080 < 0 != v291)
                            return 0;
                          v1081 = v1078;
                          result = CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(v268, a2, v1079);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1081))
                            return 0;
                        }
                        else
                        {
                          if (v19 != 1170 || v15 != 146)
                            goto LABEL_9;
                          if (*v5 == 1170)
                          {
                            v103 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1170;
                            v103 = (CoreML::Specification::RandomNormalLikeLayerParams *)operator new();
                            CoreML::Specification::RandomNormalLikeLayerParams::RandomNormalLikeLayerParams(v103);
                            *v6 = v103;
                          }
                          v377 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v377 < 0)
                          {
                            v378 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v378 < 0)
                              return 0;
                          }
                          else
                          {
                            v378 = *v377;
                            *(_QWORD *)a2 = v377 + 1;
                          }
                          v867 = google::protobuf::io::CodedInputStream::PushLimit(a2, v378);
                          v869 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v869--, 1);
                          *((_DWORD *)a2 + 13) = v869;
                          if (v869 < 0 != v291)
                            return 0;
                          v870 = v867;
                          result = CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(v103, (char **)a2, v868);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v870))
                            return 0;
                        }
                      }
                      else if (v19 == 1175)
                      {
                        if (v15 != 186)
                          goto LABEL_9;
                        if (*v5 == 1175)
                        {
                          v207 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1175;
                          v207 = (CoreML::Specification::RandomNormalStaticLayerParams *)operator new();
                          CoreML::Specification::RandomNormalStaticLayerParams::RandomNormalStaticLayerParams(v207);
                          *v6 = v207;
                        }
                        v429 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v429 < 0)
                        {
                          v430 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v430 < 0)
                            return 0;
                        }
                        else
                        {
                          v430 = *v429;
                          *(_QWORD *)a2 = v429 + 1;
                        }
                        v968 = google::protobuf::io::CodedInputStream::PushLimit(a2, v430);
                        v970 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v970--, 1);
                        *((_DWORD *)a2 + 13) = v970;
                        if (v970 < 0 != v291)
                          return 0;
                        v971 = v968;
                        result = CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(v207, a2, v969);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v971))
                          return 0;
                      }
                      else if (v19 == 1180)
                      {
                        if (v15 != 226)
                          goto LABEL_9;
                        if (*v5 == 1180)
                        {
                          v208 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1180;
                          v208 = (CoreML::Specification::RandomNormalDynamicLayerParams *)operator new();
                          CoreML::Specification::RandomNormalDynamicLayerParams::RandomNormalDynamicLayerParams(v208);
                          *v6 = v208;
                        }
                        v431 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v431 < 0)
                        {
                          v432 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v432 < 0)
                            return 0;
                        }
                        else
                        {
                          v432 = *v431;
                          *(_QWORD *)a2 = v431 + 1;
                        }
                        v972 = google::protobuf::io::CodedInputStream::PushLimit(a2, v432);
                        v974 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v974--, 1);
                        *((_DWORD *)a2 + 13) = v974;
                        if (v974 < 0 != v291)
                          return 0;
                        v975 = v972;
                        result = CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(v208, (char **)a2, v973);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v975))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1190 || v15 != 50)
                          goto LABEL_9;
                        if (*v5 == 1190)
                        {
                          v57 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1190;
                          v57 = (CoreML::Specification::RandomUniformLikeLayerParams *)operator new();
                          CoreML::Specification::RandomUniformLikeLayerParams::RandomUniformLikeLayerParams(v57);
                          *v6 = v57;
                        }
                        v337 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v337 < 0)
                        {
                          v338 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v338 < 0)
                            return 0;
                        }
                        else
                        {
                          v338 = *v337;
                          *(_QWORD *)a2 = v337 + 1;
                        }
                        v789 = google::protobuf::io::CodedInputStream::PushLimit(a2, v338);
                        v791 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v791--, 1);
                        *((_DWORD *)a2 + 13) = v791;
                        if (v791 < 0 != v291)
                          return 0;
                        v792 = v789;
                        result = CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(v57, (char **)a2, v790);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v792))
                          return 0;
                      }
                    }
                    else if (v15 >> 3 <= 0x473)
                    {
                      if (v19 == 1130)
                      {
                        if (v15 != 82)
                          goto LABEL_9;
                        if (*v5 == 1130)
                        {
                          v249 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1130;
                          v249 = (CoreML::Specification::FlattenTo2DLayerParams *)operator new();
                          CoreML::Specification::FlattenTo2DLayerParams::FlattenTo2DLayerParams(v249);
                          *v6 = v249;
                        }
                        v465 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v465 < 0)
                        {
                          v466 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v466 < 0)
                            return 0;
                        }
                        else
                        {
                          v466 = *v465;
                          *(_QWORD *)a2 = v465 + 1;
                        }
                        v1040 = google::protobuf::io::CodedInputStream::PushLimit(a2, v466);
                        v1042 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v1042--, 1);
                        *((_DWORD *)a2 + 13) = v1042;
                        if (v1042 < 0 != v291)
                          return 0;
                        v1043 = v1040;
                        result = CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(v249, (char **)a2, v1041);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1043))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1135 || v15 != 122)
                          goto LABEL_9;
                        if (*v5 != 1135)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1135;
                          v81 = (CoreML::Specification::ReshapeLikeLayerParams *)operator new();
                          CoreML::Specification::ReshapeLikeLayerParams::ReshapeLikeLayerParams(v81);
                          *v6 = v81;
                        }
                        v82 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v82 < 0)
                        {
                          v83 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v83 < 0)
                            return 0;
                        }
                        else
                        {
                          v83 = *v82;
                          *(_QWORD *)a2 = v82 + 1;
                        }
                        v603 = (CoreML::Specification::ReshapeLikeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v83);
                        v605 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v605--, 1);
                        *((_DWORD *)a2 + 13) = v605;
                        if (v605 < 0 != v291)
                          return 0;
                        v606 = (int)v603;
                        result = CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream(v603, (char **)a2, v604);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v606))
                          return 0;
                      }
                    }
                    else if (v19 == 1140)
                    {
                      if (v15 != 162)
                        goto LABEL_9;
                      if (*v5 == 1140)
                      {
                        v163 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1140;
                        v163 = (CoreML::Specification::ReshapeStaticLayerParams *)operator new();
                        CoreML::Specification::ReshapeStaticLayerParams::ReshapeStaticLayerParams(v163);
                        *v6 = v163;
                      }
                      v395 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v395 < 0)
                      {
                        v396 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v396 < 0)
                          return 0;
                      }
                      else
                      {
                        v396 = *v395;
                        *(_QWORD *)a2 = v395 + 1;
                      }
                      v903 = google::protobuf::io::CodedInputStream::PushLimit(a2, v396);
                      v905 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v905--, 1);
                      *((_DWORD *)a2 + 13) = v905;
                      if (v905 < 0 != v291)
                        return 0;
                      v906 = v903;
                      result = CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(v163, a2, v904);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v906))
                        return 0;
                    }
                    else if (v19 == 1145)
                    {
                      if (v15 != 202)
                        goto LABEL_9;
                      if (*v5 != 1145)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1145;
                        v164 = (CoreML::Specification::ReshapeDynamicLayerParams *)operator new();
                        CoreML::Specification::ReshapeDynamicLayerParams::ReshapeDynamicLayerParams(v164);
                        *v6 = v164;
                      }
                      v165 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v165 < 0)
                      {
                        v166 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v166 < 0)
                          return 0;
                      }
                      else
                      {
                        v166 = *v165;
                        *(_QWORD *)a2 = v165 + 1;
                      }
                      v655 = (CoreML::Specification::ReshapeDynamicLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v166);
                      v657 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v657--, 1);
                      *((_DWORD *)a2 + 13) = v657;
                      if (v657 < 0 != v291)
                        return 0;
                      v658 = (int)v655;
                      result = CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream(v655, (char **)a2, v656);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v658))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 1150 || v15 != 242)
                        goto LABEL_9;
                      if (*v5 == 1150)
                      {
                        v36 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1150;
                        v36 = (CoreML::Specification::RankPreservingReshapeLayerParams *)operator new();
                        CoreML::Specification::RankPreservingReshapeLayerParams::RankPreservingReshapeLayerParams(v36);
                        *v6 = v36;
                      }
                      v317 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v317 < 0)
                      {
                        v318 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v318 < 0)
                          return 0;
                      }
                      else
                      {
                        v318 = *v317;
                        *(_QWORD *)a2 = v317 + 1;
                      }
                      v750 = google::protobuf::io::CodedInputStream::PushLimit(a2, v318);
                      v752 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v752--, 1);
                      *((_DWORD *)a2 + 13) = v752;
                      if (v752 < 0 != v291)
                        return 0;
                      v753 = v750;
                      result = CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(v36, a2, v751);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v753))
                        return 0;
                    }
                  }
                  else if (v15 >> 3 <= 0x531)
                  {
                    if (v15 >> 3 > 0x50E)
                    {
                      if (v15 >> 3 <= 0x522)
                      {
                        if (v19 == 1295)
                        {
                          if (v15 != 122)
                            goto LABEL_9;
                          if (*v5 == 1295)
                          {
                            v271 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1295;
                            v271 = (CoreML::Specification::ReduceLogSumExpLayerParams *)operator new();
                            CoreML::Specification::ReduceLogSumExpLayerParams::ReduceLogSumExpLayerParams(v271);
                            *v6 = v271;
                          }
                          v491 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v491 < 0)
                          {
                            v492 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v492 < 0)
                              return 0;
                          }
                          else
                          {
                            v492 = *v491;
                            *(_QWORD *)a2 = v491 + 1;
                          }
                          v1090 = google::protobuf::io::CodedInputStream::PushLimit(a2, v492);
                          v1092 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1092--, 1);
                          *((_DWORD *)a2 + 13) = v1092;
                          if (v1092 < 0 != v291)
                            return 0;
                          v1093 = v1090;
                          result = CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(v271, a2, v1091);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1093))
                            return 0;
                        }
                        else
                        {
                          if (v19 != 1313 || v15 != 10)
                            goto LABEL_9;
                          if (*v5 != 1313)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1313;
                            v106 = (CoreML::Specification::WhereNonZeroLayerParams *)operator new();
                            CoreML::Specification::WhereNonZeroLayerParams::WhereNonZeroLayerParams(v106);
                            *v6 = v106;
                          }
                          v107 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v107 < 0)
                          {
                            v108 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v108 < 0)
                              return 0;
                          }
                          else
                          {
                            v108 = *v107;
                            *(_QWORD *)a2 = v107 + 1;
                          }
                          v619 = (CoreML::Specification::WhereNonZeroLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v108);
                          v621 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v621--, 1);
                          *((_DWORD *)a2 + 13) = v621;
                          if (v621 < 0 != v291)
                            return 0;
                          v622 = (int)v619;
                          result = CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(v619, (char **)a2, v620);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v622))
                            return 0;
                        }
                      }
                      else if (v19 == 1315)
                      {
                        if (v15 != 26)
                          goto LABEL_9;
                        if (*v5 == 1315)
                        {
                          v217 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1315;
                          v217 = (CoreML::Specification::MatrixBandPartLayerParams *)operator new();
                          CoreML::Specification::MatrixBandPartLayerParams::MatrixBandPartLayerParams(v217);
                          *v6 = v217;
                        }
                        v437 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v437 < 0)
                        {
                          v438 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v438 < 0)
                            return 0;
                        }
                        else
                        {
                          v438 = *v437;
                          *(_QWORD *)a2 = v437 + 1;
                        }
                        v984 = google::protobuf::io::CodedInputStream::PushLimit(a2, v438);
                        v986 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v986--, 1);
                        *((_DWORD *)a2 + 13) = v986;
                        if (v986 < 0 != v291)
                          return 0;
                        v987 = v984;
                        result = CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(v217, (char **)a2, v985);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v987))
                          return 0;
                      }
                      else if (v19 == 1320)
                      {
                        if (v15 != 66)
                          goto LABEL_9;
                        if (*v5 == 1320)
                        {
                          v218 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1320;
                          v218 = (CoreML::Specification::LowerTriangularLayerParams *)operator new();
                          CoreML::Specification::LowerTriangularLayerParams::LowerTriangularLayerParams(v218);
                          *v6 = v218;
                        }
                        v439 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v439 < 0)
                        {
                          v440 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v440 < 0)
                            return 0;
                        }
                        else
                        {
                          v440 = *v439;
                          *(_QWORD *)a2 = v439 + 1;
                        }
                        v988 = google::protobuf::io::CodedInputStream::PushLimit(a2, v440);
                        v990 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v990--, 1);
                        *((_DWORD *)a2 + 13) = v990;
                        if (v990 < 0 != v291)
                          return 0;
                        v991 = v988;
                        result = CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(v218, (char **)a2, v989);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v991))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1325 || v15 != 106)
                          goto LABEL_9;
                        if (*v5 == 1325)
                        {
                          v60 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1325;
                          v60 = (CoreML::Specification::UpperTriangularLayerParams *)operator new();
                          CoreML::Specification::UpperTriangularLayerParams::UpperTriangularLayerParams(v60);
                          *v6 = v60;
                        }
                        v343 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v343 < 0)
                        {
                          v344 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v344 < 0)
                            return 0;
                        }
                        else
                        {
                          v344 = *v343;
                          *(_QWORD *)a2 = v343 + 1;
                        }
                        v801 = google::protobuf::io::CodedInputStream::PushLimit(a2, v344);
                        v803 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v803--, 1);
                        *((_DWORD *)a2 + 13) = v803;
                        if (v803 < 0 != v291)
                          return 0;
                        v804 = v801;
                        result = CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(v60, (char **)a2, v802);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v804))
                          return 0;
                      }
                    }
                    else if (v15 >> 3 <= 0x4FF)
                    {
                      if (v19 == 1270)
                      {
                        if (v15 != 178)
                          goto LABEL_9;
                        if (*v5 == 1270)
                        {
                          v252 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1270;
                          v252 = (CoreML::Specification::ReduceSumLayerParams *)operator new();
                          CoreML::Specification::ReduceSumLayerParams::ReduceSumLayerParams(v252);
                          *v6 = v252;
                        }
                        v471 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v471 < 0)
                        {
                          v472 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v472 < 0)
                            return 0;
                        }
                        else
                        {
                          v472 = *v471;
                          *(_QWORD *)a2 = v471 + 1;
                        }
                        v1051 = google::protobuf::io::CodedInputStream::PushLimit(a2, v472);
                        v1053 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v1053--, 1);
                        *((_DWORD *)a2 + 13) = v1053;
                        if (v1053 < 0 != v291)
                          return 0;
                        v1054 = v1051;
                        result = CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(v252, a2, v1052);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1054))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1275 || v15 != 218)
                          goto LABEL_9;
                        if (*v5 == 1275)
                        {
                          v86 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1275;
                          v86 = (CoreML::Specification::ReduceProdLayerParams *)operator new();
                          CoreML::Specification::ReduceProdLayerParams::ReduceProdLayerParams(v86);
                          *v6 = v86;
                        }
                        v363 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v363 < 0)
                        {
                          v364 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v364 < 0)
                            return 0;
                        }
                        else
                        {
                          v364 = *v363;
                          *(_QWORD *)a2 = v363 + 1;
                        }
                        v840 = google::protobuf::io::CodedInputStream::PushLimit(a2, v364);
                        v842 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v842--, 1);
                        *((_DWORD *)a2 + 13) = v842;
                        if (v842 < 0 != v291)
                          return 0;
                        v843 = v840;
                        result = CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(v86, a2, v841);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v843))
                          return 0;
                      }
                    }
                    else if (v19 == 1280)
                    {
                      if (v15 != 2)
                        goto LABEL_9;
                      if (*v5 == 1280)
                      {
                        v173 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1280;
                        v173 = (CoreML::Specification::ReduceMeanLayerParams *)operator new();
                        CoreML::Specification::ReduceMeanLayerParams::ReduceMeanLayerParams(v173);
                        *v6 = v173;
                      }
                      v403 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v403 < 0)
                      {
                        v404 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v404 < 0)
                          return 0;
                      }
                      else
                      {
                        v404 = *v403;
                        *(_QWORD *)a2 = v403 + 1;
                      }
                      v918 = google::protobuf::io::CodedInputStream::PushLimit(a2, v404);
                      v920 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v920--, 1);
                      *((_DWORD *)a2 + 13) = v920;
                      if (v920 < 0 != v291)
                        return 0;
                      v921 = v918;
                      result = CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(v173, a2, v919);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v921))
                        return 0;
                    }
                    else if (v19 == 1285)
                    {
                      if (v15 != 42)
                        goto LABEL_9;
                      if (*v5 == 1285)
                      {
                        v174 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1285;
                        v174 = (CoreML::Specification::ReduceLogSumLayerParams *)operator new();
                        CoreML::Specification::ReduceLogSumLayerParams::ReduceLogSumLayerParams(v174);
                        *v6 = v174;
                      }
                      v405 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v405 < 0)
                      {
                        v406 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v406 < 0)
                          return 0;
                      }
                      else
                      {
                        v406 = *v405;
                        *(_QWORD *)a2 = v405 + 1;
                      }
                      v922 = google::protobuf::io::CodedInputStream::PushLimit(a2, v406);
                      v924 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v924--, 1);
                      *((_DWORD *)a2 + 13) = v924;
                      if (v924 < 0 != v291)
                        return 0;
                      v925 = v922;
                      result = CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(v174, a2, v923);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v925))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 1290 || v15 != 82)
                        goto LABEL_9;
                      if (*v5 == 1290)
                      {
                        v42 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1290;
                        v42 = (CoreML::Specification::ReduceSumSquareLayerParams *)operator new();
                        CoreML::Specification::ReduceSumSquareLayerParams::ReduceSumSquareLayerParams(v42);
                        *v6 = v42;
                      }
                      v321 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v321 < 0)
                      {
                        v322 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v322 < 0)
                          return 0;
                      }
                      else
                      {
                        v322 = *v321;
                        *(_QWORD *)a2 = v321 + 1;
                      }
                      v758 = google::protobuf::io::CodedInputStream::PushLimit(a2, v322);
                      v760 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v760--, 1);
                      *((_DWORD *)a2 + 13) = v760;
                      if (v760 < 0 != v291)
                        return 0;
                      v761 = v758;
                      result = CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(v42, a2, v759);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v761))
                        return 0;
                    }
                  }
                  else
                  {
                    if (v15 >> 3 > 0x5A9)
                    {
                      switch(v19)
                      {
                        case 0x5AFu:
                          if (v15 != 122)
                            goto LABEL_9;
                          if (*v5 == 1455)
                          {
                            v30 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1455;
                            v30 = (CoreML::Specification::CumSumLayerParams *)operator new();
                            CoreML::Specification::CumSumLayerParams::CumSumLayerParams(v30);
                            *v6 = v30;
                          }
                          v513 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v513 < 0)
                          {
                            v514 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v514 < 0)
                              return 0;
                          }
                          else
                          {
                            v514 = *v513;
                            *(_QWORD *)a2 = v513 + 1;
                          }
                          v1110 = google::protobuf::io::CodedInputStream::PushLimit(a2, v514);
                          v1112 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1112--, 1);
                          *((_DWORD *)a2 + 13) = v1112;
                          if (v1112 < 0 != v291)
                            return 0;
                          v1113 = v1110;
                          result = CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(v30, (char **)a2, v1111);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1113))
                            return 0;
                          continue;
                        case 0x5B0u:
                        case 0x5B1u:
                        case 0x5B2u:
                        case 0x5B3u:
                        case 0x5B6u:
                        case 0x5B7u:
                        case 0x5B8u:
                        case 0x5BBu:
                        case 0x5BCu:
                        case 0x5BDu:
                          goto LABEL_9;
                        case 0x5B4u:
                          if (v15 != 162)
                            goto LABEL_9;
                          if (*v5 == 1460)
                          {
                            v282 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1460;
                            v282 = (CoreML::Specification::ClampedReLULayerParams *)operator new();
                            CoreML::Specification::ClampedReLULayerParams::ClampedReLULayerParams(v282);
                            *v6 = v282;
                          }
                          v515 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v515 < 0)
                          {
                            v516 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v516 < 0)
                              return 0;
                          }
                          else
                          {
                            v516 = *v515;
                            *(_QWORD *)a2 = v515 + 1;
                          }
                          v1114 = google::protobuf::io::CodedInputStream::PushLimit(a2, v516);
                          v1116 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1116--, 1);
                          *((_DWORD *)a2 + 13) = v1116;
                          if (v1116 < 0 != v291)
                            return 0;
                          v1117 = v1114;
                          result = CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(v282, (char **)a2, v1115);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1117))
                            continue;
                          return 0;
                        case 0x5B5u:
                          if (v15 != 170)
                            goto LABEL_9;
                          if (*v5 == 1461)
                          {
                            v283 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1461;
                            v283 = (CoreML::Specification::ArgSortLayerParams *)operator new();
                            CoreML::Specification::ArgSortLayerParams::ArgSortLayerParams(v283);
                            *v6 = v283;
                          }
                          v517 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v517 < 0)
                          {
                            v518 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v518 < 0)
                              return 0;
                          }
                          else
                          {
                            v518 = *v517;
                            *(_QWORD *)a2 = v517 + 1;
                          }
                          v1118 = google::protobuf::io::CodedInputStream::PushLimit(a2, v518);
                          v1120 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1120--, 1);
                          *((_DWORD *)a2 + 13) = v1120;
                          if (v1120 < 0 != v291)
                            return 0;
                          v1121 = v1118;
                          result = CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(v283, (char **)a2, v1119);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1121))
                            continue;
                          return 0;
                        case 0x5B9u:
                          if (v15 != 202)
                            goto LABEL_9;
                          if (*v5 == 1465)
                          {
                            v284 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1465;
                            v284 = (CoreML::Specification::Pooling3DLayerParams *)operator new();
                            CoreML::Specification::Pooling3DLayerParams::Pooling3DLayerParams(v284);
                            *v6 = v284;
                          }
                          v519 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v519 < 0)
                          {
                            v520 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v520 < 0)
                              return 0;
                          }
                          else
                          {
                            v520 = *v519;
                            *(_QWORD *)a2 = v519 + 1;
                          }
                          v1122 = google::protobuf::io::CodedInputStream::PushLimit(a2, v520);
                          v1124 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1124--, 1);
                          *((_DWORD *)a2 + 13) = v1124;
                          if (v1124 < 0 != v291)
                            return 0;
                          v1125 = v1122;
                          result = CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(v284, (char **)a2, v1123);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1125))
                            continue;
                          return 0;
                        case 0x5BAu:
                          if (v15 != 210)
                            goto LABEL_9;
                          if (*v5 == 1466)
                          {
                            v285 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1466;
                            v285 = (CoreML::Specification::GlobalPooling3DLayerParams *)operator new();
                            CoreML::Specification::GlobalPooling3DLayerParams::GlobalPooling3DLayerParams(v285);
                            *v6 = v285;
                          }
                          v521 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v521 < 0)
                          {
                            v522 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v522 < 0)
                              return 0;
                          }
                          else
                          {
                            v522 = *v521;
                            *(_QWORD *)a2 = v521 + 1;
                          }
                          v1126 = google::protobuf::io::CodedInputStream::PushLimit(a2, v522);
                          v1128 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1128--, 1);
                          *((_DWORD *)a2 + 13) = v1128;
                          if (v1128 < 0 != v291)
                            return 0;
                          v1129 = v1126;
                          result = CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(v285, (char **)a2, v1127);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1129))
                            continue;
                          return 0;
                        case 0x5BEu:
                          if (v15 != 242)
                            goto LABEL_9;
                          if (*v5 == 1470)
                          {
                            v286 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1470;
                            v286 = (CoreML::Specification::SliceBySizeLayerParams *)operator new();
                            CoreML::Specification::SliceBySizeLayerParams::SliceBySizeLayerParams(v286);
                            *v6 = v286;
                          }
                          v523 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v523 < 0)
                          {
                            v524 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v524 < 0)
                              return 0;
                          }
                          else
                          {
                            v524 = *v523;
                            *(_QWORD *)a2 = v523 + 1;
                          }
                          v1130 = google::protobuf::io::CodedInputStream::PushLimit(a2, v524);
                          v1132 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1132--, 1);
                          *((_DWORD *)a2 + 13) = v1132;
                          if (v1132 < 0 != v291)
                            return 0;
                          v1133 = v1130;
                          result = CoreML::Specification::SliceBySizeLayerParams::MergePartialFromCodedStream(v286, (char **)a2, v1131);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1133))
                            continue;
                          return 0;
                        case 0x5BFu:
                          if (v15 != 250)
                            goto LABEL_9;
                          if (*v5 == 1471)
                          {
                            v287 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1471;
                            v287 = (CoreML::Specification::Convolution3DLayerParams *)operator new();
                            CoreML::Specification::Convolution3DLayerParams::Convolution3DLayerParams(v287);
                            *v6 = v287;
                          }
                          v525 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v525 < 0)
                          {
                            v526 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v526 < 0)
                              return 0;
                          }
                          else
                          {
                            v526 = *v525;
                            *(_QWORD *)a2 = v525 + 1;
                          }
                          v1134 = google::protobuf::io::CodedInputStream::PushLimit(a2, v526);
                          v1136 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1136--, 1);
                          *((_DWORD *)a2 + 13) = v1136;
                          if (v1136 < 0 != v291)
                            return 0;
                          v1137 = v1134;
                          result = CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(v287, a2, v1135);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1137))
                            continue;
                          return 0;
                        default:
                          if (v19 != 1450 || v15 != 82)
                            goto LABEL_9;
                          if (*v5 == 1450)
                          {
                            v281 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1450;
                            v281 = (CoreML::Specification::OneHotLayerParams *)operator new();
                            CoreML::Specification::OneHotLayerParams::OneHotLayerParams(v281);
                            *v6 = v281;
                          }
                          v527 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v527 < 0)
                          {
                            v528 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v528 < 0)
                              return 0;
                          }
                          else
                          {
                            v528 = *v527;
                            *(_QWORD *)a2 = v527 + 1;
                          }
                          v1138 = google::protobuf::io::CodedInputStream::PushLimit(a2, v528);
                          v1140 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1140--, 1);
                          *((_DWORD *)a2 + 13) = v1140;
                          if (v1140 < 0 != v291)
                            return 0;
                          v1141 = v1138;
                          result = CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(v281, (char **)a2, v1139);
                          if (!(_DWORD)result)
                            return result;
                          if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1141))
                            continue;
                          return 0;
                      }
                    }
                    if (v19 == 1330)
                    {
                      if (v15 != 146)
                        goto LABEL_9;
                      if (*v5 != 1330)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1330;
                        v115 = (CoreML::Specification::WhereBroadcastableLayerParams *)operator new();
                        CoreML::Specification::WhereBroadcastableLayerParams::WhereBroadcastableLayerParams(v115);
                        *v6 = v115;
                      }
                      v116 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v116 < 0)
                      {
                        v117 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v117 < 0)
                          return 0;
                      }
                      else
                      {
                        v117 = *v116;
                        *(_QWORD *)a2 = v116 + 1;
                      }
                      v497 = (CoreML::Specification::WhereBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v117);
                      v499 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v499--, 1);
                      *((_DWORD *)a2 + 13) = v499;
                      if (v499 < 0 != v291)
                        return 0;
                      v500 = (int)v497;
                      result = CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(v497, (char **)a2, v498);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v500))
                        return 0;
                    }
                    else if (v19 == 1350)
                    {
                      if (v15 != 50)
                        goto LABEL_9;
                      if (*v5 == 1350)
                      {
                        v118 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1350;
                        v118 = (CoreML::Specification::LayerNormalizationLayerParams *)operator new();
                        CoreML::Specification::LayerNormalizationLayerParams::LayerNormalizationLayerParams(v118);
                        *v6 = v118;
                      }
                      v295 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v295 < 0)
                      {
                        v296 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v296 < 0)
                          return 0;
                      }
                      else
                      {
                        v296 = *v295;
                        *(_QWORD *)a2 = v295 + 1;
                      }
                      v505 = google::protobuf::io::CodedInputStream::PushLimit(a2, v296);
                      v507 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v507--, 1);
                      *((_DWORD *)a2 + 13) = v507;
                      if (v507 < 0 != v291)
                        return 0;
                      v508 = v505;
                      result = CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(v118, a2, v506);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v508))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 1400 || v15 != 194)
                        goto LABEL_9;
                      if (*v5 == 1400)
                      {
                        v64 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1400;
                        v64 = (CoreML::Specification::NonMaximumSuppressionLayerParams *)operator new();
                        CoreML::Specification::NonMaximumSuppressionLayerParams::NonMaximumSuppressionLayerParams(v64);
                        *v6 = v64;
                      }
                      v293 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v293 < 0)
                      {
                        v294 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v294 < 0)
                          return 0;
                      }
                      else
                      {
                        v294 = *v293;
                        *(_QWORD *)a2 = v293 + 1;
                      }
                      v501 = google::protobuf::io::CodedInputStream::PushLimit(a2, v294);
                      v503 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v503--, 1);
                      *((_DWORD *)a2 + 13) = v503;
                      if (v503 < 0 != v291)
                        return 0;
                      v504 = v501;
                      result = CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(v64, (char **)a2, v502);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v504))
                        return 0;
                    }
                  }
                }
                else if (v15 >> 3 > 0x3D3)
                {
                  if (v15 >> 3 > 0x428)
                  {
                    if (v15 >> 3 > 0x44B)
                    {
                      if (v15 >> 3 <= 0x455)
                      {
                        if (v19 == 1100)
                        {
                          if (v15 != 98)
                            goto LABEL_9;
                          if (*v5 != 1100)
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1100;
                            v273 = (CoreML::Specification::BroadcastToLikeLayerParams *)operator new();
                            CoreML::Specification::BroadcastToLikeLayerParams::BroadcastToLikeLayerParams(v273);
                            *v6 = v273;
                          }
                          v274 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v274 < 0)
                          {
                            v275 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v275 < 0)
                              return 0;
                          }
                          else
                          {
                            v275 = *v274;
                            *(_QWORD *)a2 = v274 + 1;
                          }
                          v734 = (CoreML::Specification::BroadcastToLikeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v275);
                          v736 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v736--, 1);
                          *((_DWORD *)a2 + 13) = v736;
                          if (v736 < 0 != v291)
                            return 0;
                          v737 = (int)v734;
                          result = CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(v734, (char **)a2, v735);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v737))
                            return 0;
                        }
                        else
                        {
                          if (v19 != 1105 || v15 != 138)
                            goto LABEL_9;
                          if (*v5 == 1105)
                          {
                            v110 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 1105;
                            v110 = (CoreML::Specification::BroadcastToStaticLayerParams *)operator new();
                            CoreML::Specification::BroadcastToStaticLayerParams::BroadcastToStaticLayerParams(v110);
                            *v6 = v110;
                          }
                          v385 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v385 < 0)
                          {
                            v386 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v386 < 0)
                              return 0;
                          }
                          else
                          {
                            v386 = *v385;
                            *(_QWORD *)a2 = v385 + 1;
                          }
                          v883 = google::protobuf::io::CodedInputStream::PushLimit(a2, v386);
                          v885 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v885--, 1);
                          *((_DWORD *)a2 + 13) = v885;
                          if (v885 < 0 != v291)
                            return 0;
                          v886 = v883;
                          result = CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(v110, a2, v884);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v886))
                            return 0;
                        }
                      }
                      else if (v19 == 1110)
                      {
                        if (v15 != 178)
                          goto LABEL_9;
                        if (*v5 != 1110)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1110;
                          v221 = (CoreML::Specification::BroadcastToDynamicLayerParams *)operator new();
                          CoreML::Specification::BroadcastToDynamicLayerParams::BroadcastToDynamicLayerParams(v221);
                          *v6 = v221;
                        }
                        v222 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v222 < 0)
                        {
                          v223 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v223 < 0)
                            return 0;
                        }
                        else
                        {
                          v223 = *v222;
                          *(_QWORD *)a2 = v222 + 1;
                        }
                        v698 = (CoreML::Specification::BroadcastToDynamicLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v223);
                        v700 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v700--, 1);
                        *((_DWORD *)a2 + 13) = v700;
                        if (v700 < 0 != v291)
                          return 0;
                        v701 = (int)v698;
                        result = CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(v698, (char **)a2, v699);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v701))
                          return 0;
                      }
                      else if (v19 == 1120)
                      {
                        if (v15 != 2)
                          goto LABEL_9;
                        if (*v5 == 1120)
                        {
                          v224 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1120;
                          v224 = (CoreML::Specification::SqueezeLayerParams *)operator new();
                          CoreML::Specification::SqueezeLayerParams::SqueezeLayerParams(v224);
                          *v6 = v224;
                        }
                        v445 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v445 < 0)
                        {
                          v446 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v446 < 0)
                            return 0;
                        }
                        else
                        {
                          v446 = *v445;
                          *(_QWORD *)a2 = v445 + 1;
                        }
                        v1000 = google::protobuf::io::CodedInputStream::PushLimit(a2, v446);
                        v1002 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v1002--, 1);
                        *((_DWORD *)a2 + 13) = v1002;
                        if (v1002 < 0 != v291)
                          return 0;
                        v1003 = v1000;
                        result = CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(v224, a2, v1001);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1003))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1125 || v15 != 42)
                          goto LABEL_9;
                        if (*v5 == 1125)
                        {
                          v62 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1125;
                          v62 = (CoreML::Specification::ExpandDimsLayerParams *)operator new();
                          CoreML::Specification::ExpandDimsLayerParams::ExpandDimsLayerParams(v62);
                          *v6 = v62;
                        }
                        v347 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v347 < 0)
                        {
                          v348 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v348 < 0)
                            return 0;
                        }
                        else
                        {
                          v348 = *v347;
                          *(_QWORD *)a2 = v347 + 1;
                        }
                        v809 = google::protobuf::io::CodedInputStream::PushLimit(a2, v348);
                        v811 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v811--, 1);
                        *((_DWORD *)a2 + 13) = v811;
                        if (v811 < 0 != v291)
                          return 0;
                        v812 = v809;
                        result = CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(v62, a2, v810);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v812))
                          return 0;
                      }
                    }
                    else if (v15 >> 3 <= 0x437)
                    {
                      if (v19 == 1065)
                      {
                        if (v15 != 74)
                          goto LABEL_9;
                        if (*v5 != 1065)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1065;
                          v254 = (CoreML::Specification::GetShapeLayerParams *)operator new();
                          CoreML::Specification::GetShapeLayerParams::GetShapeLayerParams(v254);
                          *v6 = v254;
                        }
                        v255 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v255 < 0)
                        {
                          v256 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v256 < 0)
                            return 0;
                        }
                        else
                        {
                          v256 = *v255;
                          *(_QWORD *)a2 = v255 + 1;
                        }
                        v722 = (CoreML::Specification::GetShapeLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v256);
                        v724 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v724--, 1);
                        *((_DWORD *)a2 + 13) = v724;
                        if (v724 < 0 != v291)
                          return 0;
                        v725 = (int)v722;
                        result = CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream(v722, (char **)a2, v723);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v725))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1070 || v15 != 114)
                          goto LABEL_9;
                        if (*v5 == 1070)
                        {
                          v88 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1070;
                          v88 = (CoreML::Specification::LoadConstantNDLayerParams *)operator new();
                          CoreML::Specification::LoadConstantNDLayerParams::LoadConstantNDLayerParams(v88);
                          *v6 = v88;
                        }
                        v367 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v367 < 0)
                        {
                          v368 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v368 < 0)
                            return 0;
                        }
                        else
                        {
                          v368 = *v367;
                          *(_QWORD *)a2 = v367 + 1;
                        }
                        v848 = google::protobuf::io::CodedInputStream::PushLimit(a2, v368);
                        v850 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v850--, 1);
                        *((_DWORD *)a2 + 13) = v850;
                        if (v850 < 0 != v291)
                          return 0;
                        v851 = v848;
                        result = CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(v88, a2, v849);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v851))
                          return 0;
                      }
                    }
                    else if (v19 == 1080)
                    {
                      if (v15 != 194)
                        goto LABEL_9;
                      if (*v5 == 1080)
                      {
                        v177 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1080;
                        v177 = (CoreML::Specification::FillLikeLayerParams *)operator new();
                        CoreML::Specification::FillLikeLayerParams::FillLikeLayerParams(v177);
                        *v6 = v177;
                      }
                      v411 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v411 < 0)
                      {
                        v412 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v412 < 0)
                          return 0;
                      }
                      else
                      {
                        v412 = *v411;
                        *(_QWORD *)a2 = v411 + 1;
                      }
                      v934 = google::protobuf::io::CodedInputStream::PushLimit(a2, v412);
                      v936 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v936--, 1);
                      *((_DWORD *)a2 + 13) = v936;
                      if (v936 < 0 != v291)
                        return 0;
                      v937 = v934;
                      result = CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(v177, (char **)a2, v935);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v937))
                        return 0;
                    }
                    else if (v19 == 1085)
                    {
                      if (v15 != 234)
                        goto LABEL_9;
                      if (*v5 == 1085)
                      {
                        v178 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1085;
                        v178 = (CoreML::Specification::FillStaticLayerParams *)operator new();
                        CoreML::Specification::FillStaticLayerParams::FillStaticLayerParams(v178);
                        *v6 = v178;
                      }
                      v413 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v413 < 0)
                      {
                        v414 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v414 < 0)
                          return 0;
                      }
                      else
                      {
                        v414 = *v413;
                        *(_QWORD *)a2 = v413 + 1;
                      }
                      v938 = google::protobuf::io::CodedInputStream::PushLimit(a2, v414);
                      v940 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v940--, 1);
                      *((_DWORD *)a2 + 13) = v940;
                      if (v940 < 0 != v291)
                        return 0;
                      v941 = v938;
                      result = CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(v178, a2, v939);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v941))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 1090 || v15 != 18)
                        goto LABEL_9;
                      if (*v5 == 1090)
                      {
                        v44 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1090;
                        v44 = (CoreML::Specification::FillDynamicLayerParams *)operator new();
                        CoreML::Specification::FillDynamicLayerParams::FillDynamicLayerParams(v44);
                        *v6 = v44;
                      }
                      v325 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v325 < 0)
                      {
                        v326 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v326 < 0)
                          return 0;
                      }
                      else
                      {
                        v326 = *v325;
                        *(_QWORD *)a2 = v325 + 1;
                      }
                      v766 = google::protobuf::io::CodedInputStream::PushLimit(a2, v326);
                      v768 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v768--, 1);
                      *((_DWORD *)a2 + 13) = v768;
                      if (v768 < 0 != v291)
                        return 0;
                      v769 = v766;
                      result = CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(v44, (char **)a2, v767);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v769))
                        return 0;
                    }
                  }
                  else if (v15 >> 3 > 0x3F6)
                  {
                    if (v15 >> 3 <= 0x400)
                    {
                      if (v19 == 1015)
                      {
                        if (v15 != 186)
                          goto LABEL_9;
                        if (*v5 == 1015)
                        {
                          v264 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1015;
                          v264 = (CoreML::Specification::TopKLayerParams *)operator new();
                          CoreML::Specification::TopKLayerParams::TopKLayerParams(v264);
                          *v6 = v264;
                        }
                        v483 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v483 < 0)
                        {
                          v484 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v484 < 0)
                            return 0;
                        }
                        else
                        {
                          v484 = *v483;
                          *(_QWORD *)a2 = v483 + 1;
                        }
                        v1074 = google::protobuf::io::CodedInputStream::PushLimit(a2, v484);
                        v1076 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v1076--, 1);
                        *((_DWORD *)a2 + 13) = v1076;
                        if (v1076 < 0 != v291)
                          return 0;
                        v1077 = v1074;
                        result = CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(v264, (char **)a2, v1075);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1077))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 1020 || v15 != 226)
                          goto LABEL_9;
                        if (*v5 == 1020)
                        {
                          v99 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 1020;
                          v99 = (CoreML::Specification::ArgMinLayerParams *)operator new();
                          CoreML::Specification::ArgMinLayerParams::ArgMinLayerParams(v99);
                          *v6 = v99;
                        }
                        v375 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v375 < 0)
                        {
                          v376 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v376 < 0)
                            return 0;
                        }
                        else
                        {
                          v376 = *v375;
                          *(_QWORD *)a2 = v375 + 1;
                        }
                        v863 = google::protobuf::io::CodedInputStream::PushLimit(a2, v376);
                        v865 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v865--, 1);
                        *((_DWORD *)a2 + 13) = v865;
                        if (v865 < 0 != v291)
                          return 0;
                        v866 = v863;
                        result = CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(v99, (char **)a2, v864);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v866))
                          return 0;
                      }
                    }
                    else if (v19 == 1025)
                    {
                      if (v15 != 10)
                        goto LABEL_9;
                      if (*v5 == 1025)
                      {
                        v199 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1025;
                        v199 = (CoreML::Specification::ArgMaxLayerParams *)operator new();
                        CoreML::Specification::ArgMaxLayerParams::ArgMaxLayerParams(v199);
                        *v6 = v199;
                      }
                      v425 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v425 < 0)
                      {
                        v426 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v426 < 0)
                          return 0;
                      }
                      else
                      {
                        v426 = *v425;
                        *(_QWORD *)a2 = v425 + 1;
                      }
                      v960 = google::protobuf::io::CodedInputStream::PushLimit(a2, v426);
                      v962 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v962--, 1);
                      *((_DWORD *)a2 + 13) = v962;
                      if (v962 < 0 != v291)
                        return 0;
                      v963 = v960;
                      result = CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(v199, (char **)a2, v961);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v963))
                        return 0;
                    }
                    else if (v19 == 1040)
                    {
                      if (v15 != 130)
                        goto LABEL_9;
                      if (*v5 == 1040)
                      {
                        v200 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1040;
                        v200 = (CoreML::Specification::EmbeddingNDLayerParams *)operator new();
                        CoreML::Specification::EmbeddingNDLayerParams::EmbeddingNDLayerParams(v200);
                        *v6 = v200;
                      }
                      v427 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v427 < 0)
                      {
                        v428 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v428 < 0)
                          return 0;
                      }
                      else
                      {
                        v428 = *v427;
                        *(_QWORD *)a2 = v427 + 1;
                      }
                      v964 = google::protobuf::io::CodedInputStream::PushLimit(a2, v428);
                      v966 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v966--, 1);
                      *((_DWORD *)a2 + 13) = v966;
                      if (v966 < 0 != v291)
                        return 0;
                      v967 = v964;
                      result = CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(v200, a2, v965);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v967))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 1045 || v15 != 170)
                        goto LABEL_9;
                      if (*v5 == 1045)
                      {
                        v55 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 1045;
                        v55 = (CoreML::Specification::BatchedMatMulLayerParams *)operator new();
                        CoreML::Specification::BatchedMatMulLayerParams::BatchedMatMulLayerParams(v55);
                        *v6 = v55;
                      }
                      v333 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v333 < 0)
                      {
                        v334 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v334 < 0)
                          return 0;
                      }
                      else
                      {
                        v334 = *v333;
                        *(_QWORD *)a2 = v333 + 1;
                      }
                      v781 = google::protobuf::io::CodedInputStream::PushLimit(a2, v334);
                      v783 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v783--, 1);
                      *((_DWORD *)a2 + 13) = v783;
                      if (v783 < 0 != v291)
                        return 0;
                      v784 = v781;
                      result = CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(v55, a2, v782);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v784))
                        return 0;
                    }
                  }
                  else if (v15 >> 3 <= 0x3E2)
                  {
                    if (v19 == 980)
                    {
                      if (v15 != 162)
                        goto LABEL_9;
                      if (*v5 == 980)
                      {
                        v245 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 980;
                        v245 = (CoreML::Specification::ConcatNDLayerParams *)operator new();
                        CoreML::Specification::ConcatNDLayerParams::ConcatNDLayerParams(v245);
                        *v6 = v245;
                      }
                      v463 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v463 < 0)
                      {
                        v464 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v464 < 0)
                          return 0;
                      }
                      else
                      {
                        v464 = *v463;
                        *(_QWORD *)a2 = v463 + 1;
                      }
                      v1036 = google::protobuf::io::CodedInputStream::PushLimit(a2, v464);
                      v1038 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v1038--, 1);
                      *((_DWORD *)a2 + 13) = v1038;
                      if (v1038 < 0 != v291)
                        return 0;
                      v1039 = v1036;
                      result = CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(v245, (char **)a2, v1037);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1039))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 985 || v15 != 202)
                        goto LABEL_9;
                      if (*v5 == 985)
                      {
                        v77 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 985;
                        v77 = (CoreML::Specification::TransposeLayerParams *)operator new();
                        CoreML::Specification::TransposeLayerParams::TransposeLayerParams(v77);
                        *v6 = v77;
                      }
                      v357 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v357 < 0)
                      {
                        v358 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v358 < 0)
                          return 0;
                      }
                      else
                      {
                        v358 = *v357;
                        *(_QWORD *)a2 = v357 + 1;
                      }
                      v829 = google::protobuf::io::CodedInputStream::PushLimit(a2, v358);
                      v831 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v831--, 1);
                      *((_DWORD *)a2 + 13) = v831;
                      if (v831 < 0 != v291)
                        return 0;
                      v832 = v829;
                      result = CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(v77, a2, v830);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v832))
                        return 0;
                    }
                  }
                  else if (v19 == 995)
                  {
                    if (v15 != 26)
                      goto LABEL_9;
                    if (*v5 == 995)
                    {
                      v155 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 995;
                      v155 = (CoreML::Specification::SliceStaticLayerParams *)operator new();
                      CoreML::Specification::SliceStaticLayerParams::SliceStaticLayerParams(v155);
                      *v6 = v155;
                    }
                    v391 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v391 < 0)
                    {
                      v392 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v392 < 0)
                        return 0;
                    }
                    else
                    {
                      v392 = *v391;
                      *(_QWORD *)a2 = v391 + 1;
                    }
                    v895 = google::protobuf::io::CodedInputStream::PushLimit(a2, v392);
                    v897 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v897--, 1);
                    *((_DWORD *)a2 + 13) = v897;
                    if (v897 < 0 != v291)
                      return 0;
                    v898 = v895;
                    result = CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(v155, a2, v896);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v898))
                      return 0;
                  }
                  else if (v19 == 1000)
                  {
                    if (v15 != 66)
                      goto LABEL_9;
                    if (*v5 == 1000)
                    {
                      v156 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1000;
                      v156 = (CoreML::Specification::SliceDynamicLayerParams *)operator new();
                      CoreML::Specification::SliceDynamicLayerParams::SliceDynamicLayerParams(v156);
                      *v6 = v156;
                    }
                    v393 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v393 < 0)
                    {
                      v394 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v394 < 0)
                        return 0;
                    }
                    else
                    {
                      v394 = *v393;
                      *(_QWORD *)a2 = v393 + 1;
                    }
                    v899 = google::protobuf::io::CodedInputStream::PushLimit(a2, v394);
                    v901 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v901--, 1);
                    *((_DWORD *)a2 + 13) = v901;
                    if (v901 < 0 != v291)
                      return 0;
                    v902 = v899;
                    result = CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(v156, a2, v900);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v902))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 1005 || v15 != 106)
                      goto LABEL_9;
                    if (*v5 == 1005)
                    {
                      v32 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 1005;
                      v32 = (CoreML::Specification::SlidingWindowsLayerParams *)operator new();
                      CoreML::Specification::SlidingWindowsLayerParams::SlidingWindowsLayerParams(v32);
                      *v6 = v32;
                    }
                    v315 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v315 < 0)
                    {
                      v316 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v316 < 0)
                        return 0;
                    }
                    else
                    {
                      v316 = *v315;
                      *(_QWORD *)a2 = v315 + 1;
                    }
                    v746 = google::protobuf::io::CodedInputStream::PushLimit(a2, v316);
                    v748 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v748--, 1);
                    *((_DWORD *)a2 + 13) = v748;
                    if (v748 < 0 != v291)
                      return 0;
                    v749 = v746;
                    result = CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(v32, (char **)a2, v747);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v749))
                      return 0;
                  }
                }
                else if (v15 >> 3 > 0x3A1)
                {
                  if (v15 >> 3 <= 0x3B0)
                  {
                    if (v19 == 930)
                    {
                      if (v15 != 18)
                        goto LABEL_9;
                      if (*v5 == 930)
                      {
                        v230 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 930;
                        v230 = (CoreML::Specification::GatherLayerParams *)operator new();
                        CoreML::Specification::GatherLayerParams::GatherLayerParams(v230);
                        *v6 = v230;
                      }
                      v451 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v451 < 0)
                      {
                        v452 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v452 < 0)
                          return 0;
                      }
                      else
                      {
                        v452 = *v451;
                        *(_QWORD *)a2 = v451 + 1;
                      }
                      v1012 = google::protobuf::io::CodedInputStream::PushLimit(a2, v452);
                      v1014 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v1014--, 1);
                      *((_DWORD *)a2 + 13) = v1014;
                      if (v1014 < 0 != v291)
                        return 0;
                      v1015 = v1012;
                      result = CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(v230, (char **)a2, v1013);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1015))
                        return 0;
                    }
                    else if (v19 == 935)
                    {
                      if (v15 != 58)
                        goto LABEL_9;
                      if (*v5 == 935)
                      {
                        v231 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 935;
                        v231 = (CoreML::Specification::ScatterLayerParams *)operator new();
                        CoreML::Specification::ScatterLayerParams::ScatterLayerParams(v231);
                        *v6 = v231;
                      }
                      v453 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v453 < 0)
                      {
                        v454 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v454 < 0)
                          return 0;
                      }
                      else
                      {
                        v454 = *v453;
                        *(_QWORD *)a2 = v453 + 1;
                      }
                      v1016 = google::protobuf::io::CodedInputStream::PushLimit(a2, v454);
                      v1018 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v1018--, 1);
                      *((_DWORD *)a2 + 13) = v1018;
                      if (v1018 < 0 != v291)
                        return 0;
                      v1019 = v1016;
                      result = CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(v231, (char **)a2, v1017);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1019))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 940 || v15 != 98)
                        goto LABEL_9;
                      if (*v5 != 940)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 940;
                        v68 = (CoreML::Specification::GatherNDLayerParams *)operator new();
                        CoreML::Specification::GatherNDLayerParams::GatherNDLayerParams(v68);
                        *v6 = v68;
                      }
                      v69 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v69 < 0)
                      {
                        v70 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v70 < 0)
                          return 0;
                      }
                      else
                      {
                        v70 = *v69;
                        *(_QWORD *)a2 = v69 + 1;
                      }
                      v591 = (CoreML::Specification::GatherNDLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v70);
                      v593 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v593--, 1);
                      *((_DWORD *)a2 + 13) = v593;
                      if (v593 < 0 != v291)
                        return 0;
                      v594 = (int)v591;
                      result = CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(v591, (char **)a2, v592);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v594))
                        return 0;
                    }
                  }
                  else
                  {
                    if (v15 >> 3 <= 0x3BF)
                    {
                      switch(v19)
                      {
                        case 0x3B1u:
                          if (v15 != 138)
                            goto LABEL_9;
                          if (*v5 == 945)
                          {
                            v38 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 945;
                            v38 = (CoreML::Specification::ScatterNDLayerParams *)operator new();
                            CoreML::Specification::ScatterNDLayerParams::ScatterNDLayerParams(v38);
                            *v6 = v38;
                          }
                          v305 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v305 < 0)
                          {
                            v306 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v306 < 0)
                              return 0;
                          }
                          else
                          {
                            v306 = *v305;
                            *(_QWORD *)a2 = v305 + 1;
                          }
                          v546 = google::protobuf::io::CodedInputStream::PushLimit(a2, v306);
                          v548 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v548--, 1);
                          *((_DWORD *)a2 + 13) = v548;
                          if (v548 < 0 != v291)
                            return 0;
                          v549 = v546;
                          result = CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(v38, (char **)a2, v547);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v549))
                            return 0;
                          continue;
                        case 0x3B6u:
                          if (v15 != 178)
                            goto LABEL_9;
                          if (*v5 == 950)
                          {
                            v136 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 950;
                            v136 = (CoreML::Specification::SoftmaxNDLayerParams *)operator new();
                            CoreML::Specification::SoftmaxNDLayerParams::SoftmaxNDLayerParams(v136);
                            *v6 = v136;
                          }
                          v307 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v307 < 0)
                          {
                            v308 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v308 < 0)
                              return 0;
                          }
                          else
                          {
                            v308 = *v307;
                            *(_QWORD *)a2 = v307 + 1;
                          }
                          v550 = google::protobuf::io::CodedInputStream::PushLimit(a2, v308);
                          v552 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v552--, 1);
                          *((_DWORD *)a2 + 13) = v552;
                          if (v552 < 0 != v291)
                            return 0;
                          v553 = v550;
                          result = CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(v136, (char **)a2, v551);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v553))
                            return 0;
                          continue;
                        case 0x3B8u:
                          if (v15 != 194)
                            goto LABEL_9;
                          if (*v5 == 952)
                          {
                            v137 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 952;
                            v137 = (CoreML::Specification::GatherAlongAxisLayerParams *)operator new();
                            CoreML::Specification::GatherAlongAxisLayerParams::GatherAlongAxisLayerParams(v137);
                            *v6 = v137;
                          }
                          v309 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v309 < 0)
                          {
                            v310 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v310 < 0)
                              return 0;
                          }
                          else
                          {
                            v310 = *v309;
                            *(_QWORD *)a2 = v309 + 1;
                          }
                          v554 = google::protobuf::io::CodedInputStream::PushLimit(a2, v310);
                          v556 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v556--, 1);
                          *((_DWORD *)a2 + 13) = v556;
                          if (v556 < 0 != v291)
                            return 0;
                          v557 = v554;
                          result = CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(v137, (char **)a2, v555);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v557))
                            return 0;
                          continue;
                        case 0x3BAu:
                          if (v15 != 210)
                            goto LABEL_9;
                          if (*v5 == 954)
                          {
                            v138 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 954;
                            v138 = (CoreML::Specification::ScatterAlongAxisLayerParams *)operator new();
                            CoreML::Specification::ScatterAlongAxisLayerParams::ScatterAlongAxisLayerParams(v138);
                            *v6 = v138;
                          }
                          v311 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v311 < 0)
                          {
                            v312 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v312 < 0)
                              return 0;
                          }
                          else
                          {
                            v312 = *v311;
                            *(_QWORD *)a2 = v311 + 1;
                          }
                          v558 = google::protobuf::io::CodedInputStream::PushLimit(a2, v312);
                          v560 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v560--, 1);
                          *((_DWORD *)a2 + 13) = v560;
                          if (v560 < 0 != v291)
                            return 0;
                          v561 = v558;
                          result = CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(v138, (char **)a2, v559);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v561))
                            return 0;
                          continue;
                        default:
                          goto LABEL_9;
                      }
                    }
                    if (v19 == 960)
                    {
                      if (v15 != 2)
                        goto LABEL_9;
                      if (*v5 == 960)
                      {
                        v242 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 960;
                        v242 = (CoreML::Specification::ReverseLayerParams *)operator new();
                        CoreML::Specification::ReverseLayerParams::ReverseLayerParams(v242);
                        *v6 = v242;
                      }
                      v457 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v457 < 0)
                      {
                        v458 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v458 < 0)
                          return 0;
                      }
                      else
                      {
                        v458 = *v457;
                        *(_QWORD *)a2 = v457 + 1;
                      }
                      v1024 = google::protobuf::io::CodedInputStream::PushLimit(a2, v458);
                      v1026 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v1026--, 1);
                      *((_DWORD *)a2 + 13) = v1026;
                      if (v1026 < 0 != v291)
                        return 0;
                      v1027 = v1024;
                      result = CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(v242, a2, v1025);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1027))
                        return 0;
                    }
                    else if (v19 == 965)
                    {
                      if (v15 != 42)
                        goto LABEL_9;
                      if (*v5 == 965)
                      {
                        v243 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 965;
                        v243 = (CoreML::Specification::ReverseSeqLayerParams *)operator new();
                        CoreML::Specification::ReverseSeqLayerParams::ReverseSeqLayerParams(v243);
                        *v6 = v243;
                      }
                      v459 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v459 < 0)
                      {
                        v460 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v460 < 0)
                          return 0;
                      }
                      else
                      {
                        v460 = *v459;
                        *(_QWORD *)a2 = v459 + 1;
                      }
                      v1028 = google::protobuf::io::CodedInputStream::PushLimit(a2, v460);
                      v1030 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v1030--, 1);
                      *((_DWORD *)a2 + 13) = v1030;
                      if (v1030 < 0 != v291)
                        return 0;
                      v1031 = v1028;
                      result = CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(v243, (char **)a2, v1029);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1031))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 975 || v15 != 122)
                        goto LABEL_9;
                      if (*v5 == 975)
                      {
                        v75 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 975;
                        v75 = (CoreML::Specification::SplitNDLayerParams *)operator new();
                        CoreML::Specification::SplitNDLayerParams::SplitNDLayerParams(v75);
                        *v6 = v75;
                      }
                      v353 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v353 < 0)
                      {
                        v354 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v354 < 0)
                          return 0;
                      }
                      else
                      {
                        v354 = *v353;
                        *(_QWORD *)a2 = v353 + 1;
                      }
                      v821 = google::protobuf::io::CodedInputStream::PushLimit(a2, v354);
                      v823 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v823--, 1);
                      *((_DWORD *)a2 + 13) = v823;
                      if (v823 < 0 != v291)
                        return 0;
                      v824 = v821;
                      result = CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(v75, a2, v822);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v824))
                        return 0;
                    }
                  }
                }
                else if (v15 >> 3 <= 0x379)
                {
                  if (v15 >> 3 <= 0x36A)
                  {
                    if (v19 == 865)
                    {
                      if (v15 != 10)
                        goto LABEL_9;
                      if (*v5 != 865)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 865;
                        v259 = (CoreML::Specification::ModBroadcastableLayerParams *)operator new();
                        CoreML::Specification::ModBroadcastableLayerParams::ModBroadcastableLayerParams(v259);
                        *v6 = v259;
                      }
                      v260 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v260 < 0)
                      {
                        v261 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v261 < 0)
                          return 0;
                      }
                      else
                      {
                        v261 = *v260;
                        *(_QWORD *)a2 = v260 + 1;
                      }
                      v726 = (CoreML::Specification::ModBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v261);
                      v728 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v728--, 1);
                      *((_DWORD *)a2 + 13) = v728;
                      if (v728 < 0 != v291)
                        return 0;
                      v729 = (int)v726;
                      result = CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(v726, (char **)a2, v727);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v729))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 870 || v15 != 50)
                        goto LABEL_9;
                      if (*v5 != 870)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 870;
                        v92 = (CoreML::Specification::MinBroadcastableLayerParams *)operator new();
                        CoreML::Specification::MinBroadcastableLayerParams::MinBroadcastableLayerParams(v92);
                        *v6 = v92;
                      }
                      v93 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v93 < 0)
                      {
                        v94 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v94 < 0)
                          return 0;
                      }
                      else
                      {
                        v94 = *v93;
                        *(_QWORD *)a2 = v93 + 1;
                      }
                      v607 = (CoreML::Specification::MinBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v94);
                      v609 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v609--, 1);
                      *((_DWORD *)a2 + 13) = v609;
                      if (v609 < 0 != v291)
                        return 0;
                      v610 = (int)v607;
                      result = CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(v607, (char **)a2, v608);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v610))
                        return 0;
                    }
                  }
                  else if (v19 == 875)
                  {
                    if (v15 != 90)
                      goto LABEL_9;
                    if (*v5 != 875)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 875;
                      v183 = (CoreML::Specification::MaxBroadcastableLayerParams *)operator new();
                      CoreML::Specification::MaxBroadcastableLayerParams::MaxBroadcastableLayerParams(v183);
                      *v6 = v183;
                    }
                    v184 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v184 < 0)
                    {
                      v185 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v185 < 0)
                        return 0;
                    }
                    else
                    {
                      v185 = *v184;
                      *(_QWORD *)a2 = v184 + 1;
                    }
                    v662 = (CoreML::Specification::MaxBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v185);
                    v664 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v664--, 1);
                    *((_DWORD *)a2 + 13) = v664;
                    if (v664 < 0 != v291)
                      return 0;
                    v665 = (int)v662;
                    result = CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(v662, (char **)a2, v663);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v665))
                      return 0;
                  }
                  else if (v19 == 880)
                  {
                    if (v15 != 130)
                      goto LABEL_9;
                    if (*v5 != 880)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 880;
                      v186 = (CoreML::Specification::AddBroadcastableLayerParams *)operator new();
                      CoreML::Specification::AddBroadcastableLayerParams::AddBroadcastableLayerParams(v186);
                      *v6 = v186;
                    }
                    v187 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v187 < 0)
                    {
                      v188 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v188 < 0)
                        return 0;
                    }
                    else
                    {
                      v188 = *v187;
                      *(_QWORD *)a2 = v187 + 1;
                    }
                    v666 = (CoreML::Specification::AddBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v188);
                    v668 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v668--, 1);
                    *((_DWORD *)a2 + 13) = v668;
                    if (v668 < 0 != v291)
                      return 0;
                    v669 = (int)v666;
                    result = CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(v666, (char **)a2, v667);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v669))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 885 || v15 != 170)
                      goto LABEL_9;
                    if (*v5 != 885)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 885;
                      v48 = (CoreML::Specification::PowBroadcastableLayerParams *)operator new();
                      CoreML::Specification::PowBroadcastableLayerParams::PowBroadcastableLayerParams(v48);
                      *v6 = v48;
                    }
                    v49 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v49 < 0)
                    {
                      v50 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v50 < 0)
                        return 0;
                    }
                    else
                    {
                      v50 = *v49;
                      *(_QWORD *)a2 = v49 + 1;
                    }
                    v579 = (CoreML::Specification::PowBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v50);
                    v581 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v581--, 1);
                    *((_DWORD *)a2 + 13) = v581;
                    if (v581 < 0 != v291)
                      return 0;
                    v582 = (int)v579;
                    result = CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(v579, (char **)a2, v580);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v582))
                      return 0;
                  }
                }
                else if (v15 >> 3 > 0x388)
                {
                  if (v19 == 905)
                  {
                    if (v15 != 74)
                      goto LABEL_9;
                    if (*v5 != 905)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 905;
                      v232 = (CoreML::Specification::SubtractBroadcastableLayerParams *)operator new();
                      CoreML::Specification::SubtractBroadcastableLayerParams::SubtractBroadcastableLayerParams(v232);
                      *v6 = v232;
                    }
                    v233 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v233 < 0)
                    {
                      v234 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v234 < 0)
                        return 0;
                    }
                    else
                    {
                      v234 = *v233;
                      *(_QWORD *)a2 = v233 + 1;
                    }
                    v706 = (CoreML::Specification::SubtractBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v234);
                    v708 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v708--, 1);
                    *((_DWORD *)a2 + 13) = v708;
                    if (v708 < 0 != v291)
                      return 0;
                    v709 = (int)v706;
                    result = CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(v706, (char **)a2, v707);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v709))
                      return 0;
                  }
                  else if (v19 == 920)
                  {
                    if (v15 != 194)
                      goto LABEL_9;
                    if (*v5 == 920)
                    {
                      v235 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 920;
                      v235 = (CoreML::Specification::TileLayerParams *)operator new();
                      CoreML::Specification::TileLayerParams::TileLayerParams(v235);
                      *v6 = v235;
                    }
                    v455 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v455 < 0)
                    {
                      v456 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v456 < 0)
                        return 0;
                    }
                    else
                    {
                      v456 = *v455;
                      *(_QWORD *)a2 = v455 + 1;
                    }
                    v1020 = google::protobuf::io::CodedInputStream::PushLimit(a2, v456);
                    v1022 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v1022--, 1);
                    *((_DWORD *)a2 + 13) = v1022;
                    if (v1022 < 0 != v291)
                      return 0;
                    v1023 = v1020;
                    result = CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(v235, a2, v1021);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1023))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 925 || v15 != 234)
                      goto LABEL_9;
                    if (*v5 == 925)
                    {
                      v71 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 925;
                      v71 = (CoreML::Specification::StackLayerParams *)operator new();
                      CoreML::Specification::StackLayerParams::StackLayerParams(v71);
                      *v6 = v71;
                    }
                    v351 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v351 < 0)
                    {
                      v352 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v352 < 0)
                        return 0;
                    }
                    else
                    {
                      v352 = *v351;
                      *(_QWORD *)a2 = v351 + 1;
                    }
                    v817 = google::protobuf::io::CodedInputStream::PushLimit(a2, v352);
                    v819 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v819--, 1);
                    *((_DWORD *)a2 + 13) = v819;
                    if (v819 < 0 != v291)
                      return 0;
                    v820 = v817;
                    result = CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(v71, (char **)a2, v818);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v820))
                      return 0;
                  }
                }
                else if (v19 == 890)
                {
                  if (v15 != 210)
                    goto LABEL_9;
                  if (*v5 != 890)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 890;
                    v139 = (CoreML::Specification::DivideBroadcastableLayerParams *)operator new();
                    CoreML::Specification::DivideBroadcastableLayerParams::DivideBroadcastableLayerParams(v139);
                    *v6 = v139;
                  }
                  v140 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v140 < 0)
                  {
                    v141 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v141 < 0)
                      return 0;
                  }
                  else
                  {
                    v141 = *v140;
                    *(_QWORD *)a2 = v140 + 1;
                  }
                  v627 = (CoreML::Specification::DivideBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v141);
                  v629 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v629--, 1);
                  *((_DWORD *)a2 + 13) = v629;
                  if (v629 < 0 != v291)
                    return 0;
                  v630 = (int)v627;
                  result = CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(v627, (char **)a2, v628);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v630))
                    return 0;
                }
                else if (v19 == 895)
                {
                  if (v15 != 250)
                    goto LABEL_9;
                  if (*v5 != 895)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 895;
                    v142 = (CoreML::Specification::FloorDivBroadcastableLayerParams *)operator new();
                    CoreML::Specification::FloorDivBroadcastableLayerParams::FloorDivBroadcastableLayerParams(v142);
                    *v6 = v142;
                  }
                  v143 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v143 < 0)
                  {
                    v144 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v144 < 0)
                      return 0;
                  }
                  else
                  {
                    v144 = *v143;
                    *(_QWORD *)a2 = v143 + 1;
                  }
                  v631 = (CoreML::Specification::FloorDivBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v144);
                  v633 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v633--, 1);
                  *((_DWORD *)a2 + 13) = v633;
                  if (v633 < 0 != v291)
                    return 0;
                  v634 = (int)v631;
                  result = CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(v631, (char **)a2, v632);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v634))
                    return 0;
                }
                else
                {
                  if (v19 != 900 || v15 != 34)
                    goto LABEL_9;
                  if (*v5 != 900)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 900;
                    v24 = (CoreML::Specification::MultiplyBroadcastableLayerParams *)operator new();
                    CoreML::Specification::MultiplyBroadcastableLayerParams::MultiplyBroadcastableLayerParams(v24);
                    *v6 = v24;
                  }
                  v25 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v25 < 0)
                  {
                    v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v26 < 0)
                      return 0;
                  }
                  else
                  {
                    v26 = *v25;
                    *(_QWORD *)a2 = v25 + 1;
                  }
                  v563 = (CoreML::Specification::MultiplyBroadcastableLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
                  v565 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v565--, 1);
                  *((_DWORD *)a2 + 13) = v565;
                  if (v565 < 0 != v291)
                    return 0;
                  v566 = (int)v563;
                  result = CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(v563, (char **)a2, v564);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v566))
                    return 0;
                }
              }
              if (v15 >> 3 <= 0x199)
                break;
              if (v15 >> 3 > 0x2DE)
              {
                if (v15 >> 3 > 0x32E)
                {
                  if (v15 >> 3 > 0x347)
                  {
                    if (v15 >> 3 > 0x351)
                    {
                      if (v19 == 850)
                      {
                        if (v15 != 146)
                          goto LABEL_9;
                        if (*v5 != 850)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 850;
                          v277 = (CoreML::Specification::LogicalNotLayerParams *)operator new();
                          CoreML::Specification::LogicalNotLayerParams::LogicalNotLayerParams(v277);
                          *v6 = v277;
                        }
                        v278 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v278 < 0)
                        {
                          v279 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v279 < 0)
                            return 0;
                        }
                        else
                        {
                          v279 = *v278;
                          *(_QWORD *)a2 = v278 + 1;
                        }
                        v738 = (CoreML::Specification::LogicalNotLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v279);
                        v740 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v740--, 1);
                        *((_DWORD *)a2 + 13) = v740;
                        if (v740 < 0 != v291)
                          return 0;
                        v741 = (int)v738;
                        result = CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(v738, (char **)a2, v739);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v741))
                          return 0;
                      }
                      else
                      {
                        if (v19 != 855 || v15 != 186)
                          goto LABEL_9;
                        if (*v5 != 855)
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 855;
                          v112 = (CoreML::Specification::LogicalAndLayerParams *)operator new();
                          CoreML::Specification::LogicalAndLayerParams::LogicalAndLayerParams(v112);
                          *v6 = v112;
                        }
                        v113 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v113 < 0)
                        {
                          v114 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v114 < 0)
                            return 0;
                        }
                        else
                        {
                          v114 = *v113;
                          *(_QWORD *)a2 = v113 + 1;
                        }
                        v623 = (CoreML::Specification::LogicalAndLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v114);
                        v625 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v625--, 1);
                        *((_DWORD *)a2 + 13) = v625;
                        if (v625 < 0 != v291)
                          return 0;
                        v626 = (int)v623;
                        result = CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(v623, (char **)a2, v624);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v626))
                          return 0;
                      }
                    }
                    else if (v19 == 840)
                    {
                      if (v15 != 66)
                        goto LABEL_9;
                      if (*v5 != 840)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 840;
                        v227 = (CoreML::Specification::LogicalOrLayerParams *)operator new();
                        CoreML::Specification::LogicalOrLayerParams::LogicalOrLayerParams(v227);
                        *v6 = v227;
                      }
                      v228 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v228 < 0)
                      {
                        v229 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v229 < 0)
                          return 0;
                      }
                      else
                      {
                        v229 = *v228;
                        *(_QWORD *)a2 = v228 + 1;
                      }
                      v702 = (CoreML::Specification::LogicalOrLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v229);
                      v704 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v704--, 1);
                      *((_DWORD *)a2 + 13) = v704;
                      if (v704 < 0 != v291)
                        return 0;
                      v705 = (int)v702;
                      result = CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(v702, (char **)a2, v703);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v705))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 845 || v15 != 106)
                        goto LABEL_9;
                      if (*v5 != 845)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 845;
                        v65 = (CoreML::Specification::LogicalXorLayerParams *)operator new();
                        CoreML::Specification::LogicalXorLayerParams::LogicalXorLayerParams(v65);
                        *v6 = v65;
                      }
                      v66 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v66 < 0)
                      {
                        v67 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v67 < 0)
                          return 0;
                      }
                      else
                      {
                        v67 = *v66;
                        *(_QWORD *)a2 = v66 + 1;
                      }
                      v587 = (CoreML::Specification::LogicalXorLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v67);
                      v589 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v589--, 1);
                      *((_DWORD *)a2 + 13) = v589;
                      if (v589 < 0 != v291)
                        return 0;
                      v590 = (int)v587;
                      result = CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(v587, (char **)a2, v588);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v590))
                        return 0;
                    }
                  }
                  else
                  {
                    switch(v19)
                    {
                      case 0x339u:
                        if (v15 != 202)
                          goto LABEL_9;
                        if (*v5 == 825)
                        {
                          v45 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 825;
                          v45 = (CoreML::Specification::LessThanLayerParams *)operator new();
                          CoreML::Specification::LessThanLayerParams::LessThanLayerParams(v45);
                          *v6 = v45;
                        }
                        v297 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v297 < 0)
                        {
                          v298 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v298 < 0)
                            return 0;
                        }
                        else
                        {
                          v298 = *v297;
                          *(_QWORD *)a2 = v297 + 1;
                        }
                        v529 = google::protobuf::io::CodedInputStream::PushLimit(a2, v298);
                        v531 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v531--, 1);
                        *((_DWORD *)a2 + 13) = v531;
                        if (v531 < 0 != v291)
                          return 0;
                        v532 = v529;
                        result = CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(v45, (char **)a2, v530);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v532))
                          return 0;
                        goto LABEL_2;
                      case 0x33Au:
                      case 0x33Cu:
                      case 0x33Du:
                      case 0x33Fu:
                        goto LABEL_9;
                      case 0x33Bu:
                        if (v15 != 218)
                          goto LABEL_9;
                        if (*v5 == 827)
                        {
                          v119 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 827;
                          v119 = (CoreML::Specification::LessEqualLayerParams *)operator new();
                          CoreML::Specification::LessEqualLayerParams::LessEqualLayerParams(v119);
                          *v6 = v119;
                        }
                        v299 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v299 < 0)
                        {
                          v300 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v300 < 0)
                            return 0;
                        }
                        else
                        {
                          v300 = *v299;
                          *(_QWORD *)a2 = v299 + 1;
                        }
                        v533 = google::protobuf::io::CodedInputStream::PushLimit(a2, v300);
                        v535 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v535--, 1);
                        *((_DWORD *)a2 + 13) = v535;
                        if (v535 < 0 != v291)
                          return 0;
                        v536 = v533;
                        result = CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(v119, (char **)a2, v534);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v536))
                          return 0;
                        goto LABEL_2;
                      case 0x33Eu:
                        if (v15 != 242)
                          goto LABEL_9;
                        if (*v5 == 830)
                        {
                          v120 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 830;
                          v120 = (CoreML::Specification::GreaterThanLayerParams *)operator new();
                          CoreML::Specification::GreaterThanLayerParams::GreaterThanLayerParams(v120);
                          *v6 = v120;
                        }
                        v301 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v301 < 0)
                        {
                          v302 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v302 < 0)
                            return 0;
                        }
                        else
                        {
                          v302 = *v301;
                          *(_QWORD *)a2 = v301 + 1;
                        }
                        v537 = google::protobuf::io::CodedInputStream::PushLimit(a2, v302);
                        v539 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v539--, 1);
                        *((_DWORD *)a2 + 13) = v539;
                        if (v539 < 0 != v291)
                          return 0;
                        v540 = v537;
                        result = CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(v120, (char **)a2, v538);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v540))
                          return 0;
                        goto LABEL_2;
                      case 0x340u:
                        if (v15 != 2)
                          goto LABEL_9;
                        if (*v5 == 832)
                        {
                          v121 = *v6;
                        }
                        else
                        {
                          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                          *((_DWORD *)this + 35) = 832;
                          v121 = (CoreML::Specification::GreaterEqualLayerParams *)operator new();
                          CoreML::Specification::GreaterEqualLayerParams::GreaterEqualLayerParams(v121);
                          *v6 = v121;
                        }
                        v303 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v303 < 0)
                        {
                          v304 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v304 < 0)
                            return 0;
                        }
                        else
                        {
                          v304 = *v303;
                          *(_QWORD *)a2 = v303 + 1;
                        }
                        v541 = google::protobuf::io::CodedInputStream::PushLimit(a2, v304);
                        v543 = *((_DWORD *)a2 + 13);
                        v291 = __OFSUB__(v543--, 1);
                        *((_DWORD *)a2 + 13) = v543;
                        if (v543 < 0 != v291)
                          return 0;
                        v544 = v541;
                        result = CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(v121, (char **)a2, v542);
                        if (!(_DWORD)result)
                          return result;
                        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v544))
                          return 0;
                        goto LABEL_2;
                      default:
                        if (v19 == 815)
                        {
                          if (v15 != 122)
                            goto LABEL_9;
                          if (*v5 == 815)
                          {
                            v280 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 815;
                            v280 = (CoreML::Specification::EqualLayerParams *)operator new();
                            CoreML::Specification::EqualLayerParams::EqualLayerParams(v280);
                            *v6 = v280;
                          }
                          v511 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v511 < 0)
                          {
                            v512 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v512 < 0)
                              return 0;
                          }
                          else
                          {
                            v512 = *v511;
                            *(_QWORD *)a2 = v511 + 1;
                          }
                          v1106 = google::protobuf::io::CodedInputStream::PushLimit(a2, v512);
                          v1108 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1108--, 1);
                          *((_DWORD *)a2 + 13) = v1108;
                          if (v1108 < 0 != v291)
                            return 0;
                          v1109 = v1106;
                          result = CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(v280, (char **)a2, v1107);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1109))
                            return 0;
                        }
                        else
                        {
                          if (v19 != 820 || v15 != 162)
                            goto LABEL_9;
                          if (*v5 == 820)
                          {
                            v89 = *v6;
                          }
                          else
                          {
                            CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                            *((_DWORD *)this + 35) = 820;
                            v89 = (CoreML::Specification::NotEqualLayerParams *)operator new();
                            CoreML::Specification::NotEqualLayerParams::NotEqualLayerParams(v89);
                            *v6 = v89;
                          }
                          v509 = *(char **)a2;
                          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v509 < 0)
                          {
                            v510 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                            if (v510 < 0)
                              return 0;
                          }
                          else
                          {
                            v510 = *v509;
                            *(_QWORD *)a2 = v509 + 1;
                          }
                          v1102 = google::protobuf::io::CodedInputStream::PushLimit(a2, v510);
                          v1104 = *((_DWORD *)a2 + 13);
                          v291 = __OFSUB__(v1104--, 1);
                          *((_DWORD *)a2 + 13) = v1104;
                          if (v1104 < 0 != v291)
                            return 0;
                          v1105 = v1102;
                          result = CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(v89, (char **)a2, v1103);
                          if (!(_DWORD)result)
                            return result;
                          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1105))
                            return 0;
                        }
                        break;
                    }
                  }
                }
                else if (v15 >> 3 > 0x301)
                {
                  if (v15 >> 3 <= 0x30B)
                  {
                    if (v19 == 770)
                    {
                      if (v15 != 18)
                        goto LABEL_9;
                      if (*v5 != 770)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 770;
                        v265 = (CoreML::Specification::AsinhLayerParams *)operator new();
                        CoreML::Specification::AsinhLayerParams::AsinhLayerParams(v265);
                        *v6 = v265;
                      }
                      v266 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v266 < 0)
                      {
                        v267 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v267 < 0)
                          return 0;
                      }
                      else
                      {
                        v267 = *v266;
                        *(_QWORD *)a2 = v266 + 1;
                      }
                      v730 = (CoreML::Specification::AsinhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v267);
                      v732 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v732--, 1);
                      *((_DWORD *)a2 + 13) = v732;
                      if (v732 < 0 != v291)
                        return 0;
                      v733 = (int)v730;
                      result = CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(v730, (char **)a2, v731);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v733))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 775 || v15 != 58)
                        goto LABEL_9;
                      if (*v5 != 775)
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 775;
                        v100 = (CoreML::Specification::AcoshLayerParams *)operator new();
                        CoreML::Specification::AcoshLayerParams::AcoshLayerParams(v100);
                        *v6 = v100;
                      }
                      v101 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v101 < 0)
                      {
                        v102 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v102 < 0)
                          return 0;
                      }
                      else
                      {
                        v102 = *v101;
                        *(_QWORD *)a2 = v101 + 1;
                      }
                      v615 = (CoreML::Specification::AcoshLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v102);
                      v617 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v617--, 1);
                      *((_DWORD *)a2 + 13) = v617;
                      if (v617 < 0 != v291)
                        return 0;
                      v618 = (int)v615;
                      result = CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(v615, (char **)a2, v616);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v618))
                        return 0;
                    }
                  }
                  else if (v19 == 780)
                  {
                    if (v15 != 98)
                      goto LABEL_9;
                    if (*v5 != 780)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 780;
                      v201 = (CoreML::Specification::AtanhLayerParams *)operator new();
                      CoreML::Specification::AtanhLayerParams::AtanhLayerParams(v201);
                      *v6 = v201;
                    }
                    v202 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v202 < 0)
                    {
                      v203 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v203 < 0)
                        return 0;
                    }
                    else
                    {
                      v203 = *v202;
                      *(_QWORD *)a2 = v202 + 1;
                    }
                    v682 = (CoreML::Specification::AtanhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v203);
                    v684 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v684--, 1);
                    *((_DWORD *)a2 + 13) = v684;
                    if (v684 < 0 != v291)
                      return 0;
                    v685 = (int)v682;
                    result = CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(v682, (char **)a2, v683);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v685))
                      return 0;
                  }
                  else if (v19 == 790)
                  {
                    if (v15 != 178)
                      goto LABEL_9;
                    if (*v5 != 790)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 790;
                      v204 = (CoreML::Specification::ErfLayerParams *)operator new();
                      CoreML::Specification::ErfLayerParams::ErfLayerParams(v204);
                      *v6 = v204;
                    }
                    v205 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v205 < 0)
                    {
                      v206 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v206 < 0)
                        return 0;
                    }
                    else
                    {
                      v206 = *v205;
                      *(_QWORD *)a2 = v205 + 1;
                    }
                    v686 = (CoreML::Specification::ErfLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v206);
                    v688 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v688--, 1);
                    *((_DWORD *)a2 + 13) = v688;
                    if (v688 < 0 != v291)
                      return 0;
                    v689 = (int)v686;
                    result = CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream(v686, (char **)a2, v687);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v689))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 795 || v15 != 218)
                      goto LABEL_9;
                    if (*v5 == 795)
                    {
                      v56 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 795;
                      v56 = (CoreML::Specification::GeluLayerParams *)operator new();
                      CoreML::Specification::GeluLayerParams::GeluLayerParams(v56);
                      *v6 = v56;
                    }
                    v335 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v335 < 0)
                    {
                      v336 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v336 < 0)
                        return 0;
                    }
                    else
                    {
                      v336 = *v335;
                      *(_QWORD *)a2 = v335 + 1;
                    }
                    v785 = google::protobuf::io::CodedInputStream::PushLimit(a2, v336);
                    v787 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v787--, 1);
                    *((_DWORD *)a2 + 13) = v787;
                    if (v787 < 0 != v291)
                      return 0;
                    v788 = v785;
                    result = CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(v56, (char **)a2, v786);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v788))
                      return 0;
                  }
                }
                else if (v15 >> 3 <= 0x2ED)
                {
                  if (v19 == 735)
                  {
                    if (v15 != 250)
                      goto LABEL_9;
                    if (*v5 != 735)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 735;
                      v246 = (CoreML::Specification::AcosLayerParams *)operator new();
                      CoreML::Specification::AcosLayerParams::AcosLayerParams(v246);
                      *v6 = v246;
                    }
                    v247 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v247 < 0)
                    {
                      v248 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v248 < 0)
                        return 0;
                    }
                    else
                    {
                      v248 = *v247;
                      *(_QWORD *)a2 = v247 + 1;
                    }
                    v718 = (CoreML::Specification::AcosLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v248);
                    v720 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v720--, 1);
                    *((_DWORD *)a2 + 13) = v720;
                    if (v720 < 0 != v291)
                      return 0;
                    v721 = (int)v718;
                    result = CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(v718, (char **)a2, v719);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v721))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 740 || v15 != 34)
                      goto LABEL_9;
                    if (*v5 != 740)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 740;
                      v78 = (CoreML::Specification::AtanLayerParams *)operator new();
                      CoreML::Specification::AtanLayerParams::AtanLayerParams(v78);
                      *v6 = v78;
                    }
                    v79 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v79 < 0)
                    {
                      v80 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v80 < 0)
                        return 0;
                    }
                    else
                    {
                      v80 = *v79;
                      *(_QWORD *)a2 = v79 + 1;
                    }
                    v599 = (CoreML::Specification::AtanLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v80);
                    v601 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v601--, 1);
                    *((_DWORD *)a2 + 13) = v601;
                    if (v601 < 0 != v291)
                      return 0;
                    v602 = (int)v599;
                    result = CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(v599, (char **)a2, v600);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v602))
                      return 0;
                  }
                }
                else if (v19 == 750)
                {
                  if (v15 != 114)
                    goto LABEL_9;
                  if (*v5 != 750)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 750;
                    v157 = (CoreML::Specification::SinhLayerParams *)operator new();
                    CoreML::Specification::SinhLayerParams::SinhLayerParams(v157);
                    *v6 = v157;
                  }
                  v158 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v158 < 0)
                  {
                    v159 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v159 < 0)
                      return 0;
                  }
                  else
                  {
                    v159 = *v158;
                    *(_QWORD *)a2 = v158 + 1;
                  }
                  v647 = (CoreML::Specification::SinhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v159);
                  v649 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v649--, 1);
                  *((_DWORD *)a2 + 13) = v649;
                  if (v649 < 0 != v291)
                    return 0;
                  v650 = (int)v647;
                  result = CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(v647, (char **)a2, v648);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v650))
                    return 0;
                }
                else if (v19 == 755)
                {
                  if (v15 != 154)
                    goto LABEL_9;
                  if (*v5 != 755)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 755;
                    v160 = (CoreML::Specification::CoshLayerParams *)operator new();
                    CoreML::Specification::CoshLayerParams::CoshLayerParams(v160);
                    *v6 = v160;
                  }
                  v161 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v161 < 0)
                  {
                    v162 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v162 < 0)
                      return 0;
                  }
                  else
                  {
                    v162 = *v161;
                    *(_QWORD *)a2 = v161 + 1;
                  }
                  v651 = (CoreML::Specification::CoshLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v162);
                  v653 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v653--, 1);
                  *((_DWORD *)a2 + 13) = v653;
                  if (v653 < 0 != v291)
                    return 0;
                  v654 = (int)v651;
                  result = CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(v651, (char **)a2, v652);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v654))
                    return 0;
                }
                else
                {
                  if (v19 != 760 || v15 != 194)
                    goto LABEL_9;
                  if (*v5 != 760)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 760;
                    v33 = (CoreML::Specification::TanhLayerParams *)operator new();
                    CoreML::Specification::TanhLayerParams::TanhLayerParams(v33);
                    *v6 = v33;
                  }
                  v34 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v34 < 0)
                  {
                    v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v35 < 0)
                      return 0;
                  }
                  else
                  {
                    v35 = *v34;
                    *(_QWORD *)a2 = v34 + 1;
                  }
                  v571 = (CoreML::Specification::TanhLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
                  v573 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v573--, 1);
                  *((_DWORD *)a2 + 13) = v573;
                  if (v573 < 0 != v291)
                    return 0;
                  v574 = (int)v571;
                  result = CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(v571, (char **)a2, v572);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v574))
                    return 0;
                }
              }
              else if (v15 >> 3 <= 0x27F)
              {
                if (v15 >> 3 > 0x25C)
                {
                  if (v15 >> 3 <= 0x26B)
                  {
                    if (v19 == 605)
                    {
                      if (v15 != 234)
                        goto LABEL_9;
                      if (*v5 == 605)
                      {
                        v270 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 605;
                        v270 = (CoreML::Specification::BranchLayerParams *)operator new();
                        CoreML::Specification::BranchLayerParams::BranchLayerParams(v270);
                        *v6 = v270;
                      }
                      v489 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v489 < 0)
                      {
                        v490 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v490 < 0)
                          return 0;
                      }
                      else
                      {
                        v490 = *v489;
                        *(_QWORD *)a2 = v489 + 1;
                      }
                      v1086 = google::protobuf::io::CodedInputStream::PushLimit(a2, v490);
                      v1088 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v1088--, 1);
                      *((_DWORD *)a2 + 13) = v1088;
                      if (v1088 < 0 != v291)
                        return 0;
                      v1089 = v1086;
                      result = CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(v270, a2, v1087);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1089))
                        return 0;
                    }
                    else
                    {
                      if (v19 != 615 || v15 != 58)
                        goto LABEL_9;
                      if (*v5 == 615)
                      {
                        v105 = *v6;
                      }
                      else
                      {
                        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                        *((_DWORD *)this + 35) = 615;
                        v105 = (CoreML::Specification::LoopLayerParams *)operator new();
                        CoreML::Specification::LoopLayerParams::LoopLayerParams(v105);
                        *v6 = v105;
                      }
                      v381 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v381 < 0)
                      {
                        v382 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                        if (v382 < 0)
                          return 0;
                      }
                      else
                      {
                        v382 = *v381;
                        *(_QWORD *)a2 = v381 + 1;
                      }
                      v875 = google::protobuf::io::CodedInputStream::PushLimit(a2, v382);
                      v877 = *((_DWORD *)a2 + 13);
                      v291 = __OFSUB__(v877--, 1);
                      *((_DWORD *)a2 + 13) = v877;
                      if (v877 < 0 != v291)
                        return 0;
                      v878 = v875;
                      result = CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(v105, a2, v876);
                      if (!(_DWORD)result)
                        return result;
                      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v878))
                        return 0;
                    }
                  }
                  else if (v19 == 620)
                  {
                    if (v15 != 98)
                      goto LABEL_9;
                    if (*v5 != 620)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 620;
                      v211 = (CoreML::Specification::LoopBreakLayerParams *)operator new();
                      CoreML::Specification::LoopBreakLayerParams::LoopBreakLayerParams(v211);
                      *v6 = v211;
                    }
                    v212 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v212 < 0)
                    {
                      v213 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v213 < 0)
                        return 0;
                    }
                    else
                    {
                      v213 = *v212;
                      *(_QWORD *)a2 = v212 + 1;
                    }
                    v690 = (CoreML::Specification::LoopBreakLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v213);
                    v692 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v692--, 1);
                    *((_DWORD *)a2 + 13) = v692;
                    if (v692 < 0 != v291)
                      return 0;
                    v693 = (int)v690;
                    result = CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(v690, (char **)a2, v691);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v693))
                      return 0;
                  }
                  else if (v19 == 625)
                  {
                    if (v15 != 138)
                      goto LABEL_9;
                    if (*v5 != 625)
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 625;
                      v214 = (CoreML::Specification::LoopContinueLayerParams *)operator new();
                      CoreML::Specification::LoopContinueLayerParams::LoopContinueLayerParams(v214);
                      *v6 = v214;
                    }
                    v215 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v215 < 0)
                    {
                      v216 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v216 < 0)
                        return 0;
                    }
                    else
                    {
                      v216 = *v215;
                      *(_QWORD *)a2 = v215 + 1;
                    }
                    v694 = (CoreML::Specification::LoopContinueLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v216);
                    v696 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v696--, 1);
                    *((_DWORD *)a2 + 13) = v696;
                    if (v696 < 0 != v291)
                      return 0;
                    v697 = (int)v694;
                    result = CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(v694, (char **)a2, v695);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v697))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 635 || v15 != 218)
                      goto LABEL_9;
                    if (*v5 == 635)
                    {
                      v59 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 635;
                      v59 = (CoreML::Specification::RangeStaticLayerParams *)operator new();
                      CoreML::Specification::RangeStaticLayerParams::RangeStaticLayerParams(v59);
                      *v6 = v59;
                    }
                    v341 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v341 < 0)
                    {
                      v342 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v342 < 0)
                        return 0;
                    }
                    else
                    {
                      v342 = *v341;
                      *(_QWORD *)a2 = v341 + 1;
                    }
                    v797 = google::protobuf::io::CodedInputStream::PushLimit(a2, v342);
                    v799 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v799--, 1);
                    *((_DWORD *)a2 + 13) = v799;
                    if (v799 < 0 != v291)
                      return 0;
                    v800 = v797;
                    result = CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(v59, (char **)a2, v798);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v800))
                      return 0;
                  }
                }
                else if (v15 >> 3 <= 0x1AD)
                {
                  if (v19 == 410)
                  {
                    if (v15 != 210)
                      goto LABEL_9;
                    if (*v5 == 410)
                    {
                      v251 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 410;
                      v251 = (CoreML::Specification::GRULayerParams *)operator new();
                      CoreML::Specification::GRULayerParams::GRULayerParams(v251);
                      *v6 = v251;
                    }
                    v469 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v469 < 0)
                    {
                      v470 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v470 < 0)
                        return 0;
                    }
                    else
                    {
                      v470 = *v469;
                      *(_QWORD *)a2 = v469 + 1;
                    }
                    v1047 = google::protobuf::io::CodedInputStream::PushLimit(a2, v470);
                    v1049 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v1049--, 1);
                    *((_DWORD *)a2 + 13) = v1049;
                    if (v1049 < 0 != v291)
                      return 0;
                    v1050 = v1047;
                    result = CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(v251, a2, v1048);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1050))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 420 || v15 != 34)
                      goto LABEL_9;
                    if (*v5 == 420)
                    {
                      v85 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 420;
                      v85 = (CoreML::Specification::UniDirectionalLSTMLayerParams *)operator new();
                      CoreML::Specification::UniDirectionalLSTMLayerParams::UniDirectionalLSTMLayerParams(v85);
                      *v6 = v85;
                    }
                    v361 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v361 < 0)
                    {
                      v362 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v362 < 0)
                        return 0;
                    }
                    else
                    {
                      v362 = *v361;
                      *(_QWORD *)a2 = v361 + 1;
                    }
                    v836 = google::protobuf::io::CodedInputStream::PushLimit(a2, v362);
                    v838 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v838--, 1);
                    *((_DWORD *)a2 + 13) = v838;
                    if (v838 < 0 != v291)
                      return 0;
                    v839 = v836;
                    result = CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(v85, a2, v837);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v839))
                      return 0;
                  }
                }
                else if (v19 == 430)
                {
                  if (v15 != 114)
                    goto LABEL_9;
                  if (*v5 == 430)
                  {
                    v171 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 430;
                    v171 = (CoreML::Specification::BiDirectionalLSTMLayerParams *)operator new();
                    CoreML::Specification::BiDirectionalLSTMLayerParams::BiDirectionalLSTMLayerParams(v171);
                    *v6 = v171;
                  }
                  v399 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v399 < 0)
                  {
                    v400 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v400 < 0)
                      return 0;
                  }
                  else
                  {
                    v400 = *v399;
                    *(_QWORD *)a2 = v399 + 1;
                  }
                  v910 = google::protobuf::io::CodedInputStream::PushLimit(a2, v400);
                  v912 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v912--, 1);
                  *((_DWORD *)a2 + 13) = v912;
                  if (v912 < 0 != v291)
                    return 0;
                  v913 = v910;
                  result = CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(v171, a2, v911);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v913))
                    return 0;
                }
                else if (v19 == 500)
                {
                  if (v15 != 162)
                    goto LABEL_9;
                  if (*v5 == 500)
                  {
                    v172 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 500;
                    v172 = (CoreML::Specification::CustomLayerParams *)operator new();
                    CoreML::Specification::CustomLayerParams::CustomLayerParams(v172);
                    *v6 = v172;
                  }
                  v401 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v401 < 0)
                  {
                    v402 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v402 < 0)
                      return 0;
                  }
                  else
                  {
                    v402 = *v401;
                    *(_QWORD *)a2 = v401 + 1;
                  }
                  v914 = google::protobuf::io::CodedInputStream::PushLimit(a2, v402);
                  v916 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v916--, 1);
                  *((_DWORD *)a2 + 13) = v916;
                  if (v916 < 0 != v291)
                    return 0;
                  v917 = v914;
                  result = CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(v172, a2, v915);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v917))
                    return 0;
                }
                else
                {
                  if (v19 != 600 || v15 != 194)
                    goto LABEL_9;
                  if (*v5 != 600)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 600;
                    v39 = (CoreML::Specification::CopyLayerParams *)operator new();
                    CoreML::Specification::CopyLayerParams::CopyLayerParams(v39);
                    *v6 = v39;
                  }
                  v40 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v40 < 0)
                  {
                    v41 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v41 < 0)
                      return 0;
                  }
                  else
                  {
                    v41 = *v40;
                    *(_QWORD *)a2 = v40 + 1;
                  }
                  v575 = (CoreML::Specification::CopyLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v41);
                  v577 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v577--, 1);
                  *((_DWORD *)a2 + 13) = v577;
                  if (v577 < 0 != v291)
                    return 0;
                  v578 = (int)v575;
                  result = CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(v575, (char **)a2, v576);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v578))
                    return 0;
                }
              }
              else if (v15 >> 3 <= 0x2AC)
              {
                if (v15 >> 3 <= 0x298)
                {
                  if (v19 == 640)
                  {
                    if (v15 != 2)
                      goto LABEL_9;
                    if (*v5 == 640)
                    {
                      v262 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 640;
                      v262 = (CoreML::Specification::RangeDynamicLayerParams *)operator new();
                      CoreML::Specification::RangeDynamicLayerParams::RangeDynamicLayerParams(v262);
                      *v6 = v262;
                    }
                    v479 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v479 < 0)
                    {
                      v480 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v480 < 0)
                        return 0;
                    }
                    else
                    {
                      v480 = *v479;
                      *(_QWORD *)a2 = v479 + 1;
                    }
                    v1066 = google::protobuf::io::CodedInputStream::PushLimit(a2, v480);
                    v1068 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v1068--, 1);
                    *((_DWORD *)a2 + 13) = v1068;
                    if (v1068 < 0 != v291)
                      return 0;
                    v1069 = v1066;
                    result = CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(v262, (char **)a2, v1067);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1069))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 660 || v15 != 162)
                      goto LABEL_9;
                    if (*v5 == 660)
                    {
                      v95 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 660;
                      v95 = (CoreML::Specification::ClipLayerParams *)operator new();
                      CoreML::Specification::ClipLayerParams::ClipLayerParams(v95);
                      *v6 = v95;
                    }
                    v373 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v373 < 0)
                    {
                      v374 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v374 < 0)
                        return 0;
                    }
                    else
                    {
                      v374 = *v373;
                      *(_QWORD *)a2 = v373 + 1;
                    }
                    v859 = google::protobuf::io::CodedInputStream::PushLimit(a2, v374);
                    v861 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v861--, 1);
                    *((_DWORD *)a2 + 13) = v861;
                    if (v861 < 0 != v291)
                      return 0;
                    v862 = v859;
                    result = CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(v95, (char **)a2, v860);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v862))
                      return 0;
                  }
                }
                else if (v19 == 665)
                {
                  if (v15 != 202)
                    goto LABEL_9;
                  if (*v5 != 665)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 665;
                    v189 = (CoreML::Specification::CeilLayerParams *)operator new();
                    CoreML::Specification::CeilLayerParams::CeilLayerParams(v189);
                    *v6 = v189;
                  }
                  v190 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v190 < 0)
                  {
                    v191 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v191 < 0)
                      return 0;
                  }
                  else
                  {
                    v191 = *v190;
                    *(_QWORD *)a2 = v190 + 1;
                  }
                  v670 = (CoreML::Specification::CeilLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v191);
                  v672 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v672--, 1);
                  *((_DWORD *)a2 + 13) = v672;
                  if (v672 < 0 != v291)
                    return 0;
                  v673 = (int)v670;
                  result = CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream(v670, (char **)a2, v671);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v673))
                    return 0;
                }
                else if (v19 == 670)
                {
                  if (v15 != 242)
                    goto LABEL_9;
                  if (*v5 != 670)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 670;
                    v192 = (CoreML::Specification::FloorLayerParams *)operator new();
                    CoreML::Specification::FloorLayerParams::FloorLayerParams(v192);
                    *v6 = v192;
                  }
                  v193 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v193 < 0)
                  {
                    v194 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v194 < 0)
                      return 0;
                  }
                  else
                  {
                    v194 = *v193;
                    *(_QWORD *)a2 = v193 + 1;
                  }
                  v674 = (CoreML::Specification::FloorLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v194);
                  v676 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v676--, 1);
                  *((_DWORD *)a2 + 13) = v676;
                  if (v676 < 0 != v291)
                    return 0;
                  v677 = (int)v674;
                  result = CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream(v674, (char **)a2, v675);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v677))
                    return 0;
                }
                else
                {
                  if (v19 != 680 || v15 != 66)
                    goto LABEL_9;
                  if (*v5 != 680)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 680;
                    v51 = (CoreML::Specification::SignLayerParams *)operator new();
                    CoreML::Specification::SignLayerParams::SignLayerParams(v51);
                    *v6 = v51;
                  }
                  v52 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v52 < 0)
                  {
                    v53 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v53 < 0)
                      return 0;
                  }
                  else
                  {
                    v53 = *v52;
                    *(_QWORD *)a2 = v52 + 1;
                  }
                  v583 = (CoreML::Specification::SignLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v53);
                  v585 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v585--, 1);
                  *((_DWORD *)a2 + 13) = v585;
                  if (v585 < 0 != v291)
                    return 0;
                  v586 = (int)v583;
                  result = CoreML::Specification::SignLayerParams::MergePartialFromCodedStream(v583, (char **)a2, v584);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v586))
                    return 0;
                }
              }
              else if (v15 >> 3 > 0x2CA)
              {
                if (v19 == 715)
                {
                  if (v15 != 90)
                    goto LABEL_9;
                  if (*v5 != 715)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 715;
                    v236 = (CoreML::Specification::CosLayerParams *)operator new();
                    CoreML::Specification::CosLayerParams::CosLayerParams(v236);
                    *v6 = v236;
                  }
                  v237 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v237 < 0)
                  {
                    v238 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v238 < 0)
                      return 0;
                  }
                  else
                  {
                    v238 = *v237;
                    *(_QWORD *)a2 = v237 + 1;
                  }
                  v710 = (CoreML::Specification::CosLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v238);
                  v712 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v712--, 1);
                  *((_DWORD *)a2 + 13) = v712;
                  if (v712 < 0 != v291)
                    return 0;
                  v713 = (int)v710;
                  result = CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(v710, (char **)a2, v711);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v713))
                    return 0;
                }
                else if (v19 == 720)
                {
                  if (v15 != 130)
                    goto LABEL_9;
                  if (*v5 != 720)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 720;
                    v239 = (CoreML::Specification::TanLayerParams *)operator new();
                    CoreML::Specification::TanLayerParams::TanLayerParams(v239);
                    *v6 = v239;
                  }
                  v240 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v240 < 0)
                  {
                    v241 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v241 < 0)
                      return 0;
                  }
                  else
                  {
                    v241 = *v240;
                    *(_QWORD *)a2 = v240 + 1;
                  }
                  v714 = (CoreML::Specification::TanLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v241);
                  v716 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v716--, 1);
                  *((_DWORD *)a2 + 13) = v716;
                  if (v716 < 0 != v291)
                    return 0;
                  v717 = (int)v714;
                  result = CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(v714, (char **)a2, v715);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v717))
                    return 0;
                }
                else
                {
                  if (v19 != 730 || v15 != 210)
                    goto LABEL_9;
                  if (*v5 != 730)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 730;
                    v72 = (CoreML::Specification::AsinLayerParams *)operator new();
                    CoreML::Specification::AsinLayerParams::AsinLayerParams(v72);
                    *v6 = v72;
                  }
                  v73 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v73 < 0)
                  {
                    v74 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v74 < 0)
                      return 0;
                  }
                  else
                  {
                    v74 = *v73;
                    *(_QWORD *)a2 = v73 + 1;
                  }
                  v595 = (CoreML::Specification::AsinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v74);
                  v597 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v597--, 1);
                  *((_DWORD *)a2 + 13) = v597;
                  if (v597 < 0 != v291)
                    return 0;
                  v598 = (int)v595;
                  result = CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(v595, (char **)a2, v596);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v598))
                    return 0;
                }
              }
              else if (v19 == 685)
              {
                if (v15 != 106)
                  goto LABEL_9;
                if (*v5 != 685)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 685;
                  v145 = (CoreML::Specification::RoundLayerParams *)operator new();
                  CoreML::Specification::RoundLayerParams::RoundLayerParams(v145);
                  *v6 = v145;
                }
                v146 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v146 < 0)
                {
                  v147 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v147 < 0)
                    return 0;
                }
                else
                {
                  v147 = *v146;
                  *(_QWORD *)a2 = v146 + 1;
                }
                v635 = (CoreML::Specification::RoundLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v147);
                v637 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v637--, 1);
                *((_DWORD *)a2 + 13) = v637;
                if (v637 < 0 != v291)
                  return 0;
                v638 = (int)v635;
                result = CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream(v635, (char **)a2, v636);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v638))
                  return 0;
              }
              else if (v19 == 700)
              {
                if (v15 != 226)
                  goto LABEL_9;
                if (*v5 != 700)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 700;
                  v148 = (CoreML::Specification::Exp2LayerParams *)operator new();
                  CoreML::Specification::Exp2LayerParams::Exp2LayerParams(v148);
                  *v6 = v148;
                }
                v149 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v149 < 0)
                {
                  v150 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v150 < 0)
                    return 0;
                }
                else
                {
                  v150 = *v149;
                  *(_QWORD *)a2 = v149 + 1;
                }
                v639 = (CoreML::Specification::Exp2LayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v150);
                v641 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v641--, 1);
                *((_DWORD *)a2 + 13) = v641;
                if (v641 < 0 != v291)
                  return 0;
                v642 = (int)v639;
                result = CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(v639, (char **)a2, v640);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v642))
                  return 0;
              }
              else
              {
                if (v19 != 710 || v15 != 50)
                  goto LABEL_9;
                if (*v5 != 710)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 710;
                  v27 = (CoreML::Specification::SinLayerParams *)operator new();
                  CoreML::Specification::SinLayerParams::SinLayerParams(v27);
                  *v6 = v27;
                }
                v28 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v28 < 0)
                {
                  v29 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v29 < 0)
                    return 0;
                }
                else
                {
                  v29 = *v28;
                  *(_QWORD *)a2 = v28 + 1;
                }
                v567 = (CoreML::Specification::SinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v29);
                v569 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v569--, 1);
                *((_DWORD *)a2 + 13) = v569;
                if (v569 < 0 != v291)
                  return 0;
                v570 = (int)v567;
                result = CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(v567, (char **)a2, v568);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v570))
                  return 0;
              }
            }
            if (v15 >> 3 <= 0xDB)
              break;
            if (v15 >> 3 > 0x121)
            {
              if (v15 >> 3 > 0x149)
              {
                if (v15 >> 3 <= 0x158)
                {
                  if (v19 == 330)
                  {
                    if (v15 != 82)
                      goto LABEL_9;
                    if (*v5 == 330)
                    {
                      v272 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 330;
                      v272 = (CoreML::Specification::SplitLayerParams *)operator new();
                      CoreML::Specification::SplitLayerParams::SplitLayerParams(v272);
                      *v6 = v272;
                    }
                    v493 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v493 < 0)
                    {
                      v494 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v494 < 0)
                        return 0;
                    }
                    else
                    {
                      v494 = *v493;
                      *(_QWORD *)a2 = v493 + 1;
                    }
                    v1094 = google::protobuf::io::CodedInputStream::PushLimit(a2, v494);
                    v1096 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v1096--, 1);
                    *((_DWORD *)a2 + 13) = v1096;
                    if (v1096 < 0 != v291)
                      return 0;
                    v1097 = v1094;
                    result = CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(v272, (char **)a2, v1095);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1097))
                      return 0;
                  }
                  else
                  {
                    if (v19 != 340 || v15 != 162)
                      goto LABEL_9;
                    if (*v5 == 340)
                    {
                      v109 = *v6;
                    }
                    else
                    {
                      CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                      *((_DWORD *)this + 35) = 340;
                      v109 = (CoreML::Specification::SequenceRepeatLayerParams *)operator new();
                      CoreML::Specification::SequenceRepeatLayerParams::SequenceRepeatLayerParams(v109);
                      *v6 = v109;
                    }
                    v383 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v383 < 0)
                    {
                      v384 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (v384 < 0)
                        return 0;
                    }
                    else
                    {
                      v384 = *v383;
                      *(_QWORD *)a2 = v383 + 1;
                    }
                    v879 = google::protobuf::io::CodedInputStream::PushLimit(a2, v384);
                    v881 = *((_DWORD *)a2 + 13);
                    v291 = __OFSUB__(v881--, 1);
                    *((_DWORD *)a2 + 13) = v881;
                    if (v881 < 0 != v291)
                      return 0;
                    v882 = v879;
                    result = CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(v109, (char **)a2, v880);
                    if (!(_DWORD)result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v882))
                      return 0;
                  }
                }
                else if (v19 == 345)
                {
                  if (v15 != 202)
                    goto LABEL_9;
                  if (*v5 == 345)
                  {
                    v219 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 345;
                    v219 = (CoreML::Specification::ReorganizeDataLayerParams *)operator new();
                    CoreML::Specification::ReorganizeDataLayerParams::ReorganizeDataLayerParams(v219);
                    *v6 = v219;
                  }
                  v441 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v441 < 0)
                  {
                    v442 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v442 < 0)
                      return 0;
                  }
                  else
                  {
                    v442 = *v441;
                    *(_QWORD *)a2 = v441 + 1;
                  }
                  v992 = google::protobuf::io::CodedInputStream::PushLimit(a2, v442);
                  v994 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v994--, 1);
                  *((_DWORD *)a2 + 13) = v994;
                  if (v994 < 0 != v291)
                    return 0;
                  v995 = v992;
                  result = CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(v219, (char **)a2, v993);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v995))
                    return 0;
                }
                else if (v19 == 350)
                {
                  if (v15 != 242)
                    goto LABEL_9;
                  if (*v5 == 350)
                  {
                    v220 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 350;
                    v220 = (CoreML::Specification::SliceLayerParams *)operator new();
                    CoreML::Specification::SliceLayerParams::SliceLayerParams(v220);
                    *v6 = v220;
                  }
                  v443 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v443 < 0)
                  {
                    v444 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v444 < 0)
                      return 0;
                  }
                  else
                  {
                    v444 = *v443;
                    *(_QWORD *)a2 = v443 + 1;
                  }
                  v996 = google::protobuf::io::CodedInputStream::PushLimit(a2, v444);
                  v998 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v998--, 1);
                  *((_DWORD *)a2 + 13) = v998;
                  if (v998 < 0 != v291)
                    return 0;
                  v999 = v996;
                  result = CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(v220, (char **)a2, v997);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v999))
                    return 0;
                }
                else
                {
                  if (v19 != 400 || v15 != 130)
                    goto LABEL_9;
                  if (*v5 == 400)
                  {
                    v61 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 400;
                    v61 = (CoreML::Specification::SimpleRecurrentLayerParams *)operator new();
                    CoreML::Specification::SimpleRecurrentLayerParams::SimpleRecurrentLayerParams(v61);
                    *v6 = v61;
                  }
                  v345 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v345 < 0)
                  {
                    v346 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v346 < 0)
                      return 0;
                  }
                  else
                  {
                    v346 = *v345;
                    *(_QWORD *)a2 = v345 + 1;
                  }
                  v805 = google::protobuf::io::CodedInputStream::PushLimit(a2, v346);
                  v807 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v807--, 1);
                  *((_DWORD *)a2 + 13) = v807;
                  if (v807 < 0 != v291)
                    return 0;
                  v808 = v805;
                  result = CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(v61, a2, v806);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v808))
                    return 0;
                }
              }
              else if (v15 >> 3 <= 0x12C)
              {
                if (v19 == 290)
                {
                  if (v15 != 18)
                    goto LABEL_9;
                  if (*v5 == 290)
                  {
                    v253 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 290;
                    v253 = (CoreML::Specification::LoadConstantLayerParams *)operator new();
                    CoreML::Specification::LoadConstantLayerParams::LoadConstantLayerParams(v253);
                    *v6 = v253;
                  }
                  v473 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v473 < 0)
                  {
                    v474 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v474 < 0)
                      return 0;
                  }
                  else
                  {
                    v474 = *v473;
                    *(_QWORD *)a2 = v473 + 1;
                  }
                  v1055 = google::protobuf::io::CodedInputStream::PushLimit(a2, v474);
                  v1057 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v1057--, 1);
                  *((_DWORD *)a2 + 13) = v1057;
                  if (v1057 < 0 != v291)
                    return 0;
                  v1058 = v1055;
                  result = CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(v253, a2, v1056);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1058))
                    return 0;
                }
                else
                {
                  if (v19 != 300 || v15 != 98)
                    goto LABEL_9;
                  if (*v5 == 300)
                  {
                    v87 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 300;
                    v87 = (CoreML::Specification::ReshapeLayerParams *)operator new();
                    CoreML::Specification::ReshapeLayerParams::ReshapeLayerParams(v87);
                    *v6 = v87;
                  }
                  v365 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v365 < 0)
                  {
                    v366 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v366 < 0)
                      return 0;
                  }
                  else
                  {
                    v366 = *v365;
                    *(_QWORD *)a2 = v365 + 1;
                  }
                  v844 = google::protobuf::io::CodedInputStream::PushLimit(a2, v366);
                  v846 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v846--, 1);
                  *((_DWORD *)a2 + 13) = v846;
                  if (v846 < 0 != v291)
                    return 0;
                  v847 = v844;
                  result = CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(v87, a2, v845);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v847))
                    return 0;
                }
              }
              else if (v19 == 301)
              {
                if (v15 != 106)
                  goto LABEL_9;
                if (*v5 == 301)
                {
                  v175 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 301;
                  v175 = (CoreML::Specification::FlattenLayerParams *)operator new();
                  CoreML::Specification::FlattenLayerParams::FlattenLayerParams(v175);
                  *v6 = v175;
                }
                v407 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v407 < 0)
                {
                  v408 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v408 < 0)
                    return 0;
                }
                else
                {
                  v408 = *v407;
                  *(_QWORD *)a2 = v407 + 1;
                }
                v926 = google::protobuf::io::CodedInputStream::PushLimit(a2, v408);
                v928 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v928--, 1);
                *((_DWORD *)a2 + 13) = v928;
                if (v928 < 0 != v291)
                  return 0;
                v929 = v926;
                result = CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(v175, (char **)a2, v927);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v929))
                  return 0;
              }
              else if (v19 == 310)
              {
                if (v15 != 178)
                  goto LABEL_9;
                if (*v5 == 310)
                {
                  v176 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 310;
                  v176 = (CoreML::Specification::PermuteLayerParams *)operator new();
                  CoreML::Specification::PermuteLayerParams::PermuteLayerParams(v176);
                  *v6 = v176;
                }
                v409 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v409 < 0)
                {
                  v410 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v410 < 0)
                    return 0;
                }
                else
                {
                  v410 = *v409;
                  *(_QWORD *)a2 = v409 + 1;
                }
                v930 = google::protobuf::io::CodedInputStream::PushLimit(a2, v410);
                v932 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v932--, 1);
                *((_DWORD *)a2 + 13) = v932;
                if (v932 < 0 != v291)
                  return 0;
                v933 = v930;
                result = CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(v176, a2, v931);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v933))
                  return 0;
              }
              else
              {
                if (v19 != 320 || v15 != 2)
                  goto LABEL_9;
                if (*v5 == 320)
                {
                  v43 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 320;
                  v43 = (CoreML::Specification::ConcatLayerParams *)operator new();
                  CoreML::Specification::ConcatLayerParams::ConcatLayerParams(v43);
                  *v6 = v43;
                }
                v323 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v323 < 0)
                {
                  v324 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v324 < 0)
                    return 0;
                }
                else
                {
                  v324 = *v323;
                  *(_QWORD *)a2 = v323 + 1;
                }
                v762 = google::protobuf::io::CodedInputStream::PushLimit(a2, v324);
                v764 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v764--, 1);
                *((_DWORD *)a2 + 13) = v764;
                if (v764 < 0 != v291)
                  return 0;
                v765 = v762;
                result = CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(v43, a2, v763);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v765))
                  return 0;
              }
            }
            else if (v15 >> 3 > 0xF9)
            {
              if (v15 >> 3 <= 0x104)
              {
                if (v19 == 250)
                {
                  if (v15 != 210)
                    goto LABEL_9;
                  if (*v5 == 250)
                  {
                    v263 = *v6;
                  }
                  else
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 250;
                    v263 = (CoreML::Specification::BiasLayerParams *)operator new();
                    CoreML::Specification::BiasLayerParams::BiasLayerParams(v263);
                    *v6 = v263;
                  }
                  v481 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v481 < 0)
                  {
                    v482 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v482 < 0)
                      return 0;
                  }
                  else
                  {
                    v482 = *v481;
                    *(_QWORD *)a2 = v481 + 1;
                  }
                  v1070 = google::protobuf::io::CodedInputStream::PushLimit(a2, v482);
                  v1072 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v1072--, 1);
                  *((_DWORD *)a2 + 13) = v1072;
                  if (v1072 < 0 != v291)
                    return 0;
                  v1073 = v1070;
                  result = CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(v263, a2, v1071);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1073))
                    return 0;
                }
                else
                {
                  if (v19 != 260 || v15 != 34)
                    goto LABEL_9;
                  if (*v5 != 260)
                  {
                    CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                    *((_DWORD *)this + 35) = 260;
                    v96 = (CoreML::Specification::MaxLayerParams *)operator new();
                    CoreML::Specification::MaxLayerParams::MaxLayerParams(v96);
                    *v6 = v96;
                  }
                  v97 = *(char **)a2;
                  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v97 < 0)
                  {
                    v98 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                    if (v98 < 0)
                      return 0;
                  }
                  else
                  {
                    v98 = *v97;
                    *(_QWORD *)a2 = v97 + 1;
                  }
                  v611 = (CoreML::Specification::MaxLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v98);
                  v613 = *((_DWORD *)a2 + 13);
                  v291 = __OFSUB__(v613--, 1);
                  *((_DWORD *)a2 + 13) = v613;
                  if (v613 < 0 != v291)
                    return 0;
                  v614 = (int)v611;
                  result = CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(v611, (char **)a2, v612);
                  if (!(_DWORD)result)
                    return result;
                  if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v614))
                    return 0;
                }
              }
              else if (v19 == 261)
              {
                if (v15 != 42)
                  goto LABEL_9;
                if (*v5 != 261)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 261;
                  v195 = (CoreML::Specification::MinLayerParams *)operator new();
                  CoreML::Specification::MinLayerParams::MinLayerParams(v195);
                  *v6 = v195;
                }
                v196 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v196 < 0)
                {
                  v197 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v197 < 0)
                    return 0;
                }
                else
                {
                  v197 = *v196;
                  *(_QWORD *)a2 = v196 + 1;
                }
                v678 = (CoreML::Specification::MinLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v197);
                v680 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v680--, 1);
                *((_DWORD *)a2 + 13) = v680;
                if (v680 < 0 != v291)
                  return 0;
                v681 = (int)v678;
                result = CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(v678, (char **)a2, v679);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v681))
                  return 0;
              }
              else if (v19 == 270)
              {
                if (v15 != 114)
                  goto LABEL_9;
                if (*v5 == 270)
                {
                  v198 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 270;
                  v198 = (CoreML::Specification::DotProductLayerParams *)operator new();
                  CoreML::Specification::DotProductLayerParams::DotProductLayerParams(v198);
                  *v6 = v198;
                }
                v423 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v423 < 0)
                {
                  v424 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v424 < 0)
                    return 0;
                }
                else
                {
                  v424 = *v423;
                  *(_QWORD *)a2 = v423 + 1;
                }
                v956 = google::protobuf::io::CodedInputStream::PushLimit(a2, v424);
                v958 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v958--, 1);
                *((_DWORD *)a2 + 13) = v958;
                if (v958 < 0 != v291)
                  return 0;
                v959 = v956;
                result = CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(v198, (char **)a2, v957);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v959))
                  return 0;
              }
              else
              {
                if (v19 != 280 || v15 != 194)
                  goto LABEL_9;
                if (*v5 == 280)
                {
                  v54 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 280;
                  v54 = (CoreML::Specification::ReduceLayerParams *)operator new();
                  CoreML::Specification::ReduceLayerParams::ReduceLayerParams(v54);
                  *v6 = v54;
                }
                v331 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v331 < 0)
                {
                  v332 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v332 < 0)
                    return 0;
                }
                else
                {
                  v332 = *v331;
                  *(_QWORD *)a2 = v331 + 1;
                }
                v777 = google::protobuf::io::CodedInputStream::PushLimit(a2, v332);
                v779 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v779--, 1);
                *((_DWORD *)a2 + 13) = v779;
                if (v779 < 0 != v291)
                  return 0;
                v780 = v777;
                result = CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(v54, (char **)a2, v778);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v780))
                  return 0;
              }
            }
            else if (v15 >> 3 <= 0xE6)
            {
              if (v19 == 220)
              {
                if (v15 != 226)
                  goto LABEL_9;
                if (*v5 == 220)
                {
                  v244 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 220;
                  v244 = (CoreML::Specification::UnaryFunctionLayerParams *)operator new();
                  CoreML::Specification::UnaryFunctionLayerParams::UnaryFunctionLayerParams(v244);
                  *v6 = v244;
                }
                v461 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v461 < 0)
                {
                  v462 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v462 < 0)
                    return 0;
                }
                else
                {
                  v462 = *v461;
                  *(_QWORD *)a2 = v461 + 1;
                }
                v1032 = google::protobuf::io::CodedInputStream::PushLimit(a2, v462);
                v1034 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v1034--, 1);
                *((_DWORD *)a2 + 13) = v1034;
                if (v1034 < 0 != v291)
                  return 0;
                v1035 = v1032;
                result = CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(v244, (char **)a2, v1033);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1035))
                  return 0;
              }
              else
              {
                if (v19 != 230 || v15 != 50)
                  goto LABEL_9;
                if (*v5 == 230)
                {
                  v76 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 230;
                  v76 = (CoreML::Specification::AddLayerParams *)operator new();
                  CoreML::Specification::AddLayerParams::AddLayerParams(v76);
                  *v6 = v76;
                }
                v355 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v355 < 0)
                {
                  v356 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v356 < 0)
                    return 0;
                }
                else
                {
                  v356 = *v355;
                  *(_QWORD *)a2 = v355 + 1;
                }
                v825 = google::protobuf::io::CodedInputStream::PushLimit(a2, v356);
                v827 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v827--, 1);
                *((_DWORD *)a2 + 13) = v827;
                if (v827 < 0 != v291)
                  return 0;
                v828 = v825;
                result = CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(v76, (char **)a2, v826);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v828))
                  return 0;
              }
            }
            else if (v19 == 231)
            {
              if (v15 != 58)
                goto LABEL_9;
              if (*v5 == 231)
              {
                v151 = *v6;
              }
              else
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 231;
                v151 = (CoreML::Specification::MultiplyLayerParams *)operator new();
                CoreML::Specification::MultiplyLayerParams::MultiplyLayerParams(v151);
                *v6 = v151;
              }
              v389 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v389 < 0)
              {
                v390 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v390 < 0)
                  return 0;
              }
              else
              {
                v390 = *v389;
                *(_QWORD *)a2 = v389 + 1;
              }
              v891 = google::protobuf::io::CodedInputStream::PushLimit(a2, v390);
              v893 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v893--, 1);
              *((_DWORD *)a2 + 13) = v893;
              if (v893 < 0 != v291)
                return 0;
              v894 = v891;
              result = CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(v151, (char **)a2, v892);
              if (!(_DWORD)result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v894))
                return 0;
            }
            else if (v19 == 240)
            {
              if (v15 != 130)
                goto LABEL_9;
              if (*v5 != 240)
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 240;
                v152 = (CoreML::Specification::AverageLayerParams *)operator new();
                CoreML::Specification::AverageLayerParams::AverageLayerParams(v152);
                *v6 = v152;
              }
              v153 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v153 < 0)
              {
                v154 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v154 < 0)
                  return 0;
              }
              else
              {
                v154 = *v153;
                *(_QWORD *)a2 = v153 + 1;
              }
              v643 = (CoreML::Specification::AverageLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v154);
              v645 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v645--, 1);
              *((_DWORD *)a2 + 13) = v645;
              if (v645 < 0 != v291)
                return 0;
              v646 = (int)v643;
              result = CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(v643, (char **)a2, v644);
              if (!(_DWORD)result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v646))
                return 0;
            }
            else
            {
              if (v19 != 245 || v15 != 170)
                goto LABEL_9;
              if (*v5 == 245)
              {
                v31 = *v6;
              }
              else
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 245;
                v31 = (CoreML::Specification::ScaleLayerParams *)operator new();
                CoreML::Specification::ScaleLayerParams::ScaleLayerParams(v31);
                *v6 = v31;
              }
              v313 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v313 < 0)
              {
                v314 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v314 < 0)
                  return 0;
              }
              else
              {
                v314 = *v313;
                *(_QWORD *)a2 = v313 + 1;
              }
              v742 = google::protobuf::io::CodedInputStream::PushLimit(a2, v314);
              v744 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v744--, 1);
              *((_DWORD *)a2 + 13) = v744;
              if (v744 < 0 != v291)
                return 0;
              v745 = v742;
              result = CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(v31, a2, v743);
              if (!(_DWORD)result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v745))
                return 0;
            }
          }
          if (v15 >> 3 <= 0x9F)
            break;
          if (v15 >> 3 > 0xBD)
          {
            if (v15 >> 3 <= 0xD1)
            {
              if (v19 == 190)
              {
                if (v15 != 242)
                  goto LABEL_9;
                if (*v5 == 190)
                {
                  v269 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 190;
                  v269 = (CoreML::Specification::CropLayerParams *)operator new();
                  CoreML::Specification::CropLayerParams::CropLayerParams(v269);
                  *v6 = v269;
                }
                v487 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v487 < 0)
                {
                  v488 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v488 < 0)
                    return 0;
                }
                else
                {
                  v488 = *v487;
                  *(_QWORD *)a2 = v487 + 1;
                }
                v1082 = google::protobuf::io::CodedInputStream::PushLimit(a2, v488);
                v1084 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v1084--, 1);
                *((_DWORD *)a2 + 13) = v1084;
                if (v1084 < 0 != v291)
                  return 0;
                v1085 = v1082;
                result = CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(v269, a2, v1083);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v1085))
                  return 0;
              }
              else
              {
                if (v19 != 200 || v15 != 66)
                  goto LABEL_9;
                if (*v5 == 200)
                {
                  v104 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 200;
                  v104 = (CoreML::Specification::PaddingLayerParams *)operator new();
                  CoreML::Specification::PaddingLayerParams::PaddingLayerParams(v104);
                  *v6 = v104;
                }
                v379 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v379 < 0)
                {
                  v380 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v380 < 0)
                    return 0;
                }
                else
                {
                  v380 = *v379;
                  *(_QWORD *)a2 = v379 + 1;
                }
                v871 = google::protobuf::io::CodedInputStream::PushLimit(a2, v380);
                v873 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v873--, 1);
                *((_DWORD *)a2 + 13) = v873;
                if (v873 < 0 != v291)
                  return 0;
                v874 = v871;
                result = CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(v104, a2, v872);
                if (!(_DWORD)result)
                  return result;
                if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v874))
                  return 0;
              }
            }
            else if (v19 == 210)
            {
              if (v15 != 146)
                goto LABEL_9;
              if (*v5 == 210)
              {
                v209 = *v6;
              }
              else
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 210;
                v209 = (CoreML::Specification::UpsampleLayerParams *)operator new();
                CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(v209);
                *v6 = v209;
              }
              v433 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v433 < 0)
              {
                v434 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v434 < 0)
                  return 0;
              }
              else
              {
                v434 = *v433;
                *(_QWORD *)a2 = v433 + 1;
              }
              v976 = google::protobuf::io::CodedInputStream::PushLimit(a2, v434);
              v978 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v978--, 1);
              *((_DWORD *)a2 + 13) = v978;
              if (v978 < 0 != v291)
                return 0;
              v979 = v976;
              result = CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(v209, a2, v977);
              if (!(_DWORD)result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v979))
                return 0;
            }
            else if (v19 == 211)
            {
              if (v15 != 154)
                goto LABEL_9;
              if (*v5 == 211)
              {
                v210 = *v6;
              }
              else
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 211;
                v210 = (CoreML::Specification::ResizeBilinearLayerParams *)operator new();
                CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(v210);
                *v6 = v210;
              }
              v435 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v435 < 0)
              {
                v436 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v436 < 0)
                  return 0;
              }
              else
              {
                v436 = *v435;
                *(_QWORD *)a2 = v435 + 1;
              }
              v980 = google::protobuf::io::CodedInputStream::PushLimit(a2, v436);
              v982 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v982--, 1);
              *((_DWORD *)a2 + 13) = v982;
              if (v982 < 0 != v291)
                return 0;
              v983 = v980;
              result = CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(v210, a2, v981);
              if (!(_DWORD)result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v983))
                return 0;
            }
            else
            {
              if (v19 != 212 || v15 != 162)
                goto LABEL_9;
              if (*v5 == 212)
              {
                v58 = *v6;
              }
              else
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 212;
                v58 = (CoreML::Specification::CropResizeLayerParams *)operator new();
                CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(v58);
                *v6 = v58;
              }
              v339 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v339 < 0)
              {
                v340 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v340 < 0)
                  return 0;
              }
              else
              {
                v340 = *v339;
                *(_QWORD *)a2 = v339 + 1;
              }
              v793 = google::protobuf::io::CodedInputStream::PushLimit(a2, v340);
              v795 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v795--, 1);
              *((_DWORD *)a2 + 13) = v795;
              if (v795 < 0 != v291)
                return 0;
              v796 = v793;
              result = CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(v58, a2, v794);
              if (!(_DWORD)result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v796))
                return 0;
            }
          }
          else
          {
            if (v15 >> 3 <= 0xA9)
            {
              if (v19 == 160)
              {
                if (v15 != 2)
                  goto LABEL_9;
                if (*v5 == 160)
                {
                  v250 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 160;
                  v250 = (CoreML::Specification::BatchnormLayerParams *)operator new();
                  CoreML::Specification::BatchnormLayerParams::BatchnormLayerParams(v250);
                  *v6 = v250;
                }
                v467 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v467 < 0)
                {
                  v468 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v468 < 0)
                    return 0;
                }
                else
                {
                  v468 = *v467;
                  *(_QWORD *)a2 = v467 + 1;
                }
                v1044 = google::protobuf::io::CodedInputStream::PushLimit(a2, v468);
                v1046 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v1046--, 1);
                *((_DWORD *)a2 + 13) = v1046;
                if (v1046 < 0 != v291)
                  return 0;
                v292 = v1044;
                result = CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(v250, a2, v1045);
                if (!(_DWORD)result)
                  return result;
              }
              else
              {
                if (v19 != 165 || v15 != 42)
                  goto LABEL_9;
                if (*v5 == 165)
                {
                  v84 = *v6;
                }
                else
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 165;
                  v84 = (CoreML::Specification::MeanVarianceNormalizeLayerParams *)operator new();
                  CoreML::Specification::MeanVarianceNormalizeLayerParams::MeanVarianceNormalizeLayerParams(v84);
                  *v6 = v84;
                }
                v359 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v359 < 0)
                {
                  v360 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v360 < 0)
                    return 0;
                }
                else
                {
                  v360 = *v359;
                  *(_QWORD *)a2 = v359 + 1;
                }
                v833 = google::protobuf::io::CodedInputStream::PushLimit(a2, v360);
                v835 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v835--, 1);
                *((_DWORD *)a2 + 13) = v835;
                if (v835 < 0 != v291)
                  return 0;
                v292 = v833;
                result = CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(v84, (char **)a2, v834);
                if (!(_DWORD)result)
                  return result;
              }
              goto LABEL_2002;
            }
            if (v19 == 170)
            {
              if (v15 != 82)
                goto LABEL_9;
              if (*v5 == 170)
              {
                v167 = *v6;
              }
              else
              {
                CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                *((_DWORD *)this + 35) = 170;
                v167 = (CoreML::Specification::L2NormalizeLayerParams *)operator new();
                CoreML::Specification::L2NormalizeLayerParams::L2NormalizeLayerParams(v167);
                *v6 = v167;
              }
              v397 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v397 < 0)
              {
                v398 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v398 < 0)
                  return 0;
              }
              else
              {
                v398 = *v397;
                *(_QWORD *)a2 = v397 + 1;
              }
              v907 = google::protobuf::io::CodedInputStream::PushLimit(a2, v398);
              v909 = *((_DWORD *)a2 + 13);
              v291 = __OFSUB__(v909--, 1);
              *((_DWORD *)a2 + 13) = v909;
              if (v909 < 0 != v291)
                return 0;
              v292 = v907;
              result = CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(v167, (char **)a2, v908);
              if (!(_DWORD)result)
                return result;
              goto LABEL_2002;
            }
            if (v19 == 175)
            {
              if (v15 == 122)
              {
                if (*v5 != 175)
                {
                  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
                  *((_DWORD *)this + 35) = 175;
                  v168 = (CoreML::Specification::SoftmaxLayerParams *)operator new();
                  CoreML::Specification::SoftmaxLayerParams::SoftmaxLayerParams(v168);
                  *v6 = v168;
                }
                v169 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v169 < 0)
                {
                  v170 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v170 < 0)
                    return 0;
                }
                else
                {
                  v170 = *v169;
                  *(_QWORD *)a2 = v169 + 1;
                }
                v659 = (CoreML::Specification::SoftmaxLayerParams *)google::protobuf::io::CodedInputStream::PushLimit(a2, v170);
                v661 = *((_DWORD *)a2 + 13);
                v291 = __OFSUB__(v661--, 1);
                *((_DWORD *)a2 + 13) = v661;
                if (v661 < 0 != v291)
                  return 0;
                v292 = (int)v659;
                result = CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(v659, (char **)a2, v660);
                if (!(_DWORD)result)
                  return result;
                goto LABEL_2002;
              }
              goto LABEL_9;
            }
            if (v19 != 180 || v15 != 162)
              goto LABEL_9;
            if (*v5 == 180)
            {
              v37 = *v6;
            }
            else
            {
              CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
              *((_DWORD *)this + 35) = 180;
              v37 = (CoreML::Specification::LRNLayerParams *)operator new();
              CoreML::Specification::LRNLayerParams::LRNLayerParams(v37);
              *v6 = v37;
            }
            v319 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v319 < 0)
            {
              v320 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v320 < 0)
                return 0;
            }
            else
            {
              v320 = *v319;
              *(_QWORD *)a2 = v319 + 1;
            }
            v754 = google::protobuf::io::CodedInputStream::PushLimit(a2, v320);
            v756 = *((_DWORD *)a2 + 13);
            v291 = __OFSUB__(v756--, 1);
            *((_DWORD *)a2 + 13) = v756;
            if (v756 < 0 != v291)
              return 0;
            v757 = v754;
            result = CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(v37, (char **)a2, v755);
            if (!(_DWORD)result)
              return result;
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v757))
              return 0;
          }
        }
        if (v15 >> 3 > 0x63)
          break;
        switch(v19)
        {
          case 1u:
            if (v15 != 10)
              goto LABEL_9;
            v20 = *v10;
            if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              v20 = *v10;
            }
            result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v20);
            if (!(_DWORD)result)
              return result;
            v22 = *v10;
            if (SHIBYTE((*v10)->__r_.__value_.__r.__words[2]) < 0)
            {
              v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
              size = (*v10)->__r_.__value_.__l.__size_;
            }
            else
            {
              LODWORD(size) = HIBYTE((*v10)->__r_.__value_.__r.__words[2]);
            }
            v562 = "CoreML.Specification.NeuralNetworkLayer.name";
            goto LABEL_2129;
          case 2u:
            if (v15 != 18)
              goto LABEL_9;
            v122 = (int *)*((_QWORD *)this + 4);
            if (!v122)
            {
              v124 = *((_DWORD *)this + 7);
LABEL_2100:
              v1142 = *((_DWORD *)this + 6);
              if (v1142 <= v124)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v9, v124 - v1142 + 1);
                v122 = (int *)*((_QWORD *)this + 4);
              }
              v124 = *v122;
              goto LABEL_2103;
            }
            v123 = *((int *)this + 6);
            v124 = *v122;
            if ((int)v123 < *v122)
            {
              *((_DWORD *)this + 6) = v123 + 1;
              Aligned = *(std::string **)&v122[2 * v123 + 2];
              goto LABEL_2117;
            }
            if (v124 == *((_DWORD *)this + 7))
              goto LABEL_2100;
LABEL_2103:
            *v122 = v124 + 1;
            v1143 = *(google::protobuf::Arena **)v9;
            if (*(_QWORD *)v9)
            {
              Aligned->__r_.__value_.__l.__size_ = 0;
              Aligned->__r_.__value_.__r.__words[2] = 0;
              Aligned->__r_.__value_.__r.__words[0] = 0;
              v1144 = google::protobuf::Arena::AllocateAligned(v1143, 0, 24);
              *v1144 = (google::protobuf::Arena *)Aligned;
              v1144[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
              v1145 = (unint64_t *)((char *)v1143 + 32);
              do
                v1146 = __ldxr(v1145);
              while (__stxr((unint64_t)v1144, v1145));
              v1144[2] = (google::protobuf::Arena *)v1146;
            }
            else
            {
              Aligned = (std::string *)operator new();
              Aligned->__r_.__value_.__l.__size_ = 0;
              Aligned->__r_.__value_.__r.__words[2] = 0;
              Aligned->__r_.__value_.__r.__words[0] = 0;
            }
            v1152 = *((_QWORD *)this + 4);
            v1153 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v1153 + 1;
            *(_QWORD *)(v1152 + 8 * v1153 + 8) = Aligned;
LABEL_2117:
            result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, Aligned);
            if (!(_DWORD)result)
              return result;
            v1154 = *((_QWORD *)this + 4);
            v22 = *(std::string **)(v1154 + 8 * *((int *)this + 6));
            if (SHIBYTE(v22->__r_.__value_.__r.__words[2]) < 0)
            {
              v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
              size = *(_QWORD *)(*(_QWORD *)(v1154 + 8 * *((int *)this + 6)) + 8);
            }
            else
            {
              LODWORD(size) = HIBYTE(v22->__r_.__value_.__r.__words[2]);
            }
            v562 = "CoreML.Specification.NeuralNetworkLayer.input";
            goto LABEL_2129;
          case 3u:
            if (v15 != 26)
              goto LABEL_9;
            v126 = (int *)*((_QWORD *)this + 7);
            if (!v126)
            {
              v128 = *((_DWORD *)this + 13);
LABEL_2108:
              v1147 = *((_DWORD *)this + 12);
              if (v1147 <= v128)
              {
                google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v1158, v128 - v1147 + 1);
                v126 = (int *)*((_QWORD *)this + 7);
              }
              v128 = *v126;
              goto LABEL_2111;
            }
            v127 = *((int *)this + 12);
            v128 = *v126;
            if ((int)v127 < *v126)
            {
              *((_DWORD *)this + 12) = v127 + 1;
              v129 = *(std::string **)&v126[2 * v127 + 2];
              goto LABEL_2124;
            }
            if (v128 == *((_DWORD *)this + 13))
              goto LABEL_2108;
LABEL_2111:
            *v126 = v128 + 1;
            v1148 = *(google::protobuf::Arena **)v1158;
            if (*(_QWORD *)v1158)
            {
              v129->__r_.__value_.__l.__size_ = 0;
              v129->__r_.__value_.__r.__words[2] = 0;
              v129->__r_.__value_.__r.__words[0] = 0;
              v1149 = google::protobuf::Arena::AllocateAligned(v1148, 0, 24);
              *v1149 = (google::protobuf::Arena *)v129;
              v1149[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<std::string>;
              v1150 = (unint64_t *)((char *)v1148 + 32);
              do
                v1151 = __ldxr(v1150);
              while (__stxr((unint64_t)v1149, v1150));
              v1149[2] = (google::protobuf::Arena *)v1151;
            }
            else
            {
              v129 = (std::string *)operator new();
              v129->__r_.__value_.__l.__size_ = 0;
              v129->__r_.__value_.__r.__words[2] = 0;
              v129->__r_.__value_.__r.__words[0] = 0;
            }
            v1155 = *((_QWORD *)this + 7);
            v1156 = *((int *)this + 12);
            *((_DWORD *)this + 12) = v1156 + 1;
            *(_QWORD *)(v1155 + 8 * v1156 + 8) = v129;
LABEL_2124:
            result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v129);
            if (!(_DWORD)result)
              return result;
            v1157 = *((_QWORD *)this + 7);
            v22 = *(std::string **)(v1157 + 8 * *((int *)this + 12));
            if (SHIBYTE(v22->__r_.__value_.__r.__words[2]) < 0)
            {
              v22 = (std::string *)v22->__r_.__value_.__r.__words[0];
              size = *(_QWORD *)(*(_QWORD *)(v1157 + 8 * *((int *)this + 12)) + 8);
            }
            else
            {
              LODWORD(size) = HIBYTE(v22->__r_.__value_.__r.__words[2]);
            }
            v562 = "CoreML.Specification.NeuralNetworkLayer.output";
LABEL_2129:
            if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v22, size, 0, (uint64_t)v562))return 0;
            break;
          case 4u:
            if (v15 != 34)
              goto LABEL_9;
            v130 = (uint64_t)v8;
            goto LABEL_482;
          case 5u:
            if (v15 != 42)
              goto LABEL_9;
            v130 = (uint64_t)v7;
LABEL_482:
            v131 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(v130);
            v132 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v132 < 0)
            {
              v133 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v133 < 0)
                return 0;
            }
            else
            {
              v133 = *v132;
              *(_QWORD *)a2 = v132 + 1;
            }
            v288 = google::protobuf::io::CodedInputStream::PushLimit(a2, v133);
            v290 = *((_DWORD *)a2 + 13);
            v291 = __OFSUB__(v290--, 1);
            *((_DWORD *)a2 + 13) = v290;
            if (v290 < 0 != v291)
              return 0;
            v292 = v288;
            result = CoreML::Specification::Tensor::MergePartialFromCodedStream(v131, a2, v289);
            if (!(_DWORD)result)
              return result;
            goto LABEL_2002;
          case 0xAu:
            if (v15 != 80)
              goto LABEL_9;
            v134 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v134 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v545 & 1) == 0)
                return 0;
            }
            else
            {
              Varint64Fallback = *v134;
              *(_QWORD *)a2 = v134 + 1;
            }
            *((_BYTE *)this + 120) = Varint64Fallback != 0;
            goto LABEL_2;
          default:
            goto LABEL_9;
        }
      }
      if (v15 >> 3 > 0x81)
        break;
      if (v19 == 100)
      {
        if (v15 != 34)
          goto LABEL_9;
        if (*v5 == 100)
        {
          v258 = *v6;
        }
        else
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 100;
          v258 = (CoreML::Specification::ConvolutionLayerParams *)operator new();
          CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(v258);
          *v6 = v258;
        }
        v477 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v477 < 0)
        {
          v478 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v478 < 0)
            return 0;
        }
        else
        {
          v478 = *v477;
          *(_QWORD *)a2 = v477 + 1;
        }
        v1063 = google::protobuf::io::CodedInputStream::PushLimit(a2, v478);
        v1065 = *((_DWORD *)a2 + 13);
        v291 = __OFSUB__(v1065--, 1);
        *((_DWORD *)a2 + 13) = v1065;
        if (v1065 < 0 != v291)
          return 0;
        v292 = v1063;
        result = CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(v258, a2, v1064);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        if (v19 != 120 || v15 != 194)
          goto LABEL_9;
        if (*v5 == 120)
        {
          v91 = *v6;
        }
        else
        {
          CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
          *((_DWORD *)this + 35) = 120;
          v91 = (CoreML::Specification::PoolingLayerParams *)operator new();
          CoreML::Specification::PoolingLayerParams::PoolingLayerParams(v91);
          *v6 = v91;
        }
        v371 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v371 < 0)
        {
          v372 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v372 < 0)
            return 0;
        }
        else
        {
          v372 = *v371;
          *(_QWORD *)a2 = v371 + 1;
        }
        v856 = google::protobuf::io::CodedInputStream::PushLimit(a2, v372);
        v858 = *((_DWORD *)a2 + 13);
        v291 = __OFSUB__(v858--, 1);
        *((_DWORD *)a2 + 13) = v858;
        if (v858 < 0 != v291)
          return 0;
        v292 = v856;
        result = CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(v91, a2, v857);
        if (!(_DWORD)result)
          return result;
      }
LABEL_2002:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v292))
        return 0;
    }
    if (v19 == 130)
    {
      if (v15 != 18)
        goto LABEL_9;
      if (*v5 == 130)
      {
        v181 = *v6;
      }
      else
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 130;
        v181 = (CoreML::Specification::ActivationParams *)operator new();
        CoreML::Specification::ActivationParams::ActivationParams(v181);
        *v6 = v181;
      }
      v419 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v419 < 0)
      {
        v420 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v420 < 0)
          return 0;
      }
      else
      {
        v420 = *v419;
        *(_QWORD *)a2 = v419 + 1;
      }
      v950 = google::protobuf::io::CodedInputStream::PushLimit(a2, v420);
      v952 = *((_DWORD *)a2 + 13);
      v291 = __OFSUB__(v952--, 1);
      *((_DWORD *)a2 + 13) = v952;
      if (v952 < 0 != v291)
        return 0;
      v292 = v950;
      result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v181, a2, v951);
      if (!(_DWORD)result)
        return result;
      goto LABEL_2002;
    }
    if (v19 == 140)
    {
      if (v15 != 98)
        goto LABEL_9;
      if (*v5 == 140)
      {
        v182 = *v6;
      }
      else
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 140;
        v182 = (CoreML::Specification::InnerProductLayerParams *)operator new();
        CoreML::Specification::InnerProductLayerParams::InnerProductLayerParams(v182);
        *v6 = v182;
      }
      v421 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v421 < 0)
      {
        v422 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v422 < 0)
          return 0;
      }
      else
      {
        v422 = *v421;
        *(_QWORD *)a2 = v421 + 1;
      }
      v953 = google::protobuf::io::CodedInputStream::PushLimit(a2, v422);
      v955 = *((_DWORD *)a2 + 13);
      v291 = __OFSUB__(v955--, 1);
      *((_DWORD *)a2 + 13) = v955;
      if (v955 < 0 != v291)
        return 0;
      v292 = v953;
      result = CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(v182, a2, v954);
      if (!(_DWORD)result)
        return result;
      goto LABEL_2002;
    }
    if (v19 == 150 && v15 == 178)
    {
      if (*v5 == 150)
      {
        v47 = *v6;
      }
      else
      {
        CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
        *((_DWORD *)this + 35) = 150;
        v47 = (CoreML::Specification::EmbeddingLayerParams *)operator new();
        CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(v47);
        *v6 = v47;
      }
      v329 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v329 < 0)
      {
        v330 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v330 < 0)
          return 0;
      }
      else
      {
        v330 = *v329;
        *(_QWORD *)a2 = v329 + 1;
      }
      v774 = google::protobuf::io::CodedInputStream::PushLimit(a2, v330);
      v776 = *((_DWORD *)a2 + 13);
      v291 = __OFSUB__(v776--, 1);
      *((_DWORD *)a2 + 13) = v776;
      if (v776 < 0 != v291)
        return 0;
      v292 = v774;
      result = CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(v47, a2, v775);
      if (!(_DWORD)result)
        return result;
      goto LABEL_2002;
    }
LABEL_9:
    if (!(_DWORD)v15 || (v15 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v15, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B6E1C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40594C3D85);
  _Unwind_Resume(a1);
}

CoreML::Specification::NeuralNetworkPreprocessing *google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(uint64_t a1)
{
  int *v2;
  int v3;
  int v4;
  CoreML::Specification::NeuralNetworkPreprocessing *Aligned;
  google::protobuf::Arena *v6;
  google::protobuf::Arena **v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    v3 = *(_DWORD *)(a1 + 8);
    v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v4 - v3 + 1);
      v2 = *(int **)(a1 + 16);
    }
    v4 = *v2;
    goto LABEL_9;
  }
  v3 = *(_DWORD *)(a1 + 8);
  v4 = *v2;
  if (v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::NeuralNetworkPreprocessing **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12))
    goto LABEL_6;
LABEL_9:
  *v2 = v4 + 1;
  v6 = *(google::protobuf::Arena **)a1;
  if (*(_QWORD *)a1)
  {
    CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(Aligned);
    v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    *v7 = Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>;
    v8 = (unint64_t *)((char *)v6 + 32);
    do
      v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    v7[2] = (google::protobuf::Arena *)v9;
  }
  else
  {
    Aligned = (CoreML::Specification::NeuralNetworkPreprocessing *)operator new();
    CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(Aligned);
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1D3B6E900(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkPreprocessing::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkPreprocessing *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  std::string *v12;
  _BOOL8 result;
  unsigned int *v14;
  std::string::size_type size;
  CoreML::Specification::NeuralNetworkMeanImage *v16;
  CoreML::Specification::NeuralNetworkImageScaler *v17;
  char *v19;
  int VarintSizeAsIntFallback;
  char *v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;

  v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_26;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_26;
LABEL_8:
        v10 = v8 >> 3;
        if (v8 >> 3 == 11)
        {
          if (v8 != 90)
            goto LABEL_26;
          if (*((_DWORD *)this + 9) == 11)
          {
            v16 = (CoreML::Specification::NeuralNetworkMeanImage *)*((_QWORD *)this + 3);
          }
          else
          {
            CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
            *((_DWORD *)this + 9) = 11;
            v16 = (CoreML::Specification::NeuralNetworkMeanImage *)operator new();
            CoreML::Specification::NeuralNetworkMeanImage::NeuralNetworkMeanImage(v16);
            *((_QWORD *)this + 3) = v16;
          }
          v19 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v19;
            *(_QWORD *)a2 = v19 + 1;
          }
          v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v25 = *((_DWORD *)a2 + 13);
          v26 = __OFSUB__(v25--, 1);
          *((_DWORD *)a2 + 13) = v25;
          if (v25 < 0 != v26)
            return 0;
          v27 = v23;
          result = CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(v16, (char **)a2, v24);
          if (!result)
            return result;
          goto LABEL_47;
        }
        if (v10 != 10)
          break;
        if (v8 != 82)
          goto LABEL_26;
        if (*((_DWORD *)this + 9) == 10)
        {
          v17 = (CoreML::Specification::NeuralNetworkImageScaler *)*((_QWORD *)this + 3);
        }
        else
        {
          CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
          *((_DWORD *)this + 9) = 10;
          v17 = (CoreML::Specification::NeuralNetworkImageScaler *)operator new();
          CoreML::Specification::NeuralNetworkImageScaler::NeuralNetworkImageScaler(v17);
          *((_QWORD *)this + 3) = v17;
        }
        v21 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
        {
          v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v22 < 0)
            return 0;
        }
        else
        {
          v22 = *v21;
          *(_QWORD *)a2 = v21 + 1;
        }
        v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
        v30 = *((_DWORD *)a2 + 13);
        v26 = __OFSUB__(v30--, 1);
        *((_DWORD *)a2 + 13) = v30;
        if (v30 < 0 != v26)
          return 0;
        v27 = v28;
        result = CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(v17, a2, v29);
        if (!result)
          return result;
LABEL_47:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27))
          return 0;
      }
      if (v10 != 1 || v8 != 10)
        break;
      v12 = *v5;
      if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v5;
      }
      result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v12);
      if (!result)
        return result;
      v14 = (unsigned int *)*v5;
      if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
      {
        v14 = *(unsigned int **)v14;
        size = (*v5)->__r_.__value_.__l.__size_;
      }
      else
      {
        LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
      }
      if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v14, size, 0, (uint64_t)"CoreML.Specification.NeuralNetworkPreprocessing.featureName"))return 0;
    }
LABEL_26:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B6EBEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

CoreML::Specification::NeuralNetworkImageScaler *CoreML::Specification::NeuralNetworkImageScaler::NeuralNetworkImageScaler(CoreML::Specification::NeuralNetworkImageScaler *this)
{
  *(_QWORD *)this = &off_1E9561B58;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkImageScaler *)&CoreML::Specification::_NeuralNetworkImageScaler_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B6EC7C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkImageScaler::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkImageScaler *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  BOOL v11;
  _BOOL8 result;
  unsigned int TagFallback;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unsigned int v25;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *(unsigned __int8 **)a2;
          v6 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v6)
          {
            LODWORD(v8) = 0;
          }
          else
          {
            v7 = v5 + 1;
            v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(_QWORD *)a2 = v7;
              v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0)
                goto LABEL_8;
              goto LABEL_19;
            }
            if ((unint64_t)v7 < v6)
            {
              v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(_QWORD *)a2 = v5 + 2;
                v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_19;
              }
            }
          }
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0)
            goto LABEL_8;
LABEL_19:
          v14 = v9 >> 3;
          if (v9 >> 3 <= 0x14)
            break;
          if (v14 == 21)
          {
            if (v9 != 173)
              goto LABEL_8;
            v25 = 0;
            v19 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
            {
              result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result)
                return result;
              v20 = v25;
            }
            else
            {
              v20 = *v19;
              *(_QWORD *)a2 = v19 + 1;
            }
            *((_DWORD *)this + 7) = v20;
          }
          else if (v14 == 22)
          {
            if (v9 != 181)
              goto LABEL_8;
            v25 = 0;
            v21 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
            {
              result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result)
                return result;
              v22 = v25;
            }
            else
            {
              v22 = *v21;
              *(_QWORD *)a2 = v21 + 1;
            }
            *((_DWORD *)this + 8) = v22;
          }
          else
          {
            if (v14 != 30 || v9 != 245)
              goto LABEL_8;
            v25 = 0;
            v15 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
            {
              result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
              if (!result)
                return result;
              v16 = v25;
            }
            else
            {
              v16 = *v15;
              *(_QWORD *)a2 = v15 + 1;
            }
            *((_DWORD *)this + 4) = v16;
          }
        }
        if (v14 == 10)
          break;
        if (v14 != 20 || v9 != 165)
          goto LABEL_8;
        v25 = 0;
        v17 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
          if (!result)
            return result;
          v18 = v25;
        }
        else
        {
          v18 = *v17;
          *(_QWORD *)a2 = v17 + 1;
        }
        *((_DWORD *)this + 6) = v18;
      }
      if (v9 != 85)
        break;
      v25 = 0;
      v23 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
        if (!result)
          return result;
        v24 = v25;
      }
      else
      {
        v24 = *v23;
        *(_QWORD *)a2 = v23 + 1;
      }
      *((_DWORD *)this + 5) = v24;
    }
LABEL_8:
    if ((_DWORD)v9)
      v11 = (v9 & 7) == 4;
    else
      v11 = 1;
    result = v11;
    if (v11)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::NeuralNetworkMeanImage *CoreML::Specification::NeuralNetworkMeanImage::NeuralNetworkMeanImage(CoreML::Specification::NeuralNetworkMeanImage *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9560B50;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::NeuralNetworkMeanImage *)&CoreML::Specification::_NeuralNetworkMeanImage_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B6EF78(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NeuralNetworkMeanImage::MergePartialFromCodedStream(CoreML::Specification::NeuralNetworkMeanImage *this, char **a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  unsigned int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  int v16;
  signed int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  _BOOL8 result;
  signed int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *a2;
          if (*a2 < a2[1])
            break;
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0)
            goto LABEL_8;
LABEL_14:
          if ((_DWORD)v8)
            v12 = (v8 & 7) == 4;
          else
            v12 = 1;
          if (v12)
            return 1;
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_14;
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8)
          goto LABEL_14;
        if (v8 != 13)
          break;
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0;
      }
      if (v8 != 10)
        goto LABEL_14;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0)
        return 0;
      v13 = *((_DWORD *)a2 + 12);
      v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v15 = *((_DWORD *)a2 + 10);
      v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v17 = *v5;
      v18 = VarintSizeAsIntFallback >> 2;
      v19 = v16 >= v14 ? v14 : v16;
      v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback)
        break;
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1)
          v21 = 1;
        else
          v21 = VarintSizeAsIntFallback >> 2;
        do
        {
          v30 = 0;
          v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result)
              return result;
            v23 = v30;
            v17 = *v5;
          }
          else
          {
            v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            v17 = *v5;
          }
          v24 = *((_QWORD *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      v27 = *((_QWORD *)this + 3);
      v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1)
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
    }
    else
    {
      v27 = *((_QWORD *)this + 3);
    }
    *v5 = v26;
    v29 = v27 + 8;
    if (!v27)
      v29 = 0;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    result = 0;
    *v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::NeuralNetworkPreprocessing *CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(CoreML::Specification::NeuralNetworkPreprocessing *this)
{
  *(_QWORD *)this = &off_1E95627D0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::NeuralNetworkPreprocessing *)&CoreML::Specification::_NeuralNetworkPreprocessing_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B6F2F0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::Tensor *google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(uint64_t a1)
{
  int *v2;
  int v3;
  int v4;
  CoreML::Specification::Tensor *Aligned;
  google::protobuf::Arena *v6;
  google::protobuf::Arena **v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    v3 = *(_DWORD *)(a1 + 8);
    v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v4 - v3 + 1);
      v2 = *(int **)(a1 + 16);
    }
    v4 = *v2;
    goto LABEL_9;
  }
  v3 = *(_DWORD *)(a1 + 8);
  v4 = *v2;
  if (v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::Tensor **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12))
    goto LABEL_6;
LABEL_9:
  *v2 = v4 + 1;
  v6 = *(google::protobuf::Arena **)a1;
  if (*(_QWORD *)a1)
  {
    CoreML::Specification::Tensor::Tensor(Aligned);
    v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    *v7 = Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>;
    v8 = (unint64_t *)((char *)v6 + 32);
    do
      v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    v7[2] = (google::protobuf::Arena *)v9;
  }
  else
  {
    Aligned = (CoreML::Specification::Tensor *)operator new();
    CoreML::Specification::Tensor::Tensor(Aligned);
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1D3B6F434(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Tensor::MergePartialFromCodedStream(CoreML::Specification::Tensor *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v12;
  int VarintSizeAsIntFallback;
  char *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char *v21;
  unint64_t v22;
  unint64_t Varint64Fallback;
  char v24;
  signed int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  int v30;
  uint64_t Varint32Fallback;

  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_13;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_13;
LABEL_8:
        if (v8 >> 3 != 2)
          break;
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(18, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 18)
            goto LABEL_13;
          v12 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v17 = *((_DWORD *)a2 + 10);
            v18 = *((int *)a2 + 11);
            v19 = *((_QWORD *)a2 + 1);
            v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF)
              break;
            v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0)
                return 0;
              v22 = Varint64Fallback;
            }
            else
            {
              v22 = *v21;
              *(_QWORD *)a2 = v21 + 1;
            }
            v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              v25 = *v5;
            }
            v26 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(_QWORD *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 10) = v16;
          v27 = v19 + v18;
          *((_QWORD *)a2 + 1) = v19 + v18;
          v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16)
            v28 = v16;
          v29 = __OFSUB__(v20, v28);
          v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0))
            v30 = 0;
          else
            *((_QWORD *)a2 + 1) = v27 - v30;
          *((_DWORD *)a2 + 11) = v30;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 8)
        break;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v15 = 0;
        goto LABEL_48;
      }
      v15 = *v14;
      if (*v14 < 0)
      {
LABEL_48:
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v15);
        *((_DWORD *)this + 9) = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
      }
      else
      {
        *((_DWORD *)this + 9) = v15;
        *(_QWORD *)a2 = v14 + 1;
      }
    }
LABEL_13:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

uint64_t CoreML::Specification::NeuralNetworkLayer::clear_layer(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 140);
  if (v2 > 879)
  {
    if (v2 > 1139)
    {
      if (v2 <= 1274)
      {
        if (v2 <= 1199)
        {
          if (v2 <= 1169)
          {
            if (v2 > 1149)
            {
              if (v2 != 1150 && v2 != 1155)
                goto LABEL_78;
            }
            else if (v2 != 1140 && v2 != 1145)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1179)
          {
            if (v2 != 1170 && v2 != 1175)
              goto LABEL_78;
          }
          else if (v2 != 1180 && v2 != 1190 && v2 != 1195)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1249)
        {
          if (v2 <= 1259)
          {
            if (v2 != 1250 && v2 != 1255)
              goto LABEL_78;
          }
          else if (v2 != 1260 && v2 != 1265 && v2 != 1270)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1214)
        {
          if (v2 != 1200 && v2 != 1210)
            goto LABEL_78;
        }
        else if (v2 != 1215 && v2 != 1220 && v2 != 1230)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1349)
      {
        if (v2 > 1312)
        {
          if (v2 <= 1319)
          {
            if (v2 != 1313 && v2 != 1315)
              goto LABEL_78;
          }
          else if (v2 != 1320 && v2 != 1325 && v2 != 1330)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1284)
        {
          if (v2 != 1275 && v2 != 1280)
            goto LABEL_78;
        }
        else if (v2 != 1285 && v2 != 1290 && v2 != 1295)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 1454)
      {
        if (v2 != 1350 && v2 != 1400 && v2 != 1450)
          goto LABEL_78;
        goto LABEL_76;
      }
      switch(v2)
      {
        case 1455:
        case 1460:
        case 1461:
        case 1465:
        case 1466:
        case 1470:
        case 1471:
          goto LABEL_76;
        default:
          break;
      }
    }
    else
    {
      if (v2 > 994)
      {
        if (v2 > 1079)
        {
          if (v2 > 1109)
          {
            if (v2 <= 1124)
            {
              if (v2 != 1110 && v2 != 1120)
                goto LABEL_78;
            }
            else if (v2 != 1125 && v2 != 1130 && v2 != 1135)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 1089)
          {
            if (v2 != 1080 && v2 != 1085)
              goto LABEL_78;
          }
          else if (v2 != 1090 && v2 != 1100 && v2 != 1105)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 1024)
        {
          if (v2 <= 1044)
          {
            if (v2 != 1025 && v2 != 1040)
              goto LABEL_78;
          }
          else if (v2 != 1045 && v2 != 1065 && v2 != 1070)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 1004)
        {
          if (v2 != 995 && v2 != 1000)
            goto LABEL_78;
        }
        else if (v2 != 1005 && v2 != 1015 && v2 != 1020)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 <= 939)
      {
        if (v2 > 904)
        {
          if (v2 <= 924)
          {
            if (v2 != 905 && v2 != 920)
              goto LABEL_78;
          }
          else if (v2 != 925 && v2 != 930 && v2 != 935)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 889)
        {
          if (v2 != 880 && v2 != 885)
            goto LABEL_78;
        }
        else if (v2 != 890 && v2 != 895 && v2 != 900)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      if (v2 > 959)
      {
        if (v2 <= 974)
        {
          if (v2 != 960 && v2 != 965)
            goto LABEL_78;
        }
        else if (v2 != 975 && v2 != 980 && v2 != 985)
        {
          goto LABEL_78;
        }
        goto LABEL_76;
      }
      switch(v2)
      {
        case 945:
        case 950:
        case 952:
        case 954:
          goto LABEL_76;
        case 946:
        case 947:
        case 948:
        case 949:
        case 951:
        case 953:
          break;
        default:
          if (v2 == 940)
            goto LABEL_76;
          break;
      }
    }
  }
  else
  {
    if (v2 <= 604)
    {
      if (v2 > 249)
      {
        if (v2 > 329)
        {
          if (v2 > 409)
          {
            if (v2 <= 429)
            {
              if (v2 != 410 && v2 != 420)
                goto LABEL_78;
            }
            else if (v2 != 430 && v2 != 500 && v2 != 600)
            {
              goto LABEL_78;
            }
          }
          else if (v2 <= 344)
          {
            if (v2 != 330 && v2 != 340)
              goto LABEL_78;
          }
          else if (v2 != 345 && v2 != 350 && v2 != 400)
          {
            goto LABEL_78;
          }
        }
        else if (v2 > 289)
        {
          if (v2 <= 300)
          {
            if (v2 != 290 && v2 != 300)
              goto LABEL_78;
          }
          else if (v2 != 301 && v2 != 310 && v2 != 320)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 260)
        {
          if (v2 != 250 && v2 != 260)
            goto LABEL_78;
        }
        else if (v2 != 261 && v2 != 270 && v2 != 280)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 189)
      {
        if (v2 > 219)
        {
          if (v2 <= 230)
          {
            if (v2 != 220 && v2 != 230)
              goto LABEL_78;
          }
          else if (v2 != 231 && v2 != 240 && v2 != 245)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 209)
        {
          if (v2 != 190 && v2 != 200)
            goto LABEL_78;
        }
        else if (v2 != 210 && v2 != 211 && v2 != 212)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 159)
      {
        if (v2 <= 169)
        {
          if (v2 != 160 && v2 != 165)
            goto LABEL_78;
        }
        else if (v2 != 170 && v2 != 175 && v2 != 180)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 129)
      {
        if (v2 != 100 && v2 != 120)
          goto LABEL_78;
      }
      else if (v2 != 130 && v2 != 140 && v2 != 150)
      {
        goto LABEL_78;
      }
LABEL_76:
      this = *(_QWORD *)(this + 128);
      if (this)
        this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
      goto LABEL_78;
    }
    if (v2 <= 759)
    {
      if (v2 > 684)
      {
        if (v2 > 729)
        {
          if (v2 <= 739)
          {
            if (v2 != 730 && v2 != 735)
              goto LABEL_78;
          }
          else if (v2 != 740 && v2 != 750 && v2 != 755)
          {
            goto LABEL_78;
          }
        }
        else if (v2 <= 709)
        {
          if (v2 != 685 && v2 != 700)
            goto LABEL_78;
        }
        else if (v2 != 710 && v2 != 715 && v2 != 720)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 639)
      {
        if (v2 <= 664)
        {
          if (v2 != 640 && v2 != 660)
            goto LABEL_78;
        }
        else if (v2 != 665 && v2 != 670 && v2 != 680)
        {
          goto LABEL_78;
        }
      }
      else if (v2 <= 619)
      {
        if (v2 != 605 && v2 != 615)
          goto LABEL_78;
      }
      else if (v2 != 620 && v2 != 625 && v2 != 635)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 <= 824)
    {
      if (v2 > 789)
      {
        if (v2 > 814)
        {
          if (v2 != 815 && v2 != 820)
            goto LABEL_78;
        }
        else if (v2 != 790 && v2 != 795)
        {
          goto LABEL_78;
        }
      }
      else if (v2 > 774)
      {
        if (v2 != 775 && v2 != 780)
          goto LABEL_78;
      }
      else if (v2 != 760 && v2 != 770)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    if (v2 > 849)
    {
      if (v2 <= 864)
      {
        if (v2 != 850 && v2 != 855)
          goto LABEL_78;
      }
      else if (v2 != 865 && v2 != 870 && v2 != 875)
      {
        goto LABEL_78;
      }
      goto LABEL_76;
    }
    switch(v2)
    {
      case 825:
      case 827:
      case 830:
      case 832:
        goto LABEL_76;
      case 826:
      case 828:
      case 829:
      case 831:
        break;
      default:
        if (v2 == 840 || v2 == 845)
          goto LABEL_76;
        break;
    }
  }
LABEL_78:
  *(_DWORD *)(v1 + 140) = 0;
  return this;
}

CoreML::Specification::ConvolutionLayerParams *CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(CoreML::Specification::ConvolutionLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95607C0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_OWORD *)((char *)this + 138) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_QWORD *)this + 21) = 0;
  return this;
}

void sub_1D3B6FEF8(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = (_QWORD *)v2[12];
  if (v4 && !*v4)
    operator delete(v4);
  v5 = (_QWORD *)v2[9];
  if (v5 && !*v5)
    operator delete(v5);
  v6 = (_QWORD *)v2[6];
  if (v6 && !*v6)
    operator delete(v6);
  v7 = (_QWORD *)v2[3];
  if (v7)
  {
    if (!*v7)
      operator delete(v7);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConvolutionLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConvolutionLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned __int8 *v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  BOOL v15;
  unsigned int TagFallback;
  unsigned int v17;
  CoreML::Specification::WeightParams *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  int v23;
  char *v24;
  int v25;
  char *v26;
  unint64_t v27;
  CoreML::Specification::ValidPadding *v28;
  CoreML::Specification::SamePadding *v29;
  char *v30;
  int VarintSizeAsIntFallback;
  char *v32;
  int v33;
  char *v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  BOOL v39;
  int v40;
  uint64_t result;
  unsigned int v42;
  google::protobuf::io::CodedInputStream *v43;
  uint64_t v44;
  char *v45;
  int v46;
  char *v47;
  int v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  char v68;
  signed int v69;
  uint64_t v70;
  int v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  signed int v76;
  uint64_t v77;
  int v78;
  char *v79;
  unint64_t v80;
  unint64_t Varint64Fallback;
  char v82;
  signed int v83;
  uint64_t v84;
  int v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  char v89;
  signed int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;

  v5 = (unsigned int *)((char *)this + 88);
  v6 = (unsigned int *)((char *)this + 64);
  v7 = (unsigned int *)((char *)this + 40);
  v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v9 = *(unsigned __int8 **)a2;
          v10 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v10)
          {
            LODWORD(v12) = 0;
LABEL_16:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
            v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v13 & 0x100000000) == 0)
              goto LABEL_9;
            goto LABEL_17;
          }
          v11 = v9 + 1;
          v12 = *v9;
          if ((char)*v9 < 1)
          {
            if ((unint64_t)v11 < v10)
            {
              v14 = *v11;
              if ((v12 & ~v14) >= 0x80)
              {
                *(_QWORD *)a2 = v9 + 2;
                v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
            goto LABEL_16;
          }
          *(_QWORD *)a2 = v11;
          v13 = v12 | 0x100000000;
          if ((v13 & 0x100000000) == 0)
            goto LABEL_9;
LABEL_17:
          v17 = v13 >> 3;
          if (v13 >> 3 > 0x31)
            break;
          if (v13 >> 3 > 0x13)
          {
            if (v17 == 20)
            {
              if (v13 != 160)
              {
                if (v13 != 162)
                  goto LABEL_9;
                v30 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v30 < 0)
                {
                  VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (VarintSizeAsIntFallback < 0)
                    return 0;
                }
                else
                {
                  VarintSizeAsIntFallback = *v30;
                  *(_QWORD *)a2 = v30 + 1;
                }
                v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                while (1)
                {
                  v78 = *((_DWORD *)a2 + 10);
                  v62 = *((int *)a2 + 11);
                  v63 = *((_QWORD *)a2 + 1);
                  v64 = *((_DWORD *)a2 + 6);
                  if (v78 == 0x7FFFFFFF)
                    break;
                  v79 = *(char **)a2;
                  if ((int)(v78 - v64 + v62 + v63 - *(_QWORD *)a2) < 1)
                    break;
                  if ((unint64_t)v79 >= v63 || *v79 < 0)
                  {
                    Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v82 & 1) == 0)
                      return 0;
                    v80 = Varint64Fallback;
                  }
                  else
                  {
                    v80 = *v79;
                    *(_QWORD *)a2 = v79 + 1;
                  }
                  v83 = *((_DWORD *)this + 4);
                  if (v83 == *((_DWORD *)this + 5))
                  {
                    google::protobuf::RepeatedField<double>::Reserve(v8, v83 + 1);
                    v83 = *v8;
                  }
                  v84 = *((_QWORD *)this + 3);
                  *((_DWORD *)this + 4) = v83 + 1;
                  *(_QWORD *)(v84 + 8 * v83 + 8) = v80;
                }
                goto LABEL_175;
              }
              v42 = 162;
              v43 = a2;
              v44 = (uint64_t)v8;
              goto LABEL_98;
            }
            if (v17 == 30)
            {
              if (v13 != 240)
              {
                if (v13 != 242)
                  goto LABEL_9;
                v32 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v32 < 0)
                {
                  v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                  if (v33 < 0)
                    return 0;
                }
                else
                {
                  v33 = *v32;
                  *(_QWORD *)a2 = v32 + 1;
                }
                v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
                while (1)
                {
                  v85 = *((_DWORD *)a2 + 10);
                  v62 = *((int *)a2 + 11);
                  v63 = *((_QWORD *)a2 + 1);
                  v64 = *((_DWORD *)a2 + 6);
                  if (v85 == 0x7FFFFFFF)
                    break;
                  v86 = *(char **)a2;
                  if ((int)(v85 - v64 + v62 + v63 - *(_QWORD *)a2) < 1)
                    break;
                  if ((unint64_t)v86 >= v63 || *v86 < 0)
                  {
                    v88 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                    if ((v89 & 1) == 0)
                      return 0;
                    v87 = v88;
                  }
                  else
                  {
                    v87 = *v86;
                    *(_QWORD *)a2 = v86 + 1;
                  }
                  v90 = *((_DWORD *)this + 10);
                  if (v90 == *((_DWORD *)this + 11))
                  {
                    google::protobuf::RepeatedField<double>::Reserve(v7, v90 + 1);
                    v90 = *v7;
                  }
                  v91 = *((_QWORD *)this + 6);
                  *((_DWORD *)this + 10) = v90 + 1;
                  *(_QWORD *)(v91 + 8 * v90 + 8) = v87;
                }
                goto LABEL_175;
              }
              v42 = 242;
              v43 = a2;
              v44 = (uint64_t)v7;
              goto LABEL_98;
            }
            if (v17 != 40)
              goto LABEL_9;
            if (v13 == 64)
            {
              v42 = 322;
              v43 = a2;
              v44 = (uint64_t)v6;
              goto LABEL_98;
            }
            if (v13 != 66)
              goto LABEL_9;
            v22 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
            {
              v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v23 < 0)
                return 0;
            }
            else
            {
              v23 = *v22;
              *(_QWORD *)a2 = v22 + 1;
            }
            v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
            while (1)
            {
              v61 = *((_DWORD *)a2 + 10);
              v62 = *((int *)a2 + 11);
              v63 = *((_QWORD *)a2 + 1);
              v64 = *((_DWORD *)a2 + 6);
              if (v61 == 0x7FFFFFFF)
                break;
              v65 = *(char **)a2;
              if ((int)(v61 - v64 + v62 + v63 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v65 >= v63 || *v65 < 0)
              {
                v67 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v68 & 1) == 0)
                  return 0;
                v66 = v67;
              }
              else
              {
                v66 = *v65;
                *(_QWORD *)a2 = v65 + 1;
              }
              v69 = *((_DWORD *)this + 16);
              if (v69 == *((_DWORD *)this + 17))
              {
                google::protobuf::RepeatedField<double>::Reserve(v6, v69 + 1);
                v69 = *v6;
              }
              v70 = *((_QWORD *)this + 9);
              *((_DWORD *)this + 16) = v69 + 1;
              *(_QWORD *)(v70 + 8 * v69 + 8) = v66;
            }
LABEL_175:
            *((_DWORD *)a2 + 10) = v60;
            v92 = v63 + v62;
            *((_QWORD *)a2 + 1) = v63 + v62;
            v93 = *((_DWORD *)a2 + 12);
            if (v93 >= v60)
              v93 = v60;
            v39 = __OFSUB__(v64, v93);
            v94 = v64 - v93;
            if ((v94 < 0) ^ v39 | (v94 == 0))
              v94 = 0;
            else
              *((_QWORD *)a2 + 1) = v92 - v94;
            *((_DWORD *)a2 + 11) = v94;
            *((_BYTE *)a2 + 36) = 0;
          }
          else if (v17 == 1)
          {
            if (v13 != 8)
              goto LABEL_9;
            v19 = *(char **)a2;
            if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((_QWORD *)this + 16) = *v19;
              goto LABEL_67;
            }
            *((_QWORD *)this + 16) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v52 & 1) == 0)
              return 0;
          }
          else if (v17 == 2)
          {
            if (v13 != 16)
              goto LABEL_9;
            v19 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
            {
              *((_QWORD *)this + 17) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v53 & 1) == 0)
                return 0;
            }
            else
            {
              *((_QWORD *)this + 17) = *v19;
LABEL_67:
              *(_QWORD *)a2 = v19 + 1;
            }
          }
          else
          {
            if (v17 != 10 || v13 != 80)
              goto LABEL_9;
            v19 = *(char **)a2;
            if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v19 & 0x80000000) == 0)
            {
              *((_QWORD *)this + 18) = *v19;
              goto LABEL_67;
            }
            *((_QWORD *)this + 18) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v49 & 1) == 0)
              return 0;
          }
        }
        if (v13 >> 3 <= 0x45)
          break;
        if (v13 >> 3 > 0x5A)
        {
          if (v17 == 91)
          {
            if (v13 == 218)
            {
              v18 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 15);
              if (!v18)
              {
                v18 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v18);
                *((_QWORD *)this + 15) = v18;
              }
              goto LABEL_87;
            }
LABEL_9:
            if ((_DWORD)v13)
              v15 = (v13 & 7) == 4;
            else
              v15 = 1;
            if (v15)
              return 1;
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0;
          }
          else
          {
            if (v17 != 100)
              goto LABEL_9;
            if (v13 != 32)
            {
              if (v13 != 34)
                goto LABEL_9;
              v24 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v24 < 0)
              {
                v25 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v25 < 0)
                  return 0;
              }
              else
              {
                v25 = *v24;
                *(_QWORD *)a2 = v24 + 1;
              }
              v60 = google::protobuf::io::CodedInputStream::PushLimit(a2, v25);
              while (1)
              {
                v71 = *((_DWORD *)a2 + 10);
                v62 = *((int *)a2 + 11);
                v63 = *((_QWORD *)a2 + 1);
                v64 = *((_DWORD *)a2 + 6);
                if (v71 == 0x7FFFFFFF)
                  break;
                v72 = *(char **)a2;
                if ((int)(v71 - v64 + v62 + v63 - *(_QWORD *)a2) < 1)
                  break;
                if ((unint64_t)v72 >= v63 || *v72 < 0)
                {
                  v74 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                  if ((v75 & 1) == 0)
                    return 0;
                  v73 = v74;
                }
                else
                {
                  v73 = *v72;
                  *(_QWORD *)a2 = v72 + 1;
                }
                v76 = *((_DWORD *)this + 22);
                if (v76 == *((_DWORD *)this + 23))
                {
                  google::protobuf::RepeatedField<double>::Reserve(v5, v76 + 1);
                  v76 = *v5;
                }
                v77 = *((_QWORD *)this + 12);
                *((_DWORD *)this + 22) = v76 + 1;
                *(_QWORD *)(v77 + 8 * v76 + 8) = v73;
              }
              goto LABEL_175;
            }
            v42 = 802;
            v43 = a2;
            v44 = (uint64_t)v5;
LABEL_98:
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v42, v43, v44) & 1) == 0)return 0;
          }
        }
        else
        {
          if (v17 != 70)
          {
            if (v17 == 90 && v13 == 210)
            {
              v18 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 14);
              if (!v18)
              {
                v18 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v18);
                *((_QWORD *)this + 14) = v18;
              }
LABEL_87:
              v34 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v34 < 0)
              {
                v35 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (v35 < 0)
                  return 0;
              }
              else
              {
                v35 = *v34;
                *(_QWORD *)a2 = v34 + 1;
              }
              v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, v35);
              v38 = *((_DWORD *)a2 + 13);
              v39 = __OFSUB__(v38--, 1);
              *((_DWORD *)a2 + 13) = v38;
              if (v38 < 0 != v39)
                return 0;
              v40 = v36;
              result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v37);
              if (!(_DWORD)result)
                return result;
              goto LABEL_125;
            }
            goto LABEL_9;
          }
          if (v13 != 48)
            goto LABEL_9;
          v26 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v26 < 0)
          {
            v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v51 & 1) == 0)
              return 0;
          }
          else
          {
            v27 = *v26;
            *(_QWORD *)a2 = v26 + 1;
          }
          *((_BYTE *)this + 153) = v27 != 0;
        }
      }
      if (v17 != 50)
        break;
      if (v13 != 146)
        goto LABEL_9;
      if (*((_DWORD *)this + 43) == 50)
      {
        v28 = (CoreML::Specification::ValidPadding *)*((_QWORD *)this + 20);
      }
      else
      {
        CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
        *((_DWORD *)this + 43) = 50;
        v28 = (CoreML::Specification::ValidPadding *)operator new();
        CoreML::Specification::ValidPadding::ValidPadding(v28);
        *((_QWORD *)this + 20) = v28;
      }
      v45 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v45 < 0)
      {
        v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v46 < 0)
          return 0;
      }
      else
      {
        v46 = *v45;
        *(_QWORD *)a2 = v45 + 1;
      }
      v54 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
      v56 = *((_DWORD *)a2 + 13);
      v39 = __OFSUB__(v56--, 1);
      *((_DWORD *)a2 + 13) = v56;
      if (v56 < 0 != v39)
        return 0;
      v40 = v54;
      result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v28, a2, v55);
      if (!(_DWORD)result)
        return result;
LABEL_125:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v40))
        return 0;
    }
    if (v17 == 51)
      break;
    if (v17 != 60 || v13 != 224)
      goto LABEL_9;
    v20 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
    {
      v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v50 & 1) == 0)
        return 0;
    }
    else
    {
      v21 = *v20;
      *(_QWORD *)a2 = v20 + 1;
    }
    *((_BYTE *)this + 152) = v21 != 0;
  }
  if (v13 != 154)
    goto LABEL_9;
  if (*((_DWORD *)this + 43) == 51)
  {
    v29 = (CoreML::Specification::SamePadding *)*((_QWORD *)this + 20);
  }
  else
  {
    CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
    *((_DWORD *)this + 43) = 51;
    v29 = (CoreML::Specification::SamePadding *)operator new();
    CoreML::Specification::SamePadding::SamePadding(v29);
    *((_QWORD *)this + 20) = v29;
  }
  v47 = *(char **)a2;
  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v47 < 0)
  {
    v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v48 < 0)
      return 0;
  }
  else
  {
    v48 = *v47;
    *(_QWORD *)a2 = v47 + 1;
  }
  v57 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
  v59 = *((_DWORD *)a2 + 13);
  v39 = __OFSUB__(v59--, 1);
  *((_DWORD *)a2 + 13) = v59;
  if (v59 < 0 == v39)
  {
    v40 = v57;
    result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v29, (char **)a2, v58);
    if (!(_DWORD)result)
      return result;
    goto LABEL_125;
  }
  return 0;
}

void sub_1D3B708DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::PoolingLayerParams *CoreML::Specification::PoolingLayerParams::PoolingLayerParams(CoreML::Specification::PoolingLayerParams *this)
{
  *(_QWORD *)this = &off_1E955E7B0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 32) = 0;
  *((_DWORD *)this + 15) = 0;
  *((_QWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B70998(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *(_QWORD **)(v2 + 48);
  if (v4 && !*v4)
    operator delete(v4);
  v5 = *(_QWORD **)(v2 + 24);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  BOOL v13;
  unsigned int TagFallback;
  unsigned int v15;
  char *v16;
  int v17;
  CoreML::Specification::PoolingLayerParams_ValidCompletePadding *v19;
  CoreML::Specification::ValidPadding *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  int v24;
  CoreML::Specification::SamePadding *v25;
  char *v26;
  int VarintSizeAsIntFallback;
  char *v28;
  unint64_t v29;
  unsigned int v30;
  google::protobuf::io::CodedInputStream *v31;
  uint64_t v32;
  char *v33;
  int v34;
  char *v35;
  int v36;
  char *v37;
  int v38;
  char v39;
  char v40;
  int v41;
  unsigned int v42;
  int v43;
  BOOL v44;
  int v45;
  uint64_t result;
  int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  signed int v62;
  uint64_t v63;
  int v64;
  char *v65;
  unint64_t v66;
  unint64_t Varint64Fallback;
  char v68;
  signed int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t Varint32Fallback;

  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v7 = *(unsigned __int8 **)a2;
      v8 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v8)
      {
        LODWORD(v10) = 0;
LABEL_16:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
        v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v11 & 0x100000000) == 0)
          goto LABEL_9;
        goto LABEL_17;
      }
      v9 = v7 + 1;
      v10 = *v7;
      if ((char)*v7 < 1)
      {
        if ((unint64_t)v9 < v8)
        {
          v12 = *v9;
          if ((v10 & ~v12) >= 0x80)
          {
            *(_QWORD *)a2 = v7 + 2;
            v11 = (v10 + (v12 << 7) - 128) | 0x100000000;
            goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
      *(_QWORD *)a2 = v9;
      v11 = v10 | 0x100000000;
      if ((v11 & 0x100000000) == 0)
        goto LABEL_9;
LABEL_17:
      v15 = v11 >> 3;
      if (v11 >> 3 > 0x1E)
        break;
      if (v11 >> 3 > 0x13)
      {
        if (v15 == 20)
        {
          if (v11 == 160)
          {
            v30 = 162;
            v31 = a2;
            v32 = (uint64_t)v5;
            goto LABEL_64;
          }
          if (v11 != 162)
            goto LABEL_9;
          v26 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v26 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v26;
            *(_QWORD *)a2 = v26 + 1;
          }
          v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v64 = *((_DWORD *)a2 + 10);
            v55 = *((int *)a2 + 11);
            v56 = *((_QWORD *)a2 + 1);
            v57 = *((_DWORD *)a2 + 6);
            if (v64 == 0x7FFFFFFF)
              break;
            v65 = *(char **)a2;
            if ((int)(v64 - v57 + v55 + v56 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v65 >= v56 || *v65 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v68 & 1) == 0)
                return 0;
              v66 = Varint64Fallback;
            }
            else
            {
              v66 = *v65;
              *(_QWORD *)a2 = v65 + 1;
            }
            v69 = *((_DWORD *)this + 10);
            if (v69 == *((_DWORD *)this + 11))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v69 + 1);
              v69 = *v5;
            }
            v70 = *((_QWORD *)this + 6);
            *((_DWORD *)this + 10) = v69 + 1;
            *(_QWORD *)(v70 + 8 * v69 + 8) = v66;
          }
LABEL_119:
          *((_DWORD *)a2 + 10) = v53;
          v71 = v56 + v55;
          *((_QWORD *)a2 + 1) = v56 + v55;
          v72 = *((_DWORD *)a2 + 12);
          if (v72 >= v53)
            v72 = v53;
          v44 = __OFSUB__(v57, v72);
          v73 = v57 - v72;
          if ((v73 < 0) ^ v44 | (v73 == 0))
            v73 = 0;
          else
            *((_QWORD *)a2 + 1) = v71 - v73;
          *((_DWORD *)a2 + 11) = v73;
          *((_BYTE *)a2 + 36) = 0;
        }
        else
        {
          if (v15 != 30 || v11 != 242)
            goto LABEL_9;
          if (*((_DWORD *)this + 21) == 30)
          {
            v20 = (CoreML::Specification::ValidPadding *)*((_QWORD *)this + 9);
          }
          else
          {
            CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
            *((_DWORD *)this + 21) = 30;
            v20 = (CoreML::Specification::ValidPadding *)operator new();
            CoreML::Specification::ValidPadding::ValidPadding(v20);
            *((_QWORD *)this + 9) = v20;
          }
          v35 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v35 < 0)
          {
            v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v36 < 0)
              return 0;
          }
          else
          {
            v36 = *v35;
            *(_QWORD *)a2 = v35 + 1;
          }
          v47 = google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
          v49 = *((_DWORD *)a2 + 13);
          v44 = __OFSUB__(v49--, 1);
          *((_DWORD *)a2 + 13) = v49;
          if (v49 < 0 != v44)
            return 0;
          v45 = v47;
          result = CoreML::Specification::ValidPadding::MergePartialFromCodedStream(v20, a2, v48);
          if (!(_DWORD)result)
            return result;
LABEL_93:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v45))
            return 0;
        }
      }
      else if (v15 == 1)
      {
        if (v11 != 8)
          goto LABEL_9;
        v23 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v24 = 0;
        }
        else
        {
          v24 = *v23;
          if ((*v23 & 0x80000000) == 0)
          {
            *(_QWORD *)a2 = v23 + 1;
            goto LABEL_127;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
        v24 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
LABEL_127:
        *((_DWORD *)this + 15) = v24;
      }
      else
      {
        if (v15 != 10)
          goto LABEL_9;
        if (v11 == 80)
        {
          v30 = 82;
          v31 = a2;
          v32 = (uint64_t)v6;
LABEL_64:
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v30, v31, v32) & 1) == 0)return 0;
        }
        else
        {
          if (v11 == 82)
          {
            v16 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
            {
              v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0)
                return 0;
            }
            else
            {
              v17 = *v16;
              *(_QWORD *)a2 = v16 + 1;
            }
            v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            while (1)
            {
              v54 = *((_DWORD *)a2 + 10);
              v55 = *((int *)a2 + 11);
              v56 = *((_QWORD *)a2 + 1);
              v57 = *((_DWORD *)a2 + 6);
              if (v54 == 0x7FFFFFFF)
                break;
              v58 = *(char **)a2;
              if ((int)(v54 - v57 + v55 + v56 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v58 >= v56 || *v58 < 0)
              {
                v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v61 & 1) == 0)
                  return 0;
                v59 = v60;
              }
              else
              {
                v59 = *v58;
                *(_QWORD *)a2 = v58 + 1;
              }
              v62 = *((_DWORD *)this + 4);
              if (v62 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v6, v62 + 1);
                v62 = *v6;
              }
              v63 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v62 + 1;
              *(_QWORD *)(v63 + 8 * v62 + 8) = v59;
            }
            goto LABEL_119;
          }
LABEL_9:
          if ((_DWORD)v11)
            v13 = (v11 & 7) == 4;
          else
            v13 = 1;
          if (v13)
            return 1;
          if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)return 0;
        }
      }
    }
    if (v11 >> 3 <= 0x31)
      break;
    if (v15 == 50)
    {
      if (v11 != 144)
        goto LABEL_9;
      v28 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v28 < 0)
      {
        v29 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v40 & 1) == 0)
          return 0;
      }
      else
      {
        v29 = *v28;
        *(_QWORD *)a2 = v28 + 1;
      }
      *((_BYTE *)this + 64) = v29 != 0;
    }
    else
    {
      if (v15 != 60 || v11 != 224)
        goto LABEL_9;
      v21 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
      {
        v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v39 & 1) == 0)
          return 0;
      }
      else
      {
        v22 = *v21;
        *(_QWORD *)a2 = v21 + 1;
      }
      *((_BYTE *)this + 65) = v22 != 0;
    }
  }
  if (v15 != 31)
  {
    if (v15 != 32 || v11 != 2)
      goto LABEL_9;
    if (*((_DWORD *)this + 21) == 32)
    {
      v19 = (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)*((_QWORD *)this + 9);
    }
    else
    {
      CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
      *((_DWORD *)this + 21) = 32;
      v19 = (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)operator new();
      CoreML::Specification::PoolingLayerParams_ValidCompletePadding::PoolingLayerParams_ValidCompletePadding(v19);
      *((_QWORD *)this + 9) = v19;
    }
    v33 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v33 < 0)
    {
      v34 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v34 < 0)
        return 0;
    }
    else
    {
      v34 = *v33;
      *(_QWORD *)a2 = v33 + 1;
    }
    v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v34);
    v43 = *((_DWORD *)a2 + 13);
    v44 = __OFSUB__(v43--, 1);
    *((_DWORD *)a2 + 13) = v43;
    if (v43 < 0 != v44)
      return 0;
    v45 = v41;
    result = CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(v19, a2, v42);
    if (!(_DWORD)result)
      return result;
    goto LABEL_93;
  }
  if (v11 != 250)
    goto LABEL_9;
  if (*((_DWORD *)this + 21) == 31)
  {
    v25 = (CoreML::Specification::SamePadding *)*((_QWORD *)this + 9);
  }
  else
  {
    CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType((uint64_t)this);
    *((_DWORD *)this + 21) = 31;
    v25 = (CoreML::Specification::SamePadding *)operator new();
    CoreML::Specification::SamePadding::SamePadding(v25);
    *((_QWORD *)this + 9) = v25;
  }
  v37 = *(char **)a2;
  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v37 < 0)
  {
    v38 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
    if (v38 < 0)
      return 0;
  }
  else
  {
    v38 = *v37;
    *(_QWORD *)a2 = v37 + 1;
  }
  v50 = google::protobuf::io::CodedInputStream::PushLimit(a2, v38);
  v52 = *((_DWORD *)a2 + 13);
  v44 = __OFSUB__(v52--, 1);
  *((_DWORD *)a2 + 13) = v52;
  if (v52 < 0 == v44)
  {
    v45 = v50;
    result = CoreML::Specification::SamePadding::MergePartialFromCodedStream(v25, (char **)a2, v51);
    if (!(_DWORD)result)
      return result;
    goto LABEL_93;
  }
  return 0;
}

void sub_1D3B71084(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ActivationParams *CoreML::Specification::ActivationParams::ActivationParams(CoreML::Specification::ActivationParams *this)
{
  *(_QWORD *)this = &off_1E955CBC8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B71124(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationParams::MergePartialFromCodedStream(CoreML::Specification::ActivationParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int TagFallback;
  unsigned int v13;
  CoreML::Specification::ActivationSoftsign *v14;
  char *v15;
  int v16;
  CoreML::Specification::ActivationLeakyReLU *v17;
  CoreML::Specification::ActivationSigmoidHard *v18;
  CoreML::Specification::ActivationTanh *v19;
  char *v20;
  int v21;
  CoreML::Specification::ActivationParametricSoftplus *v22;
  CoreML::Specification::ActivationELU *v23;
  CoreML::Specification::ActivationLinear *v24;
  CoreML::Specification::ActivationReLU *v25;
  char *v26;
  int v27;
  CoreML::Specification::ActivationScaledTanh *v28;
  CoreML::Specification::ActivationSigmoid *v29;
  char *v30;
  int VarintSizeAsIntFallback;
  CoreML::Specification::ActivationThresholdedReLU *v32;
  CoreML::Specification::ActivationPReLU *v33;
  CoreML::Specification::ActivationSoftplus *v34;
  char *v35;
  int v36;
  char *v37;
  int v38;
  char *v39;
  int v40;
  char *v41;
  int v42;
  char *v43;
  int v44;
  char *v45;
  int v46;
  char *v47;
  int v48;
  char *v49;
  int v50;
  char *v51;
  int v52;
  CoreML::Specification::ActivationSoftsign *v53;
  unsigned int v54;
  int v55;
  BOOL v56;
  int v57;
  uint64_t result;
  CoreML::Specification::ActivationTanh *v59;
  unsigned int v60;
  int v61;
  CoreML::Specification::ActivationReLU *v62;
  unsigned int v63;
  int v64;
  CoreML::Specification::ActivationSigmoid *v65;
  unsigned int v66;
  int v67;
  CoreML::Specification::ActivationSoftplus *v68;
  unsigned int v69;
  int v70;
  google::protobuf::io::CodedInputStream *v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  unsigned int v96;
  int v97;

  while (1)
  {
    while (1)
    {
      v5 = *(unsigned __int8 **)a2;
      v6 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        v7 = v5 + 1;
        v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(_QWORD *)a2 = v7;
          v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0)
            goto LABEL_8;
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(_QWORD *)a2 = v5 + 2;
            v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_8;
LABEL_16:
      v13 = v9 >> 3;
      if (v9 >> 3 <= 0x1E)
        break;
      if (v9 >> 3 <= 0x31)
      {
        if (v13 != 31)
        {
          if (v13 == 40)
          {
            if (v9 == 66)
            {
              if (*((_DWORD *)this + 7) != 40)
              {
                CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
                *((_DWORD *)this + 7) = 40;
                v29 = (CoreML::Specification::ActivationSigmoid *)operator new();
                CoreML::Specification::ActivationSigmoid::ActivationSigmoid(v29);
                *((_QWORD *)this + 2) = v29;
              }
              v30 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v30 < 0)
              {
                VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0)
                  return 0;
              }
              else
              {
                VarintSizeAsIntFallback = *v30;
                *(_QWORD *)a2 = v30 + 1;
              }
              v65 = (CoreML::Specification::ActivationSigmoid *)google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              v67 = *((_DWORD *)a2 + 13);
              v56 = __OFSUB__(v67--, 1);
              *((_DWORD *)a2 + 13) = v67;
              if (v67 < 0 != v56)
                return 0;
              v57 = (int)v65;
              result = CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream(v65, (char **)a2, v66);
              if (!(_DWORD)result)
                return result;
              goto LABEL_138;
            }
            goto LABEL_8;
          }
          if (v13 != 41 || v9 != 74)
            goto LABEL_8;
          if (*((_DWORD *)this + 7) == 41)
          {
            v18 = (CoreML::Specification::ActivationSigmoidHard *)*((_QWORD *)this + 2);
          }
          else
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 41;
            v18 = (CoreML::Specification::ActivationSigmoidHard *)operator new();
            CoreML::Specification::ActivationSigmoidHard::ActivationSigmoidHard(v18);
            *((_QWORD *)this + 2) = v18;
          }
          v39 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v39 < 0)
          {
            v40 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v40 < 0)
              return 0;
          }
          else
          {
            v40 = *v39;
            *(_QWORD *)a2 = v39 + 1;
          }
          v77 = google::protobuf::io::CodedInputStream::PushLimit(a2, v40);
          v79 = *((_DWORD *)a2 + 13);
          v56 = __OFSUB__(v79--, 1);
          *((_DWORD *)a2 + 13) = v79;
          if (v79 < 0 != v56)
            return 0;
          v76 = v77;
          result = CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(v18, (char **)a2, v78);
          if (!(_DWORD)result)
            return result;
          goto LABEL_170;
        }
        if (v9 == 250)
        {
          if (*((_DWORD *)this + 7) == 31)
          {
            v28 = (CoreML::Specification::ActivationScaledTanh *)*((_QWORD *)this + 2);
          }
          else
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 31;
            v28 = (CoreML::Specification::ActivationScaledTanh *)operator new();
            CoreML::Specification::ActivationScaledTanh::ActivationScaledTanh(v28);
            *((_QWORD *)this + 2) = v28;
          }
          v47 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v47 < 0)
          {
            v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v48 < 0)
              return 0;
          }
          else
          {
            v48 = *v47;
            *(_QWORD *)a2 = v47 + 1;
          }
          v89 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
          v91 = *((_DWORD *)a2 + 13);
          v56 = __OFSUB__(v91--, 1);
          *((_DWORD *)a2 + 13) = v91;
          if (v91 < 0 != v56)
            return 0;
          v76 = v89;
          result = CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(v28, (char **)a2, v90);
          if (!(_DWORD)result)
            return result;
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v9 >> 3 > 0x45)
      {
        if (v13 == 70)
        {
          if (v9 == 50)
          {
            if (*((_DWORD *)this + 7) != 70)
            {
              CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
              *((_DWORD *)this + 7) = 70;
              v34 = (CoreML::Specification::ActivationSoftplus *)operator new();
              CoreML::Specification::ActivationSoftplus::ActivationSoftplus(v34);
              *((_QWORD *)this + 2) = v34;
            }
            v35 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v35 < 0)
            {
              v36 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v36 < 0)
                return 0;
            }
            else
            {
              v36 = *v35;
              *(_QWORD *)a2 = v35 + 1;
            }
            v68 = (CoreML::Specification::ActivationSoftplus *)google::protobuf::io::CodedInputStream::PushLimit(a2, v36);
            v70 = *((_DWORD *)a2 + 13);
            v56 = __OFSUB__(v70--, 1);
            *((_DWORD *)a2 + 13) = v70;
            if (v70 < 0 != v56)
              return 0;
            v57 = (int)v68;
            result = CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream(v68, (char **)a2, v69);
            if (!(_DWORD)result)
              return result;
            goto LABEL_138;
          }
          goto LABEL_8;
        }
        if (v13 != 71 || v9 != 58)
          goto LABEL_8;
        if (*((_DWORD *)this + 7) == 71)
        {
          v22 = (CoreML::Specification::ActivationParametricSoftplus *)*((_QWORD *)this + 2);
        }
        else
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 71;
          v22 = (CoreML::Specification::ActivationParametricSoftplus *)operator new();
          CoreML::Specification::ActivationParametricSoftplus::ActivationParametricSoftplus(v22);
          *((_QWORD *)this + 2) = v22;
        }
        v41 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v41 < 0)
        {
          v42 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v42 < 0)
            return 0;
        }
        else
        {
          v42 = *v41;
          *(_QWORD *)a2 = v41 + 1;
        }
        v80 = google::protobuf::io::CodedInputStream::PushLimit(a2, v42);
        v82 = *((_DWORD *)a2 + 13);
        v56 = __OFSUB__(v82--, 1);
        *((_DWORD *)a2 + 13) = v82;
        if (v82 < 0 != v56)
          return 0;
        v76 = v80;
        result = CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(v22, a2, v81);
        if (!(_DWORD)result)
          return result;
        goto LABEL_170;
      }
      if (v13 == 50)
      {
        if (v9 == 146)
        {
          if (*((_DWORD *)this + 7) == 50)
          {
            v23 = (CoreML::Specification::ActivationELU *)*((_QWORD *)this + 2);
          }
          else
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 50;
            v23 = (CoreML::Specification::ActivationELU *)operator new();
            CoreML::Specification::ActivationELU::ActivationELU(v23);
            *((_QWORD *)this + 2) = v23;
          }
          v43 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v43 < 0)
          {
            v44 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v44 < 0)
              return 0;
          }
          else
          {
            v44 = *v43;
            *(_QWORD *)a2 = v43 + 1;
          }
          v83 = google::protobuf::io::CodedInputStream::PushLimit(a2, v44);
          v85 = *((_DWORD *)a2 + 13);
          v56 = __OFSUB__(v85--, 1);
          *((_DWORD *)a2 + 13) = v85;
          if (v85 < 0 != v56)
            return 0;
          v76 = v83;
          result = CoreML::Specification::ActivationELU::MergePartialFromCodedStream(v23, (char **)a2, v84);
          if (!(_DWORD)result)
            return result;
          goto LABEL_170;
        }
        goto LABEL_8;
      }
      if (v13 != 60 || v9 != 226)
        goto LABEL_8;
      if (*((_DWORD *)this + 7) != 60)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 60;
        v14 = (CoreML::Specification::ActivationSoftsign *)operator new();
        CoreML::Specification::ActivationSoftsign::ActivationSoftsign(v14);
        *((_QWORD *)this + 2) = v14;
      }
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
      {
        v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v16 < 0)
          return 0;
      }
      else
      {
        v16 = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      v53 = (CoreML::Specification::ActivationSoftsign *)google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
      v55 = *((_DWORD *)a2 + 13);
      v56 = __OFSUB__(v55--, 1);
      *((_DWORD *)a2 + 13) = v55;
      if (v55 < 0 != v56)
        return 0;
      v57 = (int)v53;
      result = CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream(v53, (char **)a2, v54);
      if (!(_DWORD)result)
        return result;
LABEL_138:
      v71 = a2;
      v72 = v57;
LABEL_171:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v71, v72))
        return 0;
    }
    if (v9 >> 3 > 0x13)
    {
      if (v13 == 20)
      {
        if (v9 == 162)
        {
          if (*((_DWORD *)this + 7) == 20)
          {
            v32 = (CoreML::Specification::ActivationThresholdedReLU *)*((_QWORD *)this + 2);
          }
          else
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 20;
            v32 = (CoreML::Specification::ActivationThresholdedReLU *)operator new();
            CoreML::Specification::ActivationThresholdedReLU::ActivationThresholdedReLU(v32);
            *((_QWORD *)this + 2) = v32;
          }
          v49 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v49 < 0)
          {
            v50 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v50 < 0)
              return 0;
          }
          else
          {
            v50 = *v49;
            *(_QWORD *)a2 = v49 + 1;
          }
          v92 = google::protobuf::io::CodedInputStream::PushLimit(a2, v50);
          v94 = *((_DWORD *)a2 + 13);
          v56 = __OFSUB__(v94--, 1);
          *((_DWORD *)a2 + 13) = v94;
          if (v94 < 0 != v56)
            return 0;
          v76 = v92;
          result = CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(v32, (char **)a2, v93);
          if (!(_DWORD)result)
            return result;
          goto LABEL_170;
        }
      }
      else if (v13 == 25)
      {
        if (v9 == 202)
        {
          if (*((_DWORD *)this + 7) == 25)
          {
            v33 = (CoreML::Specification::ActivationPReLU *)*((_QWORD *)this + 2);
          }
          else
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 25;
            v33 = (CoreML::Specification::ActivationPReLU *)operator new();
            CoreML::Specification::ActivationPReLU::ActivationPReLU(v33);
            *((_QWORD *)this + 2) = v33;
          }
          v51 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v51 < 0)
          {
            v52 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v52 < 0)
              return 0;
          }
          else
          {
            v52 = *v51;
            *(_QWORD *)a2 = v51 + 1;
          }
          v95 = google::protobuf::io::CodedInputStream::PushLimit(a2, v52);
          v97 = *((_DWORD *)a2 + 13);
          v56 = __OFSUB__(v97--, 1);
          *((_DWORD *)a2 + 13) = v97;
          if (v97 < 0 != v56)
            return 0;
          v76 = v95;
          result = CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(v33, a2, v96);
          if (!(_DWORD)result)
            return result;
          goto LABEL_170;
        }
      }
      else if (v13 == 30 && v9 == 242)
      {
        if (*((_DWORD *)this + 7) != 30)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 30;
          v19 = (CoreML::Specification::ActivationTanh *)operator new();
          CoreML::Specification::ActivationTanh::ActivationTanh(v19);
          *((_QWORD *)this + 2) = v19;
        }
        v20 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
        {
          v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v21 < 0)
            return 0;
        }
        else
        {
          v21 = *v20;
          *(_QWORD *)a2 = v20 + 1;
        }
        v59 = (CoreML::Specification::ActivationTanh *)google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
        v61 = *((_DWORD *)a2 + 13);
        v56 = __OFSUB__(v61--, 1);
        *((_DWORD *)a2 + 13) = v61;
        if (v61 < 0 != v56)
          return 0;
        v57 = (int)v59;
        result = CoreML::Specification::ActivationTanh::MergePartialFromCodedStream(v59, (char **)a2, v60);
        if (!(_DWORD)result)
          return result;
        goto LABEL_138;
      }
      goto LABEL_8;
    }
    if (v13 != 5)
    {
      if (v13 == 10)
      {
        if (v9 == 82)
        {
          if (*((_DWORD *)this + 7) != 10)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 10;
            v25 = (CoreML::Specification::ActivationReLU *)operator new();
            CoreML::Specification::ActivationReLU::ActivationReLU(v25);
            *((_QWORD *)this + 2) = v25;
          }
          v26 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v26 < 0)
          {
            v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v27 < 0)
              return 0;
          }
          else
          {
            v27 = *v26;
            *(_QWORD *)a2 = v26 + 1;
          }
          v62 = (CoreML::Specification::ActivationReLU *)google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
          v64 = *((_DWORD *)a2 + 13);
          v56 = __OFSUB__(v64--, 1);
          *((_DWORD *)a2 + 13) = v64;
          if (v64 < 0 != v56)
            return 0;
          v57 = (int)v62;
          result = CoreML::Specification::ActivationReLU::MergePartialFromCodedStream(v62, (char **)a2, v63);
          if (!(_DWORD)result)
            return result;
          goto LABEL_138;
        }
        goto LABEL_8;
      }
      if (v13 != 15 || v9 != 122)
        goto LABEL_8;
      if (*((_DWORD *)this + 7) == 15)
      {
        v17 = (CoreML::Specification::ActivationLeakyReLU *)*((_QWORD *)this + 2);
      }
      else
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 15;
        v17 = (CoreML::Specification::ActivationLeakyReLU *)operator new();
        CoreML::Specification::ActivationLeakyReLU::ActivationLeakyReLU(v17);
        *((_QWORD *)this + 2) = v17;
      }
      v37 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v37 < 0)
      {
        v38 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v38 < 0)
          return 0;
      }
      else
      {
        v38 = *v37;
        *(_QWORD *)a2 = v37 + 1;
      }
      v73 = google::protobuf::io::CodedInputStream::PushLimit(a2, v38);
      v75 = *((_DWORD *)a2 + 13);
      v56 = __OFSUB__(v75--, 1);
      *((_DWORD *)a2 + 13) = v75;
      if (v75 < 0 != v56)
        return 0;
      v76 = v73;
      result = CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(v17, (char **)a2, v74);
      if (!(_DWORD)result)
        return result;
LABEL_170:
      v71 = a2;
      v72 = v76;
      goto LABEL_171;
    }
    if (v9 == 42)
    {
      if (*((_DWORD *)this + 7) == 5)
      {
        v24 = (CoreML::Specification::ActivationLinear *)*((_QWORD *)this + 2);
      }
      else
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 5;
        v24 = (CoreML::Specification::ActivationLinear *)operator new();
        CoreML::Specification::ActivationLinear::ActivationLinear(v24);
        *((_QWORD *)this + 2) = v24;
      }
      v45 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v45 < 0)
      {
        v46 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v46 < 0)
          return 0;
      }
      else
      {
        v46 = *v45;
        *(_QWORD *)a2 = v45 + 1;
      }
      v86 = google::protobuf::io::CodedInputStream::PushLimit(a2, v46);
      v88 = *((_DWORD *)a2 + 13);
      v56 = __OFSUB__(v88--, 1);
      *((_DWORD *)a2 + 13) = v88;
      if (v88 < 0 != v56)
        return 0;
      v76 = v86;
      result = CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(v24, (char **)a2, v87);
      if (!(_DWORD)result)
        return result;
      goto LABEL_170;
    }
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B71BE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40E1DA5700);
  _Unwind_Resume(a1);
}

CoreML::Specification::InnerProductLayerParams *CoreML::Specification::InnerProductLayerParams::InnerProductLayerParams(CoreML::Specification::InnerProductLayerParams *this)
{
  *(_QWORD *)this = &off_1E9561270;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 24) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 13) = 0;
  return this;
}

void sub_1D3B71CDC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::InnerProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::InnerProductLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int TagFallback;
  unsigned int v13;
  char *v14;
  unint64_t Varint64Fallback;
  char *v16;
  unint64_t v17;
  char *v18;
  CoreML::Specification::WeightParams *v19;
  char *v20;
  int VarintSizeAsIntFallback;
  int v22;
  unsigned int v23;
  int v24;
  BOOL v25;
  int v26;
  _BOOL8 result;
  char v28;
  char v29;
  char v30;
  char v31;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = *(unsigned __int8 **)a2;
        v6 = *((_QWORD *)a2 + 1);
        if (*(_QWORD *)a2 >= v6)
        {
          LODWORD(v8) = 0;
        }
        else
        {
          v7 = v5 + 1;
          v8 = *v5;
          if ((char)*v5 >= 1)
          {
            *(_QWORD *)a2 = v7;
            v9 = v8 | 0x100000000;
            if ((v9 & 0x100000000) == 0)
              goto LABEL_8;
            goto LABEL_16;
          }
          if ((unint64_t)v7 < v6)
          {
            v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(_QWORD *)a2 = v5 + 2;
              v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_16;
            }
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v9 & 0x100000000) == 0)
          goto LABEL_8;
LABEL_16:
        v13 = v9 >> 3;
        if (v9 >> 3 > 0x13)
          break;
        if (v13 == 1)
        {
          if (v9 != 8)
            goto LABEL_8;
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v18 & 0x80000000) == 0)
          {
            *((_QWORD *)this + 4) = *v18;
            goto LABEL_39;
          }
          *((_QWORD *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0)
            return 0;
        }
        else if (v13 == 2)
        {
          if (v9 != 16)
            goto LABEL_8;
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
          {
            *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 5) = *v18;
LABEL_39:
            *(_QWORD *)a2 = v18 + 1;
          }
        }
        else
        {
          if (v13 != 10 || v9 != 80)
            goto LABEL_8;
          v14 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v14;
            *(_QWORD *)a2 = v14 + 1;
          }
          *((_BYTE *)this + 48) = Varint64Fallback != 0;
        }
      }
      if (v13 == 20)
        break;
      if (v13 == 21)
      {
        if (v9 != 170)
          goto LABEL_8;
        v19 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
        if (!v19)
        {
          v19 = (CoreML::Specification::WeightParams *)operator new();
          CoreML::Specification::WeightParams::WeightParams(v19);
          *((_QWORD *)this + 3) = v19;
        }
LABEL_46:
        v20 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v20;
          *(_QWORD *)a2 = v20 + 1;
        }
        v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        v24 = *((_DWORD *)a2 + 13);
        v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 13) = v24;
        if (v24 < 0 != v25)
          return 0;
        v26 = v22;
        result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v19, a2, v23);
        if (!result)
          return result;
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26))
          return 0;
      }
      else
      {
        if (v13 != 22 || v9 != 176)
          goto LABEL_8;
        v16 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
        {
          v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v29 & 1) == 0)
            return 0;
        }
        else
        {
          v17 = *v16;
          *(_QWORD *)a2 = v16 + 1;
        }
        *((_BYTE *)this + 49) = v17 != 0;
      }
    }
    if (v9 == 162)
    {
      v19 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
      if (!v19)
      {
        v19 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v19);
        *((_QWORD *)this + 2) = v19;
      }
      goto LABEL_46;
    }
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B72014(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::EmbeddingLayerParams *CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(CoreML::Specification::EmbeddingLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F558;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 13) = 0;
  return this;
}

void sub_1D3B72094(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EmbeddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  CoreML::Specification::WeightParams *v12;
  char *v14;
  char *v15;
  unint64_t Varint64Fallback;
  char *v17;
  int VarintSizeAsIntFallback;
  int v19;
  unsigned int v20;
  int v21;
  BOOL v22;
  int v23;
  _BOOL8 result;
  char v25;
  char v26;
  char v27;
  unsigned int TagFallback;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *(unsigned __int8 **)a2;
          v6 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v6)
          {
            LODWORD(v8) = 0;
LABEL_51:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0)
              goto LABEL_52;
            goto LABEL_8;
          }
          v7 = v5 + 1;
          v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(_QWORD *)a2 = v5 + 2;
                v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(_QWORD *)a2 = v7;
          v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0)
            goto LABEL_52;
LABEL_8:
          v11 = v9 >> 3;
          if (v9 >> 3 <= 9)
            break;
          if (v11 == 10)
          {
            if (v9 != 80)
              goto LABEL_52;
            v15 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0)
                return 0;
            }
            else
            {
              Varint64Fallback = *v15;
              *(_QWORD *)a2 = v15 + 1;
            }
            *((_BYTE *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162)
                goto LABEL_52;
              v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
              if (!v12)
              {
                v12 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v12);
                *((_QWORD *)this + 2) = v12;
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170)
                goto LABEL_52;
              v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
              if (!v12)
              {
                v12 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v12);
                *((_QWORD *)this + 3) = v12;
              }
            }
            v17 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v17;
              *(_QWORD *)a2 = v17 + 1;
            }
            v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            v21 = *((_DWORD *)a2 + 13);
            v22 = __OFSUB__(v21--, 1);
            *((_DWORD *)a2 + 13) = v21;
            if (v21 < 0 != v22)
              return 0;
            v23 = v19;
            result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result)
              return result;
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23))
              return 0;
          }
        }
        if (v11 != 1)
          break;
        if (v9 != 8)
          goto LABEL_52;
        v14 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
        {
          *((_QWORD *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 4) = *v14;
LABEL_38:
          *(_QWORD *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16)
        break;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((_QWORD *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v25 & 1) == 0)
        return 0;
    }
LABEL_52:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B72374(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchnormLayerParams *CoreML::Specification::BatchnormLayerParams::BatchnormLayerParams(CoreML::Specification::BatchnormLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F4C0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 16) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_1D3B723F4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BatchnormLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchnormLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int TagFallback;
  char *v13;
  char *v14;
  unint64_t Varint64Fallback;
  char *v16;
  unint64_t v17;
  unsigned int *v18;
  unsigned int v19;
  CoreML::Specification::WeightParams *v20;
  char *v21;
  int VarintSizeAsIntFallback;
  int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  int v27;
  _BOOL8 result;
  char v29;
  char v30;
  char v31;
  unsigned int v32;

  while (1)
  {
    while (1)
    {
      v5 = *(unsigned __int8 **)a2;
      v6 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v6)
      {
        LODWORD(v8) = 0;
        goto LABEL_15;
      }
      v7 = v5 + 1;
      v8 = *v5;
      if ((char)*v5 >= 1)
        break;
      if ((unint64_t)v7 < v6)
      {
        v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(_QWORD *)a2 = v5 + 2;
          v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_16;
        }
      }
LABEL_15:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_8;
LABEL_16:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8)
            goto LABEL_8;
          v13 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
          {
            *((_QWORD *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 6) = *v13;
            *(_QWORD *)a2 = v13 + 1;
          }
          continue;
        case 5u:
          if (v9 != 40)
            goto LABEL_8;
          v14 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v14;
            *(_QWORD *)a2 = v14 + 1;
          }
          *((_BYTE *)this + 56) = Varint64Fallback != 0;
          continue;
        case 6u:
          if (v9 != 48)
            goto LABEL_8;
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0)
              return 0;
          }
          else
          {
            v17 = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          *((_BYTE *)this + 57) = v17 != 0;
          break;
        case 0xAu:
          if (v9 != 85)
            goto LABEL_8;
          v32 = 0;
          v18 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
            if (!result)
              return result;
            v19 = v32;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          *((_DWORD *)this + 15) = v19;
          continue;
        case 0xFu:
          if (v9 != 122)
            goto LABEL_8;
          v20 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
          if (!v20)
          {
            v20 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v20);
            *((_QWORD *)this + 2) = v20;
          }
          goto LABEL_45;
        case 0x10u:
          if (v9 != 130)
            goto LABEL_8;
          v20 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
          if (!v20)
          {
            v20 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v20);
            *((_QWORD *)this + 3) = v20;
          }
          goto LABEL_45;
        case 0x11u:
          if (v9 != 138)
            goto LABEL_8;
          v20 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 4);
          if (!v20)
          {
            v20 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v20);
            *((_QWORD *)this + 4) = v20;
          }
          goto LABEL_45;
        case 0x12u:
          if (v9 != 146)
            goto LABEL_8;
          v20 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
          if (!v20)
          {
            v20 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v20);
            *((_QWORD *)this + 5) = v20;
          }
LABEL_45:
          v21 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v21;
            *(_QWORD *)a2 = v21 + 1;
          }
          v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v25 = *((_DWORD *)a2 + 13);
          v26 = __OFSUB__(v25--, 1);
          *((_DWORD *)a2 + 13) = v25;
          if (v25 < 0 != v26)
            return 0;
          v27 = v23;
          result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v20, a2, v24);
          if (!result)
            return result;
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27))
            return 0;
          continue;
        default:
          goto LABEL_8;
      }
    }
    *(_QWORD *)a2 = v7;
    v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0)
      goto LABEL_16;
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B727A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MeanVarianceNormalizeLayerParams *CoreML::Specification::MeanVarianceNormalizeLayerParams::MeanVarianceNormalizeLayerParams(CoreML::Specification::MeanVarianceNormalizeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563DC8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B72828(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MeanVarianceNormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::MeanVarianceNormalizeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t v12;
  unsigned int *v13;
  unsigned int v14;
  char *v15;
  unint64_t Varint64Fallback;
  BOOL v17;
  char v18;
  char v19;
  _BOOL8 result;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 29)
            goto LABEL_25;
          v21 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result)
              return result;
            v14 = v21;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 5) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 16)
          goto LABEL_25;
        v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v15;
          *a2 = v15 + 1;
        }
        *((_BYTE *)this + 17) = Varint64Fallback != 0;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        v12 = *v11;
        *a2 = v11 + 1;
      }
      *((_BYTE *)this + 16) = v12 != 0;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::L2NormalizeLayerParams *CoreML::Specification::L2NormalizeLayerParams::L2NormalizeLayerParams(CoreML::Specification::L2NormalizeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560AB8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::L2NormalizeLayerParams *)&CoreML::Specification::_L2NormalizeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B72A2C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::L2NormalizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::L2NormalizeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SoftmaxLayerParams *CoreML::Specification::SoftmaxLayerParams::SoftmaxLayerParams(CoreML::Specification::SoftmaxLayerParams *this)
{
  *(_QWORD *)this = &off_1E955EAA8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxLayerParams *)&CoreML::Specification::_SoftmaxLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B72B84(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SoftmaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LRNLayerParams *CoreML::Specification::LRNLayerParams::LRNLayerParams(CoreML::Specification::LRNLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BA90;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B72C60(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LRNLayerParams::MergePartialFromCodedStream(CoreML::Specification::LRNLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  unsigned int *v14;
  unsigned int v15;
  char v17;
  _BOOL8 result;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 < a2[1])
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_24;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13)
            goto LABEL_24;
          v21 = 0;
          v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result)
              return result;
            v10 = v21;
          }
          else
          {
            v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21)
            goto LABEL_24;
          v20 = 0;
          v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v12 = v20;
          }
          else
          {
            v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24)
            goto LABEL_24;
          v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((_QWORD *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          break;
        case 4u:
          if (v7 != 37)
            goto LABEL_24;
          v19 = 0;
          v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result)
              return result;
            v15 = v19;
          }
          else
          {
            v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 8) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_24:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::CropLayerParams *CoreML::Specification::CropLayerParams::CropLayerParams(CoreML::Specification::CropLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955C2E0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B72ED4(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  BOOL v11;
  char *v12;
  int VarintSizeAsIntFallback;
  CoreML::Specification::BorderAmounts *v14;
  char *v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t result;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  char *v28;
  unint64_t v29;
  unint64_t Varint64Fallback;
  char v31;
  signed int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0)
          goto LABEL_8;
LABEL_13:
        if ((_DWORD)v8)
          v11 = (v8 & 7) == 4;
        else
          v11 = 1;
        if (v11)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_13;
LABEL_8:
      if (v8 >> 3 != 5)
        break;
      if (v8 == 40)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x2Au, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 42)
          goto LABEL_13;
        v12 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v12;
          *(_QWORD *)a2 = v12 + 1;
        }
        v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v24 = *((_DWORD *)a2 + 10);
          v25 = *((int *)a2 + 11);
          v26 = *((_QWORD *)a2 + 1);
          v27 = *((_DWORD *)a2 + 6);
          if (v24 == 0x7FFFFFFF)
            break;
          v28 = *(char **)a2;
          if ((int)(v24 - v27 + v25 + v26 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v28 >= v26 || *v28 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0)
              return 0;
            v29 = Varint64Fallback;
          }
          else
          {
            v29 = *v28;
            *(_QWORD *)a2 = v28 + 1;
          }
          v32 = *((_DWORD *)this + 4);
          if (v32 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v32 + 1);
            v32 = *v5;
          }
          v33 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v32 + 1;
          *(_QWORD *)(v33 + 8 * v32 + 8) = v29;
        }
        *((_DWORD *)a2 + 10) = v23;
        v34 = v26 + v25;
        *((_QWORD *)a2 + 1) = v26 + v25;
        v35 = *((_DWORD *)a2 + 12);
        if (v35 >= v23)
          v35 = v23;
        v20 = __OFSUB__(v27, v35);
        v36 = v27 - v35;
        if ((v36 < 0) ^ v20 | (v36 == 0))
          v36 = 0;
        else
          *((_QWORD *)a2 + 1) = v34 - v36;
        *((_DWORD *)a2 + 11) = v36;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if (v8 >> 3 != 1 || v8 != 10)
      goto LABEL_13;
    v14 = (CoreML::Specification::BorderAmounts *)*((_QWORD *)this + 5);
    if (!v14)
    {
      v14 = (CoreML::Specification::BorderAmounts *)operator new();
      CoreML::Specification::BorderAmounts::BorderAmounts(v14);
      *((_QWORD *)this + 5) = v14;
    }
    v15 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
    {
      v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v16 < 0)
        return 0;
    }
    else
    {
      v16 = *v15;
      *(_QWORD *)a2 = v15 + 1;
    }
    v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
    v19 = *((_DWORD *)a2 + 13);
    v20 = __OFSUB__(v19--, 1);
    *((_DWORD *)a2 + 13) = v19;
    if (v19 < 0 != v20)
      break;
    v21 = v17;
    result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v14, a2, v18);
    if (!(_DWORD)result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21));
  return 0;
}

void sub_1D3B731B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::PaddingLayerParams *CoreML::Specification::PaddingLayerParams::PaddingLayerParams(CoreML::Specification::PaddingLayerParams *this)
{
  *(_QWORD *)this = &off_1E955E5E8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B73224(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::PaddingLayerParams_PaddingConstant *v9;
  CoreML::Specification::PaddingLayerParams_PaddingReflection *v10;
  char *v11;
  int v12;
  CoreML::Specification::PaddingLayerParams_PaddingReplication *v13;
  char *v14;
  int v15;
  CoreML::Specification::BorderAmounts *v16;
  char *v17;
  int v18;
  BOOL v19;
  char *v20;
  int VarintSizeAsIntFallback;
  CoreML::Specification::PaddingLayerParams_PaddingReflection *v22;
  unsigned int v23;
  int v24;
  BOOL v25;
  int v26;
  uint64_t result;
  CoreML::Specification::PaddingLayerParams_PaddingReplication *v28;
  unsigned int v29;
  int v30;
  google::protobuf::io::CodedInputStream *v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;

  while (2)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        break;
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) != 0)
        goto LABEL_7;
LABEL_29:
      if ((_DWORD)v7)
        v19 = (v7 & 7) == 4;
      else
        v19 = 1;
      if (v19)
        return 1;
      if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
        goto LABEL_56;
    }
    LODWORD(v6) = 0;
LABEL_6:
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
    v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
    if ((v7 & 0x100000000) == 0)
      goto LABEL_29;
LABEL_7:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10)
          goto LABEL_29;
        if (*((_DWORD *)this + 9) == 1)
        {
          v9 = (CoreML::Specification::PaddingLayerParams_PaddingConstant *)*((_QWORD *)this + 3);
        }
        else
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 1;
          v9 = (CoreML::Specification::PaddingLayerParams_PaddingConstant *)operator new();
          CoreML::Specification::PaddingLayerParams_PaddingConstant::PaddingLayerParams_PaddingConstant(v9);
          *((_QWORD *)this + 3) = v9;
        }
        v20 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            goto LABEL_56;
        }
        else
        {
          VarintSizeAsIntFallback = *v20;
          *(_QWORD *)a2 = v20 + 1;
        }
        v37 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        v39 = *((_DWORD *)a2 + 13);
        v25 = __OFSUB__(v39--, 1);
        *((_DWORD *)a2 + 13) = v39;
        if (v39 < 0 != v25)
          goto LABEL_56;
        v36 = v37;
        result = CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(v9, (char **)a2, v38);
        if (!(_DWORD)result)
          return result;
LABEL_54:
        v31 = a2;
        v32 = v36;
LABEL_55:
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(v31, v32))
          continue;
LABEL_56:
        result = 0;
        break;
      case 2u:
        if (v7 != 18)
          goto LABEL_29;
        if (*((_DWORD *)this + 9) != 2)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 2;
          v10 = (CoreML::Specification::PaddingLayerParams_PaddingReflection *)operator new();
          CoreML::Specification::PaddingLayerParams_PaddingReflection::PaddingLayerParams_PaddingReflection(v10);
          *((_QWORD *)this + 3) = v10;
        }
        v11 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
        {
          v12 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v12 < 0)
            goto LABEL_56;
        }
        else
        {
          v12 = *v11;
          *(_QWORD *)a2 = v11 + 1;
        }
        v22 = (CoreML::Specification::PaddingLayerParams_PaddingReflection *)google::protobuf::io::CodedInputStream::PushLimit(a2, v12);
        v24 = *((_DWORD *)a2 + 13);
        v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a2 + 13) = v24;
        if (v24 < 0 != v25)
          goto LABEL_56;
        v26 = (int)v22;
        result = CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream(v22, (char **)a2, v23);
        if (!(_DWORD)result)
          return result;
        goto LABEL_46;
      case 3u:
        if (v7 != 26)
          goto LABEL_29;
        if (*((_DWORD *)this + 9) != 3)
        {
          CoreML::Specification::PaddingLayerParams::clear_PaddingType((uint64_t)this);
          *((_DWORD *)this + 9) = 3;
          v13 = (CoreML::Specification::PaddingLayerParams_PaddingReplication *)operator new();
          CoreML::Specification::PaddingLayerParams_PaddingReplication::PaddingLayerParams_PaddingReplication(v13);
          *((_QWORD *)this + 3) = v13;
        }
        v14 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
        {
          v15 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v15 < 0)
            goto LABEL_56;
        }
        else
        {
          v15 = *v14;
          *(_QWORD *)a2 = v14 + 1;
        }
        v28 = (CoreML::Specification::PaddingLayerParams_PaddingReplication *)google::protobuf::io::CodedInputStream::PushLimit(a2, v15);
        v30 = *((_DWORD *)a2 + 13);
        v25 = __OFSUB__(v30--, 1);
        *((_DWORD *)a2 + 13) = v30;
        if (v30 < 0 != v25)
          goto LABEL_56;
        v26 = (int)v28;
        result = CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream(v28, (char **)a2, v29);
        if (!(_DWORD)result)
          return result;
LABEL_46:
        v31 = a2;
        v32 = v26;
        goto LABEL_55;
      case 0xAu:
        if (v7 != 82)
          goto LABEL_29;
        v16 = (CoreML::Specification::BorderAmounts *)*((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = (CoreML::Specification::BorderAmounts *)operator new();
          CoreML::Specification::BorderAmounts::BorderAmounts(v16);
          *((_QWORD *)this + 2) = v16;
        }
        v17 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
        {
          v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v18 < 0)
            goto LABEL_56;
        }
        else
        {
          v18 = *v17;
          *(_QWORD *)a2 = v17 + 1;
        }
        v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
        v35 = *((_DWORD *)a2 + 13);
        v25 = __OFSUB__(v35--, 1);
        *((_DWORD *)a2 + 13) = v35;
        if (v35 < 0 != v25)
          goto LABEL_56;
        v36 = v33;
        result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v16, a2, v34);
        if (!(_DWORD)result)
          return result;
        goto LABEL_54;
      default:
        goto LABEL_29;
    }
    return result;
  }
}

void sub_1D3B735D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::UpsampleLayerParams *CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(CoreML::Specification::UpsampleLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F390;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_QWORD *)((char *)this + 60) = 0;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_1D3B73690(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *(_QWORD **)(v2 + 48);
  if (v4 && !*v4)
    operator delete(v4);
  v5 = *(_QWORD **)(v2 + 24);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::UpsampleLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpsampleLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int TagFallback;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  int v14;
  char *v15;
  int v16;
  char *v17;
  unsigned int v18;
  BOOL v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t Varint64Fallback;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  signed int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int *v44;
  unsigned int v45;
  uint64_t v46;
  _BOOL8 result;
  signed int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t Varint32Fallback;
  unsigned int v54;

  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v7 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v8) = 0;
      break;
    }
    v8 = *v7;
    if (*v7 < 1)
      break;
    *(_QWORD *)a2 = v7 + 1;
    v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0)
      goto LABEL_8;
LABEL_27:
    if ((_DWORD)v9)
      v19 = (v9 & 7) == 4;
    else
      v19 = 1;
    if (v19)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
  TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
  v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v9 & 0x100000000) == 0)
    goto LABEL_27;
LABEL_8:
  switch(v9 >> 3)
  {
    case 1u:
      if (v9 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v6) & 1) == 0)return 0;
      }
      else
      {
        if (v9 != 10)
          goto LABEL_27;
        v11 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v11;
          *(_QWORD *)a2 = v11 + 1;
        }
        v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v21 = *((_DWORD *)a2 + 10);
          v22 = *((int *)a2 + 11);
          v23 = *((_QWORD *)a2 + 1);
          v24 = *((_DWORD *)a2 + 6);
          if (v21 == 0x7FFFFFFF)
            break;
          v25 = *(char **)a2;
          if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v25 >= v23 || *v25 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0)
              return 0;
            v26 = Varint64Fallback;
          }
          else
          {
            v26 = *v25;
            *(_QWORD *)a2 = v25 + 1;
          }
          v29 = *((_DWORD *)this + 4);
          if (v29 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v6, v29 + 1);
            v29 = *v6;
          }
          v30 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v29 + 1;
          *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
        }
        *((_DWORD *)a2 + 10) = v20;
        v31 = v23 + v22;
        *((_QWORD *)a2 + 1) = v23 + v22;
        v32 = *((_DWORD *)a2 + 12);
        if (v32 >= v20)
          v32 = v20;
        v33 = __OFSUB__(v24, v32);
        v34 = v24 - v32;
        if ((v34 < 0) ^ v33 | (v34 == 0))
          v34 = 0;
        else
          *((_QWORD *)a2 + 1) = v31 - v34;
        *((_DWORD *)a2 + 11) = v34;
        *((_BYTE *)a2 + 36) = 0;
      }
      goto LABEL_2;
    case 5u:
      if (v9 != 40)
        goto LABEL_27;
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v14 = 0;
      }
      else
      {
        v14 = *v13;
        if ((*v13 & 0x80000000) == 0)
        {
          *(_QWORD *)a2 = v13 + 1;
          goto LABEL_95;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
      v14 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_95:
      *((_DWORD *)this + 15) = v14;
      goto LABEL_2;
    case 6u:
      if (v9 != 48)
        goto LABEL_27;
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v16 = 0;
      }
      else
      {
        v16 = *v15;
        if ((*v15 & 0x80000000) == 0)
        {
          *(_QWORD *)a2 = v15 + 1;
          goto LABEL_92;
        }
      }
      v52 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
      v16 = v52;
      if (v52 < 0)
        return 0;
LABEL_92:
      *((_DWORD *)this + 16) = v16;
      goto LABEL_2;
    case 7u:
      if (v9 == 61)
      {
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(58, (unsigned int **)a2, (uint64_t)v5))return 0;
        goto LABEL_2;
      }
      if (v9 != 58)
        goto LABEL_27;
      v17 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
      {
        v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v18 & 0x80000000) != 0)
          return 0;
      }
      else
      {
        v18 = *v17;
        *(_QWORD *)a2 = v17 + 1;
      }
      if ((v18 & 3) != 0)
        return 0;
      v35 = *((_DWORD *)a2 + 12);
      if (v35 == 0x7FFFFFFF)
        v36 = -1;
      else
        v36 = v35 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v37 = *((_DWORD *)a2 + 10);
      if (v37 == 0x7FFFFFFF)
        v38 = -1;
      else
        v38 = v37 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v39 = *v5;
      v40 = v18 >> 2;
      if (v38 >= v36)
        v41 = v36;
      else
        v41 = v38;
      if (v36 == -1)
        v42 = v38;
      else
        v42 = v41;
      if (v42 < (uint64_t)v18)
      {
        if (v18 >= 4)
        {
          if (v40 <= 1)
            v43 = 1;
          else
            v43 = v18 >> 2;
          do
          {
            v54 = 0;
            v44 = *(unsigned int **)a2;
            if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
            {
              result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v54);
              if (!result)
                return result;
              v45 = v54;
              v39 = *v5;
            }
            else
            {
              v45 = *v44;
              *(_QWORD *)a2 = v44 + 1;
            }
            if (v39 == *((_DWORD *)this + 11))
            {
              google::protobuf::RepeatedField<int>::Reserve(v5, v39 + 1);
              v39 = *v5;
            }
            v46 = *((_QWORD *)this + 6) + 4 * v39;
            *((_DWORD *)this + 10) = v39 + 1;
            *(_DWORD *)(v46 + 8) = v45;
            ++v39;
            --v43;
          }
          while (v43);
        }
        goto LABEL_2;
      }
      v48 = v39 + v40;
      if (v18 > 3)
      {
        google::protobuf::RepeatedField<int>::Reserve(v5, v39 + v40);
        v49 = *((_QWORD *)this + 6);
        v50 = 4 * v48 - 4 * *((int *)this + 10);
        if (v50 >= 1)
          bzero((void *)(v49 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
      }
      else
      {
        v49 = *((_QWORD *)this + 6);
      }
      *v5 = v48;
      v51 = v49 + 8;
      if (!v49)
        v51 = 0;
      if (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v51 + 4 * v39), v18))
        goto LABEL_2;
      if ((int)*v5 < 1)
        return 0;
      result = 0;
      *v5 = v39;
      return result;
    default:
      goto LABEL_27;
  }
}

CoreML::Specification::ResizeBilinearLayerParams *CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(CoreML::Specification::ResizeBilinearLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9562278;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B73C24(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ResizeBilinearLayerParams::MergePartialFromCodedStream(CoreML::Specification::ResizeBilinearLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  CoreML::Specification::SamplingMode *v12;
  char *v13;
  int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  uint64_t result;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  char *v27;
  unint64_t v28;
  unint64_t Varint64Fallback;
  char v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0)
          goto LABEL_8;
LABEL_21:
        if ((_DWORD)v8)
          v15 = (v8 & 7) == 4;
        else
          v15 = 1;
        if (v15)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_21;
LABEL_8:
      if (v8 >> 3 == 2)
        break;
      if (v8 >> 3 != 1)
        goto LABEL_21;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          goto LABEL_21;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v23 = *((_DWORD *)a2 + 10);
          v24 = *((int *)a2 + 11);
          v25 = *((_QWORD *)a2 + 1);
          v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF)
            break;
          v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0)
              return 0;
            v28 = Varint64Fallback;
          }
          else
          {
            v28 = *v27;
            *(_QWORD *)a2 = v27 + 1;
          }
          v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            v31 = *v5;
          }
          v32 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(_QWORD *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 10) = v22;
        v33 = v25 + v24;
        *((_QWORD *)a2 + 1) = v25 + v24;
        v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22)
          v34 = v22;
        v19 = __OFSUB__(v26, v34);
        v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0))
          v35 = 0;
        else
          *((_QWORD *)a2 + 1) = v33 - v35;
        *((_DWORD *)a2 + 11) = v35;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if (v8 != 18)
      goto LABEL_21;
    v12 = (CoreML::Specification::SamplingMode *)*((_QWORD *)this + 5);
    if (!v12)
    {
      v12 = (CoreML::Specification::SamplingMode *)operator new();
      CoreML::Specification::SamplingMode::SamplingMode(v12);
      *((_QWORD *)this + 5) = v12;
    }
    v13 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
    {
      v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0)
        return 0;
    }
    else
    {
      v14 = *v13;
      *(_QWORD *)a2 = v13 + 1;
    }
    v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    v18 = *((_DWORD *)a2 + 13);
    v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 13) = v18;
    if (v18 < 0 != v19)
      break;
    v20 = v16;
    result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v12, (char **)a2, v17);
    if (!(_DWORD)result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1D3B73F04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CropResizeLayerParams *CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(CoreML::Specification::CropResizeLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955FE40;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B73F88(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CropResizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::CropResizeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  char *v12;
  unint64_t v13;
  CoreML::Specification::SamplingMode *v14;
  char *v15;
  int v16;
  CoreML::Specification::BoxCoordinatesMode *v17;
  char *v18;
  int v19;
  unsigned int *v20;
  unsigned int v21;
  char v23;
  int v24;
  unsigned int v25;
  int v26;
  BOOL v27;
  int v28;
  uint64_t result;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  char *v38;
  unint64_t v39;
  unint64_t Varint64Fallback;
  char v41;
  signed int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  unsigned int v47;

  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
          }
          else
          {
            if (v8 != 10)
              goto LABEL_34;
            v10 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v10;
              *(_QWORD *)a2 = v10 + 1;
            }
            v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              v34 = *((_DWORD *)a2 + 10);
              v35 = *((int *)a2 + 11);
              v36 = *((_QWORD *)a2 + 1);
              v37 = *((_DWORD *)a2 + 6);
              if (v34 == 0x7FFFFFFF)
                break;
              v38 = *(char **)a2;
              if ((int)(v34 - v37 + v35 + v36 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v38 >= v36 || *v38 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v41 & 1) == 0)
                  return 0;
                v39 = Varint64Fallback;
              }
              else
              {
                v39 = *v38;
                *(_QWORD *)a2 = v38 + 1;
              }
              v42 = *((_DWORD *)this + 4);
              if (v42 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v42 + 1);
                v42 = *v5;
              }
              v43 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v42 + 1;
              *(_QWORD *)(v43 + 8 * v42 + 8) = v39;
            }
            *((_DWORD *)a2 + 10) = v33;
            v44 = v36 + v35;
            *((_QWORD *)a2 + 1) = v36 + v35;
            v45 = *((_DWORD *)a2 + 12);
            if (v45 >= v33)
              v45 = v33;
            v27 = __OFSUB__(v37, v45);
            v46 = v37 - v45;
            if ((v46 < 0) ^ v27 | (v46 == 0))
              v46 = 0;
            else
              *((_QWORD *)a2 + 1) = v44 - v46;
            *((_DWORD *)a2 + 11) = v46;
            *((_BYTE *)a2 + 36) = 0;
          }
          break;
        case 2u:
          if (v8 != 16)
            goto LABEL_34;
          v12 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
          {
            v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v23 & 1) == 0)
              return 0;
          }
          else
          {
            v13 = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          *((_BYTE *)this + 56) = v13 != 0;
          continue;
        case 3u:
          if (v8 != 26)
            goto LABEL_34;
          v14 = (CoreML::Specification::SamplingMode *)*((_QWORD *)this + 5);
          if (!v14)
          {
            v14 = (CoreML::Specification::SamplingMode *)operator new();
            CoreML::Specification::SamplingMode::SamplingMode(v14);
            *((_QWORD *)this + 5) = v14;
          }
          v15 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
          {
            v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0)
              return 0;
          }
          else
          {
            v16 = *v15;
            *(_QWORD *)a2 = v15 + 1;
          }
          v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          v26 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v26--, 1);
          *((_DWORD *)a2 + 13) = v26;
          if (v26 < 0 != v27)
            return 0;
          v28 = v24;
          result = CoreML::Specification::SamplingMode::MergePartialFromCodedStream(v14, (char **)a2, v25);
          if (!(_DWORD)result)
            return result;
          goto LABEL_51;
        case 4u:
          if (v8 != 34)
            goto LABEL_34;
          v17 = (CoreML::Specification::BoxCoordinatesMode *)*((_QWORD *)this + 6);
          if (!v17)
          {
            v17 = (CoreML::Specification::BoxCoordinatesMode *)operator new();
            CoreML::Specification::BoxCoordinatesMode::BoxCoordinatesMode(v17);
            *((_QWORD *)this + 6) = v17;
          }
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
          {
            v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0)
              return 0;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v30 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          v32 = *((_DWORD *)a2 + 13);
          v27 = __OFSUB__(v32--, 1);
          *((_DWORD *)a2 + 13) = v32;
          if (v32 < 0 != v27)
            return 0;
          v28 = v30;
          result = CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(v17, (char **)a2, v31);
          if (!(_DWORD)result)
            return result;
LABEL_51:
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
            return 0;
          continue;
        case 5u:
          if (v8 != 45)
            goto LABEL_34;
          v47 = 0;
          v20 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v47);
            if (!(_DWORD)result)
              return result;
            v21 = v47;
          }
          else
          {
            v21 = *v20;
            *(_QWORD *)a2 = v20 + 1;
          }
          *((_DWORD *)this + 15) = v21;
          continue;
        default:
          goto LABEL_34;
      }
    }
LABEL_34:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B743C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UnaryFunctionLayerParams *CoreML::Specification::UnaryFunctionLayerParams::UnaryFunctionLayerParams(CoreML::Specification::UnaryFunctionLayerParams *this)
{
  *(_QWORD *)this = &off_1E9561D20;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B74438(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::UnaryFunctionLayerParams::MergePartialFromCodedStream(CoreML::Specification::UnaryFunctionLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v9;
  int v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  uint64_t Varint32Fallback;
  _BOOL8 result;
  unsigned int v22;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 < a2[1])
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_28;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8)
            goto LABEL_28;
          v9 = *a2;
          if (*a2 >= a2[1])
          {
            v10 = 0;
          }
          else
          {
            v10 = *v9;
            if ((*v9 & 0x80000000) == 0)
            {
              *a2 = v9 + 1;
              goto LABEL_36;
            }
          }
          Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v10);
          v10 = Varint32Fallback;
          if (Varint32Fallback < 0)
            return 0;
LABEL_36:
          *((_DWORD *)this + 4) = v10;
          break;
        case 2u:
          if (v7 != 21)
            goto LABEL_28;
          v22 = 0;
          v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result)
              return result;
            v12 = v22;
          }
          else
          {
            v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 29)
            goto LABEL_28;
          v22 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result)
              return result;
            v14 = v22;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
          continue;
        case 4u:
          if (v7 != 37)
            goto LABEL_28;
          v22 = 0;
          v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result)
              return result;
            v16 = v22;
          }
          else
          {
            v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 7) = v16;
          continue;
        case 5u:
          if (v7 != 45)
            goto LABEL_28;
          v22 = 0;
          v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v22);
            if (!result)
              return result;
            v18 = v22;
          }
          else
          {
            v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 8) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_28:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::AddLayerParams *CoreML::Specification::AddLayerParams::AddLayerParams(CoreML::Specification::AddLayerParams *this)
{
  *(_QWORD *)this = &off_1E955B700;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AddLayerParams *)&CoreML::Specification::_AddLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B746EC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::AddLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::MultiplyLayerParams *CoreML::Specification::MultiplyLayerParams::MultiplyLayerParams(CoreML::Specification::MultiplyLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F098;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyLayerParams *)&CoreML::Specification::_MultiplyLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B74844(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::MultiplyLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::AverageLayerParams *CoreML::Specification::AverageLayerParams::AverageLayerParams(CoreML::Specification::AverageLayerParams *this)
{
  *(_QWORD *)this = &off_1E955E258;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AverageLayerParams *)&CoreML::Specification::_AverageLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7499C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AverageLayerParams::MergePartialFromCodedStream(CoreML::Specification::AverageLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ScaleLayerParams *CoreML::Specification::ScaleLayerParams::ScaleLayerParams(CoreML::Specification::ScaleLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D380;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_BYTE *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  return this;
}

void sub_1D3B74A8C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *(_QWORD **)(v2 + 48);
  if (v4 && !*v4)
    operator delete(v4);
  v5 = *(_QWORD **)(v2 + 24);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ScaleLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScaleLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int TagFallback;
  char *v11;
  int VarintSizeAsIntFallback;
  CoreML::Specification::WeightParams *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  int v17;
  char *v18;
  int v19;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  _BOOL8 result;
  unsigned int v27;
  google::protobuf::io::CodedInputStream *v28;
  uint64_t v29;
  char v30;
  int v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  char *v36;
  unint64_t v37;
  unint64_t Varint64Fallback;
  char v39;
  signed int v40;
  uint64_t v41;
  int v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  signed int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;

  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v7 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v8) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
        v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v9 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v8 = *v7;
      if (*v7 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v7 + 1;
      v9 = v8 | 0x100000000;
      if ((v9 & 0x100000000) == 0)
        break;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 == 8)
          {
            v27 = 10;
            v28 = a2;
            v29 = (uint64_t)v6;
            goto LABEL_45;
          }
          if (v9 != 10)
            goto LABEL_32;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v32 = *((_DWORD *)a2 + 10);
            v33 = *((int *)a2 + 11);
            v34 = *((_QWORD *)a2 + 1);
            v35 = *((_DWORD *)a2 + 6);
            if (v32 == 0x7FFFFFFF)
              break;
            v36 = *(char **)a2;
            if ((int)(v32 - v35 + v33 + v34 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v36 >= v34 || *v36 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v39 & 1) == 0)
                return 0;
              v37 = Varint64Fallback;
            }
            else
            {
              v37 = *v36;
              *(_QWORD *)a2 = v36 + 1;
            }
            v40 = *((_DWORD *)this + 4);
            if (v40 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v6, v40 + 1);
              v40 = *v6;
            }
            v41 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v40 + 1;
            *(_QWORD *)(v41 + 8 * v40 + 8) = v37;
          }
          goto LABEL_73;
        case 2u:
          if (v9 != 18)
            goto LABEL_32;
          v13 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 8);
          if (!v13)
          {
            v13 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v13);
            *((_QWORD *)this + 8) = v13;
          }
          goto LABEL_29;
        case 3u:
          if (v9 != 24)
            goto LABEL_32;
          v14 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
          {
            v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0)
              return 0;
          }
          else
          {
            v15 = *v14;
            *(_QWORD *)a2 = v14 + 1;
          }
          *((_BYTE *)this + 80) = v15 != 0;
          continue;
        case 4u:
          if (v9 == 32)
          {
            v27 = 34;
            v28 = a2;
            v29 = (uint64_t)v5;
LABEL_45:
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(v27, v28, v29) & 1) == 0)return 0;
          }
          else
          {
            if (v9 != 34)
              goto LABEL_32;
            v16 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
            {
              v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v17 < 0)
                return 0;
            }
            else
            {
              v17 = *v16;
              *(_QWORD *)a2 = v16 + 1;
            }
            v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
            while (1)
            {
              v42 = *((_DWORD *)a2 + 10);
              v33 = *((int *)a2 + 11);
              v34 = *((_QWORD *)a2 + 1);
              v35 = *((_DWORD *)a2 + 6);
              if (v42 == 0x7FFFFFFF)
                break;
              v43 = *(char **)a2;
              if ((int)(v42 - v35 + v33 + v34 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v43 >= v34 || *v43 < 0)
              {
                v45 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v46 & 1) == 0)
                  return 0;
                v44 = v45;
              }
              else
              {
                v44 = *v43;
                *(_QWORD *)a2 = v43 + 1;
              }
              v47 = *((_DWORD *)this + 10);
              if (v47 == *((_DWORD *)this + 11))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v47 + 1);
                v47 = *v5;
              }
              v48 = *((_QWORD *)this + 6);
              *((_DWORD *)this + 10) = v47 + 1;
              *(_QWORD *)(v48 + 8 * v47 + 8) = v44;
            }
LABEL_73:
            *((_DWORD *)a2 + 10) = v31;
            v49 = v34 + v33;
            *((_QWORD *)a2 + 1) = v34 + v33;
            v50 = *((_DWORD *)a2 + 12);
            if (v50 >= v31)
              v50 = v31;
            v24 = __OFSUB__(v35, v50);
            v51 = v35 - v50;
            if ((v51 < 0) ^ v24 | (v51 == 0))
              v51 = 0;
            else
              *((_QWORD *)a2 + 1) = v49 - v51;
            *((_DWORD *)a2 + 11) = v51;
            *((_BYTE *)a2 + 36) = 0;
          }
          break;
        case 5u:
          if (v9 != 42)
            goto LABEL_32;
          v13 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 9);
          if (!v13)
          {
            v13 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v13);
            *((_QWORD *)this + 9) = v13;
          }
LABEL_29:
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
          {
            v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v19 < 0)
              return 0;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
          v23 = *((_DWORD *)a2 + 13);
          v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 13) = v23;
          if (v23 < 0 != v24)
            return 0;
          v25 = v21;
          result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v13, a2, v22);
          if (!result)
            return result;
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25))
            return 0;
          continue;
        default:
          goto LABEL_32;
      }
    }
LABEL_32:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B74F24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiasLayerParams *CoreML::Specification::BiasLayerParams::BiasLayerParams(CoreML::Specification::BiasLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955BFE8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B74FA8(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BiasLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiasLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  CoreML::Specification::WeightParams *v12;
  char *v13;
  int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BOOL8 result;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  char *v27;
  unint64_t v28;
  unint64_t Varint64Fallback;
  char v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0)
          goto LABEL_8;
LABEL_21:
        if ((_DWORD)v8)
          v15 = (v8 & 7) == 4;
        else
          v15 = 1;
        if (v15)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_21;
LABEL_8:
      if (v8 >> 3 == 2)
        break;
      if (v8 >> 3 != 1)
        goto LABEL_21;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          goto LABEL_21;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v23 = *((_DWORD *)a2 + 10);
          v24 = *((int *)a2 + 11);
          v25 = *((_QWORD *)a2 + 1);
          v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF)
            break;
          v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0)
              return 0;
            v28 = Varint64Fallback;
          }
          else
          {
            v28 = *v27;
            *(_QWORD *)a2 = v27 + 1;
          }
          v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            v31 = *v5;
          }
          v32 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(_QWORD *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 10) = v22;
        v33 = v25 + v24;
        *((_QWORD *)a2 + 1) = v25 + v24;
        v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22)
          v34 = v22;
        v19 = __OFSUB__(v26, v34);
        v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0))
          v35 = 0;
        else
          *((_QWORD *)a2 + 1) = v33 - v35;
        *((_DWORD *)a2 + 11) = v35;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if (v8 != 18)
      goto LABEL_21;
    v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (!v12)
    {
      v12 = (CoreML::Specification::WeightParams *)operator new();
      CoreML::Specification::WeightParams::WeightParams(v12);
      *((_QWORD *)this + 5) = v12;
    }
    v13 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
    {
      v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0)
        return 0;
    }
    else
    {
      v14 = *v13;
      *(_QWORD *)a2 = v13 + 1;
    }
    v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    v18 = *((_DWORD *)a2 + 13);
    v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 13) = v18;
    if (v18 < 0 != v19)
      break;
    v20 = v16;
    result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1D3B75288(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MaxLayerParams *CoreML::Specification::MaxLayerParams::MaxLayerParams(CoreML::Specification::MaxLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BB28;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxLayerParams *)&CoreML::Specification::_MaxLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B752F8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MinLayerParams *CoreML::Specification::MinLayerParams::MinLayerParams(CoreML::Specification::MinLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BBC0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MinLayerParams *)&CoreML::Specification::_MinLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B753D0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MinLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::DotProductLayerParams *CoreML::Specification::DotProductLayerParams::DotProductLayerParams(CoreML::Specification::DotProductLayerParams *this)
{
  *(_QWORD *)this = &off_1E955FF70;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::DotProductLayerParams *)&CoreML::Specification::_DotProductLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1D3B754AC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DotProductLayerParams::MergePartialFromCodedStream(CoreML::Specification::DotProductLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_BYTE *)this + 16) = Varint64Fallback != 0;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLayerParams *CoreML::Specification::ReduceLayerParams::ReduceLayerParams(CoreML::Specification::ReduceLayerParams *this)
{
  *(_QWORD *)this = &off_1E955DE30;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B75600(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ReduceLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  int v12;
  char *v13;
  int v14;
  unsigned int *v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  uint64_t Varint32Fallback;
  _BOOL8 result;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 24)
            goto LABEL_25;
          v13 = *a2;
          if (*a2 >= a2[1])
          {
            v14 = 0;
          }
          else
          {
            v14 = *v13;
            if ((*v13 & 0x80000000) == 0)
            {
              *a2 = v13 + 1;
              goto LABEL_36;
            }
          }
          Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v14);
          v14 = Varint32Fallback;
          if (Varint32Fallback < 0)
            return 0;
LABEL_36:
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 21)
          goto LABEL_25;
        v21 = 0;
        v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result)
            return result;
          v16 = v21;
        }
        else
        {
          v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_33;
        }
      }
      v18 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = v18;
      if (v18 < 0)
        return 0;
LABEL_33:
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LoadConstantLayerParams *CoreML::Specification::LoadConstantLayerParams::LoadConstantLayerParams(CoreML::Specification::LoadConstantLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9561308;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B75814(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LoadConstantLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  CoreML::Specification::WeightParams *v12;
  char *v13;
  int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BOOL8 result;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  char *v27;
  unint64_t v28;
  unint64_t Varint64Fallback;
  char v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0)
          goto LABEL_8;
LABEL_21:
        if ((_DWORD)v8)
          v15 = (v8 & 7) == 4;
        else
          v15 = 1;
        if (v15)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_21;
LABEL_8:
      if (v8 >> 3 == 2)
        break;
      if (v8 >> 3 != 1)
        goto LABEL_21;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          goto LABEL_21;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v23 = *((_DWORD *)a2 + 10);
          v24 = *((int *)a2 + 11);
          v25 = *((_QWORD *)a2 + 1);
          v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF)
            break;
          v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0)
              return 0;
            v28 = Varint64Fallback;
          }
          else
          {
            v28 = *v27;
            *(_QWORD *)a2 = v27 + 1;
          }
          v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            v31 = *v5;
          }
          v32 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(_QWORD *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 10) = v22;
        v33 = v25 + v24;
        *((_QWORD *)a2 + 1) = v25 + v24;
        v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22)
          v34 = v22;
        v19 = __OFSUB__(v26, v34);
        v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0))
          v35 = 0;
        else
          *((_QWORD *)a2 + 1) = v33 - v35;
        *((_DWORD *)a2 + 11) = v35;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if (v8 != 18)
      goto LABEL_21;
    v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (!v12)
    {
      v12 = (CoreML::Specification::WeightParams *)operator new();
      CoreML::Specification::WeightParams::WeightParams(v12);
      *((_QWORD *)this + 5) = v12;
    }
    v13 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
    {
      v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0)
        return 0;
    }
    else
    {
      v14 = *v13;
      *(_QWORD *)a2 = v13 + 1;
    }
    v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    v18 = *((_DWORD *)a2 + 13);
    v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 13) = v18;
    if (v18 < 0 != v19)
      break;
    v20 = v16;
    result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1D3B75AF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ReshapeLayerParams *CoreML::Specification::ReshapeLayerParams::ReshapeLayerParams(CoreML::Specification::ReshapeLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955E8E0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeLayerParams *)&CoreML::Specification::_ReshapeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B75B70(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  char *v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  char *v20;
  unint64_t v21;
  unint64_t Varint64Fallback;
  char v23;
  signed int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  int v29;
  uint64_t Varint32Fallback;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16)
          break;
        v12 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v13 = 0;
        }
        else
        {
          v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *(_QWORD *)a2 = v12 + 1;
            goto LABEL_47;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v13);
        v13 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
LABEL_47:
        *((_DWORD *)this + 9) = v13;
      }
      else
      {
        if (v8 >> 3 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          v15 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v16 = *((_DWORD *)a2 + 10);
            v17 = *((int *)a2 + 11);
            v18 = *((_QWORD *)a2 + 1);
            v19 = *((_DWORD *)a2 + 6);
            if (v16 == 0x7FFFFFFF)
              break;
            v20 = *(char **)a2;
            if ((int)(v16 - v19 + v17 + v18 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v20 >= v18 || *v20 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v23 & 1) == 0)
                return 0;
              v21 = Varint64Fallback;
            }
            else
            {
              v21 = *v20;
              *(_QWORD *)a2 = v20 + 1;
            }
            v24 = *((_DWORD *)this + 4);
            if (v24 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v24 + 1);
              v24 = *v5;
            }
            v25 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v24 + 1;
            *(_QWORD *)(v25 + 8 * v24 + 8) = v21;
          }
          *((_DWORD *)a2 + 10) = v15;
          v26 = v18 + v17;
          *((_QWORD *)a2 + 1) = v18 + v17;
          v27 = *((_DWORD *)a2 + 12);
          if (v27 >= v15)
            v27 = v15;
          v28 = __OFSUB__(v19, v27);
          v29 = v19 - v27;
          if ((v29 < 0) ^ v28 | (v29 == 0))
            v29 = 0;
          else
            *((_QWORD *)a2 + 1) = v26 - v29;
          *((_DWORD *)a2 + 11) = v29;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v14 = (v8 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FlattenLayerParams *CoreML::Specification::FlattenLayerParams::FlattenLayerParams(CoreML::Specification::FlattenLayerParams *this)
{
  *(_QWORD *)this = &off_1E955E4B8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenLayerParams *)&CoreML::Specification::_FlattenLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B75E3C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FlattenLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PermuteLayerParams *CoreML::Specification::PermuteLayerParams::PermuteLayerParams(CoreML::Specification::PermuteLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955E680;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::PermuteLayerParams *)&CoreML::Specification::_PermuteLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B75F9C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PermuteLayerParams::MergePartialFromCodedStream(CoreML::Specification::PermuteLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConcatLayerParams *CoreML::Specification::ConcatLayerParams::ConcatLayerParams(CoreML::Specification::ConcatLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D970;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatLayerParams *)&CoreML::Specification::_ConcatLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 16) = 0;
  *((_DWORD *)this + 5) = 0;
  return this;
}

void sub_1D3B76218(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConcatLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;
  unsigned int TagFallback;

  while (1)
  {
    while (1)
    {
      v5 = *(unsigned __int8 **)a2;
      v6 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 < v6)
        break;
      LODWORD(v8) = 0;
LABEL_16:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_17;
LABEL_8:
      if (v9 != 32 || (v9 & 0xFFFFFFF8) != 0x320)
        goto LABEL_17;
      v11 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *(_QWORD *)a2 = v11 + 1;
      }
      *((_BYTE *)this + 16) = Varint64Fallback != 0;
    }
    v7 = v5 + 1;
    v8 = *v5;
    if ((char)*v5 < 1)
    {
      if ((unint64_t)v7 < v6)
      {
        v10 = *v7;
        if ((v8 & ~v10) >= 0x80)
        {
          *(_QWORD *)a2 = v5 + 2;
          v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
          goto LABEL_8;
        }
      }
      goto LABEL_16;
    }
    *(_QWORD *)a2 = v7;
    v9 = v8 | 0x100000000;
    if ((v9 & 0x100000000) != 0)
      goto LABEL_8;
LABEL_17:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

CoreML::Specification::SplitLayerParams *CoreML::Specification::SplitLayerParams::SplitLayerParams(CoreML::Specification::SplitLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D4B0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SplitLayerParams *)&CoreML::Specification::_SplitLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B763AC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SplitLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v11;
  char v12;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::SequenceRepeatLayerParams *CoreML::Specification::SequenceRepeatLayerParams::SequenceRepeatLayerParams(CoreML::Specification::SequenceRepeatLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562310;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SequenceRepeatLayerParams *)&CoreML::Specification::_SequenceRepeatLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B764FC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SequenceRepeatLayerParams::MergePartialFromCodedStream(CoreML::Specification::SequenceRepeatLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v11;
  char v12;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 2) = *v11;
        *a2 = v11 + 1;
      }
    }
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::ReorganizeDataLayerParams *CoreML::Specification::ReorganizeDataLayerParams::ReorganizeDataLayerParams(CoreML::Specification::ReorganizeDataLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562148;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ReorganizeDataLayerParams *)&CoreML::Specification::_ReorganizeDataLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B76648(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReorganizeDataLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReorganizeDataLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  int v11;
  char *v12;
  BOOL v13;
  char v14;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v14 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 2) = *v12;
          *a2 = v12 + 1;
        }
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1])
      {
        v11 = 0;
      }
      else
      {
        v11 = *v10;
        if ((*v10 & 0x80000000) == 0)
        {
          *a2 = v10 + 1;
          goto LABEL_30;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
      v11 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_30:
      *((_DWORD *)this + 6) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v13 = (v7 & 7) == 4;
    else
      v13 = 1;
    if (v13)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceLayerParams *CoreML::Specification::SliceLayerParams::SliceLayerParams(CoreML::Specification::SliceLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D418;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1D3B767F0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v9;
  unint64_t Varint64Fallback;
  char *v11;
  unint64_t v12;
  char *v13;
  char *v14;
  int v15;
  BOOL v16;
  char v17;
  char v18;
  char v19;
  uint64_t Varint32Fallback;

  while (1)
  {
LABEL_1:
    v5 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(v6) = 0;
      break;
    }
    v6 = *v5;
    if (*v5 < 1)
      break;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_24:
    if ((_DWORD)v7)
      v16 = (v7 & 7) == 4;
    else
      v16 = 1;
    if (v16)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
  TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
  v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v7 & 0x100000000) == 0)
    goto LABEL_24;
LABEL_7:
  switch(v7 >> 3)
  {
    case 1u:
      if (v7 != 8)
        goto LABEL_24;
      v9 = *a2;
      if (*a2 >= a2[1] || *v9 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v9;
        *a2 = v9 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
      goto LABEL_1;
    case 2u:
      if (v7 != 16)
        goto LABEL_24;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        v12 = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 3) = v12;
      goto LABEL_1;
    case 3u:
      if (v7 != 24)
        goto LABEL_24;
      v13 = *a2;
      if (*a2 >= a2[1] || *v13 < 0)
      {
        *((_QWORD *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v19 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 4) = *v13;
        *a2 = v13 + 1;
      }
      goto LABEL_1;
    case 4u:
      if (v7 != 32)
        goto LABEL_24;
      v14 = *a2;
      if (*a2 >= a2[1])
      {
        v15 = 0;
      }
      else
      {
        v15 = *v14;
        if ((*v14 & 0x80000000) == 0)
        {
          *a2 = v14 + 1;
          goto LABEL_38;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v15);
      v15 = Varint32Fallback;
      if ((Varint32Fallback & 0x8000000000000000) == 0)
      {
LABEL_38:
        *((_DWORD *)this + 10) = v15;
        goto LABEL_1;
      }
      return 0;
    default:
      goto LABEL_24;
  }
}

CoreML::Specification::SimpleRecurrentLayerParams *CoreML::Specification::SimpleRecurrentLayerParams::SimpleRecurrentLayerParams(CoreML::Specification::SimpleRecurrentLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562998;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_DWORD *)((char *)this + 63) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 17) = 0;
  return this;
}

void sub_1D3B76A4C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SimpleRecurrentLayerParams::MergePartialFromCodedStream(CoreML::Specification::SimpleRecurrentLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int TagFallback;
  unsigned int v13;
  char *v14;
  unint64_t v15;
  char *v17;
  CoreML::Specification::WeightParams *v18;
  char *v19;
  unint64_t Varint64Fallback;
  char *v21;
  int v22;
  char *v23;
  unint64_t v24;
  CoreML::Specification::ActivationParams *v25;
  char *v26;
  int VarintSizeAsIntFallback;
  int v28;
  unsigned int v29;
  int v30;
  BOOL v31;
  int v32;
  uint64_t result;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  int v39;
  unsigned int v40;
  int v41;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *(unsigned __int8 **)a2;
          v6 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v6)
          {
            LODWORD(v8) = 0;
          }
          else
          {
            v7 = v5 + 1;
            v8 = *v5;
            if ((char)*v5 >= 1)
            {
              *(_QWORD *)a2 = v7;
              v9 = v8 | 0x100000000;
              if ((v9 & 0x100000000) == 0)
                goto LABEL_8;
              goto LABEL_16;
            }
            if ((unint64_t)v7 < v6)
            {
              v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(_QWORD *)a2 = v5 + 2;
                v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_16;
              }
            }
          }
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0)
            goto LABEL_8;
LABEL_16:
          v13 = v9 >> 3;
          if (v9 >> 3 > 0x13)
            break;
          if (v9 >> 3 > 9)
          {
            if (v13 == 10)
            {
              if (v9 != 82)
                goto LABEL_8;
              v25 = (CoreML::Specification::ActivationParams *)*((_QWORD *)this + 2);
              if (!v25)
              {
                v25 = (CoreML::Specification::ActivationParams *)operator new();
                CoreML::Specification::ActivationParams::ActivationParams(v25);
                *((_QWORD *)this + 2) = v25;
              }
              v26 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v26 < 0)
              {
                VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0)
                  return 0;
              }
              else
              {
                VarintSizeAsIntFallback = *v26;
                *(_QWORD *)a2 = v26 + 1;
              }
              v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              v41 = *((_DWORD *)a2 + 13);
              v31 = __OFSUB__(v41--, 1);
              *((_DWORD *)a2 + 13) = v41;
              if (v41 < 0 != v31)
                return 0;
              v32 = v39;
              result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v25, a2, v40);
              if (!(_DWORD)result)
                return result;
LABEL_87:
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32))
                return 0;
            }
            else
            {
              if (v13 != 15 || v9 != 120)
                goto LABEL_8;
              v19 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v36 & 1) == 0)
                  return 0;
              }
              else
              {
                Varint64Fallback = *v19;
                *(_QWORD *)a2 = v19 + 1;
              }
              *((_BYTE *)this + 64) = Varint64Fallback != 0;
            }
          }
          else if (v13 == 1)
          {
            if (v9 != 8)
              goto LABEL_8;
            v17 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
            {
              *((_QWORD *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v37 & 1) == 0)
                return 0;
            }
            else
            {
              *((_QWORD *)this + 6) = *v17;
LABEL_59:
              *(_QWORD *)a2 = v17 + 1;
            }
          }
          else
          {
            if (v13 != 2 || v9 != 16)
              goto LABEL_8;
            v17 = *(char **)a2;
            if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v17 & 0x80000000) == 0)
            {
              *((_QWORD *)this + 7) = *v17;
              goto LABEL_59;
            }
            *((_QWORD *)this + 7) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v35 & 1) == 0)
              return 0;
          }
        }
        if (v9 >> 3 > 0x1E)
          break;
        if (v13 != 20)
        {
          if (v13 != 30 || v9 != 242)
            goto LABEL_8;
          v18 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
          if (!v18)
          {
            v18 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v18);
            *((_QWORD *)this + 3) = v18;
          }
          goto LABEL_52;
        }
        if (v9 != 160)
          goto LABEL_8;
        v23 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v23 < 0)
        {
          v24 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0)
            return 0;
        }
        else
        {
          v24 = *v23;
          *(_QWORD *)a2 = v23 + 1;
        }
        *((_BYTE *)this + 65) = v24 != 0;
      }
      if (v13 == 31)
        break;
      if (v13 == 32)
      {
        if (v9 == 2)
        {
          v18 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
          if (!v18)
          {
            v18 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v18);
            *((_QWORD *)this + 5) = v18;
          }
LABEL_52:
          v21 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
          {
            v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v22 < 0)
              return 0;
          }
          else
          {
            v22 = *v21;
            *(_QWORD *)a2 = v21 + 1;
          }
          v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
          v30 = *((_DWORD *)a2 + 13);
          v31 = __OFSUB__(v30--, 1);
          *((_DWORD *)a2 + 13) = v30;
          if (v30 < 0 != v31)
            return 0;
          v32 = v28;
          result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v18, a2, v29);
          if (!(_DWORD)result)
            return result;
          goto LABEL_87;
        }
        goto LABEL_8;
      }
      if (v13 != 100 || v9 != 32)
        goto LABEL_8;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
      {
        v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v34 & 1) == 0)
          return 0;
      }
      else
      {
        v15 = *v14;
        *(_QWORD *)a2 = v14 + 1;
      }
      *((_BYTE *)this + 66) = v15 != 0;
    }
    if (v9 == 250)
    {
      v18 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 4);
      if (!v18)
      {
        v18 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v18);
        *((_QWORD *)this + 4) = v18;
      }
      goto LABEL_52;
    }
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B76ECC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::GRULayerParams *CoreML::Specification::GRULayerParams::GRULayerParams(CoreML::Specification::GRULayerParams *this)
{
  *(_QWORD *)this = &off_1E955B960;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_OWORD *)((char *)this + 115) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 33) = 0;
  return this;
}

void sub_1D3B76F88(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GRULayerParams::MergePartialFromCodedStream(CoreML::Specification::GRULayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int TagFallback;
  unsigned int v14;
  CoreML::Specification::WeightParams *v15;
  char *v16;
  unint64_t v17;
  CoreML::Specification::ActivationParams *v18;
  char *v19;
  int VarintSizeAsIntFallback;
  char *v21;
  unint64_t v22;
  char *v23;
  unint64_t Varint64Fallback;
  char *v25;
  char *v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  BOOL v31;
  int v32;
  uint64_t result;
  char v34;
  int v35;
  unsigned int v36;
  int v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v5 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *(unsigned __int8 **)a2;
        v7 = *((_QWORD *)a2 + 1);
        if (*(_QWORD *)a2 >= v7)
        {
          LODWORD(v9) = 0;
        }
        else
        {
          v8 = v6 + 1;
          v9 = *v6;
          if ((char)*v6 >= 1)
          {
            *(_QWORD *)a2 = v8;
            v10 = v9 | 0x100000000;
            if ((v10 & 0x100000000) == 0)
              goto LABEL_9;
            goto LABEL_17;
          }
          if ((unint64_t)v8 < v7)
          {
            v11 = *v8;
            if ((v9 & ~v11) >= 0x80)
            {
              *(_QWORD *)a2 = v6 + 2;
              v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
        v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v10 & 0x100000000) == 0)
          goto LABEL_9;
LABEL_17:
        v14 = v10 >> 3;
        if (v10 >> 3 > 0x1F)
          break;
        if (v10 >> 3 <= 0xE)
        {
          if (v14 == 1)
          {
            if (v10 != 8)
              goto LABEL_9;
            v25 = *(char **)a2;
            if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v25 & 0x80000000) == 0)
            {
              *((_QWORD *)this + 14) = *v25;
              goto LABEL_79;
            }
            *((_QWORD *)this + 14) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0)
              return 0;
          }
          else if (v14 == 2)
          {
            if (v10 != 16)
              goto LABEL_9;
            v25 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v25 < 0)
            {
              *((_QWORD *)this + 15) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v41 & 1) == 0)
                return 0;
            }
            else
            {
              *((_QWORD *)this + 15) = *v25;
LABEL_79:
              *(_QWORD *)a2 = v25 + 1;
            }
          }
          else
          {
            if (v14 != 10 || v10 != 82)
              goto LABEL_9;
            v18 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((uint64_t)v5);
            v19 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v19;
              *(_QWORD *)a2 = v19 + 1;
            }
            v35 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            v37 = *((_DWORD *)a2 + 13);
            v31 = __OFSUB__(v37--, 1);
            *((_DWORD *)a2 + 13) = v37;
            if (v37 < 0 != v31)
              return 0;
            v32 = v35;
            result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v18, a2, v36);
            if (!(_DWORD)result)
              return result;
LABEL_95:
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v32))
              return 0;
          }
        }
        else
        {
          if (v10 >> 3 > 0x1D)
          {
            if (v14 == 30)
            {
              if (v10 == 242)
              {
                v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
                if (!v15)
                {
                  v15 = (CoreML::Specification::WeightParams *)operator new();
                  CoreML::Specification::WeightParams::WeightParams(v15);
                  *((_QWORD *)this + 5) = v15;
                }
                goto LABEL_89;
              }
            }
            else if (v14 == 31 && v10 == 250)
            {
              v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
              if (!v15)
              {
                v15 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v15);
                *((_QWORD *)this + 6) = v15;
              }
              goto LABEL_89;
            }
            goto LABEL_9;
          }
          if (v14 == 15)
          {
            if (v10 != 120)
              goto LABEL_9;
            v23 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v23 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v39 & 1) == 0)
                return 0;
            }
            else
            {
              Varint64Fallback = *v23;
              *(_QWORD *)a2 = v23 + 1;
            }
            *((_BYTE *)this + 128) = Varint64Fallback != 0;
          }
          else
          {
            if (v14 != 20 || v10 != 160)
              goto LABEL_9;
            v16 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
            {
              v17 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v34 & 1) == 0)
                return 0;
            }
            else
            {
              v17 = *v16;
              *(_QWORD *)a2 = v16 + 1;
            }
            *((_BYTE *)this + 129) = v17 != 0;
          }
        }
      }
      if (v10 >> 3 <= 0x45)
        break;
      if (v10 >> 3 <= 0x47)
      {
        if (v14 == 70)
        {
          if (v10 == 50)
          {
            v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 11);
            if (!v15)
            {
              v15 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v15);
              *((_QWORD *)this + 11) = v15;
            }
            goto LABEL_89;
          }
        }
        else if (v10 == 58)
        {
          v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 12);
          if (!v15)
          {
            v15 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v15);
            *((_QWORD *)this + 12) = v15;
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 == 72)
      {
        if (v10 == 66)
        {
          v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 13);
          if (!v15)
          {
            v15 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v15);
            *((_QWORD *)this + 13) = v15;
          }
          goto LABEL_89;
        }
        goto LABEL_9;
      }
      if (v14 != 100 || v10 != 32)
        goto LABEL_9;
      v21 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
      {
        v22 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v38 & 1) == 0)
          return 0;
      }
      else
      {
        v22 = *v21;
        *(_QWORD *)a2 = v21 + 1;
      }
      *((_BYTE *)this + 130) = v22 != 0;
    }
    if (v10 >> 3 > 0x32)
    {
      if (v14 == 51)
      {
        if (v10 == 154)
        {
          v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 9);
          if (!v15)
          {
            v15 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v15);
            *((_QWORD *)this + 9) = v15;
          }
          goto LABEL_89;
        }
      }
      else if (v14 == 52 && v10 == 162)
      {
        v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 10);
        if (!v15)
        {
          v15 = (CoreML::Specification::WeightParams *)operator new();
          CoreML::Specification::WeightParams::WeightParams(v15);
          *((_QWORD *)this + 10) = v15;
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 32)
    {
      if (v10 == 2)
      {
        v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 7);
        if (!v15)
        {
          v15 = (CoreML::Specification::WeightParams *)operator new();
          CoreML::Specification::WeightParams::WeightParams(v15);
          *((_QWORD *)this + 7) = v15;
        }
        goto LABEL_89;
      }
    }
    else if (v14 == 50 && v10 == 146)
    {
      v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 8);
      if (!v15)
      {
        v15 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v15);
        *((_QWORD *)this + 8) = v15;
      }
LABEL_89:
      v26 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v26 < 0)
      {
        v27 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v27 < 0)
          return 0;
      }
      else
      {
        v27 = *v26;
        *(_QWORD *)a2 = v26 + 1;
      }
      v28 = google::protobuf::io::CodedInputStream::PushLimit(a2, v27);
      v30 = *((_DWORD *)a2 + 13);
      v31 = __OFSUB__(v30--, 1);
      *((_DWORD *)a2 + 13) = v30;
      if (v30 < 0 != v31)
        return 0;
      v32 = v28;
      result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v15, a2, v29);
      if (!(_DWORD)result)
        return result;
      goto LABEL_95;
    }
LABEL_9:
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B775AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UniDirectionalLSTMLayerParams *CoreML::Specification::UniDirectionalLSTMLayerParams::UniDirectionalLSTMLayerParams(CoreML::Specification::UniDirectionalLSTMLayerParams *this)
{
  *(_QWORD *)this = &off_1E95636A8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 72) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_1D3B77660(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UniDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::UniDirectionalLSTMLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int TagFallback;
  unsigned int v14;
  CoreML::Specification::ActivationParams *v15;
  char *v16;
  int v17;
  char *v18;
  unint64_t Varint64Fallback;
  char *v20;
  CoreML::Specification::LSTMParams *v21;
  char *v22;
  int VarintSizeAsIntFallback;
  CoreML::Specification::LSTMWeightParams *v24;
  char *v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  BOOL v30;
  int v31;
  uint64_t result;
  char v33;
  char v34;
  char v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  int v41;

  v5 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *(unsigned __int8 **)a2;
          v7 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v7)
          {
            LODWORD(v9) = 0;
          }
          else
          {
            v8 = v6 + 1;
            v9 = *v6;
            if ((char)*v6 >= 1)
            {
              *(_QWORD *)a2 = v8;
              v10 = v9 | 0x100000000;
              if ((v10 & 0x100000000) == 0)
                goto LABEL_9;
              goto LABEL_17;
            }
            if ((unint64_t)v8 < v7)
            {
              v11 = *v8;
              if ((v9 & ~v11) >= 0x80)
              {
                *(_QWORD *)a2 = v6 + 2;
                v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                goto LABEL_17;
              }
            }
          }
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
          v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v10 & 0x100000000) == 0)
            goto LABEL_9;
LABEL_17:
          v14 = v10 >> 3;
          if (v10 >> 3 <= 0xE)
            break;
          if (v14 == 15)
          {
            if (v10 != 122)
              goto LABEL_9;
            v21 = (CoreML::Specification::LSTMParams *)*((_QWORD *)this + 5);
            if (!v21)
            {
              v21 = (CoreML::Specification::LSTMParams *)operator new();
              CoreML::Specification::LSTMParams::LSTMParams(v21);
              *((_QWORD *)this + 5) = v21;
            }
            v22 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v22;
              *(_QWORD *)a2 = v22 + 1;
            }
            v36 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            v38 = *((_DWORD *)a2 + 13);
            v30 = __OFSUB__(v38--, 1);
            *((_DWORD *)a2 + 13) = v38;
            if (v38 < 0 != v30)
              return 0;
            v31 = v36;
            result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v21, a2, v37);
            if (!(_DWORD)result)
              return result;
            goto LABEL_70;
          }
          if (v14 == 20)
          {
            if (v10 != 162)
              goto LABEL_9;
            v24 = (CoreML::Specification::LSTMWeightParams *)*((_QWORD *)this + 6);
            if (!v24)
            {
              v24 = (CoreML::Specification::LSTMWeightParams *)operator new();
              CoreML::Specification::LSTMWeightParams::LSTMWeightParams(v24);
              *((_QWORD *)this + 6) = v24;
            }
            v25 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v25 < 0)
            {
              v26 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (v26 < 0)
                return 0;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v39 = google::protobuf::io::CodedInputStream::PushLimit(a2, v26);
            v41 = *((_DWORD *)a2 + 13);
            v30 = __OFSUB__(v41--, 1);
            *((_DWORD *)a2 + 13) = v41;
            if (v41 < 0 != v30)
              return 0;
            v31 = v39;
            result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(v24, a2, v40);
            if (!(_DWORD)result)
              return result;
LABEL_70:
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v31))
              return 0;
          }
          else
          {
            if (v14 != 100 || v10 != 32)
              goto LABEL_9;
            v18 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v33 & 1) == 0)
                return 0;
            }
            else
            {
              Varint64Fallback = *v18;
              *(_QWORD *)a2 = v18 + 1;
            }
            *((_BYTE *)this + 72) = Varint64Fallback != 0;
          }
        }
        if (v14 != 1)
          break;
        if (v10 != 8)
          goto LABEL_9;
        v20 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v20 & 0x80000000) == 0)
        {
          *((_QWORD *)this + 7) = *v20;
          goto LABEL_40;
        }
        *((_QWORD *)this + 7) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v34 & 1) == 0)
          return 0;
      }
      if (v14 != 2)
        break;
      if (v10 != 16)
        goto LABEL_9;
      v20 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
      {
        *((_QWORD *)this + 8) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v35 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 8) = *v20;
LABEL_40:
        *(_QWORD *)a2 = v20 + 1;
      }
    }
    if (v14 == 10 && v10 == 82)
    {
      v15 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>((uint64_t)v5);
      v16 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
      {
        v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0)
          return 0;
      }
      else
      {
        v17 = *v16;
        *(_QWORD *)a2 = v16 + 1;
      }
      v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      v29 = *((_DWORD *)a2 + 13);
      v30 = __OFSUB__(v29--, 1);
      *((_DWORD *)a2 + 13) = v29;
      if (v29 < 0 != v30)
        return 0;
      v31 = v27;
      result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v15, a2, v28);
      if (!(_DWORD)result)
        return result;
      goto LABEL_70;
    }
LABEL_9:
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B77A38(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiDirectionalLSTMLayerParams *CoreML::Specification::BiDirectionalLSTMLayerParams::BiDirectionalLSTMLayerParams(CoreML::Specification::BiDirectionalLSTMLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563150;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  if (this != (CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_DWORD *)this + 28) = 0;
  *((_QWORD *)this + 13) = 0;
  return this;
}

void sub_1D3B77AFC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BiDirectionalLSTMLayerParams::MergePartialFromCodedStream(CoreML::Specification::BiDirectionalLSTMLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::Arena **v5;
  char *v6;
  char *v7;
  unint64_t *v8;
  unint64_t *v9;
  unsigned __int8 *v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  unsigned int TagFallback;
  unsigned int v18;
  uint64_t v19;
  int *v20;
  int v21;
  int v22;
  CoreML::Specification::LSTMWeightParams *Aligned;
  char *v24;
  unint64_t v25;
  unint64_t *v26;
  CoreML::Specification::ActivationParams *v27;
  char *v28;
  int v29;
  CoreML::Specification::LSTMParams *v30;
  char *v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  BOOL v36;
  int v37;
  uint64_t result;
  char v39;
  char v40;
  int v41;
  unsigned int v42;
  int v43;
  google::protobuf::Arena *v44;
  google::protobuf::Arena **v45;
  unint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int VarintSizeAsIntFallback;
  int v52;
  unsigned int v53;
  int v54;

  v5 = (google::protobuf::Arena **)((char *)this + 64);
  v6 = (char *)this + 40;
  v7 = (char *)this + 16;
  v8 = (unint64_t *)((char *)this + 104);
  v9 = (unint64_t *)((char *)this + 96);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v10 = *(unsigned __int8 **)a2;
        v11 = *((_QWORD *)a2 + 1);
        if (*(_QWORD *)a2 >= v11)
        {
          LODWORD(v13) = 0;
        }
        else
        {
          v12 = v10 + 1;
          v13 = *v10;
          if ((char)*v10 >= 1)
          {
            *(_QWORD *)a2 = v12;
            v14 = v13 | 0x100000000;
            if ((v14 & 0x100000000) == 0)
              goto LABEL_9;
            goto LABEL_17;
          }
          if ((unint64_t)v12 < v11)
          {
            v15 = *v12;
            if ((v13 & ~v15) >= 0x80)
            {
              *(_QWORD *)a2 = v10 + 2;
              v14 = (v13 + (v15 << 7) - 128) | 0x100000000;
              goto LABEL_17;
            }
          }
        }
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v13);
        v14 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v14 & 0x100000000) == 0)
          goto LABEL_9;
LABEL_17:
        v18 = v14 >> 3;
        if (v14 >> 3 > 0xA)
          break;
        if (v18 == 1)
        {
          if (v14 != 8)
            goto LABEL_9;
          v24 = *(char **)a2;
          if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v24 & 0x80000000) == 0)
          {
            v25 = *v24;
            v26 = v9;
            goto LABEL_38;
          }
          *v9 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v39 & 1) == 0)
            return 0;
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 10 && v14 == 82)
            {
              v19 = (uint64_t)v7;
              goto LABEL_41;
            }
            goto LABEL_9;
          }
          if (v14 != 16)
            goto LABEL_9;
          v24 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v24 < 0)
          {
            *v8 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v40 & 1) == 0)
              return 0;
          }
          else
          {
            v25 = *v24;
            v26 = v8;
LABEL_38:
            *v26 = v25;
            *(_QWORD *)a2 = v24 + 1;
          }
        }
      }
      if (v18 == 11)
        break;
      if (v18 != 15)
      {
        if (v18 != 20 || v14 != 162)
          goto LABEL_9;
        v20 = (int *)*((_QWORD *)this + 10);
        if (v20)
        {
          v21 = *((_DWORD *)this + 18);
          v22 = *v20;
          if (v21 < *v20)
          {
            *((_DWORD *)this + 18) = v21 + 1;
            Aligned = *(CoreML::Specification::LSTMWeightParams **)&v20[2 * v21 + 2];
LABEL_73:
            v50 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v50 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v50;
              *(_QWORD *)a2 = v50 + 1;
            }
            v52 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            v54 = *((_DWORD *)a2 + 13);
            v36 = __OFSUB__(v54--, 1);
            *((_DWORD *)a2 + 13) = v54;
            if (v54 < 0 != v36)
              return 0;
            v37 = v52;
            result = CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(Aligned, a2, v53);
            if (!(_DWORD)result)
              return result;
            goto LABEL_79;
          }
          if (v22 != *((_DWORD *)this + 19))
          {
LABEL_67:
            *v20 = v22 + 1;
            v44 = *v5;
            if (*v5)
            {
              CoreML::Specification::LSTMWeightParams::LSTMWeightParams(Aligned);
              v45 = google::protobuf::Arena::AllocateAligned(v44, 0, 24);
              *v45 = Aligned;
              v45[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::LSTMWeightParams>;
              v46 = (unint64_t *)((char *)v44 + 32);
              do
                v47 = __ldxr(v46);
              while (__stxr((unint64_t)v45, v46));
              v45[2] = (google::protobuf::Arena *)v47;
            }
            else
            {
              Aligned = (CoreML::Specification::LSTMWeightParams *)operator new();
              CoreML::Specification::LSTMWeightParams::LSTMWeightParams(Aligned);
            }
            v48 = *((_QWORD *)this + 10);
            v49 = *((int *)this + 18);
            *((_DWORD *)this + 18) = v49 + 1;
            *(_QWORD *)(v48 + 8 * v49 + 8) = Aligned;
            goto LABEL_73;
          }
        }
        else
        {
          v21 = *((_DWORD *)this + 18);
          v22 = *((_DWORD *)this + 19);
        }
        if (v21 <= v22)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v5, v22 - v21 + 1);
          v20 = (int *)*((_QWORD *)this + 10);
        }
        v22 = *v20;
        goto LABEL_67;
      }
      if (v14 != 122)
        goto LABEL_9;
      v30 = (CoreML::Specification::LSTMParams *)*((_QWORD *)this + 11);
      if (!v30)
      {
        v30 = (CoreML::Specification::LSTMParams *)operator new();
        CoreML::Specification::LSTMParams::LSTMParams(v30);
        *((_QWORD *)this + 11) = v30;
      }
      v31 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v31 < 0)
      {
        v32 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v32 < 0)
          return 0;
      }
      else
      {
        v32 = *v31;
        *(_QWORD *)a2 = v31 + 1;
      }
      v41 = google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
      v43 = *((_DWORD *)a2 + 13);
      v36 = __OFSUB__(v43--, 1);
      *((_DWORD *)a2 + 13) = v43;
      if (v43 < 0 != v36)
        return 0;
      v37 = v41;
      result = CoreML::Specification::LSTMParams::MergePartialFromCodedStream(v30, a2, v42);
      if (!(_DWORD)result)
        return result;
LABEL_79:
      if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v37))
        return 0;
    }
    if (v14 == 90)
    {
      v19 = (uint64_t)v6;
LABEL_41:
      v27 = google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(v19);
      v28 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v28 < 0)
      {
        v29 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v29 < 0)
          return 0;
      }
      else
      {
        v29 = *v28;
        *(_QWORD *)a2 = v28 + 1;
      }
      v33 = google::protobuf::io::CodedInputStream::PushLimit(a2, v29);
      v35 = *((_DWORD *)a2 + 13);
      v36 = __OFSUB__(v35--, 1);
      *((_DWORD *)a2 + 13) = v35;
      if (v35 < 0 != v36)
        return 0;
      v37 = v33;
      result = CoreML::Specification::ActivationParams::MergePartialFromCodedStream(v27, a2, v34);
      if (!(_DWORD)result)
        return result;
      goto LABEL_79;
    }
LABEL_9:
    if (!(_DWORD)v14 || (v14 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v14, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B77FAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CustomLayerParams::MergePartialFromCodedStream(CoreML::Specification::CustomLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  _QWORD *v6;
  std::string **v7;
  unsigned __int8 *v8;
  unint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  int *v15;
  int v16;
  int v17;
  CoreML::Specification::WeightParams *Aligned;
  std::string *v19;
  std::string *v20;
  std::string::size_type size;
  std::string *v22;
  char *v23;
  int VarintSizeAsIntFallback;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  _BYTE *v29;
  uint64_t v30;
  CoreML::Specification::CustomLayerParams_CustomLayerParamValue *v31;
  char *v32;
  int v33;
  uint64_t v34;
  std::string *v35;
  int BeyondKeyValuePair;
  __n128 v37;
  BOOL v38;
  int v39;
  const char *v40;
  google::protobuf::Arena *v41;
  google::protobuf::Arena **v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int *p_p;
  int v58;
  _BOOL4 v59;
  unsigned int TagFallback;
  google::protobuf::internal::RepeatedPtrFieldBase *v63;
  google::protobuf::Arena **v64;
  google::protobuf::Arena **v65;
  _QWORD *v66;
  std::string __p;
  google::protobuf::Arena **v68;
  uint64_t v69;

  v5 = (std::string **)((char *)this + 80);
  v6 = (_QWORD *)((char *)this + 48);
  v63 = (CoreML::Specification::CustomLayerParams *)((char *)this + 16);
  v64 = (google::protobuf::Arena **)((char *)this + 40);
  v7 = (std::string **)((char *)this + 72);
  while (1)
  {
    while (1)
    {
      v8 = *(unsigned __int8 **)a2;
      v9 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v9)
      {
        LODWORD(v11) = 0;
LABEL_111:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
        v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
        if ((v12 & 0x100000000) == 0)
          goto LABEL_112;
        goto LABEL_9;
      }
      v10 = v8 + 1;
      v11 = *v8;
      if ((char)*v8 >= 1)
        break;
      if ((unint64_t)v10 >= v9)
        goto LABEL_111;
      v13 = *v10;
      if ((v11 & ~v13) < 0x80)
        goto LABEL_111;
      *(_QWORD *)a2 = v8 + 2;
      v12 = (v11 + (v13 << 7) - 128) | 0x100000000;
LABEL_9:
      v14 = v12 >> 3;
      if (v12 >> 3 > 0x1D)
      {
        if (v14 != 30)
        {
          if (v14 != 40 || v12 != 66)
            goto LABEL_112;
          v19 = *v5;
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            v19 = *v5;
          }
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v19))
            return 0;
          v20 = *v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
            size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          v40 = "CoreML.Specification.CustomLayerParams.description";
          goto LABEL_64;
        }
        if (v12 != 242)
          goto LABEL_112;
        v65 = v64;
        v66 = v6;
        memset(&__p, 0, sizeof(__p));
        v69 = 0;
        v23 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v23 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            goto LABEL_109;
        }
        else
        {
          VarintSizeAsIntFallback = *v23;
          *(_QWORD *)a2 = v23 + 1;
        }
        v25 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        v26 = *((_DWORD *)a2 + 13);
        v27 = __OFSUB__(v26--, 1);
        *((_DWORD *)a2 + 13) = v26;
        if (v26 < 0 != v27)
          goto LABEL_109;
        v28 = v25;
        v29 = *(_BYTE **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && *v29 == 10)
        {
          *(_QWORD *)a2 = v29 + 1;
          if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, &__p))
            goto LABEL_109;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) >= 1 && **(_BYTE **)a2 == 18)
          {
            v30 = *(_QWORD *)v66[2];
            v68 = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[]((uint64_t)v66, (uint64_t)&__p);
            if (v30 != *(_QWORD *)v66[2])
            {
              google::protobuf::io::CodedInputStream::Skip(a2, 1u);
              v31 = (CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)v68;
              v32 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v32 < 0)
              {
                v33 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if ((v33 & 0x80000000) == 0)
                  goto LABEL_85;
              }
              else
              {
                v33 = *v32;
                *(_QWORD *)a2 = v32 + 1;
LABEL_85:
                v53 = google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
                v55 = *((_DWORD *)a2 + 13);
                v27 = __OFSUB__(v55--, 1);
                *((_DWORD *)a2 + 13) = v55;
                if (v55 < 0 == v27)
                {
                  v56 = v53;
                  if (CoreML::Specification::CustomLayerParams_CustomLayerParamValue::MergePartialFromCodedStream(v31, a2, v54)&& google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v56))
                  {
                    if (*(_QWORD *)a2 == *((_QWORD *)a2 + 1)
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      *((_BYTE *)a2 + 36) = 1;
                      goto LABEL_91;
                    }
                    BeyondKeyValuePair = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::ReadBeyondKeyValuePair((uint64_t)&v65, (uint64_t)a2);
LABEL_90:
                    if (BeyondKeyValuePair)
                    {
LABEL_91:
                      if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v28))
                      {
                        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                          p_p = (unsigned int *)&__p;
                        else
                          p_p = (unsigned int *)__p.__r_.__value_.__r.__words[0];
                        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                          v58 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                        else
                          v58 = __p.__r_.__value_.__r.__words[1];
                        v59 = google::protobuf::internal::WireFormatLite::VerifyUtf8String(p_p, v58, 0, (uint64_t)"CoreML.Specification.CustomLayerParams.ParametersEntry.key");
                        v38 = v59;
                        if (v59)
                          v39 = 0;
                        else
                          v39 = 6;
LABEL_101:
                        if (v69)
                          (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
                        goto LABEL_103;
                      }
                    }
LABEL_109:
                    v38 = 0;
                    v39 = 6;
                    goto LABEL_101;
                  }
                }
              }
              google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(v66, (unsigned __int8 *)&__p);
              goto LABEL_109;
            }
          }
        }
        else
        {
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          memset(&__p, 0, sizeof(__p));
        }
        v34 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(*v65);
        if (v69 != v34)
        {
          if (v69)
            (*(void (**)(void))(*(_QWORD *)v69 + 8))();
          v69 = v34;
        }
        v35 = *(std::string **)(v34 + 16);
        *(_DWORD *)(v34 + 40) |= 1u;
        if (v35 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(v34 + 16), *(google::protobuf::Arena ***)(v34 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v35 = *(std::string **)(v34 + 16);
        }
        std::string::operator=(v35, &__p);
        BeyondKeyValuePair = (*(uint64_t (**)(uint64_t, google::protobuf::io::CodedInputStream *))(*(_QWORD *)v69 + 88))(v69, a2);
        if (BeyondKeyValuePair)
          v37.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry((uint64_t)&v65);
        if (!(*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v69 + 40))(v69, v37))
          goto LABEL_90;
        v69 = 0;
        if ((BeyondKeyValuePair & 1) != 0)
          goto LABEL_91;
        v38 = 0;
        v39 = 6;
LABEL_103:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (!v38 && v39)
          return 0;
      }
      else if (v14 == 10)
      {
        if (v12 != 82)
          goto LABEL_112;
        v22 = *v7;
        if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v22 = *v7;
        }
        if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v22))
          return 0;
        v20 = *v7;
        if (SHIBYTE((*v7)->__r_.__value_.__r.__words[2]) < 0)
        {
          v20 = (std::string *)v20->__r_.__value_.__r.__words[0];
          size = (*v7)->__r_.__value_.__l.__size_;
        }
        else
        {
          LODWORD(size) = HIBYTE((*v7)->__r_.__value_.__r.__words[2]);
        }
        v40 = "CoreML.Specification.CustomLayerParams.className";
LABEL_64:
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((unsigned int *)v20, size, 0, (uint64_t)v40))
          return 0;
      }
      else
      {
        if (v14 != 20 || v12 != 162)
          goto LABEL_112;
        v15 = (int *)*((_QWORD *)this + 4);
        if (!v15)
        {
          v16 = *((_DWORD *)this + 6);
          v17 = *((_DWORD *)this + 7);
          goto LABEL_67;
        }
        v16 = *((_DWORD *)this + 6);
        v17 = *v15;
        if (v16 >= *v15)
        {
          if (v17 == *((_DWORD *)this + 7))
          {
LABEL_67:
            if (v16 <= v17)
            {
              google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v63, v17 - v16 + 1);
              v15 = (int *)*((_QWORD *)this + 4);
            }
            v17 = *v15;
          }
          *v15 = v17 + 1;
          v41 = *(google::protobuf::Arena **)v63;
          if (*(_QWORD *)v63)
          {
            CoreML::Specification::WeightParams::WeightParams(Aligned);
            v42 = google::protobuf::Arena::AllocateAligned(v41, 0, 24);
            *v42 = Aligned;
            v42[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::WeightParams>;
            v43 = (unint64_t *)((char *)v41 + 32);
            do
              v44 = __ldxr(v43);
            while (__stxr((unint64_t)v42, v43));
            v42[2] = (google::protobuf::Arena *)v44;
          }
          else
          {
            Aligned = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(Aligned);
          }
          v45 = *((_QWORD *)this + 4);
          v46 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v46 + 1;
          *(_QWORD *)(v45 + 8 * v46 + 8) = Aligned;
          goto LABEL_76;
        }
        *((_DWORD *)this + 6) = v16 + 1;
        Aligned = *(CoreML::Specification::WeightParams **)&v15[2 * v16 + 2];
LABEL_76:
        v47 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v47 < 0)
        {
          v48 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v48 < 0)
            return 0;
        }
        else
        {
          v48 = *v47;
          *(_QWORD *)a2 = v47 + 1;
        }
        v49 = google::protobuf::io::CodedInputStream::PushLimit(a2, v48);
        v51 = *((_DWORD *)a2 + 13);
        v27 = __OFSUB__(v51--, 1);
        *((_DWORD *)a2 + 13) = v51;
        if (v51 < 0 != v27)
          return 0;
        v52 = v49;
        if (!CoreML::Specification::WeightParams::MergePartialFromCodedStream(Aligned, a2, v50)
          || !google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v52))
        {
          return 0;
        }
      }
    }
    *(_QWORD *)a2 = v10;
    v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0)
      goto LABEL_9;
LABEL_112:
    if (!(_DWORD)v12 || (v12 & 7) == 4)
      return 1;
    if (!google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3))return 0;
  }
}

void sub_1D3B786A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  MEMORY[0x1D8251A40](v21, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CopyLayerParams *CoreML::Specification::CopyLayerParams::CopyLayerParams(CoreML::Specification::CopyLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C1B0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CopyLayerParams *)&CoreML::Specification::_CopyLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7873C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CopyLayerParams::MergePartialFromCodedStream(CoreML::Specification::CopyLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BranchLayerParams *CoreML::Specification::BranchLayerParams::BranchLayerParams(CoreML::Specification::BranchLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D8D8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B78818(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BranchLayerParams::MergePartialFromCodedStream(CoreML::Specification::BranchLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::NeuralNetwork *v10;
  char *v11;
  int VarintSizeAsIntFallback;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t result;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_21;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        goto LABEL_21;
LABEL_7:
      if (v7 >> 3 != 2)
        break;
      if (v7 != 18)
        goto LABEL_21;
      v10 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 3);
      if (!v10)
      {
        v10 = (CoreML::Specification::NeuralNetwork *)operator new();
        CoreML::Specification::NeuralNetwork::NeuralNetwork(v10);
        *((_QWORD *)this + 3) = v10;
      }
LABEL_18:
      v11 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v11;
        *(_QWORD *)a2 = v11 + 1;
      }
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v15 = *((_DWORD *)a2 + 13);
      v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)a2 + 13) = v15;
      if (v15 < 0 == v16)
      {
        v17 = v14;
        result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v10, a2);
        if (!(_DWORD)result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v17))
          continue;
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      v10 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 2);
      if (!v10)
      {
        v10 = (CoreML::Specification::NeuralNetwork *)operator new();
        CoreML::Specification::NeuralNetwork::NeuralNetwork(v10);
        *((_QWORD *)this + 2) = v10;
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B789C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoopLayerParams *CoreML::Specification::LoopLayerParams::LoopLayerParams(CoreML::Specification::LoopLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C5D8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B78A4C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  std::string *v11;
  uint64_t result;
  unsigned int *v13;
  std::string::size_type size;
  CoreML::Specification::NeuralNetwork *v15;
  char *v16;
  int VarintSizeAsIntFallback;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  char v23;

  v5 = (std::string **)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v7) = 0;
LABEL_7:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
      v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0)
        goto LABEL_28;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8)
            goto LABEL_28;
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v23 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 5) = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          break;
        case 2u:
          if (v8 != 18)
            goto LABEL_28;
          v11 = *v5;
          if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            v11 = *v5;
          }
          result = google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v11);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned int *)*v5;
          if (SHIBYTE((*v5)->__r_.__value_.__r.__words[2]) < 0)
          {
            v13 = *(unsigned int **)v13;
            size = (*v5)->__r_.__value_.__l.__size_;
          }
          else
          {
            LODWORD(size) = HIBYTE((*v5)->__r_.__value_.__r.__words[2]);
          }
          if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v13, size, 0, (uint64_t)"CoreML.Specification.LoopLayerParams.conditionVar"))return 0;
          continue;
        case 3u:
          if (v8 != 26)
            goto LABEL_28;
          v15 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 3);
          if (!v15)
          {
            v15 = (CoreML::Specification::NeuralNetwork *)operator new();
            CoreML::Specification::NeuralNetwork::NeuralNetwork(v15);
            *((_QWORD *)this + 3) = v15;
          }
          goto LABEL_25;
        case 4u:
          if (v8 != 34)
            goto LABEL_28;
          v15 = (CoreML::Specification::NeuralNetwork *)*((_QWORD *)this + 4);
          if (!v15)
          {
            v15 = (CoreML::Specification::NeuralNetwork *)operator new();
            CoreML::Specification::NeuralNetwork::NeuralNetwork(v15);
            *((_QWORD *)this + 4) = v15;
          }
LABEL_25:
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v20 = *((_DWORD *)a2 + 13);
          v21 = __OFSUB__(v20--, 1);
          *((_DWORD *)a2 + 13) = v20;
          if (v20 < 0 != v21)
            return 0;
          v22 = v19;
          result = CoreML::Specification::NeuralNetwork::MergePartialFromCodedStream(v15, a2);
          if (!(_DWORD)result)
            return result;
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22))
            return 0;
          continue;
        default:
          goto LABEL_28;
      }
    }
    v7 = *v6;
    if (*v6 < 1)
      goto LABEL_7;
    *(_QWORD *)a2 = v6 + 1;
    v8 = v7 | 0x100000000;
    if ((v8 & 0x100000000) != 0)
      goto LABEL_8;
LABEL_28:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B78CE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40280AC348);
  _Unwind_Resume(a1);
}

CoreML::Specification::LoopBreakLayerParams *CoreML::Specification::LoopBreakLayerParams::LoopBreakLayerParams(CoreML::Specification::LoopBreakLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F720;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopBreakLayerParams *)&CoreML::Specification::_LoopBreakLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B78D54(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopBreakLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopBreakLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LoopContinueLayerParams *CoreML::Specification::LoopContinueLayerParams::LoopContinueLayerParams(CoreML::Specification::LoopContinueLayerParams *this)
{
  *(_QWORD *)this = &off_1E95613A0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LoopContinueLayerParams *)&CoreML::Specification::_LoopContinueLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B78E2C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LoopContinueLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoopContinueLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RangeStaticLayerParams *CoreML::Specification::RangeStaticLayerParams::RangeStaticLayerParams(CoreML::Specification::RangeStaticLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560C80;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RangeStaticLayerParams *)&CoreML::Specification::_RangeStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B78F04(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RangeStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RangeStaticLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  BOOL v17;
  _BOOL8 result;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 29)
            goto LABEL_25;
          v19 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v19);
            if (!result)
              return result;
            v14 = v19;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 6) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 21)
          goto LABEL_25;
        v20 = 0;
        v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
          if (!result)
            return result;
          v16 = v20;
        }
        else
        {
          v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 5) = v16;
      }
      if (v9 != 1 || v7 != 13)
        break;
      v21 = 0;
      v11 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
        if (!result)
          return result;
        v12 = v21;
      }
      else
      {
        v12 = *v11;
        *a2 = (char *)(v11 + 1);
      }
      *((_DWORD *)this + 4) = v12;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    result = v17;
    if (v17)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RangeDynamicLayerParams *CoreML::Specification::RangeDynamicLayerParams::RangeDynamicLayerParams(CoreML::Specification::RangeDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E9561568;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RangeDynamicLayerParams *)&CoreML::Specification::_RangeDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B79108(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RangeDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RangeDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  _BOOL8 result;
  unsigned int v16;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 3)
          break;
        if (v7 != 29)
          goto LABEL_20;
        v16 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 2 || v7 != 21)
        break;
      v17 = 0;
      v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result)
          return result;
        v11 = v17;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ClipLayerParams *CoreML::Specification::ClipLayerParams::ClipLayerParams(CoreML::Specification::ClipLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C118;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ClipLayerParams *)&CoreML::Specification::_ClipLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B792B8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ClipLayerParams::MergePartialFromCodedStream(CoreML::Specification::ClipLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  _BOOL8 result;
  unsigned int v16;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v16 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13)
        break;
      v17 = 0;
      v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result)
          return result;
        v11 = v17;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::CeilLayerParams *CoreML::Specification::CeilLayerParams::CeilLayerParams(CoreML::Specification::CeilLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C080;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CeilLayerParams *)&CoreML::Specification::_CeilLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79464(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CeilLayerParams::MergePartialFromCodedStream(CoreML::Specification::CeilLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::FloorLayerParams *CoreML::Specification::FloorLayerParams::FloorLayerParams(CoreML::Specification::FloorLayerParams *this)
{
  *(_QWORD *)this = &off_1E955CEC0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorLayerParams *)&CoreML::Specification::_FloorLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7953C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloorLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SignLayerParams *CoreML::Specification::SignLayerParams::SignLayerParams(CoreML::Specification::SignLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C708;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SignLayerParams *)&CoreML::Specification::_SignLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79614(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SignLayerParams::MergePartialFromCodedStream(CoreML::Specification::SignLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RoundLayerParams *CoreML::Specification::RoundLayerParams::RoundLayerParams(CoreML::Specification::RoundLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D2E8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RoundLayerParams *)&CoreML::Specification::_RoundLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B796EC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RoundLayerParams::MergePartialFromCodedStream(CoreML::Specification::RoundLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::Exp2LayerParams *CoreML::Specification::Exp2LayerParams::Exp2LayerParams(CoreML::Specification::Exp2LayerParams *this)
{
  *(_QWORD *)this = &off_1E955C410;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::Exp2LayerParams *)&CoreML::Specification::_Exp2LayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B797C4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Exp2LayerParams::MergePartialFromCodedStream(CoreML::Specification::Exp2LayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SinLayerParams *CoreML::Specification::SinLayerParams::SinLayerParams(CoreML::Specification::SinLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BC58;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SinLayerParams *)&CoreML::Specification::_SinLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7989C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SinLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::CosLayerParams *CoreML::Specification::CosLayerParams::CosLayerParams(CoreML::Specification::CosLayerParams *this)
{
  *(_QWORD *)this = &off_1E955B798;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CosLayerParams *)&CoreML::Specification::_CosLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79974(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CosLayerParams::MergePartialFromCodedStream(CoreML::Specification::CosLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TanLayerParams *CoreML::Specification::TanLayerParams::TanLayerParams(CoreML::Specification::TanLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BCF0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::TanLayerParams *)&CoreML::Specification::_TanLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79A4C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TanLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AsinLayerParams *CoreML::Specification::AsinLayerParams::AsinLayerParams(CoreML::Specification::AsinLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BEB8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinLayerParams *)&CoreML::Specification::_AsinLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79B24(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AsinLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AcosLayerParams *CoreML::Specification::AcosLayerParams::AcosLayerParams(CoreML::Specification::AcosLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BD88;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AcosLayerParams *)&CoreML::Specification::_AcosLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79BFC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AcosLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcosLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AtanLayerParams *CoreML::Specification::AtanLayerParams::AtanLayerParams(CoreML::Specification::AtanLayerParams *this)
{
  *(_QWORD *)this = &off_1E955BF50;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanLayerParams *)&CoreML::Specification::_AtanLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79CD4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AtanLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SinhLayerParams *CoreML::Specification::SinhLayerParams::SinhLayerParams(CoreML::Specification::SinhLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C7A0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SinhLayerParams *)&CoreML::Specification::_SinhLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79DAC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::SinhLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::CoshLayerParams *CoreML::Specification::CoshLayerParams::CoshLayerParams(CoreML::Specification::CoshLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C248;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CoshLayerParams *)&CoreML::Specification::_CoshLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79E84(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::CoshLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TanhLayerParams *CoreML::Specification::TanhLayerParams::TanhLayerParams(CoreML::Specification::TanhLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C8D0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::TanhLayerParams *)&CoreML::Specification::_TanhLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B79F5C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::TanhLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AsinhLayerParams *CoreML::Specification::AsinhLayerParams::AsinhLayerParams(CoreML::Specification::AsinhLayerParams *this)
{
  *(_QWORD *)this = &off_1E955CCF8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AsinhLayerParams *)&CoreML::Specification::_AsinhLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7A034(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AsinhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AsinhLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AcoshLayerParams *CoreML::Specification::AcoshLayerParams::AcoshLayerParams(CoreML::Specification::AcoshLayerParams *this)
{
  *(_QWORD *)this = &off_1E955CA98;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AcoshLayerParams *)&CoreML::Specification::_AcoshLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7A10C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AcoshLayerParams::MergePartialFromCodedStream(CoreML::Specification::AcoshLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AtanhLayerParams *CoreML::Specification::AtanhLayerParams::AtanhLayerParams(CoreML::Specification::AtanhLayerParams *this)
{
  *(_QWORD *)this = &off_1E955CD90;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AtanhLayerParams *)&CoreML::Specification::_AtanhLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7A1E4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AtanhLayerParams::MergePartialFromCodedStream(CoreML::Specification::AtanhLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ErfLayerParams *CoreML::Specification::ErfLayerParams::ErfLayerParams(CoreML::Specification::ErfLayerParams *this)
{
  *(_QWORD *)this = &off_1E955B8C8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ErfLayerParams *)&CoreML::Specification::_ErfLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7A2BC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ErfLayerParams::MergePartialFromCodedStream(CoreML::Specification::ErfLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::GeluLayerParams *CoreML::Specification::GeluLayerParams::GeluLayerParams(CoreML::Specification::GeluLayerParams *this)
{
  *(_QWORD *)this = &off_1E955C4A8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GeluLayerParams *)&CoreML::Specification::_GeluLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7A394(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GeluLayerParams::MergePartialFromCodedStream(CoreML::Specification::GeluLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::EqualLayerParams *CoreML::Specification::EqualLayerParams::EqualLayerParams(CoreML::Specification::EqualLayerParams *this)
{
  *(_QWORD *)this = &off_1E955CE28;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::EqualLayerParams *)&CoreML::Specification::_EqualLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7A4E8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::EqualLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::NotEqualLayerParams *CoreML::Specification::NotEqualLayerParams::NotEqualLayerParams(CoreML::Specification::NotEqualLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F130;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::NotEqualLayerParams *)&CoreML::Specification::_NotEqualLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7A640(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NotEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::NotEqualLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LessThanLayerParams *CoreML::Specification::LessThanLayerParams::LessThanLayerParams(CoreML::Specification::LessThanLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F000;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LessThanLayerParams *)&CoreML::Specification::_LessThanLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7A798(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LessThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessThanLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LessEqualLayerParams *CoreML::Specification::LessEqualLayerParams::LessEqualLayerParams(CoreML::Specification::LessEqualLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F5F0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LessEqualLayerParams *)&CoreML::Specification::_LessEqualLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7A8F0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LessEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::LessEqualLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GreaterThanLayerParams *CoreML::Specification::GreaterThanLayerParams::GreaterThanLayerParams(CoreML::Specification::GreaterThanLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560A20;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterThanLayerParams *)&CoreML::Specification::_GreaterThanLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7AA48(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::GreaterThanLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterThanLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GreaterEqualLayerParams *CoreML::Specification::GreaterEqualLayerParams::GreaterEqualLayerParams(CoreML::Specification::GreaterEqualLayerParams *this)
{
  *(_QWORD *)this = &off_1E95611D8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GreaterEqualLayerParams *)&CoreML::Specification::_GreaterEqualLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7ABA0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::GreaterEqualLayerParams::MergePartialFromCodedStream(CoreML::Specification::GreaterEqualLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 21 || (v7 & 0xFFFFFFF8) != 16)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LogicalOrLayerParams *CoreML::Specification::LogicalOrLayerParams::LogicalOrLayerParams(CoreML::Specification::LogicalOrLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F688;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalOrLayerParams *)&CoreML::Specification::_LogicalOrLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7ACF8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalOrLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalOrLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalXorLayerParams *CoreML::Specification::LogicalXorLayerParams::LogicalXorLayerParams(CoreML::Specification::LogicalXorLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560268;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalXorLayerParams *)&CoreML::Specification::_LogicalXorLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7ADD0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalXorLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalXorLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalNotLayerParams *CoreML::Specification::LogicalNotLayerParams::LogicalNotLayerParams(CoreML::Specification::LogicalNotLayerParams *this)
{
  *(_QWORD *)this = &off_1E95601D0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalNotLayerParams *)&CoreML::Specification::_LogicalNotLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7AEA8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalNotLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalNotLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LogicalAndLayerParams *CoreML::Specification::LogicalAndLayerParams::LogicalAndLayerParams(CoreML::Specification::LogicalAndLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560138;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LogicalAndLayerParams *)&CoreML::Specification::_LogicalAndLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7AF80(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LogicalAndLayerParams::MergePartialFromCodedStream(CoreML::Specification::LogicalAndLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ModBroadcastableLayerParams *CoreML::Specification::ModBroadcastableLayerParams::ModBroadcastableLayerParams(CoreML::Specification::ModBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562E58;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ModBroadcastableLayerParams *)&CoreML::Specification::_ModBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B058(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ModBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::ModBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MinBroadcastableLayerParams *CoreML::Specification::MinBroadcastableLayerParams::MinBroadcastableLayerParams(CoreML::Specification::MinBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562DC0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MinBroadcastableLayerParams *)&CoreML::Specification::_MinBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B130(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MinBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MinBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MaxBroadcastableLayerParams *CoreML::Specification::MaxBroadcastableLayerParams::MaxBroadcastableLayerParams(CoreML::Specification::MaxBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562D28;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MaxBroadcastableLayerParams *)&CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B208(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MaxBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MaxBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::AddBroadcastableLayerParams *CoreML::Specification::AddBroadcastableLayerParams::AddBroadcastableLayerParams(CoreML::Specification::AddBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562AC8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::AddBroadcastableLayerParams *)&CoreML::Specification::_AddBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B2E0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::AddBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::AddBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::PowBroadcastableLayerParams *CoreML::Specification::PowBroadcastableLayerParams::PowBroadcastableLayerParams(CoreML::Specification::PowBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562EF0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::PowBroadcastableLayerParams *)&CoreML::Specification::_PowBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B3B8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PowBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::PowBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::DivideBroadcastableLayerParams *CoreML::Specification::DivideBroadcastableLayerParams::DivideBroadcastableLayerParams(CoreML::Specification::DivideBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E95637D8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::DivideBroadcastableLayerParams *)&CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B490(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::DivideBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::DivideBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::FloorDivBroadcastableLayerParams *CoreML::Specification::FloorDivBroadcastableLayerParams::FloorDivBroadcastableLayerParams(CoreML::Specification::FloorDivBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563D30;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FloorDivBroadcastableLayerParams *)&CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B568(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FloorDivBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::FloorDivBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MultiplyBroadcastableLayerParams *CoreML::Specification::MultiplyBroadcastableLayerParams::MultiplyBroadcastableLayerParams(CoreML::Specification::MultiplyBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563E60;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MultiplyBroadcastableLayerParams *)&CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B640(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MultiplyBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::MultiplyBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SubtractBroadcastableLayerParams *CoreML::Specification::SubtractBroadcastableLayerParams::SubtractBroadcastableLayerParams(CoreML::Specification::SubtractBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E95640C0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SubtractBroadcastableLayerParams *)&CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7B718(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SubtractBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::SubtractBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::TileLayerParams *CoreML::Specification::TileLayerParams::TileLayerParams(CoreML::Specification::TileLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955C968;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::TileLayerParams *)&CoreML::Specification::_TileLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B7B7FC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TileLayerParams::MergePartialFromCodedStream(CoreML::Specification::TileLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::StackLayerParams *CoreML::Specification::StackLayerParams::StackLayerParams(CoreML::Specification::StackLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D548;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::StackLayerParams *)&CoreML::Specification::_StackLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B7BA78(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::StackLayerParams::MergePartialFromCodedStream(CoreML::Specification::StackLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherLayerParams *CoreML::Specification::GatherLayerParams::GatherLayerParams(CoreML::Specification::GatherLayerParams *this)
{
  *(_QWORD *)this = &off_1E955DC68;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherLayerParams *)&CoreML::Specification::_GatherLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B7BBC8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ScatterLayerParams *CoreML::Specification::ScatterLayerParams::ScatterLayerParams(CoreML::Specification::ScatterLayerParams *this)
{
  *(_QWORD *)this = &off_1E955EA10;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterLayerParams *)&CoreML::Specification::_ScatterLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B7BD14(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  char *v12;
  int v13;
  BOOL v14;
  char v15;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1])
        {
          v13 = 0;
        }
        else
        {
          v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        v13 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherNDLayerParams *CoreML::Specification::GatherNDLayerParams::GatherNDLayerParams(CoreML::Specification::GatherNDLayerParams *this)
{
  *(_QWORD *)this = &off_1E955EED0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherNDLayerParams *)&CoreML::Specification::_GatherNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7BEB4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherNDLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ScatterNDLayerParams *CoreML::Specification::ScatterNDLayerParams::ScatterNDLayerParams(CoreML::Specification::ScatterNDLayerParams *this)
{
  *(_QWORD *)this = &off_1E955FAB0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterNDLayerParams *)&CoreML::Specification::_ScatterNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7BF8C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterNDLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SoftmaxNDLayerParams *CoreML::Specification::SoftmaxNDLayerParams::SoftmaxNDLayerParams(CoreML::Specification::SoftmaxNDLayerParams *this)
{
  *(_QWORD *)this = &off_1E955FB48;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SoftmaxNDLayerParams *)&CoreML::Specification::_SoftmaxNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B7C0E4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SoftmaxNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SoftmaxNDLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::GatherAlongAxisLayerParams *CoreML::Specification::GatherAlongAxisLayerParams::GatherAlongAxisLayerParams(CoreML::Specification::GatherAlongAxisLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562570;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GatherAlongAxisLayerParams *)&CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B7C234(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GatherAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::GatherAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ScatterAlongAxisLayerParams *CoreML::Specification::ScatterAlongAxisLayerParams::ScatterAlongAxisLayerParams(CoreML::Specification::ScatterAlongAxisLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563020;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ScatterAlongAxisLayerParams *)&CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B7C380(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ScatterAlongAxisLayerParams::MergePartialFromCodedStream(CoreML::Specification::ScatterAlongAxisLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  char *v12;
  int v13;
  BOOL v14;
  char v15;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1])
        {
          v13 = 0;
        }
        else
        {
          v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_30;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        v13 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
LABEL_30:
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReverseLayerParams *CoreML::Specification::ReverseLayerParams::ReverseLayerParams(CoreML::Specification::ReverseLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955E978;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReverseLayerParams *)&CoreML::Specification::_ReverseLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B7C52C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReverseLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t Varint64Fallback;
  char v20;
  BOOL v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v20 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v21 = Varint64Fallback != 0;
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_BYTE *)(v23 + v22 + 8) = v21;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReverseSeqLayerParams *CoreML::Specification::ReverseSeqLayerParams::ReverseSeqLayerParams(CoreML::Specification::ReverseSeqLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560560;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ReverseSeqLayerParams *)&CoreML::Specification::_ReverseSeqLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B7C7AC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReverseSeqLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReverseSeqLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_QWORD *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SplitNDLayerParams *CoreML::Specification::SplitNDLayerParams::SplitNDLayerParams(CoreML::Specification::SplitNDLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955EB40;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::SplitNDLayerParams *)&CoreML::Specification::_SplitNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1D3B7C954(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SplitNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::SplitNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v12;
  unint64_t v13;
  char *v14;
  int VarintSizeAsIntFallback;
  char *v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t Varint64Fallback;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0)
              goto LABEL_27;
            goto LABEL_8;
          }
          v7 = *v6;
          if (*v6 < 1)
            goto LABEL_7;
          *(_QWORD *)a2 = v6 + 1;
          v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0)
            goto LABEL_27;
LABEL_8:
          v10 = v8 >> 3;
          if (v8 >> 3 != 3)
            break;
          if (v8 == 24)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x1Au, a2, (uint64_t)v5) & 1) == 0)return 0;
          }
          else
          {
            if (v8 != 26)
              goto LABEL_27;
            v14 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v14;
              *(_QWORD *)a2 = v14 + 1;
            }
            v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              v21 = *((_DWORD *)a2 + 10);
              v22 = *((int *)a2 + 11);
              v23 = *((_QWORD *)a2 + 1);
              v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF)
                break;
              v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0)
                  return 0;
                v26 = Varint64Fallback;
              }
              else
              {
                v26 = *v25;
                *(_QWORD *)a2 = v25 + 1;
              }
              v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                v29 = *v5;
              }
              v30 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 10) = v20;
            v31 = v23 + v22;
            *((_QWORD *)a2 + 1) = v23 + v22;
            v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20)
              v32 = v20;
            v33 = __OFSUB__(v24, v32);
            v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0))
              v34 = 0;
            else
              *((_QWORD *)a2 + 1) = v31 - v34;
            *((_DWORD *)a2 + 11) = v34;
            *((_BYTE *)a2 + 36) = 0;
          }
        }
        if (v10 != 2)
          break;
        if (v8 != 16)
          goto LABEL_27;
        v16 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
        {
          *((_QWORD *)this + 6) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 6) = *v16;
          *(_QWORD *)a2 = v16 + 1;
        }
      }
      if (v10 != 1 || v8 != 8)
        break;
      v12 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
      {
        v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        v13 = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
      *((_QWORD *)this + 5) = v13;
    }
LABEL_27:
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConcatNDLayerParams *CoreML::Specification::ConcatNDLayerParams::ConcatNDLayerParams(CoreML::Specification::ConcatNDLayerParams *this)
{
  *(_QWORD *)this = &off_1E955ED08;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ConcatNDLayerParams *)&CoreML::Specification::_ConcatNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 24) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B7CC6C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ConcatNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConcatNDLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_BYTE *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::TransposeLayerParams *CoreML::Specification::TransposeLayerParams::TransposeLayerParams(CoreML::Specification::TransposeLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955FC78;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::TransposeLayerParams *)&CoreML::Specification::_TransposeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B7CE18(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TransposeLayerParams::MergePartialFromCodedStream(CoreML::Specification::TransposeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceStaticLayerParams *CoreML::Specification::SliceStaticLayerParams::SliceStaticLayerParams(CoreML::Specification::SliceStaticLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560E48;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::SliceStaticLayerParams *)&CoreML::Specification::_SliceStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 39) = 0;
  return this;
}

void sub_1D3B7D0B0(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v4 = (_QWORD *)v2[18];
  if (v4 && !*v4)
    operator delete(v4);
  v5 = (_QWORD *)v2[15];
  if (v5 && !*v5)
    operator delete(v5);
  v6 = (_QWORD *)v2[12];
  if (v6 && !*v6)
    operator delete(v6);
  v7 = (_QWORD *)v2[9];
  if (v7 && !*v7)
    operator delete(v7);
  v8 = (_QWORD *)v2[6];
  if (v8 && !*v8)
    operator delete(v8);
  v9 = (_QWORD *)v2[3];
  if (v9)
  {
    if (!*v9)
      operator delete(v9);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int TagFallback;
  char *v13;
  int VarintSizeAsIntFallback;
  char *v15;
  int v16;
  char *v17;
  int v18;
  char *v19;
  int v20;
  char *v21;
  int v22;
  char *v23;
  int v24;
  BOOL v25;
  int v26;
  unint64_t *v27;
  uint64_t v28;
  int v29;
  unint64_t *v30;
  uint64_t v31;
  int v32;
  int v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t Varint64Fallback;
  char v38;
  signed int v39;
  uint64_t v40;
  int v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  BOOL v46;
  signed int v47;
  uint64_t v48;
  int v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  signed int v55;
  uint64_t v56;
  int v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  BOOL v62;
  signed int v63;
  uint64_t v64;
  int v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  signed int v71;
  uint64_t v72;
  int v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  char v77;
  BOOL v78;
  signed int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  int v84;
  BOOL v85;
  int v86;
  unsigned int *v88;
  unsigned int *v89;

  v88 = (unsigned int *)((char *)this + 112);
  v89 = (unsigned int *)((char *)this + 136);
  v5 = (unsigned int *)((char *)this + 88);
  v6 = (unsigned int *)((char *)this + 64);
  v7 = (unsigned int *)((char *)this + 40);
  v8 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v9 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v10) = 0;
      break;
    }
    v10 = *v9;
    if (*v9 < 1)
      break;
    *(_QWORD *)a2 = v9 + 1;
    v11 = v10 | 0x100000000;
    if ((v11 & 0x100000000) != 0)
      goto LABEL_8;
LABEL_39:
    if ((_DWORD)v11)
      v25 = (v11 & 7) == 4;
    else
      v25 = 1;
    if (v25)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v11, a3) & 1) == 0)
      return 0;
  }
  TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v10);
  v11 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v11 & 0x100000000) == 0)
    goto LABEL_39;
LABEL_8:
  switch(v11 >> 3)
  {
    case 1u:
      if (v11 == 8)
      {
        v26 = 10;
        v27 = (unint64_t *)a2;
        v28 = (uint64_t)v8;
        goto LABEL_50;
      }
      if (v11 != 10)
        goto LABEL_39;
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v13;
        *(_QWORD *)a2 = v13 + 1;
      }
      v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      while (1)
      {
        v33 = *((_DWORD *)a2 + 10);
        if (v33 == 0x7FFFFFFF)
          break;
        v34 = *(char **)a2;
        v35 = *((_QWORD *)a2 + 1);
        if ((int)(v33 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v35 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v34 >= v35 || *v34 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v38 & 1) == 0)
            return 0;
          v36 = Varint64Fallback;
        }
        else
        {
          v36 = *v34;
          *(_QWORD *)a2 = v34 + 1;
        }
        v39 = *((_DWORD *)this + 4);
        if (v39 == *((_DWORD *)this + 5))
        {
          google::protobuf::RepeatedField<double>::Reserve(v8, v39 + 1);
          v39 = *v8;
        }
        v40 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 4) = v39 + 1;
        *(_QWORD *)(v40 + 8 * v39 + 8) = v36;
      }
      goto LABEL_124;
    case 2u:
      if (v11 == 16)
      {
        v29 = 18;
        v30 = (unint64_t *)a2;
        v31 = (uint64_t)v7;
        goto LABEL_53;
      }
      if (v11 != 18)
        goto LABEL_39;
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
      {
        v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v16 < 0)
          return 0;
      }
      else
      {
        v16 = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
      while (1)
      {
        v41 = *((_DWORD *)a2 + 10);
        if (v41 == 0x7FFFFFFF)
          break;
        v42 = *(char **)a2;
        v43 = *((_QWORD *)a2 + 1);
        if ((int)(v41 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v43 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v42 >= v43 || *v42 < 0)
        {
          v44 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v45 & 1) == 0)
            return 0;
        }
        else
        {
          v44 = *v42;
          *(_QWORD *)a2 = v42 + 1;
        }
        v46 = v44 != 0;
        v47 = *((_DWORD *)this + 10);
        if (v47 == *((_DWORD *)this + 11))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v7, v47 + 1);
          v47 = *v7;
        }
        v48 = *((_QWORD *)this + 6);
        *((_DWORD *)this + 10) = v47 + 1;
        *(_BYTE *)(v48 + v47 + 8) = v46;
      }
      goto LABEL_124;
    case 3u:
      if (v11 == 24)
      {
        v26 = 26;
        v27 = (unint64_t *)a2;
        v28 = (uint64_t)v6;
        goto LABEL_50;
      }
      if (v11 != 26)
        goto LABEL_39;
      v17 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
      {
        v18 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v18 < 0)
          return 0;
      }
      else
      {
        v18 = *v17;
        *(_QWORD *)a2 = v17 + 1;
      }
      v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v18);
      while (1)
      {
        v49 = *((_DWORD *)a2 + 10);
        if (v49 == 0x7FFFFFFF)
          break;
        v50 = *(char **)a2;
        v51 = *((_QWORD *)a2 + 1);
        if ((int)(v49 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v51 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v50 >= v51 || *v50 < 0)
        {
          v53 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v54 & 1) == 0)
            return 0;
          v52 = v53;
        }
        else
        {
          v52 = *v50;
          *(_QWORD *)a2 = v50 + 1;
        }
        v55 = *((_DWORD *)this + 16);
        if (v55 == *((_DWORD *)this + 17))
        {
          google::protobuf::RepeatedField<double>::Reserve(v6, v55 + 1);
          v55 = *v6;
        }
        v56 = *((_QWORD *)this + 9);
        *((_DWORD *)this + 16) = v55 + 1;
        *(_QWORD *)(v56 + 8 * v55 + 8) = v52;
      }
      goto LABEL_124;
    case 4u:
      if (v11 == 32)
      {
        v29 = 34;
        v30 = (unint64_t *)a2;
        v31 = (uint64_t)v5;
        goto LABEL_53;
      }
      if (v11 != 34)
        goto LABEL_39;
      v19 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
      {
        v20 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v20 < 0)
          return 0;
      }
      else
      {
        v20 = *v19;
        *(_QWORD *)a2 = v19 + 1;
      }
      v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v20);
      while (1)
      {
        v57 = *((_DWORD *)a2 + 10);
        if (v57 == 0x7FFFFFFF)
          break;
        v58 = *(char **)a2;
        v59 = *((_QWORD *)a2 + 1);
        if ((int)(v57 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v59 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v58 >= v59 || *v58 < 0)
        {
          v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v61 & 1) == 0)
            return 0;
        }
        else
        {
          v60 = *v58;
          *(_QWORD *)a2 = v58 + 1;
        }
        v62 = v60 != 0;
        v63 = *((_DWORD *)this + 22);
        if (v63 == *((_DWORD *)this + 23))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v5, v63 + 1);
          v63 = *v5;
        }
        v64 = *((_QWORD *)this + 12);
        *((_DWORD *)this + 22) = v63 + 1;
        *(_BYTE *)(v64 + v63 + 8) = v62;
      }
      goto LABEL_124;
    case 5u:
      if (v11 == 40)
      {
        v26 = 42;
        v27 = (unint64_t *)a2;
        v28 = (uint64_t)v88;
LABEL_50:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(v26, v27, v28) & 1) == 0)return 0;
        goto LABEL_2;
      }
      if (v11 != 42)
        goto LABEL_39;
      v21 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
      {
        v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v22 < 0)
          return 0;
      }
      else
      {
        v22 = *v21;
        *(_QWORD *)a2 = v21 + 1;
      }
      v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v22);
      while (1)
      {
        v65 = *((_DWORD *)a2 + 10);
        if (v65 == 0x7FFFFFFF)
          break;
        v66 = *(char **)a2;
        v67 = *((_QWORD *)a2 + 1);
        if ((int)(v65 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v67 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v66 >= v67 || *v66 < 0)
        {
          v69 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v70 & 1) == 0)
            return 0;
          v68 = v69;
        }
        else
        {
          v68 = *v66;
          *(_QWORD *)a2 = v66 + 1;
        }
        v71 = *((_DWORD *)this + 28);
        if (v71 == *((_DWORD *)this + 29))
        {
          google::protobuf::RepeatedField<double>::Reserve(v88, v71 + 1);
          v71 = *v88;
        }
        v72 = *((_QWORD *)this + 15);
        *((_DWORD *)this + 28) = v71 + 1;
        *(_QWORD *)(v72 + 8 * v71 + 8) = v68;
      }
      goto LABEL_124;
    case 6u:
      if (v11 == 48)
      {
        v29 = 50;
        v30 = (unint64_t *)a2;
        v31 = (uint64_t)v89;
LABEL_53:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(v29, v30, v31) & 1) == 0)return 0;
        goto LABEL_2;
      }
      if (v11 != 50)
        goto LABEL_39;
      v23 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v23 & 0x80000000) == 0)
      {
        v24 = *v23;
        *(_QWORD *)a2 = v23 + 1;
        goto LABEL_114;
      }
      v24 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if ((v24 & 0x80000000) == 0)
      {
LABEL_114:
        v32 = google::protobuf::io::CodedInputStream::PushLimit(a2, v24);
        while (1)
        {
          v73 = *((_DWORD *)a2 + 10);
          if (v73 == 0x7FFFFFFF)
            break;
          v74 = *(char **)a2;
          v75 = *((_QWORD *)a2 + 1);
          if ((int)(v73 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v75 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v74 >= v75 || *v74 < 0)
          {
            v76 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v77 & 1) == 0)
              return 0;
          }
          else
          {
            v76 = *v74;
            *(_QWORD *)a2 = v74 + 1;
          }
          v78 = v76 != 0;
          v79 = *((_DWORD *)this + 34);
          if (v79 == *((_DWORD *)this + 35))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v89, v79 + 1);
            v79 = *v89;
          }
          v80 = *((_QWORD *)this + 18);
          *((_DWORD *)this + 34) = v79 + 1;
          *(_BYTE *)(v80 + v79 + 8) = v78;
        }
LABEL_124:
        *((_DWORD *)a2 + 10) = v32;
        v81 = *((_DWORD *)a2 + 12);
        v82 = *((_QWORD *)a2 + 1) + *((int *)a2 + 11);
        *((_QWORD *)a2 + 1) = v82;
        if (v81 >= v32)
          v83 = v32;
        else
          v83 = v81;
        v84 = *((_DWORD *)a2 + 6);
        v85 = __OFSUB__(v84, v83);
        v86 = v84 - v83;
        if ((v86 < 0) ^ v85 | (v86 == 0))
          v86 = 0;
        else
          *((_QWORD *)a2 + 1) = v82 - v86;
        *((_DWORD *)a2 + 11) = v86;
        *((_BYTE *)a2 + 36) = 0;
        goto LABEL_2;
      }
      return 0;
    default:
      goto LABEL_39;
  }
}

CoreML::Specification::SliceDynamicLayerParams *CoreML::Specification::SliceDynamicLayerParams::SliceDynamicLayerParams(CoreML::Specification::SliceDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E9561698;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::SliceDynamicLayerParams *)&CoreML::Specification::_SliceDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 33) = 0;
  return this;
}

void sub_1D3B7D8F8(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;

  v4 = (_QWORD *)v2[15];
  if (v4 && !*v4)
    operator delete(v4);
  v5 = (_QWORD *)v2[12];
  if (v5 && !*v5)
    operator delete(v5);
  v6 = (_QWORD *)v2[9];
  if (v6 && !*v6)
    operator delete(v6);
  v7 = (_QWORD *)v2[6];
  if (v7 && !*v7)
    operator delete(v7);
  v8 = (_QWORD *)v2[3];
  if (v8)
  {
    if (!*v8)
      operator delete(v8);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceDynamicLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int TagFallback;
  char *v14;
  int VarintSizeAsIntFallback;
  char *v16;
  int v17;
  char *v18;
  int v19;
  char *v20;
  int v21;
  char *v22;
  int v23;
  BOOL v24;
  int v25;
  unint64_t *v26;
  uint64_t v27;
  int v28;
  unint64_t *v29;
  uint64_t v30;
  int v31;
  int v32;
  char *v33;
  unint64_t v34;
  unint64_t Varint64Fallback;
  char v36;
  BOOL v37;
  signed int v38;
  uint64_t v39;
  int v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  signed int v46;
  uint64_t v47;
  int v48;
  char *v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  BOOL v53;
  signed int v54;
  uint64_t v55;
  int v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  signed int v62;
  uint64_t v63;
  int v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  char v68;
  BOOL v69;
  signed int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int v74;
  int v75;
  BOOL v76;
  int v77;

  v5 = (unsigned int *)((char *)this + 112);
  v6 = (unsigned int *)((char *)this + 88);
  v7 = (unsigned int *)((char *)this + 64);
  v8 = (unsigned int *)((char *)this + 40);
  v9 = (unsigned int *)((char *)this + 16);
  while (1)
  {
LABEL_2:
    v10 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
    {
      LODWORD(v11) = 0;
      break;
    }
    v11 = *v10;
    if (*v10 < 1)
      break;
    *(_QWORD *)a2 = v10 + 1;
    v12 = v11 | 0x100000000;
    if ((v12 & 0x100000000) != 0)
      goto LABEL_8;
LABEL_34:
    if ((_DWORD)v12)
      v24 = (v12 & 7) == 4;
    else
      v24 = 1;
    if (v24)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v12, a3) & 1) == 0)
      return 0;
  }
  TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v11);
  v12 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
  if ((v12 & 0x100000000) == 0)
    goto LABEL_34;
LABEL_8:
  switch(v12 >> 3)
  {
    case 2u:
      if (v12 == 16)
      {
        v25 = 18;
        v26 = (unint64_t *)a2;
        v27 = (uint64_t)v9;
        goto LABEL_47;
      }
      if (v12 != 18)
        goto LABEL_34;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v14;
        *(_QWORD *)a2 = v14 + 1;
      }
      v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      while (1)
      {
        v32 = *((_DWORD *)a2 + 10);
        if (v32 == 0x7FFFFFFF)
          break;
        v33 = *(char **)a2;
        v34 = *((_QWORD *)a2 + 1);
        if ((int)(v32 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v34 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v33 >= v34 || *v33 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v36 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v33;
          *(_QWORD *)a2 = v33 + 1;
        }
        v37 = Varint64Fallback != 0;
        v38 = *((_DWORD *)this + 4);
        if (v38 == *((_DWORD *)this + 5))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v9, v38 + 1);
          v38 = *v9;
        }
        v39 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 4) = v38 + 1;
        *(_BYTE *)(v39 + v38 + 8) = v37;
      }
      goto LABEL_106;
    case 3u:
      if (v12 == 24)
      {
        v28 = 26;
        v29 = (unint64_t *)a2;
        v30 = (uint64_t)v8;
        goto LABEL_44;
      }
      if (v12 != 26)
        goto LABEL_34;
      v16 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
      {
        v17 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v17 < 0)
          return 0;
      }
      else
      {
        v17 = *v16;
        *(_QWORD *)a2 = v16 + 1;
      }
      v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v17);
      while (1)
      {
        v40 = *((_DWORD *)a2 + 10);
        if (v40 == 0x7FFFFFFF)
          break;
        v41 = *(char **)a2;
        v42 = *((_QWORD *)a2 + 1);
        if ((int)(v40 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v42 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v41 >= v42 || *v41 < 0)
        {
          v44 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v45 & 1) == 0)
            return 0;
          v43 = v44;
        }
        else
        {
          v43 = *v41;
          *(_QWORD *)a2 = v41 + 1;
        }
        v46 = *((_DWORD *)this + 10);
        if (v46 == *((_DWORD *)this + 11))
        {
          google::protobuf::RepeatedField<double>::Reserve(v8, v46 + 1);
          v46 = *v8;
        }
        v47 = *((_QWORD *)this + 6);
        *((_DWORD *)this + 10) = v46 + 1;
        *(_QWORD *)(v47 + 8 * v46 + 8) = v43;
      }
      goto LABEL_106;
    case 4u:
      if (v12 == 32)
      {
        v25 = 34;
        v26 = (unint64_t *)a2;
        v27 = (uint64_t)v7;
        goto LABEL_47;
      }
      if (v12 != 34)
        goto LABEL_34;
      v18 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
      {
        v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v19 < 0)
          return 0;
      }
      else
      {
        v19 = *v18;
        *(_QWORD *)a2 = v18 + 1;
      }
      v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
      while (1)
      {
        v48 = *((_DWORD *)a2 + 10);
        if (v48 == 0x7FFFFFFF)
          break;
        v49 = *(char **)a2;
        v50 = *((_QWORD *)a2 + 1);
        if ((int)(v48 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v50 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v49 >= v50 || *v49 < 0)
        {
          v51 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v52 & 1) == 0)
            return 0;
        }
        else
        {
          v51 = *v49;
          *(_QWORD *)a2 = v49 + 1;
        }
        v53 = v51 != 0;
        v54 = *((_DWORD *)this + 16);
        if (v54 == *((_DWORD *)this + 17))
        {
          google::protobuf::RepeatedField<BOOL>::Reserve(v7, v54 + 1);
          v54 = *v7;
        }
        v55 = *((_QWORD *)this + 9);
        *((_DWORD *)this + 16) = v54 + 1;
        *(_BYTE *)(v55 + v54 + 8) = v53;
      }
      goto LABEL_106;
    case 5u:
      if (v12 == 40)
      {
        v28 = 42;
        v29 = (unint64_t *)a2;
        v30 = (uint64_t)v6;
LABEL_44:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(v28, v29, v30) & 1) == 0)return 0;
        goto LABEL_2;
      }
      if (v12 != 42)
        goto LABEL_34;
      v20 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
      {
        v21 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (v21 < 0)
          return 0;
      }
      else
      {
        v21 = *v20;
        *(_QWORD *)a2 = v20 + 1;
      }
      v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v21);
      while (1)
      {
        v56 = *((_DWORD *)a2 + 10);
        if (v56 == 0x7FFFFFFF)
          break;
        v57 = *(char **)a2;
        v58 = *((_QWORD *)a2 + 1);
        if ((int)(v56 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v58 - *(_QWORD *)a2) < 1)
          break;
        if ((unint64_t)v57 >= v58 || *v57 < 0)
        {
          v60 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v61 & 1) == 0)
            return 0;
          v59 = v60;
        }
        else
        {
          v59 = *v57;
          *(_QWORD *)a2 = v57 + 1;
        }
        v62 = *((_DWORD *)this + 22);
        if (v62 == *((_DWORD *)this + 23))
        {
          google::protobuf::RepeatedField<double>::Reserve(v6, v62 + 1);
          v62 = *v6;
        }
        v63 = *((_QWORD *)this + 12);
        *((_DWORD *)this + 22) = v62 + 1;
        *(_QWORD *)(v63 + 8 * v62 + 8) = v59;
      }
      goto LABEL_106;
    case 6u:
      if (v12 == 48)
      {
        v25 = 50;
        v26 = (unint64_t *)a2;
        v27 = (uint64_t)v5;
LABEL_47:
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<BOOL,(google::protobuf::internal::WireFormatLite::FieldType)8>(v25, v26, v27) & 1) == 0)return 0;
        goto LABEL_2;
      }
      if (v12 != 50)
        goto LABEL_34;
      v22 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v22 & 0x80000000) == 0)
      {
        v23 = *v22;
        *(_QWORD *)a2 = v22 + 1;
        goto LABEL_96;
      }
      v23 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if ((v23 & 0x80000000) == 0)
      {
LABEL_96:
        v31 = google::protobuf::io::CodedInputStream::PushLimit(a2, v23);
        while (1)
        {
          v64 = *((_DWORD *)a2 + 10);
          if (v64 == 0x7FFFFFFF)
            break;
          v65 = *(char **)a2;
          v66 = *((_QWORD *)a2 + 1);
          if ((int)(v64 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + v66 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v65 >= v66 || *v65 < 0)
          {
            v67 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v68 & 1) == 0)
              return 0;
          }
          else
          {
            v67 = *v65;
            *(_QWORD *)a2 = v65 + 1;
          }
          v69 = v67 != 0;
          v70 = *((_DWORD *)this + 28);
          if (v70 == *((_DWORD *)this + 29))
          {
            google::protobuf::RepeatedField<BOOL>::Reserve(v5, v70 + 1);
            v70 = *v5;
          }
          v71 = *((_QWORD *)this + 15);
          *((_DWORD *)this + 28) = v70 + 1;
          *(_BYTE *)(v71 + v70 + 8) = v69;
        }
LABEL_106:
        *((_DWORD *)a2 + 10) = v31;
        v72 = *((_DWORD *)a2 + 12);
        v73 = *((_QWORD *)a2 + 1) + *((int *)a2 + 11);
        *((_QWORD *)a2 + 1) = v73;
        if (v72 >= v31)
          v74 = v31;
        else
          v74 = v72;
        v75 = *((_DWORD *)a2 + 6);
        v76 = __OFSUB__(v75, v74);
        v77 = v75 - v74;
        if ((v77 < 0) ^ v76 | (v77 == 0))
          v77 = 0;
        else
          *((_QWORD *)a2 + 1) = v73 - v77;
        *((_DWORD *)a2 + 11) = v77;
        *((_BYTE *)a2 + 36) = 0;
        goto LABEL_2;
      }
      return 0;
    default:
      goto LABEL_34;
  }
}

CoreML::Specification::SlidingWindowsLayerParams *CoreML::Specification::SlidingWindowsLayerParams::SlidingWindowsLayerParams(CoreML::Specification::SlidingWindowsLayerParams *this)
{
  *(_QWORD *)this = &off_1E95623A8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SlidingWindowsLayerParams *)&CoreML::Specification::_SlidingWindowsLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7E008(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SlidingWindowsLayerParams::MergePartialFromCodedStream(CoreML::Specification::SlidingWindowsLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t Varint64Fallback;
  char *v13;
  char v15;
  char v16;
  char v17;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_26;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_26;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 24)
            goto LABEL_26;
          v13 = *a2;
          if (*a2 < a2[1] && (*v13 & 0x80000000) == 0)
          {
            *((_QWORD *)this + 4) = *v13;
            goto LABEL_25;
          }
          *((_QWORD *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        if (v9 != 2)
          break;
        if (v7 != 16)
          goto LABEL_26;
        v13 = *a2;
        if (*a2 >= a2[1] || *v13 < 0)
        {
          *((_QWORD *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v17 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 3) = *v13;
LABEL_25:
          *a2 = v13 + 1;
        }
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_26:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::TopKLayerParams *CoreML::Specification::TopKLayerParams::TopKLayerParams(CoreML::Specification::TopKLayerParams *this)
{
  *(_QWORD *)this = &off_1E955CA00;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::TopKLayerParams *)&CoreML::Specification::_TopKLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B7E1F0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::TopKLayerParams::MergePartialFromCodedStream(CoreML::Specification::TopKLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t v12;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  char v17;
  char v18;
  char v19;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 24)
            goto LABEL_25;
          v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v13;
            *a2 = v13 + 1;
          }
          *((_BYTE *)this + 32) = Varint64Fallback != 0;
        }
        if (v9 != 2)
          break;
        if (v7 != 16)
          goto LABEL_25;
        v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          *((_QWORD *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 3) = *v15;
          *a2 = v15 + 1;
        }
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v17 & 1) == 0)
          return 0;
      }
      else
      {
        v12 = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = v12;
    }
LABEL_25:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::ArgMinLayerParams *CoreML::Specification::ArgMinLayerParams::ArgMinLayerParams(CoreML::Specification::ArgMinLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D840;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgMinLayerParams *)&CoreML::Specification::_ArgMinLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 24) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B7E3E4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgMinLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgMinLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_BYTE *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ArgMaxLayerParams *CoreML::Specification::ArgMaxLayerParams::ArgMaxLayerParams(CoreML::Specification::ArgMaxLayerParams *this)
{
  *(_QWORD *)this = &off_1E955D7A8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgMaxLayerParams *)&CoreML::Specification::_ArgMaxLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 24) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B7E58C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgMaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgMaxLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_BYTE *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::EmbeddingNDLayerParams *CoreML::Specification::EmbeddingNDLayerParams::EmbeddingNDLayerParams(CoreML::Specification::EmbeddingNDLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560858;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 48) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_DWORD *)this + 13) = 0;
  return this;
}

void sub_1D3B7E738(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::EmbeddingNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::EmbeddingNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  CoreML::Specification::WeightParams *v12;
  char *v14;
  char *v15;
  unint64_t Varint64Fallback;
  char *v17;
  int VarintSizeAsIntFallback;
  int v19;
  unsigned int v20;
  int v21;
  BOOL v22;
  int v23;
  _BOOL8 result;
  char v25;
  char v26;
  char v27;
  unsigned int TagFallback;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *(unsigned __int8 **)a2;
          v6 = *((_QWORD *)a2 + 1);
          if (*(_QWORD *)a2 >= v6)
          {
            LODWORD(v8) = 0;
LABEL_51:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0)
              goto LABEL_52;
            goto LABEL_8;
          }
          v7 = v5 + 1;
          v8 = *v5;
          if ((char)*v5 < 1)
          {
            if ((unint64_t)v7 < v6)
            {
              v10 = *v7;
              if ((v8 & ~v10) >= 0x80)
              {
                *(_QWORD *)a2 = v5 + 2;
                v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                goto LABEL_8;
              }
            }
            goto LABEL_51;
          }
          *(_QWORD *)a2 = v7;
          v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0)
            goto LABEL_52;
LABEL_8:
          v11 = v9 >> 3;
          if (v9 >> 3 <= 2)
            break;
          if (v11 == 3)
          {
            if (v9 != 24)
              goto LABEL_52;
            v15 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v26 & 1) == 0)
                return 0;
            }
            else
            {
              Varint64Fallback = *v15;
              *(_QWORD *)a2 = v15 + 1;
            }
            *((_BYTE *)this + 48) = Varint64Fallback != 0;
          }
          else
          {
            if (v11 == 20)
            {
              if (v9 != 162)
                goto LABEL_52;
              v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
              if (!v12)
              {
                v12 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v12);
                *((_QWORD *)this + 2) = v12;
              }
            }
            else
            {
              if (v11 != 21 || v9 != 170)
                goto LABEL_52;
              v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
              if (!v12)
              {
                v12 = (CoreML::Specification::WeightParams *)operator new();
                CoreML::Specification::WeightParams::WeightParams(v12);
                *((_QWORD *)this + 3) = v12;
              }
            }
            v17 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v17 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v17;
              *(_QWORD *)a2 = v17 + 1;
            }
            v19 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            v21 = *((_DWORD *)a2 + 13);
            v22 = __OFSUB__(v21--, 1);
            *((_DWORD *)a2 + 13) = v21;
            if (v21 < 0 != v22)
              return 0;
            v23 = v19;
            result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v20);
            if (!result)
              return result;
            if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v23))
              return 0;
          }
        }
        if (v11 != 1)
          break;
        if (v9 != 8)
          goto LABEL_52;
        v14 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
        {
          *((_QWORD *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v27 & 1) == 0)
            return 0;
        }
        else
        {
          *((_QWORD *)this + 4) = *v14;
LABEL_38:
          *(_QWORD *)a2 = v14 + 1;
        }
      }
      if (v11 != 2 || v9 != 16)
        break;
      v14 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
      {
        *((_QWORD *)this + 5) = *v14;
        goto LABEL_38;
      }
      *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
      if ((v25 & 1) == 0)
        return 0;
    }
LABEL_52:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B7EA18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchedMatMulLayerParams *CoreML::Specification::BatchedMatMulLayerParams::BatchedMatMulLayerParams(CoreML::Specification::BatchedMatMulLayerParams *this)
{
  *(_QWORD *)this = &off_1E9561860;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1D3B7EA94(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::BatchedMatMulLayerParams::MergePartialFromCodedStream(CoreML::Specification::BatchedMatMulLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  CoreML::Specification::WeightParams *v17;
  char *v18;
  int VarintSizeAsIntFallback;
  char *v20;
  unint64_t v21;
  int v22;
  unsigned int v23;
  int v24;
  BOOL v25;
  int v26;
  _BOOL8 result;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_7;
LABEL_13:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8)
            goto LABEL_7;
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v28 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          *((_BYTE *)this + 48) = Varint64Fallback != 0;
          continue;
        case 2u:
          if (v7 != 16)
            goto LABEL_7;
          v12 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
          {
            v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0)
              return 0;
          }
          else
          {
            v13 = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          *((_BYTE *)this + 49) = v13 != 0;
          continue;
        case 5u:
          if (v7 != 40)
            goto LABEL_7;
          v14 = *(char **)a2;
          if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1) && (*v14 & 0x80000000) == 0)
          {
            *((_QWORD *)this + 4) = *v14;
            goto LABEL_30;
          }
          *((_QWORD *)this + 4) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v30 & 1) == 0)
            return 0;
          continue;
        case 6u:
          if (v7 != 48)
            goto LABEL_7;
          v14 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
          {
            *((_QWORD *)this + 5) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v31 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 5) = *v14;
LABEL_30:
            *(_QWORD *)a2 = v14 + 1;
          }
          continue;
        case 7u:
          if (v7 != 56)
            goto LABEL_7;
          v15 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
          {
            v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v32 & 1) == 0)
              return 0;
          }
          else
          {
            v16 = *v15;
            *(_QWORD *)a2 = v15 + 1;
          }
          *((_BYTE *)this + 50) = v16 != 0;
          continue;
        case 8u:
          if (v7 != 66)
            goto LABEL_7;
          v17 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
          if (!v17)
          {
            v17 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v17);
            *((_QWORD *)this + 2) = v17;
          }
          goto LABEL_41;
        case 9u:
          if (v7 != 74)
            goto LABEL_7;
          v17 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
          if (!v17)
          {
            v17 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v17);
            *((_QWORD *)this + 3) = v17;
          }
LABEL_41:
          v18 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v24 = *((_DWORD *)a2 + 13);
          v25 = __OFSUB__(v24--, 1);
          *((_DWORD *)a2 + 13) = v24;
          if (v24 < 0 != v25)
            return 0;
          v26 = v22;
          result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v17, a2, v23);
          if (!result)
            return result;
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v26))
            return 0;
          continue;
        case 0xAu:
          if (v7 != 80)
            goto LABEL_7;
          v20 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
          {
            v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v33 & 1) == 0)
              return 0;
          }
          else
          {
            v21 = *v20;
            *(_QWORD *)a2 = v20 + 1;
          }
          *((_BYTE *)this + 51) = v21 != 0;
          break;
        default:
          goto LABEL_7;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *(_QWORD *)a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_13;
LABEL_7:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B7EE20(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::GetShapeLayerParams *CoreML::Specification::GetShapeLayerParams::GetShapeLayerParams(CoreML::Specification::GetShapeLayerParams *this)
{
  *(_QWORD *)this = &off_1E955EF68;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GetShapeLayerParams *)&CoreML::Specification::_GetShapeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7EE94(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GetShapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::GetShapeLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LoadConstantNDLayerParams *CoreML::Specification::LoadConstantNDLayerParams::LoadConstantNDLayerParams(CoreML::Specification::LoadConstantNDLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9561F80;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1D3B7EF7C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LoadConstantNDLayerParams::MergePartialFromCodedStream(CoreML::Specification::LoadConstantNDLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  CoreML::Specification::WeightParams *v12;
  char *v13;
  int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  int v18;
  BOOL v19;
  int v20;
  _BOOL8 result;
  int v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  char *v27;
  unint64_t v28;
  unint64_t Varint64Fallback;
  char v30;
  signed int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
          break;
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) != 0)
          goto LABEL_8;
LABEL_21:
        if ((_DWORD)v8)
          v15 = (v8 & 7) == 4;
        else
          v15 = 1;
        if (v15)
          return 1;
        if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        goto LABEL_21;
LABEL_8:
      if (v8 >> 3 == 2)
        break;
      if (v8 >> 3 != 1)
        goto LABEL_21;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          goto LABEL_21;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v22 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v23 = *((_DWORD *)a2 + 10);
          v24 = *((int *)a2 + 11);
          v25 = *((_QWORD *)a2 + 1);
          v26 = *((_DWORD *)a2 + 6);
          if (v23 == 0x7FFFFFFF)
            break;
          v27 = *(char **)a2;
          if ((int)(v23 - v26 + v24 + v25 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v27 >= v25 || *v27 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v30 & 1) == 0)
              return 0;
            v28 = Varint64Fallback;
          }
          else
          {
            v28 = *v27;
            *(_QWORD *)a2 = v27 + 1;
          }
          v31 = *((_DWORD *)this + 4);
          if (v31 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v31 + 1);
            v31 = *v5;
          }
          v32 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v31 + 1;
          *(_QWORD *)(v32 + 8 * v31 + 8) = v28;
        }
        *((_DWORD *)a2 + 10) = v22;
        v33 = v25 + v24;
        *((_QWORD *)a2 + 1) = v25 + v24;
        v34 = *((_DWORD *)a2 + 12);
        if (v34 >= v22)
          v34 = v22;
        v19 = __OFSUB__(v26, v34);
        v35 = v26 - v34;
        if ((v35 < 0) ^ v19 | (v35 == 0))
          v35 = 0;
        else
          *((_QWORD *)a2 + 1) = v33 - v35;
        *((_DWORD *)a2 + 11) = v35;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if (v8 != 18)
      goto LABEL_21;
    v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
    if (!v12)
    {
      v12 = (CoreML::Specification::WeightParams *)operator new();
      CoreML::Specification::WeightParams::WeightParams(v12);
      *((_QWORD *)this + 5) = v12;
    }
    v13 = *(char **)a2;
    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
    {
      v14 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
      if (v14 < 0)
        return 0;
    }
    else
    {
      v14 = *v13;
      *(_QWORD *)a2 = v13 + 1;
    }
    v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, v14);
    v18 = *((_DWORD *)a2 + 13);
    v19 = __OFSUB__(v18--, 1);
    *((_DWORD *)a2 + 13) = v18;
    if (v18 < 0 != v19)
      break;
    v20 = v16;
    result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v12, a2, v17);
    if (!result)
      return result;
  }
  while (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v20));
  return 0;
}

void sub_1D3B7F25C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::FillLikeLayerParams *CoreML::Specification::FillLikeLayerParams::FillLikeLayerParams(CoreML::Specification::FillLikeLayerParams *this)
{
  *(_QWORD *)this = &off_1E955EE38;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FillLikeLayerParams *)&CoreML::Specification::_FillLikeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7F2CC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillLikeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FillStaticLayerParams *CoreML::Specification::FillStaticLayerParams::FillStaticLayerParams(CoreML::Specification::FillStaticLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95600A0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_QWORD *)((char *)this + 36) = 0;
  return this;
}

void sub_1D3B7F430(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  BOOL v11;
  char *v12;
  int VarintSizeAsIntFallback;
  unsigned int *v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char *v21;
  unint64_t v22;
  unint64_t Varint64Fallback;
  char v24;
  signed int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  int v30;
  _BOOL8 result;
  unsigned int v32;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_13;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *(_QWORD *)a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_13;
LABEL_8:
        if (v8 >> 3 != 2)
          break;
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x12u, a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 18)
            goto LABEL_13;
          v12 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v17 = *((_DWORD *)a2 + 10);
            v18 = *((int *)a2 + 11);
            v19 = *((_QWORD *)a2 + 1);
            v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF)
              break;
            v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0)
                return 0;
              v22 = Varint64Fallback;
            }
            else
            {
              v22 = *v21;
              *(_QWORD *)a2 = v21 + 1;
            }
            v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              v25 = *v5;
            }
            v26 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(_QWORD *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 10) = v16;
          v27 = v19 + v18;
          *((_QWORD *)a2 + 1) = v19 + v18;
          v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16)
            v28 = v16;
          v29 = __OFSUB__(v20, v28);
          v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0))
            v30 = 0;
          else
            *((_QWORD *)a2 + 1) = v27 - v30;
          *((_DWORD *)a2 + 11) = v30;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
      if (v8 >> 3 != 1 || v8 != 13)
        break;
      v32 = 0;
      v14 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
        if (!result)
          return result;
        v15 = v32;
      }
      else
      {
        v15 = *v14;
        *(_QWORD *)a2 = v14 + 1;
      }
      *((_DWORD *)this + 9) = v15;
    }
LABEL_13:
    if ((_DWORD)v8)
      v11 = (v8 & 7) == 4;
    else
      v11 = 1;
    if (v11)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FillDynamicLayerParams *CoreML::Specification::FillDynamicLayerParams::FillDynamicLayerParams(CoreML::Specification::FillDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E95608F0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FillDynamicLayerParams *)&CoreML::Specification::_FillDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B7F700(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::FillDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::FillDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BroadcastToLikeLayerParams *CoreML::Specification::BroadcastToLikeLayerParams::BroadcastToLikeLayerParams(CoreML::Specification::BroadcastToLikeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562440;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToLikeLayerParams *)&CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7F858(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToLikeLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BroadcastToStaticLayerParams *CoreML::Specification::BroadcastToStaticLayerParams::BroadcastToStaticLayerParams(CoreML::Specification::BroadcastToStaticLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95631E8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::BroadcastToStaticLayerParams *)&CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B7F93C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0xAu, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BroadcastToDynamicLayerParams *CoreML::Specification::BroadcastToDynamicLayerParams::BroadcastToDynamicLayerParams(CoreML::Specification::BroadcastToDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563318;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BroadcastToDynamicLayerParams *)&CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B7FBB4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BroadcastToDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::BroadcastToDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::SqueezeLayerParams *CoreML::Specification::SqueezeLayerParams::SqueezeLayerParams(CoreML::Specification::SqueezeLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955EBD8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::SqueezeLayerParams *)&CoreML::Specification::_SqueezeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 36) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B7FC9C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SqueezeLayerParams::MergePartialFromCodedStream(CoreML::Specification::SqueezeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  signed int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  int v30;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16)
          break;
        v12 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v15 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *(_QWORD *)a2 = v12 + 1;
        }
        *((_BYTE *)this + 36) = Varint64Fallback != 0;
      }
      else
      {
        if (v8 >> 3 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          v16 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v17 = *((_DWORD *)a2 + 10);
            v18 = *((int *)a2 + 11);
            v19 = *((_QWORD *)a2 + 1);
            v20 = *((_DWORD *)a2 + 6);
            if (v17 == 0x7FFFFFFF)
              break;
            v21 = *(char **)a2;
            if ((int)(v17 - v20 + v18 + v19 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v24 & 1) == 0)
                return 0;
              v22 = v23;
            }
            else
            {
              v22 = *v21;
              *(_QWORD *)a2 = v21 + 1;
            }
            v25 = *((_DWORD *)this + 4);
            if (v25 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v25 + 1);
              v25 = *v5;
            }
            v26 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v25 + 1;
            *(_QWORD *)(v26 + 8 * v25 + 8) = v22;
          }
          *((_DWORD *)a2 + 10) = v16;
          v27 = v19 + v18;
          *((_QWORD *)a2 + 1) = v19 + v18;
          v28 = *((_DWORD *)a2 + 12);
          if (v28 >= v16)
            v28 = v16;
          v29 = __OFSUB__(v20, v28);
          v30 = v20 - v28;
          if ((v30 < 0) ^ v29 | (v30 == 0))
            v30 = 0;
          else
            *((_QWORD *)a2 + 1) = v27 - v30;
          *((_DWORD *)a2 + 11) = v30;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v14 = (v8 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ExpandDimsLayerParams *CoreML::Specification::ExpandDimsLayerParams::ExpandDimsLayerParams(CoreML::Specification::ExpandDimsLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9560008;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ExpandDimsLayerParams *)&CoreML::Specification::_ExpandDimsLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B7FF74(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ExpandDimsLayerParams::MergePartialFromCodedStream(CoreML::Specification::ExpandDimsLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::FlattenTo2DLayerParams *CoreML::Specification::FlattenTo2DLayerParams::FlattenTo2DLayerParams(CoreML::Specification::FlattenTo2DLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560988;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::FlattenTo2DLayerParams *)&CoreML::Specification::_FlattenTo2DLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B801F0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::FlattenTo2DLayerParams::MergePartialFromCodedStream(CoreML::Specification::FlattenTo2DLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReshapeLikeLayerParams *CoreML::Specification::ReshapeLikeLayerParams::ReshapeLikeLayerParams(CoreML::Specification::ReshapeLikeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560D18;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ReshapeLikeLayerParams *)&CoreML::Specification::_ReshapeLikeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8033C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeLikeLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ReshapeStaticLayerParams *CoreML::Specification::ReshapeStaticLayerParams::ReshapeStaticLayerParams(CoreML::Specification::ReshapeStaticLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9561BF0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReshapeStaticLayerParams *)&CoreML::Specification::_ReshapeStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B80420(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReshapeDynamicLayerParams *CoreML::Specification::ReshapeDynamicLayerParams::ReshapeDynamicLayerParams(CoreML::Specification::ReshapeDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E95621E0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ReshapeDynamicLayerParams *)&CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B80698(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReshapeDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReshapeDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::RankPreservingReshapeLayerParams *CoreML::Specification::RankPreservingReshapeLayerParams::RankPreservingReshapeLayerParams(CoreML::Specification::RankPreservingReshapeLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9564028;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::RankPreservingReshapeLayerParams *)&CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B8077C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::RankPreservingReshapeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RankPreservingReshapeLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 8)
        break;
      if (v8 == 8)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 10)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ConstantPaddingLayerParams *CoreML::Specification::ConstantPaddingLayerParams::ConstantPaddingLayerParams(CoreML::Specification::ConstantPaddingLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95624D8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 40) = 0;
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 11) = 0;
  return this;
}

void sub_1D3B80A08(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ConstantPaddingLayerParams::MergePartialFromCodedStream(CoreML::Specification::ConstantPaddingLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  unsigned int *v12;
  unsigned int v13;
  char *v14;
  unint64_t Varint64Fallback;
  char *v16;
  int VarintSizeAsIntFallback;
  BOOL v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  _BOOL8 result;
  unsigned int v36;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0)
              goto LABEL_27;
            goto LABEL_8;
          }
          v7 = *v6;
          if (*v6 < 1)
            goto LABEL_7;
          *(_QWORD *)a2 = v6 + 1;
          v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0)
            goto LABEL_27;
LABEL_8:
          v10 = v8 >> 3;
          if (v8 >> 3 != 3)
            break;
          if (v8 != 24)
            goto LABEL_27;
          v14 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v14;
            *(_QWORD *)a2 = v14 + 1;
          }
          *((_BYTE *)this + 40) = Varint64Fallback != 0;
        }
        if (v10 != 2)
          break;
        if (v8 == 16)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x12u, a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 18)
            goto LABEL_27;
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
      if (v10 != 1 || v8 != 13)
        break;
      v36 = 0;
      v12 = *(unsigned int **)a2;
      if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
        if (!result)
          return result;
        v13 = v36;
      }
      else
      {
        v13 = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
      *((_DWORD *)this + 9) = v13;
    }
LABEL_27:
    if ((_DWORD)v8)
      v18 = (v8 & 7) == 4;
    else
      v18 = 1;
    if (v18)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomNormalLikeLayerParams *CoreML::Specification::RandomNormalLikeLayerParams::RandomNormalLikeLayerParams(CoreML::Specification::RandomNormalLikeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562F88;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalLikeLayerParams *)&CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B80D30(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalLikeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t Varint64Fallback;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  BOOL v17;
  char v18;
  _BOOL8 result;
  unsigned int v20;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 29)
            goto LABEL_25;
          v20 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v14 = v20;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 21)
          goto LABEL_25;
        v21 = 0;
        v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result)
            return result;
          v16 = v21;
        }
        else
        {
          v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomNormalStaticLayerParams *CoreML::Specification::RandomNormalStaticLayerParams::RandomNormalStaticLayerParams(CoreML::Specification::RandomNormalStaticLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9563610;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomNormalStaticLayerParams *)&CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1D3B80F3C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  char *v16;
  int VarintSizeAsIntFallback;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  _BOOL8 result;
  unsigned int v36;
  unsigned int v37;

  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8)
            goto LABEL_26;
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          *((_QWORD *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21)
            goto LABEL_26;
          v37 = 0;
          v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result)
              return result;
            v13 = v37;
          }
          else
          {
            v13 = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29)
            goto LABEL_26;
          v36 = 0;
          v14 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
            if (!result)
              return result;
            v15 = v36;
          }
          else
          {
            v15 = *v14;
            *(_QWORD *)a2 = v14 + 1;
          }
          *((_DWORD *)this + 13) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x22u, a2, (uint64_t)v5) & 1) == 0)return 0;
          }
          else
          {
            if (v8 != 34)
              goto LABEL_26;
            v16 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v16;
              *(_QWORD *)a2 = v16 + 1;
            }
            v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              v21 = *((_DWORD *)a2 + 10);
              v22 = *((int *)a2 + 11);
              v23 = *((_QWORD *)a2 + 1);
              v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF)
                break;
              v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0)
                  return 0;
                v26 = v27;
              }
              else
              {
                v26 = *v25;
                *(_QWORD *)a2 = v25 + 1;
              }
              v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                v29 = *v5;
              }
              v30 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 10) = v20;
            v31 = v23 + v22;
            *((_QWORD *)a2 + 1) = v23 + v22;
            v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20)
              v32 = v20;
            v33 = __OFSUB__(v24, v32);
            v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0))
              v34 = 0;
            else
              *((_QWORD *)a2 + 1) = v31 - v34;
            *((_DWORD *)a2 + 11) = v34;
            *((_BYTE *)a2 + 36) = 0;
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

CoreML::Specification::RandomNormalDynamicLayerParams *CoreML::Specification::RandomNormalDynamicLayerParams::RandomNormalDynamicLayerParams(CoreML::Specification::RandomNormalDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563908;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomNormalDynamicLayerParams *)&CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B812C0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomNormalDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomNormalDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t Varint64Fallback;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  BOOL v17;
  char v18;
  _BOOL8 result;
  unsigned int v20;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 29)
            goto LABEL_25;
          v20 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v14 = v20;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 21)
          goto LABEL_25;
        v21 = 0;
        v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result)
            return result;
          v16 = v21;
        }
        else
        {
          v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomUniformLikeLayerParams *CoreML::Specification::RandomUniformLikeLayerParams::RandomUniformLikeLayerParams(CoreML::Specification::RandomUniformLikeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563280;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformLikeLayerParams *)&CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B814C0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformLikeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t Varint64Fallback;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  BOOL v17;
  char v18;
  _BOOL8 result;
  unsigned int v20;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 29)
            goto LABEL_25;
          v20 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v14 = v20;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 21)
          goto LABEL_25;
        v21 = 0;
        v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result)
            return result;
          v16 = v21;
        }
        else
        {
          v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomUniformStaticLayerParams *CoreML::Specification::RandomUniformStaticLayerParams::RandomUniformStaticLayerParams(CoreML::Specification::RandomUniformStaticLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95639A0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomUniformStaticLayerParams *)&CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 14) = 0;
  return this;
}

void sub_1D3B816CC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  char *v16;
  int VarintSizeAsIntFallback;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  _BOOL8 result;
  unsigned int v36;
  unsigned int v37;

  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8)
            goto LABEL_26;
          v10 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v19 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v10;
            *(_QWORD *)a2 = v10 + 1;
          }
          *((_QWORD *)this + 5) = Varint64Fallback;
          continue;
        case 2u:
          if (v8 != 21)
            goto LABEL_26;
          v37 = 0;
          v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v37);
            if (!result)
              return result;
            v13 = v37;
          }
          else
          {
            v13 = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 12) = v13;
          continue;
        case 3u:
          if (v8 != 29)
            goto LABEL_26;
          v36 = 0;
          v14 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
            if (!result)
              return result;
            v15 = v36;
          }
          else
          {
            v15 = *v14;
            *(_QWORD *)a2 = v14 + 1;
          }
          *((_DWORD *)this + 13) = v15;
          continue;
        case 4u:
          if (v8 == 32)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x22u, a2, (uint64_t)v5) & 1) == 0)return 0;
          }
          else
          {
            if (v8 != 34)
              goto LABEL_26;
            v16 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v16;
              *(_QWORD *)a2 = v16 + 1;
            }
            v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              v21 = *((_DWORD *)a2 + 10);
              v22 = *((int *)a2 + 11);
              v23 = *((_QWORD *)a2 + 1);
              v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF)
                break;
              v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0)
                  return 0;
                v26 = v27;
              }
              else
              {
                v26 = *v25;
                *(_QWORD *)a2 = v25 + 1;
              }
              v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                v29 = *v5;
              }
              v30 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 10) = v20;
            v31 = v23 + v22;
            *((_QWORD *)a2 + 1) = v23 + v22;
            v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20)
              v32 = v20;
            v33 = __OFSUB__(v24, v32);
            v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0))
              v34 = 0;
            else
              *((_QWORD *)a2 + 1) = v31 - v34;
            *((_DWORD *)a2 + 11) = v34;
            *((_BYTE *)a2 + 36) = 0;
          }
          break;
        default:
          goto LABEL_26;
      }
    }
LABEL_26:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

CoreML::Specification::RandomUniformDynamicLayerParams *CoreML::Specification::RandomUniformDynamicLayerParams::RandomUniformDynamicLayerParams(CoreML::Specification::RandomUniformDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563AD0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomUniformDynamicLayerParams *)&CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B81A50(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomUniformDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomUniformDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t Varint64Fallback;
  unsigned int *v13;
  unsigned int v14;
  unsigned int *v15;
  unsigned int v16;
  BOOL v17;
  char v18;
  _BOOL8 result;
  unsigned int v20;
  unsigned int v21;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 29)
            goto LABEL_25;
          v20 = 0;
          v13 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v14 = v20;
          }
          else
          {
            v14 = *v13;
            *a2 = (char *)(v13 + 1);
          }
          *((_DWORD *)this + 7) = v14;
        }
        if (v9 != 2)
          break;
        if (v7 != 21)
          goto LABEL_25;
        v21 = 0;
        v15 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
          if (!result)
            return result;
          v16 = v21;
        }
        else
        {
          v16 = *v15;
          *a2 = (char *)(v15 + 1);
        }
        *((_DWORD *)this + 6) = v16;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliLikeLayerParams *CoreML::Specification::RandomBernoulliLikeLayerParams::RandomBernoulliLikeLayerParams(CoreML::Specification::RandomBernoulliLikeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563870;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliLikeLayerParams *)&CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B81C4C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliLikeLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliLikeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  char v15;
  _BOOL8 result;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v17 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result)
            return result;
          v13 = v17;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliStaticLayerParams *CoreML::Specification::RandomBernoulliStaticLayerParams::RandomBernoulliStaticLayerParams(CoreML::Specification::RandomBernoulliStaticLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9563F90;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B81E00(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliStaticLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliStaticLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v12;
  unint64_t v13;
  char *v14;
  int VarintSizeAsIntFallback;
  unsigned int *v16;
  unsigned int v17;
  BOOL v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t Varint64Fallback;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;
  _BOOL8 result;
  unsigned int v36;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            LODWORD(v7) = 0;
LABEL_7:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
            v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v8 & 0x100000000) == 0)
              goto LABEL_27;
            goto LABEL_8;
          }
          v7 = *v6;
          if (*v6 < 1)
            goto LABEL_7;
          *(_QWORD *)a2 = v6 + 1;
          v8 = v7 | 0x100000000;
          if ((v8 & 0x100000000) == 0)
            goto LABEL_27;
LABEL_8:
          v10 = v8 >> 3;
          if (v8 >> 3 != 3)
            break;
          if (v8 == 24)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x1Au, a2, (uint64_t)v5) & 1) == 0)return 0;
          }
          else
          {
            if (v8 != 26)
              goto LABEL_27;
            v14 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v14;
              *(_QWORD *)a2 = v14 + 1;
            }
            v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              v21 = *((_DWORD *)a2 + 10);
              v22 = *((int *)a2 + 11);
              v23 = *((_QWORD *)a2 + 1);
              v24 = *((_DWORD *)a2 + 6);
              if (v21 == 0x7FFFFFFF)
                break;
              v25 = *(char **)a2;
              if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v25 >= v23 || *v25 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0)
                  return 0;
                v26 = Varint64Fallback;
              }
              else
              {
                v26 = *v25;
                *(_QWORD *)a2 = v25 + 1;
              }
              v29 = *((_DWORD *)this + 4);
              if (v29 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
                v29 = *v5;
              }
              v30 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v29 + 1;
              *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
            }
            *((_DWORD *)a2 + 10) = v20;
            v31 = v23 + v22;
            *((_QWORD *)a2 + 1) = v23 + v22;
            v32 = *((_DWORD *)a2 + 12);
            if (v32 >= v20)
              v32 = v20;
            v33 = __OFSUB__(v24, v32);
            v34 = v24 - v32;
            if ((v34 < 0) ^ v33 | (v34 == 0))
              v34 = 0;
            else
              *((_QWORD *)a2 + 1) = v31 - v34;
            *((_DWORD *)a2 + 11) = v34;
            *((_BYTE *)a2 + 36) = 0;
          }
        }
        if (v10 != 2)
          break;
        if (v8 != 21)
          goto LABEL_27;
        v36 = 0;
        v16 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v36);
          if (!result)
            return result;
          v17 = v36;
        }
        else
        {
          v17 = *v16;
          *(_QWORD *)a2 = v16 + 1;
        }
        *((_DWORD *)this + 12) = v17;
      }
      if (v10 != 1 || v8 != 8)
        break;
      v12 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
      {
        v13 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v19 & 1) == 0)
          return 0;
      }
      else
      {
        v13 = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
      *((_QWORD *)this + 5) = v13;
    }
LABEL_27:
    if ((_DWORD)v8)
      v18 = (v8 & 7) == 4;
    else
      v18 = 1;
    if (v18)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::RandomBernoulliDynamicLayerParams *CoreML::Specification::RandomBernoulliDynamicLayerParams::RandomBernoulliDynamicLayerParams(CoreML::Specification::RandomBernoulliDynamicLayerParams *this)
{
  *(_QWORD *)this = &off_1E9564288;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::RandomBernoulliDynamicLayerParams *)&CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return this;
}

void sub_1D3B8211C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::RandomBernoulliDynamicLayerParams::MergePartialFromCodedStream(CoreML::Specification::RandomBernoulliDynamicLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t Varint64Fallback;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  char v15;
  _BOOL8 result;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v17 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
          if (!result)
            return result;
          v13 = v17;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 6) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::CategoricalDistributionLayerParams *CoreML::Specification::CategoricalDistributionLayerParams::CategoricalDistributionLayerParams(CoreML::Specification::CategoricalDistributionLayerParams *this)
{
  *(_QWORD *)this = &off_1E9564320;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1D3B822C8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::CategoricalDistributionLayerParams::MergePartialFromCodedStream(CoreML::Specification::CategoricalDistributionLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v9;
  unint64_t Varint64Fallback;
  char *v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int v18;
  char v20;
  char v21;
  char v22;
  _BOOL8 result;
  unsigned int v24;
  unsigned int v25;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 < a2[1])
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_28;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8)
            goto LABEL_28;
          v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v20 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v9;
            *a2 = v9 + 1;
          }
          *((_QWORD *)this + 2) = Varint64Fallback;
          continue;
        case 2u:
          if (v7 != 16)
            goto LABEL_28;
          v11 = *a2;
          if (*a2 >= a2[1] || *v11 < 0)
          {
            v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v21 & 1) == 0)
              return 0;
          }
          else
          {
            v12 = *v11;
            *a2 = v11 + 1;
          }
          *((_QWORD *)this + 3) = v12;
          continue;
        case 3u:
          if (v7 != 24)
            goto LABEL_28;
          v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            v14 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v22 & 1) == 0)
              return 0;
          }
          else
          {
            v14 = *v13;
            *a2 = v13 + 1;
          }
          *((_BYTE *)this + 32) = v14 != 0;
          break;
        case 4u:
          if (v7 != 37)
            goto LABEL_28;
          v25 = 0;
          v15 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v25);
            if (!result)
              return result;
            v16 = v25;
          }
          else
          {
            v16 = *v15;
            *a2 = (char *)(v15 + 1);
          }
          *((_DWORD *)this + 9) = v16;
          continue;
        case 5u:
          if (v7 != 45)
            goto LABEL_28;
          v24 = 0;
          v17 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v24);
            if (!result)
              return result;
            v18 = v24;
          }
          else
          {
            v18 = *v17;
            *a2 = (char *)(v17 + 1);
          }
          *((_DWORD *)this + 10) = v18;
          continue;
        default:
          goto LABEL_28;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_28:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::ReduceL1LayerParams *CoreML::Specification::ReduceL1LayerParams::ReduceL1LayerParams(CoreML::Specification::ReduceL1LayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955F1C8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceL1LayerParams *)&CoreML::Specification::_ReduceL1LayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B8257C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceL1LayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceL1LayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceL2LayerParams *CoreML::Specification::ReduceL2LayerParams::ReduceL2LayerParams(CoreML::Specification::ReduceL2LayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955F260;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceL2LayerParams *)&CoreML::Specification::_ReduceL2LayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B828AC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceL2LayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceL2LayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMaxLayerParams *CoreML::Specification::ReduceMaxLayerParams::ReduceMaxLayerParams(CoreML::Specification::ReduceMaxLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955F8E8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMaxLayerParams *)&CoreML::Specification::_ReduceMaxLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B82BDC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMaxLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMaxLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMinLayerParams *CoreML::Specification::ReduceMinLayerParams::ReduceMinLayerParams(CoreML::Specification::ReduceMinLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955F980;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMinLayerParams *)&CoreML::Specification::_ReduceMinLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B82F0C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMinLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMinLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceSumLayerParams *CoreML::Specification::ReduceSumLayerParams::ReduceSumLayerParams(CoreML::Specification::ReduceSumLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955FA18;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceSumLayerParams *)&CoreML::Specification::_ReduceSumLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B8323C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceSumLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceProdLayerParams *CoreML::Specification::ReduceProdLayerParams::ReduceProdLayerParams(CoreML::Specification::ReduceProdLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95604C8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceProdLayerParams *)&CoreML::Specification::_ReduceProdLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B8356C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceProdLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceProdLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceMeanLayerParams *CoreML::Specification::ReduceMeanLayerParams::ReduceMeanLayerParams(CoreML::Specification::ReduceMeanLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9560430;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceMeanLayerParams *)&CoreML::Specification::_ReduceMeanLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B8389C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceMeanLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceMeanLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLogSumLayerParams *CoreML::Specification::ReduceLogSumLayerParams::ReduceLogSumLayerParams(CoreML::Specification::ReduceLogSumLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9561600;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceLogSumLayerParams *)&CoreML::Specification::_ReduceLogSumLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B83BCC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceLogSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLogSumLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceSumSquareLayerParams *CoreML::Specification::ReduceSumSquareLayerParams::ReduceSumSquareLayerParams(CoreML::Specification::ReduceSumSquareLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9562900;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceSumSquareLayerParams *)&CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B83EFC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceSumSquareLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceSumSquareLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ReduceLogSumExpLayerParams *CoreML::Specification::ReduceLogSumExpLayerParams::ReduceLogSumExpLayerParams(CoreML::Specification::ReduceLogSumExpLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9562868;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::ReduceLogSumExpLayerParams *)&CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 18) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B8422C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ReduceLogSumExpLayerParams::MergePartialFromCodedStream(CoreML::Specification::ReduceLogSumExpLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  unsigned int v10;
  char *v11;
  int VarintSizeAsIntFallback;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  int v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  signed int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  int v34;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 != 24)
          break;
        v13 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v18 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v13;
          *(_QWORD *)a2 = v13 + 1;
        }
        *((_BYTE *)this + 37) = Varint64Fallback != 0;
      }
      else if (v10 == 2)
      {
        if (v8 != 16)
          break;
        v15 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
          if ((v19 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *(_QWORD *)a2 = v15 + 1;
        }
        *((_BYTE *)this + 36) = v16 != 0;
      }
      else
      {
        if (v10 != 1)
          break;
        if (v8 == 8)
        {
          if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
        }
        else
        {
          if (v8 != 10)
            break;
          v11 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v11;
            *(_QWORD *)a2 = v11 + 1;
          }
          v20 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          while (1)
          {
            v21 = *((_DWORD *)a2 + 10);
            v22 = *((int *)a2 + 11);
            v23 = *((_QWORD *)a2 + 1);
            v24 = *((_DWORD *)a2 + 6);
            if (v21 == 0x7FFFFFFF)
              break;
            v25 = *(char **)a2;
            if ((int)(v21 - v24 + v22 + v23 - *(_QWORD *)a2) < 1)
              break;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              v27 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
              if ((v28 & 1) == 0)
                return 0;
              v26 = v27;
            }
            else
            {
              v26 = *v25;
              *(_QWORD *)a2 = v25 + 1;
            }
            v29 = *((_DWORD *)this + 4);
            if (v29 == *((_DWORD *)this + 5))
            {
              google::protobuf::RepeatedField<double>::Reserve(v5, v29 + 1);
              v29 = *v5;
            }
            v30 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 4) = v29 + 1;
            *(_QWORD *)(v30 + 8 * v29 + 8) = v26;
          }
          *((_DWORD *)a2 + 10) = v20;
          v31 = v23 + v22;
          *((_QWORD *)a2 + 1) = v23 + v22;
          v32 = *((_DWORD *)a2 + 12);
          if (v32 >= v20)
            v32 = v20;
          v33 = __OFSUB__(v24, v32);
          v34 = v24 - v32;
          if ((v34 < 0) ^ v33 | (v34 == 0))
            v34 = 0;
          else
            *((_QWORD *)a2 + 1) = v31 - v34;
          *((_DWORD *)a2 + 11) = v34;
          *((_BYTE *)a2 + 36) = 0;
        }
      }
    }
    if ((_DWORD)v8)
      v17 = (v8 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::WhereNonZeroLayerParams *CoreML::Specification::WhereNonZeroLayerParams::WhereNonZeroLayerParams(CoreML::Specification::WhereNonZeroLayerParams *this)
{
  *(_QWORD *)this = &off_1E95617C8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereNonZeroLayerParams *)&CoreML::Specification::_WhereNonZeroLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8454C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WhereNonZeroLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereNonZeroLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::MatrixBandPartLayerParams *CoreML::Specification::MatrixBandPartLayerParams::MatrixBandPartLayerParams(CoreML::Specification::MatrixBandPartLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562018;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::MatrixBandPartLayerParams *)&CoreML::Specification::_MatrixBandPartLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B84628(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::MatrixBandPartLayerParams::MergePartialFromCodedStream(CoreML::Specification::MatrixBandPartLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_QWORD *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::LowerTriangularLayerParams *CoreML::Specification::LowerTriangularLayerParams::LowerTriangularLayerParams(CoreML::Specification::LowerTriangularLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562738;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LowerTriangularLayerParams *)&CoreML::Specification::_LowerTriangularLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B847C4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::LowerTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::LowerTriangularLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::UpperTriangularLayerParams *CoreML::Specification::UpperTriangularLayerParams::UpperTriangularLayerParams(CoreML::Specification::UpperTriangularLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562A30;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::UpperTriangularLayerParams *)&CoreML::Specification::_UpperTriangularLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B84914(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::UpperTriangularLayerParams::MergePartialFromCodedStream(CoreML::Specification::UpperTriangularLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  unint64_t Varint64Fallback;
  char v13;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v13 & 1) == 0)
          return 0;
      }
      else
      {
        Varint64Fallback = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = Varint64Fallback;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::WhereBroadcastableLayerParams *CoreML::Specification::WhereBroadcastableLayerParams::WhereBroadcastableLayerParams(CoreML::Specification::WhereBroadcastableLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563740;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::WhereBroadcastableLayerParams *)&CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B84A60(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::WhereBroadcastableLayerParams::MergePartialFromCodedStream(CoreML::Specification::WhereBroadcastableLayerParams *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::LayerNormalizationLayerParams *CoreML::Specification::LayerNormalizationLayerParams::LayerNormalizationLayerParams(CoreML::Specification::LayerNormalizationLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9563448;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B84B48(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LayerNormalizationLayerParams::MergePartialFromCodedStream(CoreML::Specification::LayerNormalizationLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  unsigned int *v12;
  unsigned int v13;
  CoreML::Specification::WeightParams *v14;
  char *v15;
  int v16;
  int v18;
  unsigned int v19;
  int v20;
  BOOL v21;
  int v22;
  _BOOL8 result;
  int v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  char *v29;
  unint64_t v30;
  unint64_t Varint64Fallback;
  char v32;
  signed int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  int v37;
  unsigned int v38;

  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<long long,(google::protobuf::internal::WireFormatLite::FieldType)3>(10, (unint64_t *)a2, (uint64_t)v5) & 1) == 0)return 0;
          }
          else
          {
            if (v8 != 10)
              goto LABEL_27;
            v10 = *(char **)a2;
            if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
            {
              VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
              if (VarintSizeAsIntFallback < 0)
                return 0;
            }
            else
            {
              VarintSizeAsIntFallback = *v10;
              *(_QWORD *)a2 = v10 + 1;
            }
            v24 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
            while (1)
            {
              v25 = *((_DWORD *)a2 + 10);
              v26 = *((int *)a2 + 11);
              v27 = *((_QWORD *)a2 + 1);
              v28 = *((_DWORD *)a2 + 6);
              if (v25 == 0x7FFFFFFF)
                break;
              v29 = *(char **)a2;
              if ((int)(v25 - v28 + v26 + v27 - *(_QWORD *)a2) < 1)
                break;
              if ((unint64_t)v29 >= v27 || *v29 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v32 & 1) == 0)
                  return 0;
                v30 = Varint64Fallback;
              }
              else
              {
                v30 = *v29;
                *(_QWORD *)a2 = v29 + 1;
              }
              v33 = *((_DWORD *)this + 4);
              if (v33 == *((_DWORD *)this + 5))
              {
                google::protobuf::RepeatedField<double>::Reserve(v5, v33 + 1);
                v33 = *v5;
              }
              v34 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 4) = v33 + 1;
              *(_QWORD *)(v34 + 8 * v33 + 8) = v30;
            }
            *((_DWORD *)a2 + 10) = v24;
            v35 = v27 + v26;
            *((_QWORD *)a2 + 1) = v27 + v26;
            v36 = *((_DWORD *)a2 + 12);
            if (v36 >= v24)
              v36 = v24;
            v21 = __OFSUB__(v28, v36);
            v37 = v28 - v36;
            if ((v37 < 0) ^ v21 | (v37 == 0))
              v37 = 0;
            else
              *((_QWORD *)a2 + 1) = v35 - v37;
            *((_DWORD *)a2 + 11) = v37;
            *((_BYTE *)a2 + 36) = 0;
          }
          break;
        case 2u:
          if (v8 != 21)
            goto LABEL_27;
          v38 = 0;
          v12 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v38);
            if (!result)
              return result;
            v13 = v38;
          }
          else
          {
            v13 = *v12;
            *(_QWORD *)a2 = v12 + 1;
          }
          *((_DWORD *)this + 14) = v13;
          continue;
        case 3u:
          if (v8 != 26)
            goto LABEL_27;
          v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
          if (!v14)
          {
            v14 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v14);
            *((_QWORD *)this + 5) = v14;
          }
          goto LABEL_24;
        case 4u:
          if (v8 != 34)
            goto LABEL_27;
          v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
          if (!v14)
          {
            v14 = (CoreML::Specification::WeightParams *)operator new();
            CoreML::Specification::WeightParams::WeightParams(v14);
            *((_QWORD *)this + 6) = v14;
          }
LABEL_24:
          v15 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
          {
            v16 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (v16 < 0)
              return 0;
          }
          else
          {
            v16 = *v15;
            *(_QWORD *)a2 = v15 + 1;
          }
          v18 = google::protobuf::io::CodedInputStream::PushLimit(a2, v16);
          v20 = *((_DWORD *)a2 + 13);
          v21 = __OFSUB__(v20--, 1);
          *((_DWORD *)a2 + 13) = v20;
          if (v20 < 0 != v21)
            return 0;
          v22 = v18;
          result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v14, a2, v19);
          if (!result)
            return result;
          if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v22))
            return 0;
          continue;
        default:
          goto LABEL_27;
      }
    }
LABEL_27:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B84ED4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::NonMaximumSuppressionLayerParams *CoreML::Specification::NonMaximumSuppressionLayerParams::NonMaximumSuppressionLayerParams(CoreML::Specification::NonMaximumSuppressionLayerParams *this)
{
  *(_QWORD *)this = &off_1E9563EF8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::NonMaximumSuppressionLayerParams *)&CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B84F50(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::NonMaximumSuppressionLayerParams::MergePartialFromCodedStream(CoreML::Specification::NonMaximumSuppressionLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v9;
  unsigned int v10;
  unsigned int *v11;
  unsigned int v12;
  char *v13;
  char *v14;
  unint64_t Varint64Fallback;
  char v17;
  char v18;
  _BOOL8 result;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 < a2[1])
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_24;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 13)
            goto LABEL_24;
          v21 = 0;
          v9 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result)
              return result;
            v10 = v21;
          }
          else
          {
            v10 = *v9;
            *a2 = (char *)(v9 + 1);
          }
          *((_DWORD *)this + 4) = v10;
          continue;
        case 2u:
          if (v7 != 21)
            goto LABEL_24;
          v20 = 0;
          v11 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v12 = v20;
          }
          else
          {
            v12 = *v11;
            *a2 = (char *)(v11 + 1);
          }
          *((_DWORD *)this + 5) = v12;
          continue;
        case 3u:
          if (v7 != 24)
            goto LABEL_24;
          v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            *((_QWORD *)this + 3) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 3) = *v13;
            *a2 = v13 + 1;
          }
          continue;
        case 4u:
          if (v7 != 32)
            goto LABEL_24;
          v14 = *a2;
          if (*a2 >= a2[1] || *v14 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v14;
            *a2 = v14 + 1;
          }
          *((_BYTE *)this + 32) = Varint64Fallback != 0;
          break;
        default:
          goto LABEL_24;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_24:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::OneHotLayerParams *CoreML::Specification::OneHotLayerParams::OneHotLayerParams(CoreML::Specification::OneHotLayerParams *this)
{
  *(_QWORD *)this = &off_1E955DD00;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::OneHotLayerParams *)&CoreML::Specification::_OneHotLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B851BC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::OneHotLayerParams::MergePartialFromCodedStream(CoreML::Specification::OneHotLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v9;
  char *v10;
  unint64_t Varint64Fallback;
  unsigned int *v12;
  unsigned int v13;
  unsigned int *v14;
  unsigned int v15;
  char v17;
  char v18;
  _BOOL8 result;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 < a2[1])
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) == 0)
        goto LABEL_24;
LABEL_7:
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8)
            goto LABEL_24;
          v9 = *a2;
          if (*a2 >= a2[1] || *v9 < 0)
          {
            *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v17 & 1) == 0)
              return 0;
          }
          else
          {
            *((_QWORD *)this + 2) = *v9;
            *a2 = v9 + 1;
          }
          continue;
        case 2u:
          if (v7 != 16)
            goto LABEL_24;
          v10 = *a2;
          if (*a2 >= a2[1] || *v10 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v18 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v10;
            *a2 = v10 + 1;
          }
          *((_QWORD *)this + 3) = Varint64Fallback;
          break;
        case 3u:
          if (v7 != 29)
            goto LABEL_24;
          v21 = 0;
          v12 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v21);
            if (!result)
              return result;
            v13 = v21;
          }
          else
          {
            v13 = *v12;
            *a2 = (char *)(v12 + 1);
          }
          *((_DWORD *)this + 8) = v13;
          continue;
        case 4u:
          if (v7 != 37)
            goto LABEL_24;
          v20 = 0;
          v14 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v20);
            if (!result)
              return result;
            v15 = v20;
          }
          else
          {
            v15 = *v14;
            *a2 = (char *)(v14 + 1);
          }
          *((_DWORD *)this + 9) = v15;
          continue;
        default:
          goto LABEL_24;
      }
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) != 0)
      goto LABEL_7;
LABEL_24:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::CumSumLayerParams *CoreML::Specification::CumSumLayerParams::CumSumLayerParams(CoreML::Specification::CumSumLayerParams *this)
{
  *(_QWORD *)this = &off_1E955DA08;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::CumSumLayerParams *)&CoreML::Specification::_CumSumLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_WORD *)this + 12) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B85420(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::CumSumLayerParams::MergePartialFromCodedStream(CoreML::Specification::CumSumLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int v9;
  char *v11;
  unint64_t v12;
  char *v13;
  unint64_t Varint64Fallback;
  char *v15;
  unint64_t v16;
  BOOL v17;
  char v18;
  char v19;
  char v20;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = *a2;
          if (*a2 >= a2[1])
          {
            LODWORD(v6) = 0;
LABEL_6:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
            v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v7 & 0x100000000) == 0)
              goto LABEL_25;
            goto LABEL_7;
          }
          v6 = *v5;
          if (*v5 < 1)
            goto LABEL_6;
          *a2 = v5 + 1;
          v7 = v6 | 0x100000000;
          if ((v7 & 0x100000000) == 0)
            goto LABEL_25;
LABEL_7:
          v9 = v7 >> 3;
          if (v7 >> 3 != 3)
            break;
          if (v7 != 24)
            goto LABEL_25;
          v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
            if ((v19 & 1) == 0)
              return 0;
          }
          else
          {
            Varint64Fallback = *v13;
            *a2 = v13 + 1;
          }
          *((_BYTE *)this + 25) = Varint64Fallback != 0;
        }
        if (v9 != 2)
          break;
        if (v7 != 16)
          goto LABEL_25;
        v15 = *a2;
        if (*a2 >= a2[1] || *v15 < 0)
        {
          v16 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v20 & 1) == 0)
            return 0;
        }
        else
        {
          v16 = *v15;
          *a2 = v15 + 1;
        }
        *((_BYTE *)this + 24) = v16 != 0;
      }
      if (v9 != 1 || v7 != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        v12 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v18 & 1) == 0)
          return 0;
      }
      else
      {
        v12 = *v11;
        *a2 = v11 + 1;
      }
      *((_QWORD *)this + 2) = v12;
    }
LABEL_25:
    if ((_DWORD)v7)
      v17 = (v7 & 7) == 4;
    else
      v17 = 1;
    if (v17)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ClampedReLULayerParams *CoreML::Specification::ClampedReLULayerParams::ClampedReLULayerParams(CoreML::Specification::ClampedReLULayerParams *this)
{
  *(_QWORD *)this = &off_1E9560728;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ClampedReLULayerParams *)&CoreML::Specification::_ClampedReLULayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B85618(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ClampedReLULayerParams::MergePartialFromCodedStream(CoreML::Specification::ClampedReLULayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  _BOOL8 result;
  unsigned int v16;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v16 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13)
        break;
      v17 = 0;
      v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result)
          return result;
        v11 = v17;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ArgSortLayerParams *CoreML::Specification::ArgSortLayerParams::ArgSortLayerParams(CoreML::Specification::ArgSortLayerParams *this)
{
  *(_QWORD *)this = &off_1E955E1C0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ArgSortLayerParams *)&CoreML::Specification::_ArgSortLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 24) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B857CC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ArgSortLayerParams::MergePartialFromCodedStream(CoreML::Specification::ArgSortLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 16)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_BYTE *)this + 24) = Varint64Fallback != 0;
      }
      if (v7 >> 3 != 1 || v7 != 8)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::Pooling3DLayerParams *CoreML::Specification::Pooling3DLayerParams::Pooling3DLayerParams(CoreML::Specification::Pooling3DLayerParams *this)
{
  *(_QWORD *)this = &off_1E955F7B8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::Pooling3DLayerParams *)&CoreML::Specification::_Pooling3DLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  return this;
}

void sub_1D3B85974(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::Pooling3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::Pooling3DLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v9;
  char *v10;
  int v11;
  char *v12;
  int v13;
  char *v14;
  int v15;
  char *v16;
  int v17;
  char *v18;
  int v19;
  char *v20;
  int v21;
  char *v22;
  int v23;
  char *v24;
  int v25;
  char *v26;
  int v27;
  char *v28;
  int v29;
  char *v30;
  int v31;
  char *v32;
  int v33;
  char *v34;
  int v35;
  char *v36;
  unint64_t Varint64Fallback;
  char *v38;
  int v39;
  char v40;
  uint64_t Varint32Fallback;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  while (2)
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 < a2[1])
        break;
      LODWORD(v6) = 0;
LABEL_6:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
      v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v7 & 0x100000000) != 0)
        goto LABEL_13;
LABEL_7:
      if ((_DWORD)v7)
        v9 = (v7 & 7) == 4;
      else
        v9 = 1;
      if (v9)
        return 1;
      if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)return 0;
    }
    v6 = *v5;
    if (*v5 < 1)
      goto LABEL_6;
    *a2 = v5 + 1;
    v7 = v6 | 0x100000000;
    if ((v7 & 0x100000000) == 0)
      goto LABEL_7;
LABEL_13:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8)
          goto LABEL_7;
        v10 = *a2;
        if (*a2 >= a2[1])
        {
          v11 = 0;
        }
        else
        {
          v11 = *v10;
          if ((*v10 & 0x80000000) == 0)
          {
            *a2 = v10 + 1;
            goto LABEL_78;
          }
        }
        Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v11);
        v11 = Varint32Fallback;
        if (Varint32Fallback < 0)
          return 0;
LABEL_78:
        *((_DWORD *)this + 4) = v11;
        continue;
      case 2u:
        if (v7 != 16)
          goto LABEL_7;
        v12 = *a2;
        if (*a2 >= a2[1])
        {
          v13 = 0;
        }
        else
        {
          v13 = *v12;
          if ((*v12 & 0x80000000) == 0)
          {
            *a2 = v12 + 1;
            goto LABEL_81;
          }
        }
        v42 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v13);
        v13 = v42;
        if (v42 < 0)
          return 0;
LABEL_81:
        *((_DWORD *)this + 5) = v13;
        continue;
      case 3u:
        if (v7 != 24)
          goto LABEL_7;
        v14 = *a2;
        if (*a2 >= a2[1])
        {
          v15 = 0;
        }
        else
        {
          v15 = *v14;
          if ((*v14 & 0x80000000) == 0)
          {
            *a2 = v14 + 1;
            goto LABEL_84;
          }
        }
        v43 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v15);
        v15 = v43;
        if (v43 < 0)
          return 0;
LABEL_84:
        *((_DWORD *)this + 6) = v15;
        continue;
      case 4u:
        if (v7 != 32)
          goto LABEL_7;
        v16 = *a2;
        if (*a2 >= a2[1])
        {
          v17 = 0;
        }
        else
        {
          v17 = *v16;
          if ((*v16 & 0x80000000) == 0)
          {
            *a2 = v16 + 1;
            goto LABEL_87;
          }
        }
        v44 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v17);
        v17 = v44;
        if (v44 < 0)
          return 0;
LABEL_87:
        *((_DWORD *)this + 7) = v17;
        continue;
      case 5u:
        if (v7 != 40)
          goto LABEL_7;
        v18 = *a2;
        if (*a2 >= a2[1])
        {
          v19 = 0;
        }
        else
        {
          v19 = *v18;
          if ((*v18 & 0x80000000) == 0)
          {
            *a2 = v18 + 1;
            goto LABEL_90;
          }
        }
        v45 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v19);
        v19 = v45;
        if (v45 < 0)
          return 0;
LABEL_90:
        *((_DWORD *)this + 8) = v19;
        continue;
      case 6u:
        if (v7 != 48)
          goto LABEL_7;
        v20 = *a2;
        if (*a2 >= a2[1])
        {
          v21 = 0;
        }
        else
        {
          v21 = *v20;
          if ((*v20 & 0x80000000) == 0)
          {
            *a2 = v20 + 1;
            goto LABEL_93;
          }
        }
        v46 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v21);
        v21 = v46;
        if (v46 < 0)
          return 0;
LABEL_93:
        *((_DWORD *)this + 9) = v21;
        continue;
      case 7u:
        if (v7 != 56)
          goto LABEL_7;
        v22 = *a2;
        if (*a2 >= a2[1])
        {
          v23 = 0;
        }
        else
        {
          v23 = *v22;
          if ((*v22 & 0x80000000) == 0)
          {
            *a2 = v22 + 1;
            goto LABEL_96;
          }
        }
        v47 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v23);
        v23 = v47;
        if (v47 < 0)
          return 0;
LABEL_96:
        *((_DWORD *)this + 10) = v23;
        continue;
      case 8u:
        if (v7 != 64)
          goto LABEL_7;
        v24 = *a2;
        if (*a2 >= a2[1])
        {
          v25 = 0;
        }
        else
        {
          v25 = *v24;
          if ((*v24 & 0x80000000) == 0)
          {
            *a2 = v24 + 1;
            goto LABEL_99;
          }
        }
        v48 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v25);
        v25 = v48;
        if (v48 < 0)
          return 0;
LABEL_99:
        *((_DWORD *)this + 11) = v25;
        continue;
      case 9u:
        if (v7 != 72)
          goto LABEL_7;
        v26 = *a2;
        if (*a2 >= a2[1])
        {
          v27 = 0;
        }
        else
        {
          v27 = *v26;
          if ((*v26 & 0x80000000) == 0)
          {
            *a2 = v26 + 1;
            goto LABEL_102;
          }
        }
        v49 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v27);
        v27 = v49;
        if (v49 < 0)
          return 0;
LABEL_102:
        *((_DWORD *)this + 12) = v27;
        continue;
      case 0xAu:
        if (v7 != 80)
          goto LABEL_7;
        v28 = *a2;
        if (*a2 >= a2[1])
        {
          v29 = 0;
        }
        else
        {
          v29 = *v28;
          if ((*v28 & 0x80000000) == 0)
          {
            *a2 = v28 + 1;
            goto LABEL_105;
          }
        }
        v50 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v29);
        v29 = v50;
        if (v50 < 0)
          return 0;
LABEL_105:
        *((_DWORD *)this + 13) = v29;
        continue;
      case 0xBu:
        if (v7 != 88)
          goto LABEL_7;
        v30 = *a2;
        if (*a2 >= a2[1])
        {
          v31 = 0;
        }
        else
        {
          v31 = *v30;
          if ((*v30 & 0x80000000) == 0)
          {
            *a2 = v30 + 1;
            goto LABEL_108;
          }
        }
        v51 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v31);
        v31 = v51;
        if (v51 < 0)
          return 0;
LABEL_108:
        *((_DWORD *)this + 14) = v31;
        continue;
      case 0xCu:
        if (v7 != 96)
          goto LABEL_7;
        v32 = *a2;
        if (*a2 >= a2[1])
        {
          v33 = 0;
        }
        else
        {
          v33 = *v32;
          if ((*v32 & 0x80000000) == 0)
          {
            *a2 = v32 + 1;
            goto LABEL_111;
          }
        }
        v52 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v33);
        v33 = v52;
        if (v52 < 0)
          return 0;
LABEL_111:
        *((_DWORD *)this + 15) = v33;
        continue;
      case 0xDu:
        if (v7 != 104)
          goto LABEL_7;
        v34 = *a2;
        if (*a2 >= a2[1])
        {
          v35 = 0;
        }
        else
        {
          v35 = *v34;
          if ((*v34 & 0x80000000) == 0)
          {
            *a2 = v34 + 1;
            goto LABEL_114;
          }
        }
        v53 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v35);
        v35 = v53;
        if (v53 < 0)
          return 0;
LABEL_114:
        *((_DWORD *)this + 16) = v35;
        continue;
      case 0xEu:
        if (v7 != 112)
          goto LABEL_7;
        v36 = *a2;
        if (*a2 >= a2[1] || *v36 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v40 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v36;
          *a2 = v36 + 1;
        }
        *((_BYTE *)this + 68) = Varint64Fallback != 0;
        continue;
      case 0xFu:
        if (v7 != 120)
          goto LABEL_7;
        v38 = *a2;
        if (*a2 >= a2[1])
        {
          v39 = 0;
        }
        else
        {
          v39 = *v38;
          if ((*v38 & 0x80000000) == 0)
          {
            *a2 = v38 + 1;
            goto LABEL_117;
          }
        }
        v54 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v39);
        v39 = v54;
        if ((v54 & 0x8000000000000000) == 0)
        {
LABEL_117:
          *((_DWORD *)this + 18) = v39;
          continue;
        }
        return 0;
      default:
        goto LABEL_7;
    }
  }
}

CoreML::Specification::GlobalPooling3DLayerParams *CoreML::Specification::GlobalPooling3DLayerParams::GlobalPooling3DLayerParams(CoreML::Specification::GlobalPooling3DLayerParams *this)
{
  *(_QWORD *)this = &off_1E9562608;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::GlobalPooling3DLayerParams *)&CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B85F18(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::GlobalPooling3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::GlobalPooling3DLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::SliceBySizeLayerParams *CoreML::Specification::SliceBySizeLayerParams::SliceBySizeLayerParams(CoreML::Specification::SliceBySizeLayerParams *this)
{
  *(_QWORD *)this = &off_1E9560DB0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SliceBySizeLayerParams *)&CoreML::Specification::_SliceBySizeLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B86070(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SliceBySizeLayerParams::MergePartialFromCodedStream(CoreML::Specification::SliceBySizeLayerParams *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t Varint64Fallback;
  BOOL v14;
  char v15;
  char v16;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 3)
          break;
        if (v7 != 24)
          goto LABEL_20;
        v12 = *a2;
        if (*a2 >= a2[1] || *v12 < 0)
        {
          Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          Varint64Fallback = *v12;
          *a2 = v12 + 1;
        }
        *((_QWORD *)this + 3) = Varint64Fallback;
      }
      if (v7 >> 3 != 2 || v7 != 16)
        break;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        v11 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v15 & 1) == 0)
          return 0;
      }
      else
      {
        v11 = *v10;
        *a2 = v10 + 1;
      }
      *((_QWORD *)this + 2) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    if (v14)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::Convolution3DLayerParams *CoreML::Specification::Convolution3DLayerParams::Convolution3DLayerParams(CoreML::Specification::Convolution3DLayerParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95618F8;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 34) = 0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return this;
}

void sub_1D3B86230(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::Convolution3DLayerParams::MergePartialFromCodedStream(CoreML::Specification::Convolution3DLayerParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned __int8 *v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int TagFallback;
  unsigned int v14;
  char *v15;
  int v16;
  char *v17;
  int v18;
  char *v19;
  int v20;
  CoreML::Specification::WeightParams *v21;
  char *v22;
  int v23;
  char *v24;
  int v25;
  char *v26;
  int v27;
  char *v28;
  int v29;
  char *v30;
  int v31;
  char *v32;
  int v33;
  char *v34;
  int v35;
  char *v36;
  unint64_t v37;
  char *v38;
  int v39;
  char *v40;
  int v41;
  char *v42;
  int v43;
  char *v44;
  int v45;
  char *v46;
  int v47;
  char *v48;
  int v49;
  char *v50;
  int v51;
  char *v52;
  int v53;
  char *v54;
  unint64_t Varint64Fallback;
  char *v56;
  int VarintSizeAsIntFallback;
  char *v58;
  int v59;
  char *v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  BOOL v65;
  int v66;
  _BOOL8 result;
  char v68;
  char v69;
  int v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  char *v75;
  unint64_t v76;
  unint64_t v77;
  char v78;
  signed int v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t Varint32Fallback;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v5 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            while (1)
            {
              while (1)
              {
LABEL_2:
                v6 = *(unsigned __int8 **)a2;
                v7 = *((_QWORD *)a2 + 1);
                if (*(_QWORD *)a2 >= v7)
                {
                  LODWORD(v9) = 0;
                }
                else
                {
                  v8 = v6 + 1;
                  v9 = *v6;
                  if ((char)*v6 >= 1)
                  {
                    *(_QWORD *)a2 = v8;
                    v10 = v9 | 0x100000000;
                    if ((v10 & 0x100000000) == 0)
                      goto LABEL_9;
                    goto LABEL_17;
                  }
                  if ((unint64_t)v8 < v7)
                  {
                    v11 = *v8;
                    if ((v9 & ~v11) >= 0x80)
                    {
                      *(_QWORD *)a2 = v6 + 2;
                      v10 = (v9 + (v11 << 7) - 128) | 0x100000000;
                      goto LABEL_17;
                    }
                  }
                }
                TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v9);
                v10 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
                if ((v10 & 0x100000000) == 0)
                  goto LABEL_9;
LABEL_17:
                v14 = v10 >> 3;
                if (v10 >> 3 <= 0x31)
                  break;
                if (v10 >> 3 <= 0x45)
                {
                  if (v14 == 50)
                  {
                    if (v10 != 144)
                      goto LABEL_9;
                    v54 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v54 < 0)
                    {
                      Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                      if ((v69 & 1) == 0)
                        return 0;
                    }
                    else
                    {
                      Varint64Fallback = *v54;
                      *(_QWORD *)a2 = v54 + 1;
                    }
                    *((_BYTE *)this + 104) = Varint64Fallback != 0;
                  }
                  else
                  {
                    if (v14 == 60)
                    {
                      if (v10 != 226)
                        goto LABEL_9;
                      v21 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
                      if (!v21)
                      {
                        v21 = (CoreML::Specification::WeightParams *)operator new();
                        CoreML::Specification::WeightParams::WeightParams(v21);
                        *((_QWORD *)this + 5) = v21;
                      }
                    }
                    else
                    {
                      if (v14 != 61 || v10 != 234)
                        goto LABEL_9;
                      v21 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
                      if (!v21)
                      {
                        v21 = (CoreML::Specification::WeightParams *)operator new();
                        CoreML::Specification::WeightParams::WeightParams(v21);
                        *((_QWORD *)this + 6) = v21;
                      }
                    }
                    v56 = *(char **)a2;
                    if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v56 < 0)
                    {
                      VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                      if (VarintSizeAsIntFallback < 0)
                        return 0;
                    }
                    else
                    {
                      VarintSizeAsIntFallback = *v56;
                      *(_QWORD *)a2 = v56 + 1;
                    }
                    v62 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
                    v64 = *((_DWORD *)a2 + 13);
                    v65 = __OFSUB__(v64--, 1);
                    *((_DWORD *)a2 + 13) = v64;
                    if (v64 < 0 != v65)
                      return 0;
                    v66 = v62;
                    result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v21, a2, v63);
                    if (!result)
                      return result;
                    if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v66))
                      return 0;
                  }
                }
                else
                {
                  switch(v14)
                  {
                    case 'F':
                      if (v10 != 48)
                        goto LABEL_9;
                      v17 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v18 = 0;
                      }
                      else
                      {
                        v18 = *v17;
                        if ((*v17 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v17 + 1;
                          goto LABEL_161;
                        }
                      }
                      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v18);
                      v18 = Varint32Fallback;
                      if (Varint32Fallback < 0)
                        return 0;
LABEL_161:
                      *((_DWORD *)this + 27) = v18;
                      continue;
                    case 'P':
                      if (v10 != 128)
                        goto LABEL_9;
                      v24 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v25 = 0;
                      }
                      else
                      {
                        v25 = *v24;
                        if ((*v24 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v24 + 1;
                          goto LABEL_164;
                        }
                      }
                      v85 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25);
                      v25 = v85;
                      if (v85 < 0)
                        return 0;
LABEL_164:
                      *((_DWORD *)this + 28) = v25;
                      continue;
                    case 'Q':
                      if (v10 != 136)
                        goto LABEL_9;
                      v26 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v27 = 0;
                      }
                      else
                      {
                        v27 = *v26;
                        if ((*v26 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v26 + 1;
                          goto LABEL_167;
                        }
                      }
                      v86 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
                      v27 = v86;
                      if (v86 < 0)
                        return 0;
LABEL_167:
                      *((_DWORD *)this + 29) = v27;
                      continue;
                    case 'R':
                      if (v10 != 144)
                        goto LABEL_9;
                      v28 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v29 = 0;
                      }
                      else
                      {
                        v29 = *v28;
                        if ((*v28 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v28 + 1;
                          goto LABEL_170;
                        }
                      }
                      v87 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29);
                      v29 = v87;
                      if (v87 < 0)
                        return 0;
LABEL_170:
                      *((_DWORD *)this + 30) = v29;
                      continue;
                    case 'S':
                      if (v10 != 152)
                        goto LABEL_9;
                      v30 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v31 = 0;
                      }
                      else
                      {
                        v31 = *v30;
                        if ((*v30 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v30 + 1;
                          goto LABEL_173;
                        }
                      }
                      v88 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
                      v31 = v88;
                      if (v88 < 0)
                        return 0;
LABEL_173:
                      *((_DWORD *)this + 31) = v31;
                      continue;
                    case 'T':
                      if (v10 != 160)
                        goto LABEL_9;
                      v32 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v33 = 0;
                      }
                      else
                      {
                        v33 = *v32;
                        if ((*v32 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v32 + 1;
                          goto LABEL_176;
                        }
                      }
                      v89 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v33);
                      v33 = v89;
                      if (v89 < 0)
                        return 0;
LABEL_176:
                      *((_DWORD *)this + 32) = v33;
                      continue;
                    case 'U':
                      if (v10 != 168)
                        goto LABEL_9;
                      v34 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                      {
                        v35 = 0;
                      }
                      else
                      {
                        v35 = *v34;
                        if ((*v34 & 0x80000000) == 0)
                        {
                          *(_QWORD *)a2 = v34 + 1;
                          goto LABEL_179;
                        }
                      }
                      v90 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                      v35 = v90;
                      if (v90 < 0)
                        return 0;
LABEL_179:
                      *((_DWORD *)this + 33) = v35;
                      continue;
                    case 'V':
                      if (v10 != 176)
                        goto LABEL_9;
                      v36 = *(char **)a2;
                      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v36 < 0)
                      {
                        v37 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                        if ((v68 & 1) == 0)
                          return 0;
                      }
                      else
                      {
                        v37 = *v36;
                        *(_QWORD *)a2 = v36 + 1;
                      }
                      *((_BYTE *)this + 105) = v37 != 0;
                      continue;
                    case 'W':
                      if (v10 == 184)
                      {
                        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x2BAu, a2, (uint64_t)v5) & 1) == 0)return 0;
                      }
                      else
                      {
                        if (v10 != 186)
                          goto LABEL_9;
                        v38 = *(char **)a2;
                        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v38 < 0)
                        {
                          v39 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                          if (v39 < 0)
                            return 0;
                        }
                        else
                        {
                          v39 = *v38;
                          *(_QWORD *)a2 = v38 + 1;
                        }
                        v70 = google::protobuf::io::CodedInputStream::PushLimit(a2, v39);
                        while (1)
                        {
                          v71 = *((_DWORD *)a2 + 10);
                          v72 = *((int *)a2 + 11);
                          v73 = *((_QWORD *)a2 + 1);
                          v74 = *((_DWORD *)a2 + 6);
                          if (v71 == 0x7FFFFFFF)
                            break;
                          v75 = *(char **)a2;
                          if ((int)(v71 - v74 + v72 + v73 - *(_QWORD *)a2) < 1)
                            break;
                          if ((unint64_t)v75 >= v73 || *v75 < 0)
                          {
                            v77 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                            if ((v78 & 1) == 0)
                              return 0;
                            v76 = v77;
                          }
                          else
                          {
                            v76 = *v75;
                            *(_QWORD *)a2 = v75 + 1;
                          }
                          v79 = *((_DWORD *)this + 4);
                          if (v79 == *((_DWORD *)this + 5))
                          {
                            google::protobuf::RepeatedField<double>::Reserve(v5, v79 + 1);
                            v79 = *v5;
                          }
                          v80 = *((_QWORD *)this + 3);
                          *((_DWORD *)this + 4) = v79 + 1;
                          *(_QWORD *)(v80 + 8 * v79 + 8) = v76;
                        }
                        *((_DWORD *)a2 + 10) = v70;
                        v81 = v73 + v72;
                        *((_QWORD *)a2 + 1) = v73 + v72;
                        v82 = *((_DWORD *)a2 + 12);
                        if (v82 >= v70)
                          v82 = v70;
                        v65 = __OFSUB__(v74, v82);
                        v83 = v74 - v82;
                        if ((v83 < 0) ^ v65 | (v83 == 0))
                          v83 = 0;
                        else
                          *((_QWORD *)a2 + 1) = v81 - v83;
                        *((_DWORD *)a2 + 11) = v83;
                        *((_BYTE *)a2 + 36) = 0;
                      }
                      break;
                    default:
                      goto LABEL_9;
                  }
                }
              }
              if (v10 >> 3 > 0x13)
                break;
              if (v14 == 1)
              {
                if (v10 != 8)
                  goto LABEL_9;
                v50 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v51 = 0;
                }
                else
                {
                  v51 = *v50;
                  if ((*v50 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v50 + 1;
                    goto LABEL_203;
                  }
                }
                v98 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51);
                v51 = v98;
                if (v98 < 0)
                  return 0;
LABEL_203:
                *((_DWORD *)this + 14) = v51;
              }
              else if (v14 == 2)
              {
                if (v10 != 16)
                  goto LABEL_9;
                v52 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v53 = 0;
                }
                else
                {
                  v53 = *v52;
                  if ((*v52 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v52 + 1;
                    goto LABEL_206;
                  }
                }
                v99 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v53);
                v53 = v99;
                if (v99 < 0)
                  return 0;
LABEL_206:
                *((_DWORD *)this + 15) = v53;
              }
              else
              {
                if (v14 != 10 || v10 != 80)
                  goto LABEL_9;
                v19 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v20 = 0;
                }
                else
                {
                  v20 = *v19;
                  if ((*v19 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v19 + 1;
                    goto LABEL_197;
                  }
                }
                v96 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
                v20 = v96;
                if (v96 < 0)
                  return 0;
LABEL_197:
                *((_DWORD *)this + 16) = v20;
              }
            }
            if (v10 >> 3 > 0x27)
              break;
            switch(v14)
            {
              case 0x14u:
                if (v10 != 160)
                  goto LABEL_9;
                v15 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v16 = 0;
                }
                else
                {
                  v16 = *v15;
                  if ((*v15 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v15 + 1;
                    goto LABEL_182;
                  }
                }
                v91 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
                v16 = v91;
                if (v91 < 0)
                  return 0;
LABEL_182:
                *((_DWORD *)this + 17) = v16;
                goto LABEL_2;
              case 0x15u:
                if (v10 != 168)
                  goto LABEL_9;
                v40 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v41 = 0;
                }
                else
                {
                  v41 = *v40;
                  if ((*v40 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v40 + 1;
                    goto LABEL_185;
                  }
                }
                v92 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
                v41 = v92;
                if (v92 < 0)
                  return 0;
LABEL_185:
                *((_DWORD *)this + 18) = v41;
                goto LABEL_2;
              case 0x16u:
                if (v10 != 176)
                  goto LABEL_9;
                v42 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v43 = 0;
                }
                else
                {
                  v43 = *v42;
                  if ((*v42 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v42 + 1;
                    goto LABEL_188;
                  }
                }
                v93 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
                v43 = v93;
                if (v93 < 0)
                  return 0;
LABEL_188:
                *((_DWORD *)this + 19) = v43;
                goto LABEL_2;
              case 0x1Fu:
                if (v10 != 248)
                  goto LABEL_9;
                v44 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v45 = 0;
                }
                else
                {
                  v45 = *v44;
                  if ((*v44 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v44 + 1;
                    goto LABEL_191;
                  }
                }
                v94 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
                v45 = v94;
                if (v94 < 0)
                  return 0;
LABEL_191:
                *((_DWORD *)this + 20) = v45;
                goto LABEL_2;
              case 0x20u:
                if ((_BYTE)v10)
                  goto LABEL_9;
                v46 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v47 = 0;
                }
                else
                {
                  v47 = *v46;
                  if ((*v46 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v46 + 1;
                    goto LABEL_215;
                  }
                }
                v102 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v47);
                v47 = v102;
                if (v102 < 0)
                  return 0;
LABEL_215:
                *((_DWORD *)this + 21) = v47;
                break;
              case 0x21u:
                if (v10 != 8)
                  goto LABEL_9;
                v48 = *(char **)a2;
                if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
                {
                  v49 = 0;
                }
                else
                {
                  v49 = *v48;
                  if ((*v48 & 0x80000000) == 0)
                  {
                    *(_QWORD *)a2 = v48 + 1;
                    goto LABEL_194;
                  }
                }
                v95 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v49);
                v49 = v95;
                if (v95 < 0)
                  return 0;
LABEL_194:
                *((_DWORD *)this + 22) = v49;
                goto LABEL_2;
              default:
                goto LABEL_9;
            }
          }
          if (v14 != 40)
            break;
          if (v10 != 64)
            goto LABEL_9;
          v58 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
          {
            v59 = 0;
          }
          else
          {
            v59 = *v58;
            if ((*v58 & 0x80000000) == 0)
            {
              *(_QWORD *)a2 = v58 + 1;
              goto LABEL_209;
            }
          }
          v100 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v59);
          v59 = v100;
          if (v100 < 0)
            return 0;
LABEL_209:
          *((_DWORD *)this + 23) = v59;
        }
        if (v14 == 41)
          break;
        if (v14 != 42 || v10 != 80)
          goto LABEL_9;
        v22 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
        {
          v23 = 0;
        }
        else
        {
          v23 = *v22;
          if ((*v22 & 0x80000000) == 0)
          {
            *(_QWORD *)a2 = v22 + 1;
            goto LABEL_200;
          }
        }
        v97 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23);
        v23 = v97;
        if (v97 < 0)
          return 0;
LABEL_200:
        *((_DWORD *)this + 25) = v23;
      }
      if (v10 != 72)
        break;
      v60 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        v61 = 0;
      }
      else
      {
        v61 = *v60;
        if ((*v60 & 0x80000000) == 0)
        {
          *(_QWORD *)a2 = v60 + 1;
          goto LABEL_212;
        }
      }
      v101 = google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v61);
      v61 = v101;
      if (v101 < 0)
        return 0;
LABEL_212:
      *((_DWORD *)this + 24) = v61;
    }
LABEL_9:
    if (!(_DWORD)v10 || (v10 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v10, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B86C68(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::WeightParams *CoreML::Specification::WeightParams::WeightParams(CoreML::Specification::WeightParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E955B078;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = 0;
  *((_BYTE *)this + 72) = 0;
  *((_DWORD *)this + 19) = 0;
  return this;
}

void sub_1D3B86CFC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::WeightParams::MergePartialFromCodedStream(CoreML::Specification::WeightParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  std::string **v5;
  std::string **v6;
  std::string **v7;
  unsigned int *v8;
  unsigned __int8 *v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  BOOL v15;
  unsigned int TagFallback;
  unsigned int v17;
  std::string *v18;
  char *v19;
  unint64_t Varint64Fallback;
  char *v21;
  unsigned int v22;
  CoreML::Specification::QuantizationParams *v23;
  char *v24;
  int VarintSizeAsIntFallback;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  BOOL v30;
  int v31;
  _BOOL8 result;
  int v33;
  int v34;
  int v35;
  int v36;
  signed int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int *v42;
  unsigned int v43;
  uint64_t v44;
  std::string **v45;
  std::string **v46;
  std::string **v47;
  signed int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;

  v5 = (std::string **)((char *)this + 56);
  v6 = (std::string **)((char *)this + 48);
  v7 = (std::string **)((char *)this + 40);
  v8 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            v9 = *(unsigned __int8 **)a2;
            v10 = *((_QWORD *)a2 + 1);
            if (*(_QWORD *)a2 >= v10)
            {
              LODWORD(v12) = 0;
LABEL_16:
              TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v12);
              v13 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
              if ((v13 & 0x100000000) == 0)
                goto LABEL_9;
              goto LABEL_17;
            }
            v11 = v9 + 1;
            v12 = *v9;
            if ((char)*v9 < 1)
            {
              if ((unint64_t)v11 < v10)
              {
                v14 = *v11;
                if ((v12 & ~v14) >= 0x80)
                {
                  *(_QWORD *)a2 = v9 + 2;
                  v13 = (v12 + (v14 << 7) - 128) | 0x100000000;
                  goto LABEL_17;
                }
              }
              goto LABEL_16;
            }
            *(_QWORD *)a2 = v11;
            v13 = v12 | 0x100000000;
            if ((v13 & 0x100000000) == 0)
              goto LABEL_9;
LABEL_17:
            v17 = v13 >> 3;
            if (v13 >> 3 <= 0x1E)
              break;
            if (v17 == 31)
            {
              if (v13 == 250)
              {
                v18 = *v5;
                if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                {
                  google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
                  v18 = *v5;
                }
                goto LABEL_42;
              }
              goto LABEL_9;
            }
            if (v17 == 40)
            {
              if (v13 != 66)
                goto LABEL_9;
              v23 = (CoreML::Specification::QuantizationParams *)*((_QWORD *)this + 8);
              if (!v23)
              {
                v23 = (CoreML::Specification::QuantizationParams *)operator new();
                CoreML::Specification::QuantizationParams::QuantizationParams(v23);
                *((_QWORD *)this + 8) = v23;
              }
              v24 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v24 < 0)
              {
                VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
                if (VarintSizeAsIntFallback < 0)
                  return 0;
              }
              else
              {
                VarintSizeAsIntFallback = *v24;
                *(_QWORD *)a2 = v24 + 1;
              }
              v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
              v29 = *((_DWORD *)a2 + 13);
              v30 = __OFSUB__(v29--, 1);
              *((_DWORD *)a2 + 13) = v29;
              if (v29 < 0 != v30)
                return 0;
              v31 = v27;
              result = CoreML::Specification::QuantizationParams::MergePartialFromCodedStream(v23, a2, v28);
              if (!result)
                return result;
              if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v31))
                return 0;
            }
            else
            {
              if (v17 != 50 || v13 != 144)
                goto LABEL_9;
              v19 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v19 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v26 & 1) == 0)
                  return 0;
              }
              else
              {
                Varint64Fallback = *v19;
                *(_QWORD *)a2 = v19 + 1;
              }
              *((_BYTE *)this + 72) = Varint64Fallback != 0;
            }
          }
          if (v17 == 1)
            break;
          if (v17 == 2)
          {
            if (v13 == 18)
            {
              v18 = *v7;
              if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
                v18 = *v7;
              }
              goto LABEL_42;
            }
LABEL_9:
            if ((_DWORD)v13)
              v15 = (v13 & 7) == 4;
            else
              v15 = 1;
            if (v15)
              return 1;
            if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v13, a3) & 1) == 0)return 0;
          }
          else
          {
            if (v17 != 30 || v13 != 242)
              goto LABEL_9;
            v18 = *v6;
            if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
            {
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              v18 = *v6;
            }
LABEL_42:
            if (!google::protobuf::internal::WireFormatLite::ReadBytes((char **)a2, v18))
              return 0;
          }
        }
        if (v13 != 13)
          break;
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v8))return 0;
      }
      if (v13 != 10)
        goto LABEL_9;
      v21 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
      {
        v22 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if ((v22 & 0x80000000) != 0)
          return 0;
      }
      else
      {
        v22 = *v21;
        *(_QWORD *)a2 = v21 + 1;
      }
      if ((v22 & 3) != 0)
        return 0;
      v33 = *((_DWORD *)a2 + 12);
      v34 = v33 == 0x7FFFFFFF
          ? -1
          : v33 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v35 = *((_DWORD *)a2 + 10);
      v36 = v35 == 0x7FFFFFFF
          ? -1
          : v35 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v37 = *v8;
      v38 = v22 >> 2;
      v39 = v36 >= v34 ? v34 : v36;
      v40 = v34 == -1 ? v36 : v39;
      if (v40 >= (uint64_t)v22)
        break;
      if (v22 >= 4)
      {
        if (v38 <= 1)
          v41 = 1;
        else
          v41 = v22 >> 2;
        do
        {
          v52 = 0;
          v42 = *(unsigned int **)a2;
          if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v52);
            if (!result)
              return result;
            v43 = v52;
            v37 = *v8;
          }
          else
          {
            v43 = *v42;
            *(_QWORD *)a2 = v42 + 1;
          }
          if (v37 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v8, v37 + 1);
            v37 = *v8;
          }
          v44 = *((_QWORD *)this + 3) + 4 * v37;
          *((_DWORD *)this + 4) = v37 + 1;
          *(_DWORD *)(v44 + 8) = v43;
          ++v37;
          --v41;
        }
        while (v41);
      }
    }
    v45 = v7;
    v46 = v6;
    v47 = v5;
    v48 = v37 + v38;
    if (v22 > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v8, v37 + v38);
      v49 = *((_QWORD *)this + 3);
      v50 = 4 * v48 - 4 * *((int *)this + 4);
      if (v50 >= 1)
        bzero((void *)(v49 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
    }
    else
    {
      v49 = *((_QWORD *)this + 3);
    }
    *v8 = v48;
    v51 = v49 + 8;
    if (!v49)
      v51 = 0;
    v5 = v47;
    v6 = v46;
    v7 = v45;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw(a2, (char *)(v51 + 4 * v37), v22));
  if ((int)*v8 >= 1)
  {
    result = 0;
    *v8 = v37;
    return result;
  }
  return 0;
}

void sub_1D3B87250(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(unsigned int a1, google::protobuf::io::CodedInputStream *a2, uint64_t a3)
{
  char *v6;
  unint64_t v7;
  unint64_t Varint64Fallback;
  char v9;
  signed int v11;
  int v12;
  uint64_t v13;
  signed int v14;
  int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char v21;
  uint64_t v22;

  v6 = *(char **)a2;
  if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v6 < 0)
  {
    Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
    if ((v9 & 1) == 0)
      return 0;
    v7 = Varint64Fallback;
  }
  else
  {
    v7 = *v6;
    *(_QWORD *)a2 = v6 + 1;
  }
  v11 = *(_DWORD *)a3;
  v12 = *(_DWORD *)(a3 + 4);
  if (*(_DWORD *)a3 == v12)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a3, v11 + 1);
    v11 = *(_DWORD *)a3;
    v12 = *(_DWORD *)(a3 + 4);
  }
  v13 = *(_QWORD *)(a3 + 8);
  v14 = v11 + 1;
  *(_DWORD *)a3 = v11 + 1;
  *(_QWORD *)(v13 + 8 * v11 + 8) = v7;
  if (v12 - (v11 + 1) >= 1)
  {
    v15 = v12 - v11;
    do
    {
      if (a1 > 0x7F)
      {
        v19 = *(char **)a2;
        v16 = *((_QWORD *)a2 + 1);
        if ((int)(v16 - *(_QWORD *)a2) < 2
          || (a1 & 0x7F | 0x80) != *v19
          || v19[1] != (a1 >> 7))
        {
          return 1;
        }
        v18 = v19 + 2;
      }
      else
      {
        v17 = *(char **)a2;
        v16 = *((_QWORD *)a2 + 1);
        if (*(_QWORD *)a2 >= v16 || *v17 != a1)
          return 1;
        v18 = v17 + 1;
      }
      *(_QWORD *)a2 = v18;
      if ((unint64_t)v18 >= v16 || *v18 < 0)
      {
        v20 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v21 & 1) == 0)
          return 0;
        v13 = *(_QWORD *)(a3 + 8);
        v14 = *(_DWORD *)a3;
      }
      else
      {
        v20 = *v18;
        *(_QWORD *)a2 = v18 + 1;
      }
      v22 = v13 + 8 * v14++;
      *(_DWORD *)a3 = v14;
      *(_QWORD *)(v22 + 8) = v20;
      --v15;
    }
    while (v15 > 1);
  }
  return 1;
}

CoreML::Specification::QuantizationParams *CoreML::Specification::QuantizationParams::QuantizationParams(CoreML::Specification::QuantizationParams *this)
{
  *(_QWORD *)this = &off_1E955E848;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::QuantizationParams *)&CoreML::Specification::_QuantizationParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8742C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::QuantizationParams::MergePartialFromCodedStream(CoreML::Specification::QuantizationParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  char *v13;
  CoreML::Specification::LookUpTableQuantizationParams *v14;
  CoreML::Specification::LinearQuantizationParams *v15;
  char *v16;
  int VarintSizeAsIntFallback;
  char *v18;
  int v19;
  char v20;
  int v21;
  unsigned int v22;
  int v23;
  BOOL v24;
  int v25;
  _BOOL8 result;
  int v27;
  unsigned int v28;
  int v29;
  unsigned int TagFallback;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = *(unsigned __int8 **)a2;
        v6 = *((_QWORD *)a2 + 1);
        if (*(_QWORD *)a2 >= v6)
        {
          LODWORD(v8) = 0;
LABEL_44:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
          v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
          if ((v9 & 0x100000000) == 0)
            goto LABEL_45;
          goto LABEL_8;
        }
        v7 = v5 + 1;
        v8 = *v5;
        if ((char)*v5 < 1)
        {
          if ((unint64_t)v7 < v6)
          {
            v10 = *v7;
            if ((v8 & ~v10) >= 0x80)
            {
              *(_QWORD *)a2 = v5 + 2;
              v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
              goto LABEL_8;
            }
          }
          goto LABEL_44;
        }
        *(_QWORD *)a2 = v7;
        v9 = v8 | 0x100000000;
        if ((v9 & 0x100000000) == 0)
          goto LABEL_45;
LABEL_8:
        v11 = v9 >> 3;
        if (v9 >> 3 == 102)
        {
          if (v9 != 50)
            goto LABEL_45;
          if (*((_DWORD *)this + 9) == 102)
          {
            v14 = (CoreML::Specification::LookUpTableQuantizationParams *)*((_QWORD *)this + 3);
          }
          else
          {
            CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
            *((_DWORD *)this + 9) = 102;
            v14 = (CoreML::Specification::LookUpTableQuantizationParams *)operator new();
            CoreML::Specification::LookUpTableQuantizationParams::LookUpTableQuantizationParams(v14);
            *((_QWORD *)this + 3) = v14;
          }
          v16 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v16 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
            if (VarintSizeAsIntFallback < 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v16;
            *(_QWORD *)a2 = v16 + 1;
          }
          v21 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
          v23 = *((_DWORD *)a2 + 13);
          v24 = __OFSUB__(v23--, 1);
          *((_DWORD *)a2 + 13) = v23;
          if (v23 < 0 != v24)
            return 0;
          v25 = v21;
          result = CoreML::Specification::LookUpTableQuantizationParams::MergePartialFromCodedStream(v14, (char **)a2, v22);
          if (!result)
            return result;
          goto LABEL_41;
        }
        if (v11 != 101)
          break;
        if (v9 != 42)
          goto LABEL_45;
        if (*((_DWORD *)this + 9) == 101)
        {
          v15 = (CoreML::Specification::LinearQuantizationParams *)*((_QWORD *)this + 3);
        }
        else
        {
          CoreML::Specification::QuantizationParams::clear_QuantizationType((uint64_t)this);
          *((_DWORD *)this + 9) = 101;
          v15 = (CoreML::Specification::LinearQuantizationParams *)operator new();
          CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(v15);
          *((_QWORD *)this + 3) = v15;
        }
        v18 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
        {
          v19 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (v19 < 0)
            return 0;
        }
        else
        {
          v19 = *v18;
          *(_QWORD *)a2 = v18 + 1;
        }
        v27 = google::protobuf::io::CodedInputStream::PushLimit(a2, v19);
        v29 = *((_DWORD *)a2 + 13);
        v24 = __OFSUB__(v29--, 1);
        *((_DWORD *)a2 + 13) = v29;
        if (v29 < 0 != v24)
          return 0;
        v25 = v27;
        result = CoreML::Specification::LinearQuantizationParams::MergePartialFromCodedStream(v15, (char **)a2, v28);
        if (!result)
          return result;
LABEL_41:
        if (!google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v25))
          return 0;
      }
      if (v11 != 1 || v9 != 8)
        break;
      v13 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v13 < 0)
      {
        *((_QWORD *)this + 2) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v20 & 1) == 0)
          return 0;
      }
      else
      {
        *((_QWORD *)this + 2) = *v13;
        *(_QWORD *)a2 = v13 + 1;
      }
    }
LABEL_45:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B87708(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403FC4B5CDLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::QuantizationParams::clear_QuantizationType(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 36);
  if (v2 == 102 || v2 == 101)
  {
    this = *(_QWORD *)(this + 24);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

CoreML::Specification::LinearQuantizationParams *CoreML::Specification::LinearQuantizationParams::LinearQuantizationParams(CoreML::Specification::LinearQuantizationParams *this)
{
  *(_QWORD *)this = &off_1E9561AC0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::LinearQuantizationParams *)&CoreML::Specification::_LinearQuantizationParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 15) = 0;
  return this;
}

void sub_1D3B877E4(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *(_QWORD **)(v2 + 48);
  if (v4 && !*v4)
    operator delete(v4);
  v5 = *(_QWORD **)(v2 + 24);
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LinearQuantizationParams::MergePartialFromCodedStream(CoreML::Specification::LinearQuantizationParams *this, char **a2, unsigned int a3)
{
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int TagFallback;
  char *v11;
  unsigned int v12;
  char *v13;
  unsigned int VarintSizeAsIntFallback;
  BOOL v15;
  int v16;
  unsigned int **v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  signed int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  unsigned int *v28;
  unsigned int v29;
  uint64_t v30;
  _BOOL8 result;
  signed int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  signed int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  unsigned int *v43;
  unsigned int v44;
  uint64_t v45;
  signed int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;

  v5 = (unsigned int *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            v7 = *a2;
            if (*a2 < a2[1])
              break;
            LODWORD(v8) = 0;
LABEL_7:
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v8);
            v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
            if ((v9 & 0x100000000) != 0)
              goto LABEL_8;
LABEL_20:
            if ((_DWORD)v9)
              v15 = (v9 & 7) == 4;
            else
              v15 = 1;
            if (v15)
              return 1;
            if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)return 0;
          }
          v8 = *v7;
          if (*v7 < 1)
            goto LABEL_7;
          *a2 = v7 + 1;
          v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0)
            goto LABEL_20;
LABEL_8:
          if (v9 >> 3 != 2)
            break;
          if (v9 == 21)
          {
            v16 = 18;
            v17 = (unsigned int **)a2;
            v18 = (uint64_t)v5;
            goto LABEL_28;
          }
          if (v9 != 18)
            goto LABEL_20;
          v13 = *a2;
          if (*a2 >= a2[1] || *v13 < 0)
          {
            VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
            if ((VarintSizeAsIntFallback & 0x80000000) != 0)
              return 0;
          }
          else
          {
            VarintSizeAsIntFallback = *v13;
            *a2 = v13 + 1;
          }
          if ((VarintSizeAsIntFallback & 3) != 0)
            return 0;
          v34 = *((_DWORD *)a2 + 12);
          if (v34 == 0x7FFFFFFF)
            v35 = -1;
          else
            v35 = v34 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
          v36 = *((_DWORD *)a2 + 10);
          if (v36 == 0x7FFFFFFF)
            v37 = -1;
          else
            v37 = v36 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
          v38 = *v5;
          v39 = VarintSizeAsIntFallback >> 2;
          if (v37 >= v35)
            v40 = v35;
          else
            v40 = v37;
          if (v35 == -1)
            v41 = v37;
          else
            v41 = v40;
          if (v41 >= (uint64_t)VarintSizeAsIntFallback)
          {
            v46 = v38 + v39;
            if (VarintSizeAsIntFallback > 3)
            {
              google::protobuf::RepeatedField<int>::Reserve(v5, v38 + v39);
              v47 = *((_QWORD *)this + 6);
              v50 = 4 * v46 - 4 * *((int *)this + 10);
              if (v50 >= 1)
                bzero((void *)(v47 + 8 + 4 * *((int *)this + 10)), 4 * (((unint64_t)v50 >> 2) - ((unint64_t)v50 > 3)) + 4);
            }
            else
            {
              v47 = *((_QWORD *)this + 6);
            }
            *v5 = v46;
            v51 = v47 + 8;
            if (!v47)
              v51 = 0;
            if (!google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v51 + 4 * v38), VarintSizeAsIntFallback))
            {
              if ((int)*v5 >= 1)
              {
                result = 0;
                *v5 = v38;
                return result;
              }
              return 0;
            }
          }
          else if (VarintSizeAsIntFallback >= 4)
          {
            if (v39 <= 1)
              v42 = 1;
            else
              v42 = VarintSizeAsIntFallback >> 2;
            do
            {
              v53 = 0;
              v43 = (unsigned int *)*a2;
              if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
              {
                result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v53);
                if (!result)
                  return result;
                v44 = v53;
                v38 = *v5;
              }
              else
              {
                v44 = *v43;
                *a2 = (char *)(v43 + 1);
              }
              if (v38 == *((_DWORD *)this + 11))
              {
                google::protobuf::RepeatedField<int>::Reserve(v5, v38 + 1);
                v38 = *v5;
              }
              v45 = *((_QWORD *)this + 6) + 4 * v38;
              *((_DWORD *)this + 10) = v38 + 1;
              *(_DWORD *)(v45 + 8) = v44;
              ++v38;
              --v42;
            }
            while (v42);
          }
        }
        if (v9 >> 3 != 1)
          goto LABEL_20;
        if (v9 != 13)
          break;
        v16 = 10;
        v17 = (unsigned int **)a2;
        v18 = (uint64_t)v6;
LABEL_28:
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(v16, v17, v18))return 0;
      }
      if (v9 != 10)
        goto LABEL_20;
      v11 = *a2;
      if (*a2 >= a2[1] || *v11 < 0)
      {
        v12 = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((v12 & 0x80000000) != 0)
          return 0;
      }
      else
      {
        v12 = *v11;
        *a2 = v11 + 1;
      }
      if ((v12 & 3) != 0)
        return 0;
      v19 = *((_DWORD *)a2 + 12);
      v20 = v19 == 0x7FFFFFFF
          ? -1
          : v19 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v21 = *((_DWORD *)a2 + 10);
      v22 = v21 == 0x7FFFFFFF
          ? -1
          : v21 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v23 = *v6;
      v24 = v12 >> 2;
      v25 = v22 >= v20 ? v20 : v22;
      v26 = v20 == -1 ? v22 : v25;
      if (v26 >= (uint64_t)v12)
        break;
      if (v12 >= 4)
      {
        if (v24 <= 1)
          v27 = 1;
        else
          v27 = v12 >> 2;
        do
        {
          v52 = 0;
          v28 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v52);
            if (!result)
              return result;
            v29 = v52;
            v23 = *v6;
          }
          else
          {
            v29 = *v28;
            *a2 = (char *)(v28 + 1);
          }
          if (v23 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v6, v23 + 1);
            v23 = *v6;
          }
          v30 = *((_QWORD *)this + 3) + 4 * v23;
          *((_DWORD *)this + 4) = v23 + 1;
          *(_DWORD *)(v30 + 8) = v29;
          ++v23;
          --v27;
        }
        while (v27);
      }
    }
    v32 = v23 + v24;
    if (v12 > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v6, v23 + v24);
      v33 = *((_QWORD *)this + 3);
      v48 = 4 * v32 - 4 * *((int *)this + 4);
      if (v48 >= 1)
        bzero((void *)(v33 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v48 >> 2) - ((unint64_t)v48 > 3)) + 4);
    }
    else
    {
      v33 = *((_QWORD *)this + 3);
    }
    *v6 = v32;
    v49 = v33 + 8;
    if (!v33)
      v49 = 0;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v49 + 4 * v23), v12));
  if ((int)*v6 >= 1)
  {
    result = 0;
    *v6 = v23;
    return result;
  }
  return 0;
}

CoreML::Specification::LookUpTableQuantizationParams *CoreML::Specification::LookUpTableQuantizationParams::LookUpTableQuantizationParams(CoreML::Specification::LookUpTableQuantizationParams *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E95634E0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::LookUpTableQuantizationParams *)&CoreML::Specification::_LookUpTableQuantizationParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B87D9C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LookUpTableQuantizationParams::MergePartialFromCodedStream(CoreML::Specification::LookUpTableQuantizationParams *this, char **a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  unsigned int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  int v15;
  int v16;
  signed int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int *v22;
  unsigned int v23;
  uint64_t v24;
  _BOOL8 result;
  signed int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v6 = *a2;
          if (*a2 < a2[1])
            break;
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) != 0)
            goto LABEL_8;
LABEL_14:
          if ((_DWORD)v8)
            v12 = (v8 & 7) == 4;
          else
            v12 = 1;
          if (v12)
            return 1;
          if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_14;
LABEL_8:
        if ((v8 & 0xFFFFFFF8) != 8)
          goto LABEL_14;
        if (v8 != 13)
          break;
        if (!google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<float,(google::protobuf::internal::WireFormatLite::FieldType)2>(10, (unsigned int **)a2, (uint64_t)v5))return 0;
      }
      if (v8 != 10)
        goto LABEL_14;
      v10 = *a2;
      if (*a2 >= a2[1] || *v10 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback((google::protobuf::io::CodedInputStream *)a2);
        if ((VarintSizeAsIntFallback & 0x80000000) != 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v10;
        *a2 = v10 + 1;
      }
      if ((VarintSizeAsIntFallback & 3) != 0)
        return 0;
      v13 = *((_DWORD *)a2 + 12);
      v14 = v13 == 0x7FFFFFFF
          ? -1
          : v13 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v15 = *((_DWORD *)a2 + 10);
      v16 = v15 == 0x7FFFFFFF
          ? -1
          : v15 - *((_DWORD *)a2 + 6) + *((_DWORD *)a2 + 11) + *((_DWORD *)a2 + 2) - *(_DWORD *)a2;
      v17 = *v5;
      v18 = VarintSizeAsIntFallback >> 2;
      v19 = v16 >= v14 ? v14 : v16;
      v20 = v14 == -1 ? v16 : v19;
      if (v20 >= (uint64_t)VarintSizeAsIntFallback)
        break;
      if (VarintSizeAsIntFallback >= 4)
      {
        if (v18 <= 1)
          v21 = 1;
        else
          v21 = VarintSizeAsIntFallback >> 2;
        do
        {
          v30 = 0;
          v22 = (unsigned int *)*a2;
          if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
          {
            result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v30);
            if (!result)
              return result;
            v23 = v30;
            v17 = *v5;
          }
          else
          {
            v23 = *v22;
            *a2 = (char *)(v22 + 1);
          }
          if (v17 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<int>::Reserve(v5, v17 + 1);
            v17 = *v5;
          }
          v24 = *((_QWORD *)this + 3) + 4 * v17;
          *((_DWORD *)this + 4) = v17 + 1;
          *(_DWORD *)(v24 + 8) = v23;
          ++v17;
          --v21;
        }
        while (v21);
      }
    }
    v26 = v17 + v18;
    if (VarintSizeAsIntFallback > 3)
    {
      google::protobuf::RepeatedField<int>::Reserve(v5, v17 + v18);
      v27 = *((_QWORD *)this + 3);
      v28 = 4 * v26 - 4 * *((int *)this + 4);
      if (v28 >= 1)
        bzero((void *)(v27 + 8 + 4 * *((int *)this + 4)), 4 * (((unint64_t)v28 >> 2) - ((unint64_t)v28 > 3)) + 4);
    }
    else
    {
      v27 = *((_QWORD *)this + 3);
    }
    *v5 = v26;
    v29 = v27 + 8;
    if (!v27)
      v29 = 0;
  }
  while (google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)a2, (char *)(v29 + 4 * v17), VarintSizeAsIntFallback));
  if ((int)*v5 >= 1)
  {
    result = 0;
    *v5 = v17;
    return result;
  }
  return 0;
}

CoreML::Specification::NeuralNetwork *CoreML::Specification::NeuralNetwork::NeuralNetwork(CoreML::Specification::NeuralNetwork *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_QWORD *)this = &off_1E955B408;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 7) = 0;
  if (this != (CoreML::Specification::NeuralNetwork *)&CoreML::Specification::_NeuralNetwork_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  return this;
}

void sub_1D3B8812C(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

google::protobuf::Arena **google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[](uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  google::protobuf::Arena *v12;
  std::string *Aligned;
  std::string::__raw *v14;
  __int128 v15;
  google::protobuf::Arena **v16;
  google::protobuf::Arena *v17;
  google::protobuf::Arena *v18;
  std::string *v19;
  uint64_t v21;
  char v22;
  unint64_t v23;
  std::string __p;
  std::string::size_type v25;
  uint64_t v26[4];
  _QWORD v27[4];

  v4 = *(_QWORD **)(a1 + 16);
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  v25 = 0;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v27, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
  v6 = v27[0];
  if (v27[0])
    goto LABEL_18;
  v7 = v4[1];
  v8 = *v4 + 1;
  v9 = ((3 * v7) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v9 <= v8)
  {
    if (v7 <= 0x800000000000000)
    {
      v21 = 2 * v7;
LABEL_37:
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::Resize((uint64_t)v4, v21, v5);
      google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(v26, (uint64_t)v4, (unsigned __int8 *)&__p, 0);
      v11 = v26[3];
      goto LABEL_11;
    }
  }
  else if (v7 >= 9 && (12 * v7) >> 6 >= v8)
  {
    v22 = 0;
    v23 = ((5 * v8) >> 2) + 1;
    do
      ++v22;
    while (v23 << v22 < v9);
    v21 = v7 >> v22 <= 8 ? 8 : v7 >> v22;
    if (v21 != v7)
      goto LABEL_37;
  }
  v11 = v27[3];
LABEL_11:
  v12 = (google::protobuf::Arena *)v4[5];
  if (v12)
    Aligned = (std::string *)google::protobuf::Arena::AllocateAligned(v12, MEMORY[0x1E0DE4EE8], 40);
  else
    Aligned = (std::string *)operator new(0x28uLL);
  v14 = (std::string::__raw *)Aligned;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(Aligned, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    Aligned->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
    *(_OWORD *)&Aligned->__r_.__value_.__l.__data_ = v15;
  }
  v14[1].__words[0] = v25;
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::InsertUnique(v26, (uint64_t)v4, v11, v14);
  ++*v4;
  v6 = v26[0];
LABEL_18:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v16 = *(google::protobuf::Arena ***)(v6 + 24);
  if (!v16)
  {
    if (*(_QWORD *)a1)
    {
      v16 = google::protobuf::Arena::AllocateAligned(*(google::protobuf::Arena **)a1, MEMORY[0x1E0DE4EE8], 56);
      v17 = *(google::protobuf::Arena **)a1;
      v16[1] = 0;
      v16[2] = 0;
      *v16 = 0;
      google::protobuf::Arena::OwnDestructor<std::string>((google::protobuf::Arena **)v17, (google::protobuf::Arena *)v16);
      v18 = *(google::protobuf::Arena **)a1;
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(v16 + 3));
      google::protobuf::Arena::OwnDestructor<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>((google::protobuf::Arena **)v18, (google::protobuf::Arena *)(v16 + 3));
      std::string::operator=((std::string *)v16, (const std::string *)a2);
    }
    else
    {
      v19 = (std::string *)operator new();
      v16 = (google::protobuf::Arena **)v19;
      if (*(char *)(a2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v19, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
      }
      else
      {
        *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
        v19->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
      }
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(v16 + 3));
    }
    *(_QWORD *)(v6 + 24) = v16;
  }
  return v16 + 3;
}

void sub_1D3B883C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  uint64_t v14;

  MEMORY[0x1D8251A40](v14, 0x10B2C4015637A22);
  _Unwind_Resume(a1);
}

double google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(_QWORD *a1, unsigned __int8 *a2)
{
  double result;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::FindHelper(&v6, a1[2], a2, 0);
  result = *(double *)&v6;
  if ((_QWORD)v6)
  {
    v4 = v6;
    v5 = v7;
    *(_QWORD *)&result = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase((uint64_t)&v6, a1, (uint64_t *)&v4).n128_u64[0];
  }
  return result;
}

uint64_t google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::ReadBeyondKeyValuePair(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t Aligned;
  google::protobuf::Arena *v8;
  google::protobuf::Arena **v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __n128 v19;

  v4 = google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(**(google::protobuf::Arena ***)a1);
  v5 = *(_QWORD *)(a1 + 48);
  if (v5 != v4)
  {
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    *(_QWORD *)(a1 + 48) = v4;
  }
  v6 = *(_QWORD *)(a1 + 40);
  *(_DWORD *)(v4 + 40) |= 2u;
  Aligned = *(_QWORD *)(v4 + 24);
  if (!Aligned)
  {
    v8 = *(google::protobuf::Arena **)(v4 + 32);
    if (v8)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
      v9 = google::protobuf::Arena::AllocateAligned(v8, 0, 24);
      *v9 = (google::protobuf::Arena *)Aligned;
      v9[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
      v10 = (unint64_t *)((char *)v8 + 32);
      do
        v11 = __ldxr(v10);
      while (__stxr((unint64_t)v9, v10));
      v9[2] = (google::protobuf::Arena *)v11;
    }
    else
    {
      Aligned = operator new();
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
    }
    *(_QWORD *)(v4 + 24) = Aligned;
  }
  if (v6 != Aligned)
  {
    v12 = *(_QWORD *)(Aligned + 16);
    *(_QWORD *)(Aligned + 16) = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 + 16) = v12;
    v13 = *(_DWORD *)(Aligned + 28);
    *(_DWORD *)(Aligned + 28) = *(_DWORD *)(v6 + 28);
    *(_DWORD *)(v6 + 28) = v13;
    v14 = *(_DWORD *)(Aligned + 24);
    *(_DWORD *)(Aligned + 24) = *(_DWORD *)(v6 + 24);
    *(_DWORD *)(v6 + 24) = v14;
  }
  google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(*(_QWORD **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
  v15 = *(_QWORD *)(a1 + 48);
  *(_DWORD *)(v15 + 40) |= 1u;
  v16 = *(_QWORD *)(v15 + 16);
  if ((uint64_t *)v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((google::protobuf::Arena **)(v15 + 16), *(google::protobuf::Arena ***)(v15 + 32), (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
    v16 = *(_QWORD *)(v15 + 16);
  }
  if (*(char *)(v16 + 23) < 0)
    operator delete(*(void **)v16);
  v17 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a1 + 32);
  *(_OWORD *)v16 = v17;
  *(_BYTE *)(a1 + 39) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  v18 = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 48) + 88))(*(_QWORD *)(a1 + 48), a2);
  if ((_DWORD)v18)
    v19.n128_f64[0] = google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry(a1);
  if ((*(uint64_t (**)(_QWORD, __n128))(**(_QWORD **)(a1 + 48) + 40))(*(_QWORD *)(a1 + 48), v19))
    *(_QWORD *)(a1 + 48) = 0;
  return v18;
}

void sub_1D3B88654(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::NewEntry(google::protobuf::Arena *a1)
{
  uint64_t result;

  if (a1)
  else
    result = operator new();
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = a1;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E95674A8;
  return result;
}

double google::protobuf::internal::MapEntryImpl<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::MessageLite,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>::Parser<google::protobuf::internal::MapFieldLite<google::protobuf::internal::MapEntryLite<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue,(google::protobuf::internal::WireFormatLite::FieldType)9,(google::protobuf::internal::WireFormatLite::FieldType)11,0>,google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>>::UseKeyAndValueFromEntry(uint64_t a1)
{
  const std::string *v2;
  google::protobuf::Arena **v3;
  double result;
  uint64_t v5;
  uint64_t Aligned;
  google::protobuf::Arena *v7;
  google::protobuf::Arena **v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  int v12;

  v2 = (const std::string *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 48) + 136))(*(_QWORD *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  v3 = google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::operator[](*(_QWORD *)(a1 + 8), a1 + 16);
  *(_QWORD *)(a1 + 40) = v3;
  v5 = *(_QWORD *)(a1 + 48);
  *(_DWORD *)(v5 + 40) |= 2u;
  Aligned = *(_QWORD *)(v5 + 24);
  if (!Aligned)
  {
    v7 = *(google::protobuf::Arena **)(v5 + 32);
    if (v7)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
      v8 = google::protobuf::Arena::AllocateAligned(v7, 0, 24);
      *v8 = (google::protobuf::Arena *)Aligned;
      v8[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
      v9 = (unint64_t *)((char *)v7 + 32);
      do
        v10 = __ldxr(v9);
      while (__stxr((unint64_t)v8, v9));
      v8[2] = (google::protobuf::Arena *)v10;
    }
    else
    {
      Aligned = operator new();
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)Aligned);
    }
    *(_QWORD *)(v5 + 24) = Aligned;
    v3 = *(google::protobuf::Arena ***)(a1 + 40);
  }
  if ((google::protobuf::Arena **)Aligned != v3)
  {
    result = *((double *)v3 + 2);
    v3[2] = *(google::protobuf::Arena **)(Aligned + 16);
    *(double *)(Aligned + 16) = result;
    v11 = *((_DWORD *)v3 + 7);
    *((_DWORD *)v3 + 7) = *(_DWORD *)(Aligned + 28);
    *(_DWORD *)(Aligned + 28) = v11;
    v12 = *((_DWORD *)v3 + 6);
    *((_DWORD *)v3 + 6) = *(_DWORD *)(Aligned + 24);
    *(_DWORD *)(Aligned + 24) = v12;
  }
  return result;
}

void sub_1D3B8880C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A3C40EED1C14FLL);
  _Unwind_Resume(a1);
}

__n128 google::protobuf::Map<std::string,CoreML::Specification::CustomLayerParams_CustomLayerParamValue>::erase(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  _BOOL4 v17;
  unint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __n128 result;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  unint64_t v28;
  _QWORD *v29;

  v6 = *a3;
  if (!*a2)
  {
    v7 = *(_QWORD *)(v6 + 24);
    if (v7)
    {
      CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue((CoreML::Specification::CustomLayerParams_CustomLayerParamValue *)(v7 + 24));
      if (*(char *)(v7 + 23) < 0)
        operator delete(*(void **)v7);
      MEMORY[0x1D8251A40](v7, 0x10B2C4015637A22);
      v6 = *a3;
    }
  }
  v27 = *(__n128 *)a3;
  v28 = a3[2];
  v8 = *(_QWORD *)(v6 + 32);
  if (v8)
    goto LABEL_7;
  v29 = 0;
  if (google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)a3, (uint64_t *)&v29))
  {
    v9 = a3[2] + 1;
  }
  else
  {
    v10 = a3[2];
    v11 = *(_QWORD *)(*(_QWORD *)(a3[1] + 32) + 8 * v10);
    v12 = (uint64_t)v29;
    v13 = (_QWORD *)v29[1];
    if (v13)
    {
      do
      {
        v14 = v13;
        v13 = (_QWORD *)*v13;
      }
      while (v13);
    }
    else
    {
      do
      {
        v14 = *(_QWORD **)(v12 + 16);
        v15 = *v14 == v12;
        v12 = (uint64_t)v14;
      }
      while (!v15);
    }
    v29 = v14;
    if (v14 != (_QWORD *)(v11 + 8))
    {
      v8 = v14[4];
LABEL_7:
      *a3 = v8;
      goto LABEL_19;
    }
    v9 = v10 + 2;
  }
  google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::SearchFrom(a3, v9);
LABEL_19:
  v16 = (_QWORD *)a2[2];
  v29 = 0;
  v17 = google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::iterator_base<google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::KeyValuePair>::revalidate_if_necessary((uint64_t)&v27, (uint64_t *)&v29);
  v18 = v28;
  v19 = (void **)v27.n128_u64[0];
  v20 = v16[4];
  v21 = *(_QWORD *)(v20 + 8 * v28);
  if (v17)
  {
    v22 = google::protobuf::Map<std::string,std::string>::InnerMap::EraseFromLinkedList(v27.n128_i64[0], *(_QWORD *)(v20 + 8 * v28));
LABEL_25:
    *(_QWORD *)(v16[4] + 8 * v18) = v22;
    goto LABEL_26;
  }
  v23 = (uint64_t *)std::__tree<std::string *,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::InnerMap::KeyCompare,google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Function>::MapAllocator<std::string *>>::find<std::string *>(v21, (_QWORD *)v29[4]);
  if ((uint64_t *)(v21 + 8) != v23)
    std::__tree<std::string *,google::protobuf::Map<std::string,std::string>::InnerMap::KeyCompare,google::protobuf::Map<std::string,std::string>::MapAllocator<std::string *>>::erase(v21, v23);
  if (!*(_QWORD *)(v21 + 24))
  {
    google::protobuf::Map<std::string,CoreML::Specification::MILSpec::Value>::InnerMap::DestroyTree(v16[5], (_QWORD **)v21);
    v22 = 0;
    *(_QWORD *)(v16[4] + ((8 * v18) | 8)) = 0;
    v18 &= ~1uLL;
    goto LABEL_25;
  }
LABEL_26:
  google::protobuf::Map<std::string,std::string>::InnerMap::DestroyNode((uint64_t)v16, v19);
  --*v16;
  if (v18 == v16[3])
  {
    v25 = v16[1];
    if (v18 < v25)
    {
      v26 = v16[4];
      do
      {
        if (*(_QWORD *)(v26 + 8 * v18))
          break;
        v16[3] = ++v18;
      }
      while (v25 != v18);
    }
  }
  result = *(__n128 *)a3;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_QWORD *)(a1 + 16) = a3[2];
  return result;
}

void CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue(CoreML::Specification::CustomLayerParams_CustomLayerParamValue *this)
{
  *(_QWORD *)this = &off_1E9564748;
  if (*((_DWORD *)this + 7))
    CoreML::Specification::CustomLayerParams_CustomLayerParamValue::clear_value((uint64_t)this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  CoreML::Specification::CustomLayerParams_CustomLayerParamValue::~CustomLayerParams_CustomLayerParamValue(this);
  JUMPOUT(0x1D8251A40);
}

google::protobuf::Arena **google::protobuf::Arena::OwnDestructor<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>(google::protobuf::Arena **result, google::protobuf::Arena *a2)
{
  google::protobuf::Arena **v3;
  unint64_t *v4;
  unint64_t v5;

  if (a2)
  {
    v3 = result;
    result = google::protobuf::Arena::AllocateAligned((google::protobuf::Arena *)result, 0, 24);
    *result = a2;
    result[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::CustomLayerParams_CustomLayerParamValue>;
    v4 = (unint64_t *)(v3 + 4);
    do
      v5 = __ldxr(v4);
    while (__stxr((unint64_t)result, v4));
    result[2] = (google::protobuf::Arena *)v5;
  }
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::WeightParams>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::ActivationParams *google::protobuf::internal::RepeatedPtrFieldBase::Add<google::protobuf::RepeatedPtrField<CoreML::Specification::ActivationParams>::TypeHandler>(uint64_t a1)
{
  int *v2;
  int v3;
  int v4;
  CoreML::Specification::ActivationParams *Aligned;
  google::protobuf::Arena *v6;
  google::protobuf::Arena **v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(int **)(a1 + 16);
  if (!v2)
  {
    v3 = *(_DWORD *)(a1 + 8);
    v4 = *(_DWORD *)(a1 + 12);
LABEL_6:
    if (v3 <= v4)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v4 - v3 + 1);
      v2 = *(int **)(a1 + 16);
    }
    v4 = *v2;
    goto LABEL_9;
  }
  v3 = *(_DWORD *)(a1 + 8);
  v4 = *v2;
  if (v3 < *v2)
  {
    *(_DWORD *)(a1 + 8) = v3 + 1;
    return *(CoreML::Specification::ActivationParams **)&v2[2 * v3 + 2];
  }
  if (v4 == *(_DWORD *)(a1 + 12))
    goto LABEL_6;
LABEL_9:
  *v2 = v4 + 1;
  v6 = *(google::protobuf::Arena **)a1;
  if (*(_QWORD *)a1)
  {
    CoreML::Specification::ActivationParams::ActivationParams(Aligned);
    v7 = google::protobuf::Arena::AllocateAligned(v6, 0, 24);
    *v7 = Aligned;
    v7[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::ActivationParams>;
    v8 = (unint64_t *)((char *)v6 + 32);
    do
      v9 = __ldxr(v8);
    while (__stxr((unint64_t)v7, v8));
    v7[2] = (google::protobuf::Arena *)v9;
  }
  else
  {
    Aligned = (CoreML::Specification::ActivationParams *)operator new();
    CoreML::Specification::ActivationParams::ActivationParams(Aligned);
  }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = Aligned;
  return Aligned;
}

void sub_1D3B88C18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::LSTMParams *CoreML::Specification::LSTMParams::LSTMParams(CoreML::Specification::LSTMParams *this)
{
  *(_QWORD *)this = &off_1E9559CE0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LSTMParams *)&CoreML::Specification::_LSTMParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_BYTE *)this + 24) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 7) = 0;
  return this;
}

void sub_1D3B88C90(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::LSTMParams::MergePartialFromCodedStream(CoreML::Specification::LSTMParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  BOOL v11;
  unsigned int TagFallback;
  unsigned int v13;
  char *v14;
  unint64_t v15;
  unsigned int *v16;
  unsigned int v17;
  char *v18;
  unint64_t Varint64Fallback;
  char *v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  _BOOL8 result;
  unsigned int v32;

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          while (1)
          {
            v5 = *(unsigned __int8 **)a2;
            v6 = *((_QWORD *)a2 + 1);
            if (*(_QWORD *)a2 >= v6)
            {
              LODWORD(v8) = 0;
            }
            else
            {
              v7 = v5 + 1;
              v8 = *v5;
              if ((char)*v5 >= 1)
              {
                *(_QWORD *)a2 = v7;
                v9 = v8 | 0x100000000;
                if ((v9 & 0x100000000) == 0)
                  goto LABEL_8;
                goto LABEL_16;
              }
              if ((unint64_t)v7 < v6)
              {
                v10 = *v7;
                if ((v8 & ~v10) >= 0x80)
                {
                  *(_QWORD *)a2 = v5 + 2;
                  v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
                  goto LABEL_16;
                }
              }
            }
            TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
            v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
            if ((v9 & 0x100000000) == 0)
              goto LABEL_8;
LABEL_16:
            v13 = v9 >> 3;
            if (v9 >> 3 > 0x27)
              break;
            if (v13 == 10)
            {
              if (v9 != 80)
                goto LABEL_8;
              v18 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v18 < 0)
              {
                Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v27 & 1) == 0)
                  return 0;
              }
              else
              {
                Varint64Fallback = *v18;
                *(_QWORD *)a2 = v18 + 1;
              }
              *((_BYTE *)this + 20) = Varint64Fallback != 0;
            }
            else if (v13 == 20)
            {
              if (v9 != 160)
                goto LABEL_8;
              v20 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v20 < 0)
              {
                v21 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v28 & 1) == 0)
                  return 0;
              }
              else
              {
                v21 = *v20;
                *(_QWORD *)a2 = v20 + 1;
              }
              *((_BYTE *)this + 21) = v21 != 0;
            }
            else
            {
              if (v13 != 30 || v9 != 240)
                goto LABEL_8;
              v14 = *(char **)a2;
              if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v14 < 0)
              {
                v15 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
                if ((v26 & 1) == 0)
                  return 0;
              }
              else
              {
                v15 = *v14;
                *(_QWORD *)a2 = v14 + 1;
              }
              *((_BYTE *)this + 22) = v15 != 0;
            }
          }
          if (v13 != 40)
            break;
          if (v9 != 64)
            goto LABEL_8;
          v22 = *(char **)a2;
          if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v22 < 0)
          {
            v23 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v29 & 1) == 0)
              return 0;
          }
          else
          {
            v23 = *v22;
            *(_QWORD *)a2 = v22 + 1;
          }
          *((_BYTE *)this + 23) = v23 != 0;
        }
        if (v13 == 50)
          break;
        if (v13 != 60 || v9 != 229)
          goto LABEL_8;
        v32 = 0;
        v16 = *(unsigned int **)a2;
        if ((int)(*((_DWORD *)a2 + 2) - *(_QWORD *)a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v32);
          if (!result)
            return result;
          v17 = v32;
        }
        else
        {
          v17 = *v16;
          *(_QWORD *)a2 = v16 + 1;
        }
        *((_DWORD *)this + 4) = v17;
      }
      if (v9 != 144)
        break;
      v24 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v24 < 0)
      {
        v25 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
        if ((v30 & 1) == 0)
          return 0;
      }
      else
      {
        v25 = *v24;
        *(_QWORD *)a2 = v24 + 1;
      }
      *((_BYTE *)this + 24) = v25 != 0;
    }
LABEL_8:
    if ((_DWORD)v9)
      v11 = (v9 & 7) == 4;
    else
      v11 = 1;
    if (v11)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) != 0);
  return 0;
}

BOOL CoreML::Specification::LSTMWeightParams::MergePartialFromCodedStream(CoreML::Specification::LSTMWeightParams *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned __int8 *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  unsigned int TagFallback;
  unsigned int v13;
  CoreML::Specification::WeightParams *v14;
  char *v15;
  int VarintSizeAsIntFallback;
  int v17;
  unsigned int v18;
  int v19;
  BOOL v20;
  int v21;
  _BOOL8 result;

  while (1)
  {
    while (1)
    {
      v5 = *(unsigned __int8 **)a2;
      v6 = *((_QWORD *)a2 + 1);
      if (*(_QWORD *)a2 >= v6)
      {
        LODWORD(v8) = 0;
      }
      else
      {
        v7 = v5 + 1;
        v8 = *v5;
        if ((char)*v5 >= 1)
        {
          *(_QWORD *)a2 = v7;
          v9 = v8 | 0x100000000;
          if ((v9 & 0x100000000) == 0)
            goto LABEL_8;
          goto LABEL_16;
        }
        if ((unint64_t)v7 < v6)
        {
          v10 = *v7;
          if ((v8 & ~v10) >= 0x80)
          {
            *(_QWORD *)a2 = v5 + 2;
            v9 = (v8 + (v10 << 7) - 128) | 0x100000000;
            goto LABEL_16;
          }
        }
      }
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v8);
      v9 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x3FFF) << 32);
      if ((v9 & 0x100000000) == 0)
        goto LABEL_8;
LABEL_16:
      v13 = v9 >> 3;
      if (v9 >> 3 <= 0x27)
      {
        switch(v13)
        {
          case 1u:
            if (v9 != 10)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 2) = v14;
            }
            break;
          case 2u:
            if (v9 != 18)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 3) = v14;
            }
            break;
          case 3u:
            if (v9 != 26)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 4);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 4) = v14;
            }
            break;
          case 4u:
            if (v9 != 34)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 5) = v14;
            }
            break;
          default:
            switch(v13)
            {
              case 0x14u:
                if (v9 != 162)
                  goto LABEL_8;
                v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 6);
                if (!v14)
                {
                  v14 = (CoreML::Specification::WeightParams *)operator new();
                  CoreML::Specification::WeightParams::WeightParams(v14);
                  *((_QWORD *)this + 6) = v14;
                }
                break;
              case 0x15u:
                if (v9 != 170)
                  goto LABEL_8;
                v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 7);
                if (!v14)
                {
                  v14 = (CoreML::Specification::WeightParams *)operator new();
                  CoreML::Specification::WeightParams::WeightParams(v14);
                  *((_QWORD *)this + 7) = v14;
                }
                break;
              case 0x16u:
                if (v9 != 178)
                  goto LABEL_8;
                v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 8);
                if (!v14)
                {
                  v14 = (CoreML::Specification::WeightParams *)operator new();
                  CoreML::Specification::WeightParams::WeightParams(v14);
                  *((_QWORD *)this + 8) = v14;
                }
                break;
              case 0x17u:
                if (v9 != 186)
                  goto LABEL_8;
                v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 9);
                if (!v14)
                {
                  v14 = (CoreML::Specification::WeightParams *)operator new();
                  CoreML::Specification::WeightParams::WeightParams(v14);
                  *((_QWORD *)this + 9) = v14;
                }
                break;
              default:
                goto LABEL_8;
            }
            goto LABEL_70;
        }
        goto LABEL_70;
      }
      if (v9 >> 3 <= 0x3B)
      {
        switch(v13)
        {
          case '(':
            if (v9 != 66)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 10);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 10) = v14;
            }
            break;
          case ')':
            if (v9 != 74)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 11);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 11) = v14;
            }
            break;
          case '*':
            if (v9 != 82)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 12);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 12) = v14;
            }
            break;
          case '+':
            if (v9 != 90)
              goto LABEL_8;
            v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 13);
            if (!v14)
            {
              v14 = (CoreML::Specification::WeightParams *)operator new();
              CoreML::Specification::WeightParams::WeightParams(v14);
              *((_QWORD *)this + 13) = v14;
            }
            break;
          default:
            goto LABEL_8;
        }
        goto LABEL_70;
      }
      if (v13 == 60)
      {
        if (v9 != 226)
          goto LABEL_8;
        v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 14);
        if (!v14)
        {
          v14 = (CoreML::Specification::WeightParams *)operator new();
          CoreML::Specification::WeightParams::WeightParams(v14);
          *((_QWORD *)this + 14) = v14;
        }
        goto LABEL_70;
      }
      if (v13 != 61)
        break;
      if (v9 != 234)
        goto LABEL_8;
      v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 15);
      if (!v14)
      {
        v14 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v14);
        *((_QWORD *)this + 15) = v14;
      }
LABEL_70:
      v15 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v15 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v15;
        *(_QWORD *)a2 = v15 + 1;
      }
      v17 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v19 = *((_DWORD *)a2 + 13);
      v20 = __OFSUB__(v19--, 1);
      *((_DWORD *)a2 + 13) = v19;
      if (v19 < 0 == v20)
      {
        v21 = v17;
        result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v14, a2, v18);
        if (!result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v21))
          continue;
      }
      return 0;
    }
    if (v13 == 62 && v9 == 242)
    {
      v14 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 16);
      if (!v14)
      {
        v14 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v14);
        *((_QWORD *)this + 16) = v14;
      }
      goto LABEL_70;
    }
LABEL_8:
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v9, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B89500(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::LSTMWeightParams *CoreML::Specification::LSTMWeightParams::LSTMWeightParams(CoreML::Specification::LSTMWeightParams *this)
{
  *(_QWORD *)this = &off_1E955D1B8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::LSTMWeightParams *)&CoreML::Specification::_LSTMWeightParams_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *(_OWORD *)((char *)this + 124) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 1) = 0u;
  return this;
}

void sub_1D3B895BC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::LSTMWeightParams>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::ActivationParams>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::SamplingMode *CoreML::Specification::SamplingMode::SamplingMode(CoreML::Specification::SamplingMode *this)
{
  *(_QWORD *)this = &off_1E955AE18;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SamplingMode *)&CoreML::Specification::_SamplingMode_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B89634(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SamplingMode::MergePartialFromCodedStream(CoreML::Specification::SamplingMode *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::BoxCoordinatesMode *CoreML::Specification::BoxCoordinatesMode::BoxCoordinatesMode(CoreML::Specification::BoxCoordinatesMode *this)
{
  *(_QWORD *)this = &off_1E955E2F0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BoxCoordinatesMode *)&CoreML::Specification::_BoxCoordinatesMode_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B89788(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BoxCoordinatesMode::MergePartialFromCodedStream(CoreML::Specification::BoxCoordinatesMode *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::PaddingLayerParams::clear_PaddingType(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 36);
  if (v2 == 3 || v2 == 2 || v2 == 1)
  {
    this = *(_QWORD *)(this + 24);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

CoreML::Specification::PaddingLayerParams_PaddingConstant *CoreML::Specification::PaddingLayerParams_PaddingConstant::PaddingLayerParams_PaddingConstant(CoreML::Specification::PaddingLayerParams_PaddingConstant *this)
{
  *(_QWORD *)this = &off_1E95643B8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingConstant *)&CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B8992C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::PaddingLayerParams_PaddingConstant::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingConstant *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PaddingLayerParams_PaddingReflection *CoreML::Specification::PaddingLayerParams_PaddingReflection::PaddingLayerParams_PaddingReflection(CoreML::Specification::PaddingLayerParams_PaddingReflection *this)
{
  *(_QWORD *)this = &off_1E9564450;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingReflection *)&CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B89A84(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReflection::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingReflection *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::PaddingLayerParams_PaddingReplication *CoreML::Specification::PaddingLayerParams_PaddingReplication::PaddingLayerParams_PaddingReplication(CoreML::Specification::PaddingLayerParams_PaddingReplication *this)
{
  *(_QWORD *)this = &off_1E9564618;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::PaddingLayerParams_PaddingReplication *)&CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B89B5C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PaddingLayerParams_PaddingReplication::MergePartialFromCodedStream(CoreML::Specification::PaddingLayerParams_PaddingReplication *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::BorderAmounts *CoreML::Specification::BorderAmounts::BorderAmounts(CoreML::Specification::BorderAmounts *this)
{
  *(_QWORD *)this = &off_1E955B2D8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (this != (CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B89C48(_Unwind_Exception *a1)
{
  uint64_t *v1;
  _QWORD *v2;

  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(CoreML::Specification::BorderAmounts *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  int *v10;
  int v11;
  int v12;
  CoreML::Specification::BorderAmounts_EdgeSizes *Aligned;
  google::protobuf::Arena *v15;
  google::protobuf::Arena **v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int VarintSizeAsIntFallback;
  int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  int v27;
  uint64_t result;

  v5 = (CoreML::Specification::BorderAmounts *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 < *((_QWORD *)a2 + 1))
        break;
      LODWORD(v7) = 0;
LABEL_7:
      TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
      v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
      if ((v8 & 0x100000000) == 0)
        goto LABEL_13;
LABEL_8:
      if (v8 != 82 || (v8 & 0xFFFFFFF8) != 0x50)
        goto LABEL_13;
      v10 = (int *)*((_QWORD *)this + 4);
      if (!v10)
      {
        v11 = *((_DWORD *)this + 6);
        v12 = *((_DWORD *)this + 7);
LABEL_21:
        if (v11 <= v12)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v5, v12 - v11 + 1);
          v10 = (int *)*((_QWORD *)this + 4);
        }
        v12 = *v10;
        goto LABEL_24;
      }
      v11 = *((_DWORD *)this + 6);
      v12 = *v10;
      if (v11 < *v10)
      {
        *((_DWORD *)this + 6) = v11 + 1;
        Aligned = *(CoreML::Specification::BorderAmounts_EdgeSizes **)&v10[2 * v11 + 2];
        goto LABEL_30;
      }
      if (v12 == *((_DWORD *)this + 7))
        goto LABEL_21;
LABEL_24:
      *v10 = v12 + 1;
      v15 = *(google::protobuf::Arena **)v5;
      if (*(_QWORD *)v5)
      {
        CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes(Aligned);
        v16 = google::protobuf::Arena::AllocateAligned(v15, 0, 24);
        *v16 = Aligned;
        v16[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::BorderAmounts_EdgeSizes>;
        v17 = (unint64_t *)((char *)v15 + 32);
        do
          v18 = __ldxr(v17);
        while (__stxr((unint64_t)v16, v17));
        v16[2] = (google::protobuf::Arena *)v18;
      }
      else
      {
        Aligned = (CoreML::Specification::BorderAmounts_EdgeSizes *)operator new();
        CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes(Aligned);
      }
      v19 = *((_QWORD *)this + 4);
      v20 = *((int *)this + 6);
      *((_DWORD *)this + 6) = v20 + 1;
      *(_QWORD *)(v19 + 8 * v20 + 8) = Aligned;
LABEL_30:
      v21 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v21 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v21;
        *(_QWORD *)a2 = v21 + 1;
      }
      v23 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v25 = *((_DWORD *)a2 + 13);
      v26 = __OFSUB__(v25--, 1);
      *((_DWORD *)a2 + 13) = v25;
      if (v25 < 0 == v26)
      {
        v27 = v23;
        result = CoreML::Specification::BorderAmounts_EdgeSizes::MergePartialFromCodedStream(Aligned, (char **)a2, v24);
        if (!(_DWORD)result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v27))
          continue;
      }
      return 0;
    }
    v7 = *v6;
    if (*v6 < 1)
      goto LABEL_7;
    *(_QWORD *)a2 = v6 + 1;
    v8 = v7 | 0x100000000;
    if ((v8 & 0x100000000) != 0)
      goto LABEL_8;
LABEL_13:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B89EAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B7564605);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::BorderAmounts_EdgeSizes::MergePartialFromCodedStream(CoreML::Specification::BorderAmounts_EdgeSizes *this, char **a2, unsigned int a3)
{
  unint64_t *v4;
  unint64_t *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v11;
  unint64_t v12;
  unint64_t *v13;
  char v15;
  char v16;

  v4 = (unint64_t *)((char *)this + 24);
  v5 = (unint64_t *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v7) = 0;
LABEL_7:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v7);
          v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v8 & 0x100000000) == 0)
            goto LABEL_22;
          goto LABEL_8;
        }
        v7 = *v6;
        if (*v6 < 1)
          goto LABEL_7;
        *a2 = v6 + 1;
        v8 = v7 | 0x100000000;
        if ((v8 & 0x100000000) == 0)
          goto LABEL_22;
LABEL_8:
        if (v8 >> 3 != 2)
          break;
        if (v8 != 16)
          goto LABEL_22;
        v11 = *a2;
        if (*a2 >= a2[1] || *v11 < 0)
        {
          *v4 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
          if ((v16 & 1) == 0)
            return 0;
        }
        else
        {
          v12 = *v11;
          v13 = v4;
LABEL_21:
          *v13 = v12;
          *a2 = v11 + 1;
        }
      }
      if (v8 >> 3 != 1 || v8 != 8)
        break;
      v11 = *a2;
      if (*a2 < a2[1] && (*v11 & 0x80000000) == 0)
      {
        v12 = *v11;
        v13 = v5;
        goto LABEL_21;
      }
      *v5 = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((google::protobuf::io::CodedInputStream *)a2);
      if ((v15 & 1) == 0)
        return 0;
    }
LABEL_22:
    if (!(_DWORD)v8 || (v8 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) == 0)return 0;
  }
}

CoreML::Specification::BorderAmounts_EdgeSizes *CoreML::Specification::BorderAmounts_EdgeSizes::BorderAmounts_EdgeSizes(CoreML::Specification::BorderAmounts_EdgeSizes *this)
{
  *(_QWORD *)this = &off_1E9561140;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::BorderAmounts_EdgeSizes *)&CoreML::Specification::_BorderAmounts_EdgeSizes_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B8A064(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::BorderAmounts_EdgeSizes>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

uint64_t CoreML::Specification::ActivationParams::clear_NonlinearityType(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 28);
  if (v2 <= 30)
  {
    if (v2 > 19)
    {
      if (v2 != 20 && v2 != 25 && v2 != 30)
        goto LABEL_24;
    }
    else if (v2 != 5 && v2 != 10 && v2 != 15)
    {
      goto LABEL_24;
    }
  }
  else if (v2 <= 49)
  {
    if (v2 != 31 && v2 != 40 && v2 != 41)
      goto LABEL_24;
  }
  else if (v2 > 69)
  {
    if (v2 != 70 && v2 != 71)
      goto LABEL_24;
  }
  else if (v2 != 50 && v2 != 60)
  {
    goto LABEL_24;
  }
  this = *(_QWORD *)(this + 16);
  if (this)
    this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
LABEL_24:
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

CoreML::Specification::ActivationLinear *CoreML::Specification::ActivationLinear::ActivationLinear(CoreML::Specification::ActivationLinear *this)
{
  *(_QWORD *)this = &off_1E955CB30;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationLinear *)&CoreML::Specification::_ActivationLinear_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B8A1A4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationLinear::MergePartialFromCodedStream(CoreML::Specification::ActivationLinear *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  _BOOL8 result;
  unsigned int v16;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v16 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13)
        break;
      v17 = 0;
      v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result)
          return result;
        v11 = v17;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationReLU *CoreML::Specification::ActivationReLU::ActivationReLU(CoreML::Specification::ActivationReLU *this)
{
  *(_QWORD *)this = &off_1E955B5D0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationReLU *)&CoreML::Specification::_ActivationReLU_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8A350(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationReLU *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationLeakyReLU *CoreML::Specification::ActivationLeakyReLU::ActivationLeakyReLU(CoreML::Specification::ActivationLeakyReLU *this)
{
  *(_QWORD *)this = &off_1E955EC70;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationLeakyReLU *)&CoreML::Specification::_ActivationLeakyReLU_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B8A428(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationLeakyReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationLeakyReLU *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationThresholdedReLU *CoreML::Specification::ActivationThresholdedReLU::ActivationThresholdedReLU(CoreML::Specification::ActivationThresholdedReLU *this)
{
  *(_QWORD *)this = &off_1E9561DB8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationThresholdedReLU *)&CoreML::Specification::_ActivationThresholdedReLU_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B8A580(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationThresholdedReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationThresholdedReLU *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationPReLU *CoreML::Specification::ActivationPReLU::ActivationPReLU(CoreML::Specification::ActivationPReLU *this)
{
  *(_QWORD *)this = &off_1E955BE20;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B8A6DC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationPReLU::MergePartialFromCodedStream(CoreML::Specification::ActivationPReLU *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::WeightParams *v11;
  char *v12;
  int VarintSizeAsIntFallback;
  int v14;
  unsigned int v15;
  int v16;
  BOOL v17;
  int v18;
  _BOOL8 result;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
      if (!v11)
      {
        v11 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v11);
        *((_QWORD *)this + 2) = v11;
      }
      v12 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v16 = *((_DWORD *)a2 + 13);
      v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 13) = v16;
      if (v16 < 0 == v17)
      {
        v18 = v14;
        result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v11, a2, v15);
        if (!result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18))
          continue;
      }
      return 0;
    }
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B8A848(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ActivationTanh *CoreML::Specification::ActivationTanh::ActivationTanh(CoreML::Specification::ActivationTanh *this)
{
  *(_QWORD *)this = &off_1E955B668;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationTanh *)&CoreML::Specification::_ActivationTanh_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8A8B8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationTanh::MergePartialFromCodedStream(CoreML::Specification::ActivationTanh *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationScaledTanh *CoreML::Specification::ActivationScaledTanh::ActivationScaledTanh(CoreML::Specification::ActivationScaledTanh *this)
{
  *(_QWORD *)this = &off_1E955F428;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationScaledTanh *)&CoreML::Specification::_ActivationScaledTanh_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B8A994(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationScaledTanh::MergePartialFromCodedStream(CoreML::Specification::ActivationScaledTanh *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  _BOOL8 result;
  unsigned int v16;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v16 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13)
        break;
      v17 = 0;
      v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result)
          return result;
        v11 = v17;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationSigmoid *CoreML::Specification::ActivationSigmoid::ActivationSigmoid(CoreML::Specification::ActivationSigmoid *this)
{
  *(_QWORD *)this = &off_1E955D710;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSigmoid *)&CoreML::Specification::_ActivationSigmoid_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8AB40(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationSigmoid::MergePartialFromCodedStream(CoreML::Specification::ActivationSigmoid *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationSigmoidHard *CoreML::Specification::ActivationSigmoidHard::ActivationSigmoidHard(CoreML::Specification::ActivationSigmoidHard *this)
{
  *(_QWORD *)this = &off_1E955FD10;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSigmoidHard *)&CoreML::Specification::_ActivationSigmoidHard_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B8AC1C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationSigmoidHard::MergePartialFromCodedStream(CoreML::Specification::ActivationSigmoidHard *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  unsigned int *v10;
  unsigned int v11;
  unsigned int *v12;
  unsigned int v13;
  BOOL v14;
  _BOOL8 result;
  unsigned int v16;
  unsigned int v17;

  do
  {
    while (1)
    {
      while (1)
      {
        v5 = *a2;
        if (*a2 >= a2[1])
        {
          LODWORD(v6) = 0;
LABEL_6:
          TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
          v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
          if ((v7 & 0x100000000) == 0)
            goto LABEL_20;
          goto LABEL_7;
        }
        v6 = *v5;
        if (*v5 < 1)
          goto LABEL_6;
        *a2 = v5 + 1;
        v7 = v6 | 0x100000000;
        if ((v7 & 0x100000000) == 0)
          goto LABEL_20;
LABEL_7:
        if (v7 >> 3 != 2)
          break;
        if (v7 != 21)
          goto LABEL_20;
        v16 = 0;
        v12 = (unsigned int *)*a2;
        if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
        {
          result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v16);
          if (!result)
            return result;
          v13 = v16;
        }
        else
        {
          v13 = *v12;
          *a2 = (char *)(v12 + 1);
        }
        *((_DWORD *)this + 5) = v13;
      }
      if (v7 >> 3 != 1 || v7 != 13)
        break;
      v17 = 0;
      v10 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v17);
        if (!result)
          return result;
        v11 = v17;
      }
      else
      {
        v11 = *v10;
        *a2 = (char *)(v10 + 1);
      }
      *((_DWORD *)this + 4) = v11;
    }
LABEL_20:
    if ((_DWORD)v7)
      v14 = (v7 & 7) == 4;
    else
      v14 = 1;
    result = v14;
    if (v14)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationELU *CoreML::Specification::ActivationELU::ActivationELU(CoreML::Specification::ActivationELU *this)
{
  *(_QWORD *)this = &off_1E955B110;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationELU *)&CoreML::Specification::_ActivationELU_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B8ADC8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationELU::MergePartialFromCodedStream(CoreML::Specification::ActivationELU *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  _BOOL8 result;
  unsigned int *v12;
  unsigned int v13;
  unsigned int v14;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 13 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v14 = 0;
      v12 = (unsigned int *)*a2;
      if ((int)(*((_DWORD *)a2 + 2) - *a2) < 4)
      {
        result = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)a2, &v14);
        if (!result)
          return result;
        v13 = v14;
      }
      else
      {
        v13 = *v12;
        *a2 = (char *)(v12 + 1);
      }
      *((_DWORD *)this + 4) = v13;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    result = v10;
    if (v10)
      return result;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::ActivationSoftsign *CoreML::Specification::ActivationSoftsign::ActivationSoftsign(CoreML::Specification::ActivationSoftsign *this)
{
  *(_QWORD *)this = &off_1E955E128;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSoftsign *)&CoreML::Specification::_ActivationSoftsign_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8AF20(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationSoftsign::MergePartialFromCodedStream(CoreML::Specification::ActivationSoftsign *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationSoftplus *CoreML::Specification::ActivationSoftplus::ActivationSoftplus(CoreML::Specification::ActivationSoftplus *this)
{
  *(_QWORD *)this = &off_1E955E090;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationSoftplus *)&CoreML::Specification::_ActivationSoftplus_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 4) = 0;
  return this;
}

void sub_1D3B8AFF8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ActivationSoftplus::MergePartialFromCodedStream(CoreML::Specification::ActivationSoftplus *this, char **a2, unsigned int a3)
{
  char *v4;
  unint64_t TagFallback;
  BOOL v6;
  uint64_t v7;

  do
  {
    v4 = *a2;
    if (*a2 >= a2[1])
    {
      LODWORD(TagFallback) = 0;
    }
    else
    {
      TagFallback = *v4;
      if (*v4 >= 1)
      {
        *a2 = v4 + 1;
        goto LABEL_6;
      }
    }
    TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, TagFallback);
LABEL_6:
    if ((_DWORD)TagFallback)
      v6 = (TagFallback & 7) == 4;
    else
      v6 = 1;
    v7 = v6;
  }
  while (!v6
       && (google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return v7;
}

CoreML::Specification::ActivationParametricSoftplus *CoreML::Specification::ActivationParametricSoftplus::ActivationParametricSoftplus(CoreML::Specification::ActivationParametricSoftplus *this)
{
  *(_QWORD *)this = &off_1E95630B8;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ActivationParametricSoftplus *)&CoreML::Specification::_ActivationParametricSoftplus_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return this;
}

void sub_1D3B8B0D4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

BOOL CoreML::Specification::ActivationParametricSoftplus::MergePartialFromCodedStream(CoreML::Specification::ActivationParametricSoftplus *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::WeightParams *v10;
  char *v11;
  int VarintSizeAsIntFallback;
  int v14;
  unsigned int v15;
  int v16;
  BOOL v17;
  int v18;
  _BOOL8 result;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          goto LABEL_21;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        goto LABEL_21;
LABEL_7:
      if (v7 >> 3 != 2)
        break;
      if (v7 != 18)
        goto LABEL_21;
      v10 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
      if (!v10)
      {
        v10 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v10);
        *((_QWORD *)this + 3) = v10;
      }
LABEL_18:
      v11 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v11 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v11;
        *(_QWORD *)a2 = v11 + 1;
      }
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v16 = *((_DWORD *)a2 + 13);
      v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 13) = v16;
      if (v16 < 0 == v17)
      {
        v18 = v14;
        result = CoreML::Specification::WeightParams::MergePartialFromCodedStream(v10, a2, v15);
        if (!result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18))
          continue;
      }
      return 0;
    }
    if (v7 >> 3 == 1 && v7 == 10)
    {
      v10 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
      if (!v10)
      {
        v10 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v10);
        *((_QWORD *)this + 2) = v10;
      }
      goto LABEL_18;
    }
LABEL_21:
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B8B284(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 84);
  if (v2 == 32 || v2 == 31 || v2 == 30)
  {
    this = *(_QWORD *)(this + 72);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 84) = 0;
  return this;
}

CoreML::Specification::ValidPadding *CoreML::Specification::ValidPadding::ValidPadding(CoreML::Specification::ValidPadding *this)
{
  *(_QWORD *)this = &off_1E955AFE0;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  return this;
}

void sub_1D3B8B34C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::ValidPadding::MergePartialFromCodedStream(CoreML::Specification::ValidPadding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  CoreML::Specification::BorderAmounts *v11;
  char *v12;
  int VarintSizeAsIntFallback;
  int v14;
  unsigned int v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t result;

  while (1)
  {
    while (1)
    {
      v5 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *(_QWORD *)a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 10 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = (CoreML::Specification::BorderAmounts *)*((_QWORD *)this + 2);
      if (!v11)
      {
        v11 = (CoreML::Specification::BorderAmounts *)operator new();
        CoreML::Specification::BorderAmounts::BorderAmounts(v11);
        *((_QWORD *)this + 2) = v11;
      }
      v12 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v12 < 0)
      {
        VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
        if (VarintSizeAsIntFallback < 0)
          return 0;
      }
      else
      {
        VarintSizeAsIntFallback = *v12;
        *(_QWORD *)a2 = v12 + 1;
      }
      v14 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
      v16 = *((_DWORD *)a2 + 13);
      v17 = __OFSUB__(v16--, 1);
      *((_DWORD *)a2 + 13) = v16;
      if (v16 < 0 == v17)
      {
        v18 = v14;
        result = CoreML::Specification::BorderAmounts::MergePartialFromCodedStream(v11, a2, v15);
        if (!(_DWORD)result)
          return result;
        if (google::protobuf::io::CodedInputStream::DecrementRecursionDepthAndPopLimit(a2, v18))
          continue;
      }
      return 0;
    }
    if (!(_DWORD)v7 || (v7 & 7) == 4)
      return 1;
    if ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) == 0)
      return 0;
  }
}

void sub_1D3B8B4B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::SamePadding *CoreML::Specification::SamePadding::SamePadding(CoreML::Specification::SamePadding *this)
{
  *(_QWORD *)this = &off_1E955A400;
  *((_QWORD *)this + 1) = 0;
  if (this != (CoreML::Specification::SamePadding *)&CoreML::Specification::_SamePadding_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 2) = 0;
  return this;
}

void sub_1D3B8B528(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::SamePadding::MergePartialFromCodedStream(CoreML::Specification::SamePadding *this, char **a2, unsigned int a3)
{
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int TagFallback;
  BOOL v10;
  char *v11;
  int v12;
  uint64_t Varint32Fallback;

  do
  {
    while (1)
    {
      v5 = *a2;
      if (*a2 >= a2[1])
      {
        LODWORD(v6) = 0;
LABEL_6:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)a2, v6);
        v7 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v7 & 0x100000000) == 0)
          break;
        goto LABEL_7;
      }
      v6 = *v5;
      if (*v5 < 1)
        goto LABEL_6;
      *a2 = v5 + 1;
      v7 = v6 | 0x100000000;
      if ((v7 & 0x100000000) == 0)
        break;
LABEL_7:
      if (v7 != 8 || (v7 & 0xFFFFFFF8) != 8)
        break;
      v11 = *a2;
      if (*a2 >= a2[1])
      {
        v12 = 0;
      }
      else
      {
        v12 = *v11;
        if ((*v11 & 0x80000000) == 0)
        {
          *a2 = v11 + 1;
          goto LABEL_22;
        }
      }
      Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)a2, v12);
      v12 = Varint32Fallback;
      if (Varint32Fallback < 0)
        return 0;
LABEL_22:
      *((_DWORD *)this + 4) = v12;
    }
    if ((_DWORD)v7)
      v10 = (v7 & 7) == 4;
    else
      v10 = 1;
    if (v10)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField((google::protobuf::internal::WireFormatLite *)a2, (google::protobuf::io::CodedInputStream *)v7, a3) & 1) != 0);
  return 0;
}

CoreML::Specification::PoolingLayerParams_ValidCompletePadding *CoreML::Specification::PoolingLayerParams_ValidCompletePadding::PoolingLayerParams_ValidCompletePadding(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9564878;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)&CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  return this;
}

void sub_1D3B8B688(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t CoreML::Specification::PoolingLayerParams_ValidCompletePadding::MergePartialFromCodedStream(CoreML::Specification::PoolingLayerParams_ValidCompletePadding *this, google::protobuf::io::CodedInputStream *a2, unsigned int a3)
{
  unsigned int *v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int TagFallback;
  char *v10;
  int VarintSizeAsIntFallback;
  BOOL v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t Varint64Fallback;
  char v21;
  signed int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  int v27;

  v5 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      v6 = *(char **)a2;
      if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1))
      {
        LODWORD(v7) = 0;
LABEL_7:
        TagFallback = google::protobuf::io::CodedInputStream::ReadTagFallback(a2, v7);
        v8 = TagFallback | ((unint64_t)(TagFallback - 1 < 0x7F) << 32);
        if ((v8 & 0x100000000) == 0)
          break;
        goto LABEL_8;
      }
      v7 = *v6;
      if (*v6 < 1)
        goto LABEL_7;
      *(_QWORD *)a2 = v6 + 1;
      v8 = v7 | 0x100000000;
      if ((v8 & 0x100000000) == 0)
        break;
LABEL_8:
      if ((v8 & 0xFFFFFFF8) != 0x50)
        break;
      if (v8 == 80)
      {
        if ((google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<unsigned long long,(google::protobuf::internal::WireFormatLite::FieldType)4>(0x52u, a2, (uint64_t)v5) & 1) == 0)return 0;
      }
      else
      {
        if (v8 != 82)
          break;
        v10 = *(char **)a2;
        if (*(_QWORD *)a2 >= *((_QWORD *)a2 + 1) || *v10 < 0)
        {
          VarintSizeAsIntFallback = google::protobuf::io::CodedInputStream::ReadVarintSizeAsIntFallback(a2);
          if (VarintSizeAsIntFallback < 0)
            return 0;
        }
        else
        {
          VarintSizeAsIntFallback = *v10;
          *(_QWORD *)a2 = v10 + 1;
        }
        v13 = google::protobuf::io::CodedInputStream::PushLimit(a2, VarintSizeAsIntFallback);
        while (1)
        {
          v14 = *((_DWORD *)a2 + 10);
          v15 = *((int *)a2 + 11);
          v16 = *((_QWORD *)a2 + 1);
          v17 = *((_DWORD *)a2 + 6);
          if (v14 == 0x7FFFFFFF)
            break;
          v18 = *(char **)a2;
          if ((int)(v14 - v17 + v15 + v16 - *(_QWORD *)a2) < 1)
            break;
          if ((unint64_t)v18 >= v16 || *v18 < 0)
          {
            Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2);
            if ((v21 & 1) == 0)
              return 0;
            v19 = Varint64Fallback;
          }
          else
          {
            v19 = *v18;
            *(_QWORD *)a2 = v18 + 1;
          }
          v22 = *((_DWORD *)this + 4);
          if (v22 == *((_DWORD *)this + 5))
          {
            google::protobuf::RepeatedField<double>::Reserve(v5, v22 + 1);
            v22 = *v5;
          }
          v23 = *((_QWORD *)this + 3);
          *((_DWORD *)this + 4) = v22 + 1;
          *(_QWORD *)(v23 + 8 * v22 + 8) = v19;
        }
        *((_DWORD *)a2 + 10) = v13;
        v24 = v16 + v15;
        *((_QWORD *)a2 + 1) = v16 + v15;
        v25 = *((_DWORD *)a2 + 12);
        if (v25 >= v13)
          v25 = v13;
        v26 = __OFSUB__(v17, v25);
        v27 = v17 - v25;
        if ((v27 < 0) ^ v26 | (v27 == 0))
          v27 = 0;
        else
          *((_QWORD *)a2 + 1) = v24 - v27;
        *((_DWORD *)a2 + 11) = v27;
        *((_BYTE *)a2 + 36) = 0;
      }
    }
    if ((_DWORD)v8)
      v12 = (v8 & 7) == 4;
    else
      v12 = 1;
    if (v12)
      return 1;
  }
  while ((google::protobuf::internal::WireFormatLite::SkipField(a2, (google::protobuf::io::CodedInputStream *)v8, a3) & 1) != 0);
  return 0;
}

uint64_t CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 172);
  if (v2 == 51 || v2 == 50)
  {
    this = *(_QWORD *)(this + 160);
    if (this)
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)this + 8))(this);
  }
  *(_DWORD *)(v1 + 172) = 0;
  return this;
}

CoreML::Specification::Tensor *CoreML::Specification::Tensor::Tensor(CoreML::Specification::Tensor *this)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E9564C08;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  if (this != (CoreML::Specification::Tensor *)&CoreML::Specification::_Tensor_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  return this;
}

void sub_1D3B8B954(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = *(_QWORD **)(v2 + 24);
  if (v4)
  {
    if (!*v4)
      operator delete(v4);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

CoreML::Specification::NeuralNetworkLayer *CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(CoreML::Specification::NeuralNetworkLayer *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E955E550;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 13) = 0;
  if (this != (CoreML::Specification::NeuralNetworkLayer *)&CoreML::Specification::_NeuralNetworkLayer_default_instance_)
    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(this);
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((_BYTE *)this + 120) = 0;
  *((_QWORD *)this + 17) = 0;
  return this;
}

void sub_1D3B8BA10(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = v3;
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v5);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<CoreML::Specification::FeatureDescription>::TypeHandler>(v4);
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)(v1 + 40));
  google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((_QWORD *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void CoreML::Specification::NeuralNetworkRegressor::MergeFrom(CoreML::Specification::NeuralNetworkRegressor *this, const CoreML::Specification::NeuralNetworkRegressor *a2)
{
  uint64_t v4;
  unsigned int v5;
  const CoreML::Specification::NeuralNetworkLayer **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  unsigned int v10;
  const CoreML::Specification::NeuralNetworkPreprocessing **v11;
  unsigned int *v12;
  signed int v13;
  signed int *v14;
  const CoreML::Specification::NetworkUpdateParameters *v15;
  CoreML::Specification::NetworkUpdateParameters *v16;
  const CoreML::Specification::NetworkUpdateParameters *v17;
  int v18;
  int v19;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (const CoreML::Specification::NeuralNetworkLayer **)(*((_QWORD *)a2 + 4) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkRegressor *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>((google::protobuf::Arena **)this + 2, (CoreML::Specification::NeuralNetworkLayer **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    v9 = (signed int *)*((_QWORD *)this + 4);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    v11 = (const CoreML::Specification::NeuralNetworkPreprocessing **)(*((_QWORD *)a2 + 7) + 8);
    v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkRegressor *)((char *)this + 40), *((_DWORD *)a2 + 12));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>((google::protobuf::Arena **)this + 5, (CoreML::Specification::NeuralNetworkPreprocessing **)v12, v11, v10, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    v13 = *((_DWORD *)this + 12) + v10;
    *((_DWORD *)this + 12) = v13;
    v14 = (signed int *)*((_QWORD *)this + 7);
    if (*v14 < v13)
      *v14 = v13;
  }
  if (a2 != (const CoreML::Specification::NeuralNetworkRegressor *)&CoreML::Specification::_NeuralNetworkRegressor_default_instance_)
  {
    v15 = (const CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)a2 + 8);
    if (v15)
    {
      v16 = (CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)this + 8);
      if (!v16)
      {
        v16 = (CoreML::Specification::NetworkUpdateParameters *)operator new();
        CoreML::Specification::NetworkUpdateParameters::NetworkUpdateParameters(v16);
        *((_QWORD *)this + 8) = v16;
        v15 = (const CoreML::Specification::NetworkUpdateParameters *)*((_QWORD *)a2 + 8);
      }
      if (v15)
        v17 = v15;
      else
        v17 = (const CoreML::Specification::NetworkUpdateParameters *)&CoreML::Specification::_NetworkUpdateParameters_default_instance_;
      CoreML::Specification::NetworkUpdateParameters::MergeFrom(v16, v17);
    }
  }
  v18 = *((_DWORD *)a2 + 18);
  if (v18)
    *((_DWORD *)this + 18) = v18;
  v19 = *((_DWORD *)a2 + 19);
  if (v19)
    *((_DWORD *)this + 19) = v19;
}

void sub_1D3B8BBE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkLayer>::TypeHandler>(google::protobuf::Arena **a1, CoreML::Specification::NeuralNetworkLayer **a2, const CoreML::Specification::NeuralNetworkLayer **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  const CoreML::Specification::NeuralNetworkLayer **v11;
  CoreML::Specification::NeuralNetworkLayer **v12;
  const CoreML::Specification::NeuralNetworkLayer *v13;
  const CoreML::Specification::NeuralNetworkLayer *v14;
  CoreML::Specification::NeuralNetworkLayer *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  CoreML::Specification::NeuralNetworkLayer **v19;
  const CoreML::Specification::NeuralNetworkLayer **v20;
  const CoreML::Specification::NeuralNetworkLayer *v21;
  CoreML::Specification::NeuralNetworkLayer *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkLayer>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20;
      if (v18)
      {
        CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(Aligned);
        v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
        *v23 = Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkLayer>;
        v24 = (unint64_t *)((char *)v18 + 32);
        do
          v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
      }
      else
      {
        Aligned = (CoreML::Specification::NeuralNetworkLayer *)operator new();
        CoreML::Specification::NeuralNetworkLayer::NeuralNetworkLayer(Aligned);
      }
      google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkLayer>::Merge(v21, Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
}

void sub_1D3B8BD24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40665201BALL);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::NeuralNetworkPreprocessing>::TypeHandler>(google::protobuf::Arena **a1, CoreML::Specification::NeuralNetworkPreprocessing **a2, const CoreML::Specification::NeuralNetworkPreprocessing **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  const CoreML::Specification::NeuralNetworkPreprocessing **v11;
  CoreML::Specification::NeuralNetworkPreprocessing **v12;
  const CoreML::Specification::NeuralNetworkPreprocessing *v13;
  const CoreML::Specification::NeuralNetworkPreprocessing *v14;
  CoreML::Specification::NeuralNetworkPreprocessing *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  CoreML::Specification::NeuralNetworkPreprocessing **v19;
  const CoreML::Specification::NeuralNetworkPreprocessing **v20;
  const CoreML::Specification::NeuralNetworkPreprocessing *v21;
  CoreML::Specification::NeuralNetworkPreprocessing *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkPreprocessing>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20;
      if (v18)
      {
        CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(Aligned);
        v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
        *v23 = Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::NeuralNetworkPreprocessing>;
        v24 = (unint64_t *)((char *)v18 + 32);
        do
          v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
      }
      else
      {
        Aligned = (CoreML::Specification::NeuralNetworkPreprocessing *)operator new();
        CoreML::Specification::NeuralNetworkPreprocessing::NeuralNetworkPreprocessing(Aligned);
      }
      google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkPreprocessing>::Merge(v21, Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
}

void sub_1D3B8BE64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkPreprocessing>::Merge(const CoreML::Specification::NeuralNetworkPreprocessing *a1, CoreML::Specification::NeuralNetworkPreprocessing *a2)
{
  CoreML::Specification::NeuralNetworkPreprocessing::MergeFrom(a2, a1);
}

void CoreML::Specification::NeuralNetworkPreprocessing::MergeFrom(CoreML::Specification::NeuralNetworkPreprocessing *this, const CoreML::Specification::NeuralNetworkPreprocessing *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  CoreML::Specification::NeuralNetworkImageScaler *v8;
  CoreML::Specification::NeuralNetworkMeanImage *v9;
  CoreML::Specification::NeuralNetworkImageScaler *v10;
  const CoreML::Specification::NeuralNetworkImageScaler *v11;
  CoreML::Specification::NeuralNetworkMeanImage *v12;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *v13;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_QWORD *)a2 + 2);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_11;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_11;
  }
  v6 = (uint64_t *)*((_QWORD *)this + 2);
  if (v6 != (uint64_t *)v5)
  {
    if (v6 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v5);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v5);
  }
LABEL_11:
  v7 = *((_DWORD *)a2 + 9);
  if (v7 == 11)
  {
    if (*((_DWORD *)this + 9) == 11)
    {
      v9 = (CoreML::Specification::NeuralNetworkMeanImage *)*((_QWORD *)this + 3);
    }
    else
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
      *((_DWORD *)this + 9) = 11;
      v9 = (CoreML::Specification::NeuralNetworkMeanImage *)operator new();
      v12 = CoreML::Specification::NeuralNetworkMeanImage::NeuralNetworkMeanImage(v9);
      *((_QWORD *)this + 3) = v9;
      if (*((_DWORD *)a2 + 9) != 11)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v12);
        v13 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)&CoreML::Specification::_NeuralNetworkMeanImage_default_instance_;
        goto LABEL_25;
      }
    }
    v13 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedFloats *)*((_QWORD *)a2 + 3);
LABEL_25:
    CoreML::Specification::MILSpec::TensorValue_RepeatedFloats::MergeFrom((uint64_t *)v9, v13);
    return;
  }
  if (v7 == 10)
  {
    if (*((_DWORD *)this + 9) == 10)
    {
      v8 = (CoreML::Specification::NeuralNetworkImageScaler *)*((_QWORD *)this + 3);
    }
    else
    {
      CoreML::Specification::Int64Parameter::clear_AllowedValues((uint64_t)this);
      *((_DWORD *)this + 9) = 10;
      v8 = (CoreML::Specification::NeuralNetworkImageScaler *)operator new();
      v10 = CoreML::Specification::NeuralNetworkImageScaler::NeuralNetworkImageScaler(v8);
      *((_QWORD *)this + 3) = v8;
      if (*((_DWORD *)a2 + 9) != 10)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v10);
        v11 = (const CoreML::Specification::NeuralNetworkImageScaler *)&CoreML::Specification::_NeuralNetworkImageScaler_default_instance_;
        goto LABEL_23;
      }
    }
    v11 = (const CoreML::Specification::NeuralNetworkImageScaler *)*((_QWORD *)a2 + 3);
LABEL_23:
    CoreML::Specification::NeuralNetworkImageScaler::MergeFrom((std::string *)v8, v11);
  }
}

void sub_1D3B8C030(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406130BDD3);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::NeuralNetworkImageScaler::MergeFrom(std::string *this, const CoreML::Specification::NeuralNetworkImageScaler *a2)
{
  float *v3;
  uint64_t v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;

  v3 = (float *)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((float *)a2 + 4);
  if (v5 != 0.0)
    v3[4] = v5;
  v6 = *((float *)a2 + 5);
  if (v6 != 0.0)
    v3[5] = v6;
  v7 = *((float *)a2 + 6);
  if (v7 != 0.0)
    v3[6] = v7;
  v8 = *((float *)a2 + 7);
  if (v8 != 0.0)
    v3[7] = v8;
  v9 = *((float *)a2 + 8);
  if (v9 != 0.0)
    v3[8] = v9;
  return this;
}

void google::protobuf::internal::GenericTypeHandler<CoreML::Specification::NeuralNetworkLayer>::Merge(const CoreML::Specification::NeuralNetworkLayer *a1, CoreML::Specification::NeuralNetworkLayer *a2)
{
  CoreML::Specification::NeuralNetworkLayer::MergeFrom(a2, a1);
}

void CoreML::Specification::NeuralNetworkLayer::MergeFrom(CoreML::Specification::NeuralNetworkLayer *this, const CoreML::Specification::NeuralNetworkLayer *a2)
{
  uint64_t v4;
  unsigned int v5;
  const std::string **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  unsigned int v10;
  const std::string **v11;
  unsigned int *v12;
  signed int v13;
  signed int *v14;
  unsigned int v15;
  CoreML::Specification::ReshapeLayerParams **v16;
  unsigned int *v17;
  signed int v18;
  signed int *v19;
  unsigned int v20;
  CoreML::Specification::ReshapeLayerParams **v21;
  unsigned int *v22;
  signed int v23;
  signed int *v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  _DWORD *v28;
  CoreML::Specification::EmbeddingLayerParams *v29;
  CoreML::Specification::EmbeddingLayerParams *v30;
  const CoreML::Specification::EmbeddingLayerParams *v31;
  CoreML::Specification::MultiplyBroadcastableLayerParams *v32;
  CoreML::Specification::AddBroadcastableLayerParams *v33;
  uint64_t *v34;
  CoreML::Specification::RangeStaticLayerParams *v35;
  std::string *v36;
  const CoreML::Specification::RangeStaticLayerParams *v37;
  CoreML::Specification::ReduceLogSumExpLayerParams *v38;
  uint64_t *v39;
  uint64_t *v40;
  CoreML::Specification::ReduceLayerParams *v41;
  std::string *v42;
  const CoreML::Specification::ReduceLayerParams *v43;
  CoreML::Specification::ArgMinLayerParams *v44;
  std::string *v45;
  uint64_t *v46;
  CoreML::Specification::LessThanLayerParams *v47;
  std::string *v48;
  uint64_t *v49;
  CoreML::Specification::CategoricalDistributionLayerParams *v50;
  std::string *v51;
  const CoreML::Specification::CategoricalDistributionLayerParams *v52;
  CoreML::Specification::CropResizeLayerParams *v53;
  uint64_t *v54;
  const CoreML::Specification::CropResizeLayerParams *v55;
  CoreML::Specification::ScatterNDLayerParams *v56;
  std::string *v57;
  uint64_t *v58;
  CoreML::Specification::TanLayerParams *v59;
  CoreML::Specification::CumSumLayerParams *v60;
  std::string *v61;
  const CoreML::Specification::CumSumLayerParams *v62;
  CoreML::Specification::SimpleRecurrentLayerParams *v63;
  CoreML::Specification::SimpleRecurrentLayerParams *v64;
  const CoreML::Specification::SimpleRecurrentLayerParams *v65;
  CoreML::Specification::BroadcastToStaticLayerParams *v66;
  uint64_t *v67;
  uint64_t *v68;
  CoreML::Specification::RandomUniformStaticLayerParams *v69;
  uint64_t *v70;
  uint64_t *v71;
  CoreML::Specification::AsinhLayerParams *v72;
  CoreML::Specification::LRNLayerParams *v73;
  std::string *v74;
  const CoreML::Specification::LRNLayerParams *v75;
  CoreML::Specification::ScatterLayerParams *v76;
  std::string *v77;
  uint64_t *v78;
  CoreML::Specification::SignLayerParams *v79;
  CoreML::Specification::WhereBroadcastableLayerParams *v80;
  CoreML::Specification::ConcatLayerParams *v81;
  std::string *v82;
  uint64_t *v83;
  CoreML::Specification::LoadConstantNDLayerParams *v84;
  CoreML::Specification::LoadConstantNDLayerParams *v85;
  const CoreML::Specification::LoadConstantNDLayerParams *v86;
  CoreML::Specification::MaxBroadcastableLayerParams *v87;
  CoreML::Specification::ReduceSumLayerParams *v88;
  CoreML::Specification::ScaleLayerParams *v89;
  CoreML::Specification::ScaleLayerParams *v90;
  const CoreML::Specification::ScaleLayerParams *v91;
  CoreML::Specification::TransposeLayerParams *v92;
  CoreML::Specification::CoshLayerParams *v93;
  CoreML::Specification::CopyLayerParams *v94;
  CoreML::Specification::ReshapeLikeLayerParams *v95;
  CoreML::Specification::ReshapeDynamicLayerParams *v96;
  CoreML::Specification::GeluLayerParams *v97;
  CoreML::Specification::OneHotLayerParams *v98;
  std::string *v99;
  const CoreML::Specification::OneHotLayerParams *v100;
  CoreML::Specification::PoolingLayerParams *v101;
  std::string *v102;
  const CoreML::Specification::PoolingLayerParams *v103;
  CoreML::Specification::PowBroadcastableLayerParams *v104;
  CoreML::Specification::LoopLayerParams *v105;
  CoreML::Specification::LoopLayerParams *v106;
  const CoreML::Specification::LoopLayerParams *v107;
  CoreML::Specification::ReduceMeanLayerParams *v108;
  CoreML::Specification::MaxLayerParams *v109;
  CoreML::Specification::SliceDynamicLayerParams *v110;
  uint64_t *v111;
  const CoreML::Specification::SliceDynamicLayerParams *v112;
  CoreML::Specification::LogicalXorLayerParams *v113;
  CoreML::Specification::RandomBernoulliLikeLayerParams *v114;
  std::string *v115;
  uint64_t *v116;
  CoreML::Specification::PaddingLayerParams *v117;
  std::string *v118;
  const CoreML::Specification::PaddingLayerParams *v119;
  CoreML::Specification::Exp2LayerParams *v120;
  CoreML::Specification::SequenceRepeatLayerParams *v121;
  std::string *v122;
  uint64_t *v123;
  CoreML::Specification::FillStaticLayerParams *v124;
  uint64_t *v125;
  const CoreML::Specification::FillStaticLayerParams *v126;
  CoreML::Specification::RandomNormalStaticLayerParams *v127;
  CoreML::Specification::AtanhLayerParams *v128;
  CoreML::Specification::MeanVarianceNormalizeLayerParams *v129;
  std::string *v130;
  const CoreML::Specification::MeanVarianceNormalizeLayerParams *v131;
  CoreML::Specification::TileLayerParams *v132;
  CoreML::Specification::ClipLayerParams *v133;
  std::string *v134;
  uint64_t *v135;
  CoreML::Specification::MatrixBandPartLayerParams *v136;
  std::string *v137;
  uint64_t *v138;
  CoreML::Specification::ReshapeLayerParams *v139;
  uint64_t *v140;
  const CoreML::Specification::ReshapeLayerParams *v141;
  CoreML::Specification::EmbeddingNDLayerParams *v142;
  CoreML::Specification::EmbeddingNDLayerParams *v143;
  const CoreML::Specification::EmbeddingNDLayerParams *v144;
  CoreML::Specification::LogicalAndLayerParams *v145;
  CoreML::Specification::ReduceL2LayerParams *v146;
  CoreML::Specification::AddLayerParams *v147;
  CoreML::Specification::ReverseSeqLayerParams *v148;
  CoreML::Specification::AcosLayerParams *v149;
  CoreML::Specification::UniDirectionalLSTMLayerParams *v150;
  CoreML::Specification::UniDirectionalLSTMLayerParams *v151;
  const CoreML::Specification::UniDirectionalLSTMLayerParams *v152;
  CoreML::Specification::SqueezeLayerParams *v153;
  uint64_t *v154;
  const CoreML::Specification::SqueezeLayerParams *v155;
  CoreML::Specification::ConstantPaddingLayerParams *v156;
  uint64_t *v157;
  const CoreML::Specification::ConstantPaddingLayerParams *v158;
  CoreML::Specification::NotEqualLayerParams *v159;
  CoreML::Specification::ActivationParams *v160;
  CoreML::Specification::ActivationParams *v161;
  const CoreML::Specification::ActivationParams *v162;
  CoreML::Specification::InnerProductLayerParams *v163;
  CoreML::Specification::InnerProductLayerParams *v164;
  const CoreML::Specification::InnerProductLayerParams *v165;
  CoreML::Specification::DivideBroadcastableLayerParams *v166;
  CoreML::Specification::FloorDivBroadcastableLayerParams *v167;
  CoreML::Specification::LoopBreakLayerParams *v168;
  CoreML::Specification::LoopContinueLayerParams *v169;
  CoreML::Specification::ReduceLogSumLayerParams *v170;
  CoreML::Specification::ReduceSumSquareLayerParams *v171;
  CoreML::Specification::MinLayerParams *v172;
  CoreML::Specification::DotProductLayerParams *v173;
  CoreML::Specification::SlidingWindowsLayerParams *v174;
  std::string *v175;
  const CoreML::Specification::SlidingWindowsLayerParams *v176;
  CoreML::Specification::TopKLayerParams *v177;
  std::string *v178;
  const CoreML::Specification::TopKLayerParams *v179;
  CoreML::Specification::LessEqualLayerParams *v180;
  CoreML::Specification::GreaterThanLayerParams *v181;
  CoreML::Specification::GreaterEqualLayerParams *v182;
  CoreML::Specification::RandomBernoulliStaticLayerParams *v183;
  uint64_t *v184;
  const CoreML::Specification::RandomBernoulliStaticLayerParams *v185;
  CoreML::Specification::RandomBernoulliDynamicLayerParams *v186;
  CoreML::Specification::UpsampleLayerParams *v187;
  uint64_t *v188;
  const CoreML::Specification::UpsampleLayerParams *v189;
  CoreML::Specification::ResizeBilinearLayerParams *v190;
  uint64_t *v191;
  const CoreML::Specification::ResizeBilinearLayerParams *v192;
  CoreML::Specification::GatherNDLayerParams *v193;
  CoreML::Specification::SoftmaxNDLayerParams *v194;
  CoreML::Specification::GatherAlongAxisLayerParams *v195;
  CoreML::Specification::ScatterAlongAxisLayerParams *v196;
  CoreML::Specification::SinLayerParams *v197;
  CoreML::Specification::CosLayerParams *v198;
  CoreML::Specification::ClampedReLULayerParams *v199;
  CoreML::Specification::ArgSortLayerParams *v200;
  CoreML::Specification::Pooling3DLayerParams *v201;
  std::string *v202;
  const CoreML::Specification::Pooling3DLayerParams *v203;
  CoreML::Specification::GlobalPooling3DLayerParams *v204;
  CoreML::Specification::SliceBySizeLayerParams *v205;
  CoreML::Specification::Convolution3DLayerParams *v206;
  CoreML::Specification::Convolution3DLayerParams *v207;
  const CoreML::Specification::Convolution3DLayerParams *v208;
  CoreML::Specification::ReorganizeDataLayerParams *v209;
  CoreML::Specification::SliceLayerParams *v210;
  std::string *v211;
  const CoreML::Specification::SliceLayerParams *v212;
  CoreML::Specification::FillDynamicLayerParams *v213;
  CoreML::Specification::BroadcastToLikeLayerParams *v214;
  CoreML::Specification::RandomNormalDynamicLayerParams *v215;
  std::string *v216;
  uint64_t *v217;
  CoreML::Specification::RandomUniformLikeLayerParams *v218;
  CoreML::Specification::TanhLayerParams *v219;
  CoreML::Specification::L2NormalizeLayerParams *v220;
  CoreML::Specification::SoftmaxLayerParams *v221;
  CoreML::Specification::StackLayerParams *v222;
  CoreML::Specification::GatherLayerParams *v223;
  CoreML::Specification::CeilLayerParams *v224;
  CoreML::Specification::FloorLayerParams *v225;
  CoreML::Specification::LowerTriangularLayerParams *v226;
  CoreML::Specification::UpperTriangularLayerParams *v227;
  CoreML::Specification::FlattenLayerParams *v228;
  CoreML::Specification::PermuteLayerParams *v229;
  CoreML::Specification::BatchedMatMulLayerParams *v230;
  CoreML::Specification::BatchedMatMulLayerParams *v231;
  const CoreML::Specification::BatchedMatMulLayerParams *v232;
  CoreML::Specification::GetShapeLayerParams *v233;
  CoreML::Specification::ModBroadcastableLayerParams *v234;
  CoreML::Specification::MinBroadcastableLayerParams *v235;
  CoreML::Specification::ReduceMaxLayerParams *v236;
  CoreML::Specification::ReduceMinLayerParams *v237;
  CoreML::Specification::MultiplyLayerParams *v238;
  CoreML::Specification::AverageLayerParams *v239;
  CoreML::Specification::SplitNDLayerParams *v240;
  uint64_t *v241;
  const CoreML::Specification::SplitNDLayerParams *v242;
  CoreML::Specification::ConcatNDLayerParams *v243;
  CoreML::Specification::AtanLayerParams *v244;
  CoreML::Specification::SinhLayerParams *v245;
  CoreML::Specification::BiDirectionalLSTMLayerParams *v246;
  CoreML::Specification::BiDirectionalLSTMLayerParams *v247;
  const CoreML::Specification::BiDirectionalLSTMLayerParams *v248;
  CoreML::Specification::CustomLayerParams *v249;
  CoreML::Specification::CustomLayerParams *v250;
  const CoreML::Specification::CustomLayerParams *v251;
  CoreML::Specification::ExpandDimsLayerParams *v252;
  CoreML::Specification::FlattenTo2DLayerParams *v253;
  CoreML::Specification::ReshapeStaticLayerParams *v254;
  CoreML::Specification::ErfLayerParams *v255;
  CoreML::Specification::LayerNormalizationLayerParams *v256;
  CoreML::Specification::LayerNormalizationLayerParams *v257;
  const CoreML::Specification::LayerNormalizationLayerParams *v258;
  CoreML::Specification::NonMaximumSuppressionLayerParams *v259;
  std::string *v260;
  const CoreML::Specification::NonMaximumSuppressionLayerParams *v261;
  CoreML::Specification::ConvolutionLayerParams *v262;
  CoreML::Specification::ConvolutionLayerParams *v263;
  const CoreML::Specification::ConvolutionLayerParams *v264;
  CoreML::Specification::AddBroadcastableLayerParams *v265;
  CoreML::Specification::BranchLayerParams *v266;
  CoreML::Specification::BranchLayerParams *v267;
  const CoreML::Specification::BranchLayerParams *v268;
  CoreML::Specification::ReduceProdLayerParams *v269;
  CoreML::Specification::BiasLayerParams *v270;
  CoreML::Specification::BiasLayerParams *v271;
  const CoreML::Specification::BiasLayerParams *v272;
  CoreML::Specification::SliceStaticLayerParams *v273;
  uint64_t *v274;
  const CoreML::Specification::SliceStaticLayerParams *v275;
  CoreML::Specification::LogicalOrLayerParams *v276;
  CoreML::Specification::RandomUniformDynamicLayerParams *v277;
  CoreML::Specification::CropLayerParams *v278;
  uint64_t *v279;
  const CoreML::Specification::CropLayerParams *v280;
  CoreML::Specification::RoundLayerParams *v281;
  CoreML::Specification::SplitLayerParams *v282;
  CoreML::Specification::FillLikeLayerParams *v283;
  CoreML::Specification::RandomNormalLikeLayerParams *v284;
  CoreML::Specification::AcoshLayerParams *v285;
  CoreML::Specification::BatchnormLayerParams *v286;
  CoreML::Specification::BatchnormLayerParams *v287;
  const CoreML::Specification::BatchnormLayerParams *v288;
  CoreML::Specification::SubtractBroadcastableLayerParams *v289;
  CoreML::Specification::RangeDynamicLayerParams *v290;
  CoreML::Specification::WhereNonZeroLayerParams *v291;
  CoreML::Specification::LoadConstantLayerParams *v292;
  CoreML::Specification::LoadConstantLayerParams *v293;
  const CoreML::Specification::LoadConstantLayerParams *v294;
  CoreML::Specification::ArgMaxLayerParams *v295;
  CoreML::Specification::LogicalNotLayerParams *v296;
  CoreML::Specification::ReduceL1LayerParams *v297;
  CoreML::Specification::UnaryFunctionLayerParams *v298;
  std::string *v299;
  const CoreML::Specification::UnaryFunctionLayerParams *v300;
  CoreML::Specification::ReverseLayerParams *v301;
  uint64_t *v302;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *v303;
  CoreML::Specification::AsinLayerParams *v304;
  CoreML::Specification::GRULayerParams *v305;
  CoreML::Specification::GRULayerParams *v306;
  const CoreML::Specification::GRULayerParams *v307;
  CoreML::Specification::BroadcastToDynamicLayerParams *v308;
  uint64_t v309;
  CoreML::Specification::RankPreservingReshapeLayerParams *v310;
  CoreML::Specification::EqualLayerParams *v311;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    v6 = (const std::string **)(*((_QWORD *)a2 + 4) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 16), *((_DWORD *)a2 + 6));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)this + 16), (std::string **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    v9 = (signed int *)*((_QWORD *)this + 4);
    if (*v9 < v8)
      *v9 = v8;
  }
  v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    v11 = (const std::string **)(*((_QWORD *)a2 + 7) + 8);
    v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 40), *((_DWORD *)a2 + 12));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((std::string *)((char *)this + 40), (std::string **)v12, v11, v10, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    v13 = *((_DWORD *)this + 12) + v10;
    *((_DWORD *)this + 12) = v13;
    v14 = (signed int *)*((_QWORD *)this + 7);
    if (*v14 < v13)
      *v14 = v13;
  }
  v15 = *((_DWORD *)a2 + 18);
  if (v15)
  {
    v16 = (CoreML::Specification::ReshapeLayerParams **)(*((_QWORD *)a2 + 10) + 8);
    v17 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 64), *((_DWORD *)a2 + 18));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>((uint64_t *)this + 8, (CoreML::Specification::ReshapeLayerParams **)v17, v16, v15, **((_DWORD **)this + 10) - *((_DWORD *)this + 18));
    v18 = *((_DWORD *)this + 18) + v15;
    *((_DWORD *)this + 18) = v18;
    v19 = (signed int *)*((_QWORD *)this + 10);
    if (*v19 < v18)
      *v19 = v18;
  }
  v20 = *((_DWORD *)a2 + 24);
  if (v20)
  {
    v21 = (CoreML::Specification::ReshapeLayerParams **)(*((_QWORD *)a2 + 13) + 8);
    v22 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((CoreML::Specification::NeuralNetworkLayer *)((char *)this + 88), *((_DWORD *)a2 + 24));
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>((uint64_t *)this + 11, (CoreML::Specification::ReshapeLayerParams **)v22, v21, v20, **((_DWORD **)this + 13) - *((_DWORD *)this + 24));
    v23 = *((_DWORD *)this + 24) + v20;
    *((_DWORD *)this + 24) = v23;
    v24 = (signed int *)*((_QWORD *)this + 13);
    if (*v24 < v23)
      *v24 = v23;
  }
  v25 = *((_QWORD *)a2 + 14);
  if (*(char *)(v25 + 23) < 0)
  {
    if (!*(_QWORD *)(v25 + 8))
      goto LABEL_23;
  }
  else if (!*(_BYTE *)(v25 + 23))
  {
    goto LABEL_23;
  }
  v26 = (uint64_t *)*((_QWORD *)this + 14);
  if (v26 != (uint64_t *)v25)
  {
    if (v26 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 14, v25);
    else
      std::string::operator=(*((std::string **)this + 14), (const std::string *)v25);
  }
LABEL_23:
  if (*((_BYTE *)a2 + 120))
    *((_BYTE *)this + 120) = 1;
  v28 = (_DWORD *)((char *)a2 + 140);
  v27 = *((_DWORD *)a2 + 35);
  if (v27 > 879)
  {
    if (v27 <= 1139)
    {
      if (v27 <= 994)
      {
        if (v27 <= 939)
        {
          if (v27 <= 904)
          {
            if (v27 <= 889)
            {
              if (v27 == 880)
              {
                v265 = CoreML::Specification::NeuralNetworkLayer::mutable_addbroadcastable(this);
                v33 = v265;
                if (*v28 != 880)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v265);
                  v34 = &CoreML::Specification::_AddBroadcastableLayerParams_default_instance_;
                  goto LABEL_542;
                }
              }
              else
              {
                if (v27 != 885)
                  return;
                v104 = CoreML::Specification::NeuralNetworkLayer::mutable_powbroadcastable(this);
                v33 = v104;
                if (*v28 != 885)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v104);
                  v34 = &CoreML::Specification::_PowBroadcastableLayerParams_default_instance_;
                  goto LABEL_542;
                }
              }
            }
            else
            {
              switch(v27)
              {
                case 890:
                  v166 = CoreML::Specification::NeuralNetworkLayer::mutable_dividebroadcastable(this);
                  v33 = v166;
                  if (*v28 != 890)
                  {
                    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v166);
                    v34 = &CoreML::Specification::_DivideBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                case 895:
                  v167 = CoreML::Specification::NeuralNetworkLayer::mutable_floordivbroadcastable(this);
                  v33 = v167;
                  if (*v28 != 895)
                  {
                    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v167);
                    v34 = &CoreML::Specification::_FloorDivBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                case 900:
                  v32 = CoreML::Specification::NeuralNetworkLayer::mutable_multiplybroadcastable(this);
                  v33 = v32;
                  if (*v28 != 900)
                  {
                    CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v32);
                    v34 = &CoreML::Specification::_MultiplyBroadcastableLayerParams_default_instance_;
                    goto LABEL_542;
                  }
                  break;
                default:
                  return;
              }
            }
            goto LABEL_541;
          }
          if (v27 <= 924)
          {
            if (v27 == 905)
            {
              v289 = CoreML::Specification::NeuralNetworkLayer::mutable_subtractbroadcastable(this);
              v33 = v289;
              if (*v28 != 905)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v289);
                v34 = &CoreML::Specification::_SubtractBroadcastableLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            }
            if (v27 != 920)
              return;
            v132 = CoreML::Specification::NeuralNetworkLayer::mutable_tile(this);
            v67 = (uint64_t *)v132;
            if (*v28 == 920)
            {
              v68 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v132);
              v68 = &CoreML::Specification::_TileLayerParams_default_instance_;
            }
            goto LABEL_572;
          }
          switch(v27)
          {
            case 925:
              v222 = CoreML::Specification::NeuralNetworkLayer::mutable_stack(this);
              v122 = (std::string *)v222;
              if (*v28 == 925)
              {
                v123 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v222);
                v123 = &CoreML::Specification::_StackLayerParams_default_instance_;
              }
              break;
            case 930:
              v223 = CoreML::Specification::NeuralNetworkLayer::mutable_gather(this);
              v122 = (std::string *)v223;
              if (*v28 == 930)
              {
                v123 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v223);
                v123 = &CoreML::Specification::_GatherLayerParams_default_instance_;
              }
              break;
            case 935:
              v76 = CoreML::Specification::NeuralNetworkLayer::mutable_scatter(this);
              v77 = (std::string *)v76;
              if (*v28 == 935)
              {
                v78 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v76);
                v78 = &CoreML::Specification::_ScatterLayerParams_default_instance_;
              }
              goto LABEL_578;
            default:
              return;
          }
LABEL_602:
          CoreML::Specification::SplitLayerParams::MergeFrom(v122, (const CoreML::Specification::SplitLayerParams *)v123);
          return;
        }
        if (v27 <= 959)
        {
          switch(v27)
          {
            case 945:
              v56 = CoreML::Specification::NeuralNetworkLayer::mutable_scatternd(this);
              v57 = (std::string *)v56;
              if (*v28 == 945)
              {
                v58 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v56);
                v58 = &CoreML::Specification::_ScatterNDLayerParams_default_instance_;
              }
              goto LABEL_566;
            case 946:
            case 947:
            case 948:
            case 949:
            case 951:
            case 953:
              return;
            case 950:
              v194 = CoreML::Specification::NeuralNetworkLayer::mutable_softmaxnd(this);
              v122 = (std::string *)v194;
              if (*v28 == 950)
              {
                v123 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v194);
                v123 = &CoreML::Specification::_SoftmaxNDLayerParams_default_instance_;
              }
              goto LABEL_602;
            case 952:
              v195 = CoreML::Specification::NeuralNetworkLayer::mutable_gatheralongaxis(this);
              v122 = (std::string *)v195;
              if (*v28 == 952)
              {
                v123 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v195);
                v123 = &CoreML::Specification::_GatherAlongAxisLayerParams_default_instance_;
              }
              goto LABEL_602;
            case 954:
              v196 = CoreML::Specification::NeuralNetworkLayer::mutable_scatteralongaxis(this);
              v77 = (std::string *)v196;
              if (*v28 == 954)
              {
                v78 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v196);
                v78 = &CoreML::Specification::_ScatterAlongAxisLayerParams_default_instance_;
              }
              goto LABEL_578;
            default:
              if (v27 != 940)
                return;
              v193 = CoreML::Specification::NeuralNetworkLayer::mutable_gathernd(this);
              v33 = v193;
              if (*v28 == 940)
                goto LABEL_541;
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v193);
              v34 = &CoreML::Specification::_GatherNDLayerParams_default_instance_;
              break;
          }
          goto LABEL_542;
        }
        if (v27 > 974)
        {
          if (v27 == 975)
          {
            v240 = CoreML::Specification::NeuralNetworkLayer::mutable_splitnd(this);
            v241 = (uint64_t *)v240;
            if (*v28 == 975)
            {
              v242 = (const CoreML::Specification::SplitNDLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v240);
              v242 = (const CoreML::Specification::SplitNDLayerParams *)&CoreML::Specification::_SplitNDLayerParams_default_instance_;
            }
            CoreML::Specification::SplitNDLayerParams::MergeFrom(v241, v242);
            return;
          }
          if (v27 != 980)
          {
            if (v27 != 985)
              return;
            v92 = CoreML::Specification::NeuralNetworkLayer::mutable_transpose(this);
            v67 = (uint64_t *)v92;
            if (*v28 == 985)
            {
              v68 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v92);
              v68 = &CoreML::Specification::_TransposeLayerParams_default_instance_;
            }
            goto LABEL_572;
          }
          v243 = CoreML::Specification::NeuralNetworkLayer::mutable_concatnd(this);
          v45 = (std::string *)v243;
          if (*v28 == 980)
          {
            v46 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v243);
            v46 = &CoreML::Specification::_ConcatNDLayerParams_default_instance_;
          }
LABEL_558:
          CoreML::Specification::ConcatNDLayerParams::MergeFrom(v45, (const CoreML::Specification::ConcatNDLayerParams *)v46);
          return;
        }
        if (v27 == 960)
        {
          v301 = CoreML::Specification::NeuralNetworkLayer::mutable_reverse(this);
          v302 = (uint64_t *)v301;
          if (*v28 == 960)
          {
            v303 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v301);
            v303 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedBools *)&CoreML::Specification::_ReverseLayerParams_default_instance_;
          }
          CoreML::Specification::MILSpec::TensorValue_RepeatedBools::MergeFrom(v302, v303);
          return;
        }
        if (v27 != 965)
          return;
        v148 = CoreML::Specification::NeuralNetworkLayer::mutable_reverseseq(this);
        v137 = (std::string *)v148;
        if (*v28 == 965)
        {
          v138 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v148);
          v138 = &CoreML::Specification::_ReverseSeqLayerParams_default_instance_;
        }
LABEL_612:
        CoreML::Specification::Int64Range::MergeFrom(v137, (const CoreML::Specification::Int64Range *)v138);
        return;
      }
      if (v27 <= 1079)
      {
        if (v27 > 1024)
        {
          if (v27 > 1044)
          {
            switch(v27)
            {
              case 1045:
                v230 = CoreML::Specification::NeuralNetworkLayer::mutable_batchedmatmul(this);
                v231 = v230;
                if (*v28 == 1045)
                {
                  v232 = (const CoreML::Specification::BatchedMatMulLayerParams *)*((_QWORD *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v230);
                  v232 = (const CoreML::Specification::BatchedMatMulLayerParams *)&CoreML::Specification::_BatchedMatMulLayerParams_default_instance_;
                }
                CoreML::Specification::BatchedMatMulLayerParams::MergeFrom(v231, v232);
                return;
              case 1065:
                v233 = CoreML::Specification::NeuralNetworkLayer::mutable_getshape(this);
                v33 = v233;
                if (*v28 != 1065)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v233);
                  v34 = &CoreML::Specification::_GetShapeLayerParams_default_instance_;
                  goto LABEL_542;
                }
                goto LABEL_541;
              case 1070:
                v84 = CoreML::Specification::NeuralNetworkLayer::mutable_loadconstantnd(this);
                v85 = v84;
                if (*v28 == 1070)
                {
                  v86 = (const CoreML::Specification::LoadConstantNDLayerParams *)*((_QWORD *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v84);
                  v86 = (const CoreML::Specification::LoadConstantNDLayerParams *)&CoreML::Specification::_LoadConstantNDLayerParams_default_instance_;
                }
                CoreML::Specification::LoadConstantNDLayerParams::MergeFrom(v85, v86);
                break;
            }
            return;
          }
          if (v27 != 1025)
          {
            if (v27 == 1040)
            {
              v142 = CoreML::Specification::NeuralNetworkLayer::mutable_embeddingnd(this);
              v143 = v142;
              if (*v28 == 1040)
              {
                v144 = (const CoreML::Specification::EmbeddingNDLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v142);
                v144 = (const CoreML::Specification::EmbeddingNDLayerParams *)&CoreML::Specification::_EmbeddingNDLayerParams_default_instance_;
              }
              CoreML::Specification::EmbeddingNDLayerParams::MergeFrom(v143, v144);
            }
            return;
          }
          v295 = CoreML::Specification::NeuralNetworkLayer::mutable_argmax(this);
          v45 = (std::string *)v295;
          if (*v28 == 1025)
          {
            v46 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v295);
            v46 = &CoreML::Specification::_ArgMaxLayerParams_default_instance_;
          }
        }
        else
        {
          if (v27 <= 1004)
          {
            if (v27 == 995)
            {
              v273 = CoreML::Specification::NeuralNetworkLayer::mutable_slicestatic(this);
              v274 = (uint64_t *)v273;
              if (*v28 == 995)
              {
                v275 = (const CoreML::Specification::SliceStaticLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v273);
                v275 = (const CoreML::Specification::SliceStaticLayerParams *)&CoreML::Specification::_SliceStaticLayerParams_default_instance_;
              }
              CoreML::Specification::SliceStaticLayerParams::MergeFrom(v274, v275);
            }
            else if (v27 == 1000)
            {
              v110 = CoreML::Specification::NeuralNetworkLayer::mutable_slicedynamic(this);
              v111 = (uint64_t *)v110;
              if (*v28 == 1000)
              {
                v112 = (const CoreML::Specification::SliceDynamicLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v110);
                v112 = (const CoreML::Specification::SliceDynamicLayerParams *)&CoreML::Specification::_SliceDynamicLayerParams_default_instance_;
              }
              CoreML::Specification::SliceDynamicLayerParams::MergeFrom(v111, v112);
            }
            return;
          }
          if (v27 == 1005)
          {
            v174 = CoreML::Specification::NeuralNetworkLayer::mutable_slidingwindows(this);
            v175 = (std::string *)v174;
            if (*v28 == 1005)
            {
              v176 = (const CoreML::Specification::SlidingWindowsLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v174);
              v176 = (const CoreML::Specification::SlidingWindowsLayerParams *)&CoreML::Specification::_SlidingWindowsLayerParams_default_instance_;
            }
            CoreML::Specification::SlidingWindowsLayerParams::MergeFrom(v175, v176);
            return;
          }
          if (v27 == 1015)
          {
            v177 = CoreML::Specification::NeuralNetworkLayer::mutable_topk(this);
            v178 = (std::string *)v177;
            if (*v28 == 1015)
            {
              v179 = (const CoreML::Specification::TopKLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v177);
              v179 = (const CoreML::Specification::TopKLayerParams *)&CoreML::Specification::_TopKLayerParams_default_instance_;
            }
            CoreML::Specification::TopKLayerParams::MergeFrom(v178, v179);
            return;
          }
          if (v27 != 1020)
            return;
          v44 = CoreML::Specification::NeuralNetworkLayer::mutable_argmin(this);
          v45 = (std::string *)v44;
          if (*v28 == 1020)
          {
            v46 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v44);
            v46 = &CoreML::Specification::_ArgMinLayerParams_default_instance_;
          }
        }
        goto LABEL_558;
      }
      if (v27 > 1109)
      {
        if (v27 <= 1124)
        {
          if (v27 != 1110)
          {
            if (v27 == 1120)
            {
              v153 = CoreML::Specification::NeuralNetworkLayer::mutable_squeeze(this);
              v154 = (uint64_t *)v153;
              if (*v28 == 1120)
              {
                v155 = (const CoreML::Specification::SqueezeLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v153);
                v155 = (const CoreML::Specification::SqueezeLayerParams *)&CoreML::Specification::_SqueezeLayerParams_default_instance_;
              }
              CoreML::Specification::SqueezeLayerParams::MergeFrom(v154, v155);
            }
            return;
          }
          v308 = CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttodynamic(this);
          v33 = v308;
          if (*v28 != 1110)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v308);
            v34 = &CoreML::Specification::_BroadcastToDynamicLayerParams_default_instance_;
LABEL_542:
            v309 = v34[1];
            if ((v309 & 1) != 0)
              google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)v33 + 1, v309 & 0xFFFFFFFFFFFFFFFELL);
            return;
          }
          goto LABEL_541;
        }
        if (v27 == 1125)
        {
          v252 = CoreML::Specification::NeuralNetworkLayer::mutable_expanddims(this);
          v67 = (uint64_t *)v252;
          if (*v28 == 1125)
          {
            v68 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v252);
            v68 = &CoreML::Specification::_ExpandDimsLayerParams_default_instance_;
          }
          goto LABEL_572;
        }
        if (v27 != 1130)
        {
          if (v27 != 1135)
            return;
          v95 = CoreML::Specification::NeuralNetworkLayer::mutable_reshapelike(this);
          v33 = v95;
          if (*v28 != 1135)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v95);
            v34 = &CoreML::Specification::_ReshapeLikeLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        v253 = CoreML::Specification::NeuralNetworkLayer::mutable_flattento2d(this);
        v122 = (std::string *)v253;
        if (*v28 == 1130)
        {
          v123 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v253);
          v123 = &CoreML::Specification::_FlattenTo2DLayerParams_default_instance_;
        }
        goto LABEL_602;
      }
      if (v27 <= 1089)
      {
        if (v27 == 1080)
        {
          v283 = CoreML::Specification::NeuralNetworkLayer::mutable_filllike(this);
          v48 = (std::string *)v283;
          if (*v28 == 1080)
          {
            v49 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v283);
            v49 = &CoreML::Specification::_FillLikeLayerParams_default_instance_;
          }
          goto LABEL_560;
        }
        if (v27 == 1085)
        {
          v124 = CoreML::Specification::NeuralNetworkLayer::mutable_fillstatic(this);
          v125 = (uint64_t *)v124;
          if (*v28 == 1085)
          {
            v126 = (const CoreML::Specification::FillStaticLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v124);
            v126 = (const CoreML::Specification::FillStaticLayerParams *)&CoreML::Specification::_FillStaticLayerParams_default_instance_;
          }
          CoreML::Specification::FillStaticLayerParams::MergeFrom(v125, v126);
        }
        return;
      }
      if (v27 == 1090)
      {
        v213 = CoreML::Specification::NeuralNetworkLayer::mutable_filldynamic(this);
        v48 = (std::string *)v213;
        if (*v28 == 1090)
        {
          v49 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v213);
          v49 = &CoreML::Specification::_FillDynamicLayerParams_default_instance_;
        }
        goto LABEL_560;
      }
      if (v27 == 1100)
      {
        v214 = CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttolike(this);
        v33 = v214;
        if (*v28 != 1100)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v214);
          v34 = &CoreML::Specification::_BroadcastToLikeLayerParams_default_instance_;
          goto LABEL_542;
        }
        goto LABEL_541;
      }
      if (v27 != 1105)
        return;
      v66 = CoreML::Specification::NeuralNetworkLayer::mutable_broadcasttostatic(this);
      v67 = (uint64_t *)v66;
      if (*v28 == 1105)
      {
        v68 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v66);
        v68 = &CoreML::Specification::_BroadcastToStaticLayerParams_default_instance_;
      }
LABEL_572:
      CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom(v67, (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)v68);
      return;
    }
    if (v27 > 1274)
    {
      if (v27 > 1349)
      {
        if (v27 <= 1454)
        {
          switch(v27)
          {
            case 1350:
              v256 = CoreML::Specification::NeuralNetworkLayer::mutable_layernormalization(this);
              v257 = v256;
              if (*v28 == 1350)
              {
                v258 = (const CoreML::Specification::LayerNormalizationLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v256);
                v258 = (const CoreML::Specification::LayerNormalizationLayerParams *)&CoreML::Specification::_LayerNormalizationLayerParams_default_instance_;
              }
              CoreML::Specification::LayerNormalizationLayerParams::MergeFrom(v257, v258);
              break;
            case 1400:
              v259 = CoreML::Specification::NeuralNetworkLayer::mutable_nonmaximumsuppression(this);
              v260 = (std::string *)v259;
              if (*v28 == 1400)
              {
                v261 = (const CoreML::Specification::NonMaximumSuppressionLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v259);
                v261 = (const CoreML::Specification::NonMaximumSuppressionLayerParams *)&CoreML::Specification::_NonMaximumSuppressionLayerParams_default_instance_;
              }
              CoreML::Specification::NonMaximumSuppressionLayerParams::MergeFrom(v260, v261);
              break;
            case 1450:
              v98 = CoreML::Specification::NeuralNetworkLayer::mutable_onehot(this);
              v99 = (std::string *)v98;
              if (*v28 == 1450)
              {
                v100 = (const CoreML::Specification::OneHotLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v98);
                v100 = (const CoreML::Specification::OneHotLayerParams *)&CoreML::Specification::_OneHotLayerParams_default_instance_;
              }
              CoreML::Specification::OneHotLayerParams::MergeFrom(v99, v100);
              break;
          }
        }
        else
        {
          switch(v27)
          {
            case 1455:
              v60 = CoreML::Specification::NeuralNetworkLayer::mutable_cumsum(this);
              v61 = (std::string *)v60;
              if (*v28 == 1455)
              {
                v62 = (const CoreML::Specification::CumSumLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v60);
                v62 = (const CoreML::Specification::CumSumLayerParams *)&CoreML::Specification::_CumSumLayerParams_default_instance_;
              }
              CoreML::Specification::CumSumLayerParams::MergeFrom(v61, v62);
              break;
            case 1460:
              v199 = CoreML::Specification::NeuralNetworkLayer::mutable_clampedrelu(this);
              v134 = (std::string *)v199;
              if (*v28 == 1460)
              {
                v135 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v199);
                v135 = &CoreML::Specification::_ClampedReLULayerParams_default_instance_;
              }
              goto LABEL_610;
            case 1461:
              v200 = CoreML::Specification::NeuralNetworkLayer::mutable_argsort(this);
              v45 = (std::string *)v200;
              if (*v28 == 1461)
              {
                v46 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v200);
                v46 = &CoreML::Specification::_ArgSortLayerParams_default_instance_;
              }
              goto LABEL_558;
            case 1465:
              v201 = CoreML::Specification::NeuralNetworkLayer::mutable_pooling3d(this);
              v202 = (std::string *)v201;
              if (*v28 == 1465)
              {
                v203 = (const CoreML::Specification::Pooling3DLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v201);
                v203 = (const CoreML::Specification::Pooling3DLayerParams *)&CoreML::Specification::_Pooling3DLayerParams_default_instance_;
              }
              CoreML::Specification::Pooling3DLayerParams::MergeFrom(v202, v203);
              break;
            case 1466:
              v204 = CoreML::Specification::NeuralNetworkLayer::mutable_globalpooling3d(this);
              v57 = (std::string *)v204;
              if (*v28 == 1466)
              {
                v58 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v204);
                v58 = &CoreML::Specification::_GlobalPooling3DLayerParams_default_instance_;
              }
              goto LABEL_566;
            case 1470:
              v205 = CoreML::Specification::NeuralNetworkLayer::mutable_slicebysize(this);
              v137 = (std::string *)v205;
              if (*v28 == 1470)
              {
                v138 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v205);
                v138 = &CoreML::Specification::_SliceBySizeLayerParams_default_instance_;
              }
              goto LABEL_612;
            case 1471:
              v206 = CoreML::Specification::NeuralNetworkLayer::mutable_convolution3d(this);
              v207 = v206;
              if (*v28 == 1471)
              {
                v208 = (const CoreML::Specification::Convolution3DLayerParams *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v206);
                v208 = (const CoreML::Specification::Convolution3DLayerParams *)&CoreML::Specification::_Convolution3DLayerParams_default_instance_;
              }
              CoreML::Specification::Convolution3DLayerParams::MergeFrom(v207, v208);
              break;
            default:
              return;
          }
        }
        return;
      }
      if (v27 > 1312)
      {
        if (v27 > 1319)
        {
          switch(v27)
          {
            case 1320:
              v226 = CoreML::Specification::NeuralNetworkLayer::mutable_lowertriangular(this);
              v122 = (std::string *)v226;
              if (*v28 == 1320)
              {
                v123 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v226);
                v123 = &CoreML::Specification::_LowerTriangularLayerParams_default_instance_;
              }
              break;
            case 1325:
              v227 = CoreML::Specification::NeuralNetworkLayer::mutable_uppertriangular(this);
              v122 = (std::string *)v227;
              if (*v28 == 1325)
              {
                v123 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v227);
                v123 = &CoreML::Specification::_UpperTriangularLayerParams_default_instance_;
              }
              break;
            case 1330:
              v80 = CoreML::Specification::NeuralNetworkLayer::mutable_wherebroadcastable(this);
              v33 = v80;
              if (*v28 != 1330)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v80);
                v34 = &CoreML::Specification::_WhereBroadcastableLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            default:
              return;
          }
          goto LABEL_602;
        }
        if (v27 == 1313)
        {
          v291 = CoreML::Specification::NeuralNetworkLayer::mutable_wherenonzero(this);
          v33 = v291;
          if (*v28 != 1313)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v291);
            v34 = &CoreML::Specification::_WhereNonZeroLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        if (v27 != 1315)
          return;
        v136 = CoreML::Specification::NeuralNetworkLayer::mutable_matrixbandpart(this);
        v137 = (std::string *)v136;
        if (*v28 == 1315)
        {
          v138 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v136);
          v138 = &CoreML::Specification::_MatrixBandPartLayerParams_default_instance_;
        }
        goto LABEL_612;
      }
      if (v27 <= 1284)
      {
        if (v27 == 1275)
        {
          v269 = CoreML::Specification::NeuralNetworkLayer::mutable_reduceprod(this);
          v39 = (uint64_t *)v269;
          if (*v28 == 1275)
          {
            v40 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v269);
            v40 = &CoreML::Specification::_ReduceProdLayerParams_default_instance_;
          }
        }
        else
        {
          if (v27 != 1280)
            return;
          v108 = CoreML::Specification::NeuralNetworkLayer::mutable_reducemean(this);
          v39 = (uint64_t *)v108;
          if (*v28 == 1280)
          {
            v40 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v108);
            v40 = &CoreML::Specification::_ReduceMeanLayerParams_default_instance_;
          }
        }
      }
      else
      {
        switch(v27)
        {
          case 1285:
            v170 = CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsum(this);
            v39 = (uint64_t *)v170;
            if (*v28 == 1285)
            {
              v40 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v170);
              v40 = &CoreML::Specification::_ReduceLogSumLayerParams_default_instance_;
            }
            break;
          case 1290:
            v171 = CoreML::Specification::NeuralNetworkLayer::mutable_reducesumsquare(this);
            v39 = (uint64_t *)v171;
            if (*v28 == 1290)
            {
              v40 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v171);
              v40 = &CoreML::Specification::_ReduceSumSquareLayerParams_default_instance_;
            }
            break;
          case 1295:
            v38 = CoreML::Specification::NeuralNetworkLayer::mutable_reducelogsumexp(this);
            v39 = (uint64_t *)v38;
            if (*v28 == 1295)
            {
              v40 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v38);
              v40 = &CoreML::Specification::_ReduceLogSumExpLayerParams_default_instance_;
            }
            break;
          default:
            return;
        }
      }
LABEL_554:
      CoreML::Specification::ReduceL1LayerParams::MergeFrom(v39, (const CoreML::Specification::ReduceL1LayerParams *)v40);
      return;
    }
    if (v27 > 1199)
    {
      if (v27 > 1249)
      {
        if (v27 <= 1259)
        {
          if (v27 == 1250)
          {
            v297 = CoreML::Specification::NeuralNetworkLayer::mutable_reducel1(this);
            v39 = (uint64_t *)v297;
            if (*v28 == 1250)
            {
              v40 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v297);
              v40 = &CoreML::Specification::_ReduceL1LayerParams_default_instance_;
            }
          }
          else
          {
            if (v27 != 1255)
              return;
            v146 = CoreML::Specification::NeuralNetworkLayer::mutable_reducel2(this);
            v39 = (uint64_t *)v146;
            if (*v28 == 1255)
            {
              v40 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v146);
              v40 = &CoreML::Specification::_ReduceL2LayerParams_default_instance_;
            }
          }
        }
        else
        {
          switch(v27)
          {
            case 1260:
              v236 = CoreML::Specification::NeuralNetworkLayer::mutable_reducemax(this);
              v39 = (uint64_t *)v236;
              if (*v28 == 1260)
              {
                v40 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v236);
                v40 = &CoreML::Specification::_ReduceMaxLayerParams_default_instance_;
              }
              break;
            case 1265:
              v237 = CoreML::Specification::NeuralNetworkLayer::mutable_reducemin(this);
              v39 = (uint64_t *)v237;
              if (*v28 == 1265)
              {
                v40 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v237);
                v40 = &CoreML::Specification::_ReduceMinLayerParams_default_instance_;
              }
              break;
            case 1270:
              v88 = CoreML::Specification::NeuralNetworkLayer::mutable_reducesum(this);
              v39 = (uint64_t *)v88;
              if (*v28 == 1270)
              {
                v40 = (uint64_t *)*((_QWORD *)a2 + 16);
              }
              else
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v88);
                v40 = &CoreML::Specification::_ReduceSumLayerParams_default_instance_;
              }
              break;
            default:
              return;
          }
        }
        goto LABEL_554;
      }
      if (v27 > 1214)
      {
        if (v27 == 1215)
        {
          v183 = CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullistatic(this);
          v184 = (uint64_t *)v183;
          if (*v28 == 1215)
          {
            v185 = (const CoreML::Specification::RandomBernoulliStaticLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v183);
            v185 = (const CoreML::Specification::RandomBernoulliStaticLayerParams *)&CoreML::Specification::_RandomBernoulliStaticLayerParams_default_instance_;
          }
          CoreML::Specification::RandomBernoulliStaticLayerParams::MergeFrom(v184, v185);
          return;
        }
        if (v27 != 1220)
        {
          if (v27 == 1230)
          {
            v50 = CoreML::Specification::NeuralNetworkLayer::mutable_categoricaldistribution(this);
            v51 = (std::string *)v50;
            if (*v28 == 1230)
            {
              v52 = (const CoreML::Specification::CategoricalDistributionLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v50);
              v52 = (const CoreML::Specification::CategoricalDistributionLayerParams *)&CoreML::Specification::_CategoricalDistributionLayerParams_default_instance_;
            }
            CoreML::Specification::CategoricalDistributionLayerParams::MergeFrom(v51, v52);
          }
          return;
        }
        v186 = CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullidynamic(this);
        v115 = (std::string *)v186;
        if (*v28 == 1220)
        {
          v116 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v186);
          v116 = &CoreML::Specification::_RandomBernoulliDynamicLayerParams_default_instance_;
        }
LABEL_598:
        CoreML::Specification::RandomBernoulliLikeLayerParams::MergeFrom(v115, (const CoreML::Specification::RandomBernoulliLikeLayerParams *)v116);
        return;
      }
      if (v27 != 1200)
      {
        if (v27 != 1210)
          return;
        v114 = CoreML::Specification::NeuralNetworkLayer::mutable_randombernoullilike(this);
        v115 = (std::string *)v114;
        if (*v28 == 1210)
        {
          v116 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v114);
          v116 = &CoreML::Specification::_RandomBernoulliLikeLayerParams_default_instance_;
        }
        goto LABEL_598;
      }
      v277 = CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformdynamic(this);
      v216 = (std::string *)v277;
      if (*v28 == 1200)
      {
        v217 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v277);
        v217 = &CoreML::Specification::_RandomUniformDynamicLayerParams_default_instance_;
      }
LABEL_664:
      CoreML::Specification::RandomNormalLikeLayerParams::MergeFrom(v216, (const CoreML::Specification::RandomNormalLikeLayerParams *)v217);
      return;
    }
    if (v27 <= 1169)
    {
      if (v27 > 1149)
      {
        if (v27 != 1150)
        {
          if (v27 == 1155)
          {
            v156 = CoreML::Specification::NeuralNetworkLayer::mutable_constantpad(this);
            v157 = (uint64_t *)v156;
            if (*v28 == 1155)
            {
              v158 = (const CoreML::Specification::ConstantPaddingLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v156);
              v158 = (const CoreML::Specification::ConstantPaddingLayerParams *)&CoreML::Specification::_ConstantPaddingLayerParams_default_instance_;
            }
            CoreML::Specification::ConstantPaddingLayerParams::MergeFrom(v157, v158);
          }
          return;
        }
        v310 = CoreML::Specification::NeuralNetworkLayer::mutable_rankpreservingreshape(this);
        v67 = (uint64_t *)v310;
        if (*v28 == 1150)
        {
          v68 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v310);
          v68 = &CoreML::Specification::_RankPreservingReshapeLayerParams_default_instance_;
        }
      }
      else
      {
        if (v27 != 1140)
        {
          if (v27 != 1145)
            return;
          v96 = CoreML::Specification::NeuralNetworkLayer::mutable_reshapedynamic(this);
          v33 = v96;
          if (*v28 != 1145)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v96);
            v34 = &CoreML::Specification::_ReshapeDynamicLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        }
        v254 = CoreML::Specification::NeuralNetworkLayer::mutable_reshapestatic(this);
        v67 = (uint64_t *)v254;
        if (*v28 == 1140)
        {
          v68 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v254);
          v68 = &CoreML::Specification::_ReshapeStaticLayerParams_default_instance_;
        }
      }
      goto LABEL_572;
    }
    if (v27 <= 1179)
    {
      if (v27 == 1170)
      {
        v284 = CoreML::Specification::NeuralNetworkLayer::mutable_randomnormallike(this);
        v216 = (std::string *)v284;
        if (*v28 == 1170)
        {
          v217 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v284);
          v217 = &CoreML::Specification::_RandomNormalLikeLayerParams_default_instance_;
        }
        goto LABEL_664;
      }
      if (v27 != 1175)
        return;
      v127 = CoreML::Specification::NeuralNetworkLayer::mutable_randomnormalstatic(this);
      v70 = (uint64_t *)v127;
      if (*v28 == 1175)
      {
        v71 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v127);
        v71 = &CoreML::Specification::_RandomNormalStaticLayerParams_default_instance_;
      }
    }
    else
    {
      if (v27 == 1180)
      {
        v215 = CoreML::Specification::NeuralNetworkLayer::mutable_randomnormaldynamic(this);
        v216 = (std::string *)v215;
        if (*v28 == 1180)
        {
          v217 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v215);
          v217 = &CoreML::Specification::_RandomNormalDynamicLayerParams_default_instance_;
        }
        goto LABEL_664;
      }
      if (v27 == 1190)
      {
        v218 = CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformlike(this);
        v216 = (std::string *)v218;
        if (*v28 == 1190)
        {
          v217 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v218);
          v217 = &CoreML::Specification::_RandomUniformLikeLayerParams_default_instance_;
        }
        goto LABEL_664;
      }
      if (v27 != 1195)
        return;
      v69 = CoreML::Specification::NeuralNetworkLayer::mutable_randomuniformstatic(this);
      v70 = (uint64_t *)v69;
      if (*v28 == 1195)
      {
        v71 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v69);
        v71 = &CoreML::Specification::_RandomUniformStaticLayerParams_default_instance_;
      }
    }
    CoreML::Specification::RandomNormalStaticLayerParams::MergeFrom(v70, (const CoreML::Specification::RandomNormalStaticLayerParams *)v71);
    return;
  }
  if (v27 > 604)
  {
    if (v27 <= 759)
    {
      if (v27 > 684)
      {
        if (v27 > 729)
        {
          if (v27 <= 739)
          {
            if (v27 == 730)
            {
              v304 = CoreML::Specification::NeuralNetworkLayer::mutable_asin(this);
              v33 = v304;
              if (*v28 != 730)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v304);
                v34 = &CoreML::Specification::_AsinLayerParams_default_instance_;
                goto LABEL_542;
              }
            }
            else
            {
              if (v27 != 735)
                return;
              v149 = CoreML::Specification::NeuralNetworkLayer::mutable_acos(this);
              v33 = v149;
              if (*v28 != 735)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v149);
                v34 = &CoreML::Specification::_AcosLayerParams_default_instance_;
                goto LABEL_542;
              }
            }
          }
          else
          {
            switch(v27)
            {
              case 740:
                v244 = CoreML::Specification::NeuralNetworkLayer::mutable_atan(this);
                v33 = v244;
                if (*v28 != 740)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v244);
                  v34 = &CoreML::Specification::_AtanLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              case 750:
                v245 = CoreML::Specification::NeuralNetworkLayer::mutable_sinh(this);
                v33 = v245;
                if (*v28 != 750)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v245);
                  v34 = &CoreML::Specification::_SinhLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              case 755:
                v93 = CoreML::Specification::NeuralNetworkLayer::mutable_cosh(this);
                v33 = v93;
                if (*v28 != 755)
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v93);
                  v34 = &CoreML::Specification::_CoshLayerParams_default_instance_;
                  goto LABEL_542;
                }
                break;
              default:
                return;
            }
          }
        }
        else if (v27 <= 709)
        {
          if (v27 == 685)
          {
            v281 = CoreML::Specification::NeuralNetworkLayer::mutable_round(this);
            v33 = v281;
            if (*v28 != 685)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v281);
              v34 = &CoreML::Specification::_RoundLayerParams_default_instance_;
              goto LABEL_542;
            }
          }
          else
          {
            if (v27 != 700)
              return;
            v120 = CoreML::Specification::NeuralNetworkLayer::mutable_exp2(this);
            v33 = v120;
            if (*v28 != 700)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v120);
              v34 = &CoreML::Specification::_Exp2LayerParams_default_instance_;
              goto LABEL_542;
            }
          }
        }
        else
        {
          switch(v27)
          {
            case 710:
              v197 = CoreML::Specification::NeuralNetworkLayer::mutable_sin(this);
              v33 = v197;
              if (*v28 != 710)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v197);
                v34 = &CoreML::Specification::_SinLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            case 715:
              v198 = CoreML::Specification::NeuralNetworkLayer::mutable_cos(this);
              v33 = v198;
              if (*v28 != 715)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v198);
                v34 = &CoreML::Specification::_CosLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            case 720:
              v59 = CoreML::Specification::NeuralNetworkLayer::mutable_tan(this);
              v33 = v59;
              if (*v28 != 720)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v59);
                v34 = &CoreML::Specification::_TanLayerParams_default_instance_;
                goto LABEL_542;
              }
              break;
            default:
              return;
          }
        }
        goto LABEL_541;
      }
      if (v27 > 639)
      {
        if (v27 <= 664)
        {
          if (v27 == 640)
          {
            v290 = CoreML::Specification::NeuralNetworkLayer::mutable_rangedynamic(this);
            v134 = (std::string *)v290;
            if (*v28 == 640)
            {
              v135 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v290);
              v135 = &CoreML::Specification::_RangeDynamicLayerParams_default_instance_;
            }
          }
          else
          {
            if (v27 != 660)
              return;
            v133 = CoreML::Specification::NeuralNetworkLayer::mutable_clip(this);
            v134 = (std::string *)v133;
            if (*v28 == 660)
            {
              v135 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v133);
              v135 = &CoreML::Specification::_ClipLayerParams_default_instance_;
            }
          }
LABEL_610:
          CoreML::Specification::RangeDynamicLayerParams::MergeFrom(v134, (const CoreML::Specification::RangeDynamicLayerParams *)v135);
          return;
        }
        switch(v27)
        {
          case 665:
            v224 = CoreML::Specification::NeuralNetworkLayer::mutable_ceil(this);
            v33 = v224;
            if (*v28 != 665)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v224);
              v34 = &CoreML::Specification::_CeilLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 670:
            v225 = CoreML::Specification::NeuralNetworkLayer::mutable_floor(this);
            v33 = v225;
            if (*v28 != 670)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v225);
              v34 = &CoreML::Specification::_FloorLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 680:
            v79 = CoreML::Specification::NeuralNetworkLayer::mutable_sign(this);
            v33 = v79;
            if (*v28 != 680)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v79);
              v34 = &CoreML::Specification::_SignLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          default:
            return;
        }
        goto LABEL_541;
      }
      if (v27 <= 619)
      {
        if (v27 == 605)
        {
          v266 = CoreML::Specification::NeuralNetworkLayer::mutable_branch(this);
          v267 = v266;
          if (*v28 == 605)
          {
            v268 = (const CoreML::Specification::BranchLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v266);
            v268 = (const CoreML::Specification::BranchLayerParams *)&CoreML::Specification::_BranchLayerParams_default_instance_;
          }
          CoreML::Specification::BranchLayerParams::MergeFrom(v267, v268);
        }
        else if (v27 == 615)
        {
          v105 = CoreML::Specification::NeuralNetworkLayer::mutable_loop(this);
          v106 = v105;
          if (*v28 == 615)
          {
            v107 = (const CoreML::Specification::LoopLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v105);
            v107 = (const CoreML::Specification::LoopLayerParams *)&CoreML::Specification::_LoopLayerParams_default_instance_;
          }
          CoreML::Specification::LoopLayerParams::MergeFrom(v106, v107);
        }
        return;
      }
      if (v27 == 620)
      {
        v168 = CoreML::Specification::NeuralNetworkLayer::mutable_loopbreak(this);
        v33 = v168;
        if (*v28 != 620)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v168);
          v34 = &CoreML::Specification::_LoopBreakLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      else
      {
        if (v27 != 625)
        {
          if (v27 == 635)
          {
            v35 = CoreML::Specification::NeuralNetworkLayer::mutable_rangestatic(this);
            v36 = (std::string *)v35;
            if (*v28 == 635)
            {
              v37 = (const CoreML::Specification::RangeStaticLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v35);
              v37 = (const CoreML::Specification::RangeStaticLayerParams *)&CoreML::Specification::_RangeStaticLayerParams_default_instance_;
            }
            CoreML::Specification::RangeStaticLayerParams::MergeFrom(v36, v37);
          }
          return;
        }
        v169 = CoreML::Specification::NeuralNetworkLayer::mutable_loopcontinue(this);
        v33 = v169;
        if (*v28 != 625)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v169);
          v34 = &CoreML::Specification::_LoopContinueLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      goto LABEL_541;
    }
    if (v27 > 824)
    {
      if (v27 <= 849)
      {
        switch(v27)
        {
          case 825:
            v47 = CoreML::Specification::NeuralNetworkLayer::mutable_lessthan(this);
            v48 = (std::string *)v47;
            if (*v28 == 825)
            {
              v49 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v47);
              v49 = &CoreML::Specification::_LessThanLayerParams_default_instance_;
            }
            goto LABEL_560;
          case 826:
          case 828:
          case 829:
          case 831:
            return;
          case 827:
            v180 = CoreML::Specification::NeuralNetworkLayer::mutable_lessequal(this);
            v48 = (std::string *)v180;
            if (*v28 == 827)
            {
              v49 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v180);
              v49 = &CoreML::Specification::_LessEqualLayerParams_default_instance_;
            }
            goto LABEL_560;
          case 830:
            v181 = CoreML::Specification::NeuralNetworkLayer::mutable_greaterthan(this);
            v48 = (std::string *)v181;
            if (*v28 == 830)
            {
              v49 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v181);
              v49 = &CoreML::Specification::_GreaterThanLayerParams_default_instance_;
            }
            goto LABEL_560;
          case 832:
            v182 = CoreML::Specification::NeuralNetworkLayer::mutable_greaterequal(this);
            v48 = (std::string *)v182;
            if (*v28 == 832)
            {
              v49 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v182);
              v49 = &CoreML::Specification::_GreaterEqualLayerParams_default_instance_;
            }
            goto LABEL_560;
          default:
            if (v27 != 840)
            {
              if (v27 != 845)
                return;
              v113 = CoreML::Specification::NeuralNetworkLayer::mutable_logicalxor(this);
              v33 = v113;
              if (*v28 != 845)
              {
                CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v113);
                v34 = &CoreML::Specification::_LogicalXorLayerParams_default_instance_;
                goto LABEL_542;
              }
              goto LABEL_541;
            }
            v276 = CoreML::Specification::NeuralNetworkLayer::mutable_logicalor(this);
            v33 = v276;
            if (*v28 == 840)
              goto LABEL_541;
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v276);
            v34 = &CoreML::Specification::_LogicalOrLayerParams_default_instance_;
            break;
        }
        goto LABEL_542;
      }
      if (v27 <= 864)
      {
        if (v27 == 850)
        {
          v296 = CoreML::Specification::NeuralNetworkLayer::mutable_logicalnot(this);
          v33 = v296;
          if (*v28 != 850)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v296);
            v34 = &CoreML::Specification::_LogicalNotLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 855)
            return;
          v145 = CoreML::Specification::NeuralNetworkLayer::mutable_logicaland(this);
          v33 = v145;
          if (*v28 != 855)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v145);
            v34 = &CoreML::Specification::_LogicalAndLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
      }
      else
      {
        switch(v27)
        {
          case 865:
            v234 = CoreML::Specification::NeuralNetworkLayer::mutable_modbroadcastable(this);
            v33 = v234;
            if (*v28 != 865)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v234);
              v34 = &CoreML::Specification::_ModBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 870:
            v235 = CoreML::Specification::NeuralNetworkLayer::mutable_minbroadcastable(this);
            v33 = v235;
            if (*v28 != 870)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v235);
              v34 = &CoreML::Specification::_MinBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          case 875:
            v87 = CoreML::Specification::NeuralNetworkLayer::mutable_maxbroadcastable(this);
            v33 = v87;
            if (*v28 != 875)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v87);
              v34 = &CoreML::Specification::_MaxBroadcastableLayerParams_default_instance_;
              goto LABEL_542;
            }
            break;
          default:
            return;
        }
      }
      goto LABEL_541;
    }
    if (v27 <= 789)
    {
      if (v27 > 774)
      {
        if (v27 == 775)
        {
          v285 = CoreML::Specification::NeuralNetworkLayer::mutable_acosh(this);
          v33 = v285;
          if (*v28 != 775)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v285);
            v34 = &CoreML::Specification::_AcoshLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 780)
            return;
          v128 = CoreML::Specification::NeuralNetworkLayer::mutable_atanh(this);
          v33 = v128;
          if (*v28 != 780)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v128);
            v34 = &CoreML::Specification::_AtanhLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
      }
      else if (v27 == 760)
      {
        v219 = CoreML::Specification::NeuralNetworkLayer::mutable_tanh(this);
        v33 = v219;
        if (*v28 != 760)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v219);
          v34 = &CoreML::Specification::_TanhLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      else
      {
        if (v27 != 770)
          return;
        v72 = CoreML::Specification::NeuralNetworkLayer::mutable_asinh(this);
        v33 = v72;
        if (*v28 != 770)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v72);
          v34 = &CoreML::Specification::_AsinhLayerParams_default_instance_;
          goto LABEL_542;
        }
      }
      goto LABEL_541;
    }
    if (v27 > 814)
    {
      if (v27 == 815)
      {
        v311 = CoreML::Specification::NeuralNetworkLayer::mutable_equal(this);
        v48 = (std::string *)v311;
        if (*v28 == 815)
        {
          v49 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v311);
          v49 = &CoreML::Specification::_EqualLayerParams_default_instance_;
        }
      }
      else
      {
        if (v27 != 820)
          return;
        v159 = CoreML::Specification::NeuralNetworkLayer::mutable_notequal(this);
        v48 = (std::string *)v159;
        if (*v28 == 820)
        {
          v49 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v159);
          v49 = &CoreML::Specification::_NotEqualLayerParams_default_instance_;
        }
      }
      goto LABEL_560;
    }
    if (v27 == 790)
    {
      v255 = CoreML::Specification::NeuralNetworkLayer::mutable_erf(this);
      v33 = v255;
      if (*v28 != 790)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v255);
        v34 = &CoreML::Specification::_ErfLayerParams_default_instance_;
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    if (v27 != 795)
      return;
    v97 = CoreML::Specification::NeuralNetworkLayer::mutable_gelu(this);
    v57 = (std::string *)v97;
    if (*v28 == 795)
    {
      v58 = (uint64_t *)*((_QWORD *)a2 + 16);
    }
    else
    {
      CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v97);
      v58 = &CoreML::Specification::_GeluLayerParams_default_instance_;
    }
    goto LABEL_566;
  }
  if (v27 > 249)
  {
    if (v27 <= 329)
    {
      if (v27 <= 289)
      {
        if (v27 <= 260)
        {
          if (v27 == 250)
          {
            v270 = CoreML::Specification::NeuralNetworkLayer::mutable_bias(this);
            v271 = v270;
            if (*v28 == 250)
            {
              v272 = (const CoreML::Specification::BiasLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v270);
              v272 = (const CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_;
            }
            CoreML::Specification::BiasLayerParams::MergeFrom(v271, v272);
            return;
          }
          if (v27 != 260)
            return;
          v109 = CoreML::Specification::NeuralNetworkLayer::mutable_max(this);
          v33 = v109;
          if (*v28 != 260)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v109);
            v34 = &CoreML::Specification::_MaxLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
        else
        {
          if (v27 != 261)
          {
            if (v27 != 270)
            {
              if (v27 == 280)
              {
                v41 = CoreML::Specification::NeuralNetworkLayer::mutable_reduce(this);
                v42 = (std::string *)v41;
                if (*v28 == 280)
                {
                  v43 = (const CoreML::Specification::ReduceLayerParams *)*((_QWORD *)a2 + 16);
                }
                else
                {
                  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v41);
                  v43 = (const CoreML::Specification::ReduceLayerParams *)&CoreML::Specification::_ReduceLayerParams_default_instance_;
                }
                CoreML::Specification::ReduceLayerParams::MergeFrom(v42, v43);
              }
              return;
            }
            v173 = CoreML::Specification::NeuralNetworkLayer::mutable_dot(this);
            v82 = (std::string *)v173;
            if (*v28 == 270)
            {
              v83 = (uint64_t *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v173);
              v83 = &CoreML::Specification::_DotProductLayerParams_default_instance_;
            }
LABEL_580:
            CoreML::Specification::DotProductLayerParams::MergeFrom(v82, (const CoreML::Specification::DotProductLayerParams *)v83);
            return;
          }
          v172 = CoreML::Specification::NeuralNetworkLayer::mutable_min(this);
          v33 = v172;
          if (*v28 != 261)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v172);
            v34 = &CoreML::Specification::_MinLayerParams_default_instance_;
            goto LABEL_542;
          }
        }
LABEL_541:
        v34 = (uint64_t *)*((_QWORD *)a2 + 16);
        goto LABEL_542;
      }
      if (v27 <= 300)
      {
        if (v27 == 290)
        {
          v292 = CoreML::Specification::NeuralNetworkLayer::mutable_loadconstant(this);
          v293 = v292;
          if (*v28 == 290)
          {
            v294 = (const CoreML::Specification::LoadConstantLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v292);
            v294 = (const CoreML::Specification::LoadConstantLayerParams *)&CoreML::Specification::_LoadConstantLayerParams_default_instance_;
          }
          CoreML::Specification::LoadConstantLayerParams::MergeFrom(v293, v294);
        }
        else if (v27 == 300)
        {
          v139 = CoreML::Specification::NeuralNetworkLayer::mutable_reshape(this);
          v140 = (uint64_t *)v139;
          if (*v28 == 300)
          {
            v141 = (const CoreML::Specification::ReshapeLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v139);
            v141 = (const CoreML::Specification::ReshapeLayerParams *)&CoreML::Specification::_ReshapeLayerParams_default_instance_;
          }
          CoreML::Specification::ReshapeLayerParams::MergeFrom(v140, v141);
        }
        return;
      }
      if (v27 != 301)
      {
        if (v27 != 310)
        {
          if (v27 != 320)
            return;
          v81 = CoreML::Specification::NeuralNetworkLayer::mutable_concat(this);
          v82 = (std::string *)v81;
          if (*v28 == 320)
          {
            v83 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v81);
            v83 = &CoreML::Specification::_ConcatLayerParams_default_instance_;
          }
          goto LABEL_580;
        }
        v229 = CoreML::Specification::NeuralNetworkLayer::mutable_permute(this);
        v67 = (uint64_t *)v229;
        if (*v28 == 310)
        {
          v68 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v229);
          v68 = &CoreML::Specification::_PermuteLayerParams_default_instance_;
        }
        goto LABEL_572;
      }
      v228 = CoreML::Specification::NeuralNetworkLayer::mutable_flatten(this);
      v57 = (std::string *)v228;
      if (*v28 == 301)
      {
        v58 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v228);
        v58 = &CoreML::Specification::_FlattenLayerParams_default_instance_;
      }
LABEL_566:
      CoreML::Specification::FlattenLayerParams::MergeFrom(v57, (const CoreML::Specification::FlattenLayerParams *)v58);
      return;
    }
    if (v27 > 409)
    {
      if (v27 <= 429)
      {
        if (v27 == 410)
        {
          v305 = CoreML::Specification::NeuralNetworkLayer::mutable_gru(this);
          v306 = v305;
          if (*v28 == 410)
          {
            v307 = (const CoreML::Specification::GRULayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v305);
            v307 = (const CoreML::Specification::GRULayerParams *)&CoreML::Specification::_GRULayerParams_default_instance_;
          }
          CoreML::Specification::GRULayerParams::MergeFrom(v306, v307);
        }
        else if (v27 == 420)
        {
          v150 = CoreML::Specification::NeuralNetworkLayer::mutable_unidirectionallstm(this);
          v151 = v150;
          if (*v28 == 420)
          {
            v152 = (const CoreML::Specification::UniDirectionalLSTMLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v150);
            v152 = (const CoreML::Specification::UniDirectionalLSTMLayerParams *)&CoreML::Specification::_UniDirectionalLSTMLayerParams_default_instance_;
          }
          CoreML::Specification::UniDirectionalLSTMLayerParams::MergeFrom(v151, v152);
        }
        return;
      }
      if (v27 == 430)
      {
        v246 = CoreML::Specification::NeuralNetworkLayer::mutable_bidirectionallstm(this);
        v247 = v246;
        if (*v28 == 430)
        {
          v248 = (const CoreML::Specification::BiDirectionalLSTMLayerParams *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v246);
          v248 = (const CoreML::Specification::BiDirectionalLSTMLayerParams *)&CoreML::Specification::_BiDirectionalLSTMLayerParams_default_instance_;
        }
        CoreML::Specification::BiDirectionalLSTMLayerParams::MergeFrom(v247, v248);
        return;
      }
      if (v27 == 500)
      {
        v249 = CoreML::Specification::NeuralNetworkLayer::mutable_custom(this);
        v250 = v249;
        if (*v28 == 500)
        {
          v251 = (const CoreML::Specification::CustomLayerParams *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v249);
          v251 = (const CoreML::Specification::CustomLayerParams *)&CoreML::Specification::_CustomLayerParams_default_instance_;
        }
        CoreML::Specification::CustomLayerParams::MergeFrom(v250, v251);
        return;
      }
      if (v27 != 600)
        return;
      v94 = CoreML::Specification::NeuralNetworkLayer::mutable_copy(this);
      v33 = v94;
      if (*v28 != 600)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v94);
        v34 = &CoreML::Specification::_CopyLayerParams_default_instance_;
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    if (v27 > 344)
    {
      if (v27 != 345)
      {
        if (v27 == 350)
        {
          v210 = CoreML::Specification::NeuralNetworkLayer::mutable_slice(this);
          v211 = (std::string *)v210;
          if (*v28 == 350)
          {
            v212 = (const CoreML::Specification::SliceLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v210);
            v212 = (const CoreML::Specification::SliceLayerParams *)&CoreML::Specification::_SliceLayerParams_default_instance_;
          }
          CoreML::Specification::SliceLayerParams::MergeFrom(v211, v212);
        }
        else if (v27 == 400)
        {
          v63 = CoreML::Specification::NeuralNetworkLayer::mutable_simplerecurrent(this);
          v64 = v63;
          if (*v28 == 400)
          {
            v65 = (const CoreML::Specification::SimpleRecurrentLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v63);
            v65 = (const CoreML::Specification::SimpleRecurrentLayerParams *)&CoreML::Specification::_SimpleRecurrentLayerParams_default_instance_;
          }
          CoreML::Specification::SimpleRecurrentLayerParams::MergeFrom(v64, v65);
        }
        return;
      }
      v209 = CoreML::Specification::NeuralNetworkLayer::mutable_reorganizedata(this);
      v77 = (std::string *)v209;
      if (*v28 == 345)
      {
        v78 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v209);
        v78 = &CoreML::Specification::_ReorganizeDataLayerParams_default_instance_;
      }
LABEL_578:
      CoreML::Specification::ReorganizeDataLayerParams::MergeFrom(v77, (const CoreML::Specification::ReorganizeDataLayerParams *)v78);
      return;
    }
    if (v27 == 330)
    {
      v282 = CoreML::Specification::NeuralNetworkLayer::mutable_split(this);
      v122 = (std::string *)v282;
      if (*v28 == 330)
      {
        v123 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v282);
        v123 = &CoreML::Specification::_SplitLayerParams_default_instance_;
      }
    }
    else
    {
      if (v27 != 340)
        return;
      v121 = CoreML::Specification::NeuralNetworkLayer::mutable_sequencerepeat(this);
      v122 = (std::string *)v121;
      if (*v28 == 340)
      {
        v123 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v121);
        v123 = &CoreML::Specification::_SequenceRepeatLayerParams_default_instance_;
      }
    }
    goto LABEL_602;
  }
  if (v27 > 189)
  {
    if (v27 > 219)
    {
      if (v27 <= 230)
      {
        if (v27 == 220)
        {
          v298 = CoreML::Specification::NeuralNetworkLayer::mutable_unary(this);
          v299 = (std::string *)v298;
          if (*v28 == 220)
          {
            v300 = (const CoreML::Specification::UnaryFunctionLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v298);
            v300 = (const CoreML::Specification::UnaryFunctionLayerParams *)&CoreML::Specification::_UnaryFunctionLayerParams_default_instance_;
          }
          CoreML::Specification::UnaryFunctionLayerParams::MergeFrom(v299, v300);
          return;
        }
        if (v27 != 230)
          return;
        v147 = CoreML::Specification::NeuralNetworkLayer::mutable_add(this);
        v48 = (std::string *)v147;
        if (*v28 == 230)
        {
          v49 = (uint64_t *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v147);
          v49 = &CoreML::Specification::_AddLayerParams_default_instance_;
        }
        goto LABEL_560;
      }
      switch(v27)
      {
        case 231:
          v238 = CoreML::Specification::NeuralNetworkLayer::mutable_multiply(this);
          v48 = (std::string *)v238;
          if (*v28 == 231)
          {
            v49 = (uint64_t *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v238);
            v49 = &CoreML::Specification::_MultiplyLayerParams_default_instance_;
          }
          goto LABEL_560;
        case 240:
          v239 = CoreML::Specification::NeuralNetworkLayer::mutable_average(this);
          v33 = v239;
          if (*v28 != 240)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v239);
            v34 = &CoreML::Specification::_AverageLayerParams_default_instance_;
            goto LABEL_542;
          }
          goto LABEL_541;
        case 245:
          v89 = CoreML::Specification::NeuralNetworkLayer::mutable_scale(this);
          v90 = v89;
          if (*v28 == 245)
          {
            v91 = (const CoreML::Specification::ScaleLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v89);
            v91 = (const CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_;
          }
          CoreML::Specification::ScaleLayerParams::MergeFrom(v90, v91);
          break;
      }
    }
    else if (v27 <= 209)
    {
      if (v27 == 190)
      {
        v278 = CoreML::Specification::NeuralNetworkLayer::mutable_crop(this);
        v279 = (uint64_t *)v278;
        if (*v28 == 190)
        {
          v280 = (const CoreML::Specification::CropLayerParams *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v278);
          v280 = (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_;
        }
        CoreML::Specification::CropLayerParams::MergeFrom(v279, v280);
      }
      else if (v27 == 200)
      {
        v117 = CoreML::Specification::NeuralNetworkLayer::mutable_padding(this);
        v118 = (std::string *)v117;
        if (*v28 == 200)
        {
          v119 = (const CoreML::Specification::PaddingLayerParams *)*((_QWORD *)a2 + 16);
        }
        else
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v117);
          v119 = (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_;
        }
        CoreML::Specification::PaddingLayerParams::MergeFrom(v118, v119);
      }
    }
    else
    {
      switch(v27)
      {
        case 210:
          v187 = CoreML::Specification::NeuralNetworkLayer::mutable_upsample(this);
          v188 = (uint64_t *)v187;
          if (*v28 == 210)
          {
            v189 = (const CoreML::Specification::UpsampleLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v187);
            v189 = (const CoreML::Specification::UpsampleLayerParams *)&CoreML::Specification::_UpsampleLayerParams_default_instance_;
          }
          CoreML::Specification::UpsampleLayerParams::MergeFrom(v188, v189);
          break;
        case 211:
          v190 = CoreML::Specification::NeuralNetworkLayer::mutable_resizebilinear(this);
          v191 = (uint64_t *)v190;
          if (*v28 == 211)
          {
            v192 = (const CoreML::Specification::ResizeBilinearLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v190);
            v192 = (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_;
          }
          CoreML::Specification::ResizeBilinearLayerParams::MergeFrom(v191, v192);
          break;
        case 212:
          v53 = CoreML::Specification::NeuralNetworkLayer::mutable_cropresize(this);
          v54 = (uint64_t *)v53;
          if (*v28 == 212)
          {
            v55 = (const CoreML::Specification::CropResizeLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v53);
            v55 = (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_;
          }
          CoreML::Specification::CropResizeLayerParams::MergeFrom(v54, v55);
          break;
      }
    }
  }
  else
  {
    if (v27 <= 159)
    {
      if (v27 <= 129)
      {
        if (v27 == 100)
        {
          v262 = CoreML::Specification::NeuralNetworkLayer::mutable_convolution(this);
          v263 = v262;
          if (*v28 == 100)
          {
            v264 = (const CoreML::Specification::ConvolutionLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v262);
            v264 = (const CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_;
          }
          CoreML::Specification::ConvolutionLayerParams::MergeFrom(v263, v264);
        }
        else if (v27 == 120)
        {
          v101 = CoreML::Specification::NeuralNetworkLayer::mutable_pooling(this);
          v102 = (std::string *)v101;
          if (*v28 == 120)
          {
            v103 = (const CoreML::Specification::PoolingLayerParams *)*((_QWORD *)a2 + 16);
          }
          else
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v101);
            v103 = (const CoreML::Specification::PoolingLayerParams *)&CoreML::Specification::_PoolingLayerParams_default_instance_;
          }
          CoreML::Specification::PoolingLayerParams::MergeFrom(v102, v103);
        }
      }
      else
      {
        switch(v27)
        {
          case 130:
            v160 = CoreML::Specification::NeuralNetworkLayer::mutable_activation(this);
            v161 = v160;
            if (*v28 == 130)
            {
              v162 = (const CoreML::Specification::ActivationParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v160);
              v162 = (const CoreML::Specification::ActivationParams *)&CoreML::Specification::_ActivationParams_default_instance_;
            }
            CoreML::Specification::ActivationParams::MergeFrom(v161, v162);
            break;
          case 140:
            v163 = CoreML::Specification::NeuralNetworkLayer::mutable_innerproduct(this);
            v164 = v163;
            if (*v28 == 140)
            {
              v165 = (const CoreML::Specification::InnerProductLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v163);
              v165 = (const CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_;
            }
            CoreML::Specification::InnerProductLayerParams::MergeFrom(v164, v165);
            break;
          case 150:
            v29 = CoreML::Specification::NeuralNetworkLayer::mutable_embedding(this);
            v30 = v29;
            if (*v28 == 150)
            {
              v31 = (const CoreML::Specification::EmbeddingLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v29);
              v31 = (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_;
            }
            CoreML::Specification::EmbeddingLayerParams::MergeFrom(v30, v31);
            break;
        }
      }
      return;
    }
    if (v27 > 169)
    {
      if (v27 != 170)
      {
        if (v27 != 175)
        {
          if (v27 == 180)
          {
            v73 = CoreML::Specification::NeuralNetworkLayer::mutable_lrn(this);
            v74 = (std::string *)v73;
            if (*v28 == 180)
            {
              v75 = (const CoreML::Specification::LRNLayerParams *)*((_QWORD *)a2 + 16);
            }
            else
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v73);
              v75 = (const CoreML::Specification::LRNLayerParams *)&CoreML::Specification::_LRNLayerParams_default_instance_;
            }
            CoreML::Specification::LRNLayerParams::MergeFrom(v74, v75);
          }
          return;
        }
        v221 = CoreML::Specification::NeuralNetworkLayer::mutable_softmax(this);
        v33 = v221;
        if (*v28 != 175)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v221);
          v34 = &CoreML::Specification::_SoftmaxLayerParams_default_instance_;
          goto LABEL_542;
        }
        goto LABEL_541;
      }
      v220 = CoreML::Specification::NeuralNetworkLayer::mutable_l2normalize(this);
      v48 = (std::string *)v220;
      if (*v28 == 170)
      {
        v49 = (uint64_t *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v220);
        v49 = &CoreML::Specification::_L2NormalizeLayerParams_default_instance_;
      }
LABEL_560:
      CoreML::Specification::L2NormalizeLayerParams::MergeFrom(v48, (const CoreML::Specification::L2NormalizeLayerParams *)v49);
      return;
    }
    if (v27 == 160)
    {
      v286 = CoreML::Specification::NeuralNetworkLayer::mutable_batchnorm(this);
      v287 = v286;
      if (*v28 == 160)
      {
        v288 = (const CoreML::Specification::BatchnormLayerParams *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v286);
        v288 = (const CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_;
      }
      CoreML::Specification::BatchnormLayerParams::MergeFrom(v287, v288);
    }
    else if (v27 == 165)
    {
      v129 = CoreML::Specification::NeuralNetworkLayer::mutable_mvn(this);
      v130 = (std::string *)v129;
      if (*v28 == 165)
      {
        v131 = (const CoreML::Specification::MeanVarianceNormalizeLayerParams *)*((_QWORD *)a2 + 16);
      }
      else
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v129);
        v131 = (const CoreML::Specification::MeanVarianceNormalizeLayerParams *)&CoreML::Specification::_MeanVarianceNormalizeLayerParams_default_instance_;
      }
      CoreML::Specification::MeanVarianceNormalizeLayerParams::MergeFrom(v130, v131);
    }
  }
}

uint64_t *google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<CoreML::Specification::Tensor>::TypeHandler>(uint64_t *result, CoreML::Specification::ReshapeLayerParams **a2, CoreML::Specification::ReshapeLayerParams **a3, unsigned int a4, unsigned int a5)
{
  google::protobuf::Arena **v9;
  uint64_t v10;
  CoreML::Specification::ReshapeLayerParams **v11;
  CoreML::Specification::ReshapeLayerParams **v12;
  CoreML::Specification::ReshapeLayerParams *v13;
  CoreML::Specification::ReshapeLayerParams *v14;
  CoreML::Specification::ReshapeLayerParams *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  CoreML::Specification::Tensor **v19;
  CoreML::Specification::ReshapeLayerParams **v20;
  CoreML::Specification::ReshapeLayerParams *v21;
  CoreML::Specification::Tensor *Aligned;
  google::protobuf::Arena **v23;
  unint64_t *v24;
  unint64_t v25;

  v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Tensor>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *v9;
    v19 = &a2[a5];
    v20 = &a3[a5];
    do
    {
      v21 = *v20;
      if (v18)
      {
        CoreML::Specification::Tensor::Tensor(Aligned);
        v23 = google::protobuf::Arena::AllocateAligned(v18, 0, 24);
        *v23 = Aligned;
        v23[1] = (google::protobuf::Arena *)google::protobuf::internal::arena_destruct_object<CoreML::Specification::Tensor>;
        v24 = (unint64_t *)((char *)v18 + 32);
        do
          v25 = __ldxr(v24);
        while (__stxr((unint64_t)v23, v24));
        v23[2] = (google::protobuf::Arena *)v25;
      }
      else
      {
        Aligned = (CoreML::Specification::Tensor *)operator new();
        CoreML::Specification::Tensor::Tensor(Aligned);
      }
      result = google::protobuf::internal::GenericTypeHandler<CoreML::Specification::Tensor>::Merge(v21, Aligned);
      *v19++ = Aligned;
      ++v20;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1D3B8F030(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EA59D502);
  _Unwind_Resume(a1);
}

CoreML::Specification::ConvolutionLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_convolution(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::ConvolutionLayerParams *v2;

  if (*((_DWORD *)this + 35) == 100)
    return (CoreML::Specification::ConvolutionLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 100;
  v2 = (CoreML::Specification::ConvolutionLayerParams *)operator new();
  CoreML::Specification::ConvolutionLayerParams::ConvolutionLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B8F0BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C407928EB6DLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ConvolutionLayerParams::MergeFrom(CoreML::Specification::ConvolutionLayerParams *this, const CoreML::Specification::ConvolutionLayerParams *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  const CoreML::Specification::WeightParams *v9;
  CoreML::Specification::WeightParams *v10;
  const CoreML::Specification::WeightParams *v11;
  const CoreML::Specification::WeightParams *v12;
  CoreML::Specification::WeightParams *v13;
  const CoreML::Specification::WeightParams *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  CoreML::Specification::ValidPadding *v19;
  uint64_t v20;
  CoreML::Specification::ValidPadding *v21;
  const CoreML::Specification::ValidPadding *v22;
  CoreML::Specification::SamePadding *v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 4, *((_DWORD *)this + 4) + v5);
    memcpy((void *)(*((_QWORD *)this + 3) + 8 * *((int *)this + 4) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
  v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 10, *((_DWORD *)this + 10) + v6);
    memcpy((void *)(*((_QWORD *)this + 6) + 8 * *((int *)this + 10) + 8), (const void *)(*((_QWORD *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 16, *((_DWORD *)this + 16) + v7);
    memcpy((void *)(*((_QWORD *)this + 9) + 8 * *((int *)this + 16) + 8), (const void *)(*((_QWORD *)a2 + 9) + 8), 8 * *((int *)a2 + 16));
    *((_DWORD *)this + 16) += *((_DWORD *)a2 + 16);
  }
  v8 = *((_DWORD *)a2 + 22);
  if (v8)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 22, *((_DWORD *)this + 22) + v8);
    memcpy((void *)(*((_QWORD *)this + 12) + 8 * *((int *)this + 22) + 8), (const void *)(*((_QWORD *)a2 + 12) + 8), 8 * *((int *)a2 + 22));
    *((_DWORD *)this + 22) += *((_DWORD *)a2 + 22);
  }
  if (a2 != (const CoreML::Specification::ConvolutionLayerParams *)&CoreML::Specification::_ConvolutionLayerParams_default_instance_)
  {
    v9 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 14);
    if (v9)
    {
      v10 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 14);
      if (!v10)
      {
        v10 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v10);
        *((_QWORD *)this + 14) = v10;
        v9 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 14);
      }
      if (v9)
        v11 = v9;
      else
        v11 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v10, v11);
    }
    v12 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 15);
    if (v12)
    {
      v13 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 15);
      if (!v13)
      {
        v13 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v13);
        *((_QWORD *)this + 15) = v13;
        v12 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 15);
      }
      if (v12)
        v14 = v12;
      else
        v14 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v13, v14);
    }
  }
  v15 = *((_QWORD *)a2 + 16);
  if (v15)
    *((_QWORD *)this + 16) = v15;
  v16 = *((_QWORD *)a2 + 17);
  if (v16)
    *((_QWORD *)this + 17) = v16;
  v17 = *((_QWORD *)a2 + 18);
  if (v17)
    *((_QWORD *)this + 18) = v17;
  if (*((_BYTE *)a2 + 152))
    *((_BYTE *)this + 152) = 1;
  if (*((_BYTE *)a2 + 153))
    *((_BYTE *)this + 153) = 1;
  v18 = *((_DWORD *)a2 + 43);
  if (v18 != 51)
  {
    if (v18 != 50)
      return;
    if (*((_DWORD *)this + 43) == 50)
    {
      v19 = (CoreML::Specification::ValidPadding *)*((_QWORD *)this + 20);
    }
    else
    {
      CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
      *((_DWORD *)this + 43) = 50;
      v19 = (CoreML::Specification::ValidPadding *)operator new();
      v21 = CoreML::Specification::ValidPadding::ValidPadding(v19);
      *((_QWORD *)this + 20) = v19;
      if (*((_DWORD *)a2 + 43) != 50)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v21);
        v22 = (const CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_;
        goto LABEL_47;
      }
    }
    v22 = (const CoreML::Specification::ValidPadding *)*((_QWORD *)a2 + 20);
LABEL_47:
    CoreML::Specification::ValidPadding::MergeFrom((std::string *)v19, v22);
    return;
  }
  if (*((_DWORD *)this + 43) == 51)
  {
    v20 = *((_QWORD *)this + 20);
  }
  else
  {
    CoreML::Specification::ConvolutionLayerParams::clear_ConvolutionPaddingType((uint64_t)this);
    *((_DWORD *)this + 43) = 51;
    v20 = operator new();
    v23 = CoreML::Specification::SamePadding::SamePadding((CoreML::Specification::SamePadding *)v20);
    *((_QWORD *)this + 20) = v20;
    if (*((_DWORD *)a2 + 43) != 51)
    {
      CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v23);
      v24 = &CoreML::Specification::_SamePadding_default_instance_;
      goto LABEL_49;
    }
  }
  v24 = (uint64_t *)*((_QWORD *)a2 + 20);
LABEL_49:
  v25 = v24[1];
  if ((v25 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v20 + 8), v25 & 0xFFFFFFFFFFFFFFFELL);
  v26 = *((_DWORD *)v24 + 4);
  if (v26)
    *(_DWORD *)(v20 + 16) = v26;
}

void sub_1D3B8F460(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::PoolingLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_pooling(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::PoolingLayerParams *v2;

  if (*((_DWORD *)this + 35) == 120)
    return (CoreML::Specification::PoolingLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 120;
  v2 = (CoreML::Specification::PoolingLayerParams *)operator new();
  CoreML::Specification::PoolingLayerParams::PoolingLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B8F520(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40A643CE47);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PoolingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::PoolingLayerParams *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  CoreML::Specification::ValidPadding *v9;
  CoreML::Specification::PoolingLayerParams_ValidCompletePadding *v10;
  uint64_t v11;
  CoreML::Specification::ValidPadding *v12;
  const CoreML::Specification::ValidPadding *v13;
  CoreML::Specification::PoolingLayerParams_ValidCompletePadding *v14;
  const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 16), *(_DWORD *)(v3 + 16) + v5);
    this = (std::string *)memcpy((void *)(*(_QWORD *)(v3 + 24) + 8 * *(int *)(v3 + 16) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *(_DWORD *)(v3 + 16) += *((_DWORD *)a2 + 4);
  }
  v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(v3 + 40), *(_DWORD *)(v3 + 40) + v6);
    this = (std::string *)memcpy((void *)(*(_QWORD *)(v3 + 48) + 8 * *(int *)(v3 + 40) + 8), (const void *)(*((_QWORD *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *(_DWORD *)(v3 + 40) += *((_DWORD *)a2 + 10);
  }
  v7 = *((_DWORD *)a2 + 15);
  if (v7)
    *(_DWORD *)(v3 + 60) = v7;
  if (*((_BYTE *)a2 + 64))
    *(_BYTE *)(v3 + 64) = 1;
  if (*((_BYTE *)a2 + 65))
    *(_BYTE *)(v3 + 65) = 1;
  v8 = *((_DWORD *)a2 + 21);
  if (v8 == 32)
  {
    if (*(_DWORD *)(v3 + 84) == 32)
    {
      v10 = *(CoreML::Specification::PoolingLayerParams_ValidCompletePadding **)(v3 + 72);
    }
    else
    {
      CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
      *(_DWORD *)(v3 + 84) = 32;
      v10 = (CoreML::Specification::PoolingLayerParams_ValidCompletePadding *)operator new();
      v14 = CoreML::Specification::PoolingLayerParams_ValidCompletePadding::PoolingLayerParams_ValidCompletePadding(v10);
      *(_QWORD *)(v3 + 72) = v10;
      if (*((_DWORD *)a2 + 21) != 32)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v14);
        v15 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)&CoreML::Specification::_PoolingLayerParams_ValidCompletePadding_default_instance_;
        return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v10, v15);
      }
    }
    v15 = (const CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts *)*((_QWORD *)a2 + 9);
    return (std::string *)CoreML::Specification::MILSpec::TensorValue_RepeatedLongInts::MergeFrom((uint64_t *)v10, v15);
  }
  if (v8 != 31)
  {
    if (v8 != 30)
      return this;
    if (*(_DWORD *)(v3 + 84) == 30)
    {
      v9 = *(CoreML::Specification::ValidPadding **)(v3 + 72);
    }
    else
    {
      CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
      *(_DWORD *)(v3 + 84) = 30;
      v9 = (CoreML::Specification::ValidPadding *)operator new();
      v12 = CoreML::Specification::ValidPadding::ValidPadding(v9);
      *(_QWORD *)(v3 + 72) = v9;
      if (*((_DWORD *)a2 + 21) != 30)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v12);
        v13 = (const CoreML::Specification::ValidPadding *)&CoreML::Specification::_ValidPadding_default_instance_;
        return CoreML::Specification::ValidPadding::MergeFrom((std::string *)v9, v13);
      }
    }
    v13 = (const CoreML::Specification::ValidPadding *)*((_QWORD *)a2 + 9);
    return CoreML::Specification::ValidPadding::MergeFrom((std::string *)v9, v13);
  }
  if (*(_DWORD *)(v3 + 84) == 31)
  {
    v11 = *(_QWORD *)(v3 + 72);
  }
  else
  {
    CoreML::Specification::PoolingLayerParams::clear_PoolingPaddingType(v3);
    *(_DWORD *)(v3 + 84) = 31;
    v11 = operator new();
    this = (std::string *)CoreML::Specification::SamePadding::SamePadding((CoreML::Specification::SamePadding *)v11);
    *(_QWORD *)(v3 + 72) = v11;
    if (*((_DWORD *)a2 + 21) != 31)
    {
      this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
      v16 = &CoreML::Specification::_SamePadding_default_instance_;
      goto LABEL_33;
    }
  }
  v16 = (uint64_t *)*((_QWORD *)a2 + 9);
LABEL_33:
  v17 = v16[1];
  if ((v17 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v11 + 8), v17 & 0xFFFFFFFFFFFFFFFELL);
  v18 = *((_DWORD *)v16 + 4);
  if (v18)
    *(_DWORD *)(v11 + 16) = v18;
  return this;
}

void sub_1D3B8F7E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::ActivationParams *CoreML::Specification::NeuralNetworkLayer::mutable_activation(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::ActivationParams *v2;

  if (*((_DWORD *)this + 35) == 130)
    return (CoreML::Specification::ActivationParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 130;
  v2 = (CoreML::Specification::ActivationParams *)operator new();
  CoreML::Specification::ActivationParams::ActivationParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B8F8A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C406A65A86DLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ActivationParams::MergeFrom(CoreML::Specification::ActivationParams *this, const CoreML::Specification::ActivationParams *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  CoreML::Specification::ActivationSoftsign *v7;
  uint64_t *v8;
  uint64_t v9;
  CoreML::Specification::ActivationLeakyReLU *v10;
  uint64_t *v11;
  CoreML::Specification::ActivationSigmoidHard *v12;
  CoreML::Specification::ActivationTanh *v13;
  CoreML::Specification::ActivationParametricSoftplus *v14;
  CoreML::Specification::ActivationELU *v15;
  CoreML::Specification::ActivationLinear *v16;
  CoreML::Specification::ActivationReLU *v17;
  CoreML::Specification::ActivationScaledTanh *v18;
  CoreML::Specification::ActivationSigmoid *v19;
  uint64_t v20;
  float v21;
  CoreML::Specification::ActivationPReLU *v22;
  uint64_t v23;
  CoreML::Specification::ActivationSigmoidHard *v24;
  uint64_t *v25;
  CoreML::Specification::ActivationParametricSoftplus *v26;
  const CoreML::Specification::ActivationParametricSoftplus *v27;
  CoreML::Specification::ActivationLinear *v28;
  CoreML::Specification::ActivationScaledTanh *v29;
  CoreML::Specification::ActivationThresholdedReLU *v30;
  CoreML::Specification::ActivationPReLU *v31;
  const CoreML::Specification::ActivationPReLU *v32;
  CoreML::Specification::ActivationSoftplus *v33;
  std::string *v34;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 7);
  if (v5 > 30)
  {
    if (v5 > 49)
    {
      if (v5 <= 69)
      {
        if (v5 != 50)
        {
          if (v5 != 60)
            return;
          if (*((_DWORD *)this + 7) != 60)
          {
            CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
            *((_DWORD *)this + 7) = 60;
            v6 = (uint64_t *)operator new();
            v7 = CoreML::Specification::ActivationSoftsign::ActivationSoftsign((CoreML::Specification::ActivationSoftsign *)v6);
            *((_QWORD *)this + 2) = v6;
            if (*((_DWORD *)a2 + 7) != 60)
            {
              CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v7);
              v8 = &CoreML::Specification::_ActivationSoftsign_default_instance_;
              goto LABEL_58;
            }
            goto LABEL_57;
          }
          goto LABEL_56;
        }
        if (*((_DWORD *)this + 7) != 50)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 50;
          v9 = operator new();
          v15 = CoreML::Specification::ActivationELU::ActivationELU((CoreML::Specification::ActivationELU *)v9);
          *((_QWORD *)this + 2) = v9;
          if (*((_DWORD *)a2 + 7) != 50)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v15);
            v11 = &CoreML::Specification::_ActivationELU_default_instance_;
            goto LABEL_49;
          }
LABEL_48:
          v11 = (uint64_t *)*((_QWORD *)a2 + 2);
          goto LABEL_49;
        }
LABEL_47:
        v9 = *((_QWORD *)this + 2);
        goto LABEL_48;
      }
      if (v5 != 70)
      {
        if (v5 != 71)
          return;
        if (*((_DWORD *)this + 7) == 71)
        {
          v14 = (CoreML::Specification::ActivationParametricSoftplus *)*((_QWORD *)this + 2);
        }
        else
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 71;
          v14 = (CoreML::Specification::ActivationParametricSoftplus *)operator new();
          v26 = CoreML::Specification::ActivationParametricSoftplus::ActivationParametricSoftplus(v14);
          *((_QWORD *)this + 2) = v14;
          if (*((_DWORD *)a2 + 7) != 71)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v26);
            v27 = (const CoreML::Specification::ActivationParametricSoftplus *)&CoreML::Specification::_ActivationParametricSoftplus_default_instance_;
            goto LABEL_79;
          }
        }
        v27 = (const CoreML::Specification::ActivationParametricSoftplus *)*((_QWORD *)a2 + 2);
LABEL_79:
        CoreML::Specification::ActivationParametricSoftplus::MergeFrom(v14, v27);
        return;
      }
      if (*((_DWORD *)this + 7) != 70)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 70;
        v6 = (uint64_t *)operator new();
        v33 = CoreML::Specification::ActivationSoftplus::ActivationSoftplus((CoreML::Specification::ActivationSoftplus *)v6);
        *((_QWORD *)this + 2) = v6;
        if (*((_DWORD *)a2 + 7) != 70)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v33);
          v8 = &CoreML::Specification::_ActivationSoftplus_default_instance_;
LABEL_58:
          v23 = v8[1];
          if ((v23 & 1) != 0)
            google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v6 + 1, v23 & 0xFFFFFFFFFFFFFFFELL);
          return;
        }
LABEL_57:
        v8 = (uint64_t *)*((_QWORD *)a2 + 2);
        goto LABEL_58;
      }
LABEL_56:
      v6 = (uint64_t *)*((_QWORD *)this + 2);
      goto LABEL_57;
    }
    if (v5 != 31)
    {
      if (v5 == 40)
      {
        if (*((_DWORD *)this + 7) != 40)
        {
          CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
          *((_DWORD *)this + 7) = 40;
          v6 = (uint64_t *)operator new();
          v19 = CoreML::Specification::ActivationSigmoid::ActivationSigmoid((CoreML::Specification::ActivationSigmoid *)v6);
          *((_QWORD *)this + 2) = v6;
          if (*((_DWORD *)a2 + 7) != 40)
          {
            CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v19);
            v8 = &CoreML::Specification::_ActivationSigmoid_default_instance_;
            goto LABEL_58;
          }
          goto LABEL_57;
        }
        goto LABEL_56;
      }
      if (v5 != 41)
        return;
      if (*((_DWORD *)this + 7) == 41)
      {
        v12 = (CoreML::Specification::ActivationSigmoidHard *)*((_QWORD *)this + 2);
      }
      else
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 41;
        v12 = (CoreML::Specification::ActivationSigmoidHard *)operator new();
        v24 = CoreML::Specification::ActivationSigmoidHard::ActivationSigmoidHard(v12);
        *((_QWORD *)this + 2) = v12;
        if (*((_DWORD *)a2 + 7) != 41)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v24);
          v25 = &CoreML::Specification::_ActivationSigmoidHard_default_instance_;
          goto LABEL_76;
        }
      }
      v25 = (uint64_t *)*((_QWORD *)a2 + 2);
LABEL_76:
      v34 = (std::string *)v12;
LABEL_77:
      CoreML::Specification::RangeDynamicLayerParams::MergeFrom(v34, (const CoreML::Specification::RangeDynamicLayerParams *)v25);
      return;
    }
    if (*((_DWORD *)this + 7) == 31)
    {
      v18 = (CoreML::Specification::ActivationScaledTanh *)*((_QWORD *)this + 2);
    }
    else
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
      *((_DWORD *)this + 7) = 31;
      v18 = (CoreML::Specification::ActivationScaledTanh *)operator new();
      v29 = CoreML::Specification::ActivationScaledTanh::ActivationScaledTanh(v18);
      *((_QWORD *)this + 2) = v18;
      if (*((_DWORD *)a2 + 7) != 31)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v29);
        v25 = &CoreML::Specification::_ActivationScaledTanh_default_instance_;
        goto LABEL_83;
      }
    }
    v25 = (uint64_t *)*((_QWORD *)a2 + 2);
LABEL_83:
    v34 = (std::string *)v18;
    goto LABEL_77;
  }
  if (v5 > 19)
  {
    if (v5 == 20)
    {
      if (*((_DWORD *)this + 7) != 20)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 20;
        v9 = operator new();
        v30 = CoreML::Specification::ActivationThresholdedReLU::ActivationThresholdedReLU((CoreML::Specification::ActivationThresholdedReLU *)v9);
        *((_QWORD *)this + 2) = v9;
        if (*((_DWORD *)a2 + 7) != 20)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v30);
          v11 = &CoreML::Specification::_ActivationThresholdedReLU_default_instance_;
          goto LABEL_49;
        }
        goto LABEL_48;
      }
      goto LABEL_47;
    }
    if (v5 != 25)
    {
      if (v5 != 30)
        return;
      if (*((_DWORD *)this + 7) != 30)
      {
        CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
        *((_DWORD *)this + 7) = 30;
        v6 = (uint64_t *)operator new();
        v13 = CoreML::Specification::ActivationTanh::ActivationTanh((CoreML::Specification::ActivationTanh *)v6);
        *((_QWORD *)this + 2) = v6;
        if (*((_DWORD *)a2 + 7) != 30)
        {
          CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v13);
          v8 = &CoreML::Specification::_ActivationTanh_default_instance_;
          goto LABEL_58;
        }
        goto LABEL_57;
      }
      goto LABEL_56;
    }
    if (*((_DWORD *)this + 7) == 25)
    {
      v22 = (CoreML::Specification::ActivationPReLU *)*((_QWORD *)this + 2);
    }
    else
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
      *((_DWORD *)this + 7) = 25;
      v22 = (CoreML::Specification::ActivationPReLU *)operator new();
      v31 = CoreML::Specification::ActivationPReLU::ActivationPReLU(v22);
      *((_QWORD *)this + 2) = v22;
      if (*((_DWORD *)a2 + 7) != 25)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v31);
        v32 = (const CoreML::Specification::ActivationPReLU *)&CoreML::Specification::_ActivationPReLU_default_instance_;
        goto LABEL_85;
      }
    }
    v32 = (const CoreML::Specification::ActivationPReLU *)*((_QWORD *)a2 + 2);
LABEL_85:
    CoreML::Specification::ActivationPReLU::MergeFrom(v22, v32);
    return;
  }
  if (v5 == 5)
  {
    if (*((_DWORD *)this + 7) == 5)
    {
      v16 = (CoreML::Specification::ActivationLinear *)*((_QWORD *)this + 2);
    }
    else
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
      *((_DWORD *)this + 7) = 5;
      v16 = (CoreML::Specification::ActivationLinear *)operator new();
      v28 = CoreML::Specification::ActivationLinear::ActivationLinear(v16);
      *((_QWORD *)this + 2) = v16;
      if (*((_DWORD *)a2 + 7) != 5)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v28);
        v25 = &CoreML::Specification::_ActivationLinear_default_instance_;
        goto LABEL_81;
      }
    }
    v25 = (uint64_t *)*((_QWORD *)a2 + 2);
LABEL_81:
    v34 = (std::string *)v16;
    goto LABEL_77;
  }
  if (v5 == 10)
  {
    if (*((_DWORD *)this + 7) != 10)
    {
      CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
      *((_DWORD *)this + 7) = 10;
      v6 = (uint64_t *)operator new();
      v17 = CoreML::Specification::ActivationReLU::ActivationReLU((CoreML::Specification::ActivationReLU *)v6);
      *((_QWORD *)this + 2) = v6;
      if (*((_DWORD *)a2 + 7) != 10)
      {
        CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v17);
        v8 = &CoreML::Specification::_ActivationReLU_default_instance_;
        goto LABEL_58;
      }
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  if (v5 != 15)
    return;
  if (*((_DWORD *)this + 7) == 15)
    goto LABEL_47;
  CoreML::Specification::ActivationParams::clear_NonlinearityType((uint64_t)this);
  *((_DWORD *)this + 7) = 15;
  v9 = operator new();
  v10 = CoreML::Specification::ActivationLeakyReLU::ActivationLeakyReLU((CoreML::Specification::ActivationLeakyReLU *)v9);
  *((_QWORD *)this + 2) = v9;
  if (*((_DWORD *)a2 + 7) == 15)
    goto LABEL_48;
  CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults(v10);
  v11 = &CoreML::Specification::_ActivationLeakyReLU_default_instance_;
LABEL_49:
  v20 = v11[1];
  if ((v20 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v9 + 8), v20 & 0xFFFFFFFFFFFFFFFELL);
  v21 = *((float *)v11 + 4);
  if (v21 != 0.0)
    *(float *)(v9 + 16) = v21;
}

void sub_1D3B8FF34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::InnerProductLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_innerproduct(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::InnerProductLayerParams *v2;

  if (*((_DWORD *)this + 35) == 140)
    return (CoreML::Specification::InnerProductLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 140;
  v2 = (CoreML::Specification::InnerProductLayerParams *)operator new();
  CoreML::Specification::InnerProductLayerParams::InnerProductLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90038(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C404A0E3968);
  _Unwind_Resume(a1);
}

void CoreML::Specification::InnerProductLayerParams::MergeFrom(CoreML::Specification::InnerProductLayerParams *this, const CoreML::Specification::InnerProductLayerParams *a2)
{
  uint64_t v4;
  const CoreML::Specification::WeightParams *v5;
  CoreML::Specification::WeightParams *v6;
  const CoreML::Specification::WeightParams *v7;
  const CoreML::Specification::WeightParams *v8;
  CoreML::Specification::WeightParams *v9;
  const CoreML::Specification::WeightParams *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::InnerProductLayerParams *)&CoreML::Specification::_InnerProductLayerParams_default_instance_)
  {
    v5 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
      if (!v6)
      {
        v6 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v6);
        *((_QWORD *)this + 2) = v6;
        v5 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v6, v7);
    }
    v8 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      v9 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
      if (!v9)
      {
        v9 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v9);
        *((_QWORD *)this + 3) = v9;
        v8 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v9, v10);
    }
  }
  v11 = *((_QWORD *)a2 + 4);
  if (v11)
    *((_QWORD *)this + 4) = v11;
  v12 = *((_QWORD *)a2 + 5);
  if (v12)
    *((_QWORD *)this + 5) = v12;
  if (*((_BYTE *)a2 + 48))
    *((_BYTE *)this + 48) = 1;
  if (*((_BYTE *)a2 + 49))
    *((_BYTE *)this + 49) = 1;
}

void sub_1D3B90178(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::EmbeddingLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_embedding(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::EmbeddingLayerParams *v2;

  if (*((_DWORD *)this + 35) == 150)
    return (CoreML::Specification::EmbeddingLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 150;
  v2 = (CoreML::Specification::EmbeddingLayerParams *)operator new();
  CoreML::Specification::EmbeddingLayerParams::EmbeddingLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90208(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C4055BE373CLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::EmbeddingLayerParams::MergeFrom(CoreML::Specification::EmbeddingLayerParams *this, const CoreML::Specification::EmbeddingLayerParams *a2)
{
  uint64_t v4;
  const CoreML::Specification::WeightParams *v5;
  CoreML::Specification::WeightParams *v6;
  const CoreML::Specification::WeightParams *v7;
  const CoreML::Specification::WeightParams *v8;
  CoreML::Specification::WeightParams *v9;
  const CoreML::Specification::WeightParams *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::EmbeddingLayerParams *)&CoreML::Specification::_EmbeddingLayerParams_default_instance_)
  {
    v5 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
      if (!v6)
      {
        v6 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v6);
        *((_QWORD *)this + 2) = v6;
        v5 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v6, v7);
    }
    v8 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      v9 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
      if (!v9)
      {
        v9 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v9);
        *((_QWORD *)this + 3) = v9;
        v8 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v9, v10);
    }
  }
  v11 = *((_QWORD *)a2 + 4);
  if (v11)
    *((_QWORD *)this + 4) = v11;
  v12 = *((_QWORD *)a2 + 5);
  if (v12)
    *((_QWORD *)this + 5) = v12;
  if (*((_BYTE *)a2 + 48))
    *((_BYTE *)this + 48) = 1;
}

void sub_1D3B90338(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BatchnormLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_batchnorm(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::BatchnormLayerParams *v2;

  if (*((_DWORD *)this + 35) == 160)
    return (CoreML::Specification::BatchnormLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 160;
  v2 = (CoreML::Specification::BatchnormLayerParams *)operator new();
  CoreML::Specification::BatchnormLayerParams::BatchnormLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B903C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40F35C4FACLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BatchnormLayerParams::MergeFrom(CoreML::Specification::BatchnormLayerParams *this, const CoreML::Specification::BatchnormLayerParams *a2)
{
  uint64_t v4;
  const CoreML::Specification::WeightParams *v5;
  CoreML::Specification::WeightParams *v6;
  const CoreML::Specification::WeightParams *v7;
  const CoreML::Specification::WeightParams *v8;
  CoreML::Specification::WeightParams *v9;
  const CoreML::Specification::WeightParams *v10;
  const CoreML::Specification::WeightParams *v11;
  CoreML::Specification::WeightParams *v12;
  const CoreML::Specification::WeightParams *v13;
  const CoreML::Specification::WeightParams *v14;
  CoreML::Specification::WeightParams *v15;
  const CoreML::Specification::WeightParams *v16;
  uint64_t v17;
  float v18;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 != (const CoreML::Specification::BatchnormLayerParams *)&CoreML::Specification::_BatchnormLayerParams_default_instance_)
  {
    v5 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 2);
    if (v5)
    {
      v6 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 2);
      if (!v6)
      {
        v6 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v6);
        *((_QWORD *)this + 2) = v6;
        v5 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 2);
      }
      if (v5)
        v7 = v5;
      else
        v7 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v6, v7);
    }
    v8 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 3);
    if (v8)
    {
      v9 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 3);
      if (!v9)
      {
        v9 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v9);
        *((_QWORD *)this + 3) = v9;
        v8 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 3);
      }
      if (v8)
        v10 = v8;
      else
        v10 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v9, v10);
    }
    v11 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 4);
    if (v11)
    {
      v12 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 4);
      if (!v12)
      {
        v12 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v12);
        *((_QWORD *)this + 4) = v12;
        v11 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 4);
      }
      if (v11)
        v13 = v11;
      else
        v13 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v12, v13);
    }
    v14 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 5);
    if (v14)
    {
      v15 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
      if (!v15)
      {
        v15 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v15);
        *((_QWORD *)this + 5) = v15;
        v14 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 5);
      }
      if (v14)
        v16 = v14;
      else
        v16 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v15, v16);
    }
  }
  v17 = *((_QWORD *)a2 + 6);
  if (v17)
    *((_QWORD *)this + 6) = v17;
  if (*((_BYTE *)a2 + 56))
    *((_BYTE *)this + 56) = 1;
  if (*((_BYTE *)a2 + 57))
    *((_BYTE *)this + 57) = 1;
  v18 = *((float *)a2 + 15);
  if (v18 != 0.0)
    *((float *)this + 15) = v18;
}

void sub_1D3B9059C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MeanVarianceNormalizeLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_mvn(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::MeanVarianceNormalizeLayerParams *v2;

  if (*((_DWORD *)this + 35) == 165)
    return (CoreML::Specification::MeanVarianceNormalizeLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 165;
  v2 = (CoreML::Specification::MeanVarianceNormalizeLayerParams *)operator new();
  CoreML::Specification::MeanVarianceNormalizeLayerParams::MeanVarianceNormalizeLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90634(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C408CDDB221);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::MeanVarianceNormalizeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::MeanVarianceNormalizeLayerParams *a2)
{
  std::string *v3;
  uint64_t v4;
  float v5;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (*((_BYTE *)a2 + 16))
    v3->__r_.__value_.__s.__data_[16] = 1;
  if (*((_BYTE *)a2 + 17))
    v3->__r_.__value_.__s.__data_[17] = 1;
  v5 = *((float *)a2 + 5);
  if (v5 != 0.0)
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v5;
  return this;
}

CoreML::Specification::L2NormalizeLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_l2normalize(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::L2NormalizeLayerParams *v2;

  if (*((_DWORD *)this + 35) == 170)
    return (CoreML::Specification::L2NormalizeLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 170;
  v2 = (CoreML::Specification::L2NormalizeLayerParams *)operator new();
  CoreML::Specification::L2NormalizeLayerParams::L2NormalizeLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90724(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::L2NormalizeLayerParams::MergeFrom(std::string *this, const CoreML::Specification::L2NormalizeLayerParams *a2)
{
  std::string *v3;
  uint64_t v4;
  float v5;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((float *)a2 + 4);
  if (v5 != 0.0)
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  return this;
}

CoreML::Specification::SoftmaxLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_softmax(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::SoftmaxLayerParams *v2;

  if (*((_DWORD *)this + 35) == 175)
    return (CoreML::Specification::SoftmaxLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 175;
  v2 = (CoreML::Specification::SoftmaxLayerParams *)operator new();
  CoreML::Specification::SoftmaxLayerParams::SoftmaxLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B907F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::LRNLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_lrn(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::LRNLayerParams *v2;

  if (*((_DWORD *)this + 35) == 180)
    return (CoreML::Specification::LRNLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 180;
  v2 = (CoreML::Specification::LRNLayerParams *)operator new();
  CoreML::Specification::LRNLayerParams::LRNLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90880(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::LRNLayerParams::MergeFrom(std::string *this, const CoreML::Specification::LRNLayerParams *a2)
{
  std::string *v3;
  uint64_t v4;
  float v5;
  float v6;
  std::string::size_type v7;
  float v8;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((float *)a2 + 4);
  if (v5 != 0.0)
    *(float *)&v3->__r_.__value_.__r.__words[2] = v5;
  v6 = *((float *)a2 + 5);
  if (v6 != 0.0)
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  v7 = *((_QWORD *)a2 + 3);
  if (v7)
    v3[1].__r_.__value_.__r.__words[0] = v7;
  v8 = *((float *)a2 + 8);
  if (v8 != 0.0)
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v8;
  return this;
}

CoreML::Specification::CropLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_crop(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::CropLayerParams *v2;

  if (*((_DWORD *)this + 35) == 190)
    return (CoreML::Specification::CropLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 190;
  v2 = (CoreML::Specification::CropLayerParams *)operator new();
  CoreML::Specification::CropLayerParams::CropLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B9097C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::CropLayerParams::MergeFrom(uint64_t *this, const CoreML::Specification::CropLayerParams *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  const CoreML::Specification::BorderAmounts *v6;
  CoreML::Specification::BorderAmounts *v7;
  const CoreML::Specification::BorderAmounts *v8;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (uint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::CropLayerParams *)&CoreML::Specification::_CropLayerParams_default_instance_)
  {
    v6 = (const CoreML::Specification::BorderAmounts *)*((_QWORD *)a2 + 5);
    if (v6)
    {
      v7 = (CoreML::Specification::BorderAmounts *)v3[5];
      if (!v7)
      {
        v7 = (CoreML::Specification::BorderAmounts *)operator new();
        CoreML::Specification::BorderAmounts::BorderAmounts(v7);
        v3[5] = (uint64_t)v7;
        v6 = (const CoreML::Specification::BorderAmounts *)*((_QWORD *)a2 + 5);
      }
      if (v6)
        v8 = v6;
      else
        v8 = (const CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_;
      return CoreML::Specification::BorderAmounts::MergeFrom((uint64_t *)v7, v8);
    }
  }
  return this;
}

void sub_1D3B90A98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40290C9B23);
  _Unwind_Resume(a1);
}

CoreML::Specification::PaddingLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_padding(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::PaddingLayerParams *v2;

  if (*((_DWORD *)this + 35) == 200)
    return (CoreML::Specification::PaddingLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 200;
  v2 = (CoreML::Specification::PaddingLayerParams *)operator new();
  CoreML::Specification::PaddingLayerParams::PaddingLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90B24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40EE95837BLL);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::PaddingLayerParams::MergeFrom(std::string *this, const CoreML::Specification::PaddingLayerParams *a2)
{
  uint64_t v3;
  uint64_t v4;
  const CoreML::Specification::BorderAmounts *v5;
  CoreML::Specification::BorderAmounts *v7;
  const CoreML::Specification::BorderAmounts *v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  float v16;

  v3 = (uint64_t)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = (const CoreML::Specification::BorderAmounts *)*((_QWORD *)a2 + 2);
  if (a2 != (const CoreML::Specification::PaddingLayerParams *)&CoreML::Specification::_PaddingLayerParams_default_instance_
    && v5 != 0)
  {
    v7 = *(CoreML::Specification::BorderAmounts **)(v3 + 16);
    if (!v7)
    {
      v7 = (CoreML::Specification::BorderAmounts *)operator new();
      CoreML::Specification::BorderAmounts::BorderAmounts(v7);
      *(_QWORD *)(v3 + 16) = v7;
      v5 = (const CoreML::Specification::BorderAmounts *)*((_QWORD *)a2 + 2);
    }
    if (v5)
      v8 = v5;
    else
      v8 = (const CoreML::Specification::BorderAmounts *)&CoreML::Specification::_BorderAmounts_default_instance_;
    this = (std::string *)CoreML::Specification::BorderAmounts::MergeFrom((uint64_t *)v7, v8);
  }
  v9 = *((_DWORD *)a2 + 9);
  if (v9 == 3)
  {
    if (*(_DWORD *)(v3 + 36) != 3)
    {
      CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
      *(_DWORD *)(v3 + 36) = 3;
      v11 = (uint64_t *)operator new();
      this = (std::string *)CoreML::Specification::PaddingLayerParams_PaddingReplication::PaddingLayerParams_PaddingReplication((CoreML::Specification::PaddingLayerParams_PaddingReplication *)v11);
      *(_QWORD *)(v3 + 24) = v11;
      if (*((_DWORD *)a2 + 9) != 3)
      {
        this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
        v12 = &CoreML::Specification::_PaddingLayerParams_PaddingReplication_default_instance_;
        goto LABEL_24;
      }
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v9 != 2)
  {
    if (v9 != 1)
      return this;
    if (*(_DWORD *)(v3 + 36) == 1)
    {
      v10 = *(_QWORD *)(v3 + 24);
    }
    else
    {
      CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
      *(_DWORD *)(v3 + 36) = 1;
      v10 = operator new();
      this = (std::string *)CoreML::Specification::PaddingLayerParams_PaddingConstant::PaddingLayerParams_PaddingConstant((CoreML::Specification::PaddingLayerParams_PaddingConstant *)v10);
      *(_QWORD *)(v3 + 24) = v10;
      if (*((_DWORD *)a2 + 9) != 1)
      {
        this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
        v14 = &CoreML::Specification::_PaddingLayerParams_PaddingConstant_default_instance_;
        goto LABEL_31;
      }
    }
    v14 = (uint64_t *)*((_QWORD *)a2 + 3);
LABEL_31:
    v15 = v14[1];
    if ((v15 & 1) != 0)
      this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v10 + 8), v15 & 0xFFFFFFFFFFFFFFFELL);
    v16 = *((float *)v14 + 4);
    if (v16 != 0.0)
      *(float *)(v10 + 16) = v16;
    return this;
  }
  if (*(_DWORD *)(v3 + 36) == 2)
  {
LABEL_22:
    v11 = *(uint64_t **)(v3 + 24);
LABEL_23:
    v12 = (uint64_t *)*((_QWORD *)a2 + 3);
    goto LABEL_24;
  }
  CoreML::Specification::PaddingLayerParams::clear_PaddingType(v3);
  *(_DWORD *)(v3 + 36) = 2;
  v11 = (uint64_t *)operator new();
  this = (std::string *)CoreML::Specification::PaddingLayerParams_PaddingReflection::PaddingLayerParams_PaddingReflection((CoreML::Specification::PaddingLayerParams_PaddingReflection *)v11);
  *(_QWORD *)(v3 + 24) = v11;
  if (*((_DWORD *)a2 + 9) == 2)
    goto LABEL_23;
  this = (std::string *)CoreML::Specification::protobuf_NeuralNetwork_2eproto::InitDefaults((CoreML::Specification::protobuf_NeuralNetwork_2eproto *)this);
  v12 = &CoreML::Specification::_PaddingLayerParams_PaddingReflection_default_instance_;
LABEL_24:
  v13 = v12[1];
  if ((v13 & 1) != 0)
    return google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v11 + 1, v13 & 0xFFFFFFFFFFFFFFFELL);
  return this;
}

void sub_1D3B90D6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UpsampleLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_upsample(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::UpsampleLayerParams *v2;

  if (*((_DWORD *)this + 35) == 210)
    return (CoreML::Specification::UpsampleLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 210;
  v2 = (CoreML::Specification::UpsampleLayerParams *)operator new();
  CoreML::Specification::UpsampleLayerParams::UpsampleLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90E2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40BDAE892FLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::UpsampleLayerParams::MergeFrom(uint64_t *this, const CoreML::Specification::UpsampleLayerParams *a2)
{
  unsigned int *v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;

  v3 = (unsigned int *)this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve(v3 + 4, v3[4] + v5);
    this = (uint64_t *)memcpy((void *)(*((_QWORD *)v3 + 3) + 8 * (int)v3[4] + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    v3[4] += *((_DWORD *)a2 + 4);
  }
  v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<int>::Reserve(v3 + 10, v3[10] + v6);
    this = (uint64_t *)memcpy((void *)(*((_QWORD *)v3 + 6) + 4 * (int)v3[10] + 8), (const void *)(*((_QWORD *)a2 + 6) + 8), 4 * *((int *)a2 + 10));
    v3[10] += *((_DWORD *)a2 + 10);
  }
  v7 = *((_DWORD *)a2 + 15);
  if (v7)
    v3[15] = v7;
  v8 = *((_DWORD *)a2 + 16);
  if (v8)
    v3[16] = v8;
  return this;
}

CoreML::Specification::ResizeBilinearLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_resizebilinear(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::ResizeBilinearLayerParams *v2;

  if (*((_DWORD *)this + 35) == 211)
    return (CoreML::Specification::ResizeBilinearLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 211;
  v2 = (CoreML::Specification::ResizeBilinearLayerParams *)operator new();
  CoreML::Specification::ResizeBilinearLayerParams::ResizeBilinearLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B90FAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::ResizeBilinearLayerParams::MergeFrom(uint64_t *this, const CoreML::Specification::ResizeBilinearLayerParams *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (uint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::ResizeBilinearLayerParams *)&CoreML::Specification::_ResizeBilinearLayerParams_default_instance_)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 5);
    if (v6)
    {
      v7 = v3[5];
      if (!v7)
      {
        v7 = operator new();
        this = (uint64_t *)CoreML::Specification::SamplingMode::SamplingMode((CoreML::Specification::SamplingMode *)v7);
        v3[5] = v7;
        v6 = (uint64_t *)*((_QWORD *)a2 + 5);
      }
      if (v6)
        v8 = v6;
      else
        v8 = &CoreML::Specification::_SamplingMode_default_instance_;
      v9 = v8[1];
      if ((v9 & 1) != 0)
        this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v7 + 8), v9 & 0xFFFFFFFFFFFFFFFELL);
      v10 = *((_DWORD *)v8 + 4);
      if (v10)
        *(_DWORD *)(v7 + 16) = v10;
    }
  }
  return this;
}

void sub_1D3B910D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::CropResizeLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_cropresize(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::CropResizeLayerParams *v2;

  if (*((_DWORD *)this + 35) == 212)
    return (CoreML::Specification::CropResizeLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 212;
  v2 = (CoreML::Specification::CropResizeLayerParams *)operator new();
  CoreML::Specification::CropResizeLayerParams::CropResizeLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91160(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C405E24942CLL);
  _Unwind_Resume(a1);
}

uint64_t *CoreML::Specification::CropResizeLayerParams::MergeFrom(uint64_t *this, const CoreML::Specification::CropResizeLayerParams *a2)
{
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  float v16;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)v3 + 4, *((_DWORD *)v3 + 4) + v5);
    this = (uint64_t *)memcpy((void *)(v3[3] + 8 * *((int *)v3 + 4) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)v3 + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::CropResizeLayerParams *)&CoreML::Specification::_CropResizeLayerParams_default_instance_)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 5);
    if (v6)
    {
      v7 = v3[5];
      if (!v7)
      {
        v7 = operator new();
        this = (uint64_t *)CoreML::Specification::SamplingMode::SamplingMode((CoreML::Specification::SamplingMode *)v7);
        v3[5] = v7;
        v6 = (uint64_t *)*((_QWORD *)a2 + 5);
      }
      if (v6)
        v8 = v6;
      else
        v8 = &CoreML::Specification::_SamplingMode_default_instance_;
      v9 = v8[1];
      if ((v9 & 1) != 0)
        this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v7 + 8), v9 & 0xFFFFFFFFFFFFFFFELL);
      v10 = *((_DWORD *)v8 + 4);
      if (v10)
        *(_DWORD *)(v7 + 16) = v10;
    }
    v11 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v11)
    {
      v12 = v3[6];
      if (!v12)
      {
        v12 = operator new();
        this = (uint64_t *)CoreML::Specification::BoxCoordinatesMode::BoxCoordinatesMode((CoreML::Specification::BoxCoordinatesMode *)v12);
        v3[6] = v12;
        v11 = (uint64_t *)*((_QWORD *)a2 + 6);
      }
      if (v11)
        v13 = v11;
      else
        v13 = &CoreML::Specification::_BoxCoordinatesMode_default_instance_;
      v14 = v13[1];
      if ((v14 & 1) != 0)
        this = (uint64_t *)google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)(v12 + 8), v14 & 0xFFFFFFFFFFFFFFFELL);
      v15 = *((_DWORD *)v13 + 4);
      if (v15)
        *(_DWORD *)(v12 + 16) = v15;
    }
  }
  if (*((_BYTE *)a2 + 56))
    *((_BYTE *)v3 + 56) = 1;
  v16 = *((float *)a2 + 15);
  if (v16 != 0.0)
    *((float *)v3 + 15) = v16;
  return this;
}

void sub_1D3B91310(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::UnaryFunctionLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_unary(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::UnaryFunctionLayerParams *v2;

  if (*((_DWORD *)this + 35) == 220)
    return (CoreML::Specification::UnaryFunctionLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 220;
  v2 = (CoreML::Specification::UnaryFunctionLayerParams *)operator new();
  CoreML::Specification::UnaryFunctionLayerParams::UnaryFunctionLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B913A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40825B58B5);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::UnaryFunctionLayerParams::MergeFrom(std::string *this, const CoreML::Specification::UnaryFunctionLayerParams *a2)
{
  std::string *v3;
  uint64_t v4;
  int v5;
  float v6;
  float v7;
  float v8;
  float v9;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
    LODWORD(v3->__r_.__value_.__r.__words[2]) = v5;
  v6 = *((float *)a2 + 5);
  if (v6 != 0.0)
    *((float *)&v3->__r_.__value_.__r.__words[2] + 1) = v6;
  v7 = *((float *)a2 + 6);
  if (v7 != 0.0)
    *(float *)&v3[1].__r_.__value_.__l.__data_ = v7;
  v8 = *((float *)a2 + 7);
  if (v8 != 0.0)
    *((float *)v3[1].__r_.__value_.__r.__words + 1) = v8;
  v9 = *((float *)a2 + 8);
  if (v9 != 0.0)
    *(float *)&v3[1].__r_.__value_.__r.__words[1] = v9;
  return this;
}

CoreML::Specification::AddLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_add(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::AddLayerParams *v2;

  if (*((_DWORD *)this + 35) == 230)
    return (CoreML::Specification::AddLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 230;
  v2 = (CoreML::Specification::AddLayerParams *)operator new();
  CoreML::Specification::AddLayerParams::AddLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B914AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MultiplyLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_multiply(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::MultiplyLayerParams *v2;

  if (*((_DWORD *)this + 35) == 231)
    return (CoreML::Specification::MultiplyLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 231;
  v2 = (CoreML::Specification::MultiplyLayerParams *)operator new();
  CoreML::Specification::MultiplyLayerParams::MultiplyLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91538(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40CC6EE3FDLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::AverageLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_average(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::AverageLayerParams *v2;

  if (*((_DWORD *)this + 35) == 240)
    return (CoreML::Specification::AverageLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 240;
  v2 = (CoreML::Specification::AverageLayerParams *)operator new();
  CoreML::Specification::AverageLayerParams::AverageLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B915C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::ScaleLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_scale(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::ScaleLayerParams *v2;

  if (*((_DWORD *)this + 35) == 245)
    return (CoreML::Specification::ScaleLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 245;
  v2 = (CoreML::Specification::ScaleLayerParams *)operator new();
  CoreML::Specification::ScaleLayerParams::ScaleLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91650(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40771A4C38);
  _Unwind_Resume(a1);
}

void CoreML::Specification::ScaleLayerParams::MergeFrom(CoreML::Specification::ScaleLayerParams *this, const CoreML::Specification::ScaleLayerParams *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  const CoreML::Specification::WeightParams *v7;
  CoreML::Specification::WeightParams *v8;
  const CoreML::Specification::WeightParams *v9;
  const CoreML::Specification::WeightParams *v10;
  CoreML::Specification::WeightParams *v11;
  const CoreML::Specification::WeightParams *v12;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 4, *((_DWORD *)this + 4) + v5);
    memcpy((void *)(*((_QWORD *)this + 3) + 8 * *((int *)this + 4) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
  v6 = *((_DWORD *)a2 + 10);
  if (v6)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 10, *((_DWORD *)this + 10) + v6);
    memcpy((void *)(*((_QWORD *)this + 6) + 8 * *((int *)this + 10) + 8), (const void *)(*((_QWORD *)a2 + 6) + 8), 8 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  if (a2 != (const CoreML::Specification::ScaleLayerParams *)&CoreML::Specification::_ScaleLayerParams_default_instance_)
  {
    v7 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 8);
    if (v7)
    {
      v8 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 8);
      if (!v8)
      {
        v8 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v8);
        *((_QWORD *)this + 8) = v8;
        v7 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 8);
      }
      if (v7)
        v9 = v7;
      else
        v9 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v8, v9);
    }
    v10 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 9);
    if (v10)
    {
      v11 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 9);
      if (!v11)
      {
        v11 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v11);
        *((_QWORD *)this + 9) = v11;
        v10 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 9);
      }
      if (v10)
        v12 = v10;
      else
        v12 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v11, v12);
    }
  }
  if (*((_BYTE *)a2 + 80))
    *((_BYTE *)this + 80) = 1;
}

void sub_1D3B91808(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::BiasLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_bias(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::BiasLayerParams *v2;

  if (*((_DWORD *)this + 35) == 250)
    return (CoreML::Specification::BiasLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 250;
  v2 = (CoreML::Specification::BiasLayerParams *)operator new();
  CoreML::Specification::BiasLayerParams::BiasLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91898(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C40E853882FLL);
  _Unwind_Resume(a1);
}

void CoreML::Specification::BiasLayerParams::MergeFrom(CoreML::Specification::BiasLayerParams *this, const CoreML::Specification::BiasLayerParams *a2)
{
  uint64_t v4;
  int v5;
  const CoreML::Specification::WeightParams *v6;
  CoreML::Specification::WeightParams *v7;
  const CoreML::Specification::WeightParams *v8;

  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)this + 4, *((_DWORD *)this + 4) + v5);
    memcpy((void *)(*((_QWORD *)this + 3) + 8 * *((int *)this + 4) + 8), (const void *)(*((_QWORD *)a2 + 3) + 8), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
  if (a2 != (const CoreML::Specification::BiasLayerParams *)&CoreML::Specification::_BiasLayerParams_default_instance_)
  {
    v6 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 5);
    if (v6)
    {
      v7 = (CoreML::Specification::WeightParams *)*((_QWORD *)this + 5);
      if (!v7)
      {
        v7 = (CoreML::Specification::WeightParams *)operator new();
        CoreML::Specification::WeightParams::WeightParams(v7);
        *((_QWORD *)this + 5) = v7;
        v6 = (const CoreML::Specification::WeightParams *)*((_QWORD *)a2 + 5);
      }
      if (v6)
        v8 = v6;
      else
        v8 = (const CoreML::Specification::WeightParams *)&CoreML::Specification::_WeightParams_default_instance_;
      CoreML::Specification::WeightParams::MergeFrom(v7, v8);
    }
  }
}

void sub_1D3B919B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x10A1C403937033FLL);
  _Unwind_Resume(a1);
}

CoreML::Specification::MaxLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_max(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::MaxLayerParams *v2;

  if (*((_DWORD *)this + 35) == 260)
    return (CoreML::Specification::MaxLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 260;
  v2 = (CoreML::Specification::MaxLayerParams *)operator new();
  CoreML::Specification::MaxLayerParams::MaxLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91A40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::MinLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_min(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::MinLayerParams *v2;

  if (*((_DWORD *)this + 35) == 261)
    return (CoreML::Specification::MinLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 261;
  v2 = (CoreML::Specification::MinLayerParams *)operator new();
  CoreML::Specification::MinLayerParams::MinLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91ACC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40622C3295);
  _Unwind_Resume(a1);
}

CoreML::Specification::DotProductLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_dot(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::DotProductLayerParams *v2;

  if (*((_DWORD *)this + 35) == 270)
    return (CoreML::Specification::DotProductLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 270;
  v2 = (CoreML::Specification::DotProductLayerParams *)operator new();
  CoreML::Specification::DotProductLayerParams::DotProductLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91B58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C40B60F2DE8);
  _Unwind_Resume(a1);
}

std::string *CoreML::Specification::DotProductLayerParams::MergeFrom(std::string *this, const CoreML::Specification::DotProductLayerParams *a2)
{
  std::string *v3;
  uint64_t v4;

  v3 = this;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    this = google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)&this->__r_.__value_.__l.__size_, v4 & 0xFFFFFFFFFFFFFFFELL);
  if (*((_BYTE *)a2 + 16))
    v3->__r_.__value_.__s.__data_[16] = 1;
  return this;
}

CoreML::Specification::ReduceLayerParams *CoreML::Specification::NeuralNetworkLayer::mutable_reduce(CoreML::Specification::NeuralNetworkLayer *this)
{
  CoreML::Specification::ReduceLayerParams *v2;

  if (*((_DWORD *)this + 35) == 280)
    return (CoreML::Specification::ReduceLayerParams *)*((_QWORD *)this + 16);
  CoreML::Specification::NeuralNetworkLayer::clear_layer((uint64_t)this);
  *((_DWORD *)this + 35) = 280;
  v2 = (CoreML::Specification::ReduceLayerParams *)operator new();
  CoreML::Specification::ReduceLayerParams::ReduceLayerParams(v2);
  *((_QWORD *)this + 16) = v2;
  return v2;
}

void sub_1D3B91C28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1D8251A40](v1, 0x1081C404FE48876);
  _Unwind_Resume(a1);
}

