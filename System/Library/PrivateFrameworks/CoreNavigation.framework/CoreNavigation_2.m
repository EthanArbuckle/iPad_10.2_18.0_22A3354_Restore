void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::~RhythmicStreamingControl(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  *(_QWORD *)this = &off_1E25BCB18;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::~RhythmicStreamingControl(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::New(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BCB18;
  *(_BYTE *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_BYTE *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unint64_t v6;
  char *v7;
  unsigned int v8;
  unsigned __int8 *v9;
  uint64_t result;
  unsigned int v11;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v11 = 0;
      v7 = (char *)*((_QWORD *)a2 + 1);
      v6 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v11);
        if (!(_DWORD)result)
          return result;
        v8 = v11;
        v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v6 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v8 = *v7;
        v9 = (unsigned __int8 *)(v7 + 1);
        *((_QWORD *)a2 + 1) = v9;
      }
      *((_BYTE *)this + 8) = v8 != 0;
      *((_DWORD *)this + 4) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(this + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  uint64_t v1;

  if (*((_DWORD *)this + 4))
    v1 = 2 * (*((_DWORD *)this + 4) & 1u);
  else
    v1 = 0;
  *((_DWORD *)this + 3) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  char v2;
  int v3;
  int v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.RhythmicStreamingControl");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_MountedStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicleExitStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicularConfidenceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 6;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)((char *)this + 22) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BA958;
  *(_QWORD *)((char *)this + 22) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(this, a2);
  return this;
}

void sub_18D0FA6CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v16;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v17;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v18;
  unsigned int v19;
  char v20;
  int v21;
  uint64_t v22;
  _BYTE v23[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  v4 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v4)
    goto LABEL_21;
  if ((v4 & 1) != 0)
  {
    v5 = *((_DWORD *)a2 + 2);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v5);
    if ((this & 1) == 0)
      __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 17631, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
    *((_DWORD *)v3 + 23) |= 1u;
    *((_DWORD *)v3 + 2) = v5;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 2) != 0)
  {
    v6 = *((_DWORD *)a2 + 3);
    if (v6 >= 4)
      __assert_rtn("set_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 17654, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(value)");
    *((_DWORD *)v3 + 23) |= 2u;
    *((_DWORD *)v3 + 3) = v6;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 4) != 0)
  {
    v7 = *((_DWORD *)a2 + 4);
    if (v7 >= 3)
      __assert_rtn("set_mounted_state", "CoreNavigationCLPPrivateDataShared.pb.h", 17677, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_MountedStateType_IsValid(value)");
    *((_DWORD *)v3 + 23) |= 4u;
    *((_DWORD *)v3 + 4) = v7;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 8) != 0)
  {
    v8 = *((_DWORD *)a2 + 5);
    if (v8 >= 4)
      __assert_rtn("set_mounted_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 17700, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(value)");
    *((_DWORD *)v3 + 23) |= 8u;
    *((_DWORD *)v3 + 5) = v8;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0)
      goto LABEL_18;
LABEL_53:
    v21 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((_DWORD *)v3 + 6) = v21;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x40) == 0)
    {
LABEL_19:
      if ((v4 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_54;
  }
  v20 = *((_BYTE *)a2 + 28);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((_BYTE *)v3 + 28) = v20;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x20) != 0)
    goto LABEL_53;
LABEL_18:
  if ((v4 & 0x40) == 0)
    goto LABEL_19;
LABEL_54:
  v22 = *((_QWORD *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((_QWORD *)v3 + 4) = v22;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x80) != 0)
  {
LABEL_20:
    v9 = *((_BYTE *)a2 + 29);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((_BYTE *)v3 + 29) = v9;
    v4 = *((_DWORD *)a2 + 23);
  }
LABEL_21:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v10 = *((_DWORD *)a2 + 12);
    if (v10 >= 4)
      __assert_rtn("set_exit_state", "CoreNavigationCLPPrivateDataShared.pb.h", 17811, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicleExitStateType_IsValid(value)");
    *((_DWORD *)v3 + 23) |= 0x100u;
    *((_DWORD *)v3 + 12) = v10;
    v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 0x200) != 0)
  {
    v11 = *((_QWORD *)a2 + 5);
    *((_DWORD *)v3 + 23) |= 0x200u;
    *((_QWORD *)v3 + 5) = v11;
    v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x400) == 0)
    {
LABEL_27:
      if ((v4 & 0x800) == 0)
        goto LABEL_28;
      goto LABEL_35;
    }
  }
  else if ((v4 & 0x400) == 0)
  {
    goto LABEL_27;
  }
  v12 = *((_QWORD *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x400u;
  *((_QWORD *)v3 + 7) = v12;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x800) == 0)
  {
LABEL_28:
    if ((v4 & 0x1000) == 0)
      goto LABEL_29;
    goto LABEL_37;
  }
LABEL_35:
  v13 = *((_DWORD *)a2 + 13);
  this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v13);
  if ((this & 1) == 0)
    __assert_rtn("set_raw_type", "CoreNavigationCLPPrivateDataShared.pb.h", 17878, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
  *((_DWORD *)v3 + 23) |= 0x800u;
  *((_DWORD *)v3 + 13) = v13;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x1000) == 0)
  {
LABEL_29:
    if ((v4 & 0x2000) == 0)
      goto LABEL_30;
    goto LABEL_39;
  }
LABEL_37:
  v14 = *((_DWORD *)a2 + 18);
  if (v14 >= 4)
    __assert_rtn("set_raw_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 17901, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(value)");
  *((_DWORD *)v3 + 23) |= 0x1000u;
  *((_DWORD *)v3 + 18) = v14;
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x2000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000) == 0)
      goto LABEL_31;
    goto LABEL_44;
  }
LABEL_39:
  *((_DWORD *)v3 + 23) |= 0x2000u;
  v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 8);
  if (!v15)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)operator new();
    v15 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 8) = this;
  }
  v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 8);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_
                                                                          + 64);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v15, v16);
  v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 0x8000) == 0)
      return;
    goto LABEL_49;
  }
LABEL_44:
  *((_DWORD *)v3 + 23) |= 0x4000u;
  v17 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 10);
  if (!v17)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)operator new();
    v17 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 10) = this;
  }
  v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 10);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_
                                                                          + 80);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v17, v18);
  if ((*((_DWORD *)a2 + 23) & 0x8000) != 0)
  {
LABEL_49:
    v19 = *((_DWORD *)a2 + 19);
    if (v19 >= 6)
      __assert_rtn("set_vehicular_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 18008, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicularConfidenceType_IsValid(value)");
    *((_DWORD *)v3 + 23) |= 0x8000u;
    *((_DWORD *)v3 + 19) = v19;
  }
}

void sub_18D0FAB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::~MotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  *(_QWORD *)this = &off_1E25BA958;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::~MotionActivity(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 10);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = &off_1E25BA958;
  *(_QWORD *)(v1 + 22) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(this + 92);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 22) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 40) = 0;
    if ((v1 & 0x2000) != 0)
    {
      v2 = *(_QWORD *)(this + 64);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 92);
      }
    }
    if ((v1 & 0x4000) != 0)
    {
      v3 = *(_QWORD *)(this + 80);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 76) = 0;
  }
  *(_DWORD *)(this + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  char *v25;
  uint64_t result;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned int v38;
  _BYTE *v39;
  unsigned int v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  unint64_t v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  uint64_t v48;
  char *v49;
  int v50;
  int v51;
  int v52;
  BOOL v53;
  int v54;
  _BYTE *v55;
  uint64_t v56;
  char *v57;
  int v58;
  int v59;
  int v60;
  int v61;
  unsigned __int8 *v62;
  unsigned int v63;
  unsigned int v64[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v64[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v8 = v64[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v8))
        {
          *((_DWORD *)this + 23) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 < v9 && *v27 == 16)
        {
          v10 = v27 + 1;
          *((_QWORD *)a2 + 1) = v10;
          goto LABEL_52;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_52:
        v64[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v28 = v64[0];
        }
        else
        {
          v28 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v28 <= 3)
        {
          *((_DWORD *)this + 23) |= 2u;
          *((_DWORD *)this + 3) = v28;
        }
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v11 || *v29 != 24)
          continue;
        v12 = v29 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_62:
        v64[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v30 = v64[0];
        }
        else
        {
          v30 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v30 <= 2)
        {
          *((_DWORD *)this + 23) |= 4u;
          *((_DWORD *)this + 4) = v30;
        }
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v31 >= v13 || *v31 != 32)
          continue;
        v14 = v31 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_72:
        v64[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v32 = v64[0];
        }
        else
        {
          v32 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v32 <= 3)
        {
          *((_DWORD *)this + 23) |= 8u;
          *((_DWORD *)this + 5) = v32;
        }
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v33 >= v15 || *v33 != 40)
          continue;
        v16 = v33 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_82:
        v64[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v34 = v64[0];
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v16;
          v35 = v16 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_BYTE *)this + 28) = v34 != 0;
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v35 >= v15 || *v35 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_90:
        v64[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v64) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v64[0];
        *((_DWORD *)this + 23) |= 0x20u;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_94:
        *(_QWORD *)v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v64;
        *((_DWORD *)this + 23) |= 0x40u;
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v37 >= v17 || *v37 != 64)
          continue;
        v18 = v37 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_98:
        v64[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v38 = v64[0];
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v17 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v38 = *v18;
          v39 = v18 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_BYTE *)this + 29) = v38 != 0;
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v39 >= v17 || *v39 != 72)
          continue;
        v19 = v39 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_106:
        v64[0] = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v40 = v64[0];
        }
        else
        {
          v40 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v40 <= 3)
        {
          *((_DWORD *)this + 23) |= 0x100u;
          *((_DWORD *)this + 12) = v40;
        }
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_116:
        *(_QWORD *)v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v64;
        *((_DWORD *)this + 23) |= 0x200u;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_120:
        *(_QWORD *)v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v64;
        *((_DWORD *)this + 23) |= 0x400u;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v43 >= v20 || *v43 != 96)
          continue;
        v21 = v43 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_124:
        v64[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v44 = v64[0];
        }
        else
        {
          v44 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v44))
        {
          *((_DWORD *)this + 23) |= 0x800u;
          *((_DWORD *)this + 13) = v44;
        }
        v45 = (_BYTE *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v45 >= v22 || *v45 != 104)
          continue;
        v23 = v45 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_134:
        v64[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v46 = v64[0];
        }
        else
        {
          v46 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        if (v46 <= 3)
        {
          *((_DWORD *)this + 23) |= 0x1000u;
          *((_DWORD *)this + 18) = v46;
        }
        v47 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 != 114)
          continue;
        *((_QWORD *)a2 + 1) = v47 + 1;
LABEL_144:
        *((_DWORD *)this + 23) |= 0x2000u;
        v48 = *((_QWORD *)this + 8);
        if (!v48)
        {
          v48 = operator new();
          *(_QWORD *)v48 = &off_1E25BDBF8;
          *(_OWORD *)(v48 + 8) = 0u;
          *(_OWORD *)(v48 + 24) = 0u;
          *((_QWORD *)this + 8) = v48;
        }
        v64[0] = 0;
        v49 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v49 >= *((_QWORD *)a2 + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0;
        }
        else
        {
          v64[0] = *v49;
          *((_QWORD *)a2 + 1) = v49 + 1;
        }
        v50 = *((_DWORD *)a2 + 14);
        v51 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v50 + 1;
        if (v50 >= v51)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v48, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v52 = *((_DWORD *)a2 + 14);
        v53 = __OFSUB__(v52, 1);
        v54 = v52 - 1;
        if (v54 < 0 == v53)
          *((_DWORD *)a2 + 14) = v54;
        v55 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 != 122)
          continue;
        *((_QWORD *)a2 + 1) = v55 + 1;
LABEL_158:
        *((_DWORD *)this + 23) |= 0x4000u;
        v56 = *((_QWORD *)this + 10);
        if (!v56)
        {
          v56 = operator new();
          *(_QWORD *)v56 = &off_1E25BDBF8;
          *(_OWORD *)(v56 + 8) = 0u;
          *(_OWORD *)(v56 + 24) = 0u;
          *((_QWORD *)this + 10) = v56;
        }
        v64[0] = 0;
        v57 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v57 >= *((_QWORD *)a2 + 2) || *v57 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0;
        }
        else
        {
          v64[0] = *v57;
          *((_QWORD *)a2 + 1) = v57 + 1;
        }
        v58 = *((_DWORD *)a2 + 14);
        v59 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v58 + 1;
        if (v58 < v59)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v56, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v60 = *((_DWORD *)a2 + 14);
              v53 = __OFSUB__(v60, 1);
              v61 = v60 - 1;
              if (v61 < 0 == v53)
                *((_DWORD *)a2 + 14) = v61;
              v62 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v24 = *((_QWORD *)a2 + 2);
              if ((int)v24 - (int)v62 > 1 && *v62 == 128 && v62[1] == 1)
              {
                v25 = (char *)(v62 + 2);
                *((_QWORD *)a2 + 1) = v25;
LABEL_173:
                v64[0] = 0;
                if ((unint64_t)v25 >= v24 || *v25 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
                  if (!(_DWORD)result)
                    return result;
                  v63 = v64[0];
                }
                else
                {
                  v63 = *v25;
                  *((_QWORD *)a2 + 1) = v25 + 1;
                }
                if (v63 <= 5)
                {
                  *((_DWORD *)this + 23) |= 0x8000u;
                  *((_DWORD *)this + 19) = v63;
                }
                if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  result = 1;
                  *((_BYTE *)a2 + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_62;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_72;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_82;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_90;
        goto LABEL_41;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_94;
        goto LABEL_41;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_98;
      case 9u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_106;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_116;
        goto LABEL_41;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_120;
        goto LABEL_41;
      case 0xCu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_124;
      case 0xDu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_134;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_144;
        goto LABEL_41;
      case 0xFu:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_158;
        goto LABEL_41;
      case 0x10u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        goto LABEL_173;
      default:
        v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = this[23];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[23];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *((unsigned __int8 *)v5 + 28), (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *((float *)v5 + 6), a3);
  v6 = v5[23];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *((double *)v5 + 4), a3);
  v6 = v5[23];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *((unsigned __int8 *)v5 + 29), (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[12], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *((double *)v5 + 5), a3);
  v6 = v5[23];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_29;
  }
LABEL_28:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *((double *)v5 + 7), a3);
  v6 = v5[23];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_30;
  }
LABEL_29:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_31;
  }
LABEL_30:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[18], (uint64_t)a2, a4);
  v6 = v5[23];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_31:
  v7 = *((_QWORD *)v5 + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 64);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, a2, a4);
  v6 = v5[23];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[19], (uint64_t)a2, a4);
  }
LABEL_34:
  v8 = *((_QWORD *)v5 + 10);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 80);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v8, a2, a4);
  if ((v5[23] & 0x8000) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[19], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_42;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 8);
  if ((v5 & 0x80000000) != 0)
  {
    this = 10;
  }
  else if (v5 >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    v2 = *(_DWORD *)(v1 + 92);
  }
  else
  {
    this = 1;
  }
  v3 = this + 1;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v6 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 16);
    if ((v7 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v7 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
    if ((v2 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  if ((v2 & 8) != 0)
  {
LABEL_27:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 20);
    if ((v8 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v8 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_33:
  v9 = v3 + 2;
  if ((v2 & 0x10) == 0)
    v9 = v3;
  if ((v2 & 0x20) != 0)
    v9 += 5;
  if ((v2 & 0x40) != 0)
    v9 += 9;
  if ((v2 & 0x80) != 0)
    v4 = v9 + 2;
  else
    v4 = v9;
LABEL_42:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_99;
  if ((v2 & 0x100) != 0)
  {
    this = *(unsigned int *)(v1 + 48);
    if ((this & 0x80000000) != 0)
    {
      v10 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      v10 = this + 1;
      v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      v10 = 2;
    }
    LODWORD(v4) = v10 + v4;
  }
  v11 = v4 + 9;
  if ((v2 & 0x200) == 0)
    v11 = v4;
  if ((v2 & 0x400) != 0)
    v4 = v11 + 9;
  else
    v4 = v11;
  if ((v2 & 0x800) != 0)
  {
    this = *(unsigned int *)(v1 + 52);
    if ((this & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      v12 = this + 1;
      v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      v12 = 2;
    }
    v4 = (v12 + v4);
    if ((v2 & 0x1000) == 0)
    {
LABEL_57:
      if ((v2 & 0x2000) == 0)
        goto LABEL_58;
      goto LABEL_73;
    }
  }
  else if ((v2 & 0x1000) == 0)
  {
    goto LABEL_57;
  }
  this = *(unsigned int *)(v1 + 72);
  if ((this & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (this >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
    v13 = this + 1;
    v2 = *(_DWORD *)(v1 + 92);
  }
  else
  {
    v13 = 2;
  }
  v4 = (v13 + v4);
  if ((v2 & 0x2000) == 0)
  {
LABEL_58:
    if ((v2 & 0x4000) == 0)
      goto LABEL_59;
    goto LABEL_83;
  }
LABEL_73:
  v14 = *(_QWORD *)(v1 + 64);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 64);
  }
  v15 = *(unsigned __int8 *)(v14 + 36);
  v16 = (v15 << 31 >> 31) & 9;
  if ((v15 & 2) != 0)
    v16 += 9;
  if ((v15 & 4) != 0)
    v16 += 9;
  if (*(_BYTE *)(v14 + 36))
    v17 = v16;
  else
    v17 = 0;
  *(_DWORD *)(v14 + 32) = v17;
  v4 = (v4 + v17 + 2);
  v2 = *(_DWORD *)(v1 + 92);
  if ((v2 & 0x4000) == 0)
  {
LABEL_59:
    if ((v2 & 0x8000) == 0)
      goto LABEL_99;
    goto LABEL_93;
  }
LABEL_83:
  v18 = *(_QWORD *)(v1 + 80);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v18 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 80);
  }
  v19 = *(unsigned __int8 *)(v18 + 36);
  v20 = (v19 << 31 >> 31) & 9;
  if ((v19 & 2) != 0)
    v20 += 9;
  if ((v19 & 4) != 0)
    v20 += 9;
  if (*(_BYTE *)(v18 + 36))
    v21 = v20;
  else
    v21 = 0;
  *(_DWORD *)(v18 + 32) = v21;
  v4 = (v4 + v21 + 2);
  if ((*(_DWORD *)(v1 + 92) & 0x8000) != 0)
  {
LABEL_93:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 76);
    if ((v22 & 0x80000000) != 0)
    {
      v23 = 12;
    }
    else if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 2;
    }
    else
    {
      v23 = 3;
    }
    v4 = (v23 + v4);
  }
LABEL_99:
  *(_DWORD *)(v1 + 88) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  double result;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 28);
    *((_BYTE *)this + 28) = *((_BYTE *)a2 + 28);
    *((_BYTE *)a2 + 28) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    LOBYTE(v5) = *((_BYTE *)this + 29);
    *((_BYTE *)this + 29) = *((_BYTE *)a2 + 29);
    *((_BYTE *)a2 + 29) = v5;
    v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
    v9 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v9;
    result = *((double *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((double *)a2 + 7) = result;
    v11 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v11;
    v12 = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v12;
    v13 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v13;
    v14 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v14;
    LODWORD(v14) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v14;
    LODWORD(v14) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v14;
    LODWORD(v14) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v14;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionActivity");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionState *CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MotionState(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  *(_QWORD *)this = &off_1E25BA160;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(this, a2);
  return this;
}

void sub_18D0FBDCC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)operator new();
      v8 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BA958;
      *(_QWORD *)((char *)this + 22) = 0;
      *((_OWORD *)this + 2) = 0u;
      *((_OWORD *)this + 3) = 0u;
      *((_OWORD *)this + 4) = 0u;
      *((_OWORD *)this + 5) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_
                                                                                + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(v8, v9);
  }
}

void sub_18D0FBF70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::~MotionState(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  *(_QWORD *)this = &off_1E25BA160;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::~MotionState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BA160;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)(v22 + 8) = 0;
      *(_QWORD *)(v22 + 16) = 0;
      *(_QWORD *)v22 = &off_1E25BA958;
      *(_QWORD *)(v22 + 22) = 0;
      *(_OWORD *)(v22 + 32) = 0u;
      *(_OWORD *)(v22 + 48) = 0u;
      *(_OWORD *)(v22 + 64) = 0u;
      *(_OWORD *)(v22 + 80) = 0u;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = *((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionState");
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::WorkoutUpdate(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  *(_QWORD *)this = &off_1E25BA610;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(this, a2);
  return this;
}

void sub_18D0FC7B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  CoreNavigation::CLP::LogEntry::PrivateData *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v5);
      if ((this & 1) == 0)
        __assert_rtn("set_activity_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18145, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 1u;
      *((_DWORD *)v3 + 4) = v5;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)v3 + 9) |= 2u;
      *((_QWORD *)v3 + 1) = v6;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0)
          return;
        goto LABEL_17;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    *((_DWORD *)v3 + 9) |= 4u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 3);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 3) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 3);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_
                                                                           + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 9) & 8) != 0)
    {
LABEL_17:
      v9 = (CoreNavigation::CLP::LogEntry::PrivateData *)*((unsigned int *)a2 + 5);
      if ((CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(v9) & 1) == 0)
        __assert_rtn("set_predicted_workout_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18232, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 8u;
      *((_DWORD *)v3 + 5) = (_DWORD)v9;
    }
  }
}

void sub_18D0FC968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::~WorkoutUpdate(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BA610;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 3);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::~WorkoutUpdate(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 3);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::New(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA610;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 36);
  if (v1)
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(this + 24);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 20) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  char *v11;
  uint64_t result;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  _BYTE *v22;
  unint64_t v23;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v24[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
          if (!(_DWORD)result)
            return result;
          v8 = v24[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v8))
        {
          *((_DWORD *)this + 9) |= 1u;
          *((_DWORD *)this + 4) = v8;
        }
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 < *((_QWORD *)a2 + 2) && *v13 == 17)
        {
          *((_QWORD *)a2 + 1) = v13 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_17;
LABEL_28:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v24;
        v9 = *((_DWORD *)this + 9) | 2;
        *((_DWORD *)this + 9) = v9;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_32:
        *((_DWORD *)this + 9) = v9 | 4;
        v15 = *((_QWORD *)this + 3);
        if (!v15)
        {
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E25BDBF8;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *((_QWORD *)this + 3) = v15;
        }
        v24[0] = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 < v18)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v15, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v19 = *((_DWORD *)a2 + 14);
              v20 = __OFSUB__(v19, 1);
              v21 = v19 - 1;
              if (v21 < 0 == v20)
                *((_DWORD *)a2 + 14) = v21;
              v22 = (_BYTE *)*((_QWORD *)a2 + 1);
              v10 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v22 < v10 && *v22 == 32)
              {
                v11 = v22 + 1;
                *((_QWORD *)a2 + 1) = v11;
LABEL_46:
                v24[0] = 0;
                if ((unint64_t)v11 >= v10 || *v11 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
                  if (!(_DWORD)result)
                    return result;
                  v23 = v24[0];
                }
                else
                {
                  v23 = *v11;
                  *((_QWORD *)a2 + 1) = v11 + 1;
                }
                if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v23))
                {
                  *((_DWORD *)this + 9) |= 8u;
                  *((_DWORD *)this + 5) = v23;
                }
                if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  result = 1;
                  *((_BYTE *)a2 + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_17;
        v9 = *((_DWORD *)this + 9);
        goto LABEL_32;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_46;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[9];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[4], (uint64_t)a2, a4);
    v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *((double *)v5 + 1), a3);
  v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  }
LABEL_8:
  v7 = *((_QWORD *)v5 + 3);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ + 24);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((v5[9] & 8) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  v1 = this;
  LOBYTE(v2) = *((_BYTE *)this + 36);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 36) & 1) != 0)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((unsigned int *)this + 4);
      if ((this & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (this >= 0x80)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(this);
        v3 = (_DWORD)this + 1;
        v2 = *((_DWORD *)v1 + 9);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 4) != 0)
    {
      v5 = *((_QWORD *)v1 + 3);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ + 24);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v4 = (v4 + v6 + 2);
      v2 = *((_DWORD *)v1 + 9);
    }
    if ((v2 & 8) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 5);
      if ((v8 & 0x80000000) != 0)
      {
        v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      }
      else
      {
        v9 = 2;
      }
      v4 = (v9 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)v1 + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  int v2;
  double result;
  uint64_t v4;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WorkoutUpdate");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MotionStateObserver(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  *(_QWORD *)this = &off_1E25BC0C8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(this, a2);
  return this;
}

void sub_18D0FD170(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BA610;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                                                               + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(v8, v9);
  }
}

void sub_18D0FD30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::~MotionStateObserver(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  *(_QWORD *)this = &off_1E25BC0C8;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::~MotionStateObserver(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BC0C8;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)v22 = &off_1E25BA610;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)(v22 + 24) = 0u;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                                                         + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionStateObserver");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0x43;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutLocationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 8) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::WorkoutSettings(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  uint64_t v3;

  v3 = MEMORY[0x1E0DE8338];
  *(_QWORD *)this = &off_1E25BB0D8;
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 2) = v3;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(this, a2);
  return this;
}

void sub_18D0FDB80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  int v4;
  std::string *v5;
  const std::string *v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if (!(_BYTE)v4)
    return;
  v5 = (std::string *)MEMORY[0x1E0DE8338];
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    v6 = (const std::string *)*((_QWORD *)a2 + 1);
    *((_DWORD *)this + 10) |= 1u;
    v7 = (std::string *)*((_QWORD *)this + 1);
    if (v7 == v5)
    {
      v7 = (std::string *)operator new();
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      *((_QWORD *)this + 1) = v7;
    }
    std::string::operator=(v7, v6);
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
LABEL_16:
      v10 = *((_DWORD *)a2 + 6);
      if (v10 >= 0x43)
        __assert_rtn("set_workout_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18509, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutType_IsValid(value)");
      *((_DWORD *)this + 10) |= 4u;
      *((_DWORD *)this + 6) = v10;
      v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0)
          return;
        goto LABEL_20;
      }
      goto LABEL_18;
    }
  }
  else if ((*((_BYTE *)a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 10) |= 2u;
  v9 = (std::string *)*((_QWORD *)this + 2);
  if (v9 == v5)
  {
    v9 = (std::string *)operator new();
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v9;
  }
  std::string::operator=(v9, v8);
  v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 4) != 0)
    goto LABEL_16;
LABEL_7:
  if ((v4 & 8) == 0)
    goto LABEL_8;
LABEL_18:
  v11 = *((_DWORD *)a2 + 7);
  if (v11 >= 5)
    __assert_rtn("set_workout_location_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18532, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutLocationType_IsValid(value)");
  *((_DWORD *)this + 10) |= 8u;
  *((_DWORD *)this + 7) = v11;
  if ((*((_DWORD *)a2 + 10) & 0x10) != 0)
  {
LABEL_20:
    v12 = *((_DWORD *)a2 + 8);
    if (v12 >= 3)
      __assert_rtn("set_workout_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 18555, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutMode_IsValid(value)");
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 8) = v12;
  }
}

void sub_18D0FDD94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::~WorkoutSettings(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  *(_QWORD *)this = &off_1E25BB0D8;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::~WorkoutSettings(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *((_QWORD *)this + 1);
  v3 = MEMORY[0x1E0DE8338];
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  v5 = *((_QWORD *)v1 + 2);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)MEMORY[0x18D78B5D4](v5, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::New(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  v2 = MEMORY[0x1E0DE8338];
  *(_QWORD *)result = &off_1E25BB0D8;
  *(_QWORD *)(result + 8) = v2;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(this + 40))
  {
    v1 = MEMORY[0x1E0DE8338];
    if ((*(_BYTE *)(this + 40) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 40) & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != v1)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  _QWORD *v8;
  uint64_t result;
  _BYTE *v10;
  _QWORD *v11;
  unint64_t v12;
  _BYTE *v13;
  char *v14;
  unsigned int v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;

  v4 = MEMORY[0x1E0DE8338];
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 10) |= 1u;
        if (*((_QWORD *)this + 1) == v4)
        {
          v8 = (_QWORD *)operator new();
          v8[1] = 0;
          v8[2] = 0;
          *v8 = 0;
          *((_QWORD *)this + 1) = v8;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if ((_DWORD)result)
        {
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
          {
            *((_QWORD *)a2 + 1) = v10 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_31;
LABEL_17:
        *((_DWORD *)this + 10) |= 2u;
        if (*((_QWORD *)this + 2) == v4)
        {
          v11 = (_QWORD *)operator new();
          v11[1] = 0;
          v11[2] = 0;
          *v11 = 0;
          *((_QWORD *)this + 2) = v11;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if ((_DWORD)result)
        {
          v13 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v13 < v12 && *v13 == 24)
          {
            v14 = v13 + 1;
            *((_QWORD *)a2 + 1) = v14;
            goto LABEL_25;
          }
          continue;
        }
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_25:
        v26 = 0;
        if ((unint64_t)v14 < v12 && (*v14 & 0x80000000) == 0)
        {
          v15 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_37;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
        if ((_DWORD)result)
        {
          v15 = v26;
LABEL_37:
          if (v15 <= 0x42)
          {
            *((_DWORD *)this + 10) |= 4u;
            *((_DWORD *)this + 6) = v15;
          }
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v20 < v16 && *v20 == 32)
          {
            v17 = v20 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_42;
          }
          continue;
        }
        break;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
LABEL_42:
        v25 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!(_DWORD)result)
            return result;
          v21 = v25;
        }
        else
        {
          v21 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        if (v21 <= 4)
        {
          *((_DWORD *)this + 10) |= 8u;
          *((_DWORD *)this + 7) = v21;
        }
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v22 >= v18 || *v22 != 40)
          continue;
        v19 = v22 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_52:
        v24 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v23 = v24;
        }
        else
        {
          v23 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v23 <= 2)
        {
          *((_DWORD *)this + 10) |= 0x10u;
          *((_DWORD *)this + 8) = v23;
        }
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 5u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      default:
        v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = this;
  v6 = this[10];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  }
LABEL_10:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
  if ((v5[10] & 0x10) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[8], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_46;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(v4 + 23);
  else
    v8 = v7;
  if (v8 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    v5 = *(unsigned __int8 *)(v4 + 23);
    v7 = *(_QWORD *)(v4 + 8);
    v9 = v10 + 1;
    v2 = *((_DWORD *)this + 10);
    v6 = *(_BYTE *)(v4 + 23);
  }
  else
  {
    v9 = 2;
  }
  if (v6 < 0)
    v5 = v7;
  v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v11 = *((_QWORD *)this + 2);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v15 = *(unsigned __int8 *)(v11 + 23);
    else
      v15 = v14;
    if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15);
      v12 = *(unsigned __int8 *)(v11 + 23);
      v14 = *(_QWORD *)(v11 + 8);
      v2 = *((_DWORD *)this + 10);
      v13 = *(_BYTE *)(v11 + 23);
    }
    else
    {
      v16 = 1;
    }
    if (v13 < 0)
      v12 = v14;
    v3 = (v3 + v16 + v12 + 1);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v17 & 0x80000000) != 0)
    {
      v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v18 = 2;
    }
    v3 = (v18 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0)
        goto LABEL_46;
      goto LABEL_40;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v19 & 0x80000000) != 0)
  {
    v20 = 11;
  }
  else if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v20 = 2;
  }
  v3 = (v20 + v3);
  if ((v2 & 0x10) != 0)
  {
LABEL_40:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v21 & 0x80000000) != 0)
    {
      v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
    }
    else
    {
      v22 = 2;
    }
    v3 = (v22 + v3);
  }
LABEL_46:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WorkoutSettings");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent_EventType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0x13;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::WorkoutEvent(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  *(_QWORD *)this = &off_1E25BA4A8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(this, a2);
  return this;
}

void sub_18D0FE6F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  unsigned int v9;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v10;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v11;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *v12;
  uint64_t v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *v14;
  _BYTE v15[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 48);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 48) & 1) != 0)
  {
    *((_DWORD *)v3 + 12) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)operator new();
      v5 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
LABEL_20:
      v9 = *((_DWORD *)a2 + 10);
      if (v9 >= 0x13)
        __assert_rtn("set_event_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18666, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent_EventType_IsValid(value)");
      *((_DWORD *)v3 + 12) |= 4u;
      *((_DWORD *)v3 + 10) = v9;
      v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0)
          return;
        goto LABEL_27;
      }
      goto LABEL_22;
    }
  }
  else if ((*((_BYTE *)a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 12) |= 2u;
  v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 2);
  if (!v7)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)operator new();
    v7 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 2) = this;
  }
  v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
  v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 4) != 0)
    goto LABEL_20;
LABEL_7:
  if ((v4 & 8) == 0)
    goto LABEL_8;
LABEL_22:
  *((_DWORD *)v3 + 12) |= 8u;
  v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 3);
  if (!v10)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)operator new();
    v10 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 3) = this;
  }
  v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                          + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
  if ((*((_DWORD *)a2 + 12) & 0x10) != 0)
  {
LABEL_27:
    *((_DWORD *)v3 + 12) |= 0x10u;
    v12 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((_QWORD *)v3 + 4);
    if (!v12)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)operator new();
      v12 = this;
      v13 = MEMORY[0x1E0DE8338];
      *(_QWORD *)this = &off_1E25BB0D8;
      *((_QWORD *)this + 1) = v13;
      *((_QWORD *)this + 2) = v13;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)this + 4) = 0;
      *((_DWORD *)this + 10) = 0;
      *((_QWORD *)v3 + 4) = this;
    }
    v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((_QWORD *)a2 + 4);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                                  + 32);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(v12, v14);
  }
}

void sub_18D0FE9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::~WorkoutEvent(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  *(_QWORD *)this = &off_1E25BA4A8;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::~WorkoutEvent(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::New(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA4A8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 48);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 48) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 48);
      }
    }
    if ((v2 & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v2 = *(_DWORD *)(this + 48);
      }
    }
    *(_DWORD *)(this + 40) = 0;
    if ((v2 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 24);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        v2 = *(_DWORD *)(this + 48);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(this + 32);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _BYTE *v24;
  unsigned int v25;
  uint64_t result;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        *((_DWORD *)this + 12) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v41 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
        goto LABEL_34;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
LABEL_34:
        *((_DWORD *)this + 12) |= 2u;
        v18 = *((_QWORD *)this + 2);
        if (!v18)
        {
          v18 = operator new();
          *(_QWORD *)v18 = &off_1E25BDBF8;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *((_QWORD *)this + 2) = v18;
        }
        v41 = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v18, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v22, 1);
        v23 = v22 - 1;
        if (v23 < 0 == v15)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v10 || *v24 != 24)
          continue;
        v11 = v24 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_48:
        v41 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41);
          if (!(_DWORD)result)
            return result;
          v25 = v41;
        }
        else
        {
          v25 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (v25 <= 0x12)
        {
          *((_DWORD *)this + 12) |= 4u;
          *((_DWORD *)this + 10) = v25;
        }
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_58:
        *((_DWORD *)this + 12) |= 8u;
        v28 = *((_QWORD *)this + 3);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)v28 = &off_1E25BDBF8;
          *(_OWORD *)(v28 + 8) = 0u;
          *(_OWORD *)(v28 + 24) = 0u;
          *((_QWORD *)this + 3) = v28;
        }
        v41 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v15)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_72:
        *((_DWORD *)this + 12) |= 0x10u;
        v35 = *((_QWORD *)this + 4);
        if (!v35)
        {
          v35 = operator new();
          *(_QWORD *)v35 = &off_1E25BB0D8;
          *(_QWORD *)(v35 + 8) = v4;
          *(_QWORD *)(v35 + 16) = v4;
          *(_QWORD *)(v35 + 24) = 0;
          *(_QWORD *)(v35 + 32) = 0;
          *(_DWORD *)(v35 + 40) = 0;
          *((_QWORD *)this + 4) = v35;
        }
        v41 = 0;
        v36 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v36;
          *((_QWORD *)a2 + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)a2 + 14);
        v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)v35, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v39 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v15)
          *((_DWORD *)a2 + 14) = v40;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_48;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_58;
        goto LABEL_22;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        goto LABEL_72;
      default:
        v7 = TagFallback & 7;
LABEL_22:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    goto LABEL_17;
  }
LABEL_14:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
  {
LABEL_17:
    v10 = *(_QWORD *)(v5 + 32);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;

  v1 = this;
  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_49;
  }
  if ((*((_BYTE *)this + 48) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = (v5 + 2);
  v2 = *((_DWORD *)v1 + 12);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)v1 + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 16);
    }
    v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(_BYTE *)(v7 + 36))
    {
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if ((v8 & 4) != 0)
        v8 = v9 + 9;
      else
        v8 = v9;
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 = (v3 + v8 + 2);
    v2 = *((_DWORD *)v1 + 12);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((unsigned int *)v1 + 10);
    if ((this & 0x80000000) != 0)
    {
      v10 = 11;
    }
    else if (this >= 0x80)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(this);
      v10 = (_DWORD)this + 1;
      v2 = *((_DWORD *)v1 + 12);
    }
    else
    {
      v10 = 2;
    }
    v3 = (v10 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0)
        goto LABEL_49;
      goto LABEL_43;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  v11 = *((_QWORD *)v1 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 24);
  }
  v12 = *(unsigned __int8 *)(v11 + 36);
  if (*(_BYTE *)(v11 + 36))
  {
    v13 = (v12 << 31 >> 31) & 9;
    if ((v12 & 2) != 0)
      v13 += 9;
    if ((v12 & 4) != 0)
      v12 = v13 + 9;
    else
      v12 = v13;
  }
  *(_DWORD *)(v11 + 32) = v12;
  v3 = (v3 + v12 + 2);
  if ((*((_DWORD *)v1 + 12) & 0x10) != 0)
  {
LABEL_43:
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((_QWORD *)v1 + 4);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v14 = *(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                            + 32);
    }
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::ByteSize(v14);
    v16 = (int)v15;
    if (v15 >= 0x80)
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    else
      v17 = 1;
    v3 = (v3 + v16 + v17 + 1);
  }
LABEL_49:
  *((_DWORD *)v1 + 11) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WorkoutEvent");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MotionStateMediator(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  *(_QWORD *)this = &off_1E25BC050;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(this, a2);
  return this;
}

void sub_18D0FF5C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BA4A8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 36) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                                                              + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(v8, v9);
  }
}

void sub_18D0FF764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::~MotionStateMediator(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  *(_QWORD *)this = &off_1E25BC050;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::~MotionStateMediator(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BC050;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)v22 = &off_1E25BA4A8;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)(v22 + 24) = 0u;
      *(_OWORD *)(v22 + 36) = 0u;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                                                        + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionStateMediator");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MediatedMotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25B0FD0;
  *((_BYTE *)this + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(this, a2);
  return this;
}

void sub_18D0FFFA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *v3;
  int v4;
  char v5;
  uint64_t v6;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *v8;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_QWORD *)v3 + 1) = v6;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 8) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((_QWORD *)v3 + 2);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *)operator new();
      v7 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BA958;
      *(_QWORD *)((char *)this + 22) = 0;
      *((_OWORD *)this + 2) = 0u;
      *((_OWORD *)this + 3) = 0u;
      *((_OWORD *)this + 4) = 0u;
      *((_OWORD *)this + 5) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((_QWORD *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity **)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_
                                                                                + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      v5 = *((_BYTE *)a2 + 24);
      *((_DWORD *)v3 + 8) |= 4u;
      *((_BYTE *)v3 + 24) = v5;
    }
  }
}

void sub_18D1000EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::~MediatedMotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25B0FD0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::~MediatedMotionActivity(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::New(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25B0FD0;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;

  v1 = this;
  v2 = *(_BYTE *)(this + 32);
  if (v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Clear(this);
    }
    *(_BYTE *)(v1 + 24) = 0;
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  int v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  unsigned int v20;
  unsigned __int8 *v21;
  uint64_t result;
  unsigned int v23[2];

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_24;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v23;
        v10 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v10;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 < *((_QWORD *)a2 + 2) && *v11 == 18)
        {
          *((_QWORD *)a2 + 1) = v11 + 1;
          goto LABEL_18;
        }
      }
      if (v6 == 2)
        break;
      if (v6 == 3)
      {
        v7 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          v9 = (char *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
          goto LABEL_36;
        }
      }
      else
      {
        v7 = TagFallback & 7;
      }
LABEL_24:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
    v7 = TagFallback & 7;
    if (v7 != 2)
      goto LABEL_24;
    v10 = *((_DWORD *)this + 8);
LABEL_18:
    *((_DWORD *)this + 8) = v10 | 2;
    v12 = *((_QWORD *)this + 2);
    if (!v12)
    {
      v12 = operator new();
      *(_QWORD *)(v12 + 8) = 0;
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)v12 = &off_1E25BA958;
      *(_QWORD *)(v12 + 22) = 0;
      *(_OWORD *)(v12 + 32) = 0u;
      *(_OWORD *)(v12 + 48) = 0u;
      *(_OWORD *)(v12 + 64) = 0u;
      *(_OWORD *)(v12 + 80) = 0u;
      *((_QWORD *)this + 2) = v12;
    }
    v23[0] = 0;
    v13 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23))
        return 0;
    }
    else
    {
      v23[0] = *v13;
      *((_QWORD *)a2 + 1) = v13 + 1;
    }
    v14 = *((_DWORD *)a2 + 14);
    v15 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v14 + 1;
    if (v14 >= v15)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)v12, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v16 = *((_DWORD *)a2 + 14);
    v17 = __OFSUB__(v16, 1);
    v18 = v16 - 1;
    if (v18 < 0 == v17)
      *((_DWORD *)a2 + 14) = v18;
    v19 = (_BYTE *)*((_QWORD *)a2 + 1);
    v8 = *((_QWORD *)a2 + 2);
    if ((unint64_t)v19 < v8 && *v19 == 24)
    {
      v9 = v19 + 1;
      *((_QWORD *)a2 + 1) = v9;
LABEL_36:
      v23[0] = 0;
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23);
        if (!(_DWORD)result)
          return result;
        v20 = v23[0];
        v21 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v20 = *v9;
        v21 = (unsigned __int8 *)(v9 + 1);
        *((_QWORD *)a2 + 1) = v21;
      }
      *((_BYTE *)this + 24) = v20 != 0;
      *((_DWORD *)this + 8) |= 4u;
      if (v21 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      v4 = *((_QWORD *)this + 2);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ + 16);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 += v6 + v7 + 1;
      v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 4) != 0)
      result = v3 + 2;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  double result;
  uint64_t v3;

  if (a2 != this)
  {
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v3;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MediatedMotionActivity");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_NatalimeterGenderType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_UserConditionType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 8;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  double result;

  *((_DWORD *)this + 14) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::BodyMetrics(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  *(_QWORD *)this = &off_1E25B9FF8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(this, a2);
  return this;
}

void sub_18D100810(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  float result;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v5)
    goto LABEL_15;
  if ((v5 & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 2);
    if (v6 >= 3)
      __assert_rtn("set_gender", "CoreNavigationCLPPrivateDataShared.pb.h", 18977, "::CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_NatalimeterGenderType_IsValid(value)");
    *((_DWORD *)this + 14) |= 1u;
    *((_DWORD *)this + 2) = v6;
    v5 = *((_DWORD *)a2 + 14);
  }
  if ((v5 & 2) != 0)
  {
    result = *((float *)a2 + 3);
    *((_DWORD *)this + 14) |= 2u;
    *((float *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  result = *((float *)a2 + 4);
  *((_DWORD *)this + 14) |= 4u;
  *((float *)this + 4) = result;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  result = *((float *)a2 + 5);
  *((_DWORD *)this + 14) |= 8u;
  *((float *)this + 5) = result;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0)
      goto LABEL_12;
LABEL_28:
    result = *((float *)a2 + 7);
    *((_DWORD *)this + 14) |= 0x20u;
    *((float *)this + 7) = result;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((float *)a2 + 6);
  *((_DWORD *)this + 14) |= 0x10u;
  *((float *)this + 6) = result;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_12:
  if ((v5 & 0x40) == 0)
    goto LABEL_13;
LABEL_29:
  result = *((float *)a2 + 8);
  *((_DWORD *)this + 14) |= 0x40u;
  *((float *)this + 8) = result;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    result = *((float *)a2 + 9);
    *((_DWORD *)this + 14) |= 0x80u;
    *((float *)this + 9) = result;
    v5 = *((_DWORD *)a2 + 14);
  }
LABEL_15:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((float *)a2 + 10);
      *((_DWORD *)this + 14) |= 0x100u;
      *((float *)this + 10) = result;
      v5 = *((_DWORD *)a2 + 14);
    }
    if ((v5 & 0x200) != 0)
    {
      v7 = *((_DWORD *)a2 + 11);
      if (v7 >= 8)
        __assert_rtn("set_condition", "CoreNavigationCLPPrivateDataShared.pb.h", 19176, "::CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_UserConditionType_IsValid(value)");
      *((_DWORD *)this + 14) |= 0x200u;
      *((_DWORD *)this + 11) = v7;
      v5 = *((_DWORD *)a2 + 14);
    }
    if ((v5 & 0x400) != 0)
    {
      result = *((float *)a2 + 12);
      *((_DWORD *)this + 14) |= 0x400u;
      *((float *)this + 12) = result;
    }
  }
  return result;
}

void sub_18D100A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::~BodyMetrics(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  *(_QWORD *)this = &off_1E25B9FF8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::~BodyMetrics(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::New(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25B9FF8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_DWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  uint64_t result;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v23 = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!(_DWORD)result)
            return result;
          v8 = v23;
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 2)
        {
          *((_DWORD *)this + 14) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 < *((_QWORD *)a2 + 2) && *v12 == 21)
        {
          *((_QWORD *)a2 + 1) = v12 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_31;
LABEL_41:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 3) = v23;
        *((_DWORD *)this + 14) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_45:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v23;
        *((_DWORD *)this + 14) |= 4u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_49:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v23;
        *((_DWORD *)this + 14) |= 8u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_53:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v23;
        *((_DWORD *)this + 14) |= 0x10u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_57:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 7) = v23;
        *((_DWORD *)this + 14) |= 0x20u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_61:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 8) = v23;
        *((_DWORD *)this + 14) |= 0x40u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_65:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 9) = v23;
        *((_DWORD *)this + 14) |= 0x80u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 77)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_69:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0)
          return 0;
        *((_DWORD *)this + 10) = v23;
        *((_DWORD *)this + 14) |= 0x100u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v9 || *v20 != 80)
          continue;
        v10 = v20 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_73:
        v23 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!(_DWORD)result)
            return result;
          v21 = v23;
        }
        else
        {
          v21 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v21 <= 7)
        {
          *((_DWORD *)this + 14) |= 0x200u;
          *((_DWORD *)this + 11) = v21;
        }
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 93)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_83:
        v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) != 0)
        {
          *((_DWORD *)this + 12) = v23;
          *((_DWORD *)this + 14) |= 0x400u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_45;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_49;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_53;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_57;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_61;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_65;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_69;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_73;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_31;
        goto LABEL_83;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(float *)(v5 + 48), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(float *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  unsigned int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;

  v2 = *((_DWORD *)this + 14);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      v3 += 5;
    if ((v2 & 0x10) != 0)
      v3 += 5;
    if ((v2 & 0x20) != 0)
      v3 += 5;
    if ((v2 & 0x40) != 0)
      v3 += 5;
    if ((v2 & 0x80) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
      v6 = result + 5;
    else
      v6 = result;
    if ((v2 & 0x200) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v7 & 0x80000000) != 0)
      {
        v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v8 = 2;
      }
      v6 += v8;
    }
    if ((v2 & 0x400) != 0)
      result = v6 + 5;
    else
      result = v6;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::Swap(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  float result;
  int v13;
  int v14;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    v10 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    v11 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    v13 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v13;
    v14 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v14;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BodyMetrics");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Natalimetry(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  *(_QWORD *)this = &off_1E25BA1D8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(this, a2);
  return this;
}

void sub_18D1014A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *v3;
  double v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *v10;
  _BYTE v12[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                                                             + 8);
      }
      v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return *(float *)&v4;
LABEL_14:
        *((_DWORD *)v3 + 8) |= 4u;
        v9 = (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((_QWORD *)v3 + 2);
        if (!v9)
        {
          this = (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)operator new();
          v9 = this;
          *(_QWORD *)this = &off_1E25B9FF8;
          *(_OWORD *)((char *)this + 8) = 0u;
          *(_OWORD *)((char *)this + 24) = 0u;
          *(_OWORD *)((char *)this + 40) = 0u;
          *((_DWORD *)this + 14) = 0;
          *((_QWORD *)v3 + 2) = this;
        }
        v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((_QWORD *)a2 + 2);
        if (!v10)
        {
          CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
          v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics **)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                                                                  + 16);
        }
        *(float *)&v4 = CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(v9, v10);
        return *(float *)&v4;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return *(float *)&v4;
    goto LABEL_14;
  }
  return *(float *)&v4;
}

void sub_18D10164C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::~Natalimetry(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  *(_QWORD *)this = &off_1E25BA1D8;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::~Natalimetry(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::New(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BA1D8;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  LOBYTE(v1) = *(_BYTE *)(this + 32);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        v4 = *(_DWORD *)(v3 + 56);
        if ((_BYTE)v4)
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        if ((v4 & 0xFF00) != 0)
        {
          *(_QWORD *)(v3 + 40) = 0;
          *(_DWORD *)(v3 + 48) = 0;
        }
        *(_DWORD *)(v3 + 56) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)v22 = &off_1E25B9FF8;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)(v22 + 24) = 0u;
      *(_OWORD *)(v22 + 40) = 0u;
      *(_DWORD *)(v22 + 56) = 0;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics **)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                                                       + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

float CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Natalimetry");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Timer *CoreNavigation::CLP::LogEntry::PrivateData::Timer::Timer(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BD658;
  CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(this, a2);
  return this;
}

void sub_18D101E84(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Timer *v3;
  double result;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  _BYTE v7[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    *((_DWORD *)v3 + 5) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)operator new();
      v5 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_
                                                                           + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
  }
  return result;
}

void sub_18D101F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Timer::New(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BD658;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::Clear(uint64_t this)
{
  uint64_t v1;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v1 = *(_QWORD *)(this + 8);
    if (v1)
    {
      if (*(_BYTE *)(v1 + 36))
      {
        *(_QWORD *)(v1 + 8) = 0;
        *(_QWORD *)(v1 + 16) = 0;
        *(_QWORD *)(v1 + 24) = 0;
      }
      *(_DWORD *)(v1 + 36) = 0;
    }
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v5 = *(_QWORD *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  int v5;

  if ((*((_BYTE *)this + 20) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    result = (v4 + 2);
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Timer::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Timer::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Timer *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Timer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Timer");
}

double CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::DigitalElevationModel(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  *(_QWORD *)this = &off_1E25BC488;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(this, a2);
  return this;
}

void sub_18D102264(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *v3;
  double v4;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 52) & 1) != 0)
  {
    *((_DWORD *)v3 + 13) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_
                                                                           + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_19;
    }
  }
  else if ((*((_BYTE *)a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  v4 = *((double *)a2 + 2);
  *((_DWORD *)v3 + 13) |= 2u;
  *((double *)v3 + 2) = v4;
  v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  v4 = *((double *)a2 + 3);
  *((_DWORD *)v3 + 13) |= 4u;
  *((double *)v3 + 3) = v4;
  v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  LODWORD(v4) = *((_DWORD *)a2 + 8);
  *((_DWORD *)v3 + 13) |= 8u;
  *((_DWORD *)v3 + 8) = LODWORD(v4);
  v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_22:
    LODWORD(v4) = *((_DWORD *)a2 + 10);
    *((_DWORD *)v3 + 13) |= 0x20u;
    *((_DWORD *)v3 + 10) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 13) & 0x40) != 0)
      goto LABEL_11;
    return *(float *)&v4;
  }
LABEL_21:
  LODWORD(v4) = *((_DWORD *)a2 + 9);
  *((_DWORD *)v3 + 13) |= 0x10u;
  *((_DWORD *)v3 + 9) = LODWORD(v4);
  v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 0x20) != 0)
    goto LABEL_22;
LABEL_10:
  if ((v5 & 0x40) != 0)
  {
LABEL_11:
    v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)v3 + 13) |= 0x40u;
    *((_DWORD *)v3 + 11) = v6;
  }
  return *(float *)&v4;
}

void sub_18D102428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::~DigitalElevationModel(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BC488;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::~DigitalElevationModel(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::New(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC488;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 52))
  {
    if ((*(_BYTE *)(this + 52) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  unsigned __int8 *v23;
  uint64_t result;
  unsigned int v25[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_25;
        *((_DWORD *)this + 13) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v25[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0;
        }
        else
        {
          v25[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
        goto LABEL_38;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_25;
LABEL_38:
        *(_QWORD *)v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v25;
        *((_DWORD *)this + 13) |= 2u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_42:
        *(_QWORD *)v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v25;
        *((_DWORD *)this + 13) |= 4u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_46:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v25) & 1) == 0)
          return 0;
        *((_DWORD *)this + 8) = v25[0];
        *((_DWORD *)this + 13) |= 8u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_50:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v25) & 1) == 0)
          return 0;
        *((_DWORD *)this + 9) = v25[0];
        *((_DWORD *)this + 13) |= 0x10u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_54:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v25) & 1) != 0)
        {
          *((_DWORD *)this + 10) = v25[0];
          *((_DWORD *)this + 13) |= 0x20u;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v21 < v9 && *v21 == 56)
          {
            v10 = v21 + 1;
            *((_QWORD *)a2 + 1) = v10;
LABEL_58:
            v25[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25);
              if (!(_DWORD)result)
                return result;
              v22 = v25[0];
              v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v9 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v22 = *v10;
              v23 = (unsigned __int8 *)(v10 + 1);
              *((_QWORD *)a2 + 1) = v23;
            }
            *((_DWORD *)this + 11) = v22;
            *((_DWORD *)this + 13) |= 0x40u;
            if (v23 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_42;
        goto LABEL_25;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_46;
        goto LABEL_25;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_50;
        goto LABEL_25;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_54;
        goto LABEL_25;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      default:
        v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 52) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 52) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 5;
    if ((v2 & 0x10) != 0)
      v3 += 5;
    if ((v2 & 0x20) != 0)
      v4 = v3 + 5;
    else
      v4 = v3;
    if ((v2 & 0x40) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v8 & 0x80000000) != 0)
      {
        v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      }
      else
      {
        v9 = 2;
      }
      v4 = (v9 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DigitalElevationModel");
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::DirectionOfTravel(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  *(_QWORD *)this = &off_1E25BB600;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(this, a2);
  return this;
}

void sub_18D102DB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *v3;
  int v4;
  uint64_t v5;
  char v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  _BYTE v20[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v4 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    *((_DWORD *)v3 + 24) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_28;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *((_QWORD *)a2 + 2);
  *((_DWORD *)v3 + 24) |= 2u;
  *((_QWORD *)v3 + 2) = v9;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_28:
  v10 = *((_QWORD *)a2 + 3);
  *((_DWORD *)v3 + 24) |= 4u;
  *((_QWORD *)v3 + 3) = v10;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_29:
  v11 = *((_QWORD *)a2 + 4);
  *((_DWORD *)v3 + 24) |= 8u;
  *((_QWORD *)v3 + 4) = v11;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_31:
    v13 = *((_QWORD *)a2 + 6);
    *((_DWORD *)v3 + 24) |= 0x20u;
    *((_QWORD *)v3 + 6) = v13;
    v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_30:
  v12 = *((_QWORD *)a2 + 5);
  *((_DWORD *)v3 + 24) |= 0x10u;
  *((_QWORD *)v3 + 5) = v12;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x20) != 0)
    goto LABEL_31;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_32:
  v14 = *((_QWORD *)a2 + 7);
  *((_DWORD *)v3 + 24) |= 0x40u;
  *((_QWORD *)v3 + 7) = v14;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_QWORD *)a2 + 8);
    *((_DWORD *)v3 + 24) |= 0x80u;
    *((_QWORD *)v3 + 8) = v5;
    v4 = *((_DWORD *)a2 + 24);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v15 = *((_QWORD *)a2 + 9);
    *((_DWORD *)v3 + 24) |= 0x100u;
    *((_QWORD *)v3 + 9) = v15;
    v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_36;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v16 = *((_QWORD *)a2 + 10);
  *((_DWORD *)v3 + 24) |= 0x200u;
  *((_QWORD *)v3 + 10) = v16;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_37;
  }
LABEL_36:
  v17 = *((_BYTE *)a2 + 88);
  *((_DWORD *)v3 + 24) |= 0x400u;
  *((_BYTE *)v3 + 88) = v17;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_38;
  }
LABEL_37:
  v18 = *((_BYTE *)a2 + 89);
  *((_DWORD *)v3 + 24) |= 0x800u;
  *((_BYTE *)v3 + 89) = v18;
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      return;
    goto LABEL_20;
  }
LABEL_38:
  v19 = *((_BYTE *)a2 + 90);
  *((_DWORD *)v3 + 24) |= 0x1000u;
  *((_BYTE *)v3 + 90) = v19;
  if ((*((_DWORD *)a2 + 24) & 0x2000) == 0)
    return;
LABEL_20:
  v6 = *((_BYTE *)a2 + 91);
  *((_DWORD *)v3 + 24) |= 0x2000u;
  *((_BYTE *)v3 + 91) = v6;
}

void sub_18D103068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::~DirectionOfTravel(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BB600;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::~DirectionOfTravel(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::New(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BB600;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 84) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 96);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    *(_QWORD *)(this + 64) = 0;
    *(_OWORD *)(this + 32) = 0u;
    *(_OWORD *)(this + 48) = 0u;
    *(_OWORD *)(this + 16) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 80) = 0;
    *(_DWORD *)(this + 88) = 0;
  }
  *(_DWORD *)(this + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  uint64_t result;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  unsigned __int8 *v37;
  unsigned int v38[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_39;
        *((_DWORD *)this + 24) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v38[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0;
        }
        else
        {
          v38[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
        goto LABEL_52;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_39;
LABEL_52:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 2u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_56:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 4u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_60:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 8u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_64:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 0x10u;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_68:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 0x20u;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_72:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 0x40u;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_76:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 0x80u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_80:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v38;
        *((_DWORD *)this + 24) |= 0x100u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_84:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v38;
          *((_DWORD *)this + 24) |= 0x200u;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v28 < v9 && *v28 == 88)
          {
            v10 = v28 + 1;
            *((_QWORD *)a2 + 1) = v10;
LABEL_88:
            v38[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
              if (!(_DWORD)result)
                return result;
              v29 = v38[0];
              v30 = (_BYTE *)*((_QWORD *)a2 + 1);
              v9 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v29 = *v10;
              v30 = v10 + 1;
              *((_QWORD *)a2 + 1) = v30;
            }
            *((_BYTE *)this + 88) = v29 != 0;
            *((_DWORD *)this + 24) |= 0x400u;
            if ((unint64_t)v30 < v9 && *v30 == 96)
            {
              v11 = v30 + 1;
              *((_QWORD *)a2 + 1) = v11;
LABEL_96:
              v38[0] = 0;
              if ((unint64_t)v11 >= v9 || *v11 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
                if (!(_DWORD)result)
                  return result;
                v32 = v38[0];
                v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                v9 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v32 = *v11;
                v33 = v11 + 1;
                *((_QWORD *)a2 + 1) = v33;
              }
              *((_BYTE *)this + 89) = v32 != 0;
              *((_DWORD *)this + 24) |= 0x800u;
              if ((unint64_t)v33 < v9 && *v33 == 104)
              {
                v12 = v33 + 1;
                *((_QWORD *)a2 + 1) = v12;
LABEL_104:
                v38[0] = 0;
                if ((unint64_t)v12 >= v9 || *v12 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
                  if (!(_DWORD)result)
                    return result;
                  v34 = v38[0];
                  v35 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v9 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  v34 = *v12;
                  v35 = v12 + 1;
                  *((_QWORD *)a2 + 1) = v35;
                }
                *((_BYTE *)this + 90) = v34 != 0;
                *((_DWORD *)this + 24) |= 0x1000u;
                if ((unint64_t)v35 < v9 && *v35 == 112)
                {
                  v13 = v35 + 1;
                  *((_QWORD *)a2 + 1) = v13;
LABEL_112:
                  v38[0] = 0;
                  if ((unint64_t)v13 >= v9 || *v13 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
                    if (!(_DWORD)result)
                      return result;
                    v36 = v38[0];
                    v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v9 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v36 = *v13;
                    v37 = (unsigned __int8 *)(v13 + 1);
                    *((_QWORD *)a2 + 1) = v37;
                  }
                  *((_BYTE *)this + 91) = v36 != 0;
                  *((_DWORD *)this + 24) |= 0x2000u;
                  if (v37 == (unsigned __int8 *)v9
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    result = 1;
                    *((_BYTE *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_56;
        goto LABEL_39;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_60;
        goto LABEL_39;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_64;
        goto LABEL_39;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_68;
        goto LABEL_39;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_72;
        goto LABEL_39;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_76;
        goto LABEL_39;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_80;
        goto LABEL_39;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_84;
        goto LABEL_39;
      case 0xBu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_39;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_88;
      case 0xCu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_39;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_96;
      case 0xDu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_39;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_104;
      case 0xEu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_39;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_112;
      default:
        v6 = TagFallback & 7;
LABEL_39:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 88), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 89), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 91), (uint64_t)a2, a4);
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 90), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 96) & 0x2000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 91), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;

  v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 24);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v8 = result + 9;
    if ((v2 & 0x100) == 0)
      v8 = result;
    if ((v2 & 0x200) != 0)
      v8 += 9;
    if ((v2 & 0x400) != 0)
      v8 += 2;
    if ((v2 & 0x800) != 0)
      v8 += 2;
    if ((v2 & 0x1000) != 0)
      v8 += 2;
    if ((v2 & 0x2000) != 0)
      result = v8 + 2;
    else
      result = v8;
  }
  *((_DWORD *)this + 23) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LOBYTE(v2) = *((_BYTE *)this + 88);
    *((_BYTE *)this + 88) = *((_BYTE *)a2 + 88);
    *((_BYTE *)a2 + 88) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 89);
    *((_BYTE *)this + 89) = *((_BYTE *)a2 + 89);
    *((_BYTE *)a2 + 89) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 90);
    *((_BYTE *)this + 90) = *((_BYTE *)a2 + 90);
    *((_BYTE *)a2 + 90) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 91);
    *((_BYTE *)this + 91) = *((_BYTE *)a2 + 91);
    *((_BYTE *)a2 + 91) = v2;
    LODWORD(v2) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v2;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DirectionOfTravel");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapVector *CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MapVector(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  *(_QWORD *)this = &off_1E25BDA90;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(this, a2);
  return this;
}

void sub_18D103E40(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BB600;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 56) = 0u;
      *(_OWORD *)((char *)this + 72) = 0u;
      *(_OWORD *)((char *)this + 84) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel **)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                                                                   + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(v8, v9);
  }
}

void sub_18D103FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::~MapVector(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  *(_QWORD *)this = &off_1E25BDA90;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::~MapVector(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::New(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BDA90;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)v22 = &off_1E25BB600;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)(v22 + 24) = 0u;
      *(_OWORD *)(v22 + 40) = 0u;
      *(_OWORD *)(v22 + 56) = 0u;
      *(_OWORD *)(v22 + 72) = 0u;
      *(_OWORD *)(v22 + 84) = 0u;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *v9;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_25;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel **)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                                                             + 16);
    }
    v3 = v3
       + CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::ByteSize(v9)
       + 2;
  }
LABEL_25:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MapVector::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapVector");
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::TunnelBridgeAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  *(_QWORD *)this = &off_1E25BC758;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(this, a2);
  return this;
}

void sub_18D104818(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *v3;
  int v4;
  char v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  _BYTE v14[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      *((_DWORD *)v3 + 12) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_20;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_QWORD *)a2 + 2);
    *((_DWORD *)v3 + 12) |= 2u;
    *((_QWORD *)v3 + 2) = v8;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_21;
    }
LABEL_20:
    v9 = *((_QWORD *)a2 + 3);
    *((_DWORD *)v3 + 12) |= 4u;
    *((_QWORD *)v3 + 3) = v9;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_22;
    }
LABEL_21:
    v10 = *((_QWORD *)a2 + 4);
    *((_DWORD *)v3 + 12) |= 8u;
    *((_QWORD *)v3 + 4) = v10;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_23;
    }
LABEL_22:
    v11 = *((_BYTE *)a2 + 40);
    *((_DWORD *)v3 + 12) |= 0x10u;
    *((_BYTE *)v3 + 40) = v11;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_24;
    }
LABEL_23:
    v12 = *((_BYTE *)a2 + 41);
    *((_DWORD *)v3 + 12) |= 0x20u;
    *((_BYTE *)v3 + 41) = v12;
    v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_12;
    }
LABEL_24:
    v13 = *((_BYTE *)a2 + 42);
    *((_DWORD *)v3 + 12) |= 0x40u;
    *((_BYTE *)v3 + 42) = v13;
    if ((*((_DWORD *)a2 + 12) & 0x80) == 0)
      return;
LABEL_12:
    v5 = *((_BYTE *)a2 + 43);
    *((_DWORD *)v3 + 12) |= 0x80u;
    *((_BYTE *)v3 + 43) = v5;
  }
}

void sub_18D1049FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::~TunnelBridgeAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BC758;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::~TunnelBridgeAssistance(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC758;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 48))
  {
    if ((*(_BYTE *)(this + 48) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  uint64_t result;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_27;
        *((_DWORD *)this + 12) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v32[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32))return 0;
        }
        else
        {
          v32[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
        goto LABEL_40;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_27;
LABEL_40:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v32;
        *((_DWORD *)this + 12) |= 2u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_44:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v32;
        *((_DWORD *)this + 12) |= 4u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_48:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) != 0)
        {
          *((_QWORD *)this + 4) = *(_QWORD *)v32;
          *((_DWORD *)this + 12) |= 8u;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v22 < v9 && *v22 == 40)
          {
            v10 = v22 + 1;
            *((_QWORD *)a2 + 1) = v10;
LABEL_52:
            v32[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
              if (!(_DWORD)result)
                return result;
              v23 = v32[0];
              v24 = (_BYTE *)*((_QWORD *)a2 + 1);
              v9 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v23 = *v10;
              v24 = v10 + 1;
              *((_QWORD *)a2 + 1) = v24;
            }
            *((_BYTE *)this + 40) = v23 != 0;
            *((_DWORD *)this + 12) |= 0x10u;
            if ((unint64_t)v24 < v9 && *v24 == 48)
            {
              v11 = v24 + 1;
              *((_QWORD *)a2 + 1) = v11;
LABEL_60:
              v32[0] = 0;
              if ((unint64_t)v11 >= v9 || *v11 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
                if (!(_DWORD)result)
                  return result;
                v26 = v32[0];
                v27 = (_BYTE *)*((_QWORD *)a2 + 1);
                v9 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v26 = *v11;
                v27 = v11 + 1;
                *((_QWORD *)a2 + 1) = v27;
              }
              *((_BYTE *)this + 41) = v26 != 0;
              *((_DWORD *)this + 12) |= 0x20u;
              if ((unint64_t)v27 < v9 && *v27 == 56)
              {
                v12 = v27 + 1;
                *((_QWORD *)a2 + 1) = v12;
LABEL_68:
                v32[0] = 0;
                if ((unint64_t)v12 >= v9 || *v12 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
                  if (!(_DWORD)result)
                    return result;
                  v28 = v32[0];
                  v29 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v9 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  v28 = *v12;
                  v29 = v12 + 1;
                  *((_QWORD *)a2 + 1) = v29;
                }
                *((_BYTE *)this + 42) = v28 != 0;
                *((_DWORD *)this + 12) |= 0x40u;
                if ((unint64_t)v29 < v9 && *v29 == 64)
                {
                  v13 = v29 + 1;
                  *((_QWORD *)a2 + 1) = v13;
LABEL_76:
                  v32[0] = 0;
                  if ((unint64_t)v13 >= v9 || *v13 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
                    if (!(_DWORD)result)
                      return result;
                    v30 = v32[0];
                    v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v9 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v30 = *v13;
                    v31 = (unsigned __int8 *)(v13 + 1);
                    *((_QWORD *)a2 + 1) = v31;
                  }
                  *((_BYTE *)this + 43) = v30 != 0;
                  *((_DWORD *)this + 12) |= 0x80u;
                  if (v31 == (unsigned __int8 *)v9
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    result = 1;
                    *((_BYTE *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_44;
        goto LABEL_27;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_48;
        goto LABEL_27;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_60;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_68;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_76;
      default:
        v6 = TagFallback & 7;
LABEL_27:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 43), (uint64_t)a2, a4);
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 42), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 43), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 48) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 2;
    if ((v2 & 0x20) != 0)
      v3 += 2;
    if ((v2 & 0x40) != 0)
      v3 += 2;
    if ((v2 & 0x80) != 0)
      result = v3 + 2;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 11) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::Swap(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    LOBYTE(v2) = *((_BYTE *)this + 40);
    *((_BYTE *)this + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 41);
    *((_BYTE *)this + 41) = *((_BYTE *)a2 + 41);
    *((_BYTE *)a2 + 41) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 42);
    *((_BYTE *)this + 42) = *((_BYTE *)a2 + 42);
    *((_BYTE *)a2 + 42) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 43);
    *((_BYTE *)this + 43) = *((_BYTE *)a2 + 43);
    *((_BYTE *)a2 + 43) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelBridgeAssistance");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::TunnelBridgeNotification(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  *(_QWORD *)this = &off_1E25BCB90;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(this, a2);
  return this;
}

void sub_18D105440(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BC758;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 36) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                                                                        + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(v8, v9);
  }
}

void sub_18D1055E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::~TunnelBridgeNotification(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  *(_QWORD *)this = &off_1E25BCB90;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::~TunnelBridgeNotification(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BCB90;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)v22 = &off_1E25BC758;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)(v22 + 24) = 0u;
      *(_OWORD *)(v22 + 36) = 0u;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *v9;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_25;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                                                                  + 16);
    }
    v3 = v3
       + CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::ByteSize(v9)
       + 2;
  }
LABEL_25:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelBridgeNotification");
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  double result;

  *(_QWORD *)((char *)this + 69) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::TunnelEndPointAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  *(_QWORD *)this = &off_1E25BCC08;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_QWORD *)((char *)this + 69) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(this, a2);
  return this;
}

void sub_18D105E30(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  unsigned int v8;
  char v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  v5 = *((_DWORD *)a2 + 31);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 31) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_
                                                                           + 8);
    }
    result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 31);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 31) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_29:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 31) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 31) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_32:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 31) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 31);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 31) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x20) != 0)
    goto LABEL_32;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_33:
  v8 = *((_DWORD *)a2 + 18);
  if (v8 >= 3)
    __assert_rtn("set_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 20463, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
  *((_DWORD *)v3 + 31) |= 0x40u;
  *((_DWORD *)v3 + 18) = v8;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 7);
    *((_DWORD *)v3 + 31) |= 0x80u;
    *((double *)v3 + 7) = result;
    v5 = *((_DWORD *)a2 + 31);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) != 0)
  {
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 31) |= 0x100u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 31);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_38;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  result = *((double *)a2 + 10);
  *((_DWORD *)v3 + 31) |= 0x200u;
  *((double *)v3 + 10) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_39;
  }
LABEL_38:
  v9 = *((_BYTE *)a2 + 76);
  *((_DWORD *)v3 + 31) |= 0x400u;
  *((_BYTE *)v3 + 76) = v9;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_40;
  }
LABEL_39:
  result = *((double *)a2 + 11);
  *((_DWORD *)v3 + 31) |= 0x800u;
  *((double *)v3 + 11) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_40:
  result = *((double *)a2 + 12);
  *((_DWORD *)v3 + 31) |= 0x1000u;
  *((double *)v3 + 12) = result;
  v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      return result;
    goto LABEL_21;
  }
LABEL_41:
  result = *((double *)a2 + 13);
  *((_DWORD *)v3 + 31) |= 0x2000u;
  *((double *)v3 + 13) = result;
  if ((*((_DWORD *)a2 + 31) & 0x4000) != 0)
  {
LABEL_21:
    result = *((double *)a2 + 14);
    *((_DWORD *)v3 + 31) |= 0x4000u;
    *((double *)v3 + 14) = result;
  }
  return result;
}

void sub_18D106128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::~TunnelEndPointAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BCC08;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::~TunnelEndPointAssistance(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 120) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BCC08;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 69) = 0;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 124);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 124);
      }
    }
    *(_DWORD *)(this + 72) = 0;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(_OWORD *)(this + 48) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 64) = 0;
    *(_BYTE *)(this + 76) = 0;
    *(_OWORD *)(this + 80) = 0u;
    *(_OWORD *)(this + 96) = 0u;
    *(_QWORD *)(this + 112) = 0;
  }
  *(_DWORD *)(this + 124) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  unsigned int v24;
  uint64_t result;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned int v35[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_41;
        *((_DWORD *)this + 31) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v35[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35))return 0;
        }
        else
        {
          v35[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v13 = *((_DWORD *)a2 + 14);
        v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v15 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v15, 1);
        v17 = v15 - 1;
        if (v17 < 0 == v16)
          *((_DWORD *)a2 + 14) = v17;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
        goto LABEL_53;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_41;
LABEL_53:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 2u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_57:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 4u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_61:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 8u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_65:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x10u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_69:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x20u;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v23 >= v9 || *v23 != 56)
          continue;
        v10 = v23 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_73:
        v35[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
          if (!(_DWORD)result)
            return result;
          v24 = v35[0];
        }
        else
        {
          v24 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v24 <= 2)
        {
          *((_DWORD *)this + 31) |= 0x40u;
          *((_DWORD *)this + 18) = v24;
        }
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_83:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x80u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_87:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x100u;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_91:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x200u;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v11 || *v29 != 88)
          continue;
        v12 = v29 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_95:
        v35[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
          if (!(_DWORD)result)
            return result;
          v30 = v35[0];
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v30 = *v12;
          v31 = v12 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_BYTE *)this + 76) = v30 != 0;
        *((_DWORD *)this + 31) |= 0x400u;
        if ((unint64_t)v31 >= v11 || *v31 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_103:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x800u;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_107:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x1000u;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 113)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_111:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v35;
        *((_DWORD *)this + 31) |= 0x2000u;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 121)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_115:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) != 0)
        {
          *((_QWORD *)this + 14) = *(_QWORD *)v35;
          *((_DWORD *)this + 31) |= 0x4000u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_57;
        goto LABEL_41;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_61;
        goto LABEL_41;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_65;
        goto LABEL_41;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_69;
        goto LABEL_41;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_73;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_83;
        goto LABEL_41;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_87;
        goto LABEL_41;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_91;
        goto LABEL_41;
      case 0xBu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_103;
        goto LABEL_41;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_107;
        goto LABEL_41;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_111;
        goto LABEL_41;
      case 0xFu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_41;
        goto LABEL_115;
      default:
        v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 124);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 112), a3);
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 104), a3);
  if ((*(_DWORD *)(v5 + 124) & 0x4000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 112), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  unsigned int v11;

  v2 = *((_DWORD *)this + 31);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 31);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v8 = v3 + 9;
    else
      v8 = v3;
    if ((v2 & 0x40) != 0)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
      if ((v9 & 0x80000000) != 0)
      {
        v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
        v2 = *((_DWORD *)this + 31);
      }
      else
      {
        v10 = 2;
      }
      v8 += v10;
    }
    if ((v2 & 0x80) != 0)
      result = v8 + 9;
    else
      result = v8;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v11 = result + 9;
    if ((v2 & 0x100) == 0)
      v11 = result;
    if ((v2 & 0x200) != 0)
      v11 += 9;
    if ((v2 & 0x400) != 0)
      v11 += 2;
    if ((v2 & 0x800) != 0)
      v11 += 9;
    if ((v2 & 0x1000) != 0)
      v11 += 9;
    if ((v2 & 0x2000) != 0)
      v11 += 9;
    if ((v2 & 0x4000) != 0)
      result = v11 + 9;
    else
      result = v11;
  }
  *((_DWORD *)this + 30) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::Swap(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v10;
    LOBYTE(v2) = *((_BYTE *)this + 76);
    *((_BYTE *)this + 76) = *((_BYTE *)a2 + 76);
    *((_BYTE *)a2 + 76) = v2;
    v11 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v11;
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v12;
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v13;
    result = *((double *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    *((double *)a2 + 14) = result;
    LODWORD(v2) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v2;
    LODWORD(v2) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelEndPointAssistance");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::TunnelEndPoint(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  *(_QWORD *)this = &off_1E25BAB38;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(this, a2);
  return this;
}

void sub_18D106F74(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                                                             + 8);
      }
      result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return result;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((_QWORD *)v3 + 2);
    if (!v9)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)operator new();
      v9 = this;
      *(_QWORD *)this = &off_1E25BCC08;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 56) = 0u;
      *(_QWORD *)((char *)this + 69) = 0;
      *((_OWORD *)this + 5) = 0u;
      *((_OWORD *)this + 6) = 0u;
      *((_OWORD *)this + 7) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((_QWORD *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                                                                           + 16);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(v9, v10);
  }
  return result;
}

void sub_18D107124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::~TunnelEndPoint(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  *(_QWORD *)this = &off_1E25BAB38;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::~TunnelEndPoint(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BAB38;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v9 = *((_QWORD *)this + 1);
          if (!v9)
          {
            v9 = operator new();
            *(_QWORD *)v9 = &off_1E25BDBF8;
            *(_OWORD *)(v9 + 8) = 0u;
            *(_OWORD *)(v9 + 24) = 0u;
            *((_QWORD *)this + 1) = v9;
          }
          v29 = 0;
          v10 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
          }
          else
          {
            v29 = *v10;
            *((_QWORD *)a2 + 1) = v10 + 1;
          }
          v13 = *((_DWORD *)a2 + 14);
          v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v15 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v15, 1);
          v17 = v15 - 1;
          if (v17 < 0 == v16)
            *((_DWORD *)a2 + 14) = v17;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            v12 = v18 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2)
          break;
        if (v6 == 3)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v12 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!(_DWORD)result)
          return result;
        v19 = v28;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v19 = *v12;
        v20 = v12 + 1;
        *((_QWORD *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    v22 = *((_QWORD *)this + 2);
    if (!v22)
    {
      v22 = operator new();
      *(_QWORD *)v22 = &off_1E25BCC08;
      *(_OWORD *)(v22 + 8) = 0u;
      *(_OWORD *)(v22 + 24) = 0u;
      *(_OWORD *)(v22 + 40) = 0u;
      *(_OWORD *)(v22 + 56) = 0u;
      *(_QWORD *)(v22 + 69) = 0;
      *(_OWORD *)(v22 + 80) = 0u;
      *(_OWORD *)(v22 + 96) = 0u;
      *(_OWORD *)(v22 + 112) = 0u;
      *((_QWORD *)this + 2) = v22;
    }
    v30 = 0;
    v23 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))
        return 0;
    }
    else
    {
      v30 = *v23;
      *((_QWORD *)a2 + 1) = v23 + 1;
    }
    v24 = *((_DWORD *)a2 + 14);
    v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)v22, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v26 = *((_DWORD *)a2 + 14);
    v16 = __OFSUB__(v26, 1);
    v27 = v26 - 1;
    if (v27 < 0 == v16)
      *((_DWORD *)a2 + 14) = v27;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                                                                    + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelEndPoint");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MapsRouteHintData(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  *(_QWORD *)this = &off_1E25BB678;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(this, a2);
  return this;
}

void sub_18D10797C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((double *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0)
      return result;
LABEL_9:
    result = *((double *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((double *)this + 5) = result;
  }
  return result;
}

void sub_18D107AA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::~MapsRouteHintData(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  *(_QWORD *)this = &off_1E25BB678;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::~MapsRouteHintData(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::New(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BB678;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 52))
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t result;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  unint64_t v15;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v15 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v15);
          if (!(_DWORD)result)
            return result;
          v9 = v15;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 13) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_19;
LABEL_27:
        v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v15;
        *((_DWORD *)this + 13) |= 2u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_31:
        v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v15;
        *((_DWORD *)this + 13) |= 4u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_35:
        v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0)
          return 0;
        *((_QWORD *)this + 4) = v15;
        *((_DWORD *)this + 13) |= 8u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_39:
        v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) != 0)
        {
          *((_QWORD *)this + 5) = v15;
          *((_DWORD *)this + 13) |= 0x10u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_31;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_35;
        goto LABEL_19;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_19;
        goto LABEL_39;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 52) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 12) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    result = *((double *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((double *)a2 + 5) = result;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapsRouteHintData");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint_RoutingType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 7;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SharedCtor(_QWORD *this)
{
  this[7] = 0;
  this[2] = 0;
  this[3] = 0;
  this[1] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MapMatchingRouteHint(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  *(_QWORD *)this = &off_1E25BC2A8;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(this, a2);
  return this;
}

void sub_18D108138(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 4);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  uint64_t v4;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v16;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v17;
  unsigned int v18;
  unsigned int v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData **)(*((_QWORD *)a2 + 4) + 8 * v5);
      v7 = *((_DWORD *)this + 11);
      v8 = *((int *)this + 10);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)((char *)this + 32));
          v7 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)v10 = &off_1E25BB678;
        *(_OWORD *)(v10 + 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *(_OWORD *)(v10 + 40) = 0u;
        v11 = *((_QWORD *)this + 4);
        v12 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 10));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 60);
  if (!(_BYTE)v13)
    return;
  if ((*((_BYTE *)a2 + 60) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 60) & 2) == 0)
      goto LABEL_14;
LABEL_22:
    *((_DWORD *)this + 15) |= 2u;
    v16 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 2);
    if (!v16)
    {
      v4 = operator new();
      v16 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 2) = v4;
    }
    v17 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 2);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v17 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_
                                                                            + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v16, v17);
    v13 = *((_DWORD *)a2 + 15);
    if ((v13 & 4) == 0)
    {
LABEL_15:
      if ((v13 & 8) == 0)
        return;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  *((_DWORD *)this + 15) |= 1u;
  v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
  if (!v14)
  {
    v4 = operator new();
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
    *(_QWORD *)v4 = &off_1E25BDBF8;
    *(_OWORD *)(v4 + 8) = 0u;
    *(_OWORD *)(v4 + 24) = 0u;
    *((_QWORD *)this + 1) = v4;
  }
  v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_
                                                                          + 8);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  v13 = *((_DWORD *)a2 + 15);
  if ((v13 & 2) != 0)
    goto LABEL_22;
LABEL_14:
  if ((v13 & 4) == 0)
    goto LABEL_15;
LABEL_27:
  v18 = *((_DWORD *)a2 + 6);
  if (v18 >= 7)
    __assert_rtn("set_route_type", "CoreNavigationCLPPrivateDataShared.pb.h", 20974, "::CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint_RoutingType_IsValid(value)");
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 6) = v18;
  if ((*((_DWORD *)a2 + 15) & 8) != 0)
  {
LABEL_29:
    v19 = *((_DWORD *)a2 + 7);
    if (v19 >= 7)
      __assert_rtn("set_step_type", "CoreNavigationCLPPrivateDataShared.pb.h", 20997, "::CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint_RoutingType_IsValid(value)");
    *((_DWORD *)this + 15) |= 8u;
    *((_DWORD *)this + 7) = v19;
  }
}

void sub_18D108430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::~MapMatchingRouteHint(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  *(_QWORD *)this = &off_1E25BC2A8;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::~MapMatchingRouteHint(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::New(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC2A8;
  *(_QWORD *)(v1 + 56) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 60);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 60) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 60);
      }
    }
    if ((v2 & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 24) = 0;
  }
  if (*(int *)(this + 40) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  unsigned int v27;
  uint64_t result;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  _BYTE *v43;
  unsigned int v44;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)((char *)this + 32);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        *((_DWORD *)this + 15) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v44 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
        }
        else
        {
          v44 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
        goto LABEL_34;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
LABEL_34:
        *((_DWORD *)this + 15) |= 2u;
        v20 = *((_QWORD *)this + 2);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)v20 = &off_1E25BDBF8;
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *((_QWORD *)this + 2) = v20;
        }
        v44 = 0;
        v21 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
        }
        else
        {
          v44 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v17)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 < v10 && *v26 == 24)
        {
          v11 = v26 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_48:
          v44 = 0;
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
            if (!(_DWORD)result)
              return result;
            v27 = v44;
          }
          else
          {
            v27 = *v11;
            *((_QWORD *)a2 + 1) = v11 + 1;
          }
          if (v27 <= 6)
          {
            *((_DWORD *)this + 15) |= 4u;
            *((_DWORD *)this + 6) = v27;
          }
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v29 < v12 && *v29 == 32)
          {
            v13 = v29 + 1;
            *((_QWORD *)a2 + 1) = v13;
LABEL_58:
            v44 = 0;
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
              if (!(_DWORD)result)
                return result;
              v30 = v44;
            }
            else
            {
              v30 = *v13;
              *((_QWORD *)a2 + 1) = v13 + 1;
            }
            if (v30 <= 6)
            {
              *((_DWORD *)this + 15) |= 8u;
              *((_DWORD *)this + 7) = v30;
            }
            v31 = (_BYTE *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v31 < *((_QWORD *)a2 + 2) && *v31 == 42)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_68:
                v32 = *((_DWORD *)this + 11);
                v33 = *((int *)this + 10);
                if ((int)v33 >= v32)
                {
                  if (v32 == *((_DWORD *)this + 12))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                    v32 = *((_DWORD *)this + 11);
                  }
                  *((_DWORD *)this + 11) = v32 + 1;
                  v35 = operator new();
                  *(_QWORD *)v35 = &off_1E25BB678;
                  *(_OWORD *)(v35 + 8) = 0u;
                  *(_OWORD *)(v35 + 24) = 0u;
                  *(_OWORD *)(v35 + 40) = 0u;
                  v36 = *((_QWORD *)this + 4);
                  v37 = *((int *)this + 10);
                  *((_DWORD *)this + 10) = v37 + 1;
                  *(_QWORD *)(v36 + 8 * v37) = v35;
                }
                else
                {
                  v34 = *((_QWORD *)this + 4);
                  *((_DWORD *)this + 10) = v33 + 1;
                  v35 = *(_QWORD *)(v34 + 8 * v33);
                }
                v44 = 0;
                v38 = (char *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
                }
                else
                {
                  v44 = *v38;
                  *((_QWORD *)a2 + 1) = v38 + 1;
                }
                v39 = *((_DWORD *)a2 + 14);
                v40 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v39 + 1;
                if (v39 >= v40)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *)v35, a2)|| !*((_BYTE *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                v41 = *((_DWORD *)a2 + 14);
                v17 = __OFSUB__(v41, 1);
                v42 = v41 - 1;
                if (v42 < 0 == v17)
                  *((_DWORD *)a2 + 14) = v42;
                v31 = (_BYTE *)*((_QWORD *)a2 + 1);
                v43 = (_BYTE *)*((_QWORD *)a2 + 2);
              }
              while (v31 < v43 && *v31 == 42);
              if (v31 == v43 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_48;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        goto LABEL_68;
      default:
        v7 = TagFallback & 7;
LABEL_22:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD *)(this + 8);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v8, a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = *(_QWORD *)(v5 + 16);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 8) != 0)
LABEL_5:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;

  LOBYTE(v2) = *((_BYTE *)this + 60);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_39;
  }
  if ((*((_BYTE *)this + 60) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 60) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = v5 + 2;
  v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 16);
    }
    v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(_BYTE *)(v7 + 36))
    {
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if ((v8 & 4) != 0)
        v8 = v9 + 9;
      else
        v8 = v9;
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 += v8 + 2;
    v2 = *((_DWORD *)this + 15);
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_39;
    goto LABEL_33;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v11 = 2;
  }
  v3 += v11;
  if ((v2 & 8) != 0)
  {
LABEL_33:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else
    {
      v13 = 2;
    }
    v3 += v13;
  }
LABEL_39:
  v14 = *((_DWORD *)this + 10);
  v15 = (v14 + v3);
  if (v14 >= 1)
  {
    v16 = 0;
    do
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData **)(*((_QWORD *)this + 4) + 8 * v16));
      v18 = (int)v17;
      if (v17 >= 0x80)
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      else
        v19 = 1;
      v15 = (v18 + v15 + v19);
      ++v16;
    }
    while (v16 < *((int *)this + 10));
  }
  *((_DWORD *)this + 14) = v15;
  return v15;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v6 = *(_DWORD *)(v3 + 60);
    *(_DWORD *)(v3 + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v6;
    v7 = *(_DWORD *)(v3 + 56);
    *(_DWORD *)(v3 + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapMatchingRouteHint");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_TransmissionStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_SensorType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 2;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 48) = 0;
  *(_BYTE *)(this + 52) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::AccessoryVehicleSpeedNotification(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  *(_QWORD *)this = &off_1E25BD0B8;
  *((_QWORD *)this + 7) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 37) = 0u;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(this, a2);
  return this;
}

void sub_18D10903C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;

  v3 = v2;
  if (*v3)
    MEMORY[0x18D78B5BC](*v3, 0x1000C8000313F17);
  v5 = *((_QWORD *)v1 + 4);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  char v8;
  unsigned int v9;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v10;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v11;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v13;
  int v14;
  unsigned int v15;
  _BYTE v16[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = *((_DWORD *)a2 + 10);
  if (v4)
  {
    sub_18D09EC0C((_DWORD *)v3 + 8, *((_DWORD *)v3 + 10) + v4);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)memcpy((void *)(*((_QWORD *)v3 + 4) + 8 * *((int *)v3 + 10)), *((const void **)a2 + 4), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  v5 = *((_DWORD *)a2 + 16);
  if (v5)
  {
    sub_18D09EC0C((_DWORD *)v3 + 14, *((_DWORD *)v3 + 16) + v5);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)memcpy((void *)(*((_QWORD *)v3 + 7) + 8 * *((int *)v3 + 16)), *((const void **)a2 + 7), 8 * *((int *)a2 + 16));
    *((_DWORD *)v3 + 16) += *((_DWORD *)a2 + 16);
  }
  v6 = *((_DWORD *)a2 + 20);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      *((_DWORD *)v3 + 20) |= 1u;
      v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v10)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)operator new();
        v10 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                                                                              + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
      v6 = *((_DWORD *)a2 + 20);
      if ((v6 & 2) == 0)
      {
LABEL_10:
        if ((v6 & 4) == 0)
          goto LABEL_11;
        goto LABEL_30;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_10;
    }
    *((_DWORD *)v3 + 20) |= 2u;
    v12 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 2);
    if (!v12)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)operator new();
      v12 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 2);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                                                                            + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v12, v13);
    v6 = *((_DWORD *)a2 + 20);
    if ((v6 & 4) == 0)
    {
LABEL_11:
      if ((v6 & 8) == 0)
        goto LABEL_12;
      goto LABEL_31;
    }
LABEL_30:
    v14 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 20) |= 4u;
    *((_DWORD *)v3 + 6) = v14;
    v6 = *((_DWORD *)a2 + 20);
    if ((v6 & 8) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
LABEL_31:
    v15 = *((_DWORD *)a2 + 7);
    if (v15 >= 5)
      __assert_rtn("set_transmission_state", "CoreNavigationCLPPrivateDataShared.pb.h", 21155, "::CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_TransmissionStateType_IsValid(value)");
    *((_DWORD *)v3 + 20) |= 8u;
    *((_DWORD *)v3 + 7) = v15;
    v6 = *((_DWORD *)a2 + 20);
    if ((v6 & 0x10) == 0)
      goto LABEL_14;
LABEL_13:
    v7 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 20) |= 0x10u;
    *((_DWORD *)v3 + 12) = v7;
    v6 = *((_DWORD *)a2 + 20);
LABEL_14:
    if ((v6 & 0x80) != 0)
    {
      v8 = *((_BYTE *)a2 + 52);
      *((_DWORD *)v3 + 20) |= 0x80u;
      *((_BYTE *)v3 + 52) = v8;
      v6 = *((_DWORD *)a2 + 20);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    v9 = *((_DWORD *)a2 + 18);
    if (v9 >= 2)
      __assert_rtn("set_sensor_type", "CoreNavigationCLPPrivateDataShared.pb.h", 21272, "::CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_SensorType_IsValid(value)");
    *((_DWORD *)v3 + 20) |= 0x100u;
    *((_DWORD *)v3 + 18) = v9;
  }
}

void sub_18D109368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::~AccessoryVehicleSpeedNotification(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BD0B8;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SharedDtor(this);
  v2 = *((_QWORD *)this + 7);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8000313F17);
  v3 = *((_QWORD *)this + 4);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::~AccessoryVehicleSpeedNotification(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::New(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BD0B8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 37) = 0u;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 80) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 80);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 80);
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(_BYTE *)(this + 52) = 0;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t result;
  unint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  uint64_t v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  signed int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int v54;
  signed int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  _BYTE *v61;
  unsigned int v62;
  _DWORD *v63;
  unsigned int v64[2];

  v4 = (_DWORD *)((char *)this + 56);
  v63 = (_DWORD *)((char *)this + 32);
LABEL_2:
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_34;
        *((_DWORD *)this + 20) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v64[0] = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0;
        }
        else
        {
          v64[0] = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
        goto LABEL_47;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_34;
LABEL_47:
        *((_DWORD *)this + 20) |= 2u;
        v25 = *((_QWORD *)this + 2);
        if (!v25)
        {
          v25 = operator new();
          *(_QWORD *)v25 = &off_1E25BDBF8;
          *(_OWORD *)(v25 + 8) = 0u;
          *(_OWORD *)(v25 + 24) = 0u;
          *((_QWORD *)this + 2) = v25;
        }
        v64[0] = 0;
        v26 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0;
        }
        else
        {
          v64[0] = *v26;
          *((_QWORD *)a2 + 1) = v26 + 1;
        }
        v27 = *((_DWORD *)a2 + 14);
        v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v25, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v29 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v29, 1);
        v30 = v29 - 1;
        if (v30 < 0 == v22)
          *((_DWORD *)a2 + 14) = v30;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v31 >= v10 || *v31 != 24)
          continue;
        v11 = v31 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_61:
        v64[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v32 = v64[0];
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v32 = *v11;
          v33 = v11 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 6) = v32;
        *((_DWORD *)this + 20) |= 4u;
        if ((unint64_t)v33 >= v10 || *v33 != 32)
          continue;
        v12 = v33 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_69:
        v64[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v34 = v64[0];
        }
        else
        {
          v34 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v34 <= 4)
        {
          *((_DWORD *)this + 20) |= 8u;
          *((_DWORD *)this + 7) = v34;
        }
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 >= v13 || *v35 != 40)
          continue;
        v14 = v35 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_79:
        v64[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!(_DWORD)result)
            return result;
          v36 = v64[0];
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v14;
          v37 = v14 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 12) = v36;
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v37 >= v13 || *v37 != 49)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_87:
          *(_QWORD *)v64 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0;
          v38 = *(_QWORD *)v64;
          v39 = *((_DWORD *)this + 10);
          if (v39 == *((_DWORD *)this + 11))
          {
            sub_18D09EC0C(v63, v39 + 1);
            v39 = *((_DWORD *)this + 10);
          }
          v40 = *((_QWORD *)this + 4);
          v41 = v39 + 1;
          *((_DWORD *)this + 10) = v39 + 1;
          *(_QWORD *)(v40 + 8 * v39) = v38;
          v42 = *((_QWORD *)a2 + 1);
          v43 = *((_DWORD *)a2 + 4) - v42;
          if (v43 >= 1)
          {
            v44 = v43 / 9u;
            v45 = v44 >= *((_DWORD *)this + 11) - v41 ? *((_DWORD *)this + 11) - v41 : v44;
            if (v45 >= 1)
            {
              v46 = 0;
              while (*(_BYTE *)v42 == 49)
              {
                v47 = *(_QWORD *)(v42 + 1);
                if (v41 >= *((_DWORD *)this + 11))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v64);
                  v41 = *((_DWORD *)this + 10);
                  v40 = *((_QWORD *)this + 4);
                }
                *((_DWORD *)this + 10) = v41 + 1;
                *(_QWORD *)(v40 + 8 * v41) = v47;
                ++v46;
                v42 += 9;
                ++v41;
                if (v45 == v46)
                {
                  v46 = v45;
                  break;
                }
              }
              if (v46)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_103:
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v37 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v48 = *v37;
        }
        while (v48 == 49);
        if (v48 == 57)
          goto LABEL_106;
        continue;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 5u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_87;
        if (v7 != 2)
          goto LABEL_34;
        result = sub_18D0C7FD4(a2, v63);
        if (!(_DWORD)result)
          return result;
        goto LABEL_103;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_107;
        if (v7 != 2)
        {
LABEL_34:
          if (v7 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        result = sub_18D0C7FD4(a2, v4);
        if (!(_DWORD)result)
          return result;
LABEL_123:
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v37 >= v16)
          continue;
        v59 = *v37;
        if (v59 != 57)
        {
          if (v59 == 64)
          {
            v17 = v37 + 1;
            *((_QWORD *)a2 + 1) = v17;
LABEL_127:
            v64[0] = 0;
            if ((unint64_t)v17 >= v16 || *v17 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
              if (!(_DWORD)result)
                return result;
              v60 = v64[0];
              v61 = (_BYTE *)*((_QWORD *)a2 + 1);
              v16 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v60 = *v17;
              v61 = v17 + 1;
              *((_QWORD *)a2 + 1) = v61;
            }
            *((_BYTE *)this + 52) = v60 != 0;
            *((_DWORD *)this + 20) |= 0x80u;
            if ((unint64_t)v61 < v16 && *v61 == 72)
            {
              v18 = v61 + 1;
              *((_QWORD *)a2 + 1) = v18;
LABEL_135:
              v64[0] = 0;
              if ((unint64_t)v18 >= v16 || *v18 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
                if (!(_DWORD)result)
                  return result;
                v62 = v64[0];
              }
              else
              {
                v62 = *v18;
                *((_QWORD *)a2 + 1) = v18 + 1;
              }
              if (v62 <= 1)
              {
                *((_DWORD *)this + 20) |= 0x100u;
                *((_DWORD *)this + 18) = v62;
              }
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
LABEL_106:
        *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_107:
        *(_QWORD *)v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) != 0)
        {
          v49 = *(_QWORD *)v64;
          v50 = *((_DWORD *)this + 16);
          if (v50 == *((_DWORD *)this + 17))
          {
            sub_18D09EC0C(v4, v50 + 1);
            v50 = *((_DWORD *)this + 16);
          }
          v51 = *((_QWORD *)this + 7);
          v52 = v50 + 1;
          *((_DWORD *)this + 16) = v50 + 1;
          *(_QWORD *)(v51 + 8 * v50) = v49;
          v53 = *((_QWORD *)a2 + 1);
          v54 = *((_DWORD *)a2 + 4) - v53;
          if (v54 >= 1)
          {
            v55 = v54 / 9u;
            v56 = v55 >= *((_DWORD *)this + 17) - v52 ? *((_DWORD *)this + 17) - v52 : v55;
            if (v56 >= 1)
            {
              v57 = 0;
              while (*(_BYTE *)v53 == 57)
              {
                v58 = *(_QWORD *)(v53 + 1);
                if (v52 >= *((_DWORD *)this + 17))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v64);
                  v52 = *((_DWORD *)this + 16);
                  v51 = *((_QWORD *)this + 7);
                }
                *((_DWORD *)this + 16) = v52 + 1;
                *(_QWORD *)(v51 + 8 * v52) = v58;
                ++v57;
                v53 += 9;
                ++v52;
                if (v56 == v57)
                {
                  v57 = v56;
                  break;
                }
              }
              if (v57)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
          goto LABEL_123;
        }
        return 0;
      case 8u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_127;
      case 9u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_135;
      default:
        v7 = TagFallback & 7;
        goto LABEL_34;
    }
  }
}

void sub_18D109DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 80);
  if ((v6 & 1) != 0)
  {
    v10 = *(_QWORD *)(this + 8);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                      + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v11 = *(_QWORD *)(v5 + 16);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                    + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_6;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x10) != 0)
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 56) + 8 * v8++), a3);
    while (v8 < *(int *)(v5 + 64));
  }
  v9 = *(_DWORD *)(v5 + 80);
  if ((v9 & 0x80) == 0)
  {
    if ((v9 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 52), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  uint64_t result;

  v2 = *((_DWORD *)this + 20);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_56;
    goto LABEL_50;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_25;
    goto LABEL_16;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = v5 + 2;
  v2 = *((_DWORD *)this + 20);
  if ((v2 & 2) != 0)
  {
LABEL_16:
    v7 = *((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                     + 16);
    }
    v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(_BYTE *)(v7 + 36))
    {
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if ((v8 & 4) != 0)
        v8 = v9 + 9;
      else
        v8 = v9;
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 += v8 + 2;
    v2 = *((_DWORD *)this + 20);
  }
LABEL_25:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_27:
      if ((v2 & 0x10) == 0)
        goto LABEL_47;
      goto LABEL_41;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_27;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 20);
  }
  else
  {
    v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) != 0)
  {
LABEL_41:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      v2 = *((_DWORD *)this + 20);
    }
    else
    {
      v15 = 2;
    }
    v3 += v15;
  }
LABEL_47:
  if ((v2 & 0x80) != 0)
    v3 += 2;
  if ((v2 & 0x100) != 0)
  {
LABEL_50:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else
    {
      v17 = 2;
    }
    v3 += v17;
  }
LABEL_56:
  result = (9 * (*((_DWORD *)this + 16) + *((_DWORD *)this + 10)) + v3);
  *((_DWORD *)this + 19) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::Swap(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    v4 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    v5 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 4) = v4;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = v5;
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    result = *((double *)a2 + 8);
    *((_QWORD *)a2 + 7) = v7;
    v9 = *((_QWORD *)this + 8);
    *((double *)this + 8) = result;
    *((_QWORD *)a2 + 8) = v9;
    LOBYTE(v7) = *((_BYTE *)this + 52);
    *((_BYTE *)this + 52) = *((_BYTE *)a2 + 52);
    *((_BYTE *)a2 + 52) = v7;
    LODWORD(v7) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v7;
    LODWORD(v7) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v7;
    LODWORD(v7) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.AccessoryVehicleSpeedNotification");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ReachabilityState(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  *(_QWORD *)this = &off_1E25BB858;
  *((_QWORD *)this + 1) = 0;
  *((_WORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(this, a2);
  return this;
}

void sub_18D10A358(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 4 && v5 != 1001)
        __assert_rtn("set_previous", "CoreNavigationCLPPrivateDataShared.pb.h", 21299, "::CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityType_IsValid(value)");
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 4 && v6 != 1001)
        __assert_rtn("set_current", "CoreNavigationCLPPrivateDataShared.pb.h", 21322, "::CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityType_IsValid(value)");
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 3) = v6;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *((_BYTE *)a2 + 16);
      *((_DWORD *)this + 6) |= 4u;
      *((_BYTE *)this + 16) = v7;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 8) != 0)
    {
      v8 = *((_BYTE *)a2 + 17);
      *((_DWORD *)this + 6) |= 8u;
      *((_BYTE *)this + 17) = v8;
    }
  }
}

void sub_18D10A4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::~ReachabilityState(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  *(_QWORD *)this = &off_1E25BB858;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::~ReachabilityState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::New(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)result = &off_1E25BB858;
  *(_QWORD *)(result + 8) = 0;
  *(_WORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_WORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  unsigned int v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  unsigned __int8 *v20;
  uint64_t result;
  unsigned int v22;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v22 = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && (*v7 & 0x80000000) == 0)
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
LABEL_23:
          if (v8 < 4 || v8 == 1001)
          {
            *((_DWORD *)this + 6) |= 1u;
            *((_DWORD *)this + 2) = v8;
          }
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 < v9 && *v14 == 16)
          {
            v10 = v14 + 1;
            *((_QWORD *)a2 + 1) = v10;
            goto LABEL_29;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
        if ((_DWORD)result)
        {
          v8 = v22;
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_29:
        v22 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v15 = v22;
        }
        else
        {
          v15 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v15 < 4 || v15 == 1001)
        {
          *((_DWORD *)this + 6) |= 2u;
          *((_DWORD *)this + 3) = v15;
        }
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v16 >= v11 || *v16 != 24)
          continue;
        v12 = v16 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_39:
        v22 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v17 = v22;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v12;
          v18 = v12 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_BYTE *)this + 16) = v17 != 0;
        *((_DWORD *)this + 6) |= 4u;
        if ((unint64_t)v18 >= v11 || *v18 != 32)
          continue;
        v13 = v18 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_47:
        v22 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v19 = v22;
          v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v13;
          v20 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_BYTE *)this + 17) = v19 != 0;
        *((_DWORD *)this + 6) |= 8u;
        if (v20 != (unsigned __int8 *)v11 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  int v2;
  int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  unsigned int v8;

  LOBYTE(v2) = *((_BYTE *)this + 24);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_24;
  }
  if ((*((_BYTE *)this + 24) & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v5 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v5 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 6);
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 24) & 2) == 0)
      goto LABEL_19;
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v6 & 0x80000000) != 0)
  {
    v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    v2 = *((_DWORD *)this + 6);
  }
  else
  {
    v7 = 2;
  }
  v3 += v7;
LABEL_19:
  v8 = v3 + 2;
  if ((v2 & 4) == 0)
    v8 = v3;
  if ((v2 & 8) != 0)
    result = v8 + 2;
  else
    result = v8;
LABEL_24:
  *((_DWORD *)this + 5) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    LOBYTE(v3) = *(_BYTE *)(this + 16);
    *(_BYTE *)(this + 16) = *((_BYTE *)a2 + 16);
    *((_BYTE *)a2 + 16) = v3;
    LOBYTE(v3) = *(_BYTE *)(this + 17);
    *(_BYTE *)(this + 17) = *((_BYTE *)a2 + 17);
    *((_BYTE *)a2 + 17) = v3;
    v4 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ReachabilityState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0xBFF0000000000000;
  *(_WORD *)(this + 16) = 0;
  *(_BYTE *)(this + 18) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Battery *CoreNavigation::CLP::LogEntry::PrivateData::Battery::Battery(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  *(_QWORD *)this = &off_1E25BD7C0;
  *((_QWORD *)this + 1) = 0xBFF0000000000000;
  *((_WORD *)this + 8) = 0;
  *((_BYTE *)this + 18) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(this, a2);
  return this;
}

void sub_18D10AB9C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  int v4;
  char v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  _BYTE v11[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v7 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 1) = v7;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_BYTE *)a2 + 16);
    *((_DWORD *)this + 8) |= 2u;
    *((_BYTE *)this + 16) = v8;
    v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v9 = *((_BYTE *)a2 + 17);
    *((_DWORD *)this + 8) |= 4u;
    *((_BYTE *)this + 17) = v9;
    v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_10;
      goto LABEL_9;
    }
LABEL_16:
    v10 = *((_DWORD *)a2 + 5);
    if (v10 >= 5)
      __assert_rtn("set_charger_type", "CoreNavigationCLPPrivateDataShared.pb.h", 21459, "::CoreNavigation::CLP::LogEntry::PrivateData::BatteryChargerType_IsValid(value)");
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 5) = v10;
    v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 0x10) == 0)
      goto LABEL_10;
LABEL_9:
    v5 = *((_BYTE *)a2 + 18);
    *((_DWORD *)this + 8) |= 0x10u;
    *((_BYTE *)this + 18) = v5;
    v4 = *((_DWORD *)a2 + 8);
LABEL_10:
    if ((v4 & 0x20) != 0)
    {
      v6 = *((_DWORD *)a2 + 6);
      *((_DWORD *)this + 8) |= 0x20u;
      *((_DWORD *)this + 6) = v6;
    }
  }
}

void sub_18D10AD04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::~Battery(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  *(_QWORD *)this = &off_1E25BD7C0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::~Battery(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::New(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BD7C0;
  *(_QWORD *)(result + 8) = 0xBFF0000000000000;
  *(_WORD *)(result + 16) = 0;
  *(_BYTE *)(result + 18) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0xBFF0000000000000;
    *(_WORD *)(this + 16) = 0;
    *(_BYTE *)(this + 18) = 0;
    *(_DWORD *)(this + 20) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  _BYTE *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;
  unsigned int v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_25;
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v26;
        *((_DWORD *)this + 8) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 != 16)
          continue;
        v9 = v8 + 1;
        *((_QWORD *)a2 + 1) = v9;
        goto LABEL_15;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_15:
        v26[0] = 0;
        if ((unint64_t)v9 >= v7 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!(_DWORD)result)
            return result;
          v10 = v26[0];
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v10 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_BYTE *)this + 16) = v10 != 0;
        *((_DWORD *)this + 8) |= 2u;
        if ((unint64_t)v11 >= v7 || *v11 != 24)
          continue;
        v12 = v11 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_34:
        v26[0] = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!(_DWORD)result)
            return result;
          v18 = v26[0];
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v12;
          v19 = v12 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 17) = v18 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v19 >= v7 || *v19 != 32)
          continue;
        v13 = v19 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v26[0] = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!(_DWORD)result)
            return result;
          v20 = v26[0];
        }
        else
        {
          v20 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v20 <= 4)
        {
          *((_DWORD *)this + 8) |= 8u;
          *((_DWORD *)this + 5) = v20;
        }
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v21 >= v14 || *v21 != 40)
          continue;
        v15 = v21 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_52:
        v26[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!(_DWORD)result)
            return result;
          v22 = v26[0];
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v22 = *v15;
          v23 = v15 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_BYTE *)this + 18) = v22 != 0;
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v23 >= v14 || *v23 != 48)
          continue;
        v16 = v23 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_60:
        v26[0] = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!(_DWORD)result)
            return result;
          v24 = v26[0];
          v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v16;
          v25 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 6) = v24;
        *((_DWORD *)this + 8) |= 0x20u;
        if (v25 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_60;
      default:
        v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 18), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    if ((v2 & 4) != 0)
      LODWORD(v3) = ((v2 << 31 >> 31) & 9 | v2 & 2) + 2;
    else
      LODWORD(v3) = (v2 << 31 >> 31) & 9 | v2 & 2;
    if ((v2 & 8) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if ((v4 & 0x80000000) != 0)
      {
        v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 8);
      }
      else
      {
        v5 = 2;
      }
      LODWORD(v3) = v5 + v3;
    }
    if ((v2 & 0x10) != 0)
      v3 = (v3 + 2);
    else
      v3 = v3;
    if ((v2 & 0x20) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      }
      else
      {
        v7 = 2;
      }
      v3 = (v7 + v3);
    }
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Battery *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Battery::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  double result;
  char v3;
  char v4;
  int v5;
  int v6;
  int v7;
  int v8;

  if (a2 != this)
  {
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v3 = *((_BYTE *)this + 16);
    *((_BYTE *)this + 16) = *((_BYTE *)a2 + 16);
    *((_BYTE *)a2 + 16) = v3;
    v4 = *((_BYTE *)this + 17);
    *((_BYTE *)this + 17) = *((_BYTE *)a2 + 17);
    *((_BYTE *)a2 + 17) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 18);
    *((_BYTE *)this + 18) = *((_BYTE *)a2 + 18);
    *((_BYTE *)a2 + 18) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v7;
    v8 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Battery::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Battery");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus_NotificationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0x14;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::DeviceStatus(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  *(_QWORD *)this = &off_1E25BA2C8;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(this, a2);
  return this;
}

void sub_18D10B52C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *v3;
  int v4;
  char v5;
  char v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  int v9;
  unsigned int v10;
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *v12;
  CoreNavigation::CLP::LogEntry::PrivateData::Battery *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::Battery *v14;
  char v15;
  char v16;
  char v17;
  char v18;
  int v19;
  int v20;
  _BYTE v21[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  v4 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    *((_DWORD *)v3 + 15) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)v3 + 15) |= 2u;
  *((_DWORD *)v3 + 4) = v9;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_27:
  v10 = *((_DWORD *)a2 + 5);
  if (v10 >= 0x14)
    __assert_rtn("set_notification_data", "CoreNavigationCLPPrivateDataShared.pb.h", 21594, "::CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus_NotificationType_IsValid(value)");
  *((_DWORD *)v3 + 15) |= 4u;
  *((_DWORD *)v3 + 5) = v10;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_34;
  }
LABEL_29:
  *((_DWORD *)v3 + 15) |= 8u;
  v11 = (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((_QWORD *)v3 + 3);
  if (!v11)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)operator new();
    v11 = this;
    *((_DWORD *)this + 5) = 0;
    *((_DWORD *)this + 6) = 0;
    *(_QWORD *)this = &off_1E25BB858;
    *((_QWORD *)this + 1) = 0;
    *((_WORD *)this + 8) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((_QWORD *)a2 + 3);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                                  + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(v11, v12);
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_39:
    v15 = *((_BYTE *)a2 + 40);
    *((_DWORD *)v3 + 15) |= 0x20u;
    *((_BYTE *)v3 + 40) = v15;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_34:
  *((_DWORD *)v3 + 15) |= 0x10u;
  v13 = (CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((_QWORD *)v3 + 4);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)operator new();
    v13 = this;
    *(_QWORD *)this = &off_1E25BD7C0;
    *((_QWORD *)this + 1) = 0xBFF0000000000000;
    *((_WORD *)this + 8) = 0;
    *((_BYTE *)this + 18) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 5) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((_QWORD *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Battery **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                        + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(v13, v14);
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x20) != 0)
    goto LABEL_39;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_40:
  v16 = *((_BYTE *)a2 + 41);
  *((_DWORD *)v3 + 15) |= 0x40u;
  *((_BYTE *)v3 + 41) = v16;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_BYTE *)a2 + 42);
    *((_DWORD *)v3 + 15) |= 0x80u;
    *((_BYTE *)v3 + 42) = v5;
    v4 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v17 = *((_BYTE *)a2 + 43);
    *((_DWORD *)v3 + 15) |= 0x100u;
    *((_BYTE *)v3 + 43) = v17;
    v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v18 = *((_BYTE *)a2 + 48);
  *((_DWORD *)v3 + 15) |= 0x200u;
  *((_BYTE *)v3 + 48) = v18;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_45;
  }
LABEL_44:
  v19 = *((_DWORD *)a2 + 11);
  *((_DWORD *)v3 + 15) |= 0x400u;
  *((_DWORD *)v3 + 11) = v19;
  v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      return;
    goto LABEL_19;
  }
LABEL_45:
  v20 = *((_DWORD *)a2 + 13);
  *((_DWORD *)v3 + 15) |= 0x800u;
  *((_DWORD *)v3 + 13) = v20;
  if ((*((_DWORD *)a2 + 15) & 0x1000) != 0)
  {
LABEL_19:
    v6 = *((_BYTE *)a2 + 49);
    *((_DWORD *)v3 + 15) |= 0x1000u;
    *((_BYTE *)v3 + 49) = v6;
  }
}

void sub_18D10B89C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::~DeviceStatus(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  *(_QWORD *)this = &off_1E25BA2C8;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::~DeviceStatus(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::New(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA2C8;
  *(_QWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 34) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    *(_QWORD *)(this + 16) = 0;
    if ((v1 & 8) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_WORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(this + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 32))
        {
          *(_QWORD *)(v4 + 8) = 0xBFF0000000000000;
          *(_WORD *)(v4 + 16) = 0;
          *(_BYTE *)(v4 + 18) = 0;
          *(_DWORD *)(v4 + 20) = 0;
          *(_DWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    *(_WORD *)(this + 40) = 0;
    *(_BYTE *)(this + 42) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    *(_DWORD *)(this + 43) = 0;
    *(_DWORD *)(this + 46) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  uint64_t result;
  unsigned int v30;
  _BYTE *v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  _BYTE *v38;
  uint64_t v39;
  char *v40;
  int v41;
  int v42;
  int v43;
  int v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  _BYTE *v51;
  unsigned int v52;
  _BYTE *v53;
  unsigned int v54;
  _BYTE *v55;
  unsigned int v56;
  _BYTE *v57;
  unsigned int v58;
  _BYTE *v59;
  unsigned int v60;
  unsigned __int8 *v61;
  unsigned int v62;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_37;
        *((_DWORD *)this + 15) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v62 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62))return 0;
        }
        else
        {
          v62 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v23 = *((_DWORD *)a2 + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 >= v9 || *v26 != 16)
          continue;
        v10 = v26 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_50;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_50:
        v62 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
          if (!(_DWORD)result)
            return result;
          v27 = v62;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v10;
          v28 = v10 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 4) = v27;
        *((_DWORD *)this + 15) |= 2u;
        if ((unint64_t)v28 >= v9 || *v28 != 24)
          continue;
        v11 = v28 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_58:
        v62 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
          if (!(_DWORD)result)
            return result;
          v30 = v62;
        }
        else
        {
          v30 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (v30 <= 0x13)
        {
          *((_DWORD *)this + 15) |= 4u;
          *((_DWORD *)this + 5) = v30;
        }
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_68:
        *((_DWORD *)this + 15) |= 8u;
        v32 = *((_QWORD *)this + 3);
        if (!v32)
        {
          v32 = operator new();
          *(_DWORD *)(v32 + 20) = 0;
          *(_DWORD *)(v32 + 24) = 0;
          *(_QWORD *)v32 = &off_1E25BB858;
          *(_QWORD *)(v32 + 8) = 0;
          *(_WORD *)(v32 + 16) = 0;
          *((_QWORD *)this + 3) = v32;
        }
        v62 = 0;
        v33 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62))return 0;
        }
        else
        {
          v62 = *v33;
          *((_QWORD *)a2 + 1) = v33 + 1;
        }
        v34 = *((_DWORD *)a2 + 14);
        v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)v32, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v36 = *((_DWORD *)a2 + 14);
        v24 = __OFSUB__(v36, 1);
        v37 = v36 - 1;
        if (v37 < 0 == v24)
          *((_DWORD *)a2 + 14) = v37;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_82:
        *((_DWORD *)this + 15) |= 0x10u;
        v39 = *((_QWORD *)this + 4);
        if (!v39)
        {
          v39 = operator new();
          *(_QWORD *)v39 = &off_1E25BD7C0;
          *(_QWORD *)(v39 + 8) = 0xBFF0000000000000;
          *(_WORD *)(v39 + 16) = 0;
          *(_BYTE *)(v39 + 18) = 0;
          *(_DWORD *)(v39 + 32) = 0;
          *(_QWORD *)(v39 + 24) = 0;
          *(_DWORD *)(v39 + 20) = 0;
          *((_QWORD *)this + 4) = v39;
        }
        v62 = 0;
        v40 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62))return 0;
        }
        else
        {
          v62 = *v40;
          *((_QWORD *)a2 + 1) = v40 + 1;
        }
        v41 = *((_DWORD *)a2 + 14);
        v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 < v42)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::Battery *)v39, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v43 = *((_DWORD *)a2 + 14);
              v24 = __OFSUB__(v43, 1);
              v44 = v43 - 1;
              if (v44 < 0 == v24)
                *((_DWORD *)a2 + 14) = v44;
              v45 = (_BYTE *)*((_QWORD *)a2 + 1);
              v12 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v45 < v12 && *v45 == 48)
              {
                v13 = v45 + 1;
                *((_QWORD *)a2 + 1) = v13;
LABEL_96:
                v62 = 0;
                if ((unint64_t)v13 >= v12 || *v13 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                  if (!(_DWORD)result)
                    return result;
                  v46 = v62;
                  v47 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v12 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  v46 = *v13;
                  v47 = v13 + 1;
                  *((_QWORD *)a2 + 1) = v47;
                }
                *((_BYTE *)this + 40) = v46 != 0;
                *((_DWORD *)this + 15) |= 0x20u;
                if ((unint64_t)v47 < v12 && *v47 == 56)
                {
                  v14 = v47 + 1;
                  *((_QWORD *)a2 + 1) = v14;
LABEL_104:
                  v62 = 0;
                  if ((unint64_t)v14 >= v12 || *v14 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                    if (!(_DWORD)result)
                      return result;
                    v48 = v62;
                    v49 = (_BYTE *)*((_QWORD *)a2 + 1);
                    v12 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v48 = *v14;
                    v49 = v14 + 1;
                    *((_QWORD *)a2 + 1) = v49;
                  }
                  *((_BYTE *)this + 41) = v48 != 0;
                  *((_DWORD *)this + 15) |= 0x40u;
                  if ((unint64_t)v49 < v12 && *v49 == 64)
                  {
                    v15 = v49 + 1;
                    *((_QWORD *)a2 + 1) = v15;
LABEL_112:
                    v62 = 0;
                    if ((unint64_t)v15 >= v12 || *v15 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                      if (!(_DWORD)result)
                        return result;
                      v50 = v62;
                      v51 = (_BYTE *)*((_QWORD *)a2 + 1);
                      v12 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      v50 = *v15;
                      v51 = v15 + 1;
                      *((_QWORD *)a2 + 1) = v51;
                    }
                    *((_BYTE *)this + 42) = v50 != 0;
                    *((_DWORD *)this + 15) |= 0x80u;
                    if ((unint64_t)v51 < v12 && *v51 == 72)
                    {
                      v16 = v51 + 1;
                      *((_QWORD *)a2 + 1) = v16;
LABEL_120:
                      v62 = 0;
                      if ((unint64_t)v16 >= v12 || *v16 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                        if (!(_DWORD)result)
                          return result;
                        v52 = v62;
                        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
                        v12 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        v52 = *v16;
                        v53 = v16 + 1;
                        *((_QWORD *)a2 + 1) = v53;
                      }
                      *((_BYTE *)this + 43) = v52 != 0;
                      *((_DWORD *)this + 15) |= 0x100u;
                      if ((unint64_t)v53 < v12 && *v53 == 80)
                      {
                        v17 = v53 + 1;
                        *((_QWORD *)a2 + 1) = v17;
LABEL_128:
                        v62 = 0;
                        if ((unint64_t)v17 >= v12 || *v17 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                          if (!(_DWORD)result)
                            return result;
                          v54 = v62;
                          v55 = (_BYTE *)*((_QWORD *)a2 + 1);
                          v12 = *((_QWORD *)a2 + 2);
                        }
                        else
                        {
                          v54 = *v17;
                          v55 = v17 + 1;
                          *((_QWORD *)a2 + 1) = v55;
                        }
                        *((_BYTE *)this + 48) = v54 != 0;
                        *((_DWORD *)this + 15) |= 0x200u;
                        if ((unint64_t)v55 < v12 && *v55 == 88)
                        {
                          v18 = v55 + 1;
                          *((_QWORD *)a2 + 1) = v18;
LABEL_136:
                          v62 = 0;
                          if ((unint64_t)v18 >= v12 || *v18 < 0)
                          {
                            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                            if (!(_DWORD)result)
                              return result;
                            v56 = v62;
                            v57 = (_BYTE *)*((_QWORD *)a2 + 1);
                            v12 = *((_QWORD *)a2 + 2);
                          }
                          else
                          {
                            v56 = *v18;
                            v57 = v18 + 1;
                            *((_QWORD *)a2 + 1) = v57;
                          }
                          *((_DWORD *)this + 11) = v56;
                          *((_DWORD *)this + 15) |= 0x400u;
                          if ((unint64_t)v57 < v12 && *v57 == 96)
                          {
                            v19 = v57 + 1;
                            *((_QWORD *)a2 + 1) = v19;
LABEL_144:
                            v62 = 0;
                            if ((unint64_t)v19 >= v12 || *v19 < 0)
                            {
                              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                              if (!(_DWORD)result)
                                return result;
                              v58 = v62;
                              v59 = (_BYTE *)*((_QWORD *)a2 + 1);
                              v12 = *((_QWORD *)a2 + 2);
                            }
                            else
                            {
                              v58 = *v19;
                              v59 = v19 + 1;
                              *((_QWORD *)a2 + 1) = v59;
                            }
                            *((_DWORD *)this + 13) = v58;
                            *((_DWORD *)this + 15) |= 0x800u;
                            if ((unint64_t)v59 < v12 && *v59 == 104)
                            {
                              v20 = v59 + 1;
                              *((_QWORD *)a2 + 1) = v20;
LABEL_152:
                              v62 = 0;
                              if ((unint64_t)v20 >= v12 || *v20 < 0)
                              {
                                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                                if (!(_DWORD)result)
                                  return result;
                                v60 = v62;
                                v61 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                v12 = *((_QWORD *)a2 + 2);
                              }
                              else
                              {
                                v60 = *v20;
                                v61 = (unsigned __int8 *)(v20 + 1);
                                *((_QWORD *)a2 + 1) = v61;
                              }
                              *((_BYTE *)this + 49) = v60 != 0;
                              *((_DWORD *)this + 15) |= 0x1000u;
                              if (v61 == (unsigned __int8 *)v12
                                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                              {
                                *((_DWORD *)a2 + 8) = 0;
                                result = 1;
                                *((_BYTE *)a2 + 36) = 1;
                                return result;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_68;
        goto LABEL_37;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_82;
        goto LABEL_37;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_96;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_104;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_112;
      case 9u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_120;
      case 0xAu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_128;
      case 0xBu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_136;
      case 0xCu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_144;
      case 0xDu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_152;
      default:
        v6 = TagFallback & 7;
LABEL_37:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_20:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_26;
  }
LABEL_23:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 42), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 43), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 49), (uint64_t)a2, a4);
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x1000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 49), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::PrivateData::Battery *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;

  v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_50;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 10;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v9 = 1;
    }
    v3 += v9 + 1;
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_23;
LABEL_31:
    v12 = (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((_QWORD *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v12 = *(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                              + 24);
    }
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ByteSize(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v3 += v14 + v15 + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 0x10) == 0)
      goto LABEL_43;
    goto LABEL_37;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 15);
  }
  else
  {
    v11 = 2;
  }
  v3 += v11;
  if ((v2 & 8) != 0)
    goto LABEL_31;
LABEL_23:
  if ((v2 & 0x10) != 0)
  {
LABEL_37:
    v16 = (CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((_QWORD *)this + 4);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v16 = *(CoreNavigation::CLP::LogEntry::PrivateData::Battery **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                    + 32);
    }
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Battery::ByteSize(v16);
    v18 = (int)v17;
    if (v17 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    else
      v19 = 1;
    v3 += v18 + v19 + 1;
    v2 = *((_DWORD *)this + 15);
  }
LABEL_43:
  v20 = v3 + 2;
  if ((v2 & 0x20) == 0)
    v20 = v3;
  if ((v2 & 0x40) != 0)
    v20 += 2;
  if ((v2 & 0x80) != 0)
    result = v20 + 2;
  else
    result = v20;
LABEL_50:
  if ((v2 & 0xFF00) != 0)
  {
    v21 = result + 2;
    if ((v2 & 0x100) == 0)
      v21 = result;
    if ((v2 & 0x200) != 0)
      v22 = v21 + 2;
    else
      v22 = v21;
    if ((v2 & 0x400) != 0)
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v23 & 0x80000000) != 0)
      {
        v24 = 11;
      }
      else if (v23 >= 0x80)
      {
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
        v2 = *((_DWORD *)this + 15);
      }
      else
      {
        v24 = 2;
      }
      v22 += v24;
    }
    if ((v2 & 0x800) != 0)
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if ((v25 & 0x80000000) != 0)
      {
        v26 = 11;
      }
      else if (v25 >= 0x80)
      {
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25) + 1;
        v2 = *((_DWORD *)this + 15);
      }
      else
      {
        v26 = 2;
      }
      v22 += v26;
    }
    if ((v2 & 0x1000) != 0)
      result = v22 + 2;
    else
      result = v22;
  }
  *((_DWORD *)this + 14) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    v3 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    v4 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 40);
    *(_BYTE *)(this + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 41);
    *(_BYTE *)(this + 41) = *((_BYTE *)a2 + 41);
    *((_BYTE *)a2 + 41) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 42);
    *(_BYTE *)(this + 42) = *((_BYTE *)a2 + 42);
    *((_BYTE *)a2 + 42) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 43);
    *(_BYTE *)(this + 43) = *((_BYTE *)a2 + 43);
    *((_BYTE *)a2 + 43) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 48);
    *(_BYTE *)(this + 48) = *((_BYTE *)a2 + 48);
    *((_BYTE *)a2 + 48) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 49);
    *(_BYTE *)(this + 49) = *((_BYTE *)a2 + 49);
    *((_BYTE *)a2 + 49) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DeviceStatus");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  result = NAN;
  *((_OWORD *)this + 1) = xmmword_18D30F420;
  *((_DWORD *)this + 8) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SignalEnvironment(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  *(_QWORD *)this = &off_1E25BB948;
  *((_QWORD *)this + 1) = 0;
  *((_OWORD *)this + 1) = xmmword_18D30F420;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(this, a2);
  return this;
}

void sub_18D10CA10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  int v8;
  int v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 4);
      if ((v7 + 1) >= 8)
        __assert_rtn("set_coarse_signal_environment", "CoreNavigationCLPPrivateDataShared.pb.h", 21923, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      *((_DWORD *)v3 + 8) |= 2u;
      *((_DWORD *)v3 + 4) = v7;
      v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 4) != 0)
    {
      v8 = *((_DWORD *)a2 + 5);
      if ((v8 + 1) >= 8)
        __assert_rtn("set_high_resolution_signal_environment", "CoreNavigationCLPPrivateDataShared.pb.h", 21946, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      *((_DWORD *)v3 + 8) |= 4u;
      *((_DWORD *)v3 + 5) = v8;
      v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 8) != 0)
    {
      v9 = *((_DWORD *)a2 + 6);
      *((_DWORD *)v3 + 8) |= 8u;
      *((_DWORD *)v3 + 6) = v9;
    }
  }
}

void sub_18D10CBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::~SignalEnvironment(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BB948;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::~SignalEnvironment(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::New(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BB948;
  *(_QWORD *)(v1 + 8) = 0;
  result = NAN;
  *(_OWORD *)(v1 + 16) = xmmword_18D30F420;
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 32))
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = -1;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  unsigned int v21;
  uint64_t result;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned __int8 *v27;
  unsigned int v28;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 8) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v28 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0;
        }
        else
        {
          v28 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v15 = *((_DWORD *)a2 + 14);
        v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v17 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)a2 + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v9 || *v20 != 16)
          continue;
        v10 = v20 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_32;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_32:
        v28 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!(_DWORD)result)
            return result;
          v21 = v28;
        }
        else
        {
          v21 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v21 + 1 <= 7)
        {
          *((_DWORD *)this + 8) |= 2u;
          *((_DWORD *)this + 4) = v21;
        }
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v23 >= v11 || *v23 != 24)
          continue;
        v12 = v23 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_42:
        v28 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!(_DWORD)result)
            return result;
          v24 = v28;
        }
        else
        {
          v24 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v24 + 1 <= 7)
        {
          *((_DWORD *)this + 8) |= 4u;
          *((_DWORD *)this + 5) = v24;
        }
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 32)
          continue;
        v14 = v25 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_52:
        v28 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!(_DWORD)result)
            return result;
          v26 = v28;
          v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v14;
          v27 = (unsigned __int8 *)(v14 + 1);
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 6) = v26;
        *((_DWORD *)this + 8) |= 8u;
        if (v27 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[8];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  if ((v5[8] & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_36;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = (v5 + 2);
  v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_36;
    goto LABEL_30;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v9 & 0x80000000) != 0)
  {
    v10 = 11;
  }
  else if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v10 = 2;
  }
  v3 = (v10 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_30:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else
    {
      v12 = 2;
    }
    v3 = (v12 + v3);
  }
LABEL_36:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SignalEnvironment");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 8) = xmmword_18D30F430;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SignalEnvironmentInfo(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  *(_QWORD *)this = &off_1E25BC5F0;
  *(_OWORD *)((char *)this + 8) = xmmword_18D30F430;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D10D424(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  int v4;
  int v5;
  unsigned int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if ((v5 + 1) >= 8)
        __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 21995, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 4)
        __assert_rtn("set_fidelity_level", "CoreNavigationCLPPrivateDataShared.pb.h", 22018, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentFidelityLevel_IsValid(value)");
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18D10D534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::~SignalEnvironmentInfo(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  *(_QWORD *)this = &off_1E25BC5F0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::~SignalEnvironmentInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC5F0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)(v1 + 8) = xmmword_18D30F430;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0xFFFFFFFFLL;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  uint64_t result;
  unsigned int v14;
  unsigned int v15;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v15 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v10 = v15;
      }
      else
      {
        v10 = *v9;
        *((_QWORD *)a2 + 1) = v9 + 1;
      }
      if (v10 + 1 <= 7)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_25:
        v14 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14);
          if (!(_DWORD)result)
            return result;
          v12 = v14;
        }
        else
        {
          v12 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        if (v12 <= 3)
        {
          *((_DWORD *)this + 5) |= 2u;
          *((_DWORD *)this + 3) = v12;
        }
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SignalEnvironmentInfo");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MagSample *CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MagSample(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  *(_QWORD *)this = &off_1E25BDA18;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(this, a2);
  return this;
}

void sub_18D10DA50(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MagSample *v3;
  double v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    *((_DWORD *)v3 + 8) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MagSample *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_
                                                                           + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_16:
      LODWORD(v4) = *((_DWORD *)a2 + 5);
      *((_DWORD *)v3 + 8) |= 4u;
      *((_DWORD *)v3 + 5) = LODWORD(v4);
      if ((*((_DWORD *)a2 + 8) & 8) != 0)
        goto LABEL_8;
      return *(float *)&v4;
    }
  }
  else if ((*((_BYTE *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)v3 + 8) |= 2u;
  *((_DWORD *)v3 + 4) = LODWORD(v4);
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0)
    goto LABEL_16;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 8u;
    *((_DWORD *)v3 + 6) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18D10DBB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MagSample::~MagSample(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BDA18;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MagSample *)CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MagSample::~MagSample(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MagSample *)CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::New(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BDA18;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 32))
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t result;
  unsigned int v18;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 8) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v18 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0;
        }
        else
        {
          v18 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
LABEL_31:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_35:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_39:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_35;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
        goto LABEL_39;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MagSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MagSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Magnetometer(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BA340;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(this, a2);
  return this;
}

void sub_18D10E30C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MagSample **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25BDA18;
        *(_QWORD *)(v11 + 8) = 0;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)(v11 + 24) = 0;
        *(_DWORD *)(v11 + 32) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::MagSample *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D10E4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::~Magnetometer(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BA340;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::~Magnetometer(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::New(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BA340;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E25BDA18;
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_QWORD *)(v19 + 24) = 0;
          *(_DWORD *)(v19 + 32) = 0;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(_QWORD *)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MagSample *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
      v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::MagSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::MagSample **)(*((_QWORD *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Magnetometer");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Reset *CoreNavigation::CLP::LogEntry::PrivateData::Reset::Reset(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BD5E0;
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(this, a2);
  return this;
}

void sub_18D10ECC0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Reset *v3;
  double result;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  _BYTE v7[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    *((_DWORD *)v3 + 5) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)operator new();
      v5 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_
                                                                           + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
  }
  return result;
}

void sub_18D10EDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Reset::~Reset(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD5E0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Reset *)CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::~Reset(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Reset::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Reset *)CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Reset::New(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BD5E0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::Clear(uint64_t this)
{
  uint64_t v1;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v1 = *(_QWORD *)(this + 8);
    if (v1)
    {
      if (*(_BYTE *)(v1 + 36))
      {
        *(_QWORD *)(v1 + 8) = 0;
        *(_QWORD *)(v1 + 16) = 0;
        *(_QWORD *)(v1 + 24) = 0;
      }
      *(_DWORD *)(v1 + 36) = 0;
    }
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t result;
  unsigned int v14;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *((_DWORD *)this + 5) |= 1u;
      v6 = *((_QWORD *)this + 1);
      if (!v6)
      {
        v6 = operator new();
        *(_QWORD *)v6 = &off_1E25BDBF8;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *((_QWORD *)this + 1) = v6;
      }
      v14 = 0;
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14))
          return 0;
      }
      else
      {
        v14 = *v7;
        *((_QWORD *)a2 + 1) = v7 + 1;
      }
      v8 = *((_DWORD *)a2 + 14);
      v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v6, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v10 = *((_DWORD *)a2 + 14);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (v12 < 0 == v11)
        *((_DWORD *)a2 + 14) = v12;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v5 = *(_QWORD *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  uint64_t result;
  uint64_t v3;
  int v4;
  int v5;

  if ((*((_BYTE *)this + 20) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    result = (v4 + 2);
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Reset::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Reset::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Reset *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Reset::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Reset");
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::AccelerometerPace(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  *(_QWORD *)this = &off_1E25BB420;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(this, a2);
  return this;
}

void sub_18D10F314(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D10F3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::~AccelerometerPace(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  *(_QWORD *)this = &off_1E25BB420;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::~AccelerometerPace(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::New(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BB420;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::Swap(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.AccelerometerPace");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::FalseStepDetectorState(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BC668;
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(this, a2);
  return this;
}

void sub_18D10F8D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 5) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 5) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 5) |= 4u;
    *((_BYTE *)this + 10) = v8;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_18;
    }
LABEL_17:
    v9 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 5) |= 8u;
    *((_BYTE *)this + 11) = v9;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_19;
    }
LABEL_18:
    v10 = *((_BYTE *)a2 + 12);
    *((_DWORD *)this + 5) |= 0x10u;
    *((_BYTE *)this + 12) = v10;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_20;
    }
LABEL_19:
    v11 = *((_BYTE *)a2 + 13);
    *((_DWORD *)this + 5) |= 0x20u;
    *((_BYTE *)this + 13) = v11;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_12;
    }
LABEL_20:
    v12 = *((_BYTE *)a2 + 14);
    *((_DWORD *)this + 5) |= 0x40u;
    *((_BYTE *)this + 14) = v12;
    if ((*((_DWORD *)a2 + 5) & 0x80) == 0)
      return;
LABEL_12:
    v5 = *((_BYTE *)a2 + 15);
    *((_DWORD *)this + 5) |= 0x80u;
    *((_BYTE *)this + 15) = v5;
  }
}

void sub_18D10FA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::~FalseStepDetectorState(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  *(_QWORD *)this = &off_1E25BC668;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::~FalseStepDetectorState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::New(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BC668;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  unsigned int v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  unsigned __int8 *v31;
  uint64_t result;
  unsigned int v33;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v33 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_31:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 5) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_34;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
        if ((_DWORD)result)
        {
          v9 = v33;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_31;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_34:
        v33 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v18 = v33;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v11;
          v19 = v11 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 9) = v18 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if ((unint64_t)v19 >= v7 || *v19 != 24)
          continue;
        v12 = v19 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_42:
        v33 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v20 = v33;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v20 = *v12;
          v21 = v12 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_BYTE *)this + 10) = v20 != 0;
        *((_DWORD *)this + 5) |= 4u;
        if ((unint64_t)v21 >= v7 || *v21 != 32)
          continue;
        v13 = v21 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_50:
        v33 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v22 = v33;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v22 = *v13;
          v23 = v13 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_BYTE *)this + 11) = v22 != 0;
        *((_DWORD *)this + 5) |= 8u;
        if ((unint64_t)v23 >= v7 || *v23 != 40)
          continue;
        v14 = v23 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_58:
        v33 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v24 = v33;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v14;
          v25 = v14 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_BYTE *)this + 12) = v24 != 0;
        *((_DWORD *)this + 5) |= 0x10u;
        if ((unint64_t)v25 >= v7 || *v25 != 48)
          continue;
        v15 = v25 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_66:
        v33 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v26 = v33;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v15;
          v27 = v15 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_BYTE *)this + 13) = v26 != 0;
        *((_DWORD *)this + 5) |= 0x20u;
        if ((unint64_t)v27 >= v7 || *v27 != 56)
          continue;
        v16 = v27 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_74:
        v33 = 0;
        if ((unint64_t)v16 >= v7 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v28 = v33;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v16;
          v29 = v16 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_BYTE *)this + 14) = v28 != 0;
        *((_DWORD *)this + 5) |= 0x40u;
        if ((unint64_t)v29 >= v7 || *v29 != 64)
          continue;
        v17 = v29 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_82:
        v33 = 0;
        if ((unint64_t)v17 >= v7 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v30 = v33;
          v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v30 = *v17;
          v31 = (unsigned __int8 *)(v17 + 1);
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_BYTE *)this + 15) = v30 != 0;
        *((_DWORD *)this + 5) |= 0x80u;
        if (v31 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_50;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_66;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_74;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_82;
      default:
        v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 15), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 14), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 20) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 15), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 5);
  if ((_BYTE)v1)
  {
    v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
      v2 += 2;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v2 += 2;
    if ((v1 & 0x10) != 0)
      v2 += 2;
    if ((v1 & 0x20) != 0)
      v2 += 2;
    if ((v1 & 0x40) != 0)
      v2 += 2;
    if ((v1 & 0x80) != 0)
      v3 = v2 + 2;
    else
      v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  int v10;
  int v11;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_BYTE *)(this + 12);
    *(_BYTE *)(this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v6;
    v7 = *(_BYTE *)(this + 13);
    *(_BYTE *)(this + 13) = *((_BYTE *)a2 + 13);
    *((_BYTE *)a2 + 13) = v7;
    v8 = *(_BYTE *)(this + 14);
    *(_BYTE *)(this + 14) = *((_BYTE *)a2 + 14);
    *((_BYTE *)a2 + 14) = v8;
    v9 = *(_BYTE *)(this + 15);
    *(_BYTE *)(this + 15) = *((_BYTE *)a2 + 15);
    *((_BYTE *)a2 + 15) = v9;
    v10 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v10;
    v11 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v11;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.FalseStepDetectorState");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry_DistanceSourceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 6;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_QWORD *)this + 11) = MEMORY[0x1E0DE8338];
  *((_WORD *)this + 48) = 0;
  *((_QWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::StepCountEntry(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  *(_QWORD *)this = &off_1E25BAAC0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = MEMORY[0x1E0DE8338];
  *((_WORD *)this + 48) = 0;
  *((_QWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(this, a2);
  return this;
}

void sub_18D1103F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *v3;
  int v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v9;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v10;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  const std::string *v20;
  std::string *v21;
  char v22;
  char v23;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *v24;
  const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *v33;
  const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *v34;
  _BYTE v35[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  v4 = *((_DWORD *)a2 + 37);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    *((_DWORD *)v3 + 37) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_33;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 37) |= 2u;
  v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 2);
  if (!v8)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)operator new();
    v8 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 2) = this;
  }
  v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v8, v9);
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_38;
  }
LABEL_33:
  *((_DWORD *)v3 + 37) |= 4u;
  v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 3);
  if (!v10)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)operator new();
    v10 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 3) = this;
  }
  v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                          + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_39;
  }
LABEL_38:
  v12 = *((_DWORD *)a2 + 10);
  *((_DWORD *)v3 + 37) |= 8u;
  *((_DWORD *)v3 + 10) = v12;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_40:
    v14 = *((_QWORD *)a2 + 6);
    *((_DWORD *)v3 + 37) |= 0x20u;
    *((_QWORD *)v3 + 6) = v14;
    v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_39:
  v13 = *((_QWORD *)a2 + 4);
  *((_DWORD *)v3 + 37) |= 0x10u;
  *((_QWORD *)v3 + 4) = v13;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x20) != 0)
    goto LABEL_40;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_41:
  v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)v3 + 37) |= 0x40u;
  *((_DWORD *)v3 + 11) = v15;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 18);
    *((_DWORD *)v3 + 37) |= 0x80u;
    *((_DWORD *)v3 + 18) = v5;
    v4 = *((_DWORD *)a2 + 37);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_57;
  if ((v4 & 0x100) != 0)
  {
    v16 = *((_QWORD *)a2 + 7);
    *((_DWORD *)v3 + 37) |= 0x100u;
    *((_QWORD *)v3 + 7) = v16;
    v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v17 = *((_QWORD *)a2 + 8);
  *((_DWORD *)v3 + 37) |= 0x200u;
  *((_QWORD *)v3 + 8) = v17;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_46;
  }
LABEL_45:
  v18 = *((_QWORD *)a2 + 10);
  *((_DWORD *)v3 + 37) |= 0x400u;
  *((_QWORD *)v3 + 10) = v18;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_47;
  }
LABEL_46:
  v19 = *((_DWORD *)a2 + 19);
  *((_DWORD *)v3 + 37) |= 0x800u;
  *((_DWORD *)v3 + 19) = v19;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_50;
  }
LABEL_47:
  v20 = (const std::string *)*((_QWORD *)a2 + 11);
  *((_DWORD *)v3 + 37) |= 0x1000u;
  v21 = (std::string *)*((_QWORD *)v3 + 11);
  if (v21 == (std::string *)MEMORY[0x1E0DE8338])
  {
    v21 = (std::string *)operator new();
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)v3 + 11) = v21;
  }
  this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)std::string::operator=(v21, v20);
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_51;
  }
LABEL_50:
  v22 = *((_BYTE *)a2 + 96);
  *((_DWORD *)v3 + 37) |= 0x2000u;
  *((_BYTE *)v3 + 96) = v22;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0)
      goto LABEL_57;
    goto LABEL_52;
  }
LABEL_51:
  v23 = *((_BYTE *)a2 + 97);
  *((_DWORD *)v3 + 37) |= 0x4000u;
  *((_BYTE *)v3 + 97) = v23;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x8000) == 0)
    goto LABEL_57;
LABEL_52:
  *((_DWORD *)v3 + 37) |= 0x8000u;
  v24 = (CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *)*((_QWORD *)v3 + 13);
  if (!v24)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)operator new();
    v24 = this;
    *(_QWORD *)this = &off_1E25BB420;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 13) = this;
  }
  v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *)*((_QWORD *)a2 + 13);
  if (!v25)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                                  + 104);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(v24, v25);
  v4 = *((_DWORD *)a2 + 37);
LABEL_57:
  if ((v4 & 0xFF0000) == 0)
    return;
  if ((v4 & 0x10000) != 0)
  {
    v26 = *((_DWORD *)a2 + 25);
    *((_DWORD *)v3 + 37) |= 0x10000u;
    *((_DWORD *)v3 + 25) = v26;
    v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 0x20000) == 0)
    {
LABEL_60:
      if ((v4 & 0x40000) == 0)
        goto LABEL_61;
      goto LABEL_69;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_60;
  }
  v27 = *((_DWORD *)a2 + 28);
  *((_DWORD *)v3 + 37) |= 0x20000u;
  *((_DWORD *)v3 + 28) = v27;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x40000) == 0)
  {
LABEL_61:
    if ((v4 & 0x80000) == 0)
      goto LABEL_62;
    goto LABEL_70;
  }
LABEL_69:
  v28 = *((_DWORD *)a2 + 29);
  *((_DWORD *)v3 + 37) |= 0x40000u;
  *((_DWORD *)v3 + 29) = v28;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x80000) == 0)
  {
LABEL_62:
    if ((v4 & 0x100000) == 0)
      goto LABEL_63;
    goto LABEL_71;
  }
LABEL_70:
  v29 = *((_DWORD *)a2 + 30);
  *((_DWORD *)v3 + 37) |= 0x80000u;
  *((_DWORD *)v3 + 30) = v29;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x100000) == 0)
  {
LABEL_63:
    if ((v4 & 0x200000) == 0)
      goto LABEL_64;
    goto LABEL_72;
  }
LABEL_71:
  v30 = *((_DWORD *)a2 + 31);
  *((_DWORD *)v3 + 37) |= 0x100000u;
  *((_DWORD *)v3 + 31) = v30;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x200000) == 0)
  {
LABEL_64:
    if ((v4 & 0x400000) == 0)
      goto LABEL_65;
    goto LABEL_73;
  }
LABEL_72:
  v31 = *((_DWORD *)a2 + 32);
  *((_DWORD *)v3 + 37) |= 0x200000u;
  *((_DWORD *)v3 + 32) = v31;
  v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x400000) == 0)
  {
LABEL_65:
    if ((v4 & 0x800000) == 0)
      return;
    goto LABEL_75;
  }
LABEL_73:
  v32 = *((_DWORD *)a2 + 33);
  if (v32 >= 6)
    __assert_rtn("set_distance_source", "CoreNavigationCLPPrivateDataShared.pb.h", 23136, "::CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry_DistanceSourceType_IsValid(value)");
  *((_DWORD *)v3 + 37) |= 0x400000u;
  *((_DWORD *)v3 + 33) = v32;
  if ((*((_DWORD *)a2 + 37) & 0x800000) != 0)
  {
LABEL_75:
    *((_DWORD *)v3 + 37) |= 0x800000u;
    v33 = (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)*((_QWORD *)v3 + 17);
    if (!v33)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)operator new();
      v33 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BC668;
      *((_QWORD *)v3 + 17) = this;
    }
    v34 = (const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)*((_QWORD *)a2 + 17);
    if (!v34)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v34 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                                         + 136);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(v33, v34);
  }
}

void sub_18D1109A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::~StepCountEntry(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  *(_QWORD *)this = &off_1E25BAAC0;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::~StepCountEntry(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = this;
  v2 = *((_QWORD *)this + 11);
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ != v1)
  {
    v4 = *((_QWORD *)v1 + 1);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)v1 + 2);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)v1 + 3);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)v1 + 13);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)v1 + 17);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 144) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::New(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BAAC0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = MEMORY[0x1E0DE8338];
  *(_WORD *)(v1 + 96) = 0;
  *(_QWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 100) = 0u;
  *(_OWORD *)(v1 + 116) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_DWORD *)(this + 148);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 148);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 148);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v1 = *(_DWORD *)(this + 148);
      }
    }
    *(_DWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 80) = 0;
    *(_DWORD *)(this + 76) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
    if ((v1 & 0x1000) != 0)
    {
      v5 = *(_QWORD *)(this + 88);
      if (v5 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    *(_WORD *)(this + 96) = 0;
    v1 = *(_DWORD *)(this + 148);
    if ((v1 & 0x8000) != 0)
    {
      v6 = *(_QWORD *)(this + 104);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_QWORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        v1 = *(_DWORD *)(this + 148);
      }
    }
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 100) = 0;
    *(_QWORD *)(this + 120) = 0;
    *(_QWORD *)(this + 128) = 0;
    *(_QWORD *)(this + 112) = 0;
    if ((v1 & 0x800000) != 0)
    {
      v7 = *(_QWORD *)(this + 136);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 20))
          *(_QWORD *)(v7 + 8) = 0;
        *(_DWORD *)(v7 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(this + 148) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  int v21;
  unint64_t v22;
  char *v23;
  unsigned __int8 *v24;
  int v25;
  unint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  char *v33;
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  BOOL v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  _BYTE *v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  _BYTE *v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t result;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  unsigned int v69;
  _BYTE *v70;
  _QWORD *v71;
  _BYTE *v72;
  unsigned int v73;
  _BYTE *v74;
  unsigned int v75;
  unsigned __int8 *v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned __int8 *v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  unsigned __int8 *v86;
  unsigned __int8 *v87;
  unsigned __int8 *v88;
  unsigned __int8 *v89;
  unsigned int v90;
  unsigned __int8 *v91;
  unsigned int *v92;
  unsigned int *v93;
  unsigned int *v94;
  unsigned int *v95;
  unsigned int v96[2];

  v4 = (unsigned int *)((char *)this + 40);
  v5 = (unsigned int *)((char *)this + 44);
  v6 = (unsigned int *)((char *)this + 72);
  v7 = (unsigned int *)((char *)this + 100);
  v94 = (unsigned int *)((char *)this + 116);
  v95 = (unsigned int *)((char *)this + 112);
  v92 = (unsigned int *)((char *)this + 124);
  v93 = (unsigned int *)((char *)this + 120);
  v8 = (unsigned int *)((char *)this + 128);
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_65;
        *((_DWORD *)this + 37) |= 1u;
        v12 = *((_QWORD *)this + 1);
        if (!v12)
        {
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E25BDBF8;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *((_QWORD *)this + 1) = v12;
        }
        v96[0] = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96))return 0;
        }
        else
        {
          v96[0] = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v41 = *((_DWORD *)a2 + 14);
        v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v12, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v43 = *((_DWORD *)a2 + 14);
        v39 = __OFSUB__(v43, 1);
        v44 = v43 - 1;
        if (v44 < 0 == v39)
          *((_DWORD *)a2 + 14) = v44;
        v45 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v45 + 1;
        goto LABEL_87;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_65;
LABEL_87:
        *((_DWORD *)this + 37) |= 2u;
        v46 = *((_QWORD *)this + 2);
        if (!v46)
        {
          v46 = operator new();
          *(_QWORD *)v46 = &off_1E25BDBF8;
          *(_OWORD *)(v46 + 8) = 0u;
          *(_OWORD *)(v46 + 24) = 0u;
          *((_QWORD *)this + 2) = v46;
        }
        v96[0] = 0;
        v47 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96))return 0;
        }
        else
        {
          v96[0] = *v47;
          *((_QWORD *)a2 + 1) = v47 + 1;
        }
        v48 = *((_DWORD *)a2 + 14);
        v49 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v48 + 1;
        if (v48 >= v49)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v46, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v50 = *((_DWORD *)a2 + 14);
        v39 = __OFSUB__(v50, 1);
        v51 = v50 - 1;
        if (v51 < 0 == v39)
          *((_DWORD *)a2 + 14) = v51;
        v52 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v52 + 1;
LABEL_101:
        *((_DWORD *)this + 37) |= 4u;
        v53 = *((_QWORD *)this + 3);
        if (!v53)
        {
          v53 = operator new();
          *(_QWORD *)v53 = &off_1E25BDBF8;
          *(_OWORD *)(v53 + 8) = 0u;
          *(_OWORD *)(v53 + 24) = 0u;
          *((_QWORD *)this + 3) = v53;
        }
        v96[0] = 0;
        v54 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v54 >= *((_QWORD *)a2 + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96))return 0;
        }
        else
        {
          v96[0] = *v54;
          *((_QWORD *)a2 + 1) = v54 + 1;
        }
        v55 = *((_DWORD *)a2 + 14);
        v56 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v55 + 1;
        if (v55 >= v56)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v53, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v57 = *((_DWORD *)a2 + 14);
        v39 = __OFSUB__(v57, 1);
        v58 = v57 - 1;
        if (v58 < 0 == v39)
          *((_DWORD *)a2 + 14) = v58;
        v59 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v59 >= v14 || *v59 != 32)
          continue;
        v15 = v59 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_115:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v60 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v15;
          v60 = v15 + 1;
          *((_QWORD *)a2 + 1) = v60;
        }
        *((_DWORD *)this + 37) |= 8u;
        if ((unint64_t)v60 >= v14 || *v60 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_123:
        *(_QWORD *)v96 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v96) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v96;
        *((_DWORD *)this + 37) |= 0x10u;
        v62 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v62 + 1;
LABEL_127:
        *(_QWORD *)v96 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v96) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v96;
        *((_DWORD *)this + 37) |= 0x20u;
        v63 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v63 >= v16 || *v63 != 56)
          continue;
        v17 = v63 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_131:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v64 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v17;
          v64 = v17 + 1;
          *((_QWORD *)a2 + 1) = v64;
        }
        *((_DWORD *)this + 37) |= 0x40u;
        if ((unint64_t)v64 >= v16 || *v64 != 64)
          continue;
        v18 = v64 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_139:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v65 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v18;
          v65 = v18 + 1;
          *((_QWORD *)a2 + 1) = v65;
        }
        *((_DWORD *)this + 37) |= 0x80u;
        if ((unint64_t)v65 >= v16 || *v65 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v65 + 1;
LABEL_147:
        *(_QWORD *)v96 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v96) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v96;
        *((_DWORD *)this + 37) |= 0x100u;
        v66 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v66 >= *((_QWORD *)a2 + 2) || *v66 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v66 + 1;
LABEL_151:
        *(_QWORD *)v96 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v96) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v96;
        *((_DWORD *)this + 37) |= 0x200u;
        v67 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 1;
LABEL_155:
        *(_QWORD *)v96 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v96) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v96;
        *((_DWORD *)this + 37) |= 0x400u;
        v68 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v68 >= v19 || *v68 != 96)
          continue;
        v20 = v68 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_159:
        v96[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96);
          if (!(_DWORD)result)
            return result;
          v69 = v96[0];
          v70 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v69 = *v20;
          v70 = v20 + 1;
          *((_QWORD *)a2 + 1) = v70;
        }
        *((_DWORD *)this + 19) = v69;
        v21 = *((_DWORD *)this + 37) | 0x800;
        *((_DWORD *)this + 37) = v21;
        if ((unint64_t)v70 >= v19 || *v70 != 106)
          continue;
        *((_QWORD *)a2 + 1) = v70 + 1;
LABEL_167:
        *((_DWORD *)this + 37) = v21 | 0x1000;
        if (*((_QWORD *)this + 11) == MEMORY[0x1E0DE8338])
        {
          v71 = (_QWORD *)operator new();
          v71[1] = 0;
          v71[2] = 0;
          *v71 = 0;
          *((_QWORD *)this + 11) = v71;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v72 = (_BYTE *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v72 >= v22 || *v72 != 112)
          continue;
        v23 = v72 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_173:
        v96[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96);
          if (!(_DWORD)result)
            return result;
          v73 = v96[0];
          v74 = (_BYTE *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v73 = *v23;
          v74 = v23 + 1;
          *((_QWORD *)a2 + 1) = v74;
        }
        *((_BYTE *)this + 96) = v73 != 0;
        *((_DWORD *)this + 37) |= 0x2000u;
        if ((unint64_t)v74 >= v22 || *v74 != 120)
          continue;
        v24 = v74 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_181:
        v96[0] = 0;
        if ((unint64_t)v24 >= v22 || (char)*v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96);
          if (!(_DWORD)result)
            return result;
          v75 = v96[0];
          v76 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v75 = *v24;
          v76 = v24 + 1;
          *((_QWORD *)a2 + 1) = v76;
        }
        *((_BYTE *)this + 97) = v75 != 0;
        v25 = *((_DWORD *)this + 37) | 0x4000;
        *((_DWORD *)this + 37) = v25;
        if ((int)v22 - (int)v76 < 2 || *v76 != 130 || v76[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v76 + 2;
LABEL_190:
        *((_DWORD *)this + 37) = v25 | 0x8000;
        v77 = *((_QWORD *)this + 13);
        if (!v77)
        {
          v77 = operator new();
          *(_QWORD *)v77 = &off_1E25BB420;
          *(_OWORD *)(v77 + 8) = 0u;
          *(_OWORD *)(v77 + 24) = 0u;
          *((_QWORD *)this + 13) = v77;
        }
        v96[0] = 0;
        v78 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v78 >= *((_QWORD *)a2 + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96))return 0;
        }
        else
        {
          v96[0] = *v78;
          *((_QWORD *)a2 + 1) = v78 + 1;
        }
        v79 = *((_DWORD *)a2 + 14);
        v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *)v77, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v81 = *((_DWORD *)a2 + 14);
        v39 = __OFSUB__(v81, 1);
        v82 = v81 - 1;
        if (v82 < 0 == v39)
          *((_DWORD *)a2 + 14) = v82;
        v83 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        if ((int)v26 - (int)v83 <= 1 || *v83 != 136 || v83[1] != 1)
          continue;
        v27 = v83 + 2;
        *((_QWORD *)a2 + 1) = v27;
LABEL_205:
        if ((unint64_t)v27 >= v26 || (char)*v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v84 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v27;
          v84 = v27 + 1;
          *((_QWORD *)a2 + 1) = v84;
        }
        *((_DWORD *)this + 37) |= 0x10000u;
        if ((int)v26 - (int)v84 < 2 || *v84 != 144 || v84[1] != 1)
          continue;
        v28 = v84 + 2;
        *((_QWORD *)a2 + 1) = v28;
LABEL_214:
        if ((unint64_t)v28 >= v26 || (char)*v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!(_DWORD)result)
            return result;
          v85 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v95 = *v28;
          v85 = v28 + 1;
          *((_QWORD *)a2 + 1) = v85;
        }
        *((_DWORD *)this + 37) |= 0x20000u;
        if ((int)v26 - (int)v85 < 2 || *v85 != 152 || v85[1] != 1)
          continue;
        v29 = v85 + 2;
        *((_QWORD *)a2 + 1) = v29;
LABEL_223:
        if ((unint64_t)v29 >= v26 || (char)*v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v94);
          if (!(_DWORD)result)
            return result;
          v86 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v94 = *v29;
          v86 = v29 + 1;
          *((_QWORD *)a2 + 1) = v86;
        }
        *((_DWORD *)this + 37) |= 0x40000u;
        if ((int)v26 - (int)v86 < 2 || *v86 != 160 || v86[1] != 1)
          continue;
        v30 = v86 + 2;
        *((_QWORD *)a2 + 1) = v30;
LABEL_232:
        if ((unint64_t)v30 >= v26 || (char)*v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v93);
          if (!(_DWORD)result)
            return result;
          v87 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v93 = *v30;
          v87 = v30 + 1;
          *((_QWORD *)a2 + 1) = v87;
        }
        *((_DWORD *)this + 37) |= 0x80000u;
        if ((int)v26 - (int)v87 < 2 || *v87 != 168 || v87[1] != 1)
          continue;
        v31 = v87 + 2;
        *((_QWORD *)a2 + 1) = v31;
LABEL_241:
        if ((unint64_t)v31 >= v26 || (char)*v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v92);
          if (!(_DWORD)result)
            return result;
          v88 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v92 = *v31;
          v88 = v31 + 1;
          *((_QWORD *)a2 + 1) = v88;
        }
        *((_DWORD *)this + 37) |= 0x100000u;
        if ((int)v26 - (int)v88 < 2 || *v88 != 176 || v88[1] != 1)
          continue;
        v32 = v88 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_250:
        if ((unint64_t)v32 >= v26 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v89 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v26 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v32;
          v89 = v32 + 1;
          *((_QWORD *)a2 + 1) = v89;
        }
        *((_DWORD *)this + 37) |= 0x200000u;
        if ((int)v26 - (int)v89 < 2 || *v89 != 184 || v89[1] != 1)
          continue;
        v33 = (char *)(v89 + 2);
        *((_QWORD *)a2 + 1) = v33;
LABEL_259:
        v96[0] = 0;
        if ((unint64_t)v33 >= v26 || *v33 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96);
          if (!(_DWORD)result)
            return result;
          v90 = v96[0];
        }
        else
        {
          v90 = *v33;
          *((_QWORD *)a2 + 1) = v33 + 1;
        }
        if (v90 <= 5)
        {
          *((_DWORD *)this + 37) |= 0x400000u;
          *((_DWORD *)this + 33) = v90;
        }
        v91 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v91 < 2 || *v91 != 194 || v91[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v91 + 2;
LABEL_60:
        *((_DWORD *)this + 37) |= 0x800000u;
        v34 = (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)*((_QWORD *)this + 17);
        if (!v34)
        {
          v34 = (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)operator new();
          *((_QWORD *)v34 + 1) = 0;
          *((_QWORD *)v34 + 2) = 0;
          *(_QWORD *)v34 = &off_1E25BC668;
          *((_QWORD *)this + 17) = v34;
        }
        v96[0] = 0;
        v35 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v96))return 0;
        }
        else
        {
          v96[0] = *v35;
          *((_QWORD *)a2 + 1) = v35 + 1;
        }
        v36 = *((_DWORD *)a2 + 14);
        v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 < v37)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergePartialFromCodedStream(v34, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v38 = *((_DWORD *)a2 + 14);
              v39 = __OFSUB__(v38, 1);
              v40 = v38 - 1;
              if (v40 < 0 == v39)
                *((_DWORD *)a2 + 14) = v40;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_101;
        goto LABEL_65;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_115;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_123;
        goto LABEL_65;
      case 6u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_127;
        goto LABEL_65;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_131;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_139;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_147;
        goto LABEL_65;
      case 0xAu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_151;
        goto LABEL_65;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_155;
        goto LABEL_65;
      case 0xCu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_159;
      case 0xDu:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_65;
        v21 = *((_DWORD *)this + 37);
        goto LABEL_167;
      case 0xEu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_173;
      case 0xFu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_181;
      case 0x10u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_65;
        v25 = *((_DWORD *)this + 37);
        goto LABEL_190;
      case 0x11u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_205;
      case 0x12u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v28 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_214;
      case 0x13u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v29 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_223;
      case 0x14u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_232;
      case 0x15u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v31 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_241;
      case 0x16u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_250;
      case 0x17u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_65;
        v33 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_259;
      case 0x18u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_60;
        goto LABEL_65;
      default:
        v11 = TagFallback & 7;
LABEL_65:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 148);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 148);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_35;
  }
LABEL_32:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 96), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 97), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_50;
  }
LABEL_47:
  v10 = *(_QWORD *)(v5 + 104);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 124), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
LABEL_56:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 132), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 148) & 0x800000) == 0)
      return this;
    goto LABEL_57;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x400000) != 0)
    goto LABEL_56;
LABEL_24:
  if ((v6 & 0x800000) == 0)
    return this;
LABEL_57:
  v11 = *(_QWORD *)(v5 + 136);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 136);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v11, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  unsigned int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  unsigned int v18;
  unsigned int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  uint64_t v21;
  int v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *v45;

  v1 = this;
  v2 = *(_DWORD *)(this + 148);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_55;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *(_DWORD *)(v1 + 148);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *(_QWORD *)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 16);
    }
    v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0)
        v10 += 9;
      if ((v9 & 4) != 0)
        v9 = v10 + 9;
      else
        v9 = v10;
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 += v9 + 2;
    v2 = *(_DWORD *)(v1 + 148);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v11 = *(_QWORD *)(v1 + 24);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 24);
    }
    v12 = *(unsigned __int8 *)(v11 + 36);
    if (*(_BYTE *)(v11 + 36))
    {
      v13 = (v12 << 31 >> 31) & 9;
      if ((v12 & 2) != 0)
        v13 += 9;
      if ((v12 & 4) != 0)
        v12 = v13 + 9;
      else
        v12 = v13;
    }
    *(_DWORD *)(v11 + 32) = v12;
    v3 += v12 + 2;
    v2 = *(_DWORD *)(v1 + 148);
    if ((v2 & 8) == 0)
      goto LABEL_40;
    goto LABEL_36;
  }
  if ((v2 & 8) != 0)
  {
LABEL_36:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 40);
    if (v14 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_40:
  v15 = v3 + 9;
  if ((v2 & 0x10) == 0)
    v15 = v3;
  if ((v2 & 0x20) != 0)
    v4 = v15 + 9;
  else
    v4 = v15;
  if ((v2 & 0x40) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 44);
    if (v16 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      this = 1;
    }
    v4 = (v4 + this + 1);
  }
  if ((v2 & 0x80) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 72);
    if (v17 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      this = 1;
    }
    v4 = (v4 + this + 1);
  }
LABEL_55:
  if ((v2 & 0xFF00) != 0)
  {
    v18 = v4 + 9;
    if ((v2 & 0x100) == 0)
      v18 = v4;
    if ((v2 & 0x200) != 0)
      v18 += 9;
    if ((v2 & 0x400) != 0)
      v19 = v18 + 9;
    else
      v19 = v18;
    if ((v2 & 0x800) != 0)
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 76);
      if ((v20 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v20 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
        v2 = *(_DWORD *)(v1 + 148);
      }
      else
      {
        this = 1;
      }
      v19 += this + 1;
    }
    if ((v2 & 0x1000) != 0)
    {
      v21 = *(_QWORD *)(v1 + 88);
      v22 = *(unsigned __int8 *)(v21 + 23);
      v23 = v22;
      v24 = *(_QWORD *)(v21 + 8);
      if ((v22 & 0x80u) == 0)
        v25 = *(unsigned __int8 *)(v21 + 23);
      else
        v25 = v24;
      if (v25 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25);
        v22 = *(unsigned __int8 *)(v21 + 23);
        v24 = *(_QWORD *)(v21 + 8);
        v2 = *(_DWORD *)(v1 + 148);
        v23 = *(_BYTE *)(v21 + 23);
      }
      else
      {
        this = 1;
      }
      if (v23 < 0)
        v22 = v24;
      v19 += this + v22 + 1;
    }
    v26 = v19 + 2;
    if ((v2 & 0x2000) == 0)
      v26 = v19;
    if ((v2 & 0x4000) != 0)
      v4 = v26 + 2;
    else
      v4 = v26;
    if ((v2 & 0x8000) != 0)
    {
      v27 = *(_QWORD *)(v1 + 104);
      if (!v27)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v27 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 104);
      }
      v28 = *(unsigned __int8 *)(v27 + 36);
      v29 = (v28 << 31 >> 31) & 9;
      if ((v28 & 2) != 0)
        v29 += 9;
      if ((v28 & 4) != 0)
        v29 += 9;
      if (*(_BYTE *)(v27 + 36))
        v30 = v29;
      else
        v30 = 0;
      *(_DWORD *)(v27 + 32) = v30;
      v4 = (v4 + v30 + 3);
      v2 = *(_DWORD *)(v1 + 148);
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 100);
      if (v31 >= 0x80)
      {
        v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
        v2 = *(_DWORD *)(v1 + 148);
      }
      else
      {
        v32 = 1;
      }
      v4 = (v4 + v32 + 2);
      if ((v2 & 0x20000) == 0)
      {
LABEL_99:
        if ((v2 & 0x40000) == 0)
          goto LABEL_100;
        goto LABEL_114;
      }
    }
    else if ((v2 & 0x20000) == 0)
    {
      goto LABEL_99;
    }
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 112);
    if (v33 >= 0x80)
    {
      v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33) + 2;
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      v34 = 3;
    }
    v4 = (v34 + v4);
    if ((v2 & 0x40000) == 0)
    {
LABEL_100:
      if ((v2 & 0x80000) == 0)
        goto LABEL_101;
      goto LABEL_118;
    }
LABEL_114:
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 116);
    if (v35 >= 0x80)
    {
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35) + 2;
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      v36 = 3;
    }
    v4 = (v36 + v4);
    if ((v2 & 0x80000) == 0)
    {
LABEL_101:
      if ((v2 & 0x100000) == 0)
        goto LABEL_102;
      goto LABEL_122;
    }
LABEL_118:
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 120);
    if (v37 >= 0x80)
    {
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37) + 2;
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      v38 = 3;
    }
    v4 = (v38 + v4);
    if ((v2 & 0x100000) == 0)
    {
LABEL_102:
      if ((v2 & 0x200000) == 0)
        goto LABEL_103;
      goto LABEL_126;
    }
LABEL_122:
    v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 124);
    if (v39 >= 0x80)
    {
      v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39) + 2;
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      v40 = 3;
    }
    v4 = (v40 + v4);
    if ((v2 & 0x200000) == 0)
    {
LABEL_103:
      if ((v2 & 0x400000) == 0)
        goto LABEL_104;
      goto LABEL_130;
    }
LABEL_126:
    v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 128);
    if (v41 >= 0x80)
    {
      v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41) + 2;
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      v42 = 3;
    }
    v4 = (v42 + v4);
    if ((v2 & 0x400000) == 0)
    {
LABEL_104:
      if ((v2 & 0x800000) == 0)
        goto LABEL_139;
LABEL_136:
      v45 = *(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState **)(v1 + 136);
      if (!v45)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v45 = *(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                                     + 136);
      }
      v4 = v4
         + CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::ByteSize(v45)
         + 3;
      goto LABEL_139;
    }
LABEL_130:
    v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 132);
    if ((v43 & 0x80000000) != 0)
    {
      v44 = 12;
    }
    else if (v43 >= 0x80)
    {
      v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43) + 2;
      v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      v44 = 3;
    }
    v4 = (v44 + v4);
    if ((v2 & 0x800000) == 0)
      goto LABEL_139;
    goto LABEL_136;
  }
LABEL_139:
  *(_DWORD *)(v1 + 144) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::Swap(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v6;
    LODWORD(v4) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v4;
    v7 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v7;
    v8 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v8;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v4) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v4;
    v10 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v10;
    LOBYTE(v10) = *((_BYTE *)this + 96);
    *((_BYTE *)this + 96) = *((_BYTE *)a2 + 96);
    *((_BYTE *)a2 + 96) = v10;
    LOBYTE(v10) = *((_BYTE *)this + 97);
    *((_BYTE *)this + 97) = *((_BYTE *)a2 + 97);
    *((_BYTE *)a2 + 97) = v10;
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v11;
    LODWORD(v11) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v11;
    LODWORD(v11) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v11;
    LODWORD(v11) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v11;
    LODWORD(v11) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v11;
    LODWORD(v11) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v11;
    LODWORD(v11) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v11;
    LODWORD(v11) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v11;
    v12 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v12;
    LODWORD(v12) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v12;
    LODWORD(v12) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v12;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.StepCountEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::StepCount *CoreNavigation::CLP::LogEntry::PrivateData::StepCount::StepCount(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  *(_QWORD *)this = &off_1E25BDB08;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(this, a2);
  return this;
}

void sub_18D112668(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 2u;
    *((_DWORD *)v3 + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
LABEL_14:
    *((_DWORD *)v3 + 8) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BAAC0;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 56) = 0u;
      *(_OWORD *)((char *)this + 72) = 0u;
      *((_QWORD *)this + 11) = MEMORY[0x1E0DE8338];
      *((_WORD *)this + 48) = 0;
      *((_QWORD *)this + 18) = 0;
      *(_OWORD *)((char *)this + 100) = 0u;
      *(_OWORD *)((char *)this + 116) = 0u;
      *((_OWORD *)this + 8) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_
                                                                                + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(v8, v9);
  }
}

void sub_18D112830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::~StepCount(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  *(_QWORD *)this = &off_1E25BDB08;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::~StepCount(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::New(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BDB08;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if (v8 != 2)
            goto LABEL_21;
          *((_DWORD *)this + 8) |= 1u;
          v10 = *((_QWORD *)this + 1);
          if (!v10)
          {
            v10 = operator new();
            *(_QWORD *)v10 = &off_1E25BDBF8;
            *(_OWORD *)(v10 + 8) = 0u;
            *(_OWORD *)(v10 + 24) = 0u;
            *((_QWORD *)this + 1) = v10;
          }
          v30 = 0;
          v11 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
          }
          else
          {
            v30 = *v11;
            *((_QWORD *)a2 + 1) = v11 + 1;
          }
          v14 = *((_DWORD *)a2 + 14);
          v15 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v14 + 1;
          if (v14 >= v15)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v10, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v16 = *((_DWORD *)a2 + 14);
          v17 = __OFSUB__(v16, 1);
          v18 = v16 - 1;
          if (v18 < 0 == v17)
            *((_DWORD *)a2 + 14) = v18;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v19 < v12 && *v19 == 16)
          {
            v13 = v19 + 1;
            *((_QWORD *)a2 + 1) = v13;
            goto LABEL_33;
          }
        }
        if (v7 == 2)
          break;
        if (v7 == 3)
        {
          v8 = TagFallback & 7;
          if (v8 == 2)
          {
            v9 = *((_DWORD *)this + 8);
            goto LABEL_41;
          }
        }
        else
        {
          v8 = TagFallback & 7;
        }
LABEL_21:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_21;
      v13 = (char *)*((_QWORD *)a2 + 1);
      v12 = *((_QWORD *)a2 + 2);
LABEL_33:
      v29 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
        if (!(_DWORD)result)
          return result;
        v20 = v29;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v20 = *v13;
        v21 = v13 + 1;
        *((_QWORD *)a2 + 1) = v21;
      }
      *((_DWORD *)this + 6) = v20;
      v9 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v9;
    }
    while ((unint64_t)v21 >= v12 || *v21 != 26);
    *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_41:
    *((_DWORD *)this + 8) = v9 | 4;
    v23 = *((_QWORD *)this + 2);
    if (!v23)
    {
      v23 = operator new();
      *(_QWORD *)v23 = &off_1E25BAAC0;
      *(_OWORD *)(v23 + 8) = 0u;
      *(_OWORD *)(v23 + 24) = 0u;
      *(_OWORD *)(v23 + 40) = 0u;
      *(_OWORD *)(v23 + 56) = 0u;
      *(_OWORD *)(v23 + 72) = 0u;
      *(_QWORD *)(v23 + 88) = v4;
      *(_WORD *)(v23 + 96) = 0;
      *(_QWORD *)(v23 + 144) = 0;
      *(_OWORD *)(v23 + 100) = 0u;
      *(_OWORD *)(v23 + 116) = 0u;
      *(_OWORD *)(v23 + 128) = 0u;
      *((_QWORD *)this + 2) = v23;
    }
    v31 = 0;
    v24 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))
        return 0;
    }
    else
    {
      v31 = *v24;
      *((_QWORD *)a2 + 1) = v24 + 1;
    }
    v25 = *((_DWORD *)a2 + 14);
    v26 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v25 + 1;
    if (v25 >= v26)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)v23, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v27 = *((_DWORD *)a2 + 14);
    v17 = __OFSUB__(v27, 1);
    v28 = v27 - 1;
    if (v28 < 0 == v17)
      *((_DWORD *)a2 + 14) = v28;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v8 = 2;
  }
  v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v9 = *((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::StepCount::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.StepCount");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MotionTypeVector3(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BB7E0;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(this, a2);
  return this;
}

void sub_18D113090(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  float result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      result = *((float *)a2 + 2);
      *((_DWORD *)this + 6) |= 1u;
      *((float *)this + 2) = result;
      v5 = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((float *)this + 3) = result;
    if ((*((_DWORD *)a2 + 6) & 4) == 0)
      return result;
LABEL_7:
    result = *((float *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((float *)this + 4) = result;
  }
  return result;
}

void sub_18D113174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::~MotionTypeVector3(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  *(_QWORD *)this = &off_1E25BB7E0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::~MotionTypeVector3(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BB7E0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_27;
        v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v13) & 1) == 0)
          return 0;
        *((_DWORD *)this + 2) = v13;
        *((_DWORD *)this + 6) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 21)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0)
            return 0;
          *((_DWORD *)this + 3) = v12;
          *((_DWORD *)this + 6) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 29)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 5)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_DWORD *)this + 4) = v11;
    *((_DWORD *)this + 6) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 24);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v4 + 16), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v4 + 12), a3);
  if ((*(_DWORD *)(v4 + 24) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 24);
  if (*((_BYTE *)this + 24))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0)
      v2 += 5;
    if ((v1 & 4) != 0)
      v1 = v2 + 5;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  int v2;
  int v3;
  float result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    result = *((float *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((float *)a2 + 4) = result;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    v6 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeVector3");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MotionTypeDoubleVector4(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  *(_QWORD *)this = &off_1E25BC848;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(this, a2);
  return this;
}

void sub_18D11366C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0)
      return result;
LABEL_8:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18D113770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::~MotionTypeDoubleVector4(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  *(_QWORD *)this = &off_1E25BC848;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::~MotionTypeDoubleVector4(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC848;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 11) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
LABEL_14:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v11;
        *((_DWORD *)this + 11) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v11;
        *((_DWORD *)this + 11) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 4) = v11;
        *((_DWORD *)this + 11) |= 8u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_29;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_29;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 44);
  if (*((_BYTE *)this + 44))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 10) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *))(*(_QWORD *)this
                                                                                                  + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    v6 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeDoubleVector4");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0xFFFFFFFF00000000;
  *(_BYTE *)(this + 40) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 52) = 0;
  *(_QWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MotionTypeCompass(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  *(_QWORD *)this = &off_1E25BB768;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0xFFFFFFFF00000000;
  *((_BYTE *)this + 40) = 0;
  *((_QWORD *)this + 8) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *((_DWORD *)this + 15) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(this, a2);
  return this;
}

void sub_18D113D4C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *v3;
  double result;
  int v5;
  char v6;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v10;
  int v11;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *v13;
  _BYTE v14[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  v5 = *((_DWORD *)a2 + 17);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      *((_DWORD *)v3 + 17) |= 1u;
      v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)v3 + 1);
      if (!v7)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)operator new();
        v7 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BB7E0;
        *((_DWORD *)this + 6) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)a2 + 1);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                     + 8);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v7, v8);
      v5 = *((_DWORD *)a2 + 17);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_29;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 17) |= 2u;
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)v3 + 2);
    if (!v9)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)operator new();
      v9 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BB7E0;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                    + 16);
    }
    *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v9, v10);
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_30;
    }
LABEL_29:
    LODWORD(result) = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 17) |= 4u;
    *((_DWORD *)v3 + 6) = LODWORD(result);
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_31;
    }
LABEL_30:
    LODWORD(result) = *((_DWORD *)a2 + 7);
    *((_DWORD *)v3 + 17) |= 8u;
    *((_DWORD *)v3 + 7) = LODWORD(result);
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(result) = *((_DWORD *)a2 + 8);
    *((_DWORD *)v3 + 17) |= 0x10u;
    *((_DWORD *)v3 + 8) = LODWORD(result);
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_12;
      goto LABEL_11;
    }
LABEL_32:
    v11 = *((_DWORD *)a2 + 9);
    if ((v11 + 1) >= 8)
      __assert_rtn("set_calibration_level", "CoreNavigationCLPPrivateDataShared.pb.h", 23627, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompassCalibrationLevel_IsValid(value)");
    *((_DWORD *)v3 + 17) |= 0x20u;
    *((_DWORD *)v3 + 9) = v11;
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x40) == 0)
      goto LABEL_12;
LABEL_11:
    v6 = *((_BYTE *)a2 + 40);
    *((_DWORD *)v3 + 17) |= 0x40u;
    *((_BYTE *)v3 + 40) = v6;
    v5 = *((_DWORD *)a2 + 17);
LABEL_12:
    if ((v5 & 0x80) != 0)
    {
      LODWORD(result) = *((_DWORD *)a2 + 11);
      *((_DWORD *)v3 + 17) |= 0x80u;
      *((_DWORD *)v3 + 11) = LODWORD(result);
      v5 = *((_DWORD *)a2 + 17);
    }
  }
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0)
      goto LABEL_17;
LABEL_36:
    LODWORD(result) = *((_DWORD *)a2 + 13);
    *((_DWORD *)v3 + 17) |= 0x200u;
    *((_DWORD *)v3 + 13) = LODWORD(result);
    if ((*((_DWORD *)a2 + 17) & 0x400) == 0)
      return result;
    goto LABEL_37;
  }
  LODWORD(result) = *((_DWORD *)a2 + 12);
  *((_DWORD *)v3 + 17) |= 0x100u;
  *((_DWORD *)v3 + 12) = LODWORD(result);
  v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 0x200) != 0)
    goto LABEL_36;
LABEL_17:
  if ((v5 & 0x400) == 0)
    return result;
LABEL_37:
  *((_DWORD *)v3 + 17) |= 0x400u;
  v12 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((_QWORD *)v3 + 7);
  if (!v12)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)operator new();
    v12 = this;
    *(_QWORD *)this = &off_1E25BC848;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)this + 5) = 0;
    *((_QWORD *)v3 + 7) = this;
  }
  v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((_QWORD *)a2 + 7);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                        + 56);
  }
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(v12, v13);
}

void sub_18D114070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::~MotionTypeCompass(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  *(_QWORD *)this = &off_1E25BB768;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::~MotionTypeCompass(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 7);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BB768;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0xFFFFFFFF00000000;
  *(_BYTE *)(result + 40) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 52) = 0;
  *(_QWORD *)(result + 44) = 0;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(this + 68);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v1 = *(_DWORD *)(this + 68);
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0xFFFFFFFF00000000;
    *(_BYTE *)(this + 40) = 0;
    *(_DWORD *)(this + 44) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    if ((v1 & 0x400) != 0)
    {
      v4 = *(_QWORD *)(this + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        *(_DWORD *)(v4 + 44) = 0;
      }
    }
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  unsigned int v30;
  uint64_t result;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_34;
        *((_DWORD *)this + 17) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)v7 = &off_1E25BB7E0;
          *(_DWORD *)(v7 + 24) = 0;
          *((_QWORD *)this + 1) = v7;
        }
        v44 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
        }
        else
        {
          v44 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
        goto LABEL_46;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_34;
LABEL_46:
        *((_DWORD *)this + 17) |= 2u;
        v20 = *((_QWORD *)this + 2);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)(v20 + 8) = 0;
          *(_QWORD *)(v20 + 16) = 0;
          *(_QWORD *)v20 = &off_1E25BB7E0;
          *(_DWORD *)(v20 + 24) = 0;
          *((_QWORD *)this + 2) = v20;
        }
        v44 = 0;
        v21 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
        }
        else
        {
          v44 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v17)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_60:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v44;
        *((_DWORD *)this + 17) |= 4u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_64:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0)
          return 0;
        *((_DWORD *)this + 7) = v44;
        *((_DWORD *)this + 17) |= 8u;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_68:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0)
          return 0;
        *((_DWORD *)this + 8) = v44;
        *((_DWORD *)this + 17) |= 0x10u;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v9 || *v29 != 48)
          continue;
        v10 = v29 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_72:
        v44 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v30 = v44;
        }
        else
        {
          v30 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v30 + 1 <= 7)
        {
          *((_DWORD *)this + 17) |= 0x20u;
          *((_DWORD *)this + 9) = v30;
        }
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v32 >= v11 || *v32 != 56)
          continue;
        v12 = v32 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_82:
        v44 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!(_DWORD)result)
            return result;
          v33 = v44;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v33 = *v12;
          v34 = v12 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_BYTE *)this + 40) = v33 != 0;
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v34 >= v11 || *v34 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_90:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0)
          return 0;
        *((_DWORD *)this + 11) = v44;
        *((_DWORD *)this + 17) |= 0x80u;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 77)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_94:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0)
          return 0;
        *((_DWORD *)this + 12) = v44;
        *((_DWORD *)this + 17) |= 0x100u;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 85)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_98:
        v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0)
          return 0;
        *((_DWORD *)this + 13) = v44;
        v13 = *((_DWORD *)this + 17) | 0x200;
        *((_DWORD *)this + 17) = v13;
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_102:
        *((_DWORD *)this + 17) = v13 | 0x400;
        v38 = *((_QWORD *)this + 7);
        if (!v38)
        {
          v38 = operator new();
          *(_QWORD *)v38 = &off_1E25BC848;
          *(_OWORD *)(v38 + 8) = 0u;
          *(_OWORD *)(v38 + 24) = 0u;
          *(_QWORD *)(v38 + 40) = 0;
          *((_QWORD *)this + 7) = v38;
        }
        v44 = 0;
        v39 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0;
        }
        else
        {
          v44 = *v39;
          *((_QWORD *)a2 + 1) = v39 + 1;
        }
        v40 = *((_DWORD *)a2 + 14);
        v41 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v40 + 1;
        if (v40 < v41)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)v38, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v42 = *((_DWORD *)a2 + 14);
              v17 = __OFSUB__(v42, 1);
              v43 = v42 - 1;
              if (v43 < 0 == v17)
                *((_DWORD *)a2 + 14) = v43;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_60;
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_64;
        goto LABEL_34;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_68;
        goto LABEL_34;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_72;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_82;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_90;
        goto LABEL_34;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_94;
        goto LABEL_34;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_98;
        goto LABEL_34;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_34;
        v13 = *((_DWORD *)this + 17);
        goto LABEL_102;
      default:
        v6 = TagFallback & 7;
LABEL_34:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 44), a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 52), a3);
    if ((*(_DWORD *)(v5 + 68) & 0x400) == 0)
      return this;
    goto LABEL_27;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x200) != 0)
    goto LABEL_26;
LABEL_11:
  if ((v6 & 0x400) == 0)
    return this;
LABEL_27:
  v9 = *(_QWORD *)(v5 + 56);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 56);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v9, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *v17;

  v2 = *((_DWORD *)this + 17);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_43;
  }
  if ((v2 & 1) != 0)
  {
    v5 = *((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 8);
    }
    v6 = *(unsigned __int8 *)(v5 + 24);
    if (*(_BYTE *)(v5 + 24))
    {
      v7 = (v6 << 31 >> 31) & 5;
      if ((v6 & 2) != 0)
        v7 += 5;
      if ((v6 & 4) != 0)
        v6 = v7 + 5;
      else
        v6 = v7;
    }
    *(_DWORD *)(v5 + 20) = v6;
    v3 = v6 + 2;
    v2 = *((_DWORD *)this + 17);
    if ((v2 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 16);
    }
    v9 = *(unsigned __int8 *)(v8 + 24);
    if (*(_BYTE *)(v8 + 24))
    {
      v10 = (v9 << 31 >> 31) & 5;
      if ((v9 & 2) != 0)
        v10 += 5;
      if ((v9 & 4) != 0)
        v9 = v10 + 5;
      else
        v9 = v10;
    }
    *(_DWORD *)(v8 + 20) = v9;
    v3 += v9 + 2;
    v2 = *((_DWORD *)this + 17);
  }
LABEL_24:
  v11 = v3 + 5;
  if ((v2 & 4) == 0)
    v11 = v3;
  if ((v2 & 8) != 0)
    v11 += 5;
  if ((v2 & 0x10) != 0)
    v12 = v11 + 5;
  else
    v12 = v11;
  if ((v2 & 0x20) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      v2 = *((_DWORD *)this + 17);
    }
    else
    {
      v14 = 2;
    }
    v12 += v14;
  }
  v15 = v12 + 2;
  if ((v2 & 0x40) == 0)
    v15 = v12;
  if ((v2 & 0x80) != 0)
    v4 = v15 + 5;
  else
    v4 = v15;
LABEL_43:
  if ((v2 & 0xFF00) != 0)
  {
    v16 = v4 + 5;
    if ((v2 & 0x100) == 0)
      v16 = v4;
    if ((v2 & 0x200) != 0)
      v4 = v16 + 5;
    else
      v4 = v16;
    if ((v2 & 0x400) != 0)
    {
      v17 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((_QWORD *)this + 7);
      if (!v17)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                      + 56);
      }
      v4 = v4
         + CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::ByteSize(v17)
         + 2;
    }
  }
  *((_DWORD *)this + 16) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  float result;
  uint64_t v10;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 40);
    *((_BYTE *)this + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v3;
    v7 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
    v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
    result = *((float *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((float *)a2 + 13) = result;
    v10 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v10;
    LODWORD(v10) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v10;
    LODWORD(v10) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v10;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeCompass");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CompassTypeSample(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25BB588;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(this, a2);
  return this;
}

void sub_18D114ED0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *v3;
  double v4;
  int v5;
  char v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *v10;
  _BYTE v12[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    *((_DWORD *)v3 + 10) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                                                           + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((*((_BYTE *)a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 10) |= 2u;
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((_QWORD *)v3 + 2);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *)operator new();
    v9 = this;
    *(_QWORD *)this = &off_1E25BB768;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)this + 4) = 0xFFFFFFFF00000000;
    *((_BYTE *)this + 40) = 0;
    *((_QWORD *)this + 8) = 0;
    *(_QWORD *)((char *)this + 52) = 0;
    *(_QWORD *)((char *)this + 44) = 0;
    *((_DWORD *)this + 15) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((_QWORD *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass **)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                                                                  + 16);
  }
  v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(v9, v10);
  v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
LABEL_22:
    LODWORD(v4) = *((_DWORD *)a2 + 7);
    *((_DWORD *)v3 + 10) |= 8u;
    *((_DWORD *)v3 + 7) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 10) & 0x10) != 0)
      goto LABEL_9;
    return *(float *)&v4;
  }
LABEL_21:
  LODWORD(v4) = *((_DWORD *)a2 + 6);
  *((_DWORD *)v3 + 10) |= 4u;
  *((_DWORD *)v3 + 6) = LODWORD(v4);
  v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 8) != 0)
    goto LABEL_22;
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    v6 = *((_BYTE *)a2 + 32);
    *((_DWORD *)v3 + 10) |= 0x10u;
    *((_BYTE *)v3 + 32) = v6;
  }
  return *(float *)&v4;
}

void sub_18D1150C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::~CompassTypeSample(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  *(_QWORD *)this = &off_1E25BB588;
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::~CompassTypeSample(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *)CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::New(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BB588;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 40);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 40) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 40);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::Clear(this);
    }
    *(_BYTE *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 24) = 0;
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  unsigned int v26;
  unsigned __int8 *v27;
  uint64_t result;
  unsigned int v29;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_21;
        *((_DWORD *)this + 10) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v29 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
        goto LABEL_34;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_21;
LABEL_34:
        *((_DWORD *)this + 10) |= 2u;
        v17 = *((_QWORD *)this + 2);
        if (!v17)
        {
          v17 = operator new();
          *(_QWORD *)v17 = &off_1E25BB768;
          *(_QWORD *)(v17 + 8) = 0;
          *(_QWORD *)(v17 + 16) = 0;
          *(_QWORD *)(v17 + 24) = 0;
          *(_QWORD *)(v17 + 32) = 0xFFFFFFFF00000000;
          *(_BYTE *)(v17 + 40) = 0;
          *(_QWORD *)(v17 + 64) = 0;
          *(_QWORD *)(v17 + 52) = 0;
          *(_QWORD *)(v17 + 44) = 0;
          *(_DWORD *)(v17 + 60) = 0;
          *((_QWORD *)this + 2) = v17;
        }
        v29 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)v17, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v21, 1);
        v22 = v21 - 1;
        if (v22 < 0 == v14)
          *((_DWORD *)a2 + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_48:
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v29) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v29;
        *((_DWORD *)this + 10) |= 4u;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_52:
        v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v29) & 1) != 0)
        {
          *((_DWORD *)this + 7) = v29;
          *((_DWORD *)this + 10) |= 8u;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v25 < v9 && *v25 == 40)
          {
            v10 = v25 + 1;
            *((_QWORD *)a2 + 1) = v10;
LABEL_56:
            v29 = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
              if (!(_DWORD)result)
                return result;
              v26 = v29;
              v27 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v9 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v26 = *v10;
              v27 = (unsigned __int8 *)(v10 + 1);
              *((_QWORD *)a2 + 1) = v27;
            }
            *((_BYTE *)this + 32) = v26 != 0;
            *((_DWORD *)this + 10) |= 0x10u;
            if (v27 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_48;
        goto LABEL_21;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_52;
        goto LABEL_21;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_56;
      default:
        v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 40) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  unsigned int v12;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v5 = *((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 8);
    }
    v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(_BYTE *)(v5 + 36))
    {
      v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0)
        v7 += 9;
      if ((v6 & 4) != 0)
        v6 = v7 + 9;
      else
        v6 = v7;
    }
    *(_DWORD *)(v5 + 32) = v6;
    v3 = v6 + 2;
    v2 = *((_DWORD *)this + 10);
    if ((v2 & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 40) & 2) != 0)
  {
LABEL_15:
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass **)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                                                             + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 10);
  }
LABEL_21:
  v12 = v3 + 5;
  if ((v2 & 4) == 0)
    v12 = v3;
  if ((v2 & 8) != 0)
    v12 += 5;
  if ((v2 & 0x10) != 0)
    result = v12 + 2;
  else
    result = v12;
LABEL_28:
  *((_DWORD *)this + 9) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    result = *((float *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((float *)a2 + 7) = result;
    LOBYTE(v3) = *((_BYTE *)this + 32);
    *((_BYTE *)this + 32) = *((_BYTE *)a2 + 32);
    *((_BYTE *)a2 + 32) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.CompassTypeSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Compass *CoreNavigation::CLP::LogEntry::PrivateData::Compass::Compass(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BD838;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(this, a2);
  return this;
}

void sub_18D115A28(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_DWORD *)(v11 + 36) = 0;
        *(_DWORD *)(v11 + 40) = 0;
        *(_QWORD *)v11 = &off_1E25BB588;
        *(_QWORD *)(v11 + 8) = 0;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)(v11 + 24) = 0;
        *(_BYTE *)(v11 + 32) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D115C0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Compass::~Compass(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD838;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::~Compass(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Compass::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::New(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BD838;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = operator new();
          *(_DWORD *)(v19 + 36) = 0;
          *(_DWORD *)(v19 + 40) = 0;
          *(_QWORD *)v19 = &off_1E25BB588;
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_QWORD *)(v19 + 24) = 0;
          *(_BYTE *)(v19 + 32) = 0;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(_QWORD *)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample **)(*((_QWORD *)this + 2) + 8 * v8));
      v10 = (int)v9;
      if (v9 >= 0x80)
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      else
        v11 = 1;
      v7 = (v10 + v7 + v11);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Compass::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Compass::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Compass *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Compass *CoreNavigation::CLP::LogEntry::PrivateData::Compass::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Compass *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Compass::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Compass");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((_BYTE *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MotionTypeDeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  *(_QWORD *)this = &off_1E25BC6E0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((_BYTE *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(this, a2);
  return this;
}

void sub_18D116460(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *v3;
  double v4;
  int v5;
  char v6;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v12;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *v14;
  int v15;
  char v16;
  char v17;
  _BYTE v19[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v5 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 14) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BC848;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)this + 5) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                         + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(v7, v8);
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 14) |= 2u;
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)v3 + 2);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)operator new();
    v9 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BB7E0;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                  + 16);
  }
  *(float *)&v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v9, v10);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_31;
  }
LABEL_26:
  *((_DWORD *)v3 + 14) |= 4u;
  v11 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)v3 + 3);
  if (!v11)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)operator new();
    v11 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BB7E0;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)a2 + 3);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                  + 24);
  }
  *(float *)&v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v11, v12);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_36;
  }
LABEL_31:
  *((_DWORD *)v3 + 14) |= 8u;
  v13 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)v3 + 4);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)operator new();
    v13 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BB7E0;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((_QWORD *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                  + 32);
  }
  *(float *)&v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v13, v14);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_38:
    v16 = *((_BYTE *)a2 + 44);
    *((_DWORD *)v3 + 14) |= 0x20u;
    *((_BYTE *)v3 + 44) = v16;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_36:
  v15 = *((_DWORD *)a2 + 10);
  if ((v15 + 1) >= 8)
    __assert_rtn("set_magnetic_field_calibration_level", "CoreNavigationCLPPrivateDataShared.pb.h", 24177, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompassCalibrationLevel_IsValid(value)");
  *((_DWORD *)v3 + 14) |= 0x10u;
  *((_DWORD *)v3 + 10) = v15;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x20) != 0)
    goto LABEL_38;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_39:
  v17 = *((_BYTE *)a2 + 45);
  *((_DWORD *)v3 + 14) |= 0x40u;
  *((_BYTE *)v3 + 45) = v17;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    v6 = *((_BYTE *)a2 + 46);
    *((_DWORD *)v3 + 14) |= 0x80u;
    *((_BYTE *)v3 + 46) = v6;
    v5 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    LODWORD(v4) = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 14) |= 0x100u;
    *((_DWORD *)v3 + 12) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18D116790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::~MotionTypeDeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  *(_QWORD *)this = &off_1E25BC6E0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::~MotionTypeDeviceMotion(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC6E0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = -1;
  *(_WORD *)(v1 + 44) = 0;
  *(_BYTE *)(v1 + 46) = 0;
  *(_DWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 44))
        {
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }
        *(_DWORD *)(v2 + 44) = 0;
        v1 = *(_DWORD *)(this + 56);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v1 = *(_DWORD *)(this + 56);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 24))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        v1 = *(_DWORD *)(this + 56);
      }
    }
    if ((v1 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 24))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        v1 = *(_DWORD *)(this + 56);
      }
    }
    *(_DWORD *)(this + 40) = -1;
    *(_WORD *)(this + 44) = 0;
    *(_BYTE *)(this + 46) = 0;
  }
  if ((v1 & 0xFF00) != 0)
    *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  unsigned int v42;
  uint64_t result;
  _BYTE *v44;
  unsigned int v45;
  _BYTE *v46;
  unsigned int v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  unsigned int v51;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_29;
        *((_DWORD *)this + 14) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BC848;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_QWORD *)(v7 + 40) = 0;
          *((_QWORD *)this + 1) = v7;
        }
        v51 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0;
        }
        else
        {
          v51 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v15 = *((_DWORD *)a2 + 14);
        v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v17 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)a2 + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
        goto LABEL_41;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_29;
LABEL_41:
        *((_DWORD *)this + 14) |= 2u;
        v21 = *((_QWORD *)this + 2);
        if (!v21)
        {
          v21 = operator new();
          *(_QWORD *)(v21 + 8) = 0;
          *(_QWORD *)(v21 + 16) = 0;
          *(_QWORD *)v21 = &off_1E25BB7E0;
          *(_DWORD *)(v21 + 24) = 0;
          *((_QWORD *)this + 2) = v21;
        }
        v51 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0;
        }
        else
        {
          v51 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)v21, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v18)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_55:
        *((_DWORD *)this + 14) |= 4u;
        v28 = *((_QWORD *)this + 3);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)(v28 + 8) = 0;
          *(_QWORD *)(v28 + 16) = 0;
          *(_QWORD *)v28 = &off_1E25BB7E0;
          *(_DWORD *)(v28 + 24) = 0;
          *((_QWORD *)this + 3) = v28;
        }
        v51 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0;
        }
        else
        {
          v51 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v18)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_69:
        *((_DWORD *)this + 14) |= 8u;
        v35 = *((_QWORD *)this + 4);
        if (!v35)
        {
          v35 = operator new();
          *(_QWORD *)(v35 + 8) = 0;
          *(_QWORD *)(v35 + 16) = 0;
          *(_QWORD *)v35 = &off_1E25BB7E0;
          *(_DWORD *)(v35 + 24) = 0;
          *((_QWORD *)this + 4) = v35;
        }
        v51 = 0;
        v36 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0;
        }
        else
        {
          v51 = *v36;
          *((_QWORD *)a2 + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)a2 + 14);
        v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)v35, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v39 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v18)
          *((_DWORD *)a2 + 14) = v40;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v41 >= v9 || *v41 != 40)
          continue;
        v10 = v41 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_83:
        v51 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!(_DWORD)result)
            return result;
          v42 = v51;
        }
        else
        {
          v42 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v42 + 1 <= 7)
        {
          *((_DWORD *)this + 14) |= 0x10u;
          *((_DWORD *)this + 10) = v42;
        }
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v44 >= v11 || *v44 != 48)
          continue;
        v12 = v44 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_93:
        v51 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!(_DWORD)result)
            return result;
          v45 = v51;
          v46 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v45 = *v12;
          v46 = v12 + 1;
          *((_QWORD *)a2 + 1) = v46;
        }
        *((_BYTE *)this + 44) = v45 != 0;
        *((_DWORD *)this + 14) |= 0x20u;
        if ((unint64_t)v46 >= v11 || *v46 != 56)
          continue;
        v13 = v46 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_101:
        v51 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!(_DWORD)result)
            return result;
          v47 = v51;
          v48 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v47 = *v13;
          v48 = v13 + 1;
          *((_QWORD *)a2 + 1) = v48;
        }
        *((_BYTE *)this + 45) = v47 != 0;
        *((_DWORD *)this + 14) |= 0x40u;
        if ((unint64_t)v48 >= v11 || *v48 != 64)
          continue;
        v14 = v48 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_109:
        v51 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!(_DWORD)result)
            return result;
          v49 = v51;
          v50 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v49 = *v14;
          v50 = v14 + 1;
          *((_QWORD *)a2 + 1) = v50;
        }
        *((_BYTE *)this + 46) = v49 != 0;
        *((_DWORD *)this + 14) |= 0x80u;
        if ((unint64_t)v50 >= v11 || *v50 != 77)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_117:
        v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v51) & 1) != 0)
        {
          *((_DWORD *)this + 12) = v51;
          *((_DWORD *)this + 14) |= 0x100u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_55;
        goto LABEL_29;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_69;
        goto LABEL_29;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_93;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_101;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_109;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_29;
        goto LABEL_117;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_17:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_20:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 45), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 46), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *v1;
  int v2;
  int v3;
  unsigned int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  uint64_t result;

  v1 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)this;
  v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_52;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_9;
  }
  v5 = this[1];
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                 + 8);
  }
  this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::ByteSize(v5);
  v3 = (_DWORD)this + 2;
  v2 = *((_DWORD *)v1 + 14);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v6 = *((_QWORD *)v1 + 2);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 16);
    }
    v7 = *(unsigned __int8 *)(v6 + 24);
    if (*(_BYTE *)(v6 + 24))
    {
      v8 = (v7 << 31 >> 31) & 5;
      if ((v7 & 2) != 0)
        v8 += 5;
      if ((v7 & 4) != 0)
        v7 = v8 + 5;
      else
        v7 = v8;
    }
    *(_DWORD *)(v6 + 20) = v7;
    v3 += v7 + 2;
    v2 = *((_DWORD *)v1 + 14);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_20;
LABEL_31:
    v12 = *((_QWORD *)v1 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 32);
    }
    v13 = *(unsigned __int8 *)(v12 + 24);
    if (*(_BYTE *)(v12 + 24))
    {
      v14 = (v13 << 31 >> 31) & 5;
      if ((v13 & 2) != 0)
        v14 += 5;
      if ((v13 & 4) != 0)
        v13 = v14 + 5;
      else
        v13 = v14;
    }
    *(_DWORD *)(v12 + 20) = v13;
    v3 += v13 + 2;
    v2 = *((_DWORD *)v1 + 14);
    if ((v2 & 0x10) == 0)
      goto LABEL_46;
    goto LABEL_40;
  }
  v9 = *((_QWORD *)v1 + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 24);
  }
  v10 = *(unsigned __int8 *)(v9 + 24);
  if (*(_BYTE *)(v9 + 24))
  {
    v11 = (v10 << 31 >> 31) & 5;
    if ((v10 & 2) != 0)
      v11 += 5;
    if ((v10 & 4) != 0)
      v10 = v11 + 5;
    else
      v10 = v11;
  }
  *(_DWORD *)(v9 + 20) = v10;
  v3 += v10 + 2;
  v2 = *((_DWORD *)v1 + 14);
  if ((v2 & 8) != 0)
    goto LABEL_31;
LABEL_20:
  if ((v2 & 0x10) != 0)
  {
LABEL_40:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 10);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      v2 = *((_DWORD *)v1 + 14);
    }
    else
    {
      v16 = 2;
    }
    v3 += v16;
  }
LABEL_46:
  v4 = v3 + 2;
  if ((v2 & 0x20) == 0)
    v4 = v3;
  if ((v2 & 0x40) != 0)
    v4 += 2;
  if ((v2 & 0x80) != 0)
    v4 += 2;
LABEL_52:
  if ((v2 & 0x100) != 0)
    result = v4 + 5;
  else
    result = v4;
  *((_DWORD *)v1 + 13) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 44);
    *((_BYTE *)this + 44) = *((_BYTE *)a2 + 44);
    *((_BYTE *)a2 + 44) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 45);
    *((_BYTE *)this + 45) = *((_BYTE *)a2 + 45);
    *((_BYTE *)a2 + 45) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 46);
    *((_BYTE *)this + 46) = *((_BYTE *)a2 + 46);
    *((_BYTE *)a2 + 46) = v5;
    result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeDeviceMotion");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SensorFusionStatus(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  *(_QWORD *)this = &off_1E25BBDF8;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(this, a2);
  return this;
}

void sub_18D117654(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  int v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v4 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 4) |= 1u;
    *((_DWORD *)this + 2) = v4;
  }
}

void sub_18D1176F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::~SensorFusionStatus(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  *(_QWORD *)this = &off_1E25BBDF8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::~SensorFusionStatus(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::New(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BBDF8;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  unint64_t v7;
  char *v8;
  unsigned __int8 *v9;
  uint64_t result;

  v4 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
      }
      if ((_DWORD)TagFallback != 8)
        break;
      v8 = (char *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v9 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v8;
        v9 = (unsigned __int8 *)(v8 + 1);
        *((_QWORD *)a2 + 1) = v9;
      }
      *((_DWORD *)this + 4) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if ((*(_BYTE *)(this + 16) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;

  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v3 >= 0x80)
      result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    else
      result = 2;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 3) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  int v2;
  int v3;
  int v4;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SensorFusionStatus");
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_BYTE *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::DeviceMotionSample(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BBAB0;
  *((_BYTE *)this + 24) = 0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(this, a2);
  return this;
}

void sub_18D117AD0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *v3;
  double v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *v9;
  char v10;
  int v11;
  unsigned int v12;
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *v14;
  _BYTE v16[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 56);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 56) & 1) != 0)
  {
    *((_DWORD *)v3 + 14) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                           + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((*((_BYTE *)a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 14) |= 2u;
  v8 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)*((_QWORD *)v3 + 2);
  if (!v8)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)operator new();
    v8 = this;
    *(_QWORD *)this = &off_1E25BC6E0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_DWORD *)this + 10) = -1;
    *((_WORD *)this + 22) = 0;
    *((_BYTE *)this + 46) = 0;
    *((_DWORD *)this + 14) = 0;
    *((_QWORD *)this + 6) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)*((_QWORD *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                                      + 16);
  }
  *(float *)&v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(v8, v9);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  v10 = *((_BYTE *)a2 + 24);
  *((_DWORD *)v3 + 14) |= 4u;
  *((_BYTE *)v3 + 24) = v10;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)v3 + 14) |= 8u;
  *((_DWORD *)v3 + 7) = v11;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
    goto LABEL_28;
  }
LABEL_26:
  v12 = *((_DWORD *)a2 + 10);
  if (v12 >= 5)
    __assert_rtn("set_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 24446, "::CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionMode_IsValid(value)");
  *((_DWORD *)v3 + 14) |= 0x10u;
  *((_DWORD *)v3 + 10) = v12;
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0)
      goto LABEL_11;
LABEL_33:
    LODWORD(v4) = *((_DWORD *)a2 + 11);
    *((_DWORD *)v3 + 14) |= 0x40u;
    *((_DWORD *)v3 + 11) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 14) & 0x80) == 0)
      return *(float *)&v4;
    goto LABEL_12;
  }
LABEL_28:
  *((_DWORD *)v3 + 14) |= 0x20u;
  v13 = (CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *)*((_QWORD *)v3 + 4);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)operator new();
    v13 = this;
    *(_QWORD *)this = &off_1E25BBDF8;
    *((_QWORD *)this + 1) = 0;
    *((_DWORD *)this + 4) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *)*((_QWORD *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                                   + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(v13, v14);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x40) != 0)
    goto LABEL_33;
LABEL_11:
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    LODWORD(v4) = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 14) |= 0x80u;
    *((_DWORD *)v3 + 12) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18D117D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::~DeviceMotionSample(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  *(_QWORD *)this = &off_1E25BBAB0;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::~DeviceMotionSample(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::New(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = &off_1E25BBAB0;
  *(_BYTE *)(v1 + 24) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 28) = 0u;
  *(_OWORD *)(v1 + 44) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 56);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 56) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 56);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::Clear(this);
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(_BYTE *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 28) = 0;
    *(_DWORD *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      v4 = *(_QWORD *)(v1 + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 16))
          *(_DWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = 0;
      }
    }
    *(_DWORD *)(v1 + 44) = 0;
    *(_DWORD *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  uint64_t result;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  unsigned int v41;

  v4 = (unsigned int *)((char *)this + 28);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
        *((_DWORD *)this + 14) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v41 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
        goto LABEL_40;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
LABEL_40:
        *((_DWORD *)this + 14) |= 2u;
        v20 = *((_QWORD *)this + 2);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)v20 = &off_1E25BC6E0;
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *(_DWORD *)(v20 + 40) = -1;
          *(_WORD *)(v20 + 44) = 0;
          *(_BYTE *)(v20 + 46) = 0;
          *(_DWORD *)(v20 + 56) = 0;
          *(_QWORD *)(v20 + 48) = 0;
          *((_QWORD *)this + 2) = v20;
        }
        v41 = 0;
        v21 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v17)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 >= v10 || *v26 != 24)
          continue;
        v11 = v26 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_54:
        v41 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41);
          if (!(_DWORD)result)
            return result;
          v27 = v41;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v11;
          v28 = v11 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_BYTE *)this + 24) = v27 != 0;
        *((_DWORD *)this + 14) |= 4u;
        if ((unint64_t)v28 >= v10 || *v28 != 32)
          continue;
        v12 = v28 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_62:
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v12;
          v30 = v12 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 14) |= 8u;
        if ((unint64_t)v30 >= v10 || *v30 != 40)
          continue;
        v13 = v30 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_70:
        v41 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41);
          if (!(_DWORD)result)
            return result;
          v31 = v41;
        }
        else
        {
          v31 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v31 <= 4)
        {
          *((_DWORD *)this + 14) |= 0x10u;
          *((_DWORD *)this + 10) = v31;
        }
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_80:
        *((_DWORD *)this + 14) |= 0x20u;
        v33 = *((_QWORD *)this + 4);
        if (!v33)
        {
          v33 = operator new();
          *(_QWORD *)v33 = &off_1E25BBDF8;
          *(_QWORD *)(v33 + 8) = 0;
          *(_DWORD *)(v33 + 16) = 0;
          *((_QWORD *)this + 4) = v33;
        }
        v41 = 0;
        v34 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0;
        }
        else
        {
          v41 = *v34;
          *((_QWORD *)a2 + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)a2 + 14);
        v36 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *)v33, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v37 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v17)
          *((_DWORD *)a2 + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_94:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0)
          return 0;
        *((_DWORD *)this + 11) = v41;
        *((_DWORD *)this + 14) |= 0x40u;
        v40 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_98:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) != 0)
        {
          *((_DWORD *)this + 12) = v41;
          *((_DWORD *)this + 14) |= 0x80u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_54;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_62;
      case 5u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_80;
        goto LABEL_28;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_94;
        goto LABEL_28;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_28;
        goto LABEL_98;
      default:
        v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_19:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 48), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 44), a3);
  if ((*(_DWORD *)(v5 + 56) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  unsigned int v17;
  int v18;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 56);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_51;
  }
  if ((*(_BYTE *)(this + 56) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(this + 56) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *(_DWORD *)(v1 + 56);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 ***)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 ***)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                                    + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      this = 1;
    v3 += v10 + this + 1;
    v2 = *(_DWORD *)(v1 + 56);
  }
LABEL_21:
  if ((v2 & 4) != 0)
    v3 += 2;
  if ((v2 & 8) != 0)
  {
    this = *(unsigned int *)(v1 + 28);
    if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      v11 = this + 1;
      v2 = *(_DWORD *)(v1 + 56);
    }
    else
    {
      v11 = 2;
    }
    v3 += v11;
    if ((v2 & 0x10) == 0)
    {
LABEL_25:
      if ((v2 & 0x20) == 0)
        goto LABEL_46;
LABEL_37:
      v13 = *(_QWORD *)(v1 + 32);
      if (!v13)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 32);
      }
      if ((*(_BYTE *)(v13 + 16) & 1) != 0)
      {
        v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v13 + 8);
        if (v15 > 0x7F)
        {
          v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
          v14 = v18 + 1;
          *(_DWORD *)(v13 + 12) = v18 + 1;
          if ((v18 + 1) >= 0x80)
          {
            v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v18 + 1));
            goto LABEL_45;
          }
LABEL_44:
          v16 = 1;
LABEL_45:
          v3 += v14 + v16 + 1;
          v2 = *(_DWORD *)(v1 + 56);
          goto LABEL_46;
        }
        v14 = 2;
      }
      else
      {
        v14 = 0;
      }
      *(_DWORD *)(v13 + 12) = v14;
      goto LABEL_44;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_25;
  }
  this = *(unsigned int *)(v1 + 40);
  if ((this & 0x80000000) != 0)
  {
    v12 = 11;
  }
  else if (this >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
    v12 = this + 1;
    v2 = *(_DWORD *)(v1 + 56);
  }
  else
  {
    v12 = 2;
  }
  v3 += v12;
  if ((v2 & 0x20) != 0)
    goto LABEL_37;
LABEL_46:
  v17 = v3 + 5;
  if ((v2 & 0x40) == 0)
    v17 = v3;
  if ((v2 & 0x80) != 0)
    result = v17 + 5;
  else
    result = v17;
LABEL_51:
  *(_DWORD *)(v1 + 52) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    v4 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    LODWORD(v4) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DeviceMotionSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::DeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BA250;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(this, a2);
  return this;
}

void sub_18D118AC0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)(v11 + 8) = 0;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)v11 = &off_1E25BBAB0;
        *(_BYTE *)(v11 + 24) = 0;
        *(_OWORD *)(v11 + 28) = 0u;
        *(_OWORD *)(v11 + 44) = 0u;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D118CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::~DeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BA250;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::~DeviceMotion(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::New(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BA250;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = operator new();
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_QWORD *)v19 = &off_1E25BBAB0;
          *(_BYTE *)(v19 + 24) = 0;
          *(_OWORD *)(v19 + 28) = 0u;
          *(_OWORD *)(v19 + 44) = 0u;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(_QWORD *)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::ByteSize(*(_QWORD *)(*((_QWORD *)this + 2) + 8 * v8));
      v10 = (int)v9;
      if (v9 >= 0x80)
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      else
        v11 = 1;
      v7 = (v10 + v7 + v11);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DeviceMotion");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  double result;

  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MotionTypeGeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  *(_QWORD *)this = &off_1E25BCFC8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(this, a2);
  return this;
}

void sub_18D1194E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 76);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 76) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)v3 + 19) |= 1u;
      *((double *)v3 + 1) = result;
      v5 = *((_DWORD *)a2 + 19);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*((_BYTE *)a2 + 76) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)v3 + 19) |= 2u;
    *((double *)v3 + 2) = result;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    result = *((double *)a2 + 3);
    *((_DWORD *)v3 + 19) |= 4u;
    *((double *)v3 + 3) = result;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    result = *((double *)a2 + 4);
    *((_DWORD *)v3 + 19) |= 8u;
    *((double *)v3 + 4) = result;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    result = *((double *)a2 + 5);
    *((_DWORD *)v3 + 19) |= 0x10u;
    *((double *)v3 + 5) = result;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_19;
    }
LABEL_18:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 19) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        return result;
      goto LABEL_20;
    }
LABEL_19:
    result = *((double *)a2 + 7);
    *((_DWORD *)v3 + 19) |= 0x40u;
    *((double *)v3 + 7) = result;
    if ((*((_DWORD *)a2 + 19) & 0x80) == 0)
      return result;
LABEL_20:
    *((_DWORD *)v3 + 19) |= 0x80u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 8);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 8) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_
                                                                           + 64);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
  }
  return result;
}

void sub_18D1196C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::~MotionTypeGeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BCFC8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::~MotionTypeGeomagneticModelData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BCFC8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 76);
  if (v1)
  {
    *(_QWORD *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
    if (v1 < 0)
    {
      v2 = *(_QWORD *)(this + 64);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  int v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t result;
  unsigned int v23[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_50;
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v23;
        *((_DWORD *)this + 19) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_50;
LABEL_14:
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v23;
        *((_DWORD *)this + 19) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v23;
        *((_DWORD *)this + 19) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v23;
        *((_DWORD *)this + 19) |= 8u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_29:
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v23;
        *((_DWORD *)this + 19) |= 0x10u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_34:
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v23;
        *((_DWORD *)this + 19) |= 0x20u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_39:
        *(_QWORD *)v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v23;
        v13 = *((_DWORD *)this + 19) | 0x40;
        *((_DWORD *)this + 19) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_45:
        *((_DWORD *)this + 19) = v13 | 0x80;
        v15 = *((_QWORD *)this + 8);
        if (!v15)
        {
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E25BDBF8;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *((_QWORD *)this + 8) = v15;
        }
        v23[0] = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23))return 0;
        }
        else
        {
          v23[0] = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 < v18)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v15, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v19 = *((_DWORD *)a2 + 14);
              v20 = __OFSUB__(v19, 1);
              v21 = v19 - 1;
              if (v21 < 0 == v20)
                *((_DWORD *)a2 + 14) = v21;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_50;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_50;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_29;
        goto LABEL_50;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_34;
        goto LABEL_50;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_39;
        goto LABEL_50;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_50;
        v13 = *((_DWORD *)this + 19);
        goto LABEL_45;
      default:
        v6 = TagFallback & 7;
LABEL_50:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 76);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
    if ((*(_DWORD *)(v5 + 76) & 0x80) == 0)
      return this;
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) != 0)
    goto LABEL_16;
LABEL_8:
  if ((v6 & 0x80) == 0)
    return this;
LABEL_17:
  v7 = *(_QWORD *)(v5 + 64);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_ + 64);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  v2 = *((unsigned __int8 *)this + 76);
  if (*((_BYTE *)this + 76))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 0x80) != 0)
    {
      v5 = *((_QWORD *)this + 8);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_
                       + 64);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0)
        v7 += 9;
      if ((v6 & 4) != 0)
        v7 += 9;
      if (*(_BYTE *)(v5 + 36))
        v8 = v7;
      else
        v8 = 0;
      *(_DWORD *)(v5 + 32) = v8;
      v4 = (v4 + v8 + 2);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 18) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    result = *((double *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((double *)a2 + 7) = result;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    LODWORD(v9) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v9;
    LODWORD(v9) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v9;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeGeomagneticModelData");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::GeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BC1B8;
  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(this, a2);
  return this;
}

void sub_18D11A06C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *v3;
  double result;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *v6;
  _BYTE v7[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    *((_DWORD *)v3 + 5) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *)operator new();
      v5 = this;
      *(_QWORD *)this = &off_1E25BCFC8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 56) = 0u;
      *((_QWORD *)this + 9) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData **)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_
                                                                                                + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(v5, v6);
  }
  return result;
}

void sub_18D11A174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::~GeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BC1B8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *)CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::~GeomagneticModelData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *)CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::New(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BC1B8;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = this;
  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    this = *(_QWORD *)(this + 8);
    if (this)
      this = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::Clear(this);
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t result;
  unsigned int v14;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *((_DWORD *)this + 5) |= 1u;
      v6 = *((_QWORD *)this + 1);
      if (!v6)
      {
        v6 = operator new();
        *(_QWORD *)v6 = &off_1E25BCFC8;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *(_OWORD *)(v6 + 40) = 0u;
        *(_OWORD *)(v6 + 56) = 0u;
        *(_QWORD *)(v6 + 72) = 0;
        *((_QWORD *)this + 1) = v6;
      }
      v14 = 0;
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14))
          return 0;
      }
      else
      {
        v14 = *v7;
        *((_QWORD *)a2 + 1) = v7 + 1;
      }
      v8 = *((_DWORD *)a2 + 14);
      v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)v6, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v10 = *((_DWORD *)a2 + 14);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (v12 < 0 == v11)
        *((_DWORD *)a2 + 14) = v12;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v5 = *(_QWORD *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  uint64_t result;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *v3;

  if ((*((_BYTE *)this + 20) & 1) != 0)
  {
    v3 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v3 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData **)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_
                                                                                          + 8);
    }
    result = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::ByteSize(v3) + 2;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GeomagneticModelData");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SharedCtor(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_WORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::WifiAccessPoint(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BB060;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 2) = v3;
  *((_WORD *)this + 20) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(this, a2);
  return this;
}

void sub_18D11A6F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  int v4;
  char v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  const std::string *v9;
  std::string *v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  char v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v8 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 14) |= 1u;
    *((_QWORD *)this + 1) = v8;
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = (const std::string *)*((_QWORD *)a2 + 2);
  *((_DWORD *)this + 14) |= 2u;
  v10 = (std::string *)*((_QWORD *)this + 2);
  if (v10 == (std::string *)MEMORY[0x1E0DE8338])
  {
    v10 = (std::string *)operator new();
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 2) = v10;
  }
  std::string::operator=(v10, v9);
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 14) |= 4u;
  *((_DWORD *)this + 6) = v11;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_25:
  v12 = *((_DWORD *)a2 + 7);
  if (v12 >= 4)
    __assert_rtn("set_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 24990, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPointMode_IsValid(value)");
  *((_DWORD *)this + 14) |= 8u;
  *((_DWORD *)this + 7) = v12;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 14) |= 0x20u;
    *((_DWORD *)this + 9) = v14;
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 14) |= 0x10u;
  *((_DWORD *)this + 8) = v13;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  v15 = *((_BYTE *)a2 + 40);
  *((_DWORD *)this + 14) |= 0x40u;
  *((_BYTE *)this + 40) = v15;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_BYTE *)a2 + 41);
    *((_DWORD *)this + 14) |= 0x80u;
    *((_BYTE *)this + 41) = v5;
    v4 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      v6 = *((_DWORD *)a2 + 11);
      if (v6 >= 4)
        __assert_rtn("set_band", "CoreNavigationCLPPrivateDataShared.pb.h", 25101, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiRfBand_IsValid(value)");
      *((_DWORD *)this + 14) |= 0x100u;
      *((_DWORD *)this + 11) = v6;
      v4 = *((_DWORD *)a2 + 14);
    }
    if ((v4 & 0x200) != 0)
    {
      v7 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 14) |= 0x200u;
      *((_DWORD *)this + 12) = v7;
    }
  }
}

void sub_18D11A94C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::~WifiAccessPoint(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  *(_QWORD *)this = &off_1E25BB060;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::~WifiAccessPoint(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 2);
  if (v1 != MEMORY[0x1E0DE8338] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)MEMORY[0x18D78B5D4](v1, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_1E25BB060;
  *(_QWORD *)(result + 8) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *(_DWORD *)(result + 56) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_WORD *)(result + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 32) = 0;
    *(_WORD *)(this + 40) = 0;
    v1 = *(_DWORD *)(this + 56);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 44) = 0;
    *(_DWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  uint64_t result;
  int v10;
  _BYTE *v11;
  _QWORD *v12;
  unint64_t v13;
  _BYTE *v14;
  char *v15;
  unsigned int v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  unint64_t v25;
  char *v26;
  unsigned int v27;
  _BYTE *v28;
  unsigned int v29;
  _BYTE *v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;
  unsigned __int8 *v39;
  unsigned int v40;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = MEMORY[0x1E0DE8338];
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_40;
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v10 = *((_DWORD *)this + 14) | 1;
          *((_DWORD *)this + 14) = v10;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v11 < *((_QWORD *)a2 + 2) && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_40;
        v10 = *((_DWORD *)this + 14);
LABEL_16:
        *((_DWORD *)this + 14) = v10 | 2;
        if (*((_QWORD *)this + 2) == v5)
        {
          v12 = (_QWORD *)operator new();
          v12[1] = 0;
          v12[2] = 0;
          *v12 = 0;
          *((_QWORD *)this + 2) = v12;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if ((_DWORD)result)
        {
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 < v13 && *v14 == 24)
          {
            v15 = v14 + 1;
            *((_QWORD *)a2 + 1) = v15;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_24:
        v40 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v16 = v40;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v15;
          v17 = v15 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 6) = -(v16 & 1) ^ (v16 >> 1);
        *((_DWORD *)this + 14) |= 4u;
        if ((unint64_t)v17 < v13 && *v17 == 32)
        {
          v18 = v17 + 1;
          *((_QWORD *)a2 + 1) = v18;
          goto LABEL_49;
        }
        continue;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
LABEL_49:
        v40 = 0;
        if ((unint64_t)v18 >= v13 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v27 = v40;
        }
        else
        {
          v27 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v27 <= 3)
        {
          *((_DWORD *)this + 14) |= 8u;
          *((_DWORD *)this + 7) = v27;
        }
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v28 >= v19 || *v28 != 40)
          continue;
        v20 = v28 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_59:
        v40 = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!(_DWORD)result)
            return result;
          v29 = v40;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v29 = *v20;
          v30 = v20 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 8) = v29;
        *((_DWORD *)this + 14) |= 0x10u;
        if ((unint64_t)v30 >= v19 || *v30 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_67:
        v40 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v40) & 1) != 0)
        {
          *((_DWORD *)this + 9) = v40;
          *((_DWORD *)this + 14) |= 0x20u;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v21 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v31 < v21 && *v31 == 56)
          {
            v22 = v31 + 1;
            *((_QWORD *)a2 + 1) = v22;
LABEL_71:
            v40 = 0;
            if ((unint64_t)v22 >= v21 || *v22 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
              if (!(_DWORD)result)
                return result;
              v32 = v40;
              v33 = (_BYTE *)*((_QWORD *)a2 + 1);
              v21 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v32 = *v22;
              v33 = v22 + 1;
              *((_QWORD *)a2 + 1) = v33;
            }
            *((_BYTE *)this + 40) = v32 != 0;
            *((_DWORD *)this + 14) |= 0x40u;
            if ((unint64_t)v33 < v21 && *v33 == 64)
            {
              v23 = v33 + 1;
              *((_QWORD *)a2 + 1) = v23;
LABEL_79:
              v40 = 0;
              if ((unint64_t)v23 >= v21 || *v23 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
                if (!(_DWORD)result)
                  return result;
                v34 = v40;
                v35 = (_BYTE *)*((_QWORD *)a2 + 1);
                v21 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v34 = *v23;
                v35 = v23 + 1;
                *((_QWORD *)a2 + 1) = v35;
              }
              *((_BYTE *)this + 41) = v34 != 0;
              *((_DWORD *)this + 14) |= 0x80u;
              if ((unint64_t)v35 < v21 && *v35 == 72)
              {
                v24 = v35 + 1;
                *((_QWORD *)a2 + 1) = v24;
LABEL_87:
                v40 = 0;
                if ((unint64_t)v24 >= v21 || *v24 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
                  if (!(_DWORD)result)
                    return result;
                  v36 = v40;
                }
                else
                {
                  v36 = *v24;
                  *((_QWORD *)a2 + 1) = v24 + 1;
                }
                if (v36 <= 3)
                {
                  *((_DWORD *)this + 14) |= 0x100u;
                  *((_DWORD *)this + 11) = v36;
                }
                v37 = (_BYTE *)*((_QWORD *)a2 + 1);
                v25 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v37 < v25 && *v37 == 80)
                {
                  v26 = v37 + 1;
                  *((_QWORD *)a2 + 1) = v26;
LABEL_97:
                  v40 = 0;
                  if ((unint64_t)v26 >= v25 || *v26 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
                    if (!(_DWORD)result)
                      return result;
                    v38 = v40;
                    v39 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v25 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v38 = *v26;
                    v39 = (unsigned __int8 *)(v26 + 1);
                    *((_QWORD *)a2 + 1) = v39;
                  }
                  *((_DWORD *)this + 12) = v38;
                  *((_DWORD *)this + 14) |= 0x200u;
                  if (v39 == (unsigned __int8 *)v25
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    result = 1;
                    *((_BYTE *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_67;
        goto LABEL_40;
      case 7u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 8u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 9u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 0xAu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_40;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_97;
      default:
        v8 = TagFallback & 7;
LABEL_40:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  unsigned int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;

  v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_40;
  }
  v3 = (v2 << 31 >> 31) & 9;
  if ((v2 & 2) != 0)
  {
    v5 = *((_QWORD *)this + 2);
    v6 = *(unsigned __int8 *)(v5 + 23);
    v7 = v6;
    v8 = *(_QWORD *)(v5 + 8);
    if ((v6 & 0x80u) == 0)
      v9 = *(unsigned __int8 *)(v5 + 23);
    else
      v9 = v8;
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      v6 = *(unsigned __int8 *)(v5 + 23);
      v8 = *(_QWORD *)(v5 + 8);
      v2 = *((_DWORD *)this + 14);
      v7 = *(_BYTE *)(v5 + 23);
    }
    else
    {
      v10 = 1;
    }
    if (v7 < 0)
      v6 = v8;
    v3 += v10 + v6 + 1;
    if ((v2 & 4) == 0)
    {
LABEL_4:
      if ((v2 & 8) == 0)
        goto LABEL_5;
LABEL_21:
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if ((v13 & 0x80000000) != 0)
      {
        v14 = 11;
      }
      else if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v14 = 2;
      }
      v3 += v14;
      if ((v2 & 0x10) == 0)
        goto LABEL_33;
      goto LABEL_27;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_4;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *((_DWORD *)this + 6)) ^ (*((int *)this + 6) >> 31));
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *((_DWORD *)this + 14);
  }
  else
  {
    v12 = 2;
  }
  v3 += v12;
  if ((v2 & 8) != 0)
    goto LABEL_21;
LABEL_5:
  if ((v2 & 0x10) != 0)
  {
LABEL_27:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v16 = 2;
    }
    v3 += v16;
  }
LABEL_33:
  v17 = v3 + 5;
  if ((v2 & 0x20) == 0)
    v17 = v3;
  if ((v2 & 0x40) != 0)
    v17 += 2;
  if ((v2 & 0x80) != 0)
    v4 = v17 + 2;
  else
    v4 = v17;
LABEL_40:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v18 & 0x80000000) != 0)
      {
        v19 = 11;
      }
      else if (v18 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v19 = 2;
      }
      v4 = (v19 + v4);
    }
    if ((v2 & 0x200) != 0)
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
      if ((v20 & 0x80000000) != 0)
      {
        v21 = 11;
      }
      else if (v20 >= 0x80)
      {
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      }
      else
      {
        v21 = 2;
      }
      v4 = (v21 + v4);
    }
  }
  *((_DWORD *)this + 13) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    result = *((float *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((float *)a2 + 9) = result;
    LOBYTE(v2) = *((_BYTE *)this + 40);
    *((_BYTE *)this + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 41);
    *((_BYTE *)this + 41) = *((_BYTE *)a2 + 41);
    *((_BYTE *)a2 + 41) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiAccessPoint");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SharedCtor(uint64_t this)
{
  *(_BYTE *)(this + 16) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::WifiAssociationState(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  *((_BYTE *)this + 16) = 0;
  *(_QWORD *)this = &off_1E25BC398;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(this, a2);
  return this;
}

void sub_18D11B56C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *v3;
  int v4;
  char v5;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *v6;
  uint64_t v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *v8;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_BYTE *)a2 + 16);
      *((_DWORD *)v3 + 6) |= 1u;
      *((_BYTE *)v3 + 16) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)v3 + 6) |= 2u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BB060;
        *((_QWORD *)this + 1) = 0;
        v7 = MEMORY[0x1E0DE8338];
        *((_DWORD *)this + 14) = 0;
        *((_QWORD *)this + 6) = 0;
        *((_DWORD *)this + 11) = 0;
        *((_QWORD *)this + 3) = 0;
        *((_QWORD *)this + 4) = 0;
        *((_QWORD *)this + 2) = v7;
        *((_WORD *)this + 20) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((_QWORD *)a2 + 1);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_
                                                                                   + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(v6, v8);
    }
  }
}

void sub_18D11B69C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::~WifiAssociationState(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BC398;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::~WifiAssociationState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  uint64_t result;

  result = operator new();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BC398;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;

  v1 = this;
  v2 = *(_BYTE *)(this + 24);
  if (v2)
  {
    *(_BYTE *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  int v8;
  unint64_t v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  unsigned int v21;
  unsigned int v22;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    do
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 == 1)
          break;
        if (TagFallback >> 3 == 2)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 6);
            goto LABEL_24;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_16:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v21 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if (!(_DWORD)result)
          return result;
        v11 = v21;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v11 = *v10;
        v12 = v10 + 1;
        *((_QWORD *)a2 + 1) = v12;
      }
      *((_BYTE *)this + 16) = v11 != 0;
      v8 = *((_DWORD *)this + 6) | 1;
      *((_DWORD *)this + 6) = v8;
    }
    while ((unint64_t)v12 >= v9 || *v12 != 18);
    *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_24:
    *((_DWORD *)this + 6) = v8 | 2;
    v14 = *((_QWORD *)this + 1);
    if (!v14)
    {
      v14 = operator new();
      *(_QWORD *)v14 = &off_1E25BB060;
      *(_QWORD *)(v14 + 8) = 0;
      *(_DWORD *)(v14 + 56) = 0;
      *(_QWORD *)(v14 + 48) = 0;
      *(_DWORD *)(v14 + 44) = 0;
      *(_QWORD *)(v14 + 24) = 0;
      *(_QWORD *)(v14 + 32) = 0;
      *(_QWORD *)(v14 + 16) = v4;
      *(_WORD *)(v14 + 40) = 0;
      *((_QWORD *)this + 1) = v14;
    }
    v22 = 0;
    v15 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))
        return 0;
    }
    else
    {
      v22 = *v15;
      *((_QWORD *)a2 + 1) = v15 + 1;
    }
    v16 = *((_DWORD *)a2 + 14);
    v17 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v16 + 1;
    if (v16 >= v17)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)v14, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v18 = *((_DWORD *)a2 + 14);
    v19 = __OFSUB__(v18, 1);
    v20 = v18 - 1;
    if (v20 < 0 == v19)
      *((_DWORD *)a2 + 14) = v20;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 16), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0)
      return this;
  }
  else if ((v6 & 2) == 0)
  {
    return this;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ + 8);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  int v2;
  uint64_t v3;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;

  v2 = *((_DWORD *)this + 6);
  if ((_BYTE)v2)
  {
    v3 = 2 * (v2 & 1u);
    if ((v2 & 2) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_
                                                                             + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = (v3 | 1) + v6 + v7;
    }
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  char v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)this)
  {
    v2 = *(_BYTE *)(this + 16);
    *(_BYTE *)(this + 16) = *((_BYTE *)a2 + 16);
    *((_BYTE *)a2 + 16) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiAssociationState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::WifiScanResult(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BAC28;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(this, a2);
  return this;
}

void sub_18D11BCF4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  uint64_t v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    v7 = MEMORY[0x1E0DE8338];
    do
    {
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v9 = *((_DWORD *)this + 7);
      v10 = *((int *)this + 6);
      if ((int)v10 >= v9)
      {
        if (v9 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)((char *)this + 16));
          v9 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v9 + 1;
        v12 = operator new();
        *(_QWORD *)v12 = &off_1E25BB060;
        *(_QWORD *)(v12 + 8) = 0;
        *(_DWORD *)(v12 + 56) = 0;
        *(_QWORD *)(v12 + 48) = 0;
        *(_DWORD *)(v12 + 44) = 0;
        *(_QWORD *)(v12 + 24) = 0;
        *(_QWORD *)(v12 + 32) = 0;
        *(_QWORD *)(v12 + 16) = v7;
        *(_WORD *)(v12 + 40) = 0;
        v13 = *((_QWORD *)this + 2);
        v14 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v14 + 1;
        *(_QWORD *)(v13 + 8 * v14) = v12;
      }
      else
      {
        v11 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v10 + 1;
        v12 = *(_QWORD *)(v11 + 8 * v10);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)v12, v8);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v15)
    {
      v4 = operator new();
      v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v15, v16);
  }
  return result;
}

void sub_18D11BEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::~WifiScanResult(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BAC28;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::~WifiScanResult(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BAC28;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  uint64_t v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  _BYTE *v28;
  uint64_t result;
  unsigned int v30;
  unsigned int v31;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)((char *)this + 16);
  v5 = MEMORY[0x1E0DE8338];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v9 = *((_QWORD *)this + 1);
        if (!v9)
        {
          v9 = operator new();
          *(_QWORD *)v9 = &off_1E25BDBF8;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *((_QWORD *)this + 1) = v9;
        }
        v30 = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_18;
      while (1)
      {
        v17 = *((_DWORD *)this + 7);
        v18 = *((int *)this + 6);
        if ((int)v18 >= v17)
        {
          if (v17 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v17 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v17 + 1;
          v20 = operator new();
          *(_QWORD *)v20 = &off_1E25BB060;
          *(_QWORD *)(v20 + 8) = 0;
          *(_DWORD *)(v20 + 56) = 0;
          *(_QWORD *)(v20 + 48) = 0;
          *(_DWORD *)(v20 + 44) = 0;
          *(_QWORD *)(v20 + 24) = 0;
          *(_QWORD *)(v20 + 32) = 0;
          *(_QWORD *)(v20 + 16) = v5;
          *(_WORD *)(v20 + 40) = 0;
          v21 = *((_QWORD *)this + 2);
          v22 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v22 + 1;
          *(_QWORD *)(v21 + 8 * v22) = v20;
        }
        else
        {
          v19 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v18 + 1;
          v20 = *(_QWORD *)(v19 + 8 * v18);
        }
        v31 = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
        }
        else
        {
          v31 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v14)
          *((_DWORD *)a2 + 14) = v27;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v28 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v16 >= v28 || *v16 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v16 + 1;
      }
      if (v16 == v28 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(*((_QWORD *)this + 2) + 8 * v8));
      v10 = (int)v9;
      if (v9 >= 0x80)
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      else
        v11 = 1;
      v7 = (v10 + v7 + v11);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiScanResult");
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  double result;

  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::WifiNotification(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  *(_QWORD *)this = &off_1E25BB3A8;
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(this, a2);
  return this;
}

void sub_18D11C72C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *v3;
  int v4;
  char v5;
  char v6;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *v14;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *v16;
  char v17;
  char v18;
  _BYTE v19[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    *((_DWORD *)v3 + 14) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)v3 + 14) |= 2u;
  *((_DWORD *)v3 + 4) = v9;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_25:
  v10 = *((_DWORD *)a2 + 5);
  if (v10 >= 0xF)
    __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 25353, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiNotificationType_IsValid(value)");
  *((_DWORD *)v3 + 14) |= 4u;
  *((_DWORD *)v3 + 5) = v10;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_29;
  }
LABEL_27:
  v11 = *((_DWORD *)a2 + 10);
  if (v11 >= 0xF)
    __assert_rtn("set_scan_type", "CoreNavigationCLPPrivateDataShared.pb.h", 25376, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiScanType_IsValid(value)");
  *((_DWORD *)v3 + 14) |= 8u;
  *((_DWORD *)v3 + 10) = v11;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_30:
    *((_DWORD *)v3 + 14) |= 0x20u;
    v13 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((_QWORD *)v3 + 3);
    if (!v13)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)operator new();
      v13 = this;
      *((_BYTE *)this + 16) = 0;
      *(_QWORD *)this = &off_1E25BC398;
      *((_QWORD *)this + 1) = 0;
      *((_DWORD *)this + 5) = 0;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)v3 + 3) = this;
    }
    v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((_QWORD *)a2 + 3);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                                       + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(v13, v14);
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_29:
  v12 = *((_BYTE *)a2 + 44);
  *((_DWORD *)v3 + 14) |= 0x10u;
  *((_BYTE *)v3 + 44) = v12;
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x20) != 0)
    goto LABEL_30;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_35:
  *((_DWORD *)v3 + 14) |= 0x40u;
  v15 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((_QWORD *)v3 + 4);
  if (!v15)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)operator new();
    v15 = this;
    *((_QWORD *)this + 5) = 0;
    *(_QWORD *)this = &off_1E25BAC28;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((_QWORD *)a2 + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                               + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(v15, v16);
  v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_BYTE *)a2 + 45);
    *((_DWORD *)v3 + 14) |= 0x80u;
    *((_BYTE *)v3 + 45) = v5;
    v4 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v17 = *((_BYTE *)a2 + 46);
    *((_DWORD *)v3 + 14) |= 0x100u;
    *((_BYTE *)v3 + 46) = v17;
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v18 = *((_BYTE *)a2 + 47);
  *((_DWORD *)v3 + 14) |= 0x200u;
  *((_BYTE *)v3 + 47) = v18;
  if ((*((_DWORD *)a2 + 14) & 0x400) != 0)
  {
LABEL_17:
    v6 = *((_BYTE *)a2 + 48);
    *((_DWORD *)v3 + 14) |= 0x400u;
    *((_BYTE *)v3 + 48) = v6;
  }
}

void sub_18D11CA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::~WifiNotification(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  *(_QWORD *)this = &off_1E25BB3A8;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::~WifiNotification(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BB3A8;
  *(_DWORD *)(v1 + 52) = 0;
  *(_DWORD *)(v1 + 56) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 33) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_DWORD *)(this + 56);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 56);
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(_BYTE *)(this + 44) = 0;
    if ((v2 & 0x20) != 0)
    {
      this = *(_QWORD *)(this + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::Clear(this);
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::Clear(this);
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(_BYTE *)(v1 + 45) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_WORD *)(v1 + 46) = 0;
    *(_BYTE *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  int v16;
  unint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  uint64_t result;
  unsigned int v31;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  _BYTE *v50;
  unsigned int v51;
  _BYTE *v52;
  unsigned int v53;
  _BYTE *v54;
  unsigned int v55;
  _BYTE *v56;
  unsigned int v57;
  unsigned __int8 *v58;
  unsigned int v59;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_33;
        *((_DWORD *)this + 14) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v59 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59))return 0;
        }
        else
        {
          v59 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v25 = __OFSUB__(v24, 1);
        v26 = v24 - 1;
        if (v26 < 0 == v25)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v9 || *v27 != 16)
          continue;
        v10 = v27 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_46;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_46:
        v59 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!(_DWORD)result)
            return result;
          v28 = v59;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v10;
          v29 = v10 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 4) = v28;
        *((_DWORD *)this + 14) |= 2u;
        if ((unint64_t)v29 >= v9 || *v29 != 24)
          continue;
        v11 = v29 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_54:
        v59 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!(_DWORD)result)
            return result;
          v31 = v59;
        }
        else
        {
          v31 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (v31 <= 0xE)
        {
          *((_DWORD *)this + 14) |= 4u;
          *((_DWORD *)this + 5) = v31;
        }
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v32 >= v12 || *v32 != 32)
          continue;
        v13 = v32 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_64:
        v59 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!(_DWORD)result)
            return result;
          v33 = v59;
        }
        else
        {
          v33 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v33 <= 0xE)
        {
          *((_DWORD *)this + 14) |= 8u;
          *((_DWORD *)this + 10) = v33;
        }
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v34 >= v14 || *v34 != 40)
          continue;
        v15 = v34 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_74:
        v59 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!(_DWORD)result)
            return result;
          v35 = v59;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v35 = *v15;
          v36 = v15 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_BYTE *)this + 44) = v35 != 0;
        v16 = *((_DWORD *)this + 14) | 0x10;
        *((_DWORD *)this + 14) = v16;
        if ((unint64_t)v36 >= v14 || *v36 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_82:
        *((_DWORD *)this + 14) = v16 | 0x20;
        v37 = *((_QWORD *)this + 3);
        if (!v37)
        {
          v37 = operator new();
          *(_BYTE *)(v37 + 16) = 0;
          *(_QWORD *)v37 = &off_1E25BC398;
          *(_QWORD *)(v37 + 8) = 0;
          *(_DWORD *)(v37 + 20) = 0;
          *(_DWORD *)(v37 + 24) = 0;
          *((_QWORD *)this + 3) = v37;
        }
        v59 = 0;
        v38 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59))return 0;
        }
        else
        {
          v59 = *v38;
          *((_QWORD *)a2 + 1) = v38 + 1;
        }
        v39 = *((_DWORD *)a2 + 14);
        v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)v37, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v41 = *((_DWORD *)a2 + 14);
        v25 = __OFSUB__(v41, 1);
        v42 = v41 - 1;
        if (v42 < 0 == v25)
          *((_DWORD *)a2 + 14) = v42;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
LABEL_96:
        *((_DWORD *)this + 14) |= 0x40u;
        v44 = *((_QWORD *)this + 4);
        if (!v44)
        {
          v44 = operator new();
          *(_QWORD *)(v44 + 40) = 0;
          *(_QWORD *)v44 = &off_1E25BAC28;
          *(_QWORD *)(v44 + 8) = 0;
          *(_QWORD *)(v44 + 16) = 0;
          *(_QWORD *)(v44 + 24) = 0;
          *(_DWORD *)(v44 + 32) = 0;
          *((_QWORD *)this + 4) = v44;
        }
        v59 = 0;
        v45 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59))return 0;
        }
        else
        {
          v59 = *v45;
          *((_QWORD *)a2 + 1) = v45 + 1;
        }
        v46 = *((_DWORD *)a2 + 14);
        v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 < v47)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)v44, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v48 = *((_DWORD *)a2 + 14);
              v25 = __OFSUB__(v48, 1);
              v49 = v48 - 1;
              if (v49 < 0 == v25)
                *((_DWORD *)a2 + 14) = v49;
              v50 = (_BYTE *)*((_QWORD *)a2 + 1);
              v17 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v50 < v17 && *v50 == 64)
              {
                v18 = v50 + 1;
                *((_QWORD *)a2 + 1) = v18;
LABEL_110:
                v59 = 0;
                if ((unint64_t)v18 >= v17 || *v18 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                  if (!(_DWORD)result)
                    return result;
                  v51 = v59;
                  v52 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v17 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  v51 = *v18;
                  v52 = v18 + 1;
                  *((_QWORD *)a2 + 1) = v52;
                }
                *((_BYTE *)this + 45) = v51 != 0;
                *((_DWORD *)this + 14) |= 0x80u;
                if ((unint64_t)v52 < v17 && *v52 == 72)
                {
                  v19 = v52 + 1;
                  *((_QWORD *)a2 + 1) = v19;
LABEL_118:
                  v59 = 0;
                  if ((unint64_t)v19 >= v17 || *v19 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                    if (!(_DWORD)result)
                      return result;
                    v53 = v59;
                    v54 = (_BYTE *)*((_QWORD *)a2 + 1);
                    v17 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v53 = *v19;
                    v54 = v19 + 1;
                    *((_QWORD *)a2 + 1) = v54;
                  }
                  *((_BYTE *)this + 46) = v53 != 0;
                  *((_DWORD *)this + 14) |= 0x100u;
                  if ((unint64_t)v54 < v17 && *v54 == 80)
                  {
                    v20 = v54 + 1;
                    *((_QWORD *)a2 + 1) = v20;
LABEL_126:
                    v59 = 0;
                    if ((unint64_t)v20 >= v17 || *v20 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                      if (!(_DWORD)result)
                        return result;
                      v55 = v59;
                      v56 = (_BYTE *)*((_QWORD *)a2 + 1);
                      v17 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      v55 = *v20;
                      v56 = v20 + 1;
                      *((_QWORD *)a2 + 1) = v56;
                    }
                    *((_BYTE *)this + 47) = v55 != 0;
                    *((_DWORD *)this + 14) |= 0x200u;
                    if ((unint64_t)v56 < v17 && *v56 == 88)
                    {
                      v21 = v56 + 1;
                      *((_QWORD *)a2 + 1) = v21;
LABEL_134:
                      v59 = 0;
                      if ((unint64_t)v21 >= v17 || *v21 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                        if (!(_DWORD)result)
                          return result;
                        v57 = v59;
                        v58 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                        v17 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        v57 = *v21;
                        v58 = (unsigned __int8 *)(v21 + 1);
                        *((_QWORD *)a2 + 1) = v58;
                      }
                      *((_BYTE *)this + 48) = v57 != 0;
                      *((_DWORD *)this + 14) |= 0x400u;
                      if (v58 == (unsigned __int8 *)v17
                        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        result = 1;
                        *((_BYTE *)a2 + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_54;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_64;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_74;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_33;
        v16 = *((_DWORD *)this + 14);
        goto LABEL_82;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_96;
        goto LABEL_33;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_110;
      case 9u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_118;
      case 0xAu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_126;
      case 0xBu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_33;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_134;
      default:
        v6 = TagFallback & 7;
LABEL_33:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_20:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_23:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 45), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 46), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 48), (uint64_t)a2, a4);
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 47), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 48), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  int v18;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  unsigned int v23;
  uint64_t result;

  v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_55;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *((_DWORD *)this + 14);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v9 = 2;
    }
    v3 += v9;
  }
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
      goto LABEL_36;
    goto LABEL_30;
  }
  if ((v2 & 8) != 0)
  {
LABEL_30:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      v2 = *((_DWORD *)this + 14);
    }
    else
    {
      v13 = 2;
    }
    v3 += v13;
  }
LABEL_36:
  if ((v2 & 0x10) != 0)
    v14 = v3 + 2;
  else
    v14 = v3;
  if ((v2 & 0x20) != 0)
  {
    v15 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((_QWORD *)this + 3);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                                 + 24);
    }
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::ByteSize(v15);
    v17 = (int)v16;
    if (v16 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    else
      v18 = 1;
    v14 += v17 + v18 + 1;
    v2 = *((_DWORD *)this + 14);
  }
  if ((v2 & 0x40) != 0)
  {
    v19 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((_QWORD *)this + 4);
    if (!v19)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                           + 32);
    }
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::ByteSize(v19);
    v21 = (int)v20;
    if (v20 >= 0x80)
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    else
      v22 = 1;
    v14 += v21 + v22 + 1;
    v2 = *((_DWORD *)this + 14);
  }
  v4 = v14 + 2;
  if ((v2 & 0x80) == 0)
    v4 = v14;
LABEL_55:
  v23 = v4 + 2;
  if ((v2 & 0x100) == 0)
    v23 = v4;
  if ((v2 & 0x200) != 0)
    v23 += 2;
  if ((v2 & 0x400) != 0)
    v23 += 2;
  if ((v2 & 0xFF00) != 0)
    result = v23;
  else
    result = v4;
  *((_DWORD *)this + 13) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 44);
    *(_BYTE *)(this + 44) = *((_BYTE *)a2 + 44);
    *((_BYTE *)a2 + 44) = v2;
    v3 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    v4 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 45);
    *(_BYTE *)(this + 45) = *((_BYTE *)a2 + 45);
    *((_BYTE *)a2 + 45) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 46);
    *(_BYTE *)(this + 46) = *((_BYTE *)a2 + 46);
    *((_BYTE *)a2 + 46) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 47);
    *(_BYTE *)(this + 47) = *((_BYTE *)a2 + 47);
    *((_BYTE *)a2 + 47) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 48);
    *(_BYTE *)(this + 48) = *((_BYTE *)a2 + 48);
    *((_BYTE *)a2 + 48) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiNotification");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_GnssAvailability_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_MeasurementSource_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::GnssAvailabilityPrediction(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  *(_QWORD *)this = &off_1E25BCDE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(this, a2);
  return this;
}

void sub_18D11DA3C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      *((_DWORD *)v3 + 9) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 6);
      if (v7 >= 4)
        __assert_rtn("set_state", "CoreNavigationCLPPrivateDataShared.pb.h", 25639, "::CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_GnssAvailability_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 2u;
      *((_DWORD *)v3 + 6) = v7;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 4) != 0)
    {
      v8 = *((_QWORD *)a2 + 2);
      *((_DWORD *)v3 + 9) |= 4u;
      *((_QWORD *)v3 + 2) = v8;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 8) != 0)
    {
      v9 = *((_DWORD *)a2 + 7);
      if (v9 >= 4)
        __assert_rtn("set_measurement_source", "CoreNavigationCLPPrivateDataShared.pb.h", 25684, "::CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_MeasurementSource_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 8u;
      *((_DWORD *)v3 + 7) = v9;
    }
  }
}

void sub_18D11DBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::New(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BCDE8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 36))
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_31;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    LODWORD(v3) = v5 + 2;
    v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    LODWORD(v3) = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_21;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 9);
  }
  else
  {
    v8 = 2;
  }
  LODWORD(v3) = v8 + v3;
LABEL_21:
  if ((v2 & 4) != 0)
    v3 = (v3 + 9);
  else
    v3 = v3;
  if ((v2 & 8) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    }
    else
    {
      v10 = 2;
    }
    v3 = (v10 + v3);
  }
LABEL_31:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  uint64_t v2;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GnssAvailabilityPrediction");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::GEOLocationCoordinate2D(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  *(_QWORD *)this = &off_1E25BC7D0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(this, a2);
  return this;
}

void sub_18D11DFC4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D11E080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::~GEOLocationCoordinate2D(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  *(_QWORD *)this = &off_1E25BC7D0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::~GEOLocationCoordinate2D(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BC7D0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *))(*(_QWORD *)this
                                                                                                  + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOLocationCoordinate2D");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  double result;

  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_BYTE *)this + 80) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::GEOMapFeatureBuildingSection(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  *(_QWORD *)this = &off_1E25BCED8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_BYTE *)this + 80) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(this, a2);
  return this;
}

void sub_18D11E500(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  double result;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(*((_QWORD *)a2 + 1) + 8 * v5);
      v7 = *((_DWORD *)this + 5);
      v8 = *((int *)this + 4);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)((char *)this + 8));
          v7 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v7 + 1;
        v10 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
        *(_QWORD *)v10 = &off_1E25BC7D0;
        *((_QWORD *)v10 + 1) = 0;
        *((_QWORD *)v10 + 2) = 0;
        *((_QWORD *)v10 + 3) = 0;
        v11 = *((_QWORD *)this + 1);
        v12 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v8 + 1;
        v10 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v9 + 8 * v8);
      }
      result = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 4));
  }
  v13 = *((_DWORD *)a2 + 22);
  if ((v13 & 0x1FE) != 0)
  {
    if ((v13 & 2) != 0)
    {
      result = *((double *)a2 + 4);
      *((_DWORD *)this + 22) |= 2u;
      *((double *)this + 4) = result;
      v13 = *((_DWORD *)a2 + 22);
      if ((v13 & 4) == 0)
      {
LABEL_14:
        if ((v13 & 8) == 0)
          goto LABEL_15;
        goto LABEL_23;
      }
    }
    else if ((v13 & 4) == 0)
    {
      goto LABEL_14;
    }
    result = *((double *)a2 + 5);
    *((_DWORD *)this + 22) |= 4u;
    *((double *)this + 5) = result;
    v13 = *((_DWORD *)a2 + 22);
    if ((v13 & 8) == 0)
    {
LABEL_15:
      if ((v13 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_24;
    }
LABEL_23:
    v14 = *((_BYTE *)a2 + 80);
    *((_DWORD *)this + 22) |= 8u;
    *((_BYTE *)this + 80) = v14;
    v13 = *((_DWORD *)a2 + 22);
    if ((v13 & 0x10) == 0)
    {
LABEL_16:
      if ((v13 & 0x20) == 0)
        goto LABEL_17;
      goto LABEL_25;
    }
LABEL_24:
    result = *((double *)a2 + 6);
    *((_DWORD *)this + 22) |= 0x10u;
    *((double *)this + 6) = result;
    v13 = *((_DWORD *)a2 + 22);
    if ((v13 & 0x20) == 0)
    {
LABEL_17:
      if ((v13 & 0x40) == 0)
        goto LABEL_18;
      goto LABEL_26;
    }
LABEL_25:
    result = *((double *)a2 + 7);
    *((_DWORD *)this + 22) |= 0x20u;
    *((double *)this + 7) = result;
    v13 = *((_DWORD *)a2 + 22);
    if ((v13 & 0x40) == 0)
    {
LABEL_18:
      if ((v13 & 0x80) == 0)
        return result;
      goto LABEL_19;
    }
LABEL_26:
    result = *((double *)a2 + 8);
    *((_DWORD *)this + 22) |= 0x40u;
    *((double *)this + 8) = result;
    if ((*((_DWORD *)a2 + 22) & 0x80) == 0)
      return result;
LABEL_19:
    result = *((double *)a2 + 9);
    *((_DWORD *)this + 22) |= 0x80u;
    *((double *)this + 9) = result;
  }
  return result;
}

void sub_18D11E750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::~GEOMapFeatureBuildingSection(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  *(_QWORD *)this = &off_1E25BCED8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::~GEOMapFeatureBuildingSection(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = &off_1E25BCED8;
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 84) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_BYTE *)(v1 + 80) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if ((*(_WORD *)(this + 88) & 0x1FE) != 0)
  {
    *(_BYTE *)(this + 80) = 0;
    *(_OWORD *)(this + 48) = 0u;
    *(_OWORD *)(this + 64) = 0u;
    *(_OWORD *)(this + 32) = 0u;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  unsigned __int8 *v20;
  int v21;
  _BYTE *v22;
  unint64_t v23;
  _BYTE *v24;
  char *v25;
  unsigned int v26;
  _BYTE *v27;
  uint64_t result;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  unsigned int v32[2];

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_49;
        while (1)
        {
          v8 = *((_DWORD *)this + 5);
          v9 = *((int *)this + 4);
          if ((int)v9 >= v8)
          {
            if (v8 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v8 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v8 + 1;
            v11 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
            *(_QWORD *)v11 = &off_1E25BC7D0;
            *((_QWORD *)v11 + 1) = 0;
            *((_QWORD *)v11 + 2) = 0;
            *((_QWORD *)v11 + 3) = 0;
            v12 = *((_QWORD *)this + 1);
            v13 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v13 + 1;
            *(_QWORD *)(v12 + 8 * v13) = v11;
          }
          else
          {
            v10 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v9 + 1;
            v11 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v10 + 8 * v9);
          }
          v32[0] = 0;
          v14 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32))return 0;
          }
          else
          {
            v32[0] = *v14;
            *((_QWORD *)a2 + 1) = v14 + 1;
          }
          v15 = *((_DWORD *)a2 + 14);
          v16 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v15 + 1;
          if (v15 >= v16)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v11, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v17 = *((_DWORD *)a2 + 14);
          v18 = __OFSUB__(v17, 1);
          v19 = v17 - 1;
          if (v19 < 0 == v18)
            *((_DWORD *)a2 + 14) = v19;
          v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v20 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v21 = *v20;
          if (v21 != 10)
            break;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        if (v21 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
        goto LABEL_28;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_49;
LABEL_28:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v32;
        *((_DWORD *)this + 22) |= 2u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_33:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v32;
        *((_DWORD *)this + 22) |= 4u;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v23 || *v24 != 32)
          continue;
        v25 = v24 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_39:
        v32[0] = 0;
        if ((unint64_t)v25 >= v23 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
          if (!(_DWORD)result)
            return result;
          v26 = v32[0];
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v23 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v25;
          v27 = v25 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_BYTE *)this + 80) = v26 != 0;
        *((_DWORD *)this + 22) |= 8u;
        if ((unint64_t)v27 >= v23 || *v27 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_57:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v32;
        *((_DWORD *)this + 22) |= 0x10u;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_61:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v32;
        *((_DWORD *)this + 22) |= 0x20u;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_65:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v32;
        *((_DWORD *)this + 22) |= 0x40u;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_69:
        *(_QWORD *)v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v32;
        *((_DWORD *)this + 22) |= 0x80u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_33;
        goto LABEL_49;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_49;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_57;
        goto LABEL_49;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_61;
        goto LABEL_49;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_65;
        goto LABEL_49;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_49;
        goto LABEL_69;
      default:
        v7 = TagFallback & 7;
LABEL_49:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 32), a3);
    v7 = *(_DWORD *)(v5 + 88);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0)
        goto LABEL_7;
      goto LABEL_14;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0)
      goto LABEL_8;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 80), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x10) == 0)
  {
LABEL_8:
    if ((v7 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x20) == 0)
  {
LABEL_9:
    if ((v7 & 0x40) == 0)
      goto LABEL_10;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x40) == 0)
  {
LABEL_10:
    if ((v7 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 72), a3);
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 64), a3);
  if ((*(_DWORD *)(v5 + 88) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 72), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = *((_DWORD *)this + 22);
  if ((v1 & 0x1FE) != 0)
  {
    v2 = (v1 << 30 >> 31) & 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v2 += 2;
    if ((v1 & 0x10) != 0)
      v2 += 9;
    if ((v1 & 0x20) != 0)
      v2 += 9;
    if ((v1 & 0x40) != 0)
      v2 += 9;
    if ((v1 & 0x80) != 0)
      v3 = v2 + 9;
    else
      v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  v4 = *((unsigned int *)this + 4);
  v5 = (v4 + v3);
  if ((int)v4 >= 1)
  {
    v6 = *((_QWORD *)this + 1);
    do
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)v6 + 28);
      if (*(_BYTE *)(*(_QWORD *)v6 + 28))
      {
        if ((v7 & 2) != 0)
          v7 = ((v7 << 31 >> 31) & 9) + 9;
        else
          v7 = (v7 << 31 >> 31) & 9;
      }
      *(_DWORD *)(*(_QWORD *)v6 + 24) = v7;
      v5 = (v5 + v7 + 1);
      v6 += 8;
      --v4;
    }
    while (v4);
  }
  *((_DWORD *)this + 21) = v5;
  return v5;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  int v11;
  int v12;

  if (a2 != this)
  {
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    v5 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    v6 = *((_BYTE *)this + 80);
    *((_BYTE *)this + 80) = *((_BYTE *)a2 + 80);
    *((_BYTE *)a2 + 80) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    result = *((double *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((double *)a2 + 9) = result;
    v11 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
    v12 = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v12;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureBuildingSection");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::SharedCtor(_QWORD *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::GEOMapFeatureBuilding(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E25BC500;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(this, a2);
  return this;
}

void sub_18D11F184(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection **)(*((_QWORD *)a2 + 1)
                                                                                              + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)(v9 + 8) = 0;
        *(_QWORD *)(v9 + 16) = 0;
        *(_QWORD *)v9 = &off_1E25BCED8;
        *(_DWORD *)(v9 + 24) = 0;
        *(_DWORD *)(v9 + 84) = 0;
        *(_DWORD *)(v9 + 88) = 0;
        *(_OWORD *)(v9 + 32) = 0u;
        *(_OWORD *)(v9 + 48) = 0u;
        *(_OWORD *)(v9 + 64) = 0u;
        *(_BYTE *)(v9 + 80) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  v12 = *((_DWORD *)a2 + 13);
  if ((v12 & 0x1FE) != 0)
  {
    if ((v12 & 2) != 0)
    {
      v13 = *((_QWORD *)a2 + 4);
      *((_DWORD *)this + 13) |= 2u;
      *((_QWORD *)this + 4) = v13;
      v12 = *((_DWORD *)a2 + 13);
    }
    if ((v12 & 4) != 0)
    {
      v14 = *((_QWORD *)a2 + 5);
      *((_DWORD *)this + 13) |= 4u;
      *((_QWORD *)this + 5) = v14;
    }
  }
}

void sub_18D11F344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::~GEOMapFeatureBuilding(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  *(_QWORD *)this = &off_1E25BC500;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::~GEOMapFeatureBuilding(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BC500;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if ((*(_WORD *)(this + 52) & 0x1FE) != 0)
  {
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  unsigned __int8 *v25;
  int v26;
  char *v27;
  _BYTE *v28;
  uint64_t result;
  unsigned __int8 *v30;
  unsigned int v31;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 32);
  v6 = (unint64_t *)((char *)this + 40);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v7;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v7 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
      {
        v10 = TagFallback & 7;
        if (v10 == 2)
        {
          while (1)
          {
            v13 = *((_DWORD *)this + 5);
            v14 = *((int *)this + 4);
            if ((int)v14 >= v13)
            {
              if (v13 == *((_DWORD *)this + 6))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                v13 = *((_DWORD *)this + 5);
              }
              *((_DWORD *)this + 5) = v13 + 1;
              v16 = operator new();
              *(_QWORD *)(v16 + 8) = 0;
              *(_QWORD *)(v16 + 16) = 0;
              *(_QWORD *)v16 = &off_1E25BCED8;
              *(_DWORD *)(v16 + 24) = 0;
              *(_DWORD *)(v16 + 84) = 0;
              *(_DWORD *)(v16 + 88) = 0;
              *(_OWORD *)(v16 + 32) = 0u;
              *(_OWORD *)(v16 + 48) = 0u;
              *(_OWORD *)(v16 + 64) = 0u;
              *(_BYTE *)(v16 + 80) = 0;
              v17 = *((_QWORD *)this + 1);
              v18 = *((int *)this + 4);
              *((_DWORD *)this + 4) = v18 + 1;
              *(_QWORD *)(v17 + 8 * v18) = v16;
            }
            else
            {
              v15 = *((_QWORD *)this + 1);
              *((_DWORD *)this + 4) = v14 + 1;
              v16 = *(_QWORD *)(v15 + 8 * v14);
            }
            v31 = 0;
            v19 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
            }
            else
            {
              v31 = *v19;
              *((_QWORD *)a2 + 1) = v19 + 1;
            }
            v20 = *((_DWORD *)a2 + 14);
            v21 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v20 + 1;
            if (v20 >= v21)
              return 0;
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)v16, a2)|| !*((_BYTE *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            v22 = *((_DWORD *)a2 + 14);
            v23 = __OFSUB__(v22, 1);
            v24 = v22 - 1;
            if (v24 < 0 == v23)
              *((_DWORD *)a2 + 14) = v24;
            v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v11 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v25 >= v11)
              goto LABEL_2;
            v26 = *v25;
            if (v26 != 10)
            {
              if (v26 != 16)
                goto LABEL_2;
              v27 = (char *)(v25 + 1);
              *((_QWORD *)a2 + 1) = v27;
              goto LABEL_32;
            }
            *((_QWORD *)a2 + 1) = v25 + 1;
          }
        }
        goto LABEL_36;
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_36;
      v27 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_32:
      if ((unint64_t)v27 >= v11 || *v27 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!(_DWORD)result)
          return result;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v5 = *v27;
        v28 = v27 + 1;
        *((_QWORD *)a2 + 1) = v28;
      }
      *((_DWORD *)this + 13) |= 2u;
      if ((unint64_t)v28 < v11 && *v28 == 24)
      {
        v12 = v28 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_46:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v12;
          v30 = (unsigned __int8 *)(v12 + 1);
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 13) |= 4u;
        if (v30 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_46;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_36:
    if (v10 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
    v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x1FE) == 0)
  {
    v3 = 0;
    goto LABEL_8;
  }
  if ((v2 & 2) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 4))
       + 1;
    if ((*((_DWORD *)this + 13) & 4) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((v2 & 4) != 0)
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
LABEL_8:
  v4 = *((_DWORD *)this + 4);
  v5 = (v4 + v3);
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection **)(*((_QWORD *)this + 1) + 8 * v6));
      v8 = (int)v7;
      if (v7 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      else
        v9 = 1;
      v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != this)
  {
    v3 = this;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_QWORD *)v3 + 4);
    *((_QWORD *)v3 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    v5 = *((_QWORD *)v3 + 5);
    *((_QWORD *)v3 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureBuilding");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[7] = 0;
  this[8] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::GEOMapBuildingData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  *((_QWORD *)this + 2) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_QWORD *)this = &off_1E25BBB28;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(this, a2);
  return this;
}

void sub_18D11FAF0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = v3;
  if (*v4)
    MEMORY[0x18D78B5BC](*v4, 0x1000C8000313F17);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v16;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v17;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v18;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)(v11 + 8) = 0;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)v11 = &off_1E25BC500;
        *(_DWORD *)(v11 + 24) = 0;
        *(_QWORD *)(v11 + 40) = 0;
        *(_QWORD *)(v11 + 48) = 0;
        *(_QWORD *)(v11 + 32) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  v14 = *((_DWORD *)a2 + 12);
  if (v14)
  {
    sub_18D09EC0C((_DWORD *)this + 10, *((_DWORD *)this + 12) + v14);
    v4 = (uint64_t)memcpy((void *)(*((_QWORD *)this + 5) + 8 * *((int *)this + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  LOBYTE(v15) = *((_BYTE *)a2 + 68);
  if ((_BYTE)v15)
  {
    if ((*((_BYTE *)a2 + 68) & 1) != 0)
    {
      *((_DWORD *)this + 17) |= 1u;
      v16 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
      if (!v16)
      {
        v4 = operator new();
        v16 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
        *(_QWORD *)v4 = &off_1E25BDBF8;
        *(_OWORD *)(v4 + 8) = 0u;
        *(_OWORD *)(v4 + 24) = 0u;
        *((_QWORD *)this + 1) = v4;
      }
      v17 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v17)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
        v17 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_
                                                                              + 8);
      }
      result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v16, v17);
      v15 = *((_DWORD *)a2 + 17);
    }
    if ((v15 & 8) != 0)
    {
      *((_DWORD *)this + 17) |= 8u;
      v18 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)*((_QWORD *)this + 7);
      if (!v18)
      {
        v4 = operator new();
        v18 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)v4;
        *(_QWORD *)v4 = &off_1E25BC7D0;
        *(_QWORD *)(v4 + 8) = 0;
        *(_QWORD *)(v4 + 16) = 0;
        *(_QWORD *)(v4 + 24) = 0;
        *((_QWORD *)this + 7) = v4;
      }
      v19 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)*((_QWORD *)a2 + 7);
      if (!v19)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
        v19 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_
                                                                                            + 56);
      }
      return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(v18, v19);
    }
  }
  return result;
}

void sub_18D11FDAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::~GEOMapBuildingData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BBB28;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SharedDtor(this);
  v2 = *((_QWORD *)this + 5);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8000313F17);
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::~GEOMapBuildingData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 7);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BBB28;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 68);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 68) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
      }
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  _BYTE *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v46;
  char *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t result;
  int v53[2];
  unsigned int v54[2];

  v4 = (_DWORD *)((char *)this + 40);
  v5 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)((char *)this + 16);
LABEL_2:
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_21;
        *((_DWORD *)this + 17) |= 1u;
        v9 = *((_QWORD *)this + 1);
        if (!v9)
        {
          v9 = operator new();
          *(_QWORD *)v9 = &off_1E25BDBF8;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *((_QWORD *)this + 1) = v9;
        }
        v54[0] = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54))return 0;
        }
        else
        {
          v54[0] = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v9, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 18)
          continue;
        goto LABEL_47;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_21;
        while (2)
        {
          v24 = *((_DWORD *)this + 7);
          v25 = *((int *)this + 6);
          if ((int)v25 >= v24)
          {
            if (v24 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              v24 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v24 + 1;
            v27 = operator new();
            *(_QWORD *)(v27 + 8) = 0;
            *(_QWORD *)(v27 + 16) = 0;
            *(_QWORD *)v27 = &off_1E25BC500;
            *(_DWORD *)(v27 + 24) = 0;
            *(_QWORD *)(v27 + 40) = 0;
            *(_QWORD *)(v27 + 48) = 0;
            *(_QWORD *)(v27 + 32) = 0;
            v28 = *((_QWORD *)this + 2);
            v29 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v29 + 1;
            *(_QWORD *)(v28 + 8 * v29) = v27;
          }
          else
          {
            v26 = *((_QWORD *)this + 2);
            *((_DWORD *)this + 6) = v25 + 1;
            v27 = *(_QWORD *)(v26 + 8 * v25);
          }
          v54[0] = 0;
          v30 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54))return 0;
          }
          else
          {
            v54[0] = *v30;
            *((_QWORD *)a2 + 1) = v30 + 1;
          }
          v31 = *((_DWORD *)a2 + 14);
          v32 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v31 + 1;
          if (v31 >= v32)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)v27, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v33 = *((_DWORD *)a2 + 14);
          v17 = __OFSUB__(v33, 1);
          v34 = v33 - 1;
          if (v34 < 0 == v17)
            *((_DWORD *)a2 + 14) = v34;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v19 < v11)
          {
            v35 = *v19;
            if (v35 == 18)
            {
LABEL_47:
              *((_QWORD *)a2 + 1) = v19 + 1;
              continue;
            }
            goto LABEL_64;
          }
          goto LABEL_2;
        }
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 2)
        {
          v53[0] = 0;
          v13 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v53))return 0;
          }
          else
          {
            v53[0] = *v13;
            *((_QWORD *)a2 + 1) = v13 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            *(_QWORD *)v54 = 0;
            v20 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v54))return 0;
            }
            else
            {
              *(_QWORD *)v54 = *v20;
              *((_QWORD *)a2 + 1) = v20 + 1;
            }
            v21 = *((_DWORD *)this + 12);
            if (v21 == *((_DWORD *)this + 13))
            {
              sub_18D09EC0C(v4, v21 + 1);
              v21 = *((_DWORD *)this + 12);
            }
            v22 = *(_QWORD *)v54;
            v23 = *((_QWORD *)this + 5);
            *((_DWORD *)this + 12) = v21 + 1;
            *(_QWORD *)(v23 + 8 * v21) = v22;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          while (1)
          {
            v19 = (_BYTE *)*((_QWORD *)a2 + 1);
            v11 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v19 >= v11)
              goto LABEL_2;
            v35 = *v19;
            if (v35 == 34)
              break;
LABEL_64:
            if (v35 != 24)
              goto LABEL_2;
            v12 = v19 + 1;
            *((_QWORD *)a2 + 1) = v12;
LABEL_66:
            *(_QWORD *)v53 = 0;
            if ((unint64_t)v12 >= v11 || *v12 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v53))return 0;
            }
            else
            {
              *(_QWORD *)v53 = *v12;
              *((_QWORD *)a2 + 1) = v12 + 1;
            }
            v36 = *((_DWORD *)this + 12);
            v37 = *((_DWORD *)this + 13);
            if (v36 == v37)
            {
              sub_18D09EC0C(v4, v36 + 1);
              v36 = *((_DWORD *)this + 12);
              v37 = *((_DWORD *)this + 13);
            }
            v38 = *(_QWORD *)v53;
            v39 = *((_QWORD *)this + 5);
            v40 = v36 + 1;
            *((_DWORD *)this + 12) = v36 + 1;
            *(_QWORD *)(v39 + 8 * v36) = v38;
            if (v37 - (v36 + 1) >= 1)
            {
              v41 = v37 - v36;
              do
              {
                v42 = (_BYTE *)*((_QWORD *)a2 + 1);
                v43 = *((_QWORD *)a2 + 2);
                if ((unint64_t)v42 >= v43 || *v42 != 24)
                  break;
                *((_QWORD *)a2 + 1) = v42 + 1;
                if ((unint64_t)(v42 + 1) >= v43 || (char)v42[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v53))return 0;
                  v40 = *((_DWORD *)this + 12);
                }
                else
                {
                  *(_QWORD *)v53 = v42[1];
                  *((_QWORD *)a2 + 1) = v42 + 2;
                }
                if (v40 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v54);
                  v40 = *((_DWORD *)this + 12);
                }
                v44 = *(_QWORD *)v53;
                v45 = *((_QWORD *)this + 5);
                *((_DWORD *)this + 12) = v40 + 1;
                *(_QWORD *)(v45 + 8 * v40) = v44;
                --v41;
                ++v40;
              }
              while (v41 > 1);
            }
          }
          *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_87:
          *((_DWORD *)this + 17) |= 8u;
          v46 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)*((_QWORD *)this + 7);
          if (!v46)
          {
            v46 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
            *(_QWORD *)v46 = &off_1E25BC7D0;
            *((_QWORD *)v46 + 1) = 0;
            *((_QWORD *)v46 + 2) = 0;
            *((_QWORD *)v46 + 3) = 0;
            *((_QWORD *)this + 7) = v46;
          }
          v54[0] = 0;
          v47 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v54))return 0;
          }
          else
          {
            v54[0] = *v47;
            *((_QWORD *)a2 + 1) = v47 + 1;
          }
          v48 = *((_DWORD *)a2 + 14);
          v49 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v48 + 1;
          if (v48 >= v49)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v46, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v50 = *((_DWORD *)a2 + 14);
          v17 = __OFSUB__(v50, 1);
          v51 = v50 - 1;
          if (v51 < 0 == v17)
            *((_DWORD *)a2 + 14) = v51;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          v12 = (char *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          goto LABEL_66;
        }
LABEL_21:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_21;
        goto LABEL_87;
      default:
        v8 = TagFallback & 7;
        goto LABEL_21;
    }
  }
}

void sub_18D120684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  if ((*(_BYTE *)(this + 68) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(_BYTE *)(v5 + 68) & 8) != 0)
  {
    v9 = *(_QWORD *)(v5 + 56);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t result;

  if (!*((_BYTE *)this + 68))
  {
    v2 = 0;
    goto LABEL_22;
  }
  if ((*((_BYTE *)this + 68) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 68) & 8) == 0)
      goto LABEL_22;
    goto LABEL_15;
  }
  v3 = *((_QWORD *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 8);
  }
  v4 = *(unsigned __int8 *)(v3 + 36);
  if (*(_BYTE *)(v3 + 36))
  {
    v5 = (v4 << 31 >> 31) & 9;
    if ((v4 & 2) != 0)
      v5 += 9;
    if ((v4 & 4) != 0)
      v4 = v5 + 9;
    else
      v4 = v5;
  }
  *(_DWORD *)(v3 + 32) = v4;
  v2 = v4 + 2;
  if ((*((_DWORD *)this + 17) & 8) != 0)
  {
LABEL_15:
    v6 = *((_QWORD *)this + 7);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 56);
    }
    v7 = *(unsigned __int8 *)(v6 + 28);
    if (*(_BYTE *)(v6 + 28))
    {
      if ((v7 & 2) != 0)
        v7 = ((v7 << 31 >> 31) & 9) + 9;
      else
        v7 = (v7 << 31 >> 31) & 9;
    }
    *(_DWORD *)(v6 + 24) = v7;
    v2 += v7 + 2;
  }
LABEL_22:
  v8 = *((_DWORD *)this + 6);
  v9 = v8 + v2;
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding **)(*((_QWORD *)this + 2) + 8 * v10));
      v12 = (int)v11;
      if (v11 >= 0x80)
        v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      else
        v13 = 1;
      v9 += v12 + v13;
      ++v10;
    }
    while (v10 < *((int *)this + 6));
  }
  LODWORD(v14) = *((_DWORD *)this + 12);
  if ((int)v14 < 1)
  {
    v16 = 0;
  }
  else
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v16 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)this + 5) + 8 * v15++));
      v14 = *((int *)this + 12);
    }
    while (v15 < v14);
  }
  result = (v16 + v9 + v14);
  *((_DWORD *)this + 16) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;

  if (a2 != this)
  {
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    result = *((double *)a2 + 6);
    *((_QWORD *)a2 + 5) = v5;
    v7 = *((_QWORD *)this + 6);
    *((double *)this + 6) = result;
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    LODWORD(v8) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    LODWORD(v8) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapBuildingData");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch_BranchType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::SharedCtor(_QWORD *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::GEOMapFeatureTropicalSavannaBranch(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E25BD220;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(this, a2);
  return this;
}

void sub_18D120AE4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
        *(_QWORD *)v9 = &off_1E25BC7D0;
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *((_QWORD *)v9 + 3) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  v12 = *((_DWORD *)a2 + 13);
  if ((v12 & 0x1FE) != 0)
  {
    if ((v12 & 2) != 0)
    {
      v13 = *((_DWORD *)a2 + 8);
      if (v13 >= 4)
        __assert_rtn("set_branch_type", "CoreNavigationCLPPrivateDataShared.pb.h", 26178, "::CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch_BranchType_IsValid(value)");
      *((_DWORD *)this + 13) |= 2u;
      *((_DWORD *)this + 8) = v13;
      v12 = *((_DWORD *)a2 + 13);
    }
    if ((v12 & 4) != 0)
    {
      v15 = *((_DWORD *)a2 + 9);
      *((_DWORD *)this + 13) |= 4u;
      *((_DWORD *)this + 9) = v15;
      v12 = *((_DWORD *)a2 + 13);
      if ((v12 & 8) == 0)
      {
LABEL_17:
        if ((v12 & 0x10) == 0)
          return;
        goto LABEL_18;
      }
    }
    else if ((v12 & 8) == 0)
    {
      goto LABEL_17;
    }
    v16 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 8u;
    *((_DWORD *)this + 10) = v16;
    if ((*((_DWORD *)a2 + 13) & 0x10) != 0)
    {
LABEL_18:
      v14 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 13) |= 0x10u;
      *((_DWORD *)this + 11) = v14;
    }
  }
}

void sub_18D120CF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::~GEOMapFeatureTropicalSavannaBranch(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  *(_QWORD *)this = &off_1E25BD220;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::~GEOMapFeatureTropicalSavannaBranch(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BD220;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if ((*(_WORD *)(this + 52) & 0x1FE) != 0)
  {
    *(_QWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 40) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  unint64_t v23;
  unsigned __int8 *v24;
  int v25;
  char *v26;
  unsigned int v27;
  unint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t result;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  unsigned __int8 *v36;
  unsigned int v37;
  unsigned int v38;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 36);
  v6 = (unsigned int *)((char *)this + 40);
  v7 = (unsigned int *)((char *)this + 44);
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_37;
        while (1)
        {
          v11 = *((_DWORD *)this + 5);
          v12 = *((int *)this + 4);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v11 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v11 + 1;
            v14 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
            *(_QWORD *)v14 = &off_1E25BC7D0;
            *((_QWORD *)v14 + 1) = 0;
            *((_QWORD *)v14 + 2) = 0;
            *((_QWORD *)v14 + 3) = 0;
            v15 = *((_QWORD *)this + 1);
            v16 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v16 + 1;
            *(_QWORD *)(v15 + 8 * v16) = v14;
          }
          else
          {
            v13 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v12 + 1;
            v14 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v13 + 8 * v12);
          }
          v38 = 0;
          v17 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38))return 0;
          }
          else
          {
            v38 = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          v18 = *((_DWORD *)a2 + 14);
          v19 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v18 + 1;
          if (v18 >= v19)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v14, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v20 = *((_DWORD *)a2 + 14);
          v21 = __OFSUB__(v20, 1);
          v22 = v20 - 1;
          if (v22 < 0 == v21)
            *((_DWORD *)a2 + 14) = v22;
          v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v23 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v24 >= v23)
            goto LABEL_2;
          v25 = *v24;
          if (v25 != 10)
            break;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        if (v25 != 16)
          continue;
        v26 = (char *)(v24 + 1);
        *((_QWORD *)a2 + 1) = v26;
        goto LABEL_29;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
LABEL_29:
        v37 = 0;
        if ((unint64_t)v26 >= v23 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37);
          if (!(_DWORD)result)
            return result;
          v27 = v37;
        }
        else
        {
          v27 = *v26;
          *((_QWORD *)a2 + 1) = v26 + 1;
        }
        if (v27 <= 3)
        {
          *((_DWORD *)this + 13) |= 2u;
          *((_DWORD *)this + 8) = v27;
        }
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v33 >= v28 || *v33 != 24)
          continue;
        v29 = v33 + 1;
        *((_QWORD *)a2 + 1) = v29;
LABEL_50:
        if ((unint64_t)v29 >= v28 || *v29 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v29;
          v34 = v29 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v34 >= v28 || *v34 != 32)
          continue;
        v30 = v34 + 1;
        *((_QWORD *)a2 + 1) = v30;
LABEL_58:
        if ((unint64_t)v30 >= v28 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v30;
          v35 = v30 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v35 >= v28 || *v35 != 40)
          continue;
        v31 = v35 + 1;
        *((_QWORD *)a2 + 1) = v31;
LABEL_66:
        if ((unint64_t)v31 >= v28 || *v31 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v36 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v28 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v31;
          v36 = (unsigned __int8 *)(v31 + 1);
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if (v36 != (unsigned __int8 *)v28 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v29 = (char *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_50;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v30 = (char *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_37;
        v31 = (char *)*((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        goto LABEL_66;
      default:
        v10 = TagFallback & 7;
LABEL_37:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  int v7;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
    v7 = *(_DWORD *)(v5 + 52);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0)
        goto LABEL_7;
      goto LABEL_11;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int v14;

  v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x1FE) == 0)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((v2 & 2) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 4) == 0)
        goto LABEL_17;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 13);
      if ((v2 & 4) == 0)
        goto LABEL_17;
    }
    else
    {
      v3 = 2;
      if ((v2 & 4) == 0)
        goto LABEL_17;
    }
  }
  else
  {
    v3 = 0;
    if ((v2 & 4) == 0)
      goto LABEL_17;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_17:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 0x10) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v7 >= 0x80)
  {
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v8 = 2;
  }
  v3 += v8;
  if ((v2 & 0x10) != 0)
  {
LABEL_24:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v9 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    else
      v10 = 2;
    v3 += v10;
  }
LABEL_28:
  v11 = *((unsigned int *)this + 4);
  result = (v11 + v3);
  if ((int)v11 >= 1)
  {
    v13 = *((_QWORD *)this + 1);
    do
    {
      v14 = *(unsigned __int8 *)(*(_QWORD *)v13 + 28);
      if (*(_BYTE *)(*(_QWORD *)v13 + 28))
      {
        if ((v14 & 2) != 0)
          v14 = ((v14 << 31 >> 31) & 9) + 9;
        else
          v14 = (v14 << 31 >> 31) & 9;
      }
      *(_DWORD *)(*(_QWORD *)v13 + 24) = v14;
      result = (result + v14 + 1);
      v13 += 8;
      --v11;
    }
    while (v11);
  }
  *((_DWORD *)this + 12) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  if (a2 != this)
  {
    v3 = this;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    v5 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    v7 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
    v8 = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v8;
    v9 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v9;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBranch");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  double result;

  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::GEOMapFeatureTropicalSavannaBoundingBox(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  *(_QWORD *)this = &off_1E25BD298;
  *((_QWORD *)this + 8) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(this, a2);
  return this;
}

void sub_18D12166C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 5);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  double result;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _BYTE v14[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(*((_QWORD *)a2 + 5) + 8 * v5);
      v7 = *((_DWORD *)this + 13);
      v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)((char *)this + 40));
          v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        v10 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
        *(_QWORD *)v10 = &off_1E25BC7D0;
        *((_QWORD *)v10 + 1) = 0;
        *((_QWORD *)v10 + 2) = 0;
        *((_QWORD *)v10 + 3) = 0;
        v11 = *((_QWORD *)this + 5);
        v12 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v8 + 1;
        v10 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v9 + 8 * v8);
      }
      result = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 68);
  if ((_BYTE)v13)
  {
    if ((*((_BYTE *)a2 + 68) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 17) |= 1u;
      *((double *)this + 1) = result;
      v13 = *((_DWORD *)a2 + 17);
      if ((v13 & 2) == 0)
      {
LABEL_14:
        if ((v13 & 4) == 0)
          goto LABEL_15;
        goto LABEL_20;
      }
    }
    else if ((*((_BYTE *)a2 + 68) & 2) == 0)
    {
      goto LABEL_14;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 17) |= 2u;
    *((double *)this + 2) = result;
    v13 = *((_DWORD *)a2 + 17);
    if ((v13 & 4) == 0)
    {
LABEL_15:
      if ((v13 & 8) == 0)
        return result;
      goto LABEL_16;
    }
LABEL_20:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 17) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 17) & 8) == 0)
      return result;
LABEL_16:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 17) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18D121858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::~GEOMapFeatureTropicalSavannaBoundingBox(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  *(_QWORD *)this = &off_1E25BD298;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 5);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::~GEOMapFeatureTropicalSavannaBoundingBox(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BD298;
  *(_QWORD *)(v1 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 68))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if (*(int *)(this + 48) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 48));
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 68) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unsigned __int8 *v5;
  uint64_t TagFallback;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  uint64_t result;
  unsigned int v26[2];

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)((char *)this + 40);
  while (1)
  {
    v5 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || (char)*v5 < 0)
      break;
    TagFallback = *v5;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((_QWORD *)a2 + 1) = v5 + 1;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_30;
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v26;
        *((_DWORD *)this + 17) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_30;
LABEL_15:
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v26;
        *((_DWORD *)this + 17) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_20:
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v26;
        *((_DWORD *)this + 17) |= 4u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_25:
        *(_QWORD *)v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v26;
        *((_DWORD *)this + 17) |= 8u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 42)
          continue;
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_20;
        goto LABEL_30;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_25;
        goto LABEL_30;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_30;
        goto LABEL_34;
      default:
        v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    do
    {
      *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_34:
      v12 = *((_DWORD *)this + 13);
      v13 = *((int *)this + 12);
      if ((int)v13 >= v12)
      {
        if (v12 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
          v12 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v12 + 1;
        v15 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)operator new();
        *(_QWORD *)v15 = &off_1E25BC7D0;
        *((_QWORD *)v15 + 1) = 0;
        *((_QWORD *)v15 + 2) = 0;
        *((_QWORD *)v15 + 3) = 0;
        v16 = *((_QWORD *)this + 5);
        v17 = *((int *)this + 12);
        *((_DWORD *)this + 12) = v17 + 1;
        *(_QWORD *)(v16 + 8 * v17) = v15;
      }
      else
      {
        v14 = *((_QWORD *)this + 5);
        *((_DWORD *)this + 12) = v13 + 1;
        v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v14 + 8 * v13);
      }
      v26[0] = 0;
      v18 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26))
          return 0;
      }
      else
      {
        v26[0] = *v18;
        *((_QWORD *)a2 + 1) = v18 + 1;
      }
      v19 = *((_DWORD *)a2 + 14);
      v20 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v19 + 1;
      if (v19 >= v20)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v15, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v21 = *((_DWORD *)a2 + 14);
      v22 = __OFSUB__(v21, 1);
      v23 = v21 - 1;
      if (v23 < 0 == v22)
        *((_DWORD *)a2 + 14) = v23;
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v24 = (_BYTE *)*((_QWORD *)a2 + 2);
    }
    while (v11 < v24 && *v11 == 42);
    if (v11 == v24 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
  TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if ((_DWORD)TagFallback)
    goto LABEL_7;
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0)
LABEL_5:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
LABEL_6:
  if (*(int *)(v5 + 48) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v1 = *((unsigned __int8 *)this + 68);
  if (*((_BYTE *)this + 68))
  {
    v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  v3 = *((unsigned int *)this + 12);
  v4 = (v3 + v1);
  if ((int)v3 >= 1)
  {
    v5 = *((_QWORD *)this + 5);
    do
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)v5 + 28);
      if (*(_BYTE *)(*(_QWORD *)v5 + 28))
      {
        if ((v6 & 2) != 0)
          v6 = ((v6 << 31 >> 31) & 9) + 9;
        else
          v6 = (v6 << 31 >> 31) & 9;
      }
      *(_DWORD *)(*(_QWORD *)v5 + 24) = v6;
      v4 = (v4 + v6 + 1);
      v5 += 8;
      --v3;
    }
    while (v3);
  }
  *((_DWORD *)this + 16) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v8 = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    v9 = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBoundingBox");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::SharedCtor(uint64_t this)
{
  *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::GEOMapFeatureTropicalSavanna_TreeFeatures(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  *(_QWORD *)this = &off_1E25BD310;
  *((_WORD *)this + 4) = 0;
  *((_DWORD *)this + 3) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(this, a2);
  return this;
}

void sub_18D122080(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  int v4;
  char v5;
  char v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v5 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v5;
      v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_BYTE *)a2 + 9);
      *((_DWORD *)this + 4) |= 2u;
      *((_BYTE *)this + 9) = v6;
    }
  }
}

void sub_18D12213C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::~GEOMapFeatureTropicalSavanna_TreeFeatures(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  *(_QWORD *)this = &off_1E25BD310;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::~GEOMapFeatureTropicalSavanna_TreeFeatures(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BD310;
  *(_WORD *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v16 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
        if (!(_DWORD)result)
          return result;
        v10 = v16;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v10 = *v9;
        v11 = v9 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      *((_BYTE *)this + 8) = v10 != 0;
      *((_DWORD *)this + 4) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_23:
        v15 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_BYTE *)this + 9) = v12 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_23;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  unsigned int v1;
  uint64_t v2;

  v1 = 2 * (*((_DWORD *)this + 4) & 1);
  if ((*((_DWORD *)this + 4) & 2) != 0)
    v1 += 2;
  if (*((_DWORD *)this + 4))
    v2 = v1;
  else
    v2 = 0;
  *((_DWORD *)this + 3) = v2;
  return v2;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  char v2;
  char v3;
  int v4;
  int v5;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna.TreeFeatures");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::GEOMapFeatureTropicalSavanna(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *(_QWORD *)this = &off_1E25BCF50;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(this, a2);
  return this;
}

void sub_18D1225F4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  uint64_t v4;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *v20;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *v21;
  _BYTE v22[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch **)(*((_QWORD *)a2 + 2) + 8 * v5);
      v7 = *((_DWORD *)this + 7);
      v8 = *((int *)this + 6);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)((char *)this + 16));
          v7 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)(v10 + 8) = 0;
        *(_QWORD *)(v10 + 16) = 0;
        *(_QWORD *)v10 = &off_1E25BD220;
        *(_DWORD *)(v10 + 24) = 0;
        *(_QWORD *)(v10 + 40) = 0;
        *(_QWORD *)(v10 + 48) = 0;
        *(_QWORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)this + 2);
        v12 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 6));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 76);
  if (!(_BYTE)v13)
    return;
  if ((*((_BYTE *)a2 + 76) & 1) != 0)
  {
    *((_DWORD *)this + 19) |= 1u;
    v15 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)*((_QWORD *)this + 1);
    if (!v15)
    {
      v4 = operator new();
      v15 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)v4;
      *(_QWORD *)v4 = &off_1E25BD298;
      *(_QWORD *)(v4 + 64) = 0;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *(_OWORD *)(v4 + 40) = 0u;
      *(_DWORD *)(v4 + 56) = 0;
      *((_QWORD *)this + 1) = v4;
    }
    v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)*((_QWORD *)a2 + 1);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(v15, v16);
    v13 = *((_DWORD *)a2 + 19);
    if ((v13 & 4) == 0)
    {
LABEL_14:
      if ((v13 & 8) == 0)
        goto LABEL_15;
      goto LABEL_26;
    }
  }
  else if ((*((_BYTE *)a2 + 76) & 4) == 0)
  {
    goto LABEL_14;
  }
  v17 = *((_QWORD *)a2 + 5);
  *((_DWORD *)this + 19) |= 4u;
  *((_QWORD *)this + 5) = v17;
  v13 = *((_DWORD *)a2 + 19);
  if ((v13 & 8) == 0)
  {
LABEL_15:
    if ((v13 & 0x10) == 0)
      goto LABEL_16;
LABEL_28:
    v19 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 19) |= 0x10u;
    *((_DWORD *)this + 13) = v19;
    v13 = *((_DWORD *)a2 + 19);
    if ((v13 & 0x20) == 0)
    {
LABEL_17:
      if ((v13 & 0x40) == 0)
        return;
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_26:
  v18 = *((_DWORD *)a2 + 12);
  if (v18 >= 4)
    __assert_rtn("set_tree_type", "CoreNavigationCLPPrivateDataShared.pb.h", 26525, "::CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeType_IsValid(value)");
  *((_DWORD *)this + 19) |= 8u;
  *((_DWORD *)this + 12) = v18;
  v13 = *((_DWORD *)a2 + 19);
  if ((v13 & 0x10) != 0)
    goto LABEL_28;
LABEL_16:
  if ((v13 & 0x20) == 0)
    goto LABEL_17;
LABEL_29:
  *((_DWORD *)this + 19) |= 0x20u;
  v20 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)*((_QWORD *)this + 7);
  if (!v20)
  {
    v4 = operator new();
    v20 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)v4;
    *(_QWORD *)v4 = &off_1E25BD310;
    *(_WORD *)(v4 + 8) = 0;
    *(_DWORD *)(v4 + 12) = 0;
    *(_DWORD *)(v4 + 16) = 0;
    *((_QWORD *)this + 7) = v4;
  }
  v21 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)*((_QWORD *)a2 + 7);
  if (!v21)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v21 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 56);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(v20, v21);
  if ((*((_DWORD *)a2 + 19) & 0x40) != 0)
  {
LABEL_18:
    v14 = *((_QWORD *)a2 + 8);
    *((_DWORD *)this + 19) |= 0x40u;
    *((_QWORD *)this + 8) = v14;
  }
}

void sub_18D12290C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::~GEOMapFeatureTropicalSavanna(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  *(_QWORD *)this = &off_1E25BCF50;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::~GEOMapFeatureTropicalSavanna(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 7);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  result = 0.0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)v1 = &off_1E25BCF50;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 76);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 76) & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::Clear(this);
        v2 = *(_DWORD *)(v1 + 76);
      }
    }
    *(_QWORD *)(v1 + 40) = 0;
    *(_QWORD *)(v1 + 48) = 0;
    if ((v2 & 0x20) != 0)
    {
      v3 = *(_QWORD *)(v1 + 56);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 16))
          *(_WORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 16) = 0;
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  unint64_t *v5;
  unsigned int *v6;
  unint64_t *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  unint64_t v16;
  char *v17;
  int v18;
  unint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t result;
  unsigned int v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  _BYTE *v50;
  unsigned __int8 *v51;
  unsigned int v52;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)((char *)this + 16);
  v5 = (unint64_t *)((char *)this + 40);
  v6 = (unsigned int *)((char *)this + 52);
  v7 = (unint64_t *)((char *)this + 64);
  while (1)
  {
LABEL_2:
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_26;
        *((_DWORD *)this + 19) |= 1u;
        v11 = *((_QWORD *)this + 1);
        if (!v11)
        {
          v11 = operator new();
          *(_QWORD *)v11 = &off_1E25BD298;
          *(_QWORD *)(v11 + 64) = 0;
          *(_OWORD *)(v11 + 8) = 0u;
          *(_OWORD *)(v11 + 24) = 0u;
          *(_OWORD *)(v11 + 40) = 0u;
          *(_DWORD *)(v11 + 56) = 0;
          *((_QWORD *)this + 1) = v11;
        }
        v52 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0;
        }
        else
        {
          v52 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)v11, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v23 = *((_DWORD *)a2 + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 18)
          continue;
        goto LABEL_38;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_26;
        break;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_57;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_65;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 6u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_26;
        v18 = *((_DWORD *)this + 19);
        goto LABEL_83;
      case 7u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_97;
      default:
        v10 = TagFallback & 7;
LABEL_26:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    while (1)
    {
      v27 = *((_DWORD *)this + 7);
      v28 = *((int *)this + 6);
      if ((int)v28 >= v27)
      {
        if (v27 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
          v27 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v27 + 1;
        v30 = operator new();
        *(_QWORD *)(v30 + 8) = 0;
        *(_QWORD *)(v30 + 16) = 0;
        *(_QWORD *)v30 = &off_1E25BD220;
        *(_DWORD *)(v30 + 24) = 0;
        *(_QWORD *)(v30 + 40) = 0;
        *(_QWORD *)(v30 + 48) = 0;
        *(_QWORD *)(v30 + 32) = 0;
        v31 = *((_QWORD *)this + 2);
        v32 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v32 + 1;
        *(_QWORD *)(v31 + 8 * v32) = v30;
      }
      else
      {
        v29 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v28 + 1;
        v30 = *(_QWORD *)(v29 + 8 * v28);
      }
      v52 = 0;
      v33 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))
          return 0;
      }
      else
      {
        v52 = *v33;
        *((_QWORD *)a2 + 1) = v33 + 1;
      }
      v34 = *((_DWORD *)a2 + 14);
      v35 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v34 + 1;
      if (v34 >= v35)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)v30, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v36 = *((_DWORD *)a2 + 14);
      v24 = __OFSUB__(v36, 1);
      v37 = v36 - 1;
      if (v37 < 0 == v24)
        *((_DWORD *)a2 + 14) = v37;
      v26 = (_BYTE *)*((_QWORD *)a2 + 1);
      v13 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v26 >= v13)
        goto LABEL_2;
      v38 = *v26;
      if (v38 != 18)
        break;
LABEL_38:
      *((_QWORD *)a2 + 1) = v26 + 1;
    }
    if (v38 != 24)
      continue;
    v14 = v26 + 1;
    *((_QWORD *)a2 + 1) = v14;
LABEL_57:
    if ((unint64_t)v14 >= v13 || *v14 < 0)
    {
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
      if (!(_DWORD)result)
        return result;
      v39 = (_BYTE *)*((_QWORD *)a2 + 1);
      v13 = *((_QWORD *)a2 + 2);
    }
    else
    {
      *v5 = *v14;
      v39 = v14 + 1;
      *((_QWORD *)a2 + 1) = v39;
    }
    *((_DWORD *)this + 19) |= 4u;
    if ((unint64_t)v39 < v13 && *v39 == 32)
    {
      v15 = v39 + 1;
      *((_QWORD *)a2 + 1) = v15;
LABEL_65:
      v52 = 0;
      if ((unint64_t)v15 >= v13 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52);
        if (!(_DWORD)result)
          return result;
        v41 = v52;
      }
      else
      {
        v41 = *v15;
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v41 <= 3)
      {
        *((_DWORD *)this + 19) |= 8u;
        *((_DWORD *)this + 12) = v41;
      }
      v42 = (_BYTE *)*((_QWORD *)a2 + 1);
      v16 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v42 < v16 && *v42 == 40)
      {
        v17 = v42 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_75:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v43 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v17;
          v43 = v17 + 1;
          *((_QWORD *)a2 + 1) = v43;
        }
        v18 = *((_DWORD *)this + 19) | 0x10;
        *((_DWORD *)this + 19) = v18;
        if ((unint64_t)v43 < v16 && *v43 == 50)
        {
          *((_QWORD *)a2 + 1) = v43 + 1;
LABEL_83:
          *((_DWORD *)this + 19) = v18 | 0x20;
          v44 = *((_QWORD *)this + 7);
          if (!v44)
          {
            v44 = operator new();
            *(_QWORD *)v44 = &off_1E25BD310;
            *(_WORD *)(v44 + 8) = 0;
            *(_DWORD *)(v44 + 12) = 0;
            *(_DWORD *)(v44 + 16) = 0;
            *((_QWORD *)this + 7) = v44;
          }
          v52 = 0;
          v45 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v52))return 0;
          }
          else
          {
            v52 = *v45;
            *((_QWORD *)a2 + 1) = v45 + 1;
          }
          v46 = *((_DWORD *)a2 + 14);
          v47 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v46 + 1;
          if (v46 >= v47)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)v44, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v48 = *((_DWORD *)a2 + 14);
          v24 = __OFSUB__(v48, 1);
          v49 = v48 - 1;
          if (v49 < 0 == v24)
            *((_DWORD *)a2 + 14) = v49;
          v50 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v50 < v19 && *v50 == 56)
          {
            v20 = v50 + 1;
            *((_QWORD *)a2 + 1) = v20;
LABEL_97:
            if ((unint64_t)v20 >= v19 || *v20 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
              if (!(_DWORD)result)
                return result;
              v51 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v19 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v7 = *v20;
              v51 = (unsigned __int8 *)(v20 + 1);
              *((_QWORD *)a2 + 1) = v51;
            }
            *((_DWORD *)this + 19) |= 0x40u;
            if (v51 == (unsigned __int8 *)v19 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
        }
      }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v5 = this;
  if ((*(_BYTE *)(this + 76) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
    v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 8) == 0)
    {
LABEL_10:
      if ((v8 & 0x10) == 0)
        goto LABEL_11;
      goto LABEL_16;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_10;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x10) == 0)
  {
LABEL_11:
    if ((v8 & 0x20) == 0)
      goto LABEL_12;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x20) == 0)
  {
LABEL_12:
    if ((v8 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 64), (uint64_t)a2, a4);
  }
LABEL_17:
  v9 = *(_QWORD *)(v5 + 56);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 64), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 76);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(this + 76) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(this + 76) & 4) == 0)
      goto LABEL_13;
LABEL_12:
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 40));
    v3 += this + 1;
    v2 = *(_DWORD *)(v1 + 76);
    goto LABEL_13;
  }
  v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox **)(this + 8);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_
                                                                                                 + 8);
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    this = 1;
  v3 = v6 + this + 1;
  v2 = *(_DWORD *)(v1 + 76);
  if ((v2 & 4) != 0)
    goto LABEL_12;
LABEL_13:
  if ((v2 & 8) != 0)
  {
    this = *(unsigned int *)(v1 + 48);
    if ((this & 0x80000000) != 0)
    {
      v14 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      v14 = this + 1;
      v2 = *(_DWORD *)(v1 + 76);
    }
    else
    {
      v14 = 2;
    }
    v3 += v14;
    if ((v2 & 0x10) == 0)
    {
LABEL_15:
      if ((v2 & 0x20) == 0)
        goto LABEL_16;
      goto LABEL_35;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_15;
  }
  this = *(unsigned int *)(v1 + 52);
  if (this >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
    v15 = this + 1;
    v2 = *(_DWORD *)(v1 + 76);
  }
  else
  {
    v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0)
      goto LABEL_18;
    goto LABEL_17;
  }
LABEL_35:
  v16 = *(_QWORD *)(v1 + 56);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v16 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 56);
  }
  v17 = 2 * (*(_DWORD *)(v16 + 16) & 1);
  if ((*(_DWORD *)(v16 + 16) & 2) != 0)
    v17 += 2;
  if (*(_DWORD *)(v16 + 16))
    v18 = v17;
  else
    v18 = 0;
  *(_DWORD *)(v16 + 12) = v18;
  v3 += v18 + 2;
  if ((*(_DWORD *)(v1 + 76) & 0x40) != 0)
LABEL_17:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 64))
        + 1;
LABEL_18:
  v7 = *(_DWORD *)(v1 + 24);
  v8 = (v7 + v3);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch **)(*(_QWORD *)(v1 + 16) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 72) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_QWORD *)v3 + 5);
    *((_QWORD *)v3 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    v6 = *((_QWORD *)v3 + 7);
    v7 = *((_QWORD *)v3 + 8);
    v8 = *((_QWORD *)a2 + 8);
    *((_QWORD *)v3 + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)v3 + 8) = v8;
    *((_QWORD *)a2 + 7) = v6;
    *((_QWORD *)a2 + 8) = v7;
    LODWORD(v6) = *((_DWORD *)v3 + 19);
    *((_DWORD *)v3 + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v6;
    LODWORD(v6) = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 40) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::GEOMapTropicalSavannaData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  *((_BYTE *)this + 40) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_QWORD *)this = &off_1E25BCC80;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(this, a2);
  return this;
}

void sub_18D123614(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  uint64_t v4;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  char v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna **)(*((_QWORD *)a2 + 2)
                                                                                              + 8 * v5);
      v7 = *((_DWORD *)this + 7);
      v8 = *((int *)this + 6);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)((char *)this + 16));
          v7 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v7 + 1;
        v10 = operator new();
        *(_OWORD *)(v10 + 40) = 0u;
        *(_OWORD *)(v10 + 56) = 0u;
        *(_QWORD *)(v10 + 72) = 0;
        *(_QWORD *)v10 = &off_1E25BCF50;
        *(_QWORD *)(v10 + 8) = 0;
        *(_QWORD *)(v10 + 16) = 0;
        *(_QWORD *)(v10 + 24) = 0;
        *(_DWORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)this + 2);
        v12 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 6));
  }
  LOBYTE(v13) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v13)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      *((_DWORD *)this + 12) |= 1u;
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
      if (!v14)
      {
        v4 = operator new();
        v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
        *(_QWORD *)v4 = &off_1E25BDBF8;
        *(_OWORD *)(v4 + 8) = 0u;
        *(_OWORD *)(v4 + 24) = 0u;
        *((_QWORD *)this + 1) = v4;
      }
      v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v15)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
        v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_
                                                                              + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
      v13 = *((_DWORD *)a2 + 12);
    }
    if ((v13 & 4) != 0)
    {
      v16 = *((_BYTE *)a2 + 40);
      *((_DWORD *)this + 12) |= 4u;
      *((_BYTE *)this + 40) = v16;
    }
  }
}

void sub_18D123824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::~GEOMapTropicalSavannaData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BCC80;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::~GEOMapTropicalSavannaData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  uint64_t result;

  result = operator new();
  *(_BYTE *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)result = &off_1E25BCC80;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if (*(_BYTE *)(this + 48))
  {
    if ((*(_BYTE *)(this + 48) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
    *(_BYTE *)(this + 40) = 0;
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned __int8 *v32;
  uint64_t result;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_21;
      *((_DWORD *)this + 12) |= 1u;
      v11 = *((_QWORD *)this + 1);
      if (!v11)
      {
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25BDBF8;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *((_QWORD *)this + 1) = v11;
      }
      v35 = 0;
      v12 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))
          return 0;
      }
      else
      {
        v35 = *v12;
        *((_QWORD *)a2 + 1) = v12 + 1;
      }
      v13 = *((_DWORD *)a2 + 14);
      v14 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v13 + 1;
      if (v13 >= v14)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v11, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v15 = *((_DWORD *)a2 + 14);
      v16 = __OFSUB__(v15, 1);
      v17 = v15 - 1;
      if (v17 < 0 == v16)
        *((_DWORD *)a2 + 14) = v17;
      v18 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v18 < *((_QWORD *)a2 + 2) && *v18 == 18)
      {
        while (1)
        {
          *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_33:
          v19 = *((_DWORD *)this + 7);
          v20 = *((int *)this + 6);
          if ((int)v20 >= v19)
          {
            if (v19 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v19 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v19 + 1;
            v22 = operator new();
            *(_OWORD *)(v22 + 40) = 0u;
            *(_OWORD *)(v22 + 56) = 0u;
            *(_QWORD *)(v22 + 72) = 0;
            *(_QWORD *)v22 = &off_1E25BCF50;
            *(_QWORD *)(v22 + 8) = 0;
            *(_QWORD *)(v22 + 16) = 0;
            *(_QWORD *)(v22 + 24) = 0;
            *(_DWORD *)(v22 + 32) = 0;
            v23 = *((_QWORD *)this + 2);
            v24 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v24 + 1;
            *(_QWORD *)(v23 + 8 * v24) = v22;
          }
          else
          {
            v21 = *((_QWORD *)this + 2);
            *((_DWORD *)this + 6) = v20 + 1;
            v22 = *(_QWORD *)(v21 + 8 * v20);
          }
          v36 = 0;
          v25 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
          }
          else
          {
            v36 = *v25;
            *((_QWORD *)a2 + 1) = v25 + 1;
          }
          v26 = *((_DWORD *)a2 + 14);
          v27 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v26 + 1;
          if (v26 >= v27)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)v22, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v28 = *((_DWORD *)a2 + 14);
          v16 = __OFSUB__(v28, 1);
          v29 = v28 - 1;
          if (v29 < 0 == v16)
            *((_DWORD *)a2 + 14) = v29;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 >= v9)
            break;
          v30 = *v18;
          if (v30 != 18)
          {
            if (v30 == 24)
            {
              v10 = v18 + 1;
              *((_QWORD *)a2 + 1) = v10;
LABEL_51:
              v34 = 0;
              if ((unint64_t)v10 >= v9 || *v10 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34);
                if (!(_DWORD)result)
                  return result;
                v31 = v34;
                v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v9 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v31 = *v10;
                v32 = (unsigned __int8 *)(v10 + 1);
                *((_QWORD *)a2 + 1) = v32;
              }
              *((_BYTE *)this + 40) = v31 != 0;
              *((_DWORD *)this + 12) |= 4u;
              if (v32 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_21;
      goto LABEL_33;
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_21:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 48) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if ((*(_BYTE *)(v5 + 48) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  v2 = *((unsigned __int8 *)this + 48);
  if (*((_BYTE *)this + 48))
  {
    if ((v2 & 1) != 0)
    {
      v4 = *((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ + 8);
      }
      v5 = *(unsigned __int8 *)(v4 + 36);
      if (*(_BYTE *)(v4 + 36))
      {
        v6 = (v5 << 31 >> 31) & 9;
        if ((v5 & 2) != 0)
          v6 += 9;
        if ((v5 & 4) != 0)
          v5 = v6 + 9;
        else
          v5 = v6;
      }
      *(_DWORD *)(v4 + 32) = v5;
      v3 = v5 + 2;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 4) != 0)
      v2 = v3 + 2;
    else
      v2 = v3;
  }
  v7 = *((_DWORD *)this + 6);
  v8 = (v7 + v2);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::ByteSize(*(_QWORD *)(*((_QWORD *)this + 2) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 6));
  }
  *((_DWORD *)this + 11) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *v3;
  uint64_t v4;
  char v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_BYTE *)v3 + 40);
    *((_BYTE *)v3 + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v5;
    v6 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v6;
    v7 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapTropicalSavannaData");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation_WatchOrientationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::WatchOrientation(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BB330;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(this, a2);
  return this;
}

void sub_18D124100(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 4)
        __assert_rtn("set_wrist_orientation", "CoreNavigationCLPPrivateDataShared.pb.h", 26731, "::CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation_WatchOrientationType_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 4)
        __assert_rtn("set_crown_orientation", "CoreNavigationCLPPrivateDataShared.pb.h", 26754, "::CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation_WatchOrientationType_IsValid(value)");
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18D12420C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::~WatchOrientation(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  *(_QWORD *)this = &off_1E25BB330;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::~WatchOrientation(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::New(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BB330;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  uint64_t result;
  unsigned int v14;
  unsigned int v15;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v15 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v10 = v15;
      }
      else
      {
        v10 = *v9;
        *((_QWORD *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 3)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_25:
        v14 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14);
          if (!(_DWORD)result)
            return result;
          v12 = v14;
        }
        else
        {
          v12 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        if (v12 <= 3)
        {
          *((_DWORD *)this + 5) |= 2u;
          *((_DWORD *)this + 3) = v12;
        }
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WatchOrientation");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateConfidenceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WristState::SharedCtor(_QWORD *this)
{
  this[4] = 0;
  this[1] = 0;
  this[2] = 0;
  *(_QWORD *)((char *)this + 23) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WristState *CoreNavigation::CLP::LogEntry::PrivateData::WristState::WristState(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25B9F08;
  *(_QWORD *)((char *)this + 23) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(this, a2);
  return this;
}

void sub_18D124738(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WristState *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  char v10;
  char v11;
  char v12;
  _BYTE v13[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      *((_DWORD *)v3 + 9) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 4);
      if (v7 >= 4)
        __assert_rtn("set_on_wrist", "CoreNavigationCLPPrivateDataShared.pb.h", 26823, "::CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateType_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 2u;
      *((_DWORD *)v3 + 4) = v7;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 4) != 0)
    {
      v8 = *((_DWORD *)a2 + 5);
      if (v8 >= 4)
        __assert_rtn("set_on_wrist_sensor", "CoreNavigationCLPPrivateDataShared.pb.h", 26846, "::CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateType_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 4u;
      *((_DWORD *)v3 + 5) = v8;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 8) != 0)
    {
      v9 = *((_DWORD *)a2 + 6);
      if (v9 >= 4)
        __assert_rtn("set_on_wrist_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 26869, "::CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateConfidenceType_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 8u;
      *((_DWORD *)v3 + 6) = v9;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 0x10) != 0)
    {
      v11 = *((_BYTE *)a2 + 28);
      *((_DWORD *)v3 + 9) |= 0x10u;
      *((_BYTE *)v3 + 28) = v11;
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 0x20) == 0)
      {
LABEL_21:
        if ((v4 & 0x40) == 0)
          return;
        goto LABEL_22;
      }
    }
    else if ((v4 & 0x20) == 0)
    {
      goto LABEL_21;
    }
    v12 = *((_BYTE *)a2 + 29);
    *((_DWORD *)v3 + 9) |= 0x20u;
    *((_BYTE *)v3 + 29) = v12;
    if ((*((_DWORD *)a2 + 9) & 0x40) != 0)
    {
LABEL_22:
      v10 = *((_BYTE *)a2 + 30);
      *((_DWORD *)v3 + 9) |= 0x40u;
      *((_BYTE *)v3 + 30) = v10;
    }
  }
}

void sub_18D124964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::~WristState(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25B9F08;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WristState *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::~WristState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WristState *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WristState::New(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[4] = 0;
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25B9F08;
  *(_QWORD *)((char *)result + 23) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 36))
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 23) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  unsigned int v25;
  uint64_t result;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  unsigned __int8 *v37;
  unsigned int v38;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_25;
        *((_DWORD *)this + 9) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v38 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38))return 0;
        }
        else
        {
          v38 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v9 || *v24 != 16)
          continue;
        v10 = v24 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_38;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_38:
        v38 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!(_DWORD)result)
            return result;
          v25 = v38;
        }
        else
        {
          v25 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v25 <= 3)
        {
          *((_DWORD *)this + 9) |= 2u;
          *((_DWORD *)this + 4) = v25;
        }
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v11 || *v27 != 24)
          continue;
        v12 = v27 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_48:
        v38 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!(_DWORD)result)
            return result;
          v28 = v38;
        }
        else
        {
          v28 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v28 <= 3)
        {
          *((_DWORD *)this + 9) |= 4u;
          *((_DWORD *)this + 5) = v28;
        }
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v13 || *v29 != 32)
          continue;
        v14 = v29 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_58:
        v38 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!(_DWORD)result)
            return result;
          v30 = v38;
        }
        else
        {
          v30 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v30 <= 3)
        {
          *((_DWORD *)this + 9) |= 8u;
          *((_DWORD *)this + 6) = v30;
        }
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v31 >= v15 || *v31 != 40)
          continue;
        v16 = v31 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_68:
        v38 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!(_DWORD)result)
            return result;
          v32 = v38;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v32 = *v16;
          v33 = v16 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_BYTE *)this + 28) = v32 != 0;
        *((_DWORD *)this + 9) |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48)
          continue;
        v17 = v33 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_76:
        v38 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!(_DWORD)result)
            return result;
          v34 = v38;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v17;
          v35 = v17 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_BYTE *)this + 29) = v34 != 0;
        *((_DWORD *)this + 9) |= 0x20u;
        if ((unint64_t)v35 >= v15 || *v35 != 56)
          continue;
        v18 = v35 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_84:
        v38 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!(_DWORD)result)
            return result;
          v36 = v38;
          v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v18;
          v37 = (unsigned __int8 *)(v18 + 1);
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_BYTE *)this + 30) = v36 != 0;
        *((_DWORD *)this + 9) |= 0x40u;
        if (v37 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_48;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_68;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_76;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_84;
      default:
        v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 30), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 29), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 30), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  unsigned int v14;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_43;
  }
  if ((*((_BYTE *)this + 36) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v9 = 2;
    }
    v3 += v9;
  }
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v10 & 0x80000000) != 0)
    {
      v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
      goto LABEL_36;
    goto LABEL_30;
  }
  if ((v2 & 8) != 0)
  {
LABEL_30:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v13 = 2;
    }
    v3 += v13;
  }
LABEL_36:
  v14 = v3 + 2;
  if ((v2 & 0x10) == 0)
    v14 = v3;
  if ((v2 & 0x20) != 0)
    v14 += 2;
  if ((v2 & 0x40) != 0)
    result = v14 + 2;
  else
    result = v14;
LABEL_43:
  *((_DWORD *)this + 8) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WristState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 28);
    *(_BYTE *)(this + 28) = *((_BYTE *)a2 + 28);
    *((_BYTE *)a2 + 28) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 29);
    *(_BYTE *)(this + 29) = *((_BYTE *)a2 + 29);
    *((_BYTE *)a2 + 29) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 30);
    *(_BYTE *)(this + 30) = *((_BYTE *)a2 + 30);
    *((_BYTE *)a2 + 30) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WristState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WristState");
}

double CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  double result;

  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WatchState *CoreNavigation::CLP::LogEntry::PrivateData::WatchState::WatchState(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  *(_QWORD *)this = &off_1E25B9E90;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(this, a2);
  return this;
}

void sub_18D1253F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *v9;
  CoreNavigation::CLP::LogEntry::PrivateData::WristState *v10;
  const CoreNavigation::CLP::LogEntry::PrivateData::WristState *v11;
  _BYTE v12[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 40) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_14:
    v7 = *((_DWORD *)a2 + 8);
    *((_DWORD *)v3 + 10) |= 2u;
    *((_DWORD *)v3 + 8) = v7;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  *((_DWORD *)v3 + 10) |= 1u;
  v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
  if (!v5)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)operator new();
    v5 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 1) = this;
  }
  v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
  if (!v6)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                         + 8);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
  v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 2) != 0)
    goto LABEL_14;
LABEL_6:
  if ((v4 & 4) == 0)
    goto LABEL_7;
LABEL_15:
  *((_DWORD *)v3 + 10) |= 4u;
  v8 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((_QWORD *)v3 + 2);
  if (!v8)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)operator new();
    v8 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BB330;
    *((_QWORD *)v3 + 2) = this;
  }
  v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((_QWORD *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                                + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(v8, v9);
  if ((*((_DWORD *)a2 + 10) & 8) != 0)
  {
LABEL_20:
    *((_DWORD *)v3 + 10) |= 8u;
    v10 = (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((_QWORD *)v3 + 3);
    if (!v10)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)operator new();
      v10 = this;
      *((_QWORD *)this + 4) = 0;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25B9F08;
      *(_QWORD *)((char *)this + 23) = 0;
      *((_QWORD *)v3 + 3) = this;
    }
    v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((_QWORD *)a2 + 3);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WristState **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                             + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(v10, v11);
  }
}

void sub_18D125604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::~WatchState(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  *(_QWORD *)this = &off_1E25B9E90;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::~WatchState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WatchState::New(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25B9E90;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 40);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 40) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 40);
      }
    }
    *(_DWORD *)(this + 32) = 0;
    if ((v2 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
          *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 20) = 0;
        v2 = *(_DWORD *)(this + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(this + 24);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::WristState::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  _QWORD *v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 10) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v34 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0;
        }
        else
        {
          v34 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v17 >= v9 || *v17 != 16)
          continue;
        v10 = v17 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_31:
        v34 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34);
          if (!(_DWORD)result)
            return result;
          v18 = v34;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v10;
          v19 = v10 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 8) = v18;
        v11 = *((_DWORD *)this + 10) | 2;
        *((_DWORD *)this + 10) = v11;
        if ((unint64_t)v19 >= v9 || *v19 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_39:
        *((_DWORD *)this + 10) = v11 | 4;
        v21 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((_QWORD *)this + 2);
        if (!v21)
        {
          v21 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)operator new();
          *((_QWORD *)v21 + 1) = 0;
          *((_QWORD *)v21 + 2) = 0;
          *(_QWORD *)v21 = &off_1E25BB330;
          *((_QWORD *)this + 2) = v21;
        }
        v34 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0;
        }
        else
        {
          v34 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergePartialFromCodedStream(v21, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v15)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_53:
        *((_DWORD *)this + 10) |= 8u;
        v28 = (_QWORD *)*((_QWORD *)this + 3);
        if (!v28)
        {
          v28 = (_QWORD *)operator new();
          v28[4] = 0;
          v28[1] = 0;
          v28[2] = 0;
          *v28 = &off_1E25B9F08;
          *(_QWORD *)((char *)v28 + 23) = 0;
          *((_QWORD *)this + 3) = v28;
        }
        v34 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0;
        }
        else
        {
          v34 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::WristState *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v15)
          *((_DWORD *)a2 + 14) = v33;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        v11 = *((_DWORD *)this + 10);
        goto LABEL_39;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        goto LABEL_53;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    goto LABEL_13;
  }
LABEL_10:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_13:
    v9 = *(_QWORD *)(v5 + 24);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  CoreNavigation::CLP::LogEntry::PrivateData::WristState *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_36;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = (v5 + 2);
  v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_36;
    goto LABEL_30;
  }
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((_QWORD *)this + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                          + 16);
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::ByteSize(v9);
  v11 = (int)v10;
  if (v10 >= 0x80)
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  else
    v12 = 1;
  v3 = (v3 + v11 + v12 + 1);
  if ((*((_DWORD *)this + 10) & 8) != 0)
  {
LABEL_30:
    v13 = (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((_QWORD *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v13 = *(CoreNavigation::CLP::LogEntry::PrivateData::WristState **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                       + 24);
    }
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::ByteSize(v13);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v16 = 1;
    v3 = (v3 + v15 + v16 + 1);
  }
LABEL_36:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WatchState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WatchState");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_UserSpecificPlaceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_PlaceInferencePlaceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  double result;
  uint64_t v2;

  result = 0.0;
  *((_QWORD *)this + 1) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = v2;
  *((_QWORD *)this + 4) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::PlaceInference(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BA9D0;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(this, a2);
  return this;
}

void sub_18D126064(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5)
        __assert_rtn("set_user_specific_place_type", "CoreNavigationCLPPrivateDataShared.pb.h", 27114, "::CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_UserSpecificPlaceType_IsValid(value)");
      *((_DWORD *)this + 9) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 3)
        __assert_rtn("set_place_type", "CoreNavigationCLPPrivateDataShared.pb.h", 27137, "::CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_PlaceInferencePlaceType_IsValid(value)");
      *((_DWORD *)this + 9) |= 2u;
      *((_DWORD *)this + 3) = v6;
      v4 = *((_DWORD *)a2 + 9);
    }
    v7 = (std::string *)MEMORY[0x1E0DE8338];
    if ((v4 & 4) != 0)
    {
      v8 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 9) |= 4u;
      v9 = (std::string *)*((_QWORD *)this + 2);
      if (v9 == v7)
      {
        v9 = (std::string *)operator new();
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        v9->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v9;
      }
      std::string::operator=(v9, v8);
      v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 8) != 0)
    {
      v10 = (const std::string *)*((_QWORD *)a2 + 3);
      *((_DWORD *)this + 9) |= 8u;
      v11 = (std::string *)*((_QWORD *)this + 3);
      if (v11 == v7)
      {
        v11 = (std::string *)operator new();
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 3) = v11;
      }
      std::string::operator=(v11, v10);
    }
  }
}

void sub_18D126220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::~PlaceInference(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  *(_QWORD *)this = &off_1E25BA9D0;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::~PlaceInference(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = this;
  v2 = *((_QWORD *)this + 2);
  v3 = MEMORY[0x1E0DE8338];
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  v5 = *((_QWORD *)v1 + 3);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)MEMORY[0x18D78B5D4](v5, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::New(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  _QWORD *v1;
  double result;
  uint64_t v3;

  v1 = (_QWORD *)operator new();
  *v1 = &off_1E25BA9D0;
  result = 0.0;
  v1[1] = 0;
  v3 = MEMORY[0x1E0DE8338];
  v1[2] = MEMORY[0x1E0DE8338];
  v1[3] = v3;
  v1[4] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_BYTE *)(this + 36);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    v2 = MEMORY[0x1E0DE8338];
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 36) & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  unsigned int v13;
  _BYTE *v14;
  _QWORD *v15;
  _BYTE *v16;
  _QWORD *v17;
  uint64_t result;
  unsigned int v19;
  unsigned int v20;

  v4 = MEMORY[0x1E0DE8338];
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v20 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
          goto LABEL_23;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20);
        if ((_DWORD)result)
        {
          v9 = v20;
LABEL_23:
          if (v9 <= 4)
          {
            *((_DWORD *)this + 9) |= 1u;
            *((_DWORD *)this + 2) = v9;
          }
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v11 = v12 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_28;
          }
          continue;
        }
        break;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_28:
        v19 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!(_DWORD)result)
            return result;
          v13 = v19;
        }
        else
        {
          v13 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (v13 <= 2)
        {
          *((_DWORD *)this + 9) |= 2u;
          *((_DWORD *)this + 3) = v13;
        }
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_38:
        *((_DWORD *)this + 9) |= 4u;
        if (*((_QWORD *)this + 2) == v4)
        {
          v15 = (_QWORD *)operator new();
          v15[1] = 0;
          v15[2] = 0;
          *v15 = 0;
          *((_QWORD *)this + 2) = v15;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_44:
        *((_DWORD *)this + 9) |= 8u;
        if (*((_QWORD *)this + 3) == v4)
        {
          v17 = (_QWORD *)operator new();
          v17[1] = 0;
          v17[2] = 0;
          *v17 = 0;
          *((_QWORD *)this + 3) = v17;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_38;
        goto LABEL_18;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        goto LABEL_44;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  int v18;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_40;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 9);
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 9);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_19:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_40;
    goto LABEL_31;
  }
  v7 = *((_QWORD *)this + 2);
  v8 = *(unsigned __int8 *)(v7 + 23);
  v9 = v8;
  v10 = *(_QWORD *)(v7 + 8);
  if ((v8 & 0x80u) == 0)
    v11 = *(unsigned __int8 *)(v7 + 23);
  else
    v11 = v10;
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v10 = *(_QWORD *)(v7 + 8);
    v2 = *((_DWORD *)this + 9);
    v9 = *(_BYTE *)(v7 + 23);
  }
  else
  {
    v12 = 1;
  }
  if (v9 < 0)
    v8 = v10;
  v3 = (v3 + v12 + v8 + 1);
  if ((v2 & 8) != 0)
  {
LABEL_31:
    v13 = *((_QWORD *)this + 3);
    v14 = *(unsigned __int8 *)(v13 + 23);
    v15 = v14;
    v16 = *(_QWORD *)(v13 + 8);
    if ((v14 & 0x80u) == 0)
      v17 = *(unsigned __int8 *)(v13 + 23);
    else
      v17 = v16;
    if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      v14 = *(unsigned __int8 *)(v13 + 23);
      v16 = *(_QWORD *)(v13 + 8);
      v15 = *(_BYTE *)(v13 + 23);
    }
    else
    {
      v18 = 1;
    }
    if (v15 < 0)
      v14 = v16;
    v3 = (v3 + v18 + v14 + 1);
  }
LABEL_40:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PlaceInference");
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::RoutineVisit(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  *(_QWORD *)this = &off_1E25BA3B8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(this, a2);
  return this;
}

void sub_18D126A9C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v9;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v10;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v11;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v13;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *v14;
  uint64_t v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *v16;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v17;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v18;
  _BYTE v19[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 68);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 68) & 1) != 0)
  {
    *((_DWORD *)v3 + 17) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                           + 8);
    }
    result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((*((_BYTE *)a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 17) |= 2u;
  v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 2);
  if (!v8)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)operator new();
    v8 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 2) = this;
  }
  v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                         + 16);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v8, v9);
  v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)v3 + 17) |= 4u;
  v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 3);
  if (!v10)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)operator new();
    v10 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 3) = this;
  }
  v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                          + 24);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
  v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
LABEL_33:
    *((_DWORD *)v3 + 17) |= 0x10u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)*((_QWORD *)v3 + 5);
    if (!v14)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)operator new();
      v14 = this;
      *(_QWORD *)this = &off_1E25BA9D0;
      *((_QWORD *)this + 1) = 0;
      v15 = MEMORY[0x1E0DE8338];
      *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
      *((_QWORD *)this + 3) = v15;
      *((_QWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 5) = this;
    }
    v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)*((_QWORD *)a2 + 5);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                                 + 40);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(v14, v16);
    v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        return result;
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_28:
  *((_DWORD *)v3 + 17) |= 8u;
  v12 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 4);
  if (!v12)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)operator new();
    v12 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 4) = this;
  }
  v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 4);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                          + 32);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v12, v13);
  v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 0x10) != 0)
    goto LABEL_33;
LABEL_9:
  if ((v5 & 0x20) == 0)
    goto LABEL_10;
LABEL_38:
  *((_DWORD *)v3 + 17) |= 0x20u;
  v17 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)v3 + 6);
  if (!v17)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)operator new();
    v17 = this;
    *(_QWORD *)this = &off_1E25BC938;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 6) = this;
  }
  v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)a2 + 6);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                                         + 48);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v17, v18);
  if ((*((_DWORD *)a2 + 17) & 0x40) != 0)
  {
LABEL_11:
    result = *((double *)a2 + 7);
    *((_DWORD *)v3 + 17) |= 0x40u;
    *((double *)v3 + 7) = result;
  }
  return result;
}

void sub_18D126E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::~RoutineVisit(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  *(_QWORD *)this = &off_1E25BA3B8;
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::~RoutineVisit(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 6);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::New(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA3B8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 68);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 68) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 4) != 0)
    {
      v5 = *(_QWORD *)(this + 24);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 8) != 0)
    {
      v6 = *(_QWORD *)(this + 32);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_QWORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::Clear(this);
        v2 = *(_DWORD *)(v1 + 68);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      v7 = *(_QWORD *)(v1 + 48);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 28))
        {
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 28) = 0;
      }
    }
    *(_QWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 68) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  _BYTE *v36;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  _BYTE *v43;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v44;
  char *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  _BYTE *v50;
  uint64_t result;
  unsigned int v52[2];

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_26;
        *((_DWORD *)this + 17) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v52[0] = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0;
        }
        else
        {
          v52[0] = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
        goto LABEL_38;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_26;
LABEL_38:
        *((_DWORD *)this + 17) |= 2u;
        v16 = *((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = operator new();
          *(_QWORD *)v16 = &off_1E25BDBF8;
          *(_OWORD *)(v16 + 8) = 0u;
          *(_OWORD *)(v16 + 24) = 0u;
          *((_QWORD *)this + 2) = v16;
        }
        v52[0] = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0;
        }
        else
        {
          v52[0] = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v20 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v20, 1);
        v21 = v20 - 1;
        if (v21 < 0 == v13)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_52:
        *((_DWORD *)this + 17) |= 4u;
        v23 = *((_QWORD *)this + 3);
        if (!v23)
        {
          v23 = operator new();
          *(_QWORD *)v23 = &off_1E25BDBF8;
          *(_OWORD *)(v23 + 8) = 0u;
          *(_OWORD *)(v23 + 24) = 0u;
          *((_QWORD *)this + 3) = v23;
        }
        v52[0] = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0;
        }
        else
        {
          v52[0] = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v23, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v27 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v27, 1);
        v28 = v27 - 1;
        if (v28 < 0 == v13)
          *((_DWORD *)a2 + 14) = v28;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_66:
        *((_DWORD *)this + 17) |= 8u;
        v30 = *((_QWORD *)this + 4);
        if (!v30)
        {
          v30 = operator new();
          *(_QWORD *)v30 = &off_1E25BDBF8;
          *(_OWORD *)(v30 + 8) = 0u;
          *(_OWORD *)(v30 + 24) = 0u;
          *((_QWORD *)this + 4) = v30;
        }
        v52[0] = 0;
        v31 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0;
        }
        else
        {
          v52[0] = *v31;
          *((_QWORD *)a2 + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)a2 + 14);
        v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v30, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v34 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v34, 1);
        v35 = v34 - 1;
        if (v35 < 0 == v13)
          *((_DWORD *)a2 + 14) = v35;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_80:
        *((_DWORD *)this + 17) |= 0x10u;
        v37 = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)*((_QWORD *)this + 5);
        if (!v37)
        {
          v37 = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)operator new();
          *(_QWORD *)v37 = &off_1E25BA9D0;
          *((_QWORD *)v37 + 1) = 0;
          *((_QWORD *)v37 + 2) = v4;
          *((_QWORD *)v37 + 3) = v4;
          *((_QWORD *)v37 + 4) = 0;
          *((_QWORD *)this + 5) = v37;
        }
        v52[0] = 0;
        v38 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0;
        }
        else
        {
          v52[0] = *v38;
          *((_QWORD *)a2 + 1) = v38 + 1;
        }
        v39 = *((_DWORD *)a2 + 14);
        v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergePartialFromCodedStream(v37, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v41 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v41, 1);
        v42 = v41 - 1;
        if (v42 < 0 == v13)
          *((_DWORD *)a2 + 14) = v42;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
LABEL_94:
        *((_DWORD *)this + 17) |= 0x20u;
        v44 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 6);
        if (!v44)
        {
          v44 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)operator new();
          *(_QWORD *)v44 = &off_1E25BC938;
          *((_QWORD *)v44 + 1) = 0;
          *((_QWORD *)v44 + 2) = 0;
          *((_QWORD *)v44 + 3) = 0;
          *((_QWORD *)this + 6) = v44;
        }
        v52[0] = 0;
        v45 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0;
        }
        else
        {
          v52[0] = *v45;
          *((_QWORD *)a2 + 1) = v45 + 1;
        }
        v46 = *((_DWORD *)a2 + 14);
        v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 >= v47)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v44, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v48 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v49 < 0 == v13)
          *((_DWORD *)a2 + 14) = v49;
        v50 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_108:
        *(_QWORD *)v52 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v52) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v52;
        *((_DWORD *)this + 17) |= 0x40u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_52;
        goto LABEL_26;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_66;
        goto LABEL_26;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_80;
        goto LABEL_26;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_94;
        goto LABEL_26;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_26;
        goto LABEL_108;
      default:
        v7 = TagFallback & 7;
LABEL_26:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 68);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_18;
  }
LABEL_15:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_21;
  }
LABEL_18:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_21:
  v11 = *(_QWORD *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  }
LABEL_24:
  v12 = *(_QWORD *)(v5 + 48);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  uint64_t v20;
  int v21;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 68);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_63;
  }
  if ((*(_BYTE *)(this + 68) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(this + 68) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *(_DWORD *)(v1 + 68);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *(_QWORD *)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 16);
    }
    v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0)
        v10 += 9;
      if ((v9 & 4) != 0)
        v9 = v10 + 9;
      else
        v9 = v10;
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 += v9 + 2;
    v2 = *(_DWORD *)(v1 + 68);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v11 = *(_QWORD *)(v1 + 24);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 24);
    }
    v12 = *(unsigned __int8 *)(v11 + 36);
    if (*(_BYTE *)(v11 + 36))
    {
      v13 = (v12 << 31 >> 31) & 9;
      if ((v12 & 2) != 0)
        v13 += 9;
      if ((v12 & 4) != 0)
        v12 = v13 + 9;
      else
        v12 = v13;
    }
    *(_DWORD *)(v11 + 32) = v12;
    v3 += v12 + 2;
    v2 = *(_DWORD *)(v1 + 68);
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0)
        goto LABEL_27;
LABEL_47:
      v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference **)(v1 + 40);
      if (!v17)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                             + 40);
      }
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::ByteSize(v17);
      v19 = (int)v18;
      if (v18 >= 0x80)
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      else
        this = 1;
      v3 += v19 + this + 1;
      v2 = *(_DWORD *)(v1 + 68);
      if ((v2 & 0x20) == 0)
        goto LABEL_60;
      goto LABEL_53;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  v14 = *(_QWORD *)(v1 + 32);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 32);
  }
  v15 = *(unsigned __int8 *)(v14 + 36);
  if (*(_BYTE *)(v14 + 36))
  {
    v16 = (v15 << 31 >> 31) & 9;
    if ((v15 & 2) != 0)
      v16 += 9;
    if ((v15 & 4) != 0)
      v15 = v16 + 9;
    else
      v15 = v16;
  }
  *(_DWORD *)(v14 + 32) = v15;
  v3 += v15 + 2;
  v2 = *(_DWORD *)(v1 + 68);
  if ((v2 & 0x10) != 0)
    goto LABEL_47;
LABEL_27:
  if ((v2 & 0x20) != 0)
  {
LABEL_53:
    v20 = *(_QWORD *)(v1 + 48);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v20 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 48);
    }
    v21 = *(unsigned __int8 *)(v20 + 28);
    if (*(_BYTE *)(v20 + 28))
    {
      if ((v21 & 2) != 0)
        v21 = ((v21 << 31 >> 31) & 9) + 9;
      else
        v21 = (v21 << 31 >> 31) & 9;
    }
    *(_DWORD *)(v20 + 24) = v21;
    v3 += v21 + 2;
    v2 = *(_DWORD *)(v1 + 68);
  }
LABEL_60:
  if ((v2 & 0x40) != 0)
    result = v3 + 9;
  else
    result = v3;
LABEL_63:
  *(_DWORD *)(v1 + 64) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::Swap(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    result = *((double *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((double *)a2 + 7) = result;
    LODWORD(v7) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    LODWORD(v7) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.RoutineVisit");
}

double CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  double result;

  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_QWORD *)((char *)this + 37) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::OutdoorUpdate(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  *(_QWORD *)this = &off_1E25B0EE0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_QWORD *)((char *)this + 37) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(this, a2);
  return this;
}

void sub_18D127DC4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  _BYTE v11[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 56);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 56) & 1) != 0)
    {
      v4 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 14) |= 1u;
      *((_QWORD *)this + 1) = v4;
      v5 = *((_DWORD *)a2 + 14);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_20;
      }
    }
    else if ((*((_BYTE *)a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    v4 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 14) |= 2u;
    *((_QWORD *)this + 2) = v4;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_22;
    }
LABEL_20:
    v8 = *((_DWORD *)a2 + 6);
    if (v8 >= 3)
      __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 27626, "::CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorType_IsValid(value)");
    *((_DWORD *)this + 14) |= 4u;
    *((_DWORD *)this + 6) = v8;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
      {
LABEL_10:
        if ((v5 & 0x20) != 0)
        {
          v6 = *((_DWORD *)a2 + 10);
          if (v6 >= 4)
            __assert_rtn("set_daylight_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 27694, "::CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorConfidence_IsValid(value)");
          *((_DWORD *)this + 14) |= 0x20u;
          *((_DWORD *)this + 10) = v6;
          v5 = *((_DWORD *)a2 + 14);
        }
        if ((v5 & 0x40) != 0)
        {
          v7 = *((_BYTE *)a2 + 44);
          *((_DWORD *)this + 14) |= 0x40u;
          *((_BYTE *)this + 44) = v7;
          v5 = *((_DWORD *)a2 + 14);
        }
        if ((v5 & 0x80) != 0)
        {
          LODWORD(v4) = *((_DWORD *)a2 + 12);
          *((_DWORD *)this + 14) |= 0x80u;
          *((_DWORD *)this + 12) = v4;
        }
        return *(float *)&v4;
      }
LABEL_9:
      v4 = *((_QWORD *)a2 + 4);
      *((_DWORD *)this + 14) |= 0x10u;
      *((_QWORD *)this + 4) = v4;
      v5 = *((_DWORD *)a2 + 14);
      goto LABEL_10;
    }
LABEL_22:
    v9 = *((_DWORD *)a2 + 7);
    if (v9 >= 4)
      __assert_rtn("set_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 27649, "::CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorConfidence_IsValid(value)");
    *((_DWORD *)this + 14) |= 8u;
    *((_DWORD *)this + 7) = v9;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x10) == 0)
      goto LABEL_10;
    goto LABEL_9;
  }
  return *(float *)&v4;
}

void sub_18D127FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::~OutdoorUpdate(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  *(_QWORD *)this = &off_1E25B0EE0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::~OutdoorUpdate(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::New(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25B0EE0;
  *(_DWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 37) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 56))
  {
    *(_DWORD *)(this + 48) = 0;
    *(_OWORD *)(this + 8) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_QWORD *)(this + 37) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  unint64_t v8;
  _BYTE *v9;
  char *v10;
  unsigned int v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  uint64_t result;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_32;
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v27;
        *((_DWORD *)this + 14) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_32;
LABEL_14:
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v27;
        *((_DWORD *)this + 14) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 != 24)
          continue;
        v10 = v9 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_20:
        v27[0] = 0;
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!(_DWORD)result)
            return result;
          v11 = v27[0];
        }
        else
        {
          v11 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v11 <= 2)
        {
          *((_DWORD *)this + 14) |= 4u;
          *((_DWORD *)this + 6) = v11;
        }
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v19 >= v12 || *v19 != 32)
          continue;
        v13 = v19 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v27[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!(_DWORD)result)
            return result;
          v20 = v27[0];
        }
        else
        {
          v20 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v20 <= 3)
        {
          *((_DWORD *)this + 14) |= 8u;
          *((_DWORD *)this + 7) = v20;
        }
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_52:
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v27;
        *((_DWORD *)this + 14) |= 0x10u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v22 >= v14 || *v22 != 48)
          continue;
        v15 = v22 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_56:
        v27[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!(_DWORD)result)
            return result;
          v23 = v27[0];
        }
        else
        {
          v23 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v23 <= 3)
        {
          *((_DWORD *)this + 14) |= 0x20u;
          *((_DWORD *)this + 10) = v23;
        }
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v16 || *v24 != 56)
          continue;
        v17 = v24 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_66:
        v27[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!(_DWORD)result)
            return result;
          v25 = v27[0];
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v17;
          v26 = v17 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_BYTE *)this + 44) = v25 != 0;
        *((_DWORD *)this + 14) |= 0x40u;
        if ((unint64_t)v26 >= v16 || *v26 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_74:
        v27[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v27) & 1) != 0)
        {
          *((_DWORD *)this + 12) = v27[0];
          *((_DWORD *)this + 14) |= 0x80u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_20;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_52;
        goto LABEL_32;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_56;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_32;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_66;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_32;
        goto LABEL_74;
      default:
        v6 = TagFallback & 7;
LABEL_32:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 48), a3);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  unsigned int v11;

  v2 = *((unsigned __int8 *)this + 56);
  if (*((_BYTE *)this + 56))
  {
    if ((v2 & 2) != 0)
      v3 = ((v2 << 31 >> 31) & 9) + 9;
    else
      v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 4) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v4 & 0x80000000) != 0)
      {
        v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v5 = 2;
      }
      v3 += v5;
    }
    if ((v2 & 8) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if ((v7 & 0x80000000) != 0)
      {
        v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v8 = 2;
      }
      v3 += v8;
    }
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v9 & 0x80000000) != 0)
      {
        v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
        v2 = *((_DWORD *)this + 14);
      }
      else
      {
        v10 = 2;
      }
      v3 += v10;
    }
    v11 = v3 + 2;
    if ((v2 & 0x40) == 0)
      v11 = v3;
    if ((v2 & 0x80) != 0)
      result = v11 + 5;
    else
      result = v11;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  float result;
  int v9;
  int v10;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
    LOBYTE(v7) = *((_BYTE *)this + 44);
    *((_BYTE *)this + 44) = *((_BYTE *)a2 + 44);
    *((_BYTE *)a2 + 44) = v7;
    result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    v9 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v9;
    v10 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v10;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.OutdoorUpdate");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample_ReferenceFrame_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  double result;

  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::InertialOdometrySample(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  *(_QWORD *)this = &off_1E25B0F58;
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(this, a2);
  return this;
}

void sub_18D128910(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  int v4;
  int v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  _BYTE v22[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  v4 = *((_DWORD *)a2 + 20);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v9 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 20) |= 1u;
    *((_QWORD *)this + 1) = v9;
    v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_29;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v10 = *((_QWORD *)a2 + 2);
  *((_DWORD *)this + 20) |= 2u;
  *((_QWORD *)this + 2) = v10;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_29:
  v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 20) |= 4u;
  *((_DWORD *)this + 6) = v11;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  v12 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 20) |= 8u;
  *((_DWORD *)this + 7) = v12;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_32:
    v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 9) = v14;
    v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 20) |= 0x10u;
  *((_DWORD *)this + 8) = v13;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x20) != 0)
    goto LABEL_32;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_33:
  v15 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 20) |= 0x40u;
  *((_DWORD *)this + 10) = v15;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 20) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    v4 = *((_DWORD *)a2 + 20);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_24;
  if ((v4 & 0x100) != 0)
  {
    v16 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 20) |= 0x100u;
    *((_DWORD *)this + 12) = v16;
    v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_37;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 20) |= 0x200u;
  *((_DWORD *)this + 13) = v17;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_38;
  }
LABEL_37:
  v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 20) |= 0x400u;
  *((_DWORD *)this + 14) = v18;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_38:
  v19 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 20) |= 0x800u;
  *((_DWORD *)this + 15) = v19;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_39:
  v20 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 20) |= 0x1000u;
  *((_DWORD *)this + 16) = v20;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0)
      goto LABEL_22;
    goto LABEL_21;
  }
LABEL_40:
  v21 = *((_DWORD *)a2 + 17);
  if (v21 >= 3)
    __assert_rtn("set_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 28051, "::CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample_ReferenceFrame_IsValid(value)");
  *((_DWORD *)this + 20) |= 0x2000u;
  *((_DWORD *)this + 17) = v21;
  v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x4000) == 0)
    goto LABEL_22;
LABEL_21:
  v6 = *((_BYTE *)a2 + 72);
  *((_DWORD *)this + 20) |= 0x4000u;
  *((_BYTE *)this + 72) = v6;
  v4 = *((_DWORD *)a2 + 20);
LABEL_22:
  if ((v4 & 0x8000) != 0)
  {
    v7 = *((_BYTE *)a2 + 73);
    *((_DWORD *)this + 20) |= 0x8000u;
    *((_BYTE *)this + 73) = v7;
    v4 = *((_DWORD *)a2 + 20);
  }
LABEL_24:
  if ((v4 & 0x10000) != 0)
  {
    v8 = *((_BYTE *)a2 + 74);
    *((_DWORD *)this + 20) |= 0x10000u;
    *((_BYTE *)this + 74) = v8;
  }
}

void sub_18D128BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::~InertialOdometrySample(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  *(_QWORD *)this = &off_1E25B0F58;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::~InertialOdometrySample(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::New(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25B0F58;
  *(_DWORD *)(v1 + 76) = 0;
  *(_DWORD *)(v1 + 80) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_DWORD *)(v1 + 71) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 48) = 0;
    *(_QWORD *)(this + 56) = 0;
    *(_WORD *)(this + 72) = 0;
    *(_QWORD *)(this + 64) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
    *(_BYTE *)(this + 74) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  unint64_t v19;
  _BYTE *v20;
  char *v21;
  unsigned int v22;
  unint64_t v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  char *v26;
  uint64_t result;
  _BYTE *v28;
  unsigned int v29;
  unsigned __int8 *v30;
  unsigned int v31;
  unsigned __int8 *v32;
  unsigned int v33;
  unsigned __int8 *v34;
  unsigned int v35[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_83;
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v35;
        *((_DWORD *)this + 20) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_83;
LABEL_14:
        *(_QWORD *)v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v35;
        *((_DWORD *)this + 20) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v35[0];
        *((_DWORD *)this + 20) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 7) = v35[0];
        *((_DWORD *)this + 20) |= 8u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_29:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 8) = v35[0];
        *((_DWORD *)this + 20) |= 0x10u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_34:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 9) = v35[0];
        *((_DWORD *)this + 20) |= 0x20u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_39:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 10) = v35[0];
        *((_DWORD *)this + 20) |= 0x40u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_44:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 11) = v35[0];
        *((_DWORD *)this + 20) |= 0x80u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 77)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_49:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 12) = v35[0];
        *((_DWORD *)this + 20) |= 0x100u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 85)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_54:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 13) = v35[0];
        *((_DWORD *)this + 20) |= 0x200u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 93)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_59:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 14) = v35[0];
        *((_DWORD *)this + 20) |= 0x400u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 101)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_64:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0)
          return 0;
        *((_DWORD *)this + 15) = v35[0];
        *((_DWORD *)this + 20) |= 0x800u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 109)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_69:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) != 0)
        {
          *((_DWORD *)this + 16) = v35[0];
          *((_DWORD *)this + 20) |= 0x1000u;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v20 < v19 && *v20 == 112)
          {
            v21 = v20 + 1;
            *((_QWORD *)a2 + 1) = v21;
LABEL_75:
            v35[0] = 0;
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
              if (!(_DWORD)result)
                return result;
              v22 = v35[0];
            }
            else
            {
              v22 = *v21;
              *((_QWORD *)a2 + 1) = v21 + 1;
            }
            if (v22 <= 2)
            {
              *((_DWORD *)this + 20) |= 0x2000u;
              *((_DWORD *)this + 17) = v22;
            }
            v28 = (_BYTE *)*((_QWORD *)a2 + 1);
            v23 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v28 < v23 && *v28 == 120)
            {
              v24 = v28 + 1;
              *((_QWORD *)a2 + 1) = v24;
LABEL_94:
              v35[0] = 0;
              if ((unint64_t)v24 >= v23 || (char)*v24 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                if (!(_DWORD)result)
                  return result;
                v29 = v35[0];
                v30 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v23 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v29 = *v24;
                v30 = v24 + 1;
                *((_QWORD *)a2 + 1) = v30;
              }
              *((_BYTE *)this + 72) = v29 != 0;
              *((_DWORD *)this + 20) |= 0x4000u;
              if ((int)v23 - (int)v30 >= 2 && *v30 == 128 && v30[1] == 1)
              {
                v25 = v30 + 2;
                *((_QWORD *)a2 + 1) = v25;
LABEL_103:
                v35[0] = 0;
                if ((unint64_t)v25 >= v23 || (char)*v25 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                  if (!(_DWORD)result)
                    return result;
                  v31 = v35[0];
                  v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v23 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  v31 = *v25;
                  v32 = v25 + 1;
                  *((_QWORD *)a2 + 1) = v32;
                }
                *((_BYTE *)this + 73) = v31 != 0;
                *((_DWORD *)this + 20) |= 0x8000u;
                if ((int)v23 - (int)v32 >= 2 && *v32 == 136 && v32[1] == 1)
                {
                  v26 = (char *)(v32 + 2);
                  *((_QWORD *)a2 + 1) = v26;
LABEL_112:
                  v35[0] = 0;
                  if ((unint64_t)v26 >= v23 || *v26 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                    if (!(_DWORD)result)
                      return result;
                    v33 = v35[0];
                    v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v23 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    v33 = *v26;
                    v34 = (unsigned __int8 *)(v26 + 1);
                    *((_QWORD *)a2 + 1) = v34;
                  }
                  *((_BYTE *)this + 74) = v33 != 0;
                  *((_DWORD *)this + 20) |= 0x10000u;
                  if (v34 == (unsigned __int8 *)v23
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    result = 1;
                    *((_BYTE *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_19;
        goto LABEL_83;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_24;
        goto LABEL_83;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_29;
        goto LABEL_83;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_34;
        goto LABEL_83;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_39;
        goto LABEL_83;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_44;
        goto LABEL_83;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_49;
        goto LABEL_83;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_54;
        goto LABEL_83;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_59;
        goto LABEL_83;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_64;
        goto LABEL_83;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_69;
        goto LABEL_83;
      case 0xEu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_83;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 0xFu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_83;
        v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_94;
      case 0x10u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_83;
        v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 0x11u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_83;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_112;
      default:
        v6 = TagFallback & 7;
LABEL_83:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 80);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 44), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 52), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(float *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(float *)(v5 + 60), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(float *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 74), (uint64_t)a2, a4);
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 73), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x10000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 74), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t result;

  v2 = *((_DWORD *)this + 20);
  if ((_BYTE)v2)
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      v3 += 5;
    if ((v2 & 0x10) != 0)
      v3 += 5;
    if ((v2 & 0x20) != 0)
      v3 += 5;
    if ((v2 & 0x40) != 0)
      v3 += 5;
    if ((v2 & 0x80) != 0)
      v3 += 5;
  }
  else
  {
    v3 = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
      v3 += 5;
    if ((v2 & 0x200) != 0)
      v3 += 5;
    if ((v2 & 0x400) != 0)
      v3 += 5;
    if ((v2 & 0x800) != 0)
      v3 += 5;
    if ((v2 & 0x1000) != 0)
      v4 = v3 + 5;
    else
      v4 = v3;
    if ((v2 & 0x2000) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
      if ((v5 & 0x80000000) != 0)
      {
        v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 20);
      }
      else
      {
        v6 = 2;
      }
      v4 += v6;
    }
    v3 = v4 + 2;
    if ((v2 & 0x4000) == 0)
      v3 = v4;
    if ((v2 & 0x8000) != 0)
      v3 += 3;
  }
  if ((v2 & 0x10000) != 0)
    result = v3 + 3;
  else
    result = v3;
  *((_DWORD *)this + 19) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  uint64_t v2;
  uint64_t v3;
  float result;
  int v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    LODWORD(v3) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    LODWORD(v3) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v3;
    LODWORD(v3) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v3;
    result = *((float *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((float *)a2 + 16) = result;
    v5 = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 72);
    *((_BYTE *)this + 72) = *((_BYTE *)a2 + 72);
    *((_BYTE *)a2 + 72) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 73);
    *((_BYTE *)this + 73) = *((_BYTE *)a2 + 73);
    *((_BYTE *)a2 + 73) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 74);
    *((_BYTE *)this + 74) = *((_BYTE *)a2 + 74);
    *((_BYTE *)a2 + 74) = v5;
    v6 = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v6;
    v7 = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.InertialOdometrySample");
}

uint64_t sub_18D1299AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D1299B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D1299BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D1299C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D1299CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D1299D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D1299DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D1299E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D1299EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 148);
}

uint64_t sub_18D1299F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D1299FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D129A04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D129A0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D129A14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 356);
}

uint64_t sub_18D129A1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129A24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D129A2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D129A34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D129A3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D129A44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 96);
}

uint64_t sub_18D129A4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18D129A54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D129A5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_18D129A64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D129A6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129A74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D129A7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129A84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D129A8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18D129A94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129A9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129AA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18D129AAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129AB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129ABC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18D129AC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18D129ACC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129AD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18D129ADC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129AE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_18D129AEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129AF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18D129AFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18D129B04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_18D129B0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18D129B14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129B1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18D129B24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129B2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129B34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129B3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D129B44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129B4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D129B54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129B5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_18D129B64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D129B6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18D129B74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D129B7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18D129B84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D129B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D129B94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18D129B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_18D129BA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18D129BAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D129BB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_18D129BBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129BC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18D129BCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18D129BD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D129BDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18D129BE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D129BEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D129BF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_18D129BFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18D129C04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18D129C0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18D129C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18D129C1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_18D129C24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_18D129C2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18D129C34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D129C3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D129C44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D129C4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D129C54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18D129C5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18D129C64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPPrivateDataCapture_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t result;

  result = CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
  if (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto_impl(CoreNavigation::CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  CoreNavigation::CLP::LogEntry::PrivateData *v4;
  CoreNavigation::CLP::LogEntry::PrivateData *v5;
  CoreNavigation::CLP::LogEntry::InternalToolData *v6;
  CoreNavigation::CLP::LogEntry::Raven *v7;
  CoreNavigation::CLP::LogEntry::RayTracingTileData *v8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *v9;
  CoreNavigation::CLP::LogEntry::Vision *v10;
  CoreNavigation::CLP::LogEntry::TropicalSavanna *v11;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *v12;
  uint64_t v13;
  void (*v14)(void);

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPPrivateDataCapture.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(v5);
  CoreNavigation::CLP::LogEntry::InternalToolData::protobuf_AddDesc_CoreNavigationCLPInternalToolData_2eproto(v6);
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(v7);
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(v8);
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(v9);
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(v10);
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(v11);
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(v12);
  v13 = operator new();
  *(_QWORD *)v13 = &off_1E25BBD08;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 88) = 0u;
  *(_OWORD *)(v13 + 104) = 0u;
  *(_OWORD *)(v13 + 120) = 0u;
  *(_OWORD *)(v13 + 136) = 0u;
  *(_OWORD *)(v13 + 152) = 0u;
  *(_OWORD *)(v13 + 168) = 0u;
  *(_OWORD *)(v13 + 184) = 0u;
  *(_OWORD *)(v13 + 200) = 0u;
  *(_OWORD *)(v13 + 216) = 0u;
  *(_OWORD *)(v13 + 232) = 0u;
  *(_OWORD *)(v13 + 248) = 0u;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 264) = 0u;
  *(_OWORD *)(v13 + 280) = 0u;
  *(_OWORD *)(v13 + 296) = 0u;
  *(_OWORD *)(v13 + 308) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ = v13;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::InitAsDefaultInstance((_QWORD *)v13);
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPPrivateDataCapture_2eproto, v14);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::PrivateDataCapture(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BBD08;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 308) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BBD08;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 308) = 0u;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_;
  this[4] = v2;
  v3 = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_;
  this[6] = v3;
  v4 = CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_;
  this[8] = v4;
  v5 = CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_;
  this[9] = CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_;
  this[10] = v5;
  v6 = CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_;
  this[11] = CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_;
  this[12] = v6;
  v7 = CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_;
  this[13] = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_;
  this[14] = v7;
  v8 = CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_;
  this[15] = CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_;
  this[16] = v8;
  v9 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_;
  this[17] = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_;
  this[18] = v9;
  v10 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_;
  this[19] = CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_;
  this[20] = v10;
  v11 = CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_;
  this[21] = CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_;
  this[22] = v11;
  v12 = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_;
  this[23] = CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_;
  this[24] = v12;
  v13 = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_;
  this[25] = CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_;
  this[26] = v13;
  v14 = CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_;
  this[27] = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_;
  this[28] = v14;
  v15 = CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_;
  this[29] = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_;
  this[30] = v15;
  v16 = CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_;
  this[31] = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_;
  this[32] = v16;
  v17 = CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_;
  this[33] = CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture::default_instance_;
  this[34] = v17;
  v18 = CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_;
  this[35] = CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_;
  this[36] = v18;
  v19 = CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_;
  this[37] = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_;
  this[38] = v19;
  return this;
}

_OWORD *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  _OWORD *result;

  *(_OWORD *)((char *)this + 8) = 0u;
  result = (_OWORD *)((char *)this + 8);
  result[17] = 0u;
  result[18] = 0u;
  result[15] = 0u;
  result[16] = 0u;
  result[13] = 0u;
  result[14] = 0u;
  result[11] = 0u;
  result[12] = 0u;
  result[9] = 0u;
  result[10] = 0u;
  result[7] = 0u;
  result[8] = 0u;
  result[5] = 0u;
  result[6] = 0u;
  result[3] = 0u;
  result[4] = 0u;
  result[1] = 0u;
  result[2] = 0u;
  *(_OWORD *)((char *)result + 300) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::PrivateDataCapture(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  *(_QWORD *)this = &off_1E25BBD08;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 308) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(this, a2);
  return this;
}

void sub_18D12A110(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *v3;
  unsigned int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::Accel *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::Accel *v6;
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::Baro *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::Baro *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::Location *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::Location *v12;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *v14;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *v16;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *v17;
  const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *v18;
  CoreNavigation::CLP::LogEntry::PrivateData::Timer *v19;
  const CoreNavigation::CLP::LogEntry::PrivateData::Timer *v20;
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *v21;
  const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *v22;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector *v23;
  const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *v24;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *v25;
  const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *v26;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *v27;
  const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *v28;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *v29;
  const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *v30;
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *v31;
  const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *v32;
  CoreNavigation::CLP::LogEntry::PrivateData::Reset *v33;
  const CoreNavigation::CLP::LogEntry::PrivateData::Reset *v34;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount *v35;
  const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *v36;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *v37;
  const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *v38;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *v39;
  const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *v40;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *v41;
  const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *v42;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *v43;
  const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *v44;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *v45;
  const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *v46;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *v47;
  const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *v48;
  CoreNavigation::CLP::LogEntry::PrivateData::Compass *v49;
  const CoreNavigation::CLP::LogEntry::PrivateData::Compass *v50;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *v51;
  const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *v52;
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *v53;
  const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *v54;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *v55;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *v56;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *v57;
  const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *v58;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState *v59;
  const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *v60;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *v61;
  const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *v62;
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *v63;
  const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *v64;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *v65;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *v66;
  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *v67;
  const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *v68;
  int v69;
  CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *v70;
  const CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *v71;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry *v72;
  const CoreNavigation::CLP::LogEntry::Raven::LogEntry *v73;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry *v74;
  const CoreNavigation::CLP::LogEntry::Vision::LogEntry *v75;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *v76;
  const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *v77;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *v78;
  const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *v79;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *v80;
  uint64_t v81;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *v82;
  _BYTE v83[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v83);
  }
  v4 = *((_DWORD *)a2 + 79);
  if (!(_BYTE)v4)
    goto LABEL_53;
  if ((v4 & 1) != 0)
  {
    *((_DWORD *)v3 + 79) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v5 = this;
      *((_QWORD *)this + 5) = 0;
      *(_QWORD *)this = &off_1E25BD4F0;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::Accel *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Accel **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                       + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(v5, v6);
    v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 79) |= 2u;
  v7 = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)*((_QWORD *)v3 + 2);
  if (!v7)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v7 = this;
    *((_QWORD *)this + 5) = 0;
    *(_QWORD *)this = &off_1E25BD400;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)*((_QWORD *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Gyro **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                    + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(v7, v8);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)v3 + 79) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)*((_QWORD *)v3 + 3);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v9 = this;
    *((_QWORD *)this + 5) = 0;
    *(_QWORD *)this = &off_1E25BD388;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::Baro *)*((_QWORD *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Baro **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                     + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(v9, v10);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_33;
  }
LABEL_28:
  *((_DWORD *)v3 + 79) |= 8u;
  v11 = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)*((_QWORD *)v3 + 4);
  if (!v11)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v11 = this;
    *(_QWORD *)this = &off_1E25BD928;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *(_QWORD *)((char *)this + 29) = 0;
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
    *(_OWORD *)((char *)this + 72) = 0u;
    *(_OWORD *)((char *)this + 88) = 0u;
    *((_QWORD *)v3 + 4) = this;
  }
  v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::Location *)*((_QWORD *)a2 + 4);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Location **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                         + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(v11, v12);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_38:
    *((_DWORD *)v3 + 79) |= 0x20u;
    v15 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)*((_QWORD *)v3 + 6);
    if (!v15)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v15 = this;
      *(_QWORD *)this = &off_1E25BC0C8;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)v3 + 6) = this;
    }
    v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)*((_QWORD *)a2 + 6);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                      + 48);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(v15, v16);
    v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_53;
      goto LABEL_48;
    }
    goto LABEL_43;
  }
LABEL_33:
  *((_DWORD *)v3 + 79) |= 0x10u;
  v13 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)*((_QWORD *)v3 + 5);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v13 = this;
    *(_QWORD *)this = &off_1E25BA160;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 5) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)*((_QWORD *)a2 + 5);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionState **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 40);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(v13, v14);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x20) != 0)
    goto LABEL_38;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_43:
  *((_DWORD *)v3 + 79) |= 0x40u;
  v17 = (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)*((_QWORD *)v3 + 7);
  if (!v17)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v17 = this;
    *(_QWORD *)this = &off_1E25BA1D8;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 7) = this;
  }
  v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)*((_QWORD *)a2 + 7);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 56);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(v17, v18);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x80) != 0)
  {
LABEL_48:
    *((_DWORD *)v3 + 79) |= 0x80u;
    v19 = (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)*((_QWORD *)v3 + 8);
    if (!v19)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v19 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BD658;
      *((_QWORD *)v3 + 8) = this;
    }
    v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::Timer *)*((_QWORD *)a2 + 8);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Timer **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                        + 64);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(v19, v20);
    v4 = *((_DWORD *)a2 + 79);
  }
LABEL_53:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_103;
  if ((v4 & 0x100) != 0)
  {
    *((_DWORD *)v3 + 79) |= 0x100u;
    v21 = (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)*((_QWORD *)v3 + 9);
    if (!v21)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v21 = this;
      *(_QWORD *)this = &off_1E25BC488;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 9) = this;
    }
    v22 = (const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)*((_QWORD *)a2 + 9);
    if (!v22)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v22 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                        + 72);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(v21, v22);
    v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x200) == 0)
    {
LABEL_56:
      if ((v4 & 0x400) == 0)
        goto LABEL_57;
      goto LABEL_73;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_56;
  }
  *((_DWORD *)v3 + 79) |= 0x200u;
  v23 = (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)*((_QWORD *)v3 + 10);
  if (!v23)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v23 = this;
    *(_QWORD *)this = &off_1E25BDA90;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 10) = this;
  }
  v24 = (const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)*((_QWORD *)a2 + 10);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v24 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapVector **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                          + 80);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(v23, v24);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x400) == 0)
  {
LABEL_57:
    if ((v4 & 0x800) == 0)
      goto LABEL_58;
    goto LABEL_78;
  }
LABEL_73:
  *((_DWORD *)v3 + 79) |= 0x400u;
  v25 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)*((_QWORD *)v3 + 11);
  if (!v25)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v25 = this;
    *(_QWORD *)this = &off_1E25BA2C8;
    *((_QWORD *)this + 7) = 0;
    *((_DWORD *)this + 13) = 0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 34) = 0u;
    *((_QWORD *)v3 + 11) = this;
  }
  v26 = (const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)*((_QWORD *)a2 + 11);
  if (!v26)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v26 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 88);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(v25, v26);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x800) == 0)
  {
LABEL_58:
    if ((v4 & 0x1000) == 0)
      goto LABEL_59;
    goto LABEL_83;
  }
LABEL_78:
  *((_DWORD *)v3 + 79) |= 0x800u;
  v27 = (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)*((_QWORD *)v3 + 12);
  if (!v27)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v27 = this;
    *(_QWORD *)this = &off_1E25BB948;
    *((_QWORD *)this + 1) = 0;
    *((_OWORD *)this + 1) = xmmword_18D30F420;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 12) = this;
  }
  v28 = (const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)*((_QWORD *)a2 + 12);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v28 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                  + 96);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(v27, v28);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x1000) == 0)
  {
LABEL_59:
    if ((v4 & 0x2000) == 0)
      goto LABEL_60;
    goto LABEL_88;
  }
LABEL_83:
  *((_DWORD *)v3 + 79) |= 0x1000u;
  v29 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((_QWORD *)v3 + 13);
  if (!v29)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v29 = this;
    *(_QWORD *)this = &off_1E25BD130;
    *((_QWORD *)this + 6) = 0;
    *((_QWORD *)this + 7) = 0;
    *((_DWORD *)this + 16) = 0;
    *((_QWORD *)this + 16) = 0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_DWORD *)this + 10) = 0;
    *(_OWORD *)((char *)this + 72) = 0u;
    *(_OWORD *)((char *)this + 88) = 0u;
    *(_OWORD *)((char *)this + 104) = 0u;
    *((_DWORD *)this + 30) = 0;
    *((_QWORD *)v3 + 13) = this;
  }
  v30 = (const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((_QWORD *)a2 + 13);
  if (!v30)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v30 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                                  + 104);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergeFrom(v29, v30);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x2000) == 0)
  {
LABEL_60:
    if ((v4 & 0x4000) == 0)
      goto LABEL_61;
    goto LABEL_93;
  }
LABEL_88:
  *((_DWORD *)v3 + 79) |= 0x2000u;
  v31 = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)*((_QWORD *)v3 + 14);
  if (!v31)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v31 = this;
    *((_QWORD *)this + 5) = 0;
    *(_QWORD *)this = &off_1E25BA340;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 14) = this;
  }
  v32 = (const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)*((_QWORD *)a2 + 14);
  if (!v32)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v32 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 112);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(v31, v32);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x4000) == 0)
  {
LABEL_61:
    if ((v4 & 0x8000) == 0)
      goto LABEL_103;
    goto LABEL_98;
  }
LABEL_93:
  *((_DWORD *)v3 + 79) |= 0x4000u;
  v33 = (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)*((_QWORD *)v3 + 15);
  if (!v33)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v33 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BD5E0;
    *((_QWORD *)v3 + 15) = this;
  }
  v34 = (const CoreNavigation::CLP::LogEntry::PrivateData::Reset *)*((_QWORD *)a2 + 15);
  if (!v34)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v34 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Reset **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                      + 120);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(v33, v34);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x8000) != 0)
  {
LABEL_98:
    *((_DWORD *)v3 + 79) |= 0x8000u;
    v35 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)*((_QWORD *)v3 + 16);
    if (!v35)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v35 = this;
      *(_QWORD *)this = &off_1E25BDB08;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)v3 + 16) = this;
    }
    v36 = (const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)*((_QWORD *)a2 + 16);
    if (!v36)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v36 = *(const CoreNavigation::CLP::LogEntry::PrivateData::StepCount **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 128);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(v35, v36);
    v4 = *((_DWORD *)a2 + 79);
  }
LABEL_103:
  if ((v4 & 0xFF0000) == 0)
    goto LABEL_153;
  if ((v4 & 0x10000) != 0)
  {
    *((_DWORD *)v3 + 79) |= 0x10000u;
    v37 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)*((_QWORD *)v3 + 17);
    if (!v37)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v37 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BBAB0;
      *((_BYTE *)this + 24) = 0;
      *(_OWORD *)((char *)this + 28) = 0u;
      *(_OWORD *)((char *)this + 44) = 0u;
      *((_QWORD *)v3 + 17) = this;
    }
    v38 = (const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)*((_QWORD *)a2 + 17);
    if (!v38)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v38 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                     + 136);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(v37, v38);
    v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x20000) == 0)
    {
LABEL_106:
      if ((v4 & 0x40000) == 0)
        goto LABEL_107;
      goto LABEL_123;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_106;
  }
  *((_DWORD *)v3 + 79) |= 0x20000u;
  v39 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)*((_QWORD *)v3 + 18);
  if (!v39)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v39 = this;
    *(_QWORD *)this = &off_1E25BCB90;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 18) = this;
  }
  v40 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)*((_QWORD *)a2 + 18);
  if (!v40)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v40 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                         + 144);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(v39, v40);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x40000) == 0)
  {
LABEL_107:
    if ((v4 & 0x80000) == 0)
      goto LABEL_108;
    goto LABEL_128;
  }
LABEL_123:
  *((_DWORD *)v3 + 79) |= 0x40000u;
  v41 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)*((_QWORD *)v3 + 19);
  if (!v41)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v41 = this;
    *(_QWORD *)this = &off_1E25BB3A8;
    *((_DWORD *)this + 13) = 0;
    *((_DWORD *)this + 14) = 0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 33) = 0u;
    *((_QWORD *)v3 + 19) = this;
  }
  v42 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)*((_QWORD *)a2 + 19);
  if (!v42)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v42 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                 + 152);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(v41, v42);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x80000) == 0)
  {
LABEL_108:
    if ((v4 & 0x100000) == 0)
      goto LABEL_109;
    goto LABEL_133;
  }
LABEL_128:
  *((_DWORD *)v3 + 79) |= 0x80000u;
  v43 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)*((_QWORD *)v3 + 20);
  if (!v43)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v43 = this;
    *(_QWORD *)this = &off_1E25BAB38;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 20) = this;
  }
  v44 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)*((_QWORD *)a2 + 20);
  if (!v44)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v44 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                               + 160);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(v43, v44);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x100000) == 0)
  {
LABEL_109:
    if ((v4 & 0x200000) == 0)
      goto LABEL_110;
    goto LABEL_138;
  }
LABEL_133:
  *((_DWORD *)v3 + 79) |= 0x100000u;
  v45 = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)*((_QWORD *)v3 + 21);
  if (!v45)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v45 = this;
    *(_QWORD *)this = &off_1E25BD0B8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 37) = 0u;
    *((_QWORD *)this + 8) = 0;
    *((_QWORD *)this + 9) = 0;
    *((_QWORD *)this + 7) = 0;
    *((_DWORD *)this + 20) = 0;
    *((_QWORD *)v3 + 21) = this;
  }
  v46 = (const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)*((_QWORD *)a2 + 21);
  if (!v46)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v46 = *(const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                                  + 168);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(v45, v46);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x200000) == 0)
  {
LABEL_110:
    if ((v4 & 0x400000) == 0)
      goto LABEL_111;
    goto LABEL_143;
  }
LABEL_138:
  *((_DWORD *)v3 + 79) |= 0x200000u;
  v47 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)*((_QWORD *)v3 + 22);
  if (!v47)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v47 = this;
    *(_QWORD *)this = &off_1E25BC2A8;
    *((_QWORD *)this + 7) = 0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 36) = 0u;
    *((_QWORD *)v3 + 22) = this;
  }
  v48 = (const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)*((_QWORD *)a2 + 22);
  if (!v48)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v48 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                     + 176);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(v47, v48);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x400000) == 0)
  {
LABEL_111:
    if ((v4 & 0x800000) == 0)
      goto LABEL_153;
    goto LABEL_148;
  }
LABEL_143:
  *((_DWORD *)v3 + 79) |= 0x400000u;
  v49 = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)*((_QWORD *)v3 + 23);
  if (!v49)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v49 = this;
    *((_QWORD *)this + 5) = 0;
    *(_QWORD *)this = &off_1E25BD838;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 23) = this;
  }
  v50 = (const CoreNavigation::CLP::LogEntry::PrivateData::Compass *)*((_QWORD *)a2 + 23);
  if (!v50)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v50 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Compass **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                        + 184);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(v49, v50);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x800000) != 0)
  {
LABEL_148:
    *((_DWORD *)v3 + 79) |= 0x800000u;
    v51 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)*((_QWORD *)v3 + 24);
    if (!v51)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v51 = this;
      *((_QWORD *)this + 5) = 0;
      *(_QWORD *)this = &off_1E25BA250;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)v3 + 24) = this;
    }
    v52 = (const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)*((_QWORD *)a2 + 24);
    if (!v52)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v52 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                               + 192);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(v51, v52);
    v4 = *((_DWORD *)a2 + 79);
  }
LABEL_153:
  if (!HIBYTE(v4))
    goto LABEL_203;
  if ((v4 & 0x1000000) != 0)
  {
    *((_DWORD *)v3 + 79) |= 0x1000000u;
    v53 = (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)*((_QWORD *)v3 + 25);
    if (!v53)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v53 = this;
      *(_QWORD *)this = &off_1E25BCDE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 25) = this;
    }
    v54 = (const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)*((_QWORD *)a2 + 25);
    if (!v54)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v54 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                             + 200);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(v53, v54);
    v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_156:
      if ((v4 & 0x4000000) == 0)
        goto LABEL_157;
      goto LABEL_173;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_156;
  }
  *((_DWORD *)v3 + 79) |= 0x2000000u;
  v55 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)*((_QWORD *)v3 + 26);
  if (!v55)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v55 = this;
    *(_QWORD *)this = &off_1E25BBB28;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
    *((_QWORD *)v3 + 26) = this;
  }
  v56 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)*((_QWORD *)a2 + 26);
  if (!v56)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v56 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                   + 208);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(v55, v56);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_157:
    if ((v4 & 0x8000000) == 0)
      goto LABEL_158;
    goto LABEL_178;
  }
LABEL_173:
  *((_DWORD *)v3 + 79) |= 0x4000000u;
  v57 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)*((_QWORD *)v3 + 27);
  if (!v57)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v57 = this;
    *((_BYTE *)this + 40) = 0;
    *((_DWORD *)this + 11) = 0;
    *((_DWORD *)this + 12) = 0;
    *(_QWORD *)this = &off_1E25BCC80;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 27) = this;
  }
  v58 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)*((_QWORD *)a2 + 27);
  if (!v58)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v58 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                          + 216);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(v57, v58);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_158:
    if ((v4 & 0x10000000) == 0)
      goto LABEL_159;
    goto LABEL_183;
  }
LABEL_178:
  *((_DWORD *)v3 + 79) |= 0x8000000u;
  v59 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)*((_QWORD *)v3 + 28);
  if (!v59)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v59 = this;
    *(_QWORD *)this = &off_1E25B9E90;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_DWORD *)this + 10) = 0;
    *((_QWORD *)v3 + 28) = this;
  }
  v60 = (const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)*((_QWORD *)a2 + 28);
  if (!v60)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v60 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WatchState **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                           + 224);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(v59, v60);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_159:
    if ((v4 & 0x20000000) == 0)
      goto LABEL_160;
    goto LABEL_188;
  }
LABEL_183:
  *((_DWORD *)v3 + 79) |= 0x10000000u;
  v61 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)*((_QWORD *)v3 + 29);
  if (!v61)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v61 = this;
    *(_QWORD *)this = &off_1E25BC050;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)v3 + 29) = this;
  }
  v62 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)*((_QWORD *)a2 + 29);
  if (!v62)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v62 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                    + 232);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(v61, v62);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_160:
    if ((v4 & 0x40000000) == 0)
      goto LABEL_161;
    goto LABEL_193;
  }
LABEL_188:
  *((_DWORD *)v3 + 79) |= 0x20000000u;
  v63 = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)*((_QWORD *)v3 + 30);
  if (!v63)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v63 = this;
    *(_QWORD *)this = &off_1E25BA3B8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
    *((_QWORD *)v3 + 30) = this;
  }
  v64 = (const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)*((_QWORD *)a2 + 30);
  if (!v64)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v64 = *(const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 240);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(v63, v64);
  v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_161:
    if ((v4 & 0x80000000) == 0)
      goto LABEL_203;
    goto LABEL_198;
  }
LABEL_193:
  *((_DWORD *)v3 + 79) |= 0x40000000u;
  v65 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)*((_QWORD *)v3 + 31);
  if (!v65)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v65 = this;
    *(_QWORD *)this = &off_1E25BF098;
    *((_QWORD *)this + 6) = 0;
    *((_QWORD *)this + 7) = 0;
    *((_DWORD *)this + 16) = 0;
    *((_QWORD *)this + 9) = 0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_DWORD *)this + 10) = 0;
    *((_QWORD *)v3 + 31) = this;
  }
  v66 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)*((_QWORD *)a2 + 31);
  if (!v66)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v66 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 248);
  }
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergeFrom(v65, v66);
  if ((*((_DWORD *)a2 + 79) & 0x80000000) != 0)
  {
LABEL_198:
    *((_DWORD *)v3 + 79) |= 0x80000000;
    v67 = (CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *)*((_QWORD *)v3 + 32);
    if (!v67)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v67 = this;
      *(_QWORD *)this = &off_1E25B0EE0;
      *((_DWORD *)this + 14) = 0;
      *((_QWORD *)this + 6) = 0;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_QWORD *)((char *)this + 37) = 0;
      *((_QWORD *)v3 + 32) = this;
    }
    v68 = (const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *)*((_QWORD *)a2 + 32);
    if (!v68)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v68 = *(const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                + 256);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(v67, v68);
  }
LABEL_203:
  LOBYTE(v69) = *((_BYTE *)a2 + 320);
  if (!(_BYTE)v69)
    return;
  if ((*((_BYTE *)a2 + 320) & 1) != 0)
  {
    *((_DWORD *)v3 + 80) |= 1u;
    v70 = (CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *)*((_QWORD *)v3 + 33);
    if (!v70)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v70 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BDE50;
      *((_QWORD *)v3 + 33) = this;
    }
    v71 = (const CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *)*((_QWORD *)a2 + 33);
    if (!v71)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v71 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                               + 264);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture::MergeFrom(v70, v71);
    v69 = *((_DWORD *)a2 + 80);
    if ((v69 & 2) == 0)
    {
LABEL_206:
      if ((v69 & 4) == 0)
        goto LABEL_207;
      goto LABEL_221;
    }
  }
  else if ((*((_BYTE *)a2 + 320) & 2) == 0)
  {
    goto LABEL_206;
  }
  *((_DWORD *)v3 + 80) |= 2u;
  v72 = (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)*((_QWORD *)v3 + 34);
  if (!v72)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v72 = this;
    *(_QWORD *)this = &off_1E25BFF20;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 34) = this;
  }
  v73 = (const CoreNavigation::CLP::LogEntry::Raven::LogEntry *)*((_QWORD *)a2 + 34);
  if (!v73)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v73 = *(const CoreNavigation::CLP::LogEntry::Raven::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                   + 272);
  }
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(v72, v73);
  v69 = *((_DWORD *)a2 + 80);
  if ((v69 & 4) == 0)
  {
LABEL_207:
    if ((v69 & 8) == 0)
      goto LABEL_208;
    goto LABEL_226;
  }
LABEL_221:
  *((_DWORD *)v3 + 80) |= 4u;
  v74 = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)*((_QWORD *)v3 + 35);
  if (!v74)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v74 = this;
    *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
    *((_DWORD *)this + 10) = 0;
    *(_QWORD *)this = &off_1E25C09E8;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 35) = this;
  }
  v75 = (const CoreNavigation::CLP::LogEntry::Vision::LogEntry *)*((_QWORD *)a2 + 35);
  if (!v75)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v75 = *(const CoreNavigation::CLP::LogEntry::Vision::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                    + 280);
  }
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(v74, v75);
  v69 = *((_DWORD *)a2 + 80);
  if ((v69 & 8) == 0)
  {
LABEL_208:
    if ((v69 & 0x10) == 0)
      goto LABEL_209;
    goto LABEL_231;
  }
LABEL_226:
  *((_DWORD *)v3 + 80) |= 8u;
  v76 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)*((_QWORD *)v3 + 36);
  if (!v76)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v76 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BDD60;
    *((_QWORD *)v3 + 36) = this;
  }
  v77 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)*((_QWORD *)a2 + 36);
  if (!v77)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v77 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 288);
  }
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(v76, v77);
  v69 = *((_DWORD *)a2 + 80);
  if ((v69 & 0x10) == 0)
  {
LABEL_209:
    if ((v69 & 0x20) == 0)
      return;
    goto LABEL_236;
  }
LABEL_231:
  *((_DWORD *)v3 + 80) |= 0x10u;
  v78 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)*((_QWORD *)v3 + 37);
  if (!v78)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
    v78 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BF5C0;
    *((_QWORD *)v3 + 37) = this;
  }
  v79 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)*((_QWORD *)a2 + 37);
  if (!v79)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    v79 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                         + 296);
  }
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergeFrom(v78, v79);
  if ((*((_DWORD *)a2 + 80) & 0x20) != 0)
  {
LABEL_236:
    *((_DWORD *)v3 + 80) |= 0x20u;
    v80 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)*((_QWORD *)v3 + 38);
    if (!v80)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)operator new();
      v80 = this;
      v81 = MEMORY[0x1E0DE8338];
      *(_QWORD *)this = &off_1E25BEA08;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = v81;
      *((_QWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 38) = this;
    }
    v82 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)*((_QWORD *)a2 + 38);
    if (!v82)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      v82 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                  + 304);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(v80, v82);
  }
}

void sub_18D12B47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 312) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::New(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BBD08;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
  *(_OWORD *)(v1 + 296) = 0u;
  *(_OWORD *)(v1 + 308) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::Clear(uint64_t this)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = this;
  v2 = (unsigned int *)(this + 316);
  v3 = *(_DWORD *)(this + 316);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Accel::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Baro::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Location::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x10) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionState::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 56);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x80) != 0)
    {
      v4 = *(_QWORD *)(v1 + 64);
      if (v4)
      {
        if ((*(_BYTE *)(v4 + 20) & 1) != 0)
        {
          v5 = *(_QWORD *)(v4 + 8);
          if (v5)
          {
            if (*(_BYTE *)(v5 + 36))
            {
              *(_QWORD *)(v5 + 8) = 0;
              *(_QWORD *)(v5 + 16) = 0;
              *(_QWORD *)(v5 + 24) = 0;
            }
            *(_DWORD *)(v5 + 36) = 0;
          }
        }
        *(_DWORD *)(v4 + 20) = 0;
        v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      this = *(_QWORD *)(v1 + 72);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x200) != 0)
    {
      this = *(_QWORD *)(v1 + 80);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MapVector::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x400) != 0)
    {
      this = *(_QWORD *)(v1 + 88);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x800) != 0)
    {
      this = *(_QWORD *)(v1 + 96);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x1000) != 0)
    {
      this = *(_QWORD *)(v1 + 104);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x2000) != 0)
    {
      this = *(_QWORD *)(v1 + 112);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      v6 = *(_QWORD *)(v1 + 120);
      if (v6)
      {
        if ((*(_BYTE *)(v6 + 20) & 1) != 0)
        {
          v7 = *(_QWORD *)(v6 + 8);
          if (v7)
          {
            if (*(_BYTE *)(v7 + 36))
            {
              *(_QWORD *)(v7 + 8) = 0;
              *(_QWORD *)(v7 + 16) = 0;
              *(_QWORD *)(v7 + 24) = 0;
            }
            *(_DWORD *)(v7 + 36) = 0;
          }
        }
        *(_DWORD *)(v6 + 20) = 0;
        v3 = *v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      this = *(_QWORD *)(v1 + 128);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::StepCount::Clear(this);
        v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      this = *(_QWORD *)(v1 + 136);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      this = *(_QWORD *)(v1 + 144);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      this = *(_QWORD *)(v1 + 152);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      this = *(_QWORD *)(v1 + 160);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      this = *(_QWORD *)(v1 + 168);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      this = *(_QWORD *)(v1 + 176);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      this = *(_QWORD *)(v1 + 184);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Compass::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x800000) != 0)
    {
      this = *(_QWORD *)(v1 + 192);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::Clear(this);
        v3 = *v2;
      }
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      this = *(_QWORD *)(v1 + 200);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      this = *(_QWORD *)(v1 + 208);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      this = *(_QWORD *)(v1 + 216);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x8000000) != 0)
    {
      this = *(_QWORD *)(v1 + 224);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WatchState::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x10000000) != 0)
    {
      this = *(_QWORD *)(v1 + 232);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x20000000) != 0)
    {
      this = *(_QWORD *)(v1 + 240);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x40000000) != 0)
    {
      this = *(_QWORD *)(v1 + 248);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::Clear(this);
        v3 = *v2;
      }
    }
    if ((v3 & 0x80000000) != 0)
    {
      v8 = *(_QWORD *)(v1 + 256);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 56))
        {
          *(_DWORD *)(v8 + 48) = 0;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_QWORD *)(v8 + 37) = 0;
        }
        *(_DWORD *)(v8 + 56) = 0;
      }
    }
  }
  LOBYTE(v9) = *(_BYTE *)(v1 + 320);
  if ((_BYTE)v9)
  {
    if ((*(_BYTE *)(v1 + 320) & 1) != 0)
    {
      v10 = *(_QWORD *)(v1 + 264);
      if (v10)
      {
        if ((*(_BYTE *)(v10 + 20) & 1) != 0)
        {
          this = *(_QWORD *)(v10 + 8);
          if (this)
            this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::Clear(this);
        }
        *(_DWORD *)(v10 + 20) = 0;
        v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 272);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::LogEntry::Clear(this);
        v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 280);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::LogEntry::Clear(this);
        v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 8) != 0)
    {
      v11 = *(_QWORD *)(v1 + 288);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 20) & 1) != 0)
        {
          this = *(_QWORD *)(v11 + 8);
          if (this)
            this = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Clear(this);
        }
        *(_DWORD *)(v11 + 20) = 0;
        v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 0x10) != 0)
    {
      v12 = *(_QWORD *)(v1 + 296);
      if (v12)
      {
        if ((*(_BYTE *)(v12 + 20) & 1) != 0)
        {
          this = *(_QWORD *)(v12 + 8);
          if (this)
            this = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::Clear(this);
        }
        *(_DWORD *)(v12 + 20) = 0;
        v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 304);
      if (this)
        this = CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::Clear(this);
    }
  }
  *(_QWORD *)v2 = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v5 = this;
  v6 = *(_DWORD *)(this + 316);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 316);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_40;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_43;
  }
LABEL_40:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_46;
  }
LABEL_43:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_49;
  }
LABEL_46:
  v11 = *(_QWORD *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_52;
  }
LABEL_49:
  v12 = *(_QWORD *)(v5 + 48);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_55;
  }
LABEL_52:
  v13 = *(_QWORD *)(v5 + 56);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_58;
  }
LABEL_55:
  v14 = *(_QWORD *)(v5 + 64);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_61;
  }
LABEL_58:
  v15 = *(_QWORD *)(v5 + 72);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v15 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v15, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_64;
  }
LABEL_61:
  v16 = *(_QWORD *)(v5 + 80);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v16 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v16, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_67;
  }
LABEL_64:
  v17 = *(_QWORD *)(v5 + 88);
  if (!v17)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v17 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v17, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_70;
  }
LABEL_67:
  v18 = *(_QWORD *)(v5 + 96);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v18 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 96);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v18, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_73;
  }
LABEL_70:
  v19 = *(_QWORD *)(v5 + 104);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v19 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v19, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_76;
  }
LABEL_73:
  v20 = *(_QWORD *)(v5 + 112);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v20 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 112);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v20, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_79;
  }
LABEL_76:
  v21 = *(_QWORD *)(v5 + 120);
  if (!v21)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v21 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 120);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v21, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_82;
  }
LABEL_79:
  v22 = *(_QWORD *)(v5 + 128);
  if (!v22)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v22 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 128);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v22, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_85;
  }
LABEL_82:
  v23 = *(_QWORD *)(v5 + 136);
  if (!v23)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v23 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v23, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_88;
  }
LABEL_85:
  v24 = *(_QWORD *)(v5 + 144);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v24 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 144);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, v24, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_91;
  }
LABEL_88:
  v25 = *(_QWORD *)(v5 + 152);
  if (!v25)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v25 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 152);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v25, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_94;
  }
LABEL_91:
  v26 = *(_QWORD *)(v5 + 160);
  if (!v26)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v26 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 160);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, v26, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_97;
  }
LABEL_94:
  v27 = *(_QWORD *)(v5 + 168);
  if (!v27)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v27 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 168);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v27, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_100;
  }
LABEL_97:
  v28 = *(_QWORD *)(v5 + 176);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v28 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 176);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, v28, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_103;
  }
LABEL_100:
  v29 = *(_QWORD *)(v5 + 184);
  if (!v29)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v29 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 184);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, v29, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_106;
  }
LABEL_103:
  v30 = *(_QWORD *)(v5 + 192);
  if (!v30)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v30 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 192);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v30, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_109;
  }
LABEL_106:
  v31 = *(_QWORD *)(v5 + 200);
  if (!v31)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v31 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 200);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v31, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_112;
  }
LABEL_109:
  v32 = *(_QWORD *)(v5 + 208);
  if (!v32)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v32 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 208);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v32, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_115;
  }
LABEL_112:
  v33 = *(_QWORD *)(v5 + 216);
  if (!v33)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v33 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 216);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, v33, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_118;
  }
LABEL_115:
  v34 = *(_QWORD *)(v5 + 224);
  if (!v34)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v34 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 224);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, v34, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_121;
  }
LABEL_118:
  v35 = *(_QWORD *)(v5 + 232);
  if (!v35)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v35 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 232);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, v35, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
    goto LABEL_124;
  }
LABEL_121:
  v36 = *(_QWORD *)(v5 + 240);
  if (!v36)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v36 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 240);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, v36, a2, a4);
  v6 = *(_DWORD *)(v5 + 316);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0)
      goto LABEL_130;
    goto LABEL_127;
  }
LABEL_124:
  v37 = *(_QWORD *)(v5 + 248);
  if (!v37)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v37 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 248);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v37, a2, a4);
  if ((*(_DWORD *)(v5 + 316) & 0x80000000) != 0)
  {
LABEL_127:
    v38 = *(_QWORD *)(v5 + 256);
    if (!v38)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v38 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 256);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, v38, a2, a4);
  }
LABEL_130:
  v39 = *(_DWORD *)(v5 + 320);
  if ((v39 & 1) != 0)
  {
    v40 = *(_QWORD *)(v5 + 264);
    if (!v40)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v40 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 264);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E8, v40, a2, a4);
    v39 = *(_DWORD *)(v5 + 320);
    if ((v39 & 2) == 0)
    {
LABEL_132:
      if ((v39 & 4) == 0)
        goto LABEL_133;
      goto LABEL_143;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_132;
  }
  v41 = *(_QWORD *)(v5 + 272);
  if (!v41)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v41 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 272);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3EE, v41, a2, a4);
  v39 = *(_DWORD *)(v5 + 320);
  if ((v39 & 4) == 0)
  {
LABEL_133:
    if ((v39 & 8) == 0)
      goto LABEL_134;
    goto LABEL_146;
  }
LABEL_143:
  v42 = *(_QWORD *)(v5 + 280);
  if (!v42)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v42 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 280);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3EF, v42, a2, a4);
  v39 = *(_DWORD *)(v5 + 320);
  if ((v39 & 8) == 0)
  {
LABEL_134:
    if ((v39 & 0x10) == 0)
      goto LABEL_135;
    goto LABEL_149;
  }
LABEL_146:
  v43 = *(_QWORD *)(v5 + 288);
  if (!v43)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v43 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 288);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F2, v43, a2, a4);
  v39 = *(_DWORD *)(v5 + 320);
  if ((v39 & 0x10) == 0)
  {
LABEL_135:
    if ((v39 & 0x20) == 0)
      return this;
    goto LABEL_152;
  }
LABEL_149:
  v44 = *(_QWORD *)(v5 + 296);
  if (!v44)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v44 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 296);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F6, v44, a2, a4);
  if ((*(_DWORD *)(v5 + 320) & 0x20) != 0)
  {
LABEL_152:
    v45 = *(_QWORD *)(v5 + 304);
    if (!v45)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v45 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 304);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F8, v45, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  unsigned int v2;
  uint64_t v3;
  CoreNavigation::CLP::LogEntry::PrivateData::Accel *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  CoreNavigation::CLP::LogEntry::PrivateData::Baro *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  CoreNavigation::CLP::LogEntry::PrivateData::Timer *v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector *v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  int v43;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  int v47;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  int v51;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  int v55;
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *v56;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v57;
  int v58;
  int v59;
  CoreNavigation::CLP::LogEntry::PrivateData::Reset *v60;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v61;
  int v62;
  int v63;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount *v64;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v65;
  int v66;
  int v67;
  uint64_t v68;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v69;
  int v70;
  int v71;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *v72;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v73;
  int v74;
  int v75;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *v76;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v77;
  int v78;
  int v79;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *v80;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v81;
  int v82;
  int v83;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *v84;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v85;
  int v86;
  int v87;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *v88;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v89;
  int v90;
  int v91;
  CoreNavigation::CLP::LogEntry::PrivateData::Compass *v92;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v93;
  int v94;
  int v95;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *v96;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v97;
  int v98;
  int v99;
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *v100;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v101;
  int v102;
  int v103;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *v104;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v105;
  int v106;
  int v107;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *v108;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v109;
  int v110;
  int v111;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState *v112;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v113;
  int v114;
  int v115;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *v116;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v117;
  int v118;
  int v119;
  uint64_t v120;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v121;
  int v122;
  int v123;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *v124;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v125;
  int v126;
  int v127;
  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *v128;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v129;
  int v130;
  int v131;
  int v132;
  CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *v133;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v134;
  int v135;
  int v136;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry *v137;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v138;
  int v139;
  int v140;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry *v141;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v142;
  int v143;
  int v144;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *v145;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v146;
  int v147;
  int v148;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *v149;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v150;
  int v151;
  int v152;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *v153;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v154;
  int v155;
  int v156;

  v2 = *((_DWORD *)this + 79);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_61;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)*((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::Accel **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                               + 8);
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Accel::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::Gyro **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Gyro::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 = (v3 + v10 + v11 + 1);
    v2 = *((_DWORD *)this + 79);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v12 = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)*((_QWORD *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v12 = *(CoreNavigation::CLP::LogEntry::PrivateData::Baro **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                 + 24);
    }
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Baro::ByteSize(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v3 = (v3 + v14 + v15 + 1);
    v2 = *((_DWORD *)this + 79);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v16 = *((_QWORD *)this + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v16 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 32);
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Location::ByteSize(v16);
  v18 = (int)v17;
  if (v17 >= 0x80)
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  else
    v19 = 1;
  v3 = (v3 + v18 + v19 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_37:
  v20 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)*((_QWORD *)this + 5);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v20 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionState **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                      + 40);
  }
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionState::ByteSize(v20);
  v22 = (int)v21;
  if (v21 >= 0x80)
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  else
    v23 = 1;
  v3 = (v3 + v22 + v23 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_49;
  }
LABEL_43:
  v24 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)*((_QWORD *)this + 6);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v24 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                              + 48);
  }
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::ByteSize(v24);
  v26 = (int)v25;
  if (v25 >= 0x80)
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
  else
    v27 = 1;
  v3 = (v3 + v26 + v27 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0)
      goto LABEL_61;
    goto LABEL_55;
  }
LABEL_49:
  v28 = (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)*((_QWORD *)this + 7);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v28 = *(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                      + 56);
  }
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::ByteSize(v28);
  v30 = (int)v29;
  if (v29 >= 0x80)
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
  else
    v31 = 1;
  v3 = (v3 + v30 + v31 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x80) != 0)
  {
LABEL_55:
    v32 = (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)*((_QWORD *)this + 8);
    if (!v32)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v32 = *(CoreNavigation::CLP::LogEntry::PrivateData::Timer **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                  + 64);
    }
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Timer::ByteSize(v32);
    v34 = (int)v33;
    if (v33 >= 0x80)
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    else
      v35 = 1;
    v3 = (v3 + v34 + v35 + 1);
    v2 = *((_DWORD *)this + 79);
  }
LABEL_61:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_119;
  if ((v2 & 0x100) != 0)
  {
    v36 = (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)*((_QWORD *)this + 9);
    if (!v36)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v36 = *(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                  + 72);
    }
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::ByteSize(v36);
    v38 = (int)v37;
    if (v37 >= 0x80)
      v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
    else
      v39 = 1;
    v3 = (v3 + v38 + v39 + 1);
    v2 = *((_DWORD *)this + 79);
    if ((v2 & 0x200) == 0)
    {
LABEL_64:
      if ((v2 & 0x400) == 0)
        goto LABEL_65;
      goto LABEL_83;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  v40 = (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)*((_QWORD *)this + 10);
  if (!v40)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v40 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapVector **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                    + 80);
  }
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MapVector::ByteSize(v40);
  v42 = (int)v41;
  if (v41 >= 0x80)
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  else
    v43 = 1;
  v3 = (v3 + v42 + v43 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x400) == 0)
  {
LABEL_65:
    if ((v2 & 0x800) == 0)
      goto LABEL_66;
    goto LABEL_89;
  }
LABEL_83:
  v44 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)*((_QWORD *)this + 11);
  if (!v44)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v44 = *(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                       + 88);
  }
  v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::ByteSize(v44);
  v46 = (int)v45;
  if (v45 >= 0x80)
    v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
  else
    v47 = 1;
  v3 = (v3 + v46 + v47 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x800) == 0)
  {
LABEL_66:
    if ((v2 & 0x1000) == 0)
      goto LABEL_67;
    goto LABEL_95;
  }
LABEL_89:
  v48 = (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)*((_QWORD *)this + 12);
  if (!v48)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v48 = *(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 96);
  }
  v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::ByteSize(v48);
  v50 = (int)v49;
  if (v49 >= 0x80)
    v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
  else
    v51 = 1;
  v3 = (v3 + v50 + v51 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x1000) == 0)
  {
LABEL_67:
    if ((v2 & 0x2000) == 0)
      goto LABEL_68;
    goto LABEL_101;
  }
LABEL_95:
  v52 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((_QWORD *)this + 13);
  if (!v52)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v52 = *(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                            + 104);
  }
  v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::ByteSize(v52);
  v54 = (int)v53;
  if (v53 >= 0x80)
    v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53);
  else
    v55 = 1;
  v3 = (v3 + v54 + v55 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x2000) == 0)
  {
LABEL_68:
    if ((v2 & 0x4000) == 0)
      goto LABEL_69;
    goto LABEL_107;
  }
LABEL_101:
  v56 = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)*((_QWORD *)this + 14);
  if (!v56)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v56 = *(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                       + 112);
  }
  v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::ByteSize(v56);
  v58 = (int)v57;
  if (v57 >= 0x80)
    v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v57);
  else
    v59 = 1;
  v3 = (v3 + v58 + v59 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x4000) == 0)
  {
LABEL_69:
    if ((v2 & 0x8000) == 0)
      goto LABEL_119;
    goto LABEL_113;
  }
LABEL_107:
  v60 = (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)*((_QWORD *)this + 15);
  if (!v60)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v60 = *(CoreNavigation::CLP::LogEntry::PrivateData::Reset **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                + 120);
  }
  v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Reset::ByteSize(v60);
  v62 = (int)v61;
  if (v61 >= 0x80)
    v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61);
  else
    v63 = 1;
  v3 = (v3 + v62 + v63 + 1);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x8000) != 0)
  {
LABEL_113:
    v64 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)*((_QWORD *)this + 16);
    if (!v64)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v64 = *(CoreNavigation::CLP::LogEntry::PrivateData::StepCount **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                      + 128);
    }
    v65 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::StepCount::ByteSize(v64);
    v66 = (int)v65;
    if (v65 >= 0x80)
      v67 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v65);
    else
      v67 = 1;
    v3 = (v3 + v66 + v67 + 2);
    v2 = *((_DWORD *)this + 79);
  }
LABEL_119:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_177;
  if ((v2 & 0x10000) != 0)
  {
    v68 = *((_QWORD *)this + 17);
    if (!v68)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v68 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 136);
    }
    v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::ByteSize(v68);
    v70 = (int)v69;
    if (v69 >= 0x80)
      v71 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69);
    else
      v71 = 1;
    v3 = (v3 + v70 + v71 + 2);
    v2 = *((_DWORD *)this + 79);
    if ((v2 & 0x20000) == 0)
    {
LABEL_122:
      if ((v2 & 0x40000) == 0)
        goto LABEL_123;
      goto LABEL_141;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_122;
  }
  v72 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)*((_QWORD *)this + 18);
  if (!v72)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v72 = *(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                   + 144);
  }
  v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::ByteSize(v72);
  v74 = (int)v73;
  if (v73 >= 0x80)
    v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v73);
  else
    v75 = 1;
  v3 = (v3 + v74 + v75 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x40000) == 0)
  {
LABEL_123:
    if ((v2 & 0x80000) == 0)
      goto LABEL_124;
    goto LABEL_147;
  }
LABEL_141:
  v76 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)*((_QWORD *)this + 19);
  if (!v76)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v76 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                           + 152);
  }
  v77 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::ByteSize(v76);
  v78 = (int)v77;
  if (v77 >= 0x80)
    v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v77);
  else
    v79 = 1;
  v3 = (v3 + v78 + v79 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x80000) == 0)
  {
LABEL_124:
    if ((v2 & 0x100000) == 0)
      goto LABEL_125;
    goto LABEL_153;
  }
LABEL_147:
  v80 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)*((_QWORD *)this + 20);
  if (!v80)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v80 = *(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                         + 160);
  }
  v81 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::ByteSize(v80);
  v82 = (int)v81;
  if (v81 >= 0x80)
    v83 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v81);
  else
    v83 = 1;
  v3 = (v3 + v82 + v83 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x100000) == 0)
  {
LABEL_125:
    if ((v2 & 0x200000) == 0)
      goto LABEL_126;
    goto LABEL_159;
  }
LABEL_153:
  v84 = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)*((_QWORD *)this + 21);
  if (!v84)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v84 = *(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                            + 168);
  }
  v85 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::ByteSize(v84);
  v86 = (int)v85;
  if (v85 >= 0x80)
    v87 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v85);
  else
    v87 = 1;
  v3 = (v3 + v86 + v87 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x200000) == 0)
  {
LABEL_126:
    if ((v2 & 0x400000) == 0)
      goto LABEL_127;
    goto LABEL_165;
  }
LABEL_159:
  v88 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)*((_QWORD *)this + 22);
  if (!v88)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v88 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                               + 176);
  }
  v89 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::ByteSize(v88);
  v90 = (int)v89;
  if (v89 >= 0x80)
    v91 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v89);
  else
    v91 = 1;
  v3 = (v3 + v90 + v91 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x400000) == 0)
  {
LABEL_127:
    if ((v2 & 0x800000) == 0)
      goto LABEL_177;
    goto LABEL_171;
  }
LABEL_165:
  v92 = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)*((_QWORD *)this + 23);
  if (!v92)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v92 = *(CoreNavigation::CLP::LogEntry::PrivateData::Compass **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                  + 184);
  }
  v93 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Compass::ByteSize(v92);
  v94 = (int)v93;
  if (v93 >= 0x80)
    v95 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v93);
  else
    v95 = 1;
  v3 = (v3 + v94 + v95 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x800000) != 0)
  {
LABEL_171:
    v96 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)*((_QWORD *)this + 24);
    if (!v96)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v96 = *(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                         + 192);
    }
    v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::ByteSize(v96);
    v98 = (int)v97;
    if (v97 >= 0x80)
      v99 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97);
    else
      v99 = 1;
    v3 = (v3 + v98 + v99 + 2);
    v2 = *((_DWORD *)this + 79);
  }
LABEL_177:
  if (!HIBYTE(v2))
    goto LABEL_235;
  if ((v2 & 0x1000000) != 0)
  {
    v100 = (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)*((_QWORD *)this + 25);
    if (!v100)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v100 = *(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                        + 200);
    }
    v101 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::ByteSize(v100);
    v102 = (int)v101;
    if (v101 >= 0x80)
      v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v101);
    else
      v103 = 1;
    v3 = (v3 + v102 + v103 + 2);
    v2 = *((_DWORD *)this + 79);
    if ((v2 & 0x2000000) == 0)
    {
LABEL_180:
      if ((v2 & 0x4000000) == 0)
        goto LABEL_181;
      goto LABEL_199;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_180;
  }
  v104 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)*((_QWORD *)this + 26);
  if (!v104)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v104 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                              + 208);
  }
  v105 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::ByteSize(v104);
  v106 = (int)v105;
  if (v105 >= 0x80)
    v107 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v105);
  else
    v107 = 1;
  v3 = (v3 + v106 + v107 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_181:
    if ((v2 & 0x8000000) == 0)
      goto LABEL_182;
    goto LABEL_205;
  }
LABEL_199:
  v108 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)*((_QWORD *)this + 27);
  if (!v108)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v108 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                     + 216);
  }
  v109 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::ByteSize(v108);
  v110 = (int)v109;
  if (v109 >= 0x80)
    v111 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v109);
  else
    v111 = 1;
  v3 = (v3 + v110 + v111 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_182:
    if ((v2 & 0x10000000) == 0)
      goto LABEL_183;
    goto LABEL_211;
  }
LABEL_205:
  v112 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)*((_QWORD *)this + 28);
  if (!v112)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v112 = *(CoreNavigation::CLP::LogEntry::PrivateData::WatchState **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                      + 224);
  }
  v113 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WatchState::ByteSize(v112);
  v114 = (int)v113;
  if (v113 >= 0x80)
    v115 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v113);
  else
    v115 = 1;
  v3 = (v3 + v114 + v115 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_183:
    if ((v2 & 0x20000000) == 0)
      goto LABEL_184;
    goto LABEL_217;
  }
LABEL_211:
  v116 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)*((_QWORD *)this + 29);
  if (!v116)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v116 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                               + 232);
  }
  v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::ByteSize(v116);
  v118 = (int)v117;
  if (v117 >= 0x80)
    v119 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v117);
  else
    v119 = 1;
  v3 = (v3 + v118 + v119 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_184:
    if ((v2 & 0x40000000) == 0)
      goto LABEL_185;
    goto LABEL_223;
  }
LABEL_217:
  v120 = *((_QWORD *)this + 30);
  if (!v120)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v120 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 240);
  }
  v121 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::ByteSize(v120);
  v122 = (int)v121;
  if (v121 >= 0x80)
    v123 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v121);
  else
    v123 = 1;
  v3 = (v3 + v122 + v123 + 2);
  v2 = *((_DWORD *)this + 79);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_185:
    if ((v2 & 0x80000000) == 0)
      goto LABEL_235;
    goto LABEL_229;
  }
LABEL_223:
  v124 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)*((_QWORD *)this + 31);
  if (!v124)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v124 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                              + 248);
  }
  v125 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::ByteSize(v124);
  v126 = (int)v125;
  if (v125 >= 0x80)
    v127 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v125);
  else
    v127 = 1;
  v3 = (v3 + v126 + v127 + 2);
  if ((*((_DWORD *)this + 79) & 0x80000000) != 0)
  {
LABEL_229:
    v128 = (CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *)*((_QWORD *)this + 32);
    if (!v128)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v128 = *(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                           + 256);
    }
    v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::ByteSize(v128);
    v130 = (int)v129;
    if (v129 >= 0x80)
      v131 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v129);
    else
      v131 = 1;
    v3 = (v3 + v130 + v131 + 2);
  }
LABEL_235:
  LOBYTE(v132) = *((_BYTE *)this + 320);
  if (!(_BYTE)v132)
    goto LABEL_279;
  if ((*((_BYTE *)this + 320) & 1) != 0)
  {
    v133 = (CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *)*((_QWORD *)this + 33);
    if (!v133)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v133 = *(CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                          + 264);
    }
    v134 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture::ByteSize(v133);
    v135 = (int)v134;
    if (v134 >= 0x80)
      v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v134);
    else
      v136 = 1;
    v3 = (v3 + v135 + v136 + 2);
    v132 = *((_DWORD *)this + 80);
    if ((v132 & 2) == 0)
    {
LABEL_238:
      if ((v132 & 4) == 0)
        goto LABEL_239;
      goto LABEL_255;
    }
  }
  else if ((*((_BYTE *)this + 320) & 2) == 0)
  {
    goto LABEL_238;
  }
  v137 = (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)*((_QWORD *)this + 34);
  if (!v137)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v137 = *(CoreNavigation::CLP::LogEntry::Raven::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                              + 272);
  }
  v138 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::LogEntry::ByteSize(v137);
  v139 = (int)v138;
  if (v138 >= 0x80)
    v140 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v138);
  else
    v140 = 1;
  v3 = (v3 + v139 + v140 + 2);
  v132 = *((_DWORD *)this + 80);
  if ((v132 & 4) == 0)
  {
LABEL_239:
    if ((v132 & 8) == 0)
      goto LABEL_240;
    goto LABEL_261;
  }
LABEL_255:
  v141 = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)*((_QWORD *)this + 35);
  if (!v141)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v141 = *(CoreNavigation::CLP::LogEntry::Vision::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                               + 280);
  }
  v142 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LogEntry::ByteSize(v141);
  v143 = (int)v142;
  if (v142 >= 0x80)
    v144 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v142);
  else
    v144 = 1;
  v3 = (v3 + v143 + v144 + 2);
  v132 = *((_DWORD *)this + 80);
  if ((v132 & 8) == 0)
  {
LABEL_240:
    if ((v132 & 0x10) == 0)
      goto LABEL_241;
    goto LABEL_267;
  }
LABEL_261:
  v145 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)*((_QWORD *)this + 36);
  if (!v145)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v145 = *(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                        + 288);
  }
  v146 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::ByteSize(v145);
  v147 = (int)v146;
  if (v146 >= 0x80)
    v148 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v146);
  else
    v148 = 1;
  v3 = (v3 + v147 + v148 + 2);
  v132 = *((_DWORD *)this + 80);
  if ((v132 & 0x10) == 0)
  {
LABEL_241:
    if ((v132 & 0x20) == 0)
      goto LABEL_279;
    goto LABEL_273;
  }
LABEL_267:
  v149 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)*((_QWORD *)this + 37);
  if (!v149)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
    v149 = *(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                    + 296);
  }
  v150 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::ByteSize(v149);
  v151 = (int)v150;
  if (v150 >= 0x80)
    v152 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v150);
  else
    v152 = 1;
  v3 = (v3 + v151 + v152 + 2);
  if ((*((_DWORD *)this + 80) & 0x20) != 0)
  {
LABEL_273:
    v153 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)*((_QWORD *)this + 38);
    if (!v153)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(0);
      v153 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 304);
    }
    v154 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::ByteSize(v153);
    v155 = (int)v154;
    if (v154 >= 0x80)
      v156 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v154);
    else
      v156 = 1;
    v3 = (v3 + v155 + v156 + 2);
  }
LABEL_279:
  *((_DWORD *)this + 78) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    v11 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    v12 = *(_QWORD *)(this + 88);
    *(_QWORD *)(this + 88) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v12;
    v13 = *(_QWORD *)(this + 96);
    *(_QWORD *)(this + 96) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v13;
    v14 = *(_QWORD *)(this + 104);
    *(_QWORD *)(this + 104) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v14;
    v15 = *(_QWORD *)(this + 112);
    *(_QWORD *)(this + 112) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v15;
    v16 = *(_QWORD *)(this + 120);
    *(_QWORD *)(this + 120) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v16;
    v17 = *(_QWORD *)(this + 128);
    *(_QWORD *)(this + 128) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v17;
    v18 = *(_QWORD *)(this + 136);
    *(_QWORD *)(this + 136) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v18;
    v19 = *(_QWORD *)(this + 144);
    *(_QWORD *)(this + 144) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v19;
    v20 = *(_QWORD *)(this + 152);
    *(_QWORD *)(this + 152) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v20;
    v21 = *(_QWORD *)(this + 160);
    *(_QWORD *)(this + 160) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v21;
    v22 = *(_QWORD *)(this + 168);
    *(_QWORD *)(this + 168) = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 21) = v22;
    v23 = *(_QWORD *)(this + 176);
    *(_QWORD *)(this + 176) = *((_QWORD *)a2 + 22);
    *((_QWORD *)a2 + 22) = v23;
    v24 = *(_QWORD *)(this + 184);
    *(_QWORD *)(this + 184) = *((_QWORD *)a2 + 23);
    *((_QWORD *)a2 + 23) = v24;
    v25 = *(_QWORD *)(this + 192);
    *(_QWORD *)(this + 192) = *((_QWORD *)a2 + 24);
    *((_QWORD *)a2 + 24) = v25;
    v26 = *(_QWORD *)(this + 200);
    *(_QWORD *)(this + 200) = *((_QWORD *)a2 + 25);
    *((_QWORD *)a2 + 25) = v26;
    v27 = *(_QWORD *)(this + 208);
    *(_QWORD *)(this + 208) = *((_QWORD *)a2 + 26);
    *((_QWORD *)a2 + 26) = v27;
    v28 = *(_QWORD *)(this + 216);
    *(_QWORD *)(this + 216) = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 27) = v28;
    v29 = *(_QWORD *)(this + 224);
    *(_QWORD *)(this + 224) = *((_QWORD *)a2 + 28);
    *((_QWORD *)a2 + 28) = v29;
    v30 = *(_QWORD *)(this + 232);
    *(_QWORD *)(this + 232) = *((_QWORD *)a2 + 29);
    *((_QWORD *)a2 + 29) = v30;
    v31 = *(_QWORD *)(this + 240);
    *(_QWORD *)(this + 240) = *((_QWORD *)a2 + 30);
    *((_QWORD *)a2 + 30) = v31;
    v32 = *(_QWORD *)(this + 248);
    *(_QWORD *)(this + 248) = *((_QWORD *)a2 + 31);
    *((_QWORD *)a2 + 31) = v32;
    v33 = *(_QWORD *)(this + 256);
    *(_QWORD *)(this + 256) = *((_QWORD *)a2 + 32);
    *((_QWORD *)a2 + 32) = v33;
    v34 = *(_QWORD *)(this + 264);
    *(_QWORD *)(this + 264) = *((_QWORD *)a2 + 33);
    *((_QWORD *)a2 + 33) = v34;
    v35 = *(_QWORD *)(this + 272);
    *(_QWORD *)(this + 272) = *((_QWORD *)a2 + 34);
    *((_QWORD *)a2 + 34) = v35;
    v36 = *(_QWORD *)(this + 280);
    *(_QWORD *)(this + 280) = *((_QWORD *)a2 + 35);
    *((_QWORD *)a2 + 35) = v36;
    v37 = *(_QWORD *)(this + 288);
    *(_QWORD *)(this + 288) = *((_QWORD *)a2 + 36);
    *((_QWORD *)a2 + 36) = v37;
    v38 = *(_QWORD *)(this + 296);
    *(_QWORD *)(this + 296) = *((_QWORD *)a2 + 37);
    *((_QWORD *)a2 + 37) = v38;
    v39 = *(_QWORD *)(this + 304);
    *(_QWORD *)(this + 304) = *((_QWORD *)a2 + 38);
    *((_QWORD *)a2 + 38) = v39;
    LODWORD(v39) = *(_DWORD *)(this + 316);
    *(_DWORD *)(this + 316) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v39;
    LODWORD(v39) = *(_DWORD *)(this + 320);
    *(_DWORD *)(this + 320) = *((_DWORD *)a2 + 80);
    *((_DWORD *)a2 + 80) = v39;
    LODWORD(v39) = *(_DWORD *)(this + 312);
    *(_DWORD *)(this + 312) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v39;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PrivateDataCapture");
}

uint64_t sub_18D12D00C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 312);
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_ShutdownFile_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_);
  result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_;
  if (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto_impl(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPRavenGnssAssistanceFile.pb.cc", a4);
  v4 = (_QWORD *)operator new();
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_1E25BF188;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_ = (uint64_t)v4;
  v5 = (_QWORD *)operator new();
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_1E25BF200;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_ = (uint64_t)v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E25BF110;
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_ = v6;
  v7 = (_QWORD *)operator new();
  v7[1] = 0;
  v7[2] = 0;
  *v7 = &off_1E25BEFA8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::default_instance_ = (uint64_t)v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E25BEDC8;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = 0;
  *(_DWORD *)(v8 + 72) = 0;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 36) = 0u;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_1E25BEEB8;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_DWORD *)(v9 + 32) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_ = v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E25BEE40;
  *(_QWORD *)(v10 + 8) = 0;
  *(_DWORD *)(v10 + 16) = -1;
  *(_QWORD *)(v10 + 20) = 0;
  *(_QWORD *)(v10 + 28) = 0xFFFFFFFFLL;
  *(_QWORD *)(v10 + 36) = 0;
  *(_QWORD *)(v10 + 44) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E25BEF30;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 52) = 0u;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)v12 = &off_1E25BF020;
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_DWORD *)(v12 + 32) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_ = v12;
  v13 = operator new();
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_ = v13;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v13 + 56) = 0;
  *(_DWORD *)(v13 + 64) = 0;
  *(_QWORD *)(v13 + 72) = 0;
  *(_QWORD *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  v14 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_;
  *(_DWORD *)(v13 + 40) = 0;
  v15 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_;
  v16 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  v17 = (_QWORD *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_;
  v17[2] = v15;
  v17[3] = v15;
  v17[7] = v16;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_ + 8) = v16;
  v18 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_ + 8) = v16;
  *(_QWORD *)(v14 + 8) = v16;
  *(_QWORD *)(v14 + 40) = v18;
  *(_QWORD *)v13 = &off_1E25BF098;
  *(_QWORD *)(v13 + 8) = v16;
  *(_QWORD *)(v13 + 16) = v14;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_ShutdownFile_CoreNavigationCLPRavenGnssAssistanceFile_2eproto, v19);
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::SvId(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BF188;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BF188;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::GpsTime(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BF200;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BF200;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::SatellitePolynomialClock(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BF110;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BF110;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::SatelliteGroupDelay(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BEFA8;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BEFA8;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SatelliteClockData(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEDC8;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEDC8;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::GnssToGpsTimeOffset(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BEEB8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BEEB8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::SpaceWeatherStatus(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEE40;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = -1;
  result = 0.0;
  *(_QWORD *)((char *)this + 20) = 0;
  *(_QWORD *)((char *)this + 28) = 0xFFFFFFFFLL;
  *(_QWORD *)((char *)this + 36) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEE40;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = -1;
  result = 0.0;
  *(_QWORD *)((char *)this + 20) = 0;
  *(_QWORD *)((char *)this + 28) = 0xFFFFFFFFLL;
  *(_QWORD *)((char *)this + 36) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::IonosphereVTECModel(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEF30;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEF30;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::IonosphereCorrections(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)this = &off_1E25BF020;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)this = &off_1E25BF020;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::AssistanceFileContents(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BF098;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BF098;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 9) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[7] = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  *(_QWORD *)(this + 40) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D12D62C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::Constellation_IsValid(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SignalType_IsValid(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::StormScale_IsValid(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this)
{
  return ((_DWORD)this + 1) < 7;
}

BOOL CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereLayer_IsValid(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *this)
{
  return this < 3;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::SvId(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BF188;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergeFrom(this, a2);
  return this;
}

void sub_18D12D6C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5)
        __assert_rtn("set_constellation", "CoreNavigationCLPRavenGnssAssistanceFile.pb.h", 1314, "::CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::Constellation_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18D12D7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::~SvId(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this)
{
  *(_QWORD *)this = &off_1E25BF188;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::~SvId(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BF188;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v15 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v11 = v15;
      }
      else
      {
        v11 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      if (v11 <= 4)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v11;
      }
      v12 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        v9 = v12 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_26:
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_26;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_17;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_17;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_17;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    else
      v6 = 2;
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_17:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.SvId");
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::GpsTime(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BF200;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(this, a2);
  return this;
}

void sub_18D12DC94(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *a2)
{
  float result;
  int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v5 = *((_DWORD *)a2 + 5);
    }
    if ((v5 & 2) != 0)
    {
      result = *((float *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((float *)this + 3) = result;
    }
  }
  return result;
}

void sub_18D12DD50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::~GpsTime(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this)
{
  *(_QWORD *)this = &off_1E25BF200;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::~GpsTime(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BF200;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  uint64_t result;
  unsigned int v12;

  v4 = (unsigned int *)((char *)this + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 5) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 21)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 5)
        goto LABEL_16;
LABEL_24:
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0)
        return 0;
      *((_DWORD *)this + 3) = v12;
      *((_DWORD *)this + 5) |= 2u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_16:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;

  LOBYTE(v2) = *((_BYTE *)this + 20);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 5);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *a2)
{
  int v2;
  float result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    result = *((float *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((float *)a2 + 3) = result;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.GpsTime");
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::SatellitePolynomialClock(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *a2)
{
  *(_QWORD *)this = &off_1E25BF110;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergeFrom(this, a2);
  return this;
}

void sub_18D12E1F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *a2)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v3;
  float result;
  int v5;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v6;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)operator new();
        v6 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BF200;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_
                                                                                       + 8);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 4);
    *((_DWORD *)v3 + 8) |= 2u;
    *((float *)v3 + 4) = result;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_16:
    result = *((float *)a2 + 5);
    *((_DWORD *)v3 + 8) |= 4u;
    *((float *)v3 + 5) = result;
    if ((*((_DWORD *)a2 + 8) & 8) == 0)
      return result;
LABEL_8:
    result = *((float *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 8u;
    *((float *)v3 + 6) = result;
  }
  return result;
}

void sub_18D12E34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::~SatellitePolynomialClock(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF110;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::~SatellitePolynomialClock(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::SharedDtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BF110;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 32))
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t result;
  unsigned int v18;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 8) |= 1u;
        v7 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)operator new();
          *((_QWORD *)v7 + 1) = 0;
          *((_QWORD *)v7 + 2) = 0;
          *(_QWORD *)v7 = &off_1E25BF200;
          *((_QWORD *)this + 1) = v7;
        }
        v18 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0;
        }
        else
        {
          v18 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
LABEL_31:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_35:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_39:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_35;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
        goto LABEL_39;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::default_instance_
                                                                                 + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.SatellitePolynomialClock");
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::SatelliteGroupDelay(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BEFA8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergeFrom(this, a2);
  return this;
}

void sub_18D12EA78(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *a2)
{
  float result;
  int v5;
  unsigned int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      if (v6 >= 7)
        __assert_rtn("set_signal_type", "CoreNavigationCLPRavenGnssAssistanceFile.pb.h", 1523, "::CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SignalType_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v5 = *((_DWORD *)a2 + 5);
    }
    if ((v5 & 2) != 0)
    {
      result = *((float *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((float *)this + 3) = result;
    }
  }
  return result;
}

void sub_18D12EB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::~SatelliteGroupDelay(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this)
{
  *(_QWORD *)this = &off_1E25BEFA8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::~SatelliteGroupDelay(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BEFA8;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  uint64_t result;
  _BYTE *v10;
  unsigned int v11;
  unsigned int v12;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v11 = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v11);
          if (!(_DWORD)result)
            return result;
          v8 = v11;
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 6)
        {
          *((_DWORD *)this + 5) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 21)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_25;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v6 = TagFallback & 7;
      if (v6 != 5)
        goto LABEL_15;
LABEL_25:
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0)
        return 0;
      *((_DWORD *)this + 3) = v12;
      *((_DWORD *)this + 5) |= 2u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v6 = TagFallback & 7;
LABEL_15:
    if (v6 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;

  LOBYTE(v2) = *((_BYTE *)this + 20);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 5);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *a2)
{
  int v2;
  float result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    result = *((float *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((float *)a2 + 3) = result;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.SatelliteGroupDelay");
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 72) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SatelliteClockData(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *a2)
{
  *(_QWORD *)this = &off_1E25BEDC8;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergeFrom(this, a2);
  return this;
}

void sub_18D12F030(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 4);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *a2)
{
  uint64_t v4;
  float result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *v15;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *v16;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v17;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v18;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v19;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v20;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v21;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v22;
  _BYTE v23[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay **)(*((_QWORD *)a2 + 4)
                                                                                                 + 8 * v6);
      v8 = *((_DWORD *)this + 11);
      v9 = *((int *)this + 10);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *)((char *)this + 32));
          v8 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v8 + 1;
        v11 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *)operator new();
        *((_QWORD *)v11 + 1) = 0;
        *((_QWORD *)v11 + 2) = 0;
        *(_QWORD *)v11 = &off_1E25BEFA8;
        v12 = *((_QWORD *)this + 4);
        v13 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v9 + 1;
        v11 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay **)(v10 + 8 * v9);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 10));
  }
  LOBYTE(v14) = *((_BYTE *)a2 + 72);
  if (!(_BYTE)v14)
    return result;
  if ((*((_BYTE *)a2 + 72) & 1) != 0)
  {
    *((_DWORD *)this + 18) |= 1u;
    v15 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *)*((_QWORD *)this + 1);
    if (!v15)
    {
      v4 = operator new();
      v15 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *)v4;
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)v4 = &off_1E25BF188;
      *((_QWORD *)this + 1) = v4;
    }
    v16 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *)*((_QWORD *)a2 + 1);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v4);
      v16 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_
                                                                                   + 8);
    }
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergeFrom(v15, v16);
    v14 = *((_DWORD *)a2 + 18);
    if ((v14 & 2) == 0)
    {
LABEL_14:
      if ((v14 & 4) == 0)
        goto LABEL_15;
LABEL_29:
      *((_DWORD *)this + 18) |= 4u;
      v19 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)*((_QWORD *)this + 3);
      if (!v19)
      {
        v4 = operator new();
        v19 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)v4;
        *(_QWORD *)v4 = &off_1E25BF110;
        *(_QWORD *)(v4 + 8) = 0;
        *(_QWORD *)(v4 + 16) = 0;
        *(_QWORD *)(v4 + 24) = 0;
        *(_DWORD *)(v4 + 32) = 0;
        *((_QWORD *)this + 3) = v4;
      }
      v20 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)*((_QWORD *)a2 + 3);
      if (!v20)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v4);
        v20 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 24);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergeFrom(v19, v20);
      v14 = *((_DWORD *)a2 + 18);
      if ((v14 & 0x10) == 0)
      {
LABEL_16:
        if ((v14 & 0x20) == 0)
          return result;
        goto LABEL_17;
      }
      goto LABEL_34;
    }
  }
  else if ((*((_BYTE *)a2 + 72) & 2) == 0)
  {
    goto LABEL_14;
  }
  *((_DWORD *)this + 18) |= 2u;
  v17 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)*((_QWORD *)this + 2);
  if (!v17)
  {
    v4 = operator new();
    v17 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)v4;
    *(_QWORD *)v4 = &off_1E25BF110;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_DWORD *)(v4 + 32) = 0;
    *((_QWORD *)this + 2) = v4;
  }
  v18 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)*((_QWORD *)a2 + 2);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v4);
    v18 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 16);
  }
  result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergeFrom(v17, v18);
  v14 = *((_DWORD *)a2 + 18);
  if ((v14 & 4) != 0)
    goto LABEL_29;
LABEL_15:
  if ((v14 & 0x10) == 0)
    goto LABEL_16;
LABEL_34:
  *((_DWORD *)this + 18) |= 0x10u;
  v21 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 7);
  if (!v21)
  {
    v4 = operator new();
    v21 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)v4;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)v4 = &off_1E25BF200;
    *((_QWORD *)this + 7) = v4;
  }
  v22 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)a2 + 7);
  if (!v22)
  {
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v4);
    v22 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_
                                                                                    + 56);
  }
  result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(v21, v22);
  if ((*((_DWORD *)a2 + 18) & 0x20) != 0)
  {
LABEL_17:
    result = *((float *)a2 + 16);
    *((_DWORD *)this + 18) |= 0x20u;
    *((float *)this + 16) = result;
  }
  return result;
}

void sub_18D12F384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::~SatelliteClockData(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  *(_QWORD *)this = &off_1E25BEDC8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 4);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::~SatelliteClockData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SharedDtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 7);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEDC8;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 72);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 72) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v2 = *(_DWORD *)(this + 72);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::Clear(this);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::Clear(this);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(v1 + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
          *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 20) = 0;
      }
    }
    *(_DWORD *)(v1 + 64) = 0;
  }
  if (*(int *)(v1 + 40) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  _BYTE *v48;
  uint64_t result;
  unsigned int v50;

  v4 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *)((char *)this + 32);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_24;
        *((_DWORD *)this + 18) |= 1u;
        v8 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *)*((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *)operator new();
          *((_QWORD *)v8 + 1) = 0;
          *((_QWORD *)v8 + 2) = 0;
          *(_QWORD *)v8 = &off_1E25BF188;
          *((_QWORD *)this + 1) = v8;
        }
        v50 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0;
        }
        else
        {
          v50 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::MergePartialFromCodedStream(v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
        goto LABEL_36;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_24;
LABEL_36:
        *((_DWORD *)this + 18) |= 2u;
        v16 = *((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = operator new();
          *(_QWORD *)v16 = &off_1E25BF110;
          *(_QWORD *)(v16 + 8) = 0;
          *(_QWORD *)(v16 + 16) = 0;
          *(_QWORD *)(v16 + 24) = 0;
          *(_DWORD *)(v16 + 32) = 0;
          *((_QWORD *)this + 2) = v16;
        }
        v50 = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0;
        }
        else
        {
          v50 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v20 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v20, 1);
        v21 = v20 - 1;
        if (v21 < 0 == v13)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_50:
        *((_DWORD *)this + 18) |= 4u;
        v23 = *((_QWORD *)this + 3);
        if (!v23)
        {
          v23 = operator new();
          *(_QWORD *)v23 = &off_1E25BF110;
          *(_QWORD *)(v23 + 8) = 0;
          *(_QWORD *)(v23 + 16) = 0;
          *(_QWORD *)(v23 + 24) = 0;
          *(_DWORD *)(v23 + 32) = 0;
          *((_QWORD *)this + 3) = v23;
        }
        v50 = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0;
        }
        else
        {
          v50 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)v23, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v27 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v27, 1);
        v28 = v27 - 1;
        if (v28 < 0 == v13)
          *((_DWORD *)a2 + 14) = v28;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 34)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_64:
          v30 = *((_DWORD *)this + 11);
          v31 = *((int *)this + 10);
          if ((int)v31 >= v30)
          {
            if (v30 == *((_DWORD *)this + 12))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v30 = *((_DWORD *)this + 11);
            }
            *((_DWORD *)this + 11) = v30 + 1;
            v33 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay *)operator new();
            *((_QWORD *)v33 + 1) = 0;
            *((_QWORD *)v33 + 2) = 0;
            *(_QWORD *)v33 = &off_1E25BEFA8;
            v34 = *((_QWORD *)this + 4);
            v35 = *((int *)this + 10);
            *((_DWORD *)this + 10) = v35 + 1;
            *(_QWORD *)(v34 + 8 * v35) = v33;
          }
          else
          {
            v32 = *((_QWORD *)this + 4);
            *((_DWORD *)this + 10) = v31 + 1;
            v33 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay **)(v32 + 8 * v31);
          }
          v50 = 0;
          v36 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0;
          }
          else
          {
            v50 = *v36;
            *((_QWORD *)a2 + 1) = v36 + 1;
          }
          v37 = *((_DWORD *)a2 + 14);
          v38 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v37 + 1;
          if (v37 >= v38)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::MergePartialFromCodedStream(v33, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v39 = *((_DWORD *)a2 + 14);
          v13 = __OFSUB__(v39, 1);
          v40 = v39 - 1;
          if (v40 < 0 == v13)
            *((_DWORD *)a2 + 14) = v40;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v29 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v41 = *v29;
        }
        while (v41 == 34);
        if (v41 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_82:
        *((_DWORD *)this + 18) |= 0x10u;
        v42 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 7);
        if (!v42)
        {
          v42 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)operator new();
          *((_QWORD *)v42 + 1) = 0;
          *((_QWORD *)v42 + 2) = 0;
          *(_QWORD *)v42 = &off_1E25BF200;
          *((_QWORD *)this + 7) = v42;
        }
        v50 = 0;
        v43 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0;
        }
        else
        {
          v50 = *v43;
          *((_QWORD *)a2 + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)a2 + 14);
        v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(v42, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v46 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v13)
          *((_DWORD *)a2 + 14) = v47;
        v48 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v48 + 1;
LABEL_96:
        v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v50) & 1) == 0)
          return 0;
        *((_DWORD *)this + 16) = v50;
        *((_DWORD *)this + 18) |= 0x20u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_50;
        goto LABEL_24;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_64;
        goto LABEL_24;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_82;
        goto LABEL_24;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_24;
        goto LABEL_96;
      default:
        v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_14;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 4) != 0)
  {
LABEL_11:
    v9 = *(_QWORD *)(v5 + 24);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 24);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
LABEL_14:
  if (*(int *)(v5 + 40) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 40));
  }
  v11 = *(_DWORD *)(v5 + 72);
  if ((v11 & 0x10) == 0)
  {
    if ((v11 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 64), a3);
  }
  v12 = *(_QWORD *)(v5 + 56);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v12, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 64), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  int v2;
  int v3;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  int v25;

  v2 = *((unsigned __int8 *)this + 72);
  if (*((_BYTE *)this + 72))
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_
                                                                              + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SvId::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 18);
      if ((v2 & 2) == 0)
      {
LABEL_17:
        if ((v2 & 4) != 0)
        {
          v12 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)*((_QWORD *)this + 3);
          if (!v12)
          {
            CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
            v12 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_ + 24);
          }
          v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::ByteSize(v12);
          v14 = (int)v13;
          if (v13 >= 0x80)
            v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
          else
            v15 = 1;
          v3 += v14 + v15 + 1;
          v2 = *((_DWORD *)this + 18);
          if ((v2 & 0x10) == 0)
            goto LABEL_32;
        }
        else if ((v2 & 0x10) == 0)
        {
LABEL_32:
          if ((v2 & 0x20) != 0)
            v2 = v3 + 5;
          else
            v2 = v3;
          goto LABEL_35;
        }
        v16 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 7);
        if (!v16)
        {
          CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
          v16 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_
                                                                                    + 56);
        }
        v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(v16);
        v18 = (int)v17;
        if (v17 >= 0x80)
          v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
        else
          v19 = 1;
        v3 += v18 + v19 + 1;
        v2 = *((_DWORD *)this + 18);
        goto LABEL_32;
      }
    }
    else
    {
      v3 = 0;
      if ((v2 & 2) == 0)
        goto LABEL_17;
    }
    v8 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::default_instance_
                                                                                                + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatellitePolynomialClock::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 18);
    goto LABEL_17;
  }
LABEL_35:
  v20 = *((_DWORD *)this + 10);
  v21 = (v20 + v2);
  if (v20 >= 1)
  {
    v22 = 0;
    do
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay::ByteSize(*(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteGroupDelay **)(*((_QWORD *)this + 4) + 8 * v22));
      v24 = (int)v23;
      if (v23 >= 0x80)
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23);
      else
        v25 = 1;
      v21 = (v24 + v21 + v25);
      ++v22;
    }
    while (v22 < *((int *)this + 10));
  }
  *((_DWORD *)this + 17) = v21;
  return v21;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float result;

  if (a2 != this)
  {
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v7 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v7;
    result = *((float *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((float *)a2 + 16) = result;
    LODWORD(v7) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v7;
    LODWORD(v7) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.SatelliteClockData");
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::GnssToGpsTimeOffset(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *a2)
{
  *(_QWORD *)this = &off_1E25BEEB8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergeFrom(this, a2);
  return this;
}

void sub_18D130158(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *a2)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *v3;
  float result;
  int v5;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v6;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v7;
  unsigned int v8;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *)operator new();
        v6 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BF200;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_
                                                                                       + 8);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 2) != 0)
    {
      v8 = *((_DWORD *)a2 + 4);
      if (v8 >= 5)
        __assert_rtn("set_constellation", "CoreNavigationCLPRavenGnssAssistanceFile.pb.h", 1833, "::CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::Constellation_IsValid(value)");
      *((_DWORD *)v3 + 8) |= 2u;
      *((_DWORD *)v3 + 4) = v8;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 4) != 0)
    {
      result = *((float *)a2 + 5);
      *((_DWORD *)v3 + 8) |= 4u;
      *((float *)v3 + 5) = result;
      v5 = *((_DWORD *)a2 + 8);
    }
    if ((v5 & 8) != 0)
    {
      result = *((float *)a2 + 6);
      *((_DWORD *)v3 + 8) |= 8u;
      *((float *)v3 + 6) = result;
    }
  }
  return result;
}

void sub_18D1302CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::~GnssToGpsTimeOffset(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BEEB8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::~GnssToGpsTimeOffset(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::SharedDtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BEEB8;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 32))
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(this + 24) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v7;
  char *v8;
  unint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  unsigned int v17;
  uint64_t result;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 8) |= 1u;
        v7 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)operator new();
          *((_QWORD *)v7 + 1) = 0;
          *((_QWORD *)v7 + 2) = 0;
          *(_QWORD *)v7 = &off_1E25BF200;
          *((_QWORD *)this + 1) = v7;
        }
        v21 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21))return 0;
        }
        else
        {
          v21 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v16 >= v9 || *v16 != 16)
          continue;
        v10 = v16 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_31:
        v21 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v17 = v21;
        }
        else
        {
          v17 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v17 <= 4)
        {
          *((_DWORD *)this + 8) |= 2u;
          *((_DWORD *)this + 4) = v17;
        }
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_41:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v21;
        *((_DWORD *)this + 8) |= 4u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_45:
        v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v21) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v21;
          *((_DWORD *)this + 8) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_41;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
        goto LABEL_45;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this)
{
  int v2;
  int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  unsigned int v11;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_23;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v5 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::default_instance_
                                                                               + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = v7 + v8 + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_18;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_18;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if ((v9 & 0x80000000) != 0)
  {
    v10 = 11;
  }
  else if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 8);
  }
  else
  {
    v10 = 2;
  }
  v3 += v10;
LABEL_18:
  v11 = v3 + 5;
  if ((v2 & 4) == 0)
    v11 = v3;
  if ((v2 & 8) != 0)
    result = v11 + 5;
  else
    result = v11;
LABEL_23:
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *a2)
{
  uint64_t v2;
  int v3;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.GnssToGpsTimeOffset");
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::SharedCtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = -1;
  result = 0.0;
  *(_QWORD *)((char *)this + 20) = 0;
  *(_QWORD *)((char *)this + 28) = 0xFFFFFFFFLL;
  *(_QWORD *)((char *)this + 36) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::SpaceWeatherStatus(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *a2)
{
  *(_QWORD *)this = &off_1E25BEE40;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = -1;
  *(_QWORD *)((char *)this + 20) = 0;
  *(_QWORD *)((char *)this + 28) = 0xFFFFFFFFLL;
  *(_QWORD *)((char *)this + 36) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergeFrom(this, a2);
  return this;
}

void sub_18D130AA4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *a2)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *v3;
  float result;
  int v5;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v6;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v7;
  int v8;
  int v9;
  int v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 48);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 48) & 1) != 0)
  {
    *((_DWORD *)v3 + 12) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)operator new();
      v6 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BF200;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_
                                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 12);
  }
  if ((v5 & 2) != 0)
  {
    v8 = *((_DWORD *)a2 + 4);
    if ((v8 + 1) >= 7)
      __assert_rtn("set_solar_radiation_storm_scale", "CoreNavigationCLPRavenGnssAssistanceFile.pb.h", 1946, "::CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::StormScale_IsValid(value)");
    *((_DWORD *)v3 + 12) |= 2u;
    *((_DWORD *)v3 + 4) = v8;
    v5 = *((_DWORD *)a2 + 12);
  }
  if ((v5 & 4) != 0)
  {
    result = *((float *)a2 + 5);
    *((_DWORD *)v3 + 12) |= 4u;
    *((float *)v3 + 5) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_15:
      if ((v5 & 0x10) == 0)
        goto LABEL_16;
      goto LABEL_23;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_15;
  }
  result = *((float *)a2 + 6);
  *((_DWORD *)v3 + 12) |= 8u;
  *((float *)v3 + 6) = result;
  v5 = *((_DWORD *)a2 + 12);
  if ((v5 & 0x10) == 0)
  {
LABEL_16:
    if ((v5 & 0x20) == 0)
      goto LABEL_17;
LABEL_25:
    v10 = *((_DWORD *)a2 + 8);
    *((_DWORD *)v3 + 12) |= 0x20u;
    *((_DWORD *)v3 + 8) = v10;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x40) == 0)
    {
LABEL_18:
      if ((v5 & 0x80) == 0)
        return result;
      goto LABEL_19;
    }
    goto LABEL_26;
  }
LABEL_23:
  v9 = *((_DWORD *)a2 + 7);
  if ((v9 + 1) >= 7)
    __assert_rtn("set_geomagnetic_storm_scale", "CoreNavigationCLPRavenGnssAssistanceFile.pb.h", 2013, "::CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::StormScale_IsValid(value)");
  *((_DWORD *)v3 + 12) |= 0x10u;
  *((_DWORD *)v3 + 7) = v9;
  v5 = *((_DWORD *)a2 + 12);
  if ((v5 & 0x20) != 0)
    goto LABEL_25;
LABEL_17:
  if ((v5 & 0x40) == 0)
    goto LABEL_18;
LABEL_26:
  result = *((float *)a2 + 9);
  *((_DWORD *)v3 + 12) |= 0x40u;
  *((float *)v3 + 9) = result;
  if ((*((_DWORD *)a2 + 12) & 0x80) != 0)
  {
LABEL_19:
    result = *((float *)a2 + 10);
    *((_DWORD *)v3 + 12) |= 0x80u;
    *((float *)v3 + 10) = result;
  }
  return result;
}

void sub_18D130CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::~SpaceWeatherStatus(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BEE40;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::~SpaceWeatherStatus(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::SharedDtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEE40;
  *(_QWORD *)(v1 + 8) = 0;
  *(_DWORD *)(v1 + 16) = -1;
  result = 0.0;
  *(_QWORD *)(v1 + 20) = 0;
  *(_QWORD *)(v1 + 28) = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 36) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 48))
  {
    if ((*(_BYTE *)(this + 48) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_DWORD *)(this + 16) = -1;
    *(_QWORD *)(this + 20) = 0;
    *(_QWORD *)(this + 28) = 0xFFFFFFFFLL;
    *(_QWORD *)(this + 36) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  unsigned int v22;
  uint64_t result;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  unsigned int v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31;

  v4 = (unsigned int *)((char *)this + 32);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
        *((_DWORD *)this + 12) |= 1u;
        v8 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)operator new();
          *((_QWORD *)v8 + 1) = 0;
          *((_QWORD *)v8 + 2) = 0;
          *(_QWORD *)v8 = &off_1E25BF200;
          *((_QWORD *)this + 1) = v8;
        }
        v31 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
        }
        else
        {
          v31 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v18 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v18, 1);
        v20 = v18 - 1;
        if (v20 < 0 == v19)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v21 >= v10 || *v21 != 16)
          continue;
        v11 = v21 + 1;
        *((_QWORD *)a2 + 1) = v11;
        goto LABEL_40;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_40:
        v31 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!(_DWORD)result)
            return result;
          v22 = v31;
        }
        else
        {
          v22 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (v22 + 1 <= 6)
        {
          *((_DWORD *)this + 12) |= 2u;
          *((_DWORD *)this + 4) = v22;
        }
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_50:
        v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v31) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v31;
        *((_DWORD *)this + 12) |= 4u;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_54:
        v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v31) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v31;
        *((_DWORD *)this + 12) |= 8u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 >= v12 || *v26 != 40)
          continue;
        v13 = v26 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_58:
        v31 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31);
          if (!(_DWORD)result)
            return result;
          v27 = v31;
        }
        else
        {
          v27 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v27 + 1 <= 6)
        {
          *((_DWORD *)this + 12) |= 0x10u;
          *((_DWORD *)this + 7) = v27;
        }
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v28 >= v14 || *v28 != 48)
          continue;
        v15 = v28 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_68:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v15;
          v29 = v15 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 12) |= 0x20u;
        if ((unint64_t)v29 >= v14 || *v29 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_76:
        v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v31) & 1) == 0)
          return 0;
        *((_DWORD *)this + 9) = v31;
        *((_DWORD *)this + 12) |= 0x40u;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_80:
        v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v31) & 1) != 0)
        {
          *((_DWORD *)this + 10) = v31;
          *((_DWORD *)this + 12) |= 0x80u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_50;
        goto LABEL_28;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_54;
        goto LABEL_28;
      case 5u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_58;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_68;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_76;
        goto LABEL_28;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_28;
        goto LABEL_80;
      default:
        v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 40), a3);
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 36), a3);
  if ((*(_DWORD *)(v5 + 48) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 40), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  int v2;
  int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  unsigned int v17;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_40;
  }
  if ((*((_BYTE *)this + 48) & 1) != 0)
  {
    v5 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::default_instance_
                                                                               + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = v7 + v8 + 1;
    v2 = *((_DWORD *)this + 12);
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 48) & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v10 = 2;
    }
    v3 += v10;
  }
LABEL_18:
  v11 = v3 + 5;
  if ((v2 & 4) == 0)
    v11 = v3;
  if ((v2 & 8) != 0)
    v12 = v11 + 5;
  else
    v12 = v11;
  if ((v2 & 0x10) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v14 = 2;
    }
    v12 += v14;
  }
  if ((v2 & 0x20) != 0)
  {
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v16 = 2;
    }
    v12 += v16;
  }
  v17 = v12 + 5;
  if ((v2 & 0x40) == 0)
    v17 = v12;
  if ((v2 & 0x80) != 0)
    result = v17 + 5;
  else
    result = v17;
LABEL_40:
  *((_DWORD *)this + 11) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.SpaceWeatherStatus");
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::IonosphereVTECModel(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *a2)
{
  *(_QWORD *)this = &off_1E25BEF30;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergeFrom(this, a2);
  return this;
}

void sub_18D13177C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *((_QWORD *)v1 + 5);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8052888210);
  v4 = *((_QWORD *)v1 + 3);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *a2)
{
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  v4 = *((_DWORD *)a2 + 8);
  if (v4)
  {
    sub_18D0D44E8((_DWORD *)this + 6, *((_DWORD *)this + 8) + v4);
    memcpy((void *)(*((_QWORD *)this + 3) + 4 * *((int *)this + 8)), *((const void **)a2 + 3), 4 * *((int *)a2 + 8));
    *((_DWORD *)this + 8) += *((_DWORD *)a2 + 8);
  }
  v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    sub_18D0D44E8((_DWORD *)this + 10, *((_DWORD *)this + 12) + v5);
    memcpy((void *)(*((_QWORD *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  LOBYTE(v6) = *((_BYTE *)a2 + 64);
  if (!(_BYTE)v6)
    return;
  if ((*((_BYTE *)a2 + 64) & 1) != 0)
  {
    v7 = *((_DWORD *)a2 + 2);
    if (v7 >= 3)
      __assert_rtn("set_layer_number", "CoreNavigationCLPRavenGnssAssistanceFile.pb.h", 2106, "::CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereLayer_IsValid(value)");
    *((_DWORD *)this + 16) |= 1u;
    *((_DWORD *)this + 2) = v7;
    v6 = *((_DWORD *)a2 + 16);
  }
  if ((v6 & 2) == 0)
  {
    if ((v6 & 4) == 0)
      goto LABEL_13;
LABEL_18:
    v10 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 16) |= 4u;
    *((_DWORD *)this + 4) = v10;
    v6 = *((_DWORD *)a2 + 16);
    if ((v6 & 8) == 0)
    {
LABEL_14:
      if ((v6 & 0x40) == 0)
        return;
      goto LABEL_15;
    }
    goto LABEL_19;
  }
  v9 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 16) |= 2u;
  *((_DWORD *)this + 3) = v9;
  v6 = *((_DWORD *)a2 + 16);
  if ((v6 & 4) != 0)
    goto LABEL_18;
LABEL_13:
  if ((v6 & 8) == 0)
    goto LABEL_14;
LABEL_19:
  v11 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 5) = v11;
  if ((*((_DWORD *)a2 + 16) & 0x40) != 0)
  {
LABEL_15:
    v8 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 16) |= 0x40u;
    *((_DWORD *)this + 14) = v8;
  }
}

void sub_18D131984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::~IonosphereVTECModel(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BEF30;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  v2 = *((_QWORD *)this + 5);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8052888210);
  v3 = *((_QWORD *)this + 3);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::~IonosphereVTECModel(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEF30;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 64))
  {
    *(_DWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  _DWORD *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  char *v9;
  unsigned int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t result;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  signed int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  signed int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int *v44;
  unsigned int v45[12];

  v4 = (_DWORD *)((char *)this + 40);
  v5 = (_DWORD *)((char *)this + 24);
  v42 = (unsigned int *)((char *)this + 12);
  v43 = (unsigned int *)((char *)this + 16);
  v44 = (unsigned int *)((char *)this + 20);
LABEL_2:
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v45[0] = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
          if (!(_DWORD)result)
            return result;
          v10 = v45[0];
        }
        else
        {
          v10 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        if (v10 <= 2)
        {
          *((_DWORD *)this + 16) |= 1u;
          *((_DWORD *)this + 2) = v10;
        }
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v16 < v11 && *v16 == 16)
        {
          v12 = v16 + 1;
          *((_QWORD *)a2 + 1) = v12;
          goto LABEL_40;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_40:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v42 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 16) |= 2u;
        if ((unint64_t)v17 >= v11 || *v17 != 24)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_48:
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v43 = *v13;
          v18 = v13 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v18 >= v11 || *v18 != 32)
          continue;
        v14 = v18 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_56:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
          if (!(_DWORD)result)
            return result;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v44 = *v14;
          v19 = v14 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v19 < v11 && *v19 == 45)
          goto LABEL_63;
        continue;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_48;
      case 4u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_56;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 2)
        {
          result = sub_18D0D5C68(a2, v5);
          if (!(_DWORD)result)
            return result;
          goto LABEL_80;
        }
        if (v8 != 5)
          goto LABEL_26;
        while (2)
        {
          v45[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v45) & 1) == 0)
            return 0;
          v20 = v45[0];
          v21 = *((_DWORD *)this + 8);
          if (v21 == *((_DWORD *)this + 9))
          {
            sub_18D0D44E8(v5, v21 + 1);
            v21 = *((_DWORD *)this + 8);
          }
          v22 = *((_QWORD *)this + 3);
          v23 = v21 + 1;
          *((_DWORD *)this + 8) = v21 + 1;
          *(_DWORD *)(v22 + 4 * v21) = v20;
          v24 = *((_QWORD *)a2 + 1);
          v25 = *((_DWORD *)a2 + 4) - v24;
          if (v25 >= 1)
          {
            v26 = v25 / 5u;
            v27 = v26 >= *((_DWORD *)this + 9) - v23 ? *((_DWORD *)this + 9) - v23 : v26;
            if (v27 >= 1)
            {
              v28 = 0;
              while (*(_BYTE *)v24 == 45)
              {
                v29 = *(_DWORD *)(v24 + 1);
                if (v23 >= *((_DWORD *)this + 9))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v45);
                  v23 = *((_DWORD *)this + 8);
                  v22 = *((_QWORD *)this + 3);
                }
                *((_DWORD *)this + 8) = v23 + 1;
                *(_DWORD *)(v22 + 4 * v23) = v29;
                ++v28;
                v24 += 5;
                ++v23;
                if (v27 == v28)
                {
                  v28 = v27;
                  break;
                }
              }
              if (v28)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_80:
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v19 < *((_QWORD *)a2 + 2))
          {
            v30 = *v19;
            if (v30 == 45)
            {
LABEL_63:
              *((_QWORD *)a2 + 1) = v19 + 1;
              continue;
            }
            if (v30 == 53)
              goto LABEL_83;
          }
          goto LABEL_2;
        }
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 2)
        {
          result = sub_18D0D5C68(a2, v4);
          if (!(_DWORD)result)
            return result;
          goto LABEL_100;
        }
        if (v8 != 5)
        {
LABEL_26:
          if (v8 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        while (1)
        {
          v45[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v45) & 1) == 0)
            return 0;
          v31 = v45[0];
          v32 = *((_DWORD *)this + 12);
          if (v32 == *((_DWORD *)this + 13))
          {
            sub_18D0D44E8(v4, v32 + 1);
            v32 = *((_DWORD *)this + 12);
          }
          v33 = *((_QWORD *)this + 5);
          v34 = v32 + 1;
          *((_DWORD *)this + 12) = v32 + 1;
          *(_DWORD *)(v33 + 4 * v32) = v31;
          v35 = *((_QWORD *)a2 + 1);
          v36 = *((_DWORD *)a2 + 4) - v35;
          if (v36 >= 1)
          {
            v37 = v36 / 5u;
            v38 = v37 >= *((_DWORD *)this + 13) - v34 ? *((_DWORD *)this + 13) - v34 : v37;
            if (v38 >= 1)
            {
              v39 = 0;
              while (*(_BYTE *)v35 == 53)
              {
                v40 = *(_DWORD *)(v35 + 1);
                if (v34 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v45);
                  v34 = *((_DWORD *)this + 12);
                  v33 = *((_QWORD *)this + 5);
                }
                *((_DWORD *)this + 12) = v34 + 1;
                *(_DWORD *)(v33 + 4 * v34) = v40;
                ++v39;
                v35 += 5;
                ++v34;
                if (v38 == v39)
                {
                  v39 = v38;
                  break;
                }
              }
              if (v39)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_100:
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v19 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v41 = *v19;
          if (v41 != 53)
            break;
LABEL_83:
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v41 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_104:
        v45[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v45) & 1) != 0)
        {
          *((_DWORD *)this + 14) = v45[0];
          *((_DWORD *)this + 16) |= 0x40u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 7u:
        v8 = TagFallback & 7;
        if (v8 != 5)
          goto LABEL_26;
        goto LABEL_104;
      default:
        v8 = TagFallback & 7;
        goto LABEL_26;
    }
  }
}

void sub_18D1320DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 64);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 8) != 0)
LABEL_5:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 24) + 4 * v7++), a3);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 40) + 4 * v8++), a3);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(_BYTE *)(v5 + 64) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 56), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  uint64_t result;

  v2 = *((unsigned __int8 *)this + 64);
  if (*((_BYTE *)this + 64))
  {
    if ((v2 & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_16;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 16);
        if ((v2 & 2) == 0)
          goto LABEL_16;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      v3 = 0;
      if ((v2 & 2) == 0)
        goto LABEL_16;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v6 = 2;
    }
    v3 += v6;
LABEL_16:
    if ((v2 & 4) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v7 >= 0x80)
      {
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        v2 = *((_DWORD *)this + 16);
      }
      else
      {
        v8 = 2;
      }
      v3 += v8;
      if ((v2 & 8) == 0)
        goto LABEL_27;
    }
    else if ((v2 & 8) == 0)
    {
LABEL_27:
      if ((v2 & 0x40) != 0)
        v2 = v3 + 5;
      else
        v2 = v3;
      goto LABEL_30;
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v10 = 2;
    }
    v3 += v10;
    goto LABEL_27;
  }
LABEL_30:
  result = (5 * (*((_DWORD *)this + 12) + *((_DWORD *)this + 8)) + v2);
  *((_DWORD *)this + 15) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float result;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    v7 = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 3) = v6;
    v8 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = v7;
    *((_QWORD *)a2 + 4) = v8;
    v9 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    v10 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 5) = v9;
    v11 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = v10;
    *((_QWORD *)a2 + 6) = v11;
    result = *((float *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((float *)a2 + 14) = result;
    LODWORD(v9) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
    LODWORD(v9) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v9;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.IonosphereVTECModel");
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::IonosphereCorrections(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *a2)
{
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *(_QWORD *)this = &off_1E25BF020;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergeFrom(this, a2);
  return this;
}

void sub_18D13250C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *a2)
{
  uint64_t v4;
  float result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v15;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v16;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *v17;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *v18;
  _BYTE v19[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel **)(*((_QWORD *)a2 + 2)
                                                                                                 + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25BEF30;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 52) = 0u;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergeFrom((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  LOBYTE(v14) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v14)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      *((_DWORD *)this + 13) |= 1u;
      v15 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
      if (!v15)
      {
        v4 = operator new();
        v15 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)v4;
        *(_QWORD *)(v4 + 8) = 0;
        *(_QWORD *)(v4 + 16) = 0;
        *(_QWORD *)v4 = &off_1E25BF200;
        *((_QWORD *)this + 1) = v4;
      }
      v16 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)a2 + 1);
      if (!v16)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v4);
        v16 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_
                                                                                        + 8);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(v15, v16);
      v14 = *((_DWORD *)a2 + 13);
    }
    if ((v14 & 4) != 0)
    {
      *((_DWORD *)this + 13) |= 4u;
      v17 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)*((_QWORD *)this + 5);
      if (!v17)
      {
        v4 = operator new();
        v17 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)v4;
        *(_QWORD *)v4 = &off_1E25BEE40;
        *(_QWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = -1;
        *(_QWORD *)(v4 + 20) = 0;
        *(_QWORD *)(v4 + 28) = 0xFFFFFFFFLL;
        *(_QWORD *)(v4 + 36) = 0;
        *(_DWORD *)(v4 + 44) = 0;
        *(_DWORD *)(v4 + 48) = 0;
        *((_QWORD *)this + 5) = v4;
      }
      v18 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)*((_QWORD *)a2 + 5);
      if (!v18)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v4);
        v18 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_ + 40);
      }
      return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergeFrom(v17, v18);
    }
  }
  return result;
}

void sub_18D13277C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::~IonosphereCorrections(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this)
{
  *(_QWORD *)this = &off_1E25BF020;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::~IonosphereCorrections(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::SharedDtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 5);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)result = &off_1E25BF020;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 52);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 52) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v2 = *(_DWORD *)(this + 52);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 40);
      if (this)
        this = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::Clear(this);
    }
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t result;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;

  v4 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_21;
      *((_DWORD *)this + 13) |= 1u;
      v9 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
      if (!v9)
      {
        v9 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)operator new();
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = &off_1E25BF200;
        *((_QWORD *)this + 1) = v9;
      }
      v36 = 0;
      v10 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))
          return 0;
      }
      else
      {
        v36 = *v10;
        *((_QWORD *)a2 + 1) = v10 + 1;
      }
      v11 = *((_DWORD *)a2 + 14);
      v12 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v11 + 1;
      if (v11 >= v12)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(v9, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v13 = *((_DWORD *)a2 + 14);
      v14 = __OFSUB__(v13, 1);
      v15 = v13 - 1;
      if (v15 < 0 == v14)
        *((_DWORD *)a2 + 14) = v15;
      v16 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 18)
      {
        while (1)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_33:
          v17 = *((_DWORD *)this + 7);
          v18 = *((int *)this + 6);
          if ((int)v18 >= v17)
          {
            if (v17 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v17 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v17 + 1;
            v20 = operator new();
            *(_QWORD *)v20 = &off_1E25BEF30;
            *(_OWORD *)(v20 + 8) = 0u;
            *(_OWORD *)(v20 + 24) = 0u;
            *(_OWORD *)(v20 + 40) = 0u;
            *(_OWORD *)(v20 + 52) = 0u;
            v21 = *((_QWORD *)this + 2);
            v22 = *((int *)this + 6);
            *((_DWORD *)this + 6) = v22 + 1;
            *(_QWORD *)(v21 + 8 * v22) = v20;
          }
          else
          {
            v19 = *((_QWORD *)this + 2);
            *((_DWORD *)this + 6) = v18 + 1;
            v20 = *(_QWORD *)(v19 + 8 * v18);
          }
          v37 = 0;
          v23 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0;
          }
          else
          {
            v37 = *v23;
            *((_QWORD *)a2 + 1) = v23 + 1;
          }
          v24 = *((_DWORD *)a2 + 14);
          v25 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v24 + 1;
          if (v24 >= v25)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel *)v20, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v26 = *((_DWORD *)a2 + 14);
          v14 = __OFSUB__(v26, 1);
          v27 = v26 - 1;
          if (v27 < 0 == v14)
            *((_DWORD *)a2 + 14) = v27;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v16 >= *((_QWORD *)a2 + 2))
            break;
          v28 = *v16;
          if (v28 != 18)
          {
            if (v28 == 26)
            {
              *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
              *((_DWORD *)this + 13) |= 4u;
              v29 = *((_QWORD *)this + 5);
              if (!v29)
              {
                v29 = operator new();
                *(_QWORD *)v29 = &off_1E25BEE40;
                *(_QWORD *)(v29 + 8) = 0;
                *(_DWORD *)(v29 + 16) = -1;
                *(_QWORD *)(v29 + 20) = 0;
                *(_QWORD *)(v29 + 28) = 0xFFFFFFFFLL;
                *(_QWORD *)(v29 + 36) = 0;
                *(_DWORD *)(v29 + 44) = 0;
                *(_DWORD *)(v29 + 48) = 0;
                *((_QWORD *)this + 5) = v29;
              }
              v38 = 0;
              v30 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38))return 0;
              }
              else
              {
                v38 = *v30;
                *((_QWORD *)a2 + 1) = v30 + 1;
              }
              v31 = *((_DWORD *)a2 + 14);
              v32 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v31 + 1;
              if (v31 >= v32)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)v29, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v33 = *((_DWORD *)a2 + 14);
              v14 = __OFSUB__(v33, 1);
              v34 = v33 - 1;
              if (v34 < 0 == v14)
                *((_DWORD *)a2 + 14) = v34;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_21;
      goto LABEL_33;
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if (v8 == 2)
        goto LABEL_51;
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_21:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  if ((*(_BYTE *)(this + 52) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if ((*(_BYTE *)(v5 + 52) & 4) != 0)
  {
    v8 = *(_QWORD *)(v5 + 40);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_
                     + 40);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this)
{
  int v2;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  if (!*((_BYTE *)this + 52))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 52) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 52) & 4) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
    v3 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_
                                                                             + 8);
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 13) & 4) != 0)
  {
LABEL_12:
    v7 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus *)*((_QWORD *)this + 5);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
      v7 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::default_instance_
                                                                                          + 40);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SpaceWeatherStatus::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  v11 = *((_DWORD *)this + 6);
  v12 = (v11 + v2);
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel::ByteSize(*(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereVTECModel **)(*((_QWORD *)this + 2) + 8 * v13));
      v15 = (int)v14;
      if (v14 >= 0x80)
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      else
        v16 = 1;
      v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *((int *)this + 6));
  }
  *((_DWORD *)this + 12) = v12;
  return v12;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *a2)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_QWORD *)v3 + 5);
    *((_QWORD *)v3 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.IonosphereCorrections");
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::SharedCtor(_QWORD *this)
{
  this[9] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::AssistanceFileContents(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *a2)
{
  *(_QWORD *)this = &off_1E25BF098;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 9) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergeFrom(this, a2);
  return this;
}

void sub_18D133184(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;

  sub_18D09ECA4(v3);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float result;
  uint64_t v14;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v23;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v24;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *v25;
  const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *v26;
  _BYTE v27[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData **)(*((_QWORD *)a2 + 3)
                                                                                                + 8 * v4);
      v6 = *((_DWORD *)this + 9);
      v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)((char *)this + 24));
          v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E25BEDC8;
        *(_QWORD *)(v9 + 56) = 0;
        *(_QWORD *)(v9 + 64) = 0;
        *(_DWORD *)(v9 + 72) = 0;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 36) = 0u;
        v10 = *((_QWORD *)this + 3);
        v11 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergeFrom((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  v12 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)((char *)this + 48));
  if (*((int *)a2 + 14) >= 1)
  {
    v14 = 0;
    do
    {
      v15 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset **)(*((_QWORD *)a2 + 6)
                                                                                                  + 8 * v14);
      v16 = *((_DWORD *)this + 15);
      v17 = *((int *)this + 14);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)((char *)this + 48));
          v16 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v16 + 1;
        v19 = operator new();
        *(_QWORD *)v19 = &off_1E25BEEB8;
        *(_QWORD *)(v19 + 8) = 0;
        *(_QWORD *)(v19 + 16) = 0;
        *(_QWORD *)(v19 + 24) = 0;
        *(_DWORD *)(v19 + 32) = 0;
        v20 = *((_QWORD *)this + 6);
        v21 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21) = v19;
      }
      else
      {
        v18 = *((_QWORD *)this + 6);
        *((_DWORD *)this + 14) = v17 + 1;
        v19 = *(_QWORD *)(v18 + 8 * v17);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergeFrom((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *)v19, v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 14));
  }
  LOBYTE(v22) = *((_BYTE *)a2 + 76);
  if ((_BYTE)v22)
  {
    if ((*((_BYTE *)a2 + 76) & 1) != 0)
    {
      *((_DWORD *)this + 19) |= 1u;
      v23 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
      if (!v23)
      {
        v12 = operator new();
        v23 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)v12;
        *(_QWORD *)(v12 + 8) = 0;
        *(_QWORD *)(v12 + 16) = 0;
        *(_QWORD *)v12 = &off_1E25BF200;
        *((_QWORD *)this + 1) = v12;
      }
      v24 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)a2 + 1);
      if (!v24)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v12);
        v24 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_
                                                                                        + 8);
      }
      result = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergeFrom(v23, v24);
      v22 = *((_DWORD *)a2 + 19);
    }
    if ((v22 & 2) != 0)
    {
      *((_DWORD *)this + 19) |= 2u;
      v25 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)*((_QWORD *)this + 2);
      if (!v25)
      {
        v12 = operator new();
        v25 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)v12;
        *(_QWORD *)(v12 + 40) = 0;
        *(_QWORD *)(v12 + 48) = 0;
        *(_QWORD *)v12 = &off_1E25BF020;
        *(_QWORD *)(v12 + 8) = 0;
        *(_QWORD *)(v12 + 16) = 0;
        *(_QWORD *)(v12 + 24) = 0;
        *(_DWORD *)(v12 + 32) = 0;
        *((_QWORD *)this + 2) = v12;
      }
      v26 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)*((_QWORD *)a2 + 2);
      if (!v26)
      {
        CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)v12);
        v26 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_ + 16);
      }
      return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergeFrom(v25, v26);
    }
  }
  return result;
}

void sub_18D1334C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::~AssistanceFileContents(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  *(_QWORD *)this = &off_1E25BF098;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 6);
  sub_18D09ECA4((uint64_t *)this + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::~AssistanceFileContents(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::SharedDtor(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::New(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF098;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 76);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 76) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v2 = *(_DWORD *)(this + 76);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::Clear(this);
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 56) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 56));
  }
  *(_DWORD *)(v1 + 56) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  _BYTE *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  int v46;
  _BYTE *v47;
  uint64_t result;
  unsigned int v49;

  v4 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)((char *)this + 24);
  v5 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)((char *)this + 48);
  while (1)
  {
LABEL_2:
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 < *((_QWORD *)a2 + 2) && (*v6 & 0x80000000) == 0)
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        *((_DWORD *)this + 19) |= 1u;
        v9 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
        if (!v9)
        {
          v9 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)operator new();
          *((_QWORD *)v9 + 1) = 0;
          *((_QWORD *)v9 + 2) = 0;
          *(_QWORD *)v9 = &off_1E25BF200;
          *((_QWORD *)this + 1) = v9;
        }
        v49 = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))return 0;
        }
        else
        {
          v49 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::MergePartialFromCodedStream(v9, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
        goto LABEL_32;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
LABEL_32:
        *((_DWORD *)this + 19) |= 2u;
        v17 = *((_QWORD *)this + 2);
        if (!v17)
        {
          v17 = operator new();
          *(_QWORD *)(v17 + 40) = 0;
          *(_QWORD *)(v17 + 48) = 0;
          *(_QWORD *)v17 = &off_1E25BF020;
          *(_QWORD *)(v17 + 8) = 0;
          *(_QWORD *)(v17 + 16) = 0;
          *(_QWORD *)(v17 + 24) = 0;
          *(_DWORD *)(v17 + 32) = 0;
          *((_QWORD *)this + 2) = v17;
        }
        v49 = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))return 0;
        }
        else
        {
          v49 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)v17, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v21, 1);
        v22 = v21 - 1;
        if (v22 < 0 == v14)
          *((_DWORD *)a2 + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 < *((_QWORD *)a2 + 2) && *v23 == 26)
        {
          do
          {
            *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_46:
            v24 = *((_DWORD *)this + 9);
            v25 = *((int *)this + 8);
            if ((int)v25 >= v24)
            {
              if (v24 == *((_DWORD *)this + 10))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                v24 = *((_DWORD *)this + 9);
              }
              *((_DWORD *)this + 9) = v24 + 1;
              v27 = operator new();
              *(_QWORD *)v27 = &off_1E25BEDC8;
              *(_QWORD *)(v27 + 56) = 0;
              *(_QWORD *)(v27 + 64) = 0;
              *(_DWORD *)(v27 + 72) = 0;
              *(_OWORD *)(v27 + 8) = 0u;
              *(_OWORD *)(v27 + 24) = 0u;
              *(_OWORD *)(v27 + 36) = 0u;
              v28 = *((_QWORD *)this + 3);
              v29 = *((int *)this + 8);
              *((_DWORD *)this + 8) = v29 + 1;
              *(_QWORD *)(v28 + 8 * v29) = v27;
            }
            else
            {
              v26 = *((_QWORD *)this + 3);
              *((_DWORD *)this + 8) = v25 + 1;
              v27 = *(_QWORD *)(v26 + 8 * v25);
            }
            v49 = 0;
            v30 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))return 0;
            }
            else
            {
              v49 = *v30;
              *((_QWORD *)a2 + 1) = v30 + 1;
            }
            v31 = *((_DWORD *)a2 + 14);
            v32 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v31 + 1;
            if (v31 >= v32)
              return 0;
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData *)v27, a2)|| !*((_BYTE *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            v33 = *((_DWORD *)a2 + 14);
            v14 = __OFSUB__(v33, 1);
            v34 = v33 - 1;
            if (v34 < 0 == v14)
              *((_DWORD *)a2 + 14) = v34;
            v23 = (_BYTE *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v23 >= *((_QWORD *)a2 + 2))
              goto LABEL_2;
            v35 = *v23;
          }
          while (v35 == 26);
          if (v35 == 34)
          {
            do
            {
              *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_64:
              v36 = *((_DWORD *)this + 15);
              v37 = *((int *)this + 14);
              if ((int)v37 >= v36)
              {
                if (v36 == *((_DWORD *)this + 16))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
                  v36 = *((_DWORD *)this + 15);
                }
                *((_DWORD *)this + 15) = v36 + 1;
                v39 = operator new();
                *(_QWORD *)v39 = &off_1E25BEEB8;
                *(_QWORD *)(v39 + 8) = 0;
                *(_QWORD *)(v39 + 16) = 0;
                *(_QWORD *)(v39 + 24) = 0;
                *(_DWORD *)(v39 + 32) = 0;
                v40 = *((_QWORD *)this + 6);
                v41 = *((int *)this + 14);
                *((_DWORD *)this + 14) = v41 + 1;
                *(_QWORD *)(v40 + 8 * v41) = v39;
              }
              else
              {
                v38 = *((_QWORD *)this + 6);
                *((_DWORD *)this + 14) = v37 + 1;
                v39 = *(_QWORD *)(v38 + 8 * v37);
              }
              v49 = 0;
              v42 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v49))return 0;
              }
              else
              {
                v49 = *v42;
                *((_QWORD *)a2 + 1) = v42 + 1;
              }
              v43 = *((_DWORD *)a2 + 14);
              v44 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v43 + 1;
              if (v43 >= v44)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset *)v39, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v45 = *((_DWORD *)a2 + 14);
              v14 = __OFSUB__(v45, 1);
              v46 = v45 - 1;
              if (v46 < 0 == v14)
                *((_DWORD *)a2 + 14) = v46;
              v23 = (_BYTE *)*((_QWORD *)a2 + 1);
              v47 = (_BYTE *)*((_QWORD *)a2 + 2);
            }
            while (v23 < v47 && *v23 == 34);
            if (v23 == v47 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
        }
        break;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_46;
        goto LABEL_20;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        goto LABEL_64;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 76);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 76);
  }
  if ((v6 & 2) != 0)
  {
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_
                     + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 56));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::ByteSize(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  int v2;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;

  if (!*((_BYTE *)this + 76))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 76) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 76) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime *)*((_QWORD *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
    v3 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_
                                                                             + 8);
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GpsTime::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 19) & 2) != 0)
  {
LABEL_12:
    v7 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections *)*((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(0);
      v7 = *(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections **)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_
                                                                                             + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::IonosphereCorrections::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  v11 = *((_DWORD *)this + 8);
  v12 = v11 + v2;
  if (v11 >= 1)
  {
    v13 = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData::ByteSize(*(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::SatelliteClockData **)(*((_QWORD *)this + 3) + 8 * v13));
      v15 = (int)v14;
      if (v14 >= 0x80)
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      else
        v16 = 1;
      v12 += v15 + v16;
      ++v13;
    }
    while (v13 < *((int *)this + 8));
  }
  v17 = *((_DWORD *)this + 14);
  v18 = (v17 + v12);
  if (v17 >= 1)
  {
    v19 = 0;
    do
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset::ByteSize(*(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::GnssToGpsTimeOffset **)(*((_QWORD *)this + 6) + 8 * v19));
      v21 = (int)v20;
      if (v20 >= 0x80)
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      else
        v22 = 1;
      v18 = (v21 + v18 + v22);
      ++v19;
    }
    while (v19 < *((int *)this + 14));
  }
  *((_DWORD *)this + 18) = v18;
  return v18;
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::CopyFrom(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this, const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::IsInitialized(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::Swap(CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *this, CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *a2)
{
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v6 = *((_DWORD *)v3 + 19);
    *((_DWORD *)v3 + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v6;
    v7 = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RavenGnssAssistanceFile.AssistanceFileContents");
}

uint64_t sub_18D134068(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D134070(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D134078(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D134080(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D134088(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_18D134090(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18D134098(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18D1340A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_18D1340A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18D1340B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPGnssMeasApi_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::default_instance_);
  result = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_;
  if (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto_impl(CoreNavigation::CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPGnssMeasApi.pb.cc", a4);
  v4 = (_QWORD *)operator new();
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_1E25BAE08;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_ = (uint64_t)v4;
  v5 = operator new();
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)v5 = &off_1E25BD9A0;
  *(_DWORD *)(v5 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_ = v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E25BACA0;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_QWORD *)(v6 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_ = v6;
  v7 = operator new();
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)v7 = &off_1E25BD478;
  *(_DWORD *)(v7 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E25BA778;
  *(_QWORD *)(v8 + 8) = 0;
  *(_DWORD *)(v8 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_1E25BAEF8;
  *(_QWORD *)(v9 + 16) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  *(_BYTE *)(v9 + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_ = v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E25BA7F0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_DWORD *)(v10 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E25BBFD8;
  *(_QWORD *)(v11 + 16) = 0;
  *(_DWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)v12 = &off_1E25BB498;
  *(_QWORD *)(v12 + 8) = 0;
  *(_DWORD *)(v12 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_ = v12;
  v13 = operator new();
  *(_QWORD *)v13 = &off_1E25BB510;
  *(_QWORD *)(v13 + 8) = 0;
  *(_DWORD *)(v13 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_ = v13;
  v14 = operator new();
  *(_QWORD *)v14 = &off_1E25BBBA0;
  *(_QWORD *)(v14 + 8) = 0;
  *(_DWORD *)(v14 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_ = v14;
  v15 = operator new();
  *(_QWORD *)(v15 + 20) = 0;
  *(_QWORD *)v15 = &off_1E25BBC18;
  *(_QWORD *)(v15 + 8) = 0;
  *(_WORD *)(v15 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_ = v15;
  v16 = operator new();
  *(_QWORD *)v16 = &off_1E25BAFE8;
  *(_WORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 10) = 0;
  *(_QWORD *)(v16 + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_ = v16;
  v17 = operator new();
  *(_QWORD *)v17 = &off_1E25BDB80;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 84) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ = v17;
  v18 = operator new();
  *(_QWORD *)(v18 + 28) = 0;
  *(_QWORD *)(v18 + 8) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)v18 = &off_1E25BD748;
  *(_BYTE *)(v18 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_ = v18;
  v19 = operator new();
  *(_QWORD *)(v19 + 28) = 0;
  *(_QWORD *)(v19 + 8) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)v19 = &off_1E25BAD18;
  *(_BYTE *)(v19 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_ = v19;
  v20 = operator new();
  *(_QWORD *)(v20 + 28) = 0;
  *(_QWORD *)(v20 + 8) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)v20 = &off_1E25BD040;
  *(_WORD *)(v20 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_ = v20;
  v21 = operator new();
  *(_QWORD *)v21 = &off_1E25BA598;
  *(_QWORD *)(v21 + 44) = 0;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_BYTE *)(v21 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_ = v21;
  v22 = operator new();
  *(_QWORD *)v22 = &off_1E25BC578;
  *(_QWORD *)(v22 + 8) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v22 + 24) = 0;
  *(_DWORD *)(v22 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ = v22;
  v23 = operator new();
  *(_QWORD *)v23 = &off_1E25B9DA0;
  *(_QWORD *)(v23 + 8) = 0;
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  *(_DWORD *)(v23 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_ = v23;
  v24 = operator new();
  *(_QWORD *)(v24 + 8) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)v24 = &off_1E25BBE70;
  *(_DWORD *)(v24 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_ = v24;
  v25 = operator new();
  *(_QWORD *)v25 = &off_1E25BC320;
  *(_QWORD *)(v25 + 88) = 0;
  *(_QWORD *)(v25 + 96) = 0;
  *(_DWORD *)(v25 + 104) = 0;
  *(_OWORD *)(v25 + 8) = 0u;
  *(_OWORD *)(v25 + 24) = 0u;
  *(_OWORD *)(v25 + 40) = 0u;
  v26 = MEMORY[0x1E0DE8338];
  *(_OWORD *)(v25 + 56) = 0u;
  *(_QWORD *)(v25 + 72) = 0;
  *(_QWORD *)(v25 + 80) = v26;
  *(_QWORD *)(v25 + 112) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ = v25;
  v27 = operator new();
  *(_QWORD *)v27 = &off_1E25BA0E8;
  *(_QWORD *)(v27 + 108) = 0;
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_OWORD *)(v27 + 40) = 0u;
  *(_OWORD *)(v27 + 56) = 0u;
  *(_OWORD *)(v27 + 72) = 0u;
  *(_OWORD *)(v27 + 88) = 0u;
  *(_BYTE *)(v27 + 104) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ = v27;
  v28 = operator new();
  *(_QWORD *)(v28 + 28) = 0;
  *(_QWORD *)(v28 + 8) = 0;
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)v28 = &off_1E25BBD80;
  *(_BYTE *)(v28 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_ = v28;
  v29 = operator new();
  *(_QWORD *)v29 = &off_1E25BCA28;
  *(_OWORD *)(v29 + 8) = 0u;
  *(_OWORD *)(v29 + 24) = 0u;
  *(_OWORD *)(v29 + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_ = v29;
  v30 = operator new();
  *(_QWORD *)v30 = &off_1E25BCE60;
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  *(_DWORD *)(v30 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_ = v30;
  v31 = operator new();
  *(_QWORD *)v31 = &off_1E25BD568;
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  *(_QWORD *)(v31 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_ = v31;
  v32 = operator new();
  *(_QWORD *)(v32 + 40) = 0;
  *(_QWORD *)v32 = &off_1E25BB6F0;
  *(_QWORD *)(v32 + 8) = 0;
  *(_QWORD *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = 0;
  *(_DWORD *)(v32 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_ = v32;
  v33 = operator new();
  *(_QWORD *)v33 = &off_1E25BDC70;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_ = v33;
  v34 = operator new();
  *(_QWORD *)v34 = &off_1E25BB9C0;
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  *(_QWORD *)(v34 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::default_instance_ = v34;
  v35 = (_QWORD *)operator new();
  *v35 = &off_1E25BB240;
  v35[1] = 0;
  v35[2] = 0;
  v35[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_ = (uint64_t)v35;
  v36 = operator new();
  *(_QWORD *)v36 = &off_1E25BAF70;
  *(_OWORD *)(v36 + 8) = 0u;
  *(_OWORD *)(v36 + 24) = 0u;
  *(_OWORD *)(v36 + 40) = 0u;
  *(_OWORD *)(v36 + 56) = 0u;
  *(_QWORD *)(v36 + 72) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_ = v36;
  v37 = operator new();
  *(_QWORD *)v37 = &off_1E25BD6D0;
  *(_OWORD *)(v37 + 128) = 0u;
  *(_OWORD *)(v37 + 144) = 0u;
  *(_OWORD *)(v37 + 160) = 0u;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  *(_DWORD *)(v37 + 40) = 0;
  *(_OWORD *)(v37 + 48) = 0u;
  *(_OWORD *)(v37 + 64) = 0u;
  *(_OWORD *)(v37 + 80) = 0u;
  *(_OWORD *)(v37 + 96) = 0u;
  *(_OWORD *)(v37 + 108) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_ = v37;
  v38 = operator new();
  *(_QWORD *)v38 = &off_1E25BC8C0;
  *(_QWORD *)(v38 + 8) = 0;
  *(_QWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v38 + 24) = 0;
  *(_DWORD *)(v38 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::default_instance_ = v38;
  v39 = operator new();
  *(_QWORD *)(v39 + 8) = 0;
  *(_QWORD *)(v39 + 16) = 0;
  *(_QWORD *)v39 = &off_1E25BB1C8;
  *(_DWORD *)(v39 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_ = v39;
  v40 = (_QWORD *)operator new();
  *v40 = &off_1E25BA868;
  v40[1] = 0;
  v40[2] = 0;
  v40[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_ = (uint64_t)v40;
  v41 = operator new();
  *(_QWORD *)v41 = &off_1E25BBC90;
  *(_OWORD *)(v41 + 8) = 0u;
  *(_OWORD *)(v41 + 24) = 0u;
  *(_QWORD *)(v41 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_ = v41;
  v42 = operator new();
  *(_QWORD *)v42 = &off_1E25BA070;
  *(_QWORD *)(v42 + 8) = 0;
  *(_QWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  *(_DWORD *)(v42 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_ = v42;
  v43 = (_QWORD *)operator new();
  *v43 = &off_1E25BCD70;
  v43[1] = 0;
  v43[2] = 0;
  v43[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_ = (uint64_t)v43;
  v44 = operator new();
  *(_QWORD *)v44 = &off_1E25BAE80;
  *(_OWORD *)(v44 + 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_DWORD *)(v44 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_ = v44;
  v45 = operator new();
  *(_QWORD *)v45 = &off_1E25BC140;
  *(_OWORD *)(v45 + 8) = 0u;
  *(_OWORD *)(v45 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_ = v45;
  v46 = operator new();
  *(_QWORD *)v46 = &off_1E25BA688;
  *(_OWORD *)(v46 + 8) = 0u;
  *(_OWORD *)(v46 + 24) = 0u;
  *(_OWORD *)(v46 + 40) = 0u;
  *(_DWORD *)(v46 + 56) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_ = v46;
  v47 = operator new();
  *(_QWORD *)v47 = &off_1E25BAD90;
  *(_OWORD *)(v47 + 8) = 0u;
  *(_OWORD *)(v47 + 24) = 0u;
  *(_DWORD *)(v47 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_ = v47;
  v48 = operator new();
  *(_QWORD *)(v48 + 8) = 0;
  *(_QWORD *)(v48 + 16) = 0;
  *(_QWORD *)v48 = &off_1E25BA520;
  *(_DWORD *)(v48 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_ = v48;
  v49 = operator new();
  *(_QWORD *)v49 = &off_1E25BBEE8;
  *(_OWORD *)(v49 + 8) = 0u;
  *(_OWORD *)(v49 + 24) = 0u;
  *(_OWORD *)(v49 + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_ = v49;
  v50 = operator new();
  *(_QWORD *)v50 = &off_1E25BC9B0;
  *(_OWORD *)(v50 + 8) = 0u;
  *(_OWORD *)(v50 + 24) = 0u;
  *(_OWORD *)(v50 + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::default_instance_ = v50;
  v51 = operator new();
  *(_QWORD *)v51 = &off_1E25BD8B0;
  *(_OWORD *)(v51 + 8) = 0u;
  *(_OWORD *)(v51 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::default_instance_ = v51;
  v52 = operator new();
  *(_QWORD *)v52 = &off_1E25BCCF8;
  *(_OWORD *)(v52 + 8) = 0u;
  *(_OWORD *)(v52 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::default_instance_ = v52;
  v53 = operator new();
  *(_QWORD *)v53 = &off_1E25BB8D0;
  *(_OWORD *)(v53 + 8) = 0u;
  *(_OWORD *)(v53 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::default_instance_ = v53;
  v54 = operator new();
  *(_OWORD *)(v54 + 48) = 0u;
  *(_DWORD *)(v54 + 64) = 0;
  *(_QWORD *)(v54 + 128) = 0;
  *(_OWORD *)(v54 + 24) = 0u;
  *(_DWORD *)(v54 + 40) = 0;
  *(_OWORD *)(v54 + 80) = 0u;
  *(_OWORD *)(v54 + 96) = 0u;
  *(_OWORD *)(v54 + 108) = 0u;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_;
  v55 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_;
  v56 = CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_;
  v57 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_;
  v55[3] = v56;
  v55[4] = v57;
  v58 = CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_;
  v55[5] = CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_;
  v55[6] = v58;
  v59 = CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_;
  v55[7] = CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_;
  v55[8] = v59;
  v60 = CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_;
  v55[9] = CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_;
  v55[10] = v60;
  v55[1] = v60;
  v61 = CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_;
  v62 = CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_;
  v63 = CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_;
  *(_QWORD *)(v61 + 16) = v63;
  v64 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_;
  v65 = CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_;
  v64[3] = v65;
  v64[4] = v65;
  v64[5] = v65;
  v66 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 16) = v55;
  v66[8] = CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_;
  v66[9] = v64;
  v66[6] = v62;
  v66[7] = v63;
  v67 = CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_;
  v66[11] = v63;
  v66[12] = v67;
  v68 = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  v66[1] = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  v69 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_;
  v70 = CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_ + 8) = v69;
  *(_QWORD *)(v68 + 8) = v70;
  v71 = CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_ + 128) = CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_;
  *(_QWORD *)(v71 + 8) = v68;
  v72 = CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::default_instance_ + 8) = v68;
  *(_QWORD *)(v72 + 24) = CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::default_instance_;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_ = v54;
  v73 = CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_;
  v74 = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_;
  *(_QWORD *)(v73 + 24) = v74;
  *(_QWORD *)(v73 + 32) = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_;
  v75 = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_ + 8) = v73;
  v76 = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_;
  v77 = CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_;
  v78 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_;
  v79 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_ + 16) = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_;
  *(_QWORD *)(v78 + 24) = v79;
  *(_QWORD *)(v77 + 8) = v76;
  v80 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_;
  v81 = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_;
  v82 = CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_ + 8) = v76;
  v80[1] = v76;
  v80[2] = v81;
  v80[3] = v81;
  v80[4] = v81;
  v80[5] = v81;
  *(_QWORD *)(v82 + 16) = v81;
  *(_QWORD *)(v82 + 24) = v81;
  v83 = CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_ + 8) = v81;
  v84 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_ + 8) = v77;
  v84[2] = v78;
  v84[3] = v80;
  v84[4] = v82;
  v84[5] = v83;
  v85 = CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::default_instance_;
  *(_QWORD *)v54 = &off_1E25BD130;
  *(_QWORD *)(v54 + 8) = v85;
  *(_QWORD *)(v54 + 16) = v75;
  *(_QWORD *)(v54 + 72) = v84;
  *(_QWORD *)(v54 + 96) = CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::default_instance_;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPGnssMeasApi_2eproto, v86);
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::GlonassSlotInfo(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BAE08;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BAE08;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::GlonassId(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD9A0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD9A0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::ConstellationId(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BACA0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BACA0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::SvId(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD478;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD478;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::GpsL1SyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BA778;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BA778;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::GpsL2CSyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BAEF8;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BAEF8;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::GpsL5SyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BA7F0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BA7F0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::GlonassL1fSyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BBFD8;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BBFD8;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::BeidouB1SyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BB498;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BB498;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::BeidouB2SyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BB510;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BB510;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::GalileoE1SyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BBBA0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BBBA0;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::GalileoE5SyncState(uint64_t this)
{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)this = &off_1E25BBC18;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)this = &off_1E25BBC18;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::SbasL1SyncState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BAFE8;
  *(_WORD *)(this + 8) = 0;
  *(_BYTE *)(this + 10) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BAFE8;
  *(_WORD *)(this + 8) = 0;
  *(_BYTE *)(this + 10) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SyncState(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDB80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDB80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::SvTime(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD748;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD748;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::FrequencyOffset(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BAD18;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BAD18;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::FrequencyOffsetFromPhaseTracking(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD040;
  *(_WORD *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD040;
  *(_WORD *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::PhaseTracking(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA598;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_BYTE *)this + 40) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA598;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_BYTE *)this + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SignalCorrelationPeak(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BC578;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BC578;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::FullSvTime(uint64_t this)
{
  *(_QWORD *)this = &off_1E25B9DA0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25B9DA0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::SvMeasurementUsage(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BBE70;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BBE70;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MeasurementExtension(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  double result;
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BC320;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  v2 = MEMORY[0x1E0DE8338];
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = v2;
  *((_QWORD *)this + 14) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BC320;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  v2 = MEMORY[0x1E0DE8338];
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = v2;
  *((_QWORD *)this + 14) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Measurement::Measurement(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA0E8;
  *((_DWORD *)this + 27) = 0;
  *((_DWORD *)this + 28) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_BYTE *)this + 104) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA0E8;
  *((_DWORD *)this + 27) = 0;
  *((_DWORD *)this + 28) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_BYTE *)this + 104) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::ReceiverClockModel(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BBD80;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BBD80;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::ReceiverClockCorrections(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCA28;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCA28;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::ReceiverToGpsTimeConversion(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCE60;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCE60;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Clock::Clock(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD568;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD568;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MeasurementReport(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BB6F0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BB6F0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::Wgs84Ecef(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDC70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDC70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::SvBandCorrections(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB9C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB9C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::SvPositionAtTime(_QWORD *this)
{
  *this = &off_1E25BB240;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BB240;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::PolynomialOrbit(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BAF70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BAF70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SvInfo(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD6D0;
  result = 0.0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 108) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD6D0;
  result = 0.0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 108) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::ReceiverBandCorrections(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BC8C0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BC8C0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::LeapSecondChange(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BB1C8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BB1C8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::LeapSecondInfo(_QWORD *this)
{
  *this = &off_1E25BA868;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BA868;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::GpsToUtcConversion(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BBC90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BBC90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::GpsTimeInfo(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BA070;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BA070;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::GlonassSubsecondConversion(_QWORD *this)
{
  *this = &off_1E25BCD70;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BCD70;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::GlonassTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BAE80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BAE80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::SubSecondConversion(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC140;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC140;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::BeidouTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA688;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA688;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::GalileoTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BAD90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BAD90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::NavicTimeInfo(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BA520;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BA520;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::TimeConversionInfo(CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BBEE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BBEE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::KlobucharModelParameters(CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC9B0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC9B0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::SfcfXyz(CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD8B0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD8B0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::AntennaPhaseCenterSvOffset(CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCCF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCCF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::ReceivedTimeStamp(CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB8D0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB8D0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MeasurementReportCallbackContents(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD130;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD130;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 16) = 0;
  *((_QWORD *)this + 16) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_DWORD *)this + 30) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SyncState::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_;
  this[2] = v2;
  v3 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_;
  this[4] = v3;
  v4 = CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_;
  this[6] = v4;
  v5 = CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_;
  this[8] = v5;
  this[9] = CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_;
  this[10] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_;
  this[2] = CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_;
  this[3] = v1;
  this[4] = v1;
  this[5] = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Measurement::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_;
  this[6] = CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_;
  this[7] = v2;
  v3 = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_;
  this[8] = CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_;
  this[9] = v3;
  v4 = CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_;
  this[11] = v2;
  this[12] = v4;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Clock::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_;
  this[2] = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_;
  this[3] = v1;
  this[4] = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 16) = CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  *(_QWORD *)(this + 128) = CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 16) = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_;
  *(_QWORD *)(this + 16) = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_;
  *(_QWORD *)(this + 24) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  this[5] = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_;
  this[2] = v1;
  this[3] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::GalileoTimeInfo::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_;
  this[4] = v2;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::NavicTimeInfo::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AntennaPhaseCenterSvOffset::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  *(_QWORD *)(this + 24) = CoreNavigation::CLP::LogEntry::PrivateData::SfcfXyz::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::ReceivedTimeStamp::default_instance_;
  this[2] = v1;
  this[9] = CoreNavigation::CLP::LogEntry::PrivateData::TimeConversionInfo::default_instance_;
  this[12] = CoreNavigation::CLP::LogEntry::PrivateData::KlobucharModelParameters::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D135C4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotSource_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SatelliteSystem_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  unsigned int v1;
  _BOOL8 result;

  v1 = this;
  result = 1;
  if (v1 - 4 > 0x3C || ((1 << (v1 - 4)) & 0x1000000010001011) == 0)
    return v1 < 3;
  return result;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xD;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::FullSvTimeSource_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 6;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MeasurementDetectionMethod_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SvPositionSource_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::IonosphericCorrectionSource_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChangeKnowledge_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GlonassLeapSecondDeprecated_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 6;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SvReferencePoint_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::GlonassSlotInfo(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BAE08;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D135D70(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *a2)
{
  int v4;
  int v5;
  unsigned int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 5)
        __assert_rtn("set_slot_source", "CoreNavigationCLPGnssMeasApi.pb.h", 6607, "::CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotSource_IsValid(value)");
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18D135E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::~GlonassSlotInfo(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this)
{
  *(_QWORD *)this = &off_1E25BAE08;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::~GlonassSlotInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BAE08;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  _BYTE *v11;
  unsigned int v12;
  uint64_t result;
  unsigned int v14;

  v4 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v10;
        v11 = v10 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        v9 = v11 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        v14 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14);
          if (!(_DWORD)result)
            return result;
          v12 = v14;
        }
        else
        {
          v12 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        if (v12 <= 4)
        {
          *((_DWORD *)this + 5) |= 2u;
          *((_DWORD *)this + 3) = v12;
        }
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_16;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_16;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_16:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GlonassSlotInfo");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::GlonassId(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BD9A0;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergeFrom(this, a2);
  return this;
}

void sub_18D136348(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *v3;
  int v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)v3 + 6) |= 1u;
      *((_DWORD *)v3 + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)v3 + 6) |= 2u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)operator new();
        v6 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BAE08;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_
                                                                                   + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergeFrom(v6, v7);
    }
  }
}

void sub_18D13645C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::~GlonassId(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD9A0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::~GlonassId(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::New(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BD9A0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 24);
  if (v1)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 20))
          *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    do
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 == 1)
          break;
        if (TagFallback >> 3 == 2)
        {
          v6 = TagFallback & 7;
          if (v6 == 2)
          {
            v7 = *((_DWORD *)this + 6);
            goto LABEL_23;
          }
        }
        else
        {
          v6 = TagFallback & 7;
        }
LABEL_15:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v20 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20);
        if (!(_DWORD)result)
          return result;
        v10 = v20;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v10 = *v9;
        v11 = v9 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 4) = v10;
      v7 = *((_DWORD *)this + 6) | 1;
      *((_DWORD *)this + 6) = v7;
    }
    while ((unint64_t)v11 >= v8 || *v11 != 18);
    *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_23:
    *((_DWORD *)this + 6) = v7 | 2;
    v13 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *)*((_QWORD *)this + 1);
    if (!v13)
    {
      v13 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *)operator new();
      *((_QWORD *)v13 + 1) = 0;
      *((_QWORD *)v13 + 2) = 0;
      *(_QWORD *)v13 = &off_1E25BAE08;
      *((_QWORD *)this + 1) = v13;
    }
    v21 = 0;
    v14 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21))
        return 0;
    }
    else
    {
      v21 = *v14;
      *((_QWORD *)a2 + 1) = v14 + 1;
    }
    v15 = *((_DWORD *)a2 + 14);
    v16 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v15 + 1;
    if (v15 >= v16)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::MergePartialFromCodedStream(v13, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v17 = *((_DWORD *)a2 + 14);
    v18 = __OFSUB__(v17, 1);
    v19 = v17 - 1;
    if (v19 < 0 == v18)
      *((_DWORD *)a2 + 14) = v19;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[6];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[4], (uint64_t)a2, a4);
    if ((v5[6] & 2) == 0)
      return this;
  }
  else if ((v6 & 2) == 0)
  {
    return this;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_ + 8);
  }
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 6) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_19;
    }
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::default_instance_
                                                                           + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassSlotInfo::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = (v3 + v7 + v8 + 1);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GlonassId");
}

double CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::ConstellationId(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this, const CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *a2)
{
  *(_QWORD *)this = &off_1E25BACA0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergeFrom(this, a2);
  return this;
}

void sub_18D136AD0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this, const CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *v3;
  int v4;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  _BYTE v13[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 4);
      *((_DWORD *)v3 + 11) |= 1u;
      *((_DWORD *)v3 + 4) = v6;
      v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_19;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 11) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)operator new();
      v7 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BD9A0;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GlonassId **)(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_20;
    }
LABEL_19:
    v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)v3 + 11) |= 4u;
    *((_DWORD *)v3 + 5) = v9;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_21;
    }
LABEL_20:
    v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 11) |= 8u;
    *((_DWORD *)v3 + 6) = v10;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_22;
    }
LABEL_21:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)v3 + 11) |= 0x10u;
    *((_DWORD *)v3 + 7) = v11;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_22:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)v3 + 11) |= 0x20u;
    *((_DWORD *)v3 + 8) = v12;
    if ((*((_DWORD *)a2 + 11) & 0x40) == 0)
      return;
LABEL_11:
    v5 = *((_DWORD *)a2 + 9);
    *((_DWORD *)v3 + 11) |= 0x40u;
    *((_DWORD *)v3 + 9) = v5;
  }
}

void sub_18D136C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::~ConstellationId(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BACA0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::~ConstellationId(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::New(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BACA0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;

  v1 = this;
  v2 = *(_BYTE *)(this + 44);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::Clear(this);
    }
    *(_QWORD *)(v1 + 28) = 0;
    *(_QWORD *)(v1 + 20) = 0;
    *(_DWORD *)(v1 + 36) = 0;
  }
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  unint64_t v12;
  char *v13;
  _BYTE *v14;
  int v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  BOOL v28;
  int v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned __int8 *v35;
  unsigned int *v36;
  unsigned int v37;

  v36 = (unsigned int *)((char *)this + 16);
  v4 = (unsigned int *)((char *)this + 20);
  v5 = (unsigned int *)((char *)this + 24);
  v6 = (unsigned int *)((char *)this + 28);
  v7 = (unsigned int *)((char *)this + 32);
  v8 = (unsigned int *)((char *)this + 36);
  while (2)
  {
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v36);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v36 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        v15 = *((_DWORD *)this + 11) | 1;
        *((_DWORD *)this + 11) = v15;
        if ((unint64_t)v14 < v12 && *v14 == 18)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
          goto LABEL_33;
        }
        continue;
      case 2u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_24;
        v15 = *((_DWORD *)this + 11);
LABEL_33:
        *((_DWORD *)this + 11) = v15 | 2;
        v23 = *((_QWORD *)this + 1);
        if (!v23)
        {
          v23 = operator new();
          *(_QWORD *)(v23 + 8) = 0;
          *(_QWORD *)(v23 + 16) = 0;
          *(_QWORD *)v23 = &off_1E25BD9A0;
          *(_DWORD *)(v23 + 24) = 0;
          *((_QWORD *)this + 1) = v23;
        }
        v37 = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0;
        }
        else
        {
          v37 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 < v26)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)v23, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v27 = *((_DWORD *)a2 + 14);
              v28 = __OFSUB__(v27, 1);
              v29 = v27 - 1;
              if (v29 < 0 == v28)
                *((_DWORD *)a2 + 14) = v29;
              v30 = (_BYTE *)*((_QWORD *)a2 + 1);
              v16 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v30 < v16 && *v30 == 24)
              {
                v17 = v30 + 1;
                *((_QWORD *)a2 + 1) = v17;
LABEL_47:
                if ((unint64_t)v17 >= v16 || *v17 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
                  if (!(_DWORD)result)
                    return result;
                  v31 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v16 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v4 = *v17;
                  v31 = v17 + 1;
                  *((_QWORD *)a2 + 1) = v31;
                }
                *((_DWORD *)this + 11) |= 4u;
                if ((unint64_t)v31 < v16 && *v31 == 32)
                {
                  v18 = v31 + 1;
                  *((_QWORD *)a2 + 1) = v18;
LABEL_55:
                  if ((unint64_t)v18 >= v16 || *v18 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
                    if (!(_DWORD)result)
                      return result;
                    v32 = (_BYTE *)*((_QWORD *)a2 + 1);
                    v16 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    *v5 = *v18;
                    v32 = v18 + 1;
                    *((_QWORD *)a2 + 1) = v32;
                  }
                  *((_DWORD *)this + 11) |= 8u;
                  if ((unint64_t)v32 < v16 && *v32 == 40)
                  {
                    v19 = v32 + 1;
                    *((_QWORD *)a2 + 1) = v19;
LABEL_63:
                    if ((unint64_t)v19 >= v16 || *v19 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
                      if (!(_DWORD)result)
                        return result;
                      v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                      v16 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      *v6 = *v19;
                      v33 = v19 + 1;
                      *((_QWORD *)a2 + 1) = v33;
                    }
                    *((_DWORD *)this + 11) |= 0x10u;
                    if ((unint64_t)v33 < v16 && *v33 == 48)
                    {
                      v20 = v33 + 1;
                      *((_QWORD *)a2 + 1) = v20;
LABEL_71:
                      if ((unint64_t)v20 >= v16 || *v20 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                        if (!(_DWORD)result)
                          return result;
                        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
                        v16 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        *v7 = *v20;
                        v34 = v20 + 1;
                        *((_QWORD *)a2 + 1) = v34;
                      }
                      *((_DWORD *)this + 11) |= 0x20u;
                      if ((unint64_t)v34 < v16 && *v34 == 56)
                      {
                        v21 = v34 + 1;
                        *((_QWORD *)a2 + 1) = v21;
LABEL_79:
                        if ((unint64_t)v21 >= v16 || *v21 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                          if (!(_DWORD)result)
                            return result;
                          v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                          v16 = *((_QWORD *)a2 + 2);
                        }
                        else
                        {
                          *v8 = *v21;
                          v35 = (unsigned __int8 *)(v21 + 1);
                          *((_QWORD *)a2 + 1) = v35;
                        }
                        *((_DWORD *)this + 11) |= 0x40u;
                        if (v35 == (unsigned __int8 *)v16
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          result = 1;
                          *((_BYTE *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 4u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_63;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      default:
        v11 = TagFallback & 7;
LABEL_24:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[11];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[4], (uint64_t)a2, a4);
    v6 = v5[11];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = v5[11];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[11];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  }
LABEL_16:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  if ((v5[11] & 0x40) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_42;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 11);
      if ((v2 & 2) == 0)
        goto LABEL_16;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_16;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_16;
  }
  v5 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassId *)*((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::GlonassId **)(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::default_instance_
                                                                   + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassId::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = (v3 + v7 + v8 + 1);
  v2 = *((_DWORD *)this + 11);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      v2 = *((_DWORD *)this + 11);
    }
    else
    {
      v10 = 2;
    }
    v3 = (v10 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_18:
      if ((v2 & 0x10) == 0)
        goto LABEL_19;
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v11 >= 0x80)
  {
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v12 = 2;
  }
  v3 = (v12 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0)
      goto LABEL_20;
    goto LABEL_34;
  }
LABEL_30:
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v13 >= 0x80)
  {
    v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v14 = 2;
  }
  v3 = (v14 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v15 >= 0x80)
  {
    v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
    v2 = *((_DWORD *)this + 11);
  }
  else
  {
    v16 = 2;
  }
  v3 = (v16 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_38:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if (v17 >= 0x80)
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
    else
      v18 = 2;
    v3 = (v18 + v3);
  }
LABEL_42:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this, const CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ConstellationId");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SvId *CoreNavigation::CLP::LogEntry::PrivateData::SvId::SvId(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvId *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BD478;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(this, a2);
  return this;
}

void sub_18D137728(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvId *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v3;
  int v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 4);
      *((_DWORD *)v3 + 6) |= 1u;
      *((_DWORD *)v3 + 4) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)v3 + 6) |= 2u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BACA0;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId **)(CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_
                                                                                   + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergeFrom(v6, v7);
    }
  }
}

void sub_18D137848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvId::~SvId(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD478;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SvId *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SvId::~SvId(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvId::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SvId *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::New(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BD478;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::Clear(uint64_t this)
{
  uint64_t v1;
  char v2;

  v1 = this;
  v2 = *(_BYTE *)(this + 24);
  if (v2)
  {
    *(_DWORD *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
        this = CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  unsigned int v20;

  v4 = (unsigned int *)((char *)this + 16);
  while (1)
  {
    do
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 == 1)
          break;
        if (TagFallback >> 3 == 2)
        {
          v7 = TagFallback & 7;
          if (v7 == 2)
          {
            v8 = *((_DWORD *)this + 6);
            goto LABEL_24;
          }
        }
        else
        {
          v7 = TagFallback & 7;
        }
LABEL_16:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v10;
        v11 = v10 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      v8 = *((_DWORD *)this + 6) | 1;
      *((_DWORD *)this + 6) = v8;
    }
    while ((unint64_t)v11 >= v9 || *v11 != 18);
    *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_24:
    *((_DWORD *)this + 6) = v8 | 2;
    v13 = *((_QWORD *)this + 1);
    if (!v13)
    {
      v13 = operator new();
      *(_QWORD *)v13 = &off_1E25BACA0;
      *(_OWORD *)(v13 + 8) = 0u;
      *(_OWORD *)(v13 + 24) = 0u;
      *(_QWORD *)(v13 + 40) = 0;
      *((_QWORD *)this + 1) = v13;
    }
    v20 = 0;
    v14 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20))
        return 0;
    }
    else
    {
      v20 = *v14;
      *((_QWORD *)a2 + 1) = v14 + 1;
    }
    v15 = *((_DWORD *)a2 + 14);
    v16 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v15 + 1;
    if (v15 >= v16)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)v13, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v17 = *((_DWORD *)a2 + 14);
    v18 = __OFSUB__(v17, 1);
    v19 = v17 - 1;
    if (v19 < 0 == v18)
      *((_DWORD *)a2 + 14) = v19;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::SvId::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[6];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[4], (uint64_t)a2, a4);
    if ((v5[6] & 2) == 0)
      return this;
  }
  else if ((v6 & 2) == 0)
  {
    return this;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_ + 8);
  }
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;

  v2 = *((_BYTE *)this + 24);
  if (v2)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 6) & 2) == 0)
          goto LABEL_16;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_16;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 24) & 2) == 0)
        goto LABEL_16;
    }
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId **)(CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_
                                                                           + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ConstellationId::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = (v3 + v7 + v8 + 1);
  }
  else
  {
    v3 = 0;
  }
LABEL_16:
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvId::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvId::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvId *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SvId *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SvId *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvId::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::SvId *a2)
{
  int v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)this)
  {
    v2 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvId::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SvId");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::GpsL1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BA778;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D137EA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 16) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 4) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 4) |= 4u;
    *((_BYTE *)this + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 4) |= 8u;
    *((_BYTE *)this + 11) = v5;
  }
}

void sub_18D137FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::~GpsL1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this)
{
  *(_QWORD *)this = &off_1E25BA778;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::~GpsL1SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BA778;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_23:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 4) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_BYTE *)this + 9) = v14 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 10) = v16 != 0;
        *((_DWORD *)this + 4) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 11) = v18 != 0;
        *((_DWORD *)this + 4) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*((_DWORD *)this + 4))
    v3 = v2;
  else
    v3 = 0;
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v6;
    v7 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GpsL1SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::GpsL2CSyncState(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *a2)
{
  *(_QWORD *)this = &off_1E25BAEF8;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 2) = 0;
  *((_BYTE *)this + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D1385CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 5) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 5) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 5) |= 4u;
    *((_BYTE *)this + 10) = v8;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v9 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 5) |= 8u;
    *((_BYTE *)this + 11) = v9;
    if ((*((_DWORD *)a2 + 5) & 0x10) == 0)
      return;
LABEL_9:
    v5 = *((_BYTE *)a2 + 12);
    *((_DWORD *)this + 5) |= 0x10u;
    *((_BYTE *)this + 12) = v5;
  }
}

void sub_18D1386F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::~GpsL2CSyncState(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this)
{
  *(_QWORD *)this = &off_1E25BAEF8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::~GpsL2CSyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BAEF8;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 12) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
  {
    *(_BYTE *)(this + 12) = 0;
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  unsigned int v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  uint64_t result;
  unsigned int v24;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v24 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_25:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 5) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_28;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
        if ((_DWORD)result)
        {
          v9 = v24;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_25;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_28:
        v24 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v15 = v24;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v11;
          v16 = v11 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_BYTE *)this + 9) = v15 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if ((unint64_t)v16 >= v7 || *v16 != 24)
          continue;
        v12 = v16 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_36:
        v24 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v17 = v24;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v12;
          v18 = v12 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_BYTE *)this + 10) = v17 != 0;
        *((_DWORD *)this + 5) |= 4u;
        if ((unint64_t)v18 >= v7 || *v18 != 32)
          continue;
        v13 = v18 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_44:
        v24 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v19 = v24;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v13;
          v20 = v13 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_BYTE *)this + 11) = v19 != 0;
        *((_DWORD *)this + 5) |= 8u;
        if ((unint64_t)v20 >= v7 || *v20 != 40)
          continue;
        v14 = v20 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_52:
        v24 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v21 = v24;
          v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v14;
          v22 = (unsigned __int8 *)(v14 + 1);
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_BYTE *)this + 12) = v21 != 0;
        *((_DWORD *)this + 5) |= 0x10u;
        if (v22 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_36;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_44;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 20) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 5);
  if ((_BYTE)v1)
  {
    v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
      v2 += 2;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v2 += 2;
    if ((v1 & 0x10) != 0)
      v3 = v2 + 2;
    else
      v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  int v7;
  int v8;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_BYTE *)(this + 12);
    *(_BYTE *)(this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v6;
    v7 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v7;
    v8 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v8;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GpsL2CSyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::GpsL5SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BA7F0;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D138DD0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 16) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 4) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 4) |= 4u;
    *((_BYTE *)this + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 4) |= 8u;
    *((_BYTE *)this + 11) = v5;
  }
}

void sub_18D138ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::~GpsL5SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this)
{
  *(_QWORD *)this = &off_1E25BA7F0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::~GpsL5SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BA7F0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_23:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 4) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_BYTE *)this + 9) = v14 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 10) = v16 != 0;
        *((_DWORD *)this + 4) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 11) = v18 != 0;
        *((_DWORD *)this + 4) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*((_DWORD *)this + 4))
    v3 = v2;
  else
    v3 = 0;
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v6;
    v7 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GpsL5SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::GlonassL1fSyncState(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *a2)
{
  *(_QWORD *)this = &off_1E25BBFD8;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 2) = 0;
  *((_BYTE *)this + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D1394FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 5) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 5) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 5) |= 4u;
    *((_BYTE *)this + 10) = v8;
    v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
      goto LABEL_9;
    }
LABEL_14:
    v9 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 5) |= 8u;
    *((_BYTE *)this + 11) = v9;
    if ((*((_DWORD *)a2 + 5) & 0x10) == 0)
      return;
LABEL_9:
    v5 = *((_BYTE *)a2 + 12);
    *((_DWORD *)this + 5) |= 0x10u;
    *((_BYTE *)this + 12) = v5;
  }
}

void sub_18D139620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::~GlonassL1fSyncState(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this)
{
  *(_QWORD *)this = &off_1E25BBFD8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::~GlonassL1fSyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BBFD8;
  *(_QWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 12) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
  {
    *(_BYTE *)(this + 12) = 0;
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  unsigned int v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  uint64_t result;
  unsigned int v24;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v24 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_25:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 5) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_28;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
        if ((_DWORD)result)
        {
          v9 = v24;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_25;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_28:
        v24 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v15 = v24;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v11;
          v16 = v11 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_BYTE *)this + 9) = v15 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if ((unint64_t)v16 >= v7 || *v16 != 24)
          continue;
        v12 = v16 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_36:
        v24 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v17 = v24;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v12;
          v18 = v12 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_BYTE *)this + 10) = v17 != 0;
        *((_DWORD *)this + 5) |= 4u;
        if ((unint64_t)v18 >= v7 || *v18 != 32)
          continue;
        v13 = v18 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_44:
        v24 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v19 = v24;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v13;
          v20 = v13 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_BYTE *)this + 11) = v19 != 0;
        *((_DWORD *)this + 5) |= 8u;
        if ((unint64_t)v20 >= v7 || *v20 != 40)
          continue;
        v14 = v20 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_52:
        v24 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
          if (!(_DWORD)result)
            return result;
          v21 = v24;
          v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v14;
          v22 = (unsigned __int8 *)(v14 + 1);
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_BYTE *)this + 12) = v21 != 0;
        *((_DWORD *)this + 5) |= 0x10u;
        if (v22 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_36;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_44;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 20) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 5);
  if ((_BYTE)v1)
  {
    v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
      v2 += 2;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v2 += 2;
    if ((v1 & 0x10) != 0)
      v3 = v2 + 2;
    else
      v3 = v2;
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  int v7;
  int v8;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_BYTE *)(this + 12);
    *(_BYTE *)(this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v6;
    v7 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v7;
    v8 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v8;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GlonassL1fSyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::BeidouB1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BB498;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D139D00(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 16) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 4) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 4) |= 4u;
    *((_BYTE *)this + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 4) |= 8u;
    *((_BYTE *)this + 11) = v5;
  }
}

void sub_18D139E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::~BeidouB1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this)
{
  *(_QWORD *)this = &off_1E25BB498;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::~BeidouB1SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BB498;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_23:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 4) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_BYTE *)this + 9) = v14 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 10) = v16 != 0;
        *((_DWORD *)this + 4) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 11) = v18 != 0;
        *((_DWORD *)this + 4) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*((_DWORD *)this + 4))
    v3 = v2;
  else
    v3 = 0;
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v6;
    v7 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BeidouB1SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::BeidouB2SyncState(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BB510;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D13A418(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 16) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 4) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 4) |= 4u;
    *((_BYTE *)this + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 4) |= 8u;
    *((_BYTE *)this + 11) = v5;
  }
}

void sub_18D13A51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::~BeidouB2SyncState(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this)
{
  *(_QWORD *)this = &off_1E25BB510;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::~BeidouB2SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BB510;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_23:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 4) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_BYTE *)this + 9) = v14 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 10) = v16 != 0;
        *((_DWORD *)this + 4) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 11) = v18 != 0;
        *((_DWORD *)this + 4) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*((_DWORD *)this + 4))
    v3 = v2;
  else
    v3 = 0;
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v6;
    v7 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BeidouB2SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::GalileoE1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BBBA0;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D13AB30(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 16) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 4) |= 2u;
    *((_BYTE *)this + 9) = v7;
    v4 = *((_DWORD *)a2 + 4);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 4) |= 4u;
    *((_BYTE *)this + 10) = v8;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 11);
    *((_DWORD *)this + 4) |= 8u;
    *((_BYTE *)this + 11) = v5;
  }
}

void sub_18D13AC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::~GalileoE1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this)
{
  *(_QWORD *)this = &off_1E25BBBA0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::~GalileoE1SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BBBA0;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
    *(_DWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  unsigned int v18;
  unsigned __int8 *v19;
  uint64_t result;
  unsigned int v21;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v21 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_23:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 4) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_26;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
        if ((_DWORD)result)
        {
          v9 = v21;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_23;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_26:
        v21 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v14 = v21;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v11;
          v15 = v11 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_BYTE *)this + 9) = v14 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if ((unint64_t)v15 >= v7 || *v15 != 24)
          continue;
        v12 = v15 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_34:
        v21 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v16 = v21;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v12;
          v17 = v12 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 10) = v16 != 0;
        *((_DWORD *)this + 4) |= 4u;
        if ((unint64_t)v17 >= v7 || *v17 != 32)
          continue;
        v13 = v17 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_42:
        v21 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v18 = v21;
          v19 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v13;
          v19 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 11) = v18 != 0;
        *((_DWORD *)this + 4) |= 8u;
        if (v19 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if ((v1 & 8) != 0)
    v2 += 2;
  if (*((_DWORD *)this + 4))
    v3 = v2;
  else
    v3 = 0;
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v6;
    v7 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GalileoE1SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::GalileoE5SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *a2)
{
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  *(_QWORD *)this = &off_1E25BBC18;
  *((_QWORD *)this + 1) = 0;
  *((_WORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D13B254(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v8 = *((_BYTE *)a2 + 8);
    *((_DWORD *)this + 6) |= 1u;
    *((_BYTE *)this + 8) = v8;
    v4 = *((_DWORD *)a2 + 6);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v9 = *((_BYTE *)a2 + 9);
  *((_DWORD *)this + 6) |= 2u;
  *((_BYTE *)this + 9) = v9;
  v4 = *((_DWORD *)a2 + 6);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  v10 = *((_BYTE *)a2 + 10);
  *((_DWORD *)this + 6) |= 4u;
  *((_BYTE *)this + 10) = v10;
  v4 = *((_DWORD *)a2 + 6);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  v11 = *((_BYTE *)a2 + 11);
  *((_DWORD *)this + 6) |= 8u;
  *((_BYTE *)this + 11) = v11;
  v4 = *((_DWORD *)a2 + 6);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_24:
    v13 = *((_BYTE *)a2 + 13);
    *((_DWORD *)this + 6) |= 0x20u;
    *((_BYTE *)this + 13) = v13;
    v4 = *((_DWORD *)a2 + 6);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  v12 = *((_BYTE *)a2 + 12);
  *((_DWORD *)this + 6) |= 0x10u;
  *((_BYTE *)this + 12) = v12;
  v4 = *((_DWORD *)a2 + 6);
  if ((v4 & 0x20) != 0)
    goto LABEL_24;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_25:
  v14 = *((_BYTE *)a2 + 14);
  *((_DWORD *)this + 6) |= 0x40u;
  *((_BYTE *)this + 14) = v14;
  v4 = *((_DWORD *)a2 + 6);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_BYTE *)a2 + 15);
    *((_DWORD *)this + 6) |= 0x80u;
    *((_BYTE *)this + 15) = v5;
    v4 = *((_DWORD *)a2 + 6);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      v6 = *((_BYTE *)a2 + 16);
      *((_DWORD *)this + 6) |= 0x100u;
      *((_BYTE *)this + 16) = v6;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 0x200) != 0)
    {
      v7 = *((_BYTE *)a2 + 17);
      *((_DWORD *)this + 6) |= 0x200u;
      *((_BYTE *)this + 17) = v7;
    }
  }
}

void sub_18D13B41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::~GalileoE5SyncState(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this)
{
  *(_QWORD *)this = &off_1E25BBC18;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::~GalileoE5SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)result = &off_1E25BBC18;
  *(_QWORD *)(result + 8) = 0;
  *(_WORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 24);
  if ((_BYTE)v1)
    *(_QWORD *)(this + 8) = 0;
  if ((v1 & 0xFF00) != 0)
    *(_WORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  unsigned int v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  unsigned __int8 *v37;
  uint64_t result;
  unsigned int v39;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v39 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_35:
          *((_BYTE *)this + 8) = v9 != 0;
          *((_DWORD *)this + 6) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_38;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
        if ((_DWORD)result)
        {
          v9 = v39;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_35;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_38:
        v39 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v20 = v39;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v20 = *v11;
          v21 = v11 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_BYTE *)this + 9) = v20 != 0;
        *((_DWORD *)this + 6) |= 2u;
        if ((unint64_t)v21 >= v7 || *v21 != 24)
          continue;
        v12 = v21 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_46:
        v39 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v22 = v39;
          v23 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v22 = *v12;
          v23 = v12 + 1;
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_BYTE *)this + 10) = v22 != 0;
        *((_DWORD *)this + 6) |= 4u;
        if ((unint64_t)v23 >= v7 || *v23 != 32)
          continue;
        v13 = v23 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_54:
        v39 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v24 = v39;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v13;
          v25 = v13 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_BYTE *)this + 11) = v24 != 0;
        *((_DWORD *)this + 6) |= 8u;
        if ((unint64_t)v25 >= v7 || *v25 != 40)
          continue;
        v14 = v25 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_62:
        v39 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v26 = v39;
          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v26 = *v14;
          v27 = v14 + 1;
          *((_QWORD *)a2 + 1) = v27;
        }
        *((_BYTE *)this + 12) = v26 != 0;
        *((_DWORD *)this + 6) |= 0x10u;
        if ((unint64_t)v27 >= v7 || *v27 != 48)
          continue;
        v15 = v27 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_70:
        v39 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v28 = v39;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v15;
          v29 = v15 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_BYTE *)this + 13) = v28 != 0;
        *((_DWORD *)this + 6) |= 0x20u;
        if ((unint64_t)v29 >= v7 || *v29 != 56)
          continue;
        v16 = v29 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_78:
        v39 = 0;
        if ((unint64_t)v16 >= v7 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v30 = v39;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v30 = *v16;
          v31 = v16 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_BYTE *)this + 14) = v30 != 0;
        *((_DWORD *)this + 6) |= 0x40u;
        if ((unint64_t)v31 >= v7 || *v31 != 64)
          continue;
        v17 = v31 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_86:
        v39 = 0;
        if ((unint64_t)v17 >= v7 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v32 = v39;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v32 = *v17;
          v33 = v17 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_BYTE *)this + 15) = v32 != 0;
        *((_DWORD *)this + 6) |= 0x80u;
        if ((unint64_t)v33 >= v7 || *v33 != 72)
          continue;
        v18 = v33 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_94:
        v39 = 0;
        if ((unint64_t)v18 >= v7 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v34 = v39;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v34 = *v18;
          v35 = v18 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_BYTE *)this + 16) = v34 != 0;
        *((_DWORD *)this + 6) |= 0x100u;
        if ((unint64_t)v35 >= v7 || *v35 != 80)
          continue;
        v19 = v35 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_102:
        v39 = 0;
        if ((unint64_t)v19 >= v7 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!(_DWORD)result)
            return result;
          v36 = v39;
          v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v36 = *v19;
          v37 = (unsigned __int8 *)(v19 + 1);
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_BYTE *)this + 17) = v36 != 0;
        *((_DWORD *)this + 6) |= 0x200u;
        if (v37 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_46;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_54;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_62;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_78;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_86;
      case 9u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_94;
      case 0xAu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_102;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 14), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 15), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;

  v1 = *((_DWORD *)this + 6);
  if ((_BYTE)v1)
  {
    v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
      v2 += 2;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v2 += 2;
    if ((v1 & 0x10) != 0)
      v2 += 2;
    if ((v1 & 0x20) != 0)
      v2 += 2;
    if ((v1 & 0x40) != 0)
      v2 += 2;
    if ((v1 & 0x80) != 0)
      v2 += 2;
  }
  else
  {
    v2 = 0;
  }
  v3 = v2 + 2;
  if ((v1 & 0x100) == 0)
    v3 = v2;
  if ((v1 & 0x200) != 0)
    v3 += 2;
  if ((v1 & 0xFF00) != 0)
    v4 = v3;
  else
    v4 = v2;
  *((_DWORD *)this + 5) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  int v12;
  int v13;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_BYTE *)(this + 11);
    *(_BYTE *)(this + 11) = *((_BYTE *)a2 + 11);
    *((_BYTE *)a2 + 11) = v5;
    v6 = *(_BYTE *)(this + 12);
    *(_BYTE *)(this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v6;
    v7 = *(_BYTE *)(this + 13);
    *(_BYTE *)(this + 13) = *((_BYTE *)a2 + 13);
    *((_BYTE *)a2 + 13) = v7;
    v8 = *(_BYTE *)(this + 14);
    *(_BYTE *)(this + 14) = *((_BYTE *)a2 + 14);
    *((_BYTE *)a2 + 14) = v8;
    v9 = *(_BYTE *)(this + 15);
    *(_BYTE *)(this + 15) = *((_BYTE *)a2 + 15);
    *((_BYTE *)a2 + 15) = v9;
    v10 = *(_BYTE *)(this + 16);
    *(_BYTE *)(this + 16) = *((_BYTE *)a2 + 16);
    *((_BYTE *)a2 + 16) = v10;
    v11 = *(_BYTE *)(this + 17);
    *(_BYTE *)(this + 17) = *((_BYTE *)a2 + 17);
    *((_BYTE *)a2 + 17) = v11;
    v12 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v12;
    v13 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v13;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GalileoE5SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::SharedCtor(uint64_t this)
{
  *(_WORD *)(this + 8) = 0;
  *(_BYTE *)(this + 10) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::SbasL1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BAFE8;
  *((_WORD *)this + 4) = 0;
  *((_BYTE *)this + 10) = 0;
  *((_DWORD *)this + 3) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D13BEB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *a2)
{
  int v4;
  char v5;
  char v6;
  char v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 16);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 16) & 1) != 0)
    {
      v6 = *((_BYTE *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((_BYTE *)this + 8) = v6;
      v4 = *((_DWORD *)a2 + 4);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 16) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_BYTE *)a2 + 9);
    *((_DWORD *)this + 4) |= 2u;
    *((_BYTE *)this + 9) = v7;
    if ((*((_DWORD *)a2 + 4) & 4) == 0)
      return;
LABEL_7:
    v5 = *((_BYTE *)a2 + 10);
    *((_DWORD *)this + 4) |= 4u;
    *((_BYTE *)this + 10) = v5;
  }
}

void sub_18D13BF9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::~SbasL1SyncState(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this)
{
  *(_QWORD *)this = &off_1E25BAFE8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::~SbasL1SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BAFE8;
  *(_WORD *)(result + 8) = 0;
  *(_BYTE *)(result + 10) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 16))
  {
    *(_WORD *)(this + 8) = 0;
    *(_BYTE *)(this + 10) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  uint64_t result;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v21 = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21);
          if (!(_DWORD)result)
            return result;
          v11 = v21;
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v11 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_BYTE *)this + 8) = v11 != 0;
        *((_DWORD *)this + 4) |= 1u;
        if ((unint64_t)v12 < v8 && *v12 == 16)
        {
          v13 = v12 + 1;
          *((_QWORD *)a2 + 1) = v13;
          goto LABEL_26;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_18;
      v13 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
LABEL_26:
      v20 = 0;
      if ((unint64_t)v13 >= v8 || *v13 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20);
        if (!(_DWORD)result)
          return result;
        v14 = v20;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        v14 = *v13;
        v15 = v13 + 1;
        *((_QWORD *)a2 + 1) = v15;
      }
      *((_BYTE *)this + 9) = v14 != 0;
      *((_DWORD *)this + 4) |= 2u;
      if ((unint64_t)v15 < v8 && *v15 == 24)
      {
        v9 = v15 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_34:
        v19 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v19);
          if (!(_DWORD)result)
            return result;
          v16 = v19;
          v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v9;
          v17 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_BYTE *)this + 10) = v16 != 0;
        *((_DWORD *)this + 4) |= 4u;
        if (v17 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_34;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 16);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 16) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  v1 = *((_DWORD *)this + 4);
  v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0)
    v2 += 2;
  if ((v1 & 4) != 0)
    v2 += 2;
  if (*((_DWORD *)this + 4))
    v3 = v2;
  else
    v3 = 0;
  *((_DWORD *)this + 3) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *a2)
{
  char v2;
  char v3;
  char v4;
  int v5;
  int v6;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *)this)
  {
    v2 = *(_BYTE *)(this + 8);
    *(_BYTE *)(this + 8) = *((_BYTE *)a2 + 8);
    *((_BYTE *)a2 + 8) = v2;
    v3 = *(_BYTE *)(this + 9);
    *(_BYTE *)(this + 9) = *((_BYTE *)a2 + 9);
    *((_BYTE *)a2 + 9) = v3;
    v4 = *(_BYTE *)(this + 10);
    *(_BYTE *)(this + 10) = *((_BYTE *)a2 + 10);
    *((_BYTE *)a2 + 10) = v4;
    v5 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
    v6 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SbasL1SyncState");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SyncState *CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SyncState(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::SyncState *a2)
{
  *(_QWORD *)this = &off_1E25BDB80;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergeFrom(this, a2);
  return this;
}

void sub_18D13C530(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::SyncState *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState *v3;
  int v4;
  unsigned int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *v7;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *v9;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *v10;
  const CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *v11;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *v13;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *v15;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *v16;
  const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *v17;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *v18;
  const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *v19;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *v20;
  const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *v21;
  CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *v22;
  const CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *v23;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *v24;
  const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *v25;
  _BYTE v26[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  v4 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v4)
    goto LABEL_50;
  if ((v4 & 1) != 0)
  {
    v5 = *((_DWORD *)a2 + 22);
    if (v5 >= 0xD)
      __assert_rtn("set_band", "CoreNavigationCLPGnssMeasApi.pb.h", 7930, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    *((_DWORD *)v3 + 24) |= 1u;
    *((_DWORD *)v3 + 22) = v5;
    v4 = *((_DWORD *)a2 + 24);
  }
  if ((v4 & 2) != 0)
  {
    *((_DWORD *)v3 + 24) |= 2u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BA778;
      *((_QWORD *)this + 1) = 0;
      *((_DWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergeFrom(v6, v7);
    v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0)
        goto LABEL_10;
      goto LABEL_25;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  *((_DWORD *)v3 + 24) |= 4u;
  v8 = (CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *)*((_QWORD *)v3 + 2);
  if (!v8)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
    v8 = this;
    *(_QWORD *)this = &off_1E25BAEF8;
    *((_QWORD *)this + 2) = 0;
    *((_DWORD *)this + 2) = 0;
    *((_BYTE *)this + 12) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *)*((_QWORD *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                               + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergeFrom(v8, v9);
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_30;
  }
LABEL_25:
  *((_DWORD *)v3 + 24) |= 8u;
  v10 = (CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *)*((_QWORD *)v3 + 3);
  if (!v10)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
    v10 = this;
    *(_QWORD *)this = &off_1E25BA7F0;
    *((_QWORD *)this + 1) = 0;
    *((_DWORD *)this + 4) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *)*((_QWORD *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                               + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergeFrom(v10, v11);
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0)
      goto LABEL_12;
LABEL_35:
    *((_DWORD *)v3 + 24) |= 0x20u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *)*((_QWORD *)v3 + 5);
    if (!v14)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
      v14 = this;
      *(_QWORD *)this = &off_1E25BB498;
      *((_QWORD *)this + 1) = 0;
      *((_DWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 5) = this;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *)*((_QWORD *)a2 + 5);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                    + 40);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergeFrom(v14, v15);
    v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0)
        goto LABEL_50;
      goto LABEL_45;
    }
    goto LABEL_40;
  }
LABEL_30:
  *((_DWORD *)v3 + 24) |= 0x10u;
  v12 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *)*((_QWORD *)v3 + 4);
  if (!v12)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
    v12 = this;
    *(_QWORD *)this = &off_1E25BBFD8;
    *((_QWORD *)this + 2) = 0;
    *((_DWORD *)this + 2) = 0;
    *((_BYTE *)this + 12) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *)*((_QWORD *)a2 + 4);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                    + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergeFrom(v12, v13);
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x20) != 0)
    goto LABEL_35;
LABEL_12:
  if ((v4 & 0x40) == 0)
    goto LABEL_13;
LABEL_40:
  *((_DWORD *)v3 + 24) |= 0x40u;
  v16 = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *)*((_QWORD *)v3 + 6);
  if (!v16)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
    v16 = this;
    *(_QWORD *)this = &off_1E25BB510;
    *((_QWORD *)this + 1) = 0;
    *((_DWORD *)this + 4) = 0;
    *((_QWORD *)v3 + 6) = this;
  }
  v17 = (const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *)*((_QWORD *)a2 + 6);
  if (!v17)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v17 = *(const CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                  + 48);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergeFrom(v16, v17);
  v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x80) != 0)
  {
LABEL_45:
    *((_DWORD *)v3 + 24) |= 0x80u;
    v18 = (CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *)*((_QWORD *)v3 + 7);
    if (!v18)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
      v18 = this;
      *(_QWORD *)this = &off_1E25BBBA0;
      *((_QWORD *)this + 1) = 0;
      *((_DWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 7) = this;
    }
    v19 = (const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *)*((_QWORD *)a2 + 7);
    if (!v19)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v19 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                     + 56);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergeFrom(v18, v19);
    v4 = *((_DWORD *)a2 + 24);
  }
LABEL_50:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    *((_DWORD *)v3 + 24) |= 0x100u;
    v20 = (CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *)*((_QWORD *)v3 + 8);
    if (!v20)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
      v20 = this;
      *((_DWORD *)this + 5) = 0;
      *((_DWORD *)this + 6) = 0;
      *(_QWORD *)this = &off_1E25BBC18;
      *((_QWORD *)this + 1) = 0;
      *((_WORD *)this + 8) = 0;
      *((_QWORD *)v3 + 8) = this;
    }
    v21 = (const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *)*((_QWORD *)a2 + 8);
    if (!v21)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v21 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                     + 64);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergeFrom(v20, v21);
    v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x200) == 0)
    {
LABEL_53:
      if ((v4 & 0x400) == 0)
        return;
      goto LABEL_65;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  *((_DWORD *)v3 + 24) |= 0x200u;
  v22 = (CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *)*((_QWORD *)v3 + 9);
  if (!v22)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
    v22 = this;
    *(_QWORD *)this = &off_1E25BAFE8;
    *((_WORD *)this + 4) = 0;
    *((_BYTE *)this + 10) = 0;
    *((_DWORD *)this + 3) = 0;
    *((_DWORD *)this + 4) = 0;
    *((_QWORD *)v3 + 9) = this;
  }
  v23 = (const CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *)*((_QWORD *)a2 + 9);
  if (!v23)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v23 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                + 72);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergeFrom(v22, v23);
  if ((*((_DWORD *)a2 + 24) & 0x400) != 0)
  {
LABEL_65:
    *((_DWORD *)v3 + 24) |= 0x400u;
    v24 = (CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)*((_QWORD *)v3 + 10);
    if (!v24)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)operator new();
      v24 = this;
      *(_QWORD *)this = &off_1E25BA778;
      *((_QWORD *)this + 1) = 0;
      *((_DWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 10) = this;
    }
    v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)*((_QWORD *)a2 + 10);
    if (!v25)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                                 + 80);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergeFrom(v24, v25);
  }
}

void sub_18D13CA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SyncState::~SyncState(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  *(_QWORD *)this = &off_1E25BDB80;
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState::~SyncState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 6);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 7);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 8);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = *((_QWORD *)this + 9);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = *((_QWORD *)this + 10);
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SyncState::New(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDB80;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 84) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_DWORD *)(this + 96);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 88) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 16))
          *(_DWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 16) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
        {
          *(_BYTE *)(v3 + 12) = 0;
          *(_DWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 16))
          *(_DWORD *)(v4 + 8) = 0;
        *(_DWORD *)(v4 + 16) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 20))
        {
          *(_BYTE *)(v5 + 12) = 0;
          *(_DWORD *)(v5 + 8) = 0;
        }
        *(_DWORD *)(v5 + 20) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 0x20) != 0)
    {
      v6 = *(_QWORD *)(this + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 16))
          *(_DWORD *)(v6 + 8) = 0;
        *(_DWORD *)(v6 + 16) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 0x40) != 0)
    {
      v7 = *(_QWORD *)(this + 48);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 16))
          *(_DWORD *)(v7 + 8) = 0;
        *(_DWORD *)(v7 + 16) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 0x80) != 0)
    {
      v8 = *(_QWORD *)(this + 56);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 16))
          *(_DWORD *)(v8 + 8) = 0;
        *(_DWORD *)(v8 + 16) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      v9 = *(_QWORD *)(this + 64);
      if (v9)
      {
        v10 = *(_DWORD *)(v9 + 24);
        if ((_BYTE)v10)
          *(_QWORD *)(v9 + 8) = 0;
        if ((v10 & 0xFF00) != 0)
          *(_WORD *)(v9 + 16) = 0;
        *(_DWORD *)(v9 + 24) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 0x200) != 0)
    {
      v11 = *(_QWORD *)(this + 72);
      if (v11)
      {
        if (*(_BYTE *)(v11 + 16))
        {
          *(_WORD *)(v11 + 8) = 0;
          *(_BYTE *)(v11 + 10) = 0;
        }
        *(_DWORD *)(v11 + 16) = 0;
        v1 = *(_DWORD *)(this + 96);
      }
    }
    if ((v1 & 0x400) != 0)
    {
      v12 = *(_QWORD *)(this + 80);
      if (v12)
      {
        if (*(_BYTE *)(v12 + 16))
          *(_DWORD *)(v12 + 8) = 0;
        *(_DWORD *)(v12 + 16) = 0;
      }
    }
  }
  *(_DWORD *)(this + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  uint64_t result;
  _BYTE *v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  _BYTE *v25;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _BYTE *v67;
  uint64_t v68;
  char *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  _BYTE *v74;
  uint64_t v75;
  char *v76;
  int v77;
  int v78;
  int v79;
  int v80;
  unsigned int v81;

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v81 = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81);
          if (!(_DWORD)result)
            return result;
          v8 = v81;
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 0xC)
        {
          *((_DWORD *)this + 24) |= 1u;
          *((_DWORD *)this + 22) = v8;
        }
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 18)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
LABEL_41:
        *((_DWORD *)this + 24) |= 2u;
        v11 = *((_QWORD *)this + 1);
        if (!v11)
        {
          v11 = operator new();
          *(_QWORD *)v11 = &off_1E25BA778;
          *(_QWORD *)(v11 + 8) = 0;
          *(_DWORD *)(v11 + 16) = 0;
          *((_QWORD *)this + 1) = v11;
        }
        v81 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        v13 = *((_DWORD *)a2 + 14);
        v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)v11, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v15 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v15, 1);
        v17 = v15 - 1;
        if (v17 < 0 == v16)
          *((_DWORD *)a2 + 14) = v17;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_55:
        *((_DWORD *)this + 24) |= 4u;
        v19 = *((_QWORD *)this + 2);
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E25BAEF8;
          *(_QWORD *)(v19 + 16) = 0;
          *(_DWORD *)(v19 + 8) = 0;
          *(_BYTE *)(v19 + 12) = 0;
          *((_QWORD *)this + 2) = v19;
        }
        v81 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v23 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v23, 1);
        v24 = v23 - 1;
        if (v24 < 0 == v16)
          *((_DWORD *)a2 + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_69:
        *((_DWORD *)this + 24) |= 8u;
        v26 = *((_QWORD *)this + 3);
        if (!v26)
        {
          v26 = operator new();
          *(_QWORD *)v26 = &off_1E25BA7F0;
          *(_QWORD *)(v26 + 8) = 0;
          *(_DWORD *)(v26 + 16) = 0;
          *((_QWORD *)this + 3) = v26;
        }
        v81 = 0;
        v27 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)a2 + 14);
        v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *)v26, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v30 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v30, 1);
        v31 = v30 - 1;
        if (v31 < 0 == v16)
          *((_DWORD *)a2 + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_83:
        *((_DWORD *)this + 24) |= 0x10u;
        v33 = *((_QWORD *)this + 4);
        if (!v33)
        {
          v33 = operator new();
          *(_QWORD *)v33 = &off_1E25BBFD8;
          *(_QWORD *)(v33 + 16) = 0;
          *(_DWORD *)(v33 + 8) = 0;
          *(_BYTE *)(v33 + 12) = 0;
          *((_QWORD *)this + 4) = v33;
        }
        v81 = 0;
        v34 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v34;
          *((_QWORD *)a2 + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)a2 + 14);
        v36 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *)v33, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v37 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v16)
          *((_DWORD *)a2 + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_97:
        *((_DWORD *)this + 24) |= 0x20u;
        v40 = *((_QWORD *)this + 5);
        if (!v40)
        {
          v40 = operator new();
          *(_QWORD *)v40 = &off_1E25BB498;
          *(_QWORD *)(v40 + 8) = 0;
          *(_DWORD *)(v40 + 16) = 0;
          *((_QWORD *)this + 5) = v40;
        }
        v81 = 0;
        v41 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v41;
          *((_QWORD *)a2 + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)a2 + 14);
        v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *)v40, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v44 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v16)
          *((_DWORD *)a2 + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_111:
        *((_DWORD *)this + 24) |= 0x40u;
        v47 = *((_QWORD *)this + 6);
        if (!v47)
        {
          v47 = operator new();
          *(_QWORD *)v47 = &off_1E25BB510;
          *(_QWORD *)(v47 + 8) = 0;
          *(_DWORD *)(v47 + 16) = 0;
          *((_QWORD *)this + 6) = v47;
        }
        v81 = 0;
        v48 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v48;
          *((_QWORD *)a2 + 1) = v48 + 1;
        }
        v49 = *((_DWORD *)a2 + 14);
        v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *)v47, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v51 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v51, 1);
        v52 = v51 - 1;
        if (v52 < 0 == v16)
          *((_DWORD *)a2 + 14) = v52;
        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 1;
LABEL_125:
        *((_DWORD *)this + 24) |= 0x80u;
        v54 = *((_QWORD *)this + 7);
        if (!v54)
        {
          v54 = operator new();
          *(_QWORD *)v54 = &off_1E25BBBA0;
          *(_QWORD *)(v54 + 8) = 0;
          *(_DWORD *)(v54 + 16) = 0;
          *((_QWORD *)this + 7) = v54;
        }
        v81 = 0;
        v55 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v55;
          *((_QWORD *)a2 + 1) = v55 + 1;
        }
        v56 = *((_DWORD *)a2 + 14);
        v57 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v56 + 1;
        if (v56 >= v57)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *)v54, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v58 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v58, 1);
        v59 = v58 - 1;
        if (v59 < 0 == v16)
          *((_DWORD *)a2 + 14) = v59;
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_139:
        *((_DWORD *)this + 24) |= 0x100u;
        v61 = *((_QWORD *)this + 8);
        if (!v61)
        {
          v61 = operator new();
          *(_DWORD *)(v61 + 20) = 0;
          *(_DWORD *)(v61 + 24) = 0;
          *(_QWORD *)v61 = &off_1E25BBC18;
          *(_QWORD *)(v61 + 8) = 0;
          *(_WORD *)(v61 + 16) = 0;
          *((_QWORD *)this + 8) = v61;
        }
        v81 = 0;
        v62 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v62;
          *((_QWORD *)a2 + 1) = v62 + 1;
        }
        v63 = *((_DWORD *)a2 + 14);
        v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *)v61, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v65 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v65, 1);
        v66 = v65 - 1;
        if (v66 < 0 == v16)
          *((_DWORD *)a2 + 14) = v66;
        v67 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 1;
LABEL_153:
        *((_DWORD *)this + 24) |= 0x200u;
        v68 = *((_QWORD *)this + 9);
        if (!v68)
        {
          v68 = operator new();
          *(_QWORD *)v68 = &off_1E25BAFE8;
          *(_WORD *)(v68 + 8) = 0;
          *(_BYTE *)(v68 + 10) = 0;
          *(_DWORD *)(v68 + 12) = 0;
          *(_DWORD *)(v68 + 16) = 0;
          *((_QWORD *)this + 9) = v68;
        }
        v81 = 0;
        v69 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v69 >= *((_QWORD *)a2 + 2) || *v69 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v69;
          *((_QWORD *)a2 + 1) = v69 + 1;
        }
        v70 = *((_DWORD *)a2 + 14);
        v71 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v70 + 1;
        if (v70 >= v71)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SbasL1SyncState *)v68, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v72 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v72, 1);
        v73 = v72 - 1;
        if (v73 < 0 == v16)
          *((_DWORD *)a2 + 14) = v73;
        v74 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v74 >= *((_QWORD *)a2 + 2) || *v74 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v74 + 1;
LABEL_167:
        *((_DWORD *)this + 24) |= 0x400u;
        v75 = *((_QWORD *)this + 10);
        if (!v75)
        {
          v75 = operator new();
          *(_QWORD *)v75 = &off_1E25BA778;
          *(_QWORD *)(v75 + 8) = 0;
          *(_DWORD *)(v75 + 16) = 0;
          *((_QWORD *)this + 10) = v75;
        }
        v81 = 0;
        v76 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v76 >= *((_QWORD *)a2 + 2) || *v76 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v81))return 0;
        }
        else
        {
          v81 = *v76;
          *((_QWORD *)a2 + 1) = v76 + 1;
        }
        v77 = *((_DWORD *)a2 + 14);
        v78 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v77 + 1;
        if (v77 >= v78)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *)v75, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v79 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v79, 1);
        v80 = v79 - 1;
        if (v80 < 0 == v16)
          *((_DWORD *)a2 + 14) = v80;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_55;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_69;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_83;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_97;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_111;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_125;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_139;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_153;
        goto LABEL_31;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        goto LABEL_167;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::SyncState::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = this;
  v6 = this[24];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[22], (uint64_t)a2, a4);
    v6 = v5[24];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = v5[24];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_17:
  v8 = *((_QWORD *)v5 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 16);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = v5[24];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_20:
  v9 = *((_QWORD *)v5 + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 24);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  v6 = v5[24];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_26;
  }
LABEL_23:
  v10 = *((_QWORD *)v5 + 4);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 32);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  v6 = v5[24];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_26:
  v11 = *((_QWORD *)v5 + 5);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 40);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  v6 = v5[24];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_32;
  }
LABEL_29:
  v12 = *((_QWORD *)v5 + 6);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 48);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
  v6 = v5[24];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_35;
  }
LABEL_32:
  v13 = *((_QWORD *)v5 + 7);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 56);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v13, a2, a4);
  v6 = v5[24];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_38;
  }
LABEL_35:
  v14 = *((_QWORD *)v5 + 8);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 64);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v14, a2, a4);
  v6 = v5[24];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    goto LABEL_41;
  }
LABEL_38:
  v15 = *((_QWORD *)v5 + 9);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v15 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 72);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v15, a2, a4);
  if ((v5[24] & 0x400) != 0)
  {
LABEL_41:
    v16 = *((_QWORD *)v5 + 10);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v16 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 80);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v16, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *v5;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState *v6;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState *v7;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState *v9;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState *v11;
  CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState *v17;

  v1 = this;
  v2 = *(_DWORD *)(this + 96);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_40;
  }
  if ((v2 & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 88);
    if ((v4 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v4 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      v2 = *(_DWORD *)(v1 + 96);
    }
    else
    {
      this = 1;
    }
    v3 = (this + 1);
    if ((v2 & 2) == 0)
      goto LABEL_15;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_15;
  }
  v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState **)(v1 + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                        + 8);
  }
  this = CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::ByteSize(v5);
  v3 = (v3 + this + 2);
  v2 = *(_DWORD *)(v1 + 96);
LABEL_15:
  if ((v2 & 4) != 0)
  {
    v6 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState **)(v1 + 16);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v6 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                           + 16);
    }
    this = CoreNavigation::CLP::LogEntry::PrivateData::GpsL2CSyncState::ByteSize(v6);
    v3 = (v3 + this + 2);
    v2 = *(_DWORD *)(v1 + 96);
    if ((v2 & 8) == 0)
    {
LABEL_17:
      if ((v2 & 0x10) == 0)
        goto LABEL_18;
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_17;
  }
  v7 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState **)(v1 + 24);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v7 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                        + 24);
  }
  this = CoreNavigation::CLP::LogEntry::PrivateData::GpsL5SyncState::ByteSize(v7);
  v3 = (v3 + this + 2);
  v2 = *(_DWORD *)(v1 + 96);
  if ((v2 & 0x10) == 0)
  {
LABEL_18:
    if ((v2 & 0x20) == 0)
      goto LABEL_19;
    goto LABEL_31;
  }
LABEL_28:
  v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState **)(v1 + 32);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                             + 32);
  }
  this = CoreNavigation::CLP::LogEntry::PrivateData::GlonassL1fSyncState::ByteSize(v8);
  v3 = (v3 + this + 2);
  v2 = *(_DWORD *)(v1 + 96);
  if ((v2 & 0x20) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0)
      goto LABEL_20;
    goto LABEL_34;
  }
LABEL_31:
  v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState **)(v1 + 40);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                           + 40);
  }
  this = CoreNavigation::CLP::LogEntry::PrivateData::BeidouB1SyncState::ByteSize(v9);
  v3 = (v3 + this + 2);
  v2 = *(_DWORD *)(v1 + 96);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
LABEL_34:
  v10 = *(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState **)(v1 + 48);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v10 = *(CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                            + 48);
  }
  this = CoreNavigation::CLP::LogEntry::PrivateData::BeidouB2SyncState::ByteSize(v10);
  v3 = (v3 + this + 2);
  v2 = *(_DWORD *)(v1 + 96);
  if ((v2 & 0x80) != 0)
  {
LABEL_37:
    v11 = *(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState **)(v1 + 56);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v11 = *(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                               + 56);
    }
    this = CoreNavigation::CLP::LogEntry::PrivateData::GalileoE1SyncState::ByteSize(v11);
    v3 = (v3 + this + 2);
    v2 = *(_DWORD *)(v1 + 96);
  }
LABEL_40:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_61;
  if ((v2 & 0x100) != 0)
  {
    v12 = *(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState **)(v1 + 64);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v12 = *(CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                               + 64);
    }
    this = CoreNavigation::CLP::LogEntry::PrivateData::GalileoE5SyncState::ByteSize(v12);
    v3 = (v3 + this + 2);
    v2 = *(_DWORD *)(v1 + 96);
    if ((v2 & 0x200) == 0)
    {
LABEL_43:
      if ((v2 & 0x400) == 0)
        goto LABEL_61;
      goto LABEL_58;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  v13 = *(_QWORD *)(v1 + 72);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_ + 72);
  }
  v14 = *(_DWORD *)(v13 + 16);
  v15 = 2 * (v14 & 1);
  if ((v14 & 2) != 0)
    v15 += 2;
  if ((v14 & 4) != 0)
    v15 += 2;
  if (*(_DWORD *)(v13 + 16))
    v16 = v15;
  else
    v16 = 0;
  *(_DWORD *)(v13 + 12) = v16;
  v3 = (v3 + v16 + 2);
  if ((*(_DWORD *)(v1 + 96) & 0x400) != 0)
  {
LABEL_58:
    v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState **)(v1 + 80);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState::default_instance_
                                                                           + 80);
    }
    v3 = v3 + CoreNavigation::CLP::LogEntry::PrivateData::GpsL1SyncState::ByteSize(v17) + 2;
  }
LABEL_61:
  *(_DWORD *)(v1 + 92) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SyncState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SyncState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this, const CoreNavigation::CLP::LogEntry::PrivateData::SyncState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SyncState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SyncState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::SyncState *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)this)
  {
    v2 = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    v8 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v8;
    v9 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v9;
    v10 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v10;
    v11 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v11;
    v12 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v12;
    LODWORD(v12) = *(_DWORD *)(this + 96);
    *(_DWORD *)(this + 96) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v12;
    LODWORD(v12) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v12;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SyncState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SyncState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SvTime *CoreNavigation::CLP::LogEntry::PrivateData::SvTime::SvTime(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BD748;
  *((_BYTE *)this + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergeFrom(this, a2);
  return this;
}

void sub_18D13E058(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *a2)
{
  double result;
  int v5;
  char v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return result;
LABEL_7:
    v6 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((_BYTE *)this + 24) = v6;
  }
  return result;
}

void sub_18D13E13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvTime::~SvTime(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this)
{
  *(_QWORD *)this = &off_1E25BD748;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SvTime::~SvTime(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SvTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::New(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BD748;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15[2];

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_25;
        *(_QWORD *)v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v15) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v15;
        *((_DWORD *)this + 8) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_17;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_25;
LABEL_17:
      *(_QWORD *)v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v15) & 1) == 0)return 0;
      *((_QWORD *)this + 2) = *(_QWORD *)v15;
      *((_DWORD *)this + 8) |= 2u;
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v8 && *v11 == 24)
      {
        v9 = v11 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_21:
        v15[0] = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15[0];
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_BYTE *)this + 24) = v12 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_21;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_25:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 2;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvTime::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvTime::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvTime::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SvTime *this, CoreNavigation::CLP::LogEntry::PrivateData::SvTime *a2)
{
  uint64_t v2;
  double result;
  char v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v4;
    v5 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SvTime");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::FrequencyOffset(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this, const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BAD18;
  *((_BYTE *)this + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(this, a2);
  return this;
}

void sub_18D13E654(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this, const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *a2)
{
  double result;
  int v5;
  char v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return result;
LABEL_7:
    v6 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((_BYTE *)this + 24) = v6;
  }
  return result;
}

void sub_18D13E738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::~FrequencyOffset(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this)
{
  *(_QWORD *)this = &off_1E25BAD18;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::~FrequencyOffset(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::New(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BAD18;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15[2];

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_25;
        *(_QWORD *)v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v15) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v15;
        *((_DWORD *)this + 8) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_17;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_25;
LABEL_17:
      *(_QWORD *)v15 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v15) & 1) == 0)return 0;
      *((_QWORD *)this + 2) = *(_QWORD *)v15;
      *((_DWORD *)this + 8) |= 2u;
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v8 && *v11 == 24)
      {
        v9 = v11 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_21:
        v15[0] = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15[0];
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_BYTE *)this + 24) = v12 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_21;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_25:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 2;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this, const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::Swap(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *this, CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *a2)
{
  uint64_t v2;
  double result;
  char v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v4;
    v5 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.FrequencyOffset");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_WORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::FrequencyOffsetFromPhaseTracking(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this, const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BD040;
  *((_WORD *)this + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergeFrom(this, a2);
  return this;
}

void sub_18D13EC50(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this, const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((_QWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((_BYTE *)this + 24) = v8;
    if ((*((_DWORD *)a2 + 8) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 25);
    *((_DWORD *)this + 8) |= 8u;
    *((_BYTE *)this + 25) = v5;
  }
}

void sub_18D13ED54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::~FrequencyOffsetFromPhaseTracking(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this)
{
  *(_QWORD *)this = &off_1E25BD040;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::~FrequencyOffsetFromPhaseTracking(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::New(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BD040;
  *(_WORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_WORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  unint64_t v8;
  _BYTE *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  uint64_t result;
  unsigned int v15;
  unsigned __int8 *v16;
  unsigned int v17[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_24;
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v17;
        *((_DWORD *)this + 8) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_24;
LABEL_14:
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v17;
        *((_DWORD *)this + 8) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 != 24)
          continue;
        v10 = v9 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_20:
        v17[0] = 0;
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!(_DWORD)result)
            return result;
          v11 = v17[0];
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v11 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_BYTE *)this + 24) = v11 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v12 >= v8 || *v12 != 32)
          continue;
        v13 = v12 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_33:
        v17[0] = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!(_DWORD)result)
            return result;
          v15 = v17[0];
          v16 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v13;
          v16 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_BYTE *)this + 25) = v15 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v16 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_20;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_33;
      default:
        v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v1 = v2 + 2;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this, const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::Swap(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *this, CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *a2)
{
  uint64_t v2;
  double result;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v4;
    v5 = *((_BYTE *)this + 25);
    *((_BYTE *)this + 25) = *((_BYTE *)a2 + 25);
    *((_BYTE *)a2 + 25) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.FrequencyOffsetFromPhaseTracking");
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  double result;

  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_BYTE *)this + 40) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::PhaseTracking(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this, const CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *a2)
{
  *(_QWORD *)this = &off_1E25BA598;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_BYTE *)this + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergeFrom(this, a2);
  return this;
}

void sub_18D13F354(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this, const CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *a2)
{
  double result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      v7 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((_QWORD *)this + 1) = v7;
      v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((_QWORD *)this + 2) = v8;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 12) |= 4u;
    *((double *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 12) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 12) & 0x10) == 0)
      return result;
LABEL_9:
    v6 = *((_BYTE *)a2 + 40);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_BYTE *)this + 40) = v6;
  }
  return result;
}

void sub_18D13F478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::~PhaseTracking(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  *(_QWORD *)this = &off_1E25BA598;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::~PhaseTracking(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::New(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA598;
  *(_DWORD *)(v1 + 44) = 0;
  *(_DWORD *)(v1 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 48))
  {
    *(_BYTE *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t result;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  unsigned int v19;
  unsigned __int8 *v20;
  unsigned int v21[2];

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 12) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
          goto LABEL_29;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_29:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v12;
          v16 = v12 + 1;
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v16 >= v9 || *v16 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_37:
        *(_QWORD *)v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v21) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v21;
        *((_DWORD *)this + 12) |= 4u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_41:
        *(_QWORD *)v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v21) & 1) != 0)
        {
          *((_QWORD *)this + 4) = *(_QWORD *)v21;
          *((_DWORD *)this + 12) |= 8u;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v18 < v13 && *v18 == 40)
          {
            v14 = v18 + 1;
            *((_QWORD *)a2 + 1) = v14;
LABEL_45:
            v21[0] = 0;
            if ((unint64_t)v14 >= v13 || *v14 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v21);
              if (!(_DWORD)result)
                return result;
              v19 = v21[0];
              v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v13 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v19 = *v14;
              v20 = (unsigned __int8 *)(v14 + 1);
              *((_QWORD *)a2 + 1) = v20;
            }
            *((_BYTE *)this + 40) = v19 != 0;
            *((_DWORD *)this + 12) |= 0x10u;
            if (v20 == (unsigned __int8 *)v13 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_37;
        goto LABEL_20;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_41;
        goto LABEL_20;
      case 5u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  unsigned int v5;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_15;
  }
  if ((*((_BYTE *)this + 48) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                   + 1))
     + 1;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 2))
        + 1;
    v2 = *((_DWORD *)this + 12);
  }
LABEL_8:
  v5 = v3 + 9;
  if ((v2 & 4) == 0)
    v5 = v3;
  if ((v2 & 8) != 0)
    v5 += 9;
  if ((v2 & 0x10) != 0)
    result = v5 + 2;
  else
    result = v5;
LABEL_15:
  *((_DWORD *)this + 11) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this, const CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::Swap(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *this, CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    LOBYTE(v3) = *((_BYTE *)this + 40);
    *((_BYTE *)this + 40) = *((_BYTE *)a2 + 40);
    *((_BYTE *)a2 + 40) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    LODWORD(v3) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PhaseTracking");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SignalCorrelationPeak(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *a2)
{
  *(_QWORD *)this = &off_1E25BC578;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergeFrom(this, a2);
  return this;
}

void sub_18D13FB4C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::SvTime *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *v7;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *v8;
  const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      *((_DWORD *)v3 + 8) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::SvTime *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *)operator new();
        v6 = this;
        *((_DWORD *)this + 7) = 0;
        *((_DWORD *)this + 8) = 0;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BD748;
        *((_BYTE *)this + 24) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvTime **)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_
                                                                          + 8);
      }
      result = CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 8) |= 2u;
    v8 = (CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *)operator new();
      v8 = this;
      *((_DWORD *)this + 7) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BAD18;
      *((_BYTE *)this + 24) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset **)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_
                                                                                 + 16);
    }
    result = CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(v8, v9);
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      LODWORD(result) = *((_DWORD *)a2 + 6);
      *((_DWORD *)v3 + 8) |= 4u;
      *((_DWORD *)v3 + 6) = LODWORD(result);
    }
  }
  return result;
}

void sub_18D13FCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::~SignalCorrelationPeak(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this)
{
  *(_QWORD *)this = &off_1E25BC578;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::~SignalCorrelationPeak(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *)CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::New(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BC578;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(this + 32);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 32))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_BYTE *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 32) = 0;
        v1 = *(_DWORD *)(this + 32);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_BYTE *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
      }
    }
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 8) |= 1u;
          v8 = *((_QWORD *)this + 1);
          if (!v8)
          {
            v8 = operator new();
            *(_DWORD *)(v8 + 28) = 0;
            *(_DWORD *)(v8 + 32) = 0;
            *(_QWORD *)(v8 + 8) = 0;
            *(_QWORD *)(v8 + 16) = 0;
            *(_QWORD *)v8 = &off_1E25BD748;
            *(_BYTE *)(v8 + 24) = 0;
            *((_QWORD *)this + 1) = v8;
          }
          v25 = 0;
          v9 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25))return 0;
          }
          else
          {
            v25 = *v9;
            *((_QWORD *)a2 + 1) = v9 + 1;
          }
          v10 = *((_DWORD *)a2 + 14);
          v11 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v10 + 1;
          if (v10 >= v11)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvTime *)v8, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v12 = *((_DWORD *)a2 + 14);
          v13 = __OFSUB__(v12, 1);
          v14 = v12 - 1;
          if (v14 < 0 == v13)
            *((_DWORD *)a2 + 14) = v14;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          {
            *((_QWORD *)a2 + 1) = v15 + 1;
            goto LABEL_32;
          }
        }
        if (v6 != 2)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
LABEL_32:
        *((_DWORD *)this + 8) |= 2u;
        v16 = *((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = operator new();
          *(_DWORD *)(v16 + 28) = 0;
          *(_DWORD *)(v16 + 32) = 0;
          *(_QWORD *)(v16 + 8) = 0;
          *(_QWORD *)(v16 + 16) = 0;
          *(_QWORD *)v16 = &off_1E25BAD18;
          *(_BYTE *)(v16 + 24) = 0;
          *((_QWORD *)this + 2) = v16;
        }
        v26 = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0;
        }
        else
        {
          v26 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v20 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v20, 1);
        v21 = v20 - 1;
        if (v21 < 0 == v13)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 < *((_QWORD *)a2 + 2) && *v22 == 29)
        {
          *((_QWORD *)a2 + 1) = v22 + 1;
          goto LABEL_46;
        }
      }
      if (v6 != 3)
        break;
      v7 = TagFallback & 7;
      if (v7 != 5)
        goto LABEL_20;
LABEL_46:
      v24 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v24) & 1) == 0)
        return 0;
      *((_DWORD *)this + 6) = v24;
      *((_DWORD *)this + 8) |= 4u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_20:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_27;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
  {
    v5 = *((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ + 8);
    }
    v6 = *(unsigned __int8 *)(v5 + 32);
    if (*(_BYTE *)(v5 + 32))
    {
      v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0)
        v7 += 9;
      if ((v6 & 4) != 0)
        v6 = v7 + 2;
      else
        v6 = v7;
    }
    *(_DWORD *)(v5 + 28) = v6;
    v3 = v6 + 2;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 32) & 2) != 0)
  {
LABEL_15:
    v8 = *((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::default_instance_ + 16);
    }
    v9 = *(unsigned __int8 *)(v8 + 32);
    if (*(_BYTE *)(v8 + 32))
    {
      v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0)
        v10 += 9;
      if ((v9 & 4) != 0)
        v9 = v10 + 2;
      else
        v9 = v10;
    }
    *(_DWORD *)(v8 + 28) = v9;
    v3 += v9 + 2;
    v2 = *((_DWORD *)this + 8);
  }
LABEL_24:
  if ((v2 & 4) != 0)
    result = v3 + 5;
  else
    result = v3;
LABEL_27:
  *((_DWORD *)this + 7) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *this, CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *a2)
{
  uint64_t v2;
  uint64_t v3;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SignalCorrelationPeak");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::FullSvTime(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *a2)
{
  *(_QWORD *)this = &off_1E25B9DA0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergeFrom(this, a2);
  return this;
}

void sub_18D1404CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
LABEL_10:
        v7 = *((_DWORD *)a2 + 6);
        if (v7 >= 6)
          __assert_rtn("set_full_sv_time_source", "CoreNavigationCLPGnssMeasApi.pb.h", 8877, "::CoreNavigation::CLP::LogEntry::PrivateData::FullSvTimeSource_IsValid(value)");
        *((_DWORD *)this + 8) |= 4u;
        *((_DWORD *)this + 6) = v7;
        return;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v6 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((_QWORD *)this + 2) = v6;
    if ((*((_DWORD *)a2 + 8) & 4) == 0)
      return;
    goto LABEL_10;
  }
}

void sub_18D1405D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::~FullSvTime(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this)
{
  *(_QWORD *)this = &off_1E25B9DA0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::~FullSvTime(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::New(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25B9DA0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  _BYTE *v11;
  unsigned int v12;
  uint64_t result;
  unsigned int v14[2];

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_25;
        *(_QWORD *)v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v14;
        *((_DWORD *)this + 8) |= 1u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_17;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_25;
LABEL_17:
      *(_QWORD *)v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) == 0)return 0;
      *((_QWORD *)this + 2) = *(_QWORD *)v14;
      *((_DWORD *)this + 8) |= 2u;
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v8 && *v11 == 24)
      {
        v9 = v11 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_21:
        v14[0] = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
          if (!(_DWORD)result)
            return result;
          v12 = v14[0];
        }
        else
        {
          v12 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        if (v12 <= 5)
        {
          *((_DWORD *)this + 8) |= 4u;
          *((_DWORD *)this + 6) = v12;
        }
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_21;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_25:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 4) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v5 & 0x80000000) != 0)
      {
        v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else
      {
        v6 = 2;
      }
      v4 = (v6 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 7) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::Swap(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *this, CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.FullSvTime");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::SvMeasurementUsage(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BBE70;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(this, a2);
  return this;
}

void sub_18D140B24(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *a2)
{
  float result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      result = *((float *)a2 + 2);
      *((_DWORD *)this + 6) |= 1u;
      *((float *)this + 2) = result;
      v5 = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((float *)this + 3) = result;
    if ((*((_DWORD *)a2 + 6) & 4) == 0)
      return result;
LABEL_7:
    result = *((float *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((float *)this + 4) = result;
  }
  return result;
}

void sub_18D140C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::~SvMeasurementUsage(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this)
{
  *(_QWORD *)this = &off_1E25BBE70;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::~SvMeasurementUsage(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::New(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BBE70;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_27;
        v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v13) & 1) == 0)
          return 0;
        *((_DWORD *)this + 2) = v13;
        *((_DWORD *)this + 6) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 21)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0)
            return 0;
          *((_DWORD *)this + 3) = v12;
          *((_DWORD *)this + 6) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 29)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 5)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_DWORD *)this + 4) = v11;
    *((_DWORD *)this + 6) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 24);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v4 + 16), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v4 + 12), a3);
  if ((*(_DWORD *)(v4 + 24) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 24);
  if (*((_BYTE *)this + 24))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0)
      v2 += 5;
    if ((v1 & 4) != 0)
      v1 = v2 + 5;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *this, CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *a2)
{
  int v2;
  int v3;
  float result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    result = *((float *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((float *)a2 + 4) = result;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    v6 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SvMeasurementUsage");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  double result;
  uint64_t v2;

  result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = v2;
  *((_QWORD *)this + 14) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MeasurementExtension(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this, const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BC320;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  v3 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = v3;
  *((_QWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergeFrom(this, a2);
  return this;
}

void sub_18D14115C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this, const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *a2)
{
  uint64_t v4;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *v20;
  const CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *v21;
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *v22;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *v23;
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *v24;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *v25;
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *v26;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  const std::string *v32;
  std::string *v33;
  _BYTE v34[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v34);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak **)(*((_QWORD *)a2 + 11) + 8 * v5);
      v7 = *((_DWORD *)this + 25);
      v8 = *((int *)this + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)((char *)this + 88));
          v7 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)v10 = &off_1E25BC578;
        *(_QWORD *)(v10 + 8) = 0;
        *(_QWORD *)(v10 + 16) = 0;
        *(_QWORD *)(v10 + 24) = 0;
        *(_DWORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)this + 11);
        v12 = *((int *)this + 24);
        *((_DWORD *)this + 24) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 11);
        *((_DWORD *)this + 24) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 24));
  }
  v13 = *((_DWORD *)a2 + 29);
  if (!(_BYTE)v13)
    goto LABEL_21;
  if ((v13 & 1) != 0)
  {
    v18 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 29) |= 1u;
    *((_DWORD *)this + 2) = v18;
    v13 = *((_DWORD *)a2 + 29);
    if ((v13 & 2) == 0)
    {
LABEL_14:
      if ((v13 & 4) == 0)
        goto LABEL_15;
      goto LABEL_37;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_14;
  }
  v19 = *((_DWORD *)a2 + 3);
  *((_DWORD *)this + 29) |= 2u;
  *((_DWORD *)this + 3) = v19;
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 4) == 0)
  {
LABEL_15:
    if ((v13 & 8) == 0)
      goto LABEL_16;
    goto LABEL_42;
  }
LABEL_37:
  *((_DWORD *)this + 29) |= 4u;
  v20 = (CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *)*((_QWORD *)this + 2);
  if (!v20)
  {
    v4 = operator new();
    v20 = (CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *)v4;
    *(_QWORD *)v4 = &off_1E25B9DA0;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *(_DWORD *)(v4 + 32) = 0;
    *((_QWORD *)this + 2) = v4;
  }
  v21 = (const CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *)*((_QWORD *)a2 + 2);
  if (!v21)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v21 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_
                                                                           + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergeFrom(v20, v21);
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 8) == 0)
  {
LABEL_16:
    if ((v13 & 0x10) == 0)
      goto LABEL_17;
    goto LABEL_47;
  }
LABEL_42:
  *((_DWORD *)this + 29) |= 8u;
  v22 = (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)*((_QWORD *)this + 3);
  if (!v22)
  {
    v4 = operator new();
    v22 = (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)v4;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)v4 = &off_1E25BBE70;
    *(_DWORD *)(v4 + 24) = 0;
    *((_QWORD *)this + 3) = v4;
  }
  v23 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)*((_QWORD *)a2 + 3);
  if (!v23)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v23 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_
                                                                                   + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(v22, v23);
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 0x10) == 0)
  {
LABEL_17:
    if ((v13 & 0x20) == 0)
      goto LABEL_18;
LABEL_52:
    *((_DWORD *)this + 29) |= 0x20u;
    v26 = (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)*((_QWORD *)this + 5);
    if (!v26)
    {
      v4 = operator new();
      v26 = (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)v4;
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)v4 = &off_1E25BBE70;
      *(_DWORD *)(v4 + 24) = 0;
      *((_QWORD *)this + 5) = v4;
    }
    v27 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)*((_QWORD *)a2 + 5);
    if (!v27)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v27 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_
                                                                                     + 40);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(v26, v27);
    v13 = *((_DWORD *)a2 + 29);
    if ((v13 & 0x40) == 0)
    {
LABEL_19:
      if ((v13 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_57;
  }
LABEL_47:
  *((_DWORD *)this + 29) |= 0x10u;
  v24 = (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)*((_QWORD *)this + 4);
  if (!v24)
  {
    v4 = operator new();
    v24 = (CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)v4;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)v4 = &off_1E25BBE70;
    *(_DWORD *)(v4 + 24) = 0;
    *((_QWORD *)this + 4) = v4;
  }
  v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)*((_QWORD *)a2 + 4);
  if (!v25)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_
                                                                                   + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergeFrom(v24, v25);
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 0x20) != 0)
    goto LABEL_52;
LABEL_18:
  if ((v13 & 0x40) == 0)
    goto LABEL_19;
LABEL_57:
  v28 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 29) |= 0x40u;
  *((_DWORD *)this + 12) = v28;
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 0x80) != 0)
  {
LABEL_20:
    v14 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 29) |= 0x80u;
    *((_DWORD *)this + 13) = v14;
    v13 = *((_DWORD *)a2 + 29);
  }
LABEL_21:
  if ((v13 & 0xFF00) == 0)
    return;
  if ((v13 & 0x100) != 0)
  {
    v15 = *((_DWORD *)a2 + 14);
    if (v15 >= 7)
      __assert_rtn("set_sv_time_detection_method", "CoreNavigationCLPGnssMeasApi.pb.h", 9230, "::CoreNavigation::CLP::LogEntry::PrivateData::MeasurementDetectionMethod_IsValid(value)");
    *((_DWORD *)this + 29) |= 0x100u;
    *((_DWORD *)this + 14) = v15;
    v13 = *((_DWORD *)a2 + 29);
  }
  if ((v13 & 0x200) != 0)
  {
    v16 = *((_DWORD *)a2 + 15);
    if (v16 >= 7)
      __assert_rtn("set_frequency_detection_method", "CoreNavigationCLPGnssMeasApi.pb.h", 9253, "::CoreNavigation::CLP::LogEntry::PrivateData::MeasurementDetectionMethod_IsValid(value)");
    *((_DWORD *)this + 29) |= 0x200u;
    *((_DWORD *)this + 15) = v16;
    v13 = *((_DWORD *)a2 + 29);
  }
  if ((v13 & 0x400) != 0)
  {
    v29 = *((_DWORD *)a2 + 16);
    *((_DWORD *)this + 29) |= 0x400u;
    *((_DWORD *)this + 16) = v29;
    v13 = *((_DWORD *)a2 + 29);
    if ((v13 & 0x800) == 0)
    {
LABEL_30:
      if ((v13 & 0x1000) == 0)
        goto LABEL_31;
      goto LABEL_61;
    }
  }
  else if ((v13 & 0x800) == 0)
  {
    goto LABEL_30;
  }
  v30 = *((_DWORD *)a2 + 17);
  *((_DWORD *)this + 29) |= 0x800u;
  *((_DWORD *)this + 17) = v30;
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 0x1000) == 0)
  {
LABEL_31:
    if ((v13 & 0x2000) == 0)
      goto LABEL_32;
    goto LABEL_62;
  }
LABEL_61:
  v31 = *((_DWORD *)a2 + 18);
  *((_DWORD *)this + 29) |= 0x1000u;
  *((_DWORD *)this + 18) = v31;
  v13 = *((_DWORD *)a2 + 29);
  if ((v13 & 0x2000) == 0)
  {
LABEL_32:
    if ((v13 & 0x4000) == 0)
      return;
    goto LABEL_33;
  }
LABEL_62:
  v32 = (const std::string *)*((_QWORD *)a2 + 10);
  *((_DWORD *)this + 29) |= 0x2000u;
  v33 = (std::string *)*((_QWORD *)this + 10);
  if (v33 == (std::string *)MEMORY[0x1E0DE8338])
  {
    v33 = (std::string *)operator new();
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)this + 10) = v33;
  }
  std::string::operator=(v33, v32);
  if ((*((_DWORD *)a2 + 29) & 0x4000) != 0)
  {
LABEL_33:
    v17 = *((_DWORD *)a2 + 19);
    *((_DWORD *)this + 29) |= 0x4000u;
    *((_DWORD *)this + 19) = v17;
  }
}

void sub_18D14168C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::~MeasurementExtension(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  *(_QWORD *)this = &off_1E25BC320;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 11);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::~MeasurementExtension(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  v2 = *((_QWORD *)this + 10);
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ != v1)
  {
    v4 = *((_QWORD *)v1 + 2);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)v1 + 3);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)v1 + 4);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)v1 + 5);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 112) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::New(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC320;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 104) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  v3 = MEMORY[0x1E0DE8338];
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 80) = v3;
  *(_QWORD *)(v1 + 112) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = this;
  v2 = *(_DWORD *)(this + 116);
  if ((_BYTE)v2)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_DWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        v2 = *(_DWORD *)(this + 116);
      }
    }
    if ((v2 & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 24))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        v2 = *(_DWORD *)(this + 116);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 24))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        v2 = *(_DWORD *)(this + 116);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      v6 = *(_QWORD *)(this + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 24))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_DWORD *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 24) = 0;
        v2 = *(_DWORD *)(this + 116);
      }
    }
    *(_QWORD *)(this + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
    *(_DWORD *)(this + 72) = 0;
    if ((v2 & 0x2000) != 0)
    {
      v7 = *(_QWORD *)(this + 80);
      if (v7 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v7 + 23) < 0)
        {
          **(_BYTE **)v7 = 0;
          *(_QWORD *)(v7 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v7 = 0;
          *(_BYTE *)(v7 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(this + 76) = 0;
  }
  if (*(int *)(this + 96) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v1 + 88) + 8 * v8);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *(int *)(v1 + 96));
  }
  *(_DWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 116) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  _BYTE *v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  int v24;
  unint64_t v25;
  unsigned __int8 *v26;
  int v27;
  int v28;
  int v29;
  BOOL v30;
  int v31;
  _BYTE *v32;
  uint64_t v33;
  char *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t result;
  _BYTE *v56;
  unsigned int v57;
  _BYTE *v58;
  unsigned int v59;
  _BYTE *v60;
  unsigned int v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _QWORD *v65;
  _BYTE *v66;
  unsigned __int8 *v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned __int8 *v79;
  unsigned int v80;

  v4 = (unsigned int *)((char *)this + 48);
  v5 = (unsigned int *)((char *)this + 52);
  v6 = (unsigned int *)((char *)this + 76);
  v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)((char *)this + 88);
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_51;
        v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v80) & 1) == 0)
          return 0;
        *((_DWORD *)this + 2) = v80;
        *((_DWORD *)this + 29) |= 1u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
        goto LABEL_15;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 5)
          goto LABEL_51;
LABEL_15:
        v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v80) & 1) == 0)
          return 0;
        *((_DWORD *)this + 3) = v80;
        v12 = *((_DWORD *)this + 29) | 2;
        *((_DWORD *)this + 29) = v12;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_21:
        *((_DWORD *)this + 29) = v12 | 4;
        v14 = *((_QWORD *)this + 2);
        if (!v14)
        {
          v14 = operator new();
          *(_QWORD *)v14 = &off_1E25B9DA0;
          *(_QWORD *)(v14 + 8) = 0;
          *(_QWORD *)(v14 + 16) = 0;
          *(_QWORD *)(v14 + 24) = 0;
          *(_DWORD *)(v14 + 32) = 0;
          *((_QWORD *)this + 2) = v14;
        }
        v80 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80))return 0;
        }
        else
        {
          v80 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v27 = *((_DWORD *)a2 + 14);
        v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *)v14, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v29 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v29, 1);
        v31 = v29 - 1;
        if (v31 < 0 == v30)
          *((_DWORD *)a2 + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_63:
        *((_DWORD *)this + 29) |= 8u;
        v33 = *((_QWORD *)this + 3);
        if (!v33)
        {
          v33 = operator new();
          *(_QWORD *)(v33 + 8) = 0;
          *(_QWORD *)(v33 + 16) = 0;
          *(_QWORD *)v33 = &off_1E25BBE70;
          *(_DWORD *)(v33 + 24) = 0;
          *((_QWORD *)this + 3) = v33;
        }
        v80 = 0;
        v34 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80))return 0;
        }
        else
        {
          v80 = *v34;
          *((_QWORD *)a2 + 1) = v34 + 1;
        }
        v35 = *((_DWORD *)a2 + 14);
        v36 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v35 + 1;
        if (v35 >= v36)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)v33, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v37 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v37, 1);
        v38 = v37 - 1;
        if (v38 < 0 == v30)
          *((_DWORD *)a2 + 14) = v38;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_77:
        *((_DWORD *)this + 29) |= 0x10u;
        v40 = *((_QWORD *)this + 4);
        if (!v40)
        {
          v40 = operator new();
          *(_QWORD *)(v40 + 8) = 0;
          *(_QWORD *)(v40 + 16) = 0;
          *(_QWORD *)v40 = &off_1E25BBE70;
          *(_DWORD *)(v40 + 24) = 0;
          *((_QWORD *)this + 4) = v40;
        }
        v80 = 0;
        v41 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80))return 0;
        }
        else
        {
          v80 = *v41;
          *((_QWORD *)a2 + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)a2 + 14);
        v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)v40, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v44 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v30)
          *((_DWORD *)a2 + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_91:
        *((_DWORD *)this + 29) |= 0x20u;
        v47 = *((_QWORD *)this + 5);
        if (!v47)
        {
          v47 = operator new();
          *(_QWORD *)(v47 + 8) = 0;
          *(_QWORD *)(v47 + 16) = 0;
          *(_QWORD *)v47 = &off_1E25BBE70;
          *(_DWORD *)(v47 + 24) = 0;
          *((_QWORD *)this + 5) = v47;
        }
        v80 = 0;
        v48 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80))return 0;
        }
        else
        {
          v80 = *v48;
          *((_QWORD *)a2 + 1) = v48 + 1;
        }
        v49 = *((_DWORD *)a2 + 14);
        v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvMeasurementUsage *)v47, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v51 = *((_DWORD *)a2 + 14);
        v30 = __OFSUB__(v51, 1);
        v52 = v51 - 1;
        if (v52 < 0 == v30)
          *((_DWORD *)a2 + 14) = v52;
        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v53 >= v16 || *v53 != 56)
          continue;
        v17 = v53 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_105:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v54 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v17;
          v54 = v17 + 1;
          *((_QWORD *)a2 + 1) = v54;
        }
        *((_DWORD *)this + 29) |= 0x40u;
        if ((unint64_t)v54 >= v16 || *v54 != 64)
          continue;
        v18 = v54 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_113:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v56 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v18;
          v56 = v18 + 1;
          *((_QWORD *)a2 + 1) = v56;
        }
        *((_DWORD *)this + 29) |= 0x80u;
        if ((unint64_t)v56 >= v16 || *v56 != 72)
          continue;
        v19 = v56 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_121:
        v80 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80);
          if (!(_DWORD)result)
            return result;
          v57 = v80;
        }
        else
        {
          v57 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v57 <= 6)
        {
          *((_DWORD *)this + 29) |= 0x100u;
          *((_DWORD *)this + 14) = v57;
        }
        v58 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v58 >= v20 || *v58 != 80)
          continue;
        v21 = v58 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_131:
        v80 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80);
          if (!(_DWORD)result)
            return result;
          v59 = v80;
        }
        else
        {
          v59 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        if (v59 <= 6)
        {
          *((_DWORD *)this + 29) |= 0x200u;
          *((_DWORD *)this + 15) = v59;
        }
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v60 >= v22 || *v60 != 88)
          continue;
        v23 = v60 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_141:
        v80 = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80);
          if (!(_DWORD)result)
            return result;
          v61 = v80;
          v62 = (_BYTE *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v61 = *v23;
          v62 = v23 + 1;
          *((_QWORD *)a2 + 1) = v62;
        }
        *((_DWORD *)this + 16) = v61;
        *((_DWORD *)this + 29) |= 0x400u;
        if ((unint64_t)v62 >= v22 || *v62 != 101)
          continue;
        *((_QWORD *)a2 + 1) = v62 + 1;
LABEL_149:
        v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v80) & 1) == 0)
          return 0;
        *((_DWORD *)this + 17) = v80;
        *((_DWORD *)this + 29) |= 0x800u;
        v63 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v63 >= *((_QWORD *)a2 + 2) || *v63 != 109)
          continue;
        *((_QWORD *)a2 + 1) = v63 + 1;
LABEL_153:
        v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v80) & 1) != 0)
        {
          *((_DWORD *)this + 18) = v80;
          v24 = *((_DWORD *)this + 29) | 0x1000;
          *((_DWORD *)this + 29) = v24;
          v64 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v64 < *((_QWORD *)a2 + 2) && *v64 == 114)
          {
            *((_QWORD *)a2 + 1) = v64 + 1;
LABEL_157:
            *((_DWORD *)this + 29) = v24 | 0x2000;
            if (*((_QWORD *)this + 10) == MEMORY[0x1E0DE8338])
            {
              v65 = (_QWORD *)operator new();
              v65[1] = 0;
              v65[2] = 0;
              *v65 = 0;
              *((_QWORD *)this + 10) = v65;
            }
            result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
            if (!(_DWORD)result)
              return result;
            v66 = (_BYTE *)*((_QWORD *)a2 + 1);
            v25 = *((_QWORD *)a2 + 2);
            if ((unint64_t)v66 < v25 && *v66 == 120)
            {
              v26 = v66 + 1;
              *((_QWORD *)a2 + 1) = v26;
LABEL_163:
              if ((unint64_t)v26 >= v25 || (char)*v26 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
                if (!(_DWORD)result)
                  return result;
                v67 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v25 = *((_QWORD *)a2 + 2);
              }
              else
              {
                *v6 = *v26;
                v67 = v26 + 1;
                *((_QWORD *)a2 + 1) = v67;
              }
              *((_DWORD *)this + 29) |= 0x4000u;
              if ((int)v25 - (int)v67 >= 2 && *v67 == 130 && v67[1] == 1)
              {
                do
                {
                  *((_QWORD *)a2 + 1) = v67 + 2;
LABEL_172:
                  v68 = *((_DWORD *)this + 25);
                  v69 = *((int *)this + 24);
                  if ((int)v69 >= v68)
                  {
                    if (v68 == *((_DWORD *)this + 26))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                      v68 = *((_DWORD *)this + 25);
                    }
                    *((_DWORD *)this + 25) = v68 + 1;
                    v71 = operator new();
                    *(_QWORD *)v71 = &off_1E25BC578;
                    *(_QWORD *)(v71 + 8) = 0;
                    *(_QWORD *)(v71 + 16) = 0;
                    *(_QWORD *)(v71 + 24) = 0;
                    *(_DWORD *)(v71 + 32) = 0;
                    v72 = *((_QWORD *)this + 11);
                    v73 = *((int *)this + 24);
                    *((_DWORD *)this + 24) = v73 + 1;
                    *(_QWORD *)(v72 + 8 * v73) = v71;
                  }
                  else
                  {
                    v70 = *((_QWORD *)this + 11);
                    *((_DWORD *)this + 24) = v69 + 1;
                    v71 = *(_QWORD *)(v70 + 8 * v69);
                  }
                  v80 = 0;
                  v74 = (char *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v74 >= *((_QWORD *)a2 + 2) || *v74 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v80))return 0;
                  }
                  else
                  {
                    v80 = *v74;
                    *((_QWORD *)a2 + 1) = v74 + 1;
                  }
                  v75 = *((_DWORD *)a2 + 14);
                  v76 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v75 + 1;
                  if (v75 >= v76)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak *)v71, a2)|| !*((_BYTE *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  v77 = *((_DWORD *)a2 + 14);
                  v30 = __OFSUB__(v77, 1);
                  v78 = v77 - 1;
                  if (v78 < 0 == v30)
                    *((_DWORD *)a2 + 14) = v78;
                  v67 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v79 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
                }
                while ((int)v79 - (int)v67 > 1 && *v67 == 130 && v67[1] == 1);
                if (v67 == v79 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  result = 1;
                  *((_BYTE *)a2 + 36) = 1;
                  return result;
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_51;
        v12 = *((_DWORD *)this + 29);
        goto LABEL_21;
      case 4u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_63;
        goto LABEL_51;
      case 5u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_77;
        goto LABEL_51;
      case 6u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_91;
        goto LABEL_51;
      case 7u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_105;
      case 8u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_113;
      case 9u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_121;
      case 0xAu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_131;
      case 0xBu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_141;
      case 0xCu:
        v10 = TagFallback & 7;
        if (v10 == 5)
          goto LABEL_149;
        goto LABEL_51;
      case 0xDu:
        v10 = TagFallback & 7;
        if (v10 == 5)
          goto LABEL_153;
        goto LABEL_51;
      case 0xEu:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_51;
        v24 = *((_DWORD *)this + 29);
        goto LABEL_157;
      case 0xFu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_163;
      case 0x10u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_51;
        goto LABEL_172;
      default:
        v10 = TagFallback & 7;
LABEL_51:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 116);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_26;
  }
LABEL_23:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_29;
  }
LABEL_26:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_32;
  }
LABEL_29:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_35;
  }
LABEL_32:
  v11 = *(_QWORD *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(float *)(v5 + 68), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(float *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_17;
    goto LABEL_16;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if ((*(_DWORD *)(v5 + 116) & 0x4000) != 0)
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
LABEL_17:
  if (*(int *)(v5 + 96) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(*(_QWORD *)(v5 + 88) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 96));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;

  v1 = this;
  v2 = *(_DWORD *)(this + 116);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_57;
  }
  if ((v2 & 2) != 0)
    v3 = ((v2 << 31 >> 31) & 5) + 5;
  else
    v3 = (v2 << 31 >> 31) & 5;
  if ((v2 & 4) != 0)
  {
    v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime **)(this + 16);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_
                                                                      + 16);
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::FullSvTime::ByteSize(v4);
    v6 = (int)v5;
    if (v5 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    else
      this = 1;
    v3 += v6 + this + 1;
    v2 = *(_DWORD *)(v1 + 116);
    if ((v2 & 8) == 0)
    {
LABEL_7:
      if ((v2 & 0x10) == 0)
        goto LABEL_8;
      goto LABEL_29;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(v1 + 24);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 24);
  }
  v8 = *(unsigned __int8 *)(v7 + 24);
  v9 = (v8 << 31 >> 31) & 5;
  if ((v8 & 2) != 0)
    v9 += 5;
  if ((v8 & 4) != 0)
    v9 += 5;
  if (*(_BYTE *)(v7 + 24))
    v10 = v9;
  else
    v10 = 0;
  *(_DWORD *)(v7 + 20) = v10;
  v3 += v10 + 2;
  v2 = *(_DWORD *)(v1 + 116);
  if ((v2 & 0x10) == 0)
  {
LABEL_8:
    if ((v2 & 0x20) == 0)
      goto LABEL_9;
    goto LABEL_39;
  }
LABEL_29:
  v11 = *(_QWORD *)(v1 + 32);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 32);
  }
  v12 = *(unsigned __int8 *)(v11 + 24);
  v13 = (v12 << 31 >> 31) & 5;
  if ((v12 & 2) != 0)
    v13 += 5;
  if ((v12 & 4) != 0)
    v13 += 5;
  if (*(_BYTE *)(v11 + 24))
    v14 = v13;
  else
    v14 = 0;
  *(_DWORD *)(v11 + 20) = v14;
  v3 += v14 + 2;
  v2 = *(_DWORD *)(v1 + 116);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0)
      goto LABEL_10;
    goto LABEL_49;
  }
LABEL_39:
  v15 = *(_QWORD *)(v1 + 40);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v15 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::default_instance_ + 40);
  }
  v16 = *(unsigned __int8 *)(v15 + 24);
  v17 = (v16 << 31 >> 31) & 5;
  if ((v16 & 2) != 0)
    v17 += 5;
  if ((v16 & 4) != 0)
    v17 += 5;
  if (*(_BYTE *)(v15 + 24))
    v18 = v17;
  else
    v18 = 0;
  *(_DWORD *)(v15 + 20) = v18;
  v3 += v18 + 2;
  v2 = *(_DWORD *)(v1 + 116);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0)
      goto LABEL_57;
    goto LABEL_53;
  }
LABEL_49:
  v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 48);
  if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
    v2 = *(_DWORD *)(v1 + 116);
  }
  else
  {
    v20 = 1;
  }
  v3 += v20 + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_53:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 52);
    if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
      v2 = *(_DWORD *)(v1 + 116);
    }
    else
    {
      v22 = 2;
    }
    v3 += v22;
  }
LABEL_57:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_100;
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0)
      goto LABEL_60;
LABEL_68:
    v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 60);
    if ((v25 & 0x80000000) != 0)
    {
      v26 = 11;
    }
    else if (v25 >= 0x80)
    {
      v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25) + 1;
      v2 = *(_DWORD *)(v1 + 116);
    }
    else
    {
      v26 = 2;
    }
    v3 += v26;
    if ((v2 & 0x400) == 0)
      goto LABEL_80;
    goto LABEL_74;
  }
  v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 56);
  if ((v23 & 0x80000000) != 0)
  {
    v24 = 11;
  }
  else if (v23 >= 0x80)
  {
    v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
    v2 = *(_DWORD *)(v1 + 116);
  }
  else
  {
    v24 = 2;
  }
  v3 += v24;
  if ((v2 & 0x200) != 0)
    goto LABEL_68;
LABEL_60:
  if ((v2 & 0x400) != 0)
  {
LABEL_74:
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 64);
    if ((v27 & 0x80000000) != 0)
    {
      v28 = 11;
    }
    else if (v27 >= 0x80)
    {
      v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27) + 1;
      v2 = *(_DWORD *)(v1 + 116);
    }
    else
    {
      v28 = 2;
    }
    v3 += v28;
  }
LABEL_80:
  v29 = v3 + 5;
  if ((v2 & 0x800) == 0)
    v29 = v3;
  if ((v2 & 0x1000) != 0)
    v3 = v29 + 5;
  else
    v3 = v29;
  if ((v2 & 0x2000) != 0)
  {
    v30 = *(_QWORD *)(v1 + 80);
    v31 = *(unsigned __int8 *)(v30 + 23);
    v32 = v31;
    v33 = *(_QWORD *)(v30 + 8);
    if ((v31 & 0x80u) == 0)
      v34 = *(unsigned __int8 *)(v30 + 23);
    else
      v34 = v33;
    if (v34 >= 0x80)
    {
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34);
      v31 = *(unsigned __int8 *)(v30 + 23);
      v33 = *(_QWORD *)(v30 + 8);
      v2 = *(_DWORD *)(v1 + 116);
      v32 = *(_BYTE *)(v30 + 23);
    }
    else
    {
      v35 = 1;
    }
    if (v32 < 0)
      v31 = v33;
    v3 += v35 + v31 + 1;
  }
  if ((v2 & 0x4000) != 0)
  {
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 76);
    if (v36 >= 0x80)
      v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36) + 1;
    else
      v37 = 2;
    v3 += v37;
  }
LABEL_100:
  v38 = *(_DWORD *)(v1 + 96);
  v39 = (v3 + 2 * v38);
  if (v38 >= 1)
  {
    v40 = 0;
    do
      v39 = v39
          + CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::SignalCorrelationPeak **)(*(_QWORD *)(v1 + 88) + 8 * v40++))
          + 1;
    while (v40 < *(int *)(v1 + 96));
  }
  *(_DWORD *)(v1 + 112) = v39;
  return v39;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this, const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *a2)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)this)
  {
    v3 = this;
    v4 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v4;
    v5 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
    v6 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v6;
    v7 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v7;
    v8 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v8;
    v9 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v9;
    LODWORD(v9) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
    v10 = *(_DWORD *)(this + 68);
    *(_DWORD *)(this + 68) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v10;
    v11 = *(_DWORD *)(this + 72);
    *(_DWORD *)(this + 72) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v11;
    v12 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v12;
    LODWORD(v12) = *(_DWORD *)(this + 76);
    *(_DWORD *)(this + 76) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v12;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v13 = *(_DWORD *)(v3 + 116);
    *(_DWORD *)(v3 + 116) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v13;
    v14 = *(_DWORD *)(v3 + 112);
    *(_DWORD *)(v3 + 112) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v14;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MeasurementExtension");
}

double CoreNavigation::CLP::LogEntry::PrivateData::Measurement::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  double result;

  *((_DWORD *)this + 27) = 0;
  *((_DWORD *)this + 28) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_BYTE *)this + 104) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::Measurement *CoreNavigation::CLP::LogEntry::PrivateData::Measurement::Measurement(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this, const CoreNavigation::CLP::LogEntry::PrivateData::Measurement *a2)
{
  *(_QWORD *)this = &off_1E25BA0E8;
  *((_DWORD *)this + 27) = 0;
  *((_DWORD *)this + 28) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_BYTE *)this + 104) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergeFrom(this, a2);
  return this;
}

void sub_18D142D8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this, const CoreNavigation::CLP::LogEntry::PrivateData::Measurement *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Measurement *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvId *v6;
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::SyncState *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CoreNavigation::CLP::LogEntry::PrivateData::SvTime *v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *v13;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *v15;
  CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *v16;
  const CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *v17;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *v18;
  uint64_t v19;
  const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *v20;
  int v21;
  unsigned int v22;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *v23;
  const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *v24;
  char v25;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *v26;
  const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *v27;
  _BYTE v28[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v28);
  }
  v4 = *((_DWORD *)a2 + 28);
  if (!(_BYTE)v4)
    goto LABEL_41;
  if ((v4 & 1) != 0)
  {
    *((_DWORD *)v3 + 28) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
      v5 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BD478;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(v5, v6);
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 28) |= 2u;
  v7 = (CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)*((_QWORD *)v3 + 2);
  if (!v7)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
    v7 = this;
    *(_QWORD *)this = &off_1E25BDB80;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
    *(_OWORD *)((char *)this + 72) = 0u;
    *(_OWORD *)((char *)this + 84) = 0u;
    *((_QWORD *)v3 + 2) = this;
  }
  v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)*((_QWORD *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SyncState **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergeFrom(v7, v8);
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  v9 = *((_QWORD *)a2 + 3);
  *((_DWORD *)v3 + 28) |= 4u;
  *((_QWORD *)v3 + 3) = v9;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_25;
  }
LABEL_24:
  v10 = *((_QWORD *)a2 + 4);
  *((_DWORD *)v3 + 28) |= 8u;
  *((_QWORD *)v3 + 4) = v10;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_26:
    *((_DWORD *)v3 + 28) |= 0x20u;
    v12 = (CoreNavigation::CLP::LogEntry::PrivateData::SvTime *)*((_QWORD *)v3 + 6);
    if (!v12)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
      v12 = this;
      *((_DWORD *)this + 7) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BD748;
      *((_BYTE *)this + 24) = 0;
      *((_QWORD *)v3 + 6) = this;
    }
    v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvTime *)*((_QWORD *)a2 + 6);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvTime **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                         + 48);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergeFrom(v12, v13);
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_41;
      goto LABEL_36;
    }
    goto LABEL_31;
  }
LABEL_25:
  v11 = *((_QWORD *)a2 + 5);
  *((_DWORD *)v3 + 28) |= 0x10u;
  *((_QWORD *)v3 + 5) = v11;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x20) != 0)
    goto LABEL_26;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_31:
  *((_DWORD *)v3 + 28) |= 0x40u;
  v14 = (CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)*((_QWORD *)v3 + 7);
  if (!v14)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
    v14 = this;
    *((_DWORD *)this + 7) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BAD18;
    *((_BYTE *)this + 24) = 0;
    *((_QWORD *)v3 + 7) = this;
  }
  v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)*((_QWORD *)a2 + 7);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                                + 56);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(v14, v15);
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x80) != 0)
  {
LABEL_36:
    *((_DWORD *)v3 + 28) |= 0x80u;
    v16 = (CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *)*((_QWORD *)v3 + 8);
    if (!v16)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
      v16 = this;
      *(_QWORD *)this = &off_1E25BA598;
      *((_DWORD *)this + 11) = 0;
      *((_DWORD *)this + 12) = 0;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_BYTE *)this + 40) = 0;
      *((_QWORD *)v3 + 8) = this;
    }
    v17 = (const CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *)*((_QWORD *)a2 + 8);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v17 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                                + 64);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergeFrom(v16, v17);
    v4 = *((_DWORD *)a2 + 28);
  }
LABEL_41:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    *((_DWORD *)v3 + 28) |= 0x100u;
    v18 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)*((_QWORD *)v3 + 9);
    if (!v18)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
      v18 = this;
      *(_QWORD *)this = &off_1E25BC320;
      *((_QWORD *)this + 11) = 0;
      *((_QWORD *)this + 12) = 0;
      *((_DWORD *)this + 26) = 0;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      v19 = MEMORY[0x1E0DE8338];
      *(_OWORD *)((char *)this + 56) = 0u;
      *((_QWORD *)this + 9) = 0;
      *((_QWORD *)this + 10) = v19;
      *((_QWORD *)this + 14) = 0;
      *((_QWORD *)v3 + 9) = this;
    }
    v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)*((_QWORD *)a2 + 9);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                                       + 72);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergeFrom(v18, v20);
    v4 = *((_DWORD *)a2 + 28);
    if ((v4 & 0x200) == 0)
    {
LABEL_44:
      if ((v4 & 0x400) == 0)
        goto LABEL_45;
      goto LABEL_55;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  v21 = *((_DWORD *)a2 + 20);
  *((_DWORD *)v3 + 28) |= 0x200u;
  *((_DWORD *)v3 + 20) = v21;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x400) == 0)
  {
LABEL_45:
    if ((v4 & 0x800) == 0)
      goto LABEL_46;
    goto LABEL_57;
  }
LABEL_55:
  v22 = *((_DWORD *)a2 + 21);
  if (v22 >= 5)
    __assert_rtn("set_multipath_indicator", "CoreNavigationCLPGnssMeasApi.pb.h", 9803, "::CoreNavigation::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(value)");
  *((_DWORD *)v3 + 28) |= 0x400u;
  *((_DWORD *)v3 + 21) = v22;
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x800) == 0)
  {
LABEL_46:
    if ((v4 & 0x1000) == 0)
      goto LABEL_47;
LABEL_62:
    v25 = *((_BYTE *)a2 + 104);
    *((_DWORD *)v3 + 28) |= 0x1000u;
    *((_BYTE *)v3 + 104) = v25;
    if ((*((_DWORD *)a2 + 28) & 0x2000) == 0)
      return;
    goto LABEL_63;
  }
LABEL_57:
  *((_DWORD *)v3 + 28) |= 0x800u;
  v23 = (CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)*((_QWORD *)v3 + 11);
  if (!v23)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
    v23 = this;
    *((_DWORD *)this + 7) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BAD18;
    *((_BYTE *)this + 24) = 0;
    *((_QWORD *)v3 + 11) = this;
  }
  v24 = (const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)*((_QWORD *)a2 + 11);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v24 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                                + 88);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergeFrom(v23, v24);
  v4 = *((_DWORD *)a2 + 28);
  if ((v4 & 0x1000) != 0)
    goto LABEL_62;
LABEL_47:
  if ((v4 & 0x2000) == 0)
    return;
LABEL_63:
  *((_DWORD *)v3 + 28) |= 0x2000u;
  v26 = (CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *)*((_QWORD *)v3 + 12);
  if (!v26)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)operator new();
    v26 = this;
    *((_DWORD *)this + 7) = 0;
    *((_DWORD *)this + 8) = 0;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BD040;
    *((_WORD *)this + 12) = 0;
    *((_QWORD *)v3 + 12) = this;
  }
  v27 = (const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *)*((_QWORD *)a2 + 12);
  if (!v27)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v27 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                                                 + 96);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergeFrom(v26, v27);
}

void sub_18D143300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Measurement::~Measurement(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  *(_QWORD *)this = &off_1E25BA0E8;
  CoreNavigation::CLP::LogEntry::PrivateData::Measurement::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Measurement::~Measurement(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Measurement::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 6);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 7);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 8);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 9);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 11);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 12);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 108) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Measurement::New(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA0E8;
  *(_DWORD *)(v1 + 108) = 0;
  *(_DWORD *)(v1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_BYTE *)(v1 + 104) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  v2 = *(_DWORD *)(this + 112);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SvId::Clear(this);
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SyncState::Clear(this);
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      v3 = *(_QWORD *)(v1 + 48);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 32))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_BYTE *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      v4 = *(_QWORD *)(v1 + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 32))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_BYTE *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      v5 = *(_QWORD *)(v1 + 64);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 48))
        {
          *(_BYTE *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 48) = 0;
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(_QWORD *)(v1 + 72);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::Clear(this);
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(_QWORD *)(v1 + 80) = 0;
    if ((v2 & 0x800) != 0)
    {
      v6 = *(_QWORD *)(v1 + 88);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 32))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_BYTE *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 32) = 0;
        v2 = *(_DWORD *)(v1 + 112);
      }
    }
    *(_BYTE *)(v1 + 104) = 0;
    if ((v2 & 0x2000) != 0)
    {
      v7 = *(_QWORD *)(v1 + 96);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 32))
        {
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_WORD *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 32) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 112) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  int v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  BOOL v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t result;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  uint64_t v47;
  char *v48;
  int v49;
  int v50;
  int v51;
  int v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _BYTE *v67;
  _BYTE *v68;
  unsigned int v69;
  _BYTE *v70;
  uint64_t v71;
  char *v72;
  int v73;
  int v74;
  int v75;
  int v76;
  _BYTE *v77;
  unsigned int v78;
  _BYTE *v79;
  uint64_t v80;
  char *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;

  v4 = (unint64_t *)((char *)this + 24);
  v5 = (unint64_t *)((char *)this + 32);
  v6 = (unint64_t *)((char *)this + 40);
  v7 = MEMORY[0x1E0DE8338];
  while (1)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_41;
        *((_DWORD *)this + 28) |= 1u;
        v11 = *((_QWORD *)this + 1);
        if (!v11)
        {
          v11 = operator new();
          *(_QWORD *)(v11 + 8) = 0;
          *(_QWORD *)(v11 + 16) = 0;
          *(_QWORD *)v11 = &off_1E25BD478;
          *(_DWORD *)(v11 + 24) = 0;
          *((_QWORD *)this + 1) = v11;
        }
        v86 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvId *)v11, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v25, 1);
        v27 = v25 - 1;
        if (v27 < 0 == v26)
          *((_DWORD *)a2 + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
        goto LABEL_53;
      case 2u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_41;
LABEL_53:
        *((_DWORD *)this + 28) |= 2u;
        v29 = *((_QWORD *)this + 2);
        if (!v29)
        {
          v29 = operator new();
          *(_QWORD *)v29 = &off_1E25BDB80;
          *(_OWORD *)(v29 + 8) = 0u;
          *(_OWORD *)(v29 + 24) = 0u;
          *(_OWORD *)(v29 + 40) = 0u;
          *(_OWORD *)(v29 + 56) = 0u;
          *(_OWORD *)(v29 + 72) = 0u;
          *(_OWORD *)(v29 + 84) = 0u;
          *((_QWORD *)this + 2) = v29;
        }
        v86 = 0;
        v30 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)a2 + 14);
        v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SyncState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SyncState *)v29, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v33 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v26)
          *((_DWORD *)a2 + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 >= v13 || *v35 != 24)
          continue;
        v14 = v35 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_67:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v14;
          v36 = v14 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 28) |= 4u;
        if ((unint64_t)v36 >= v13 || *v36 != 32)
          continue;
        v15 = v36 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_75:
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v15;
          v38 = v15 + 1;
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 28) |= 8u;
        if ((unint64_t)v38 >= v13 || *v38 != 40)
          continue;
        v16 = v38 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_83:
        if ((unint64_t)v16 >= v13 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v16;
          v39 = v16 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        v17 = *((_DWORD *)this + 28) | 0x10;
        *((_DWORD *)this + 28) = v17;
        if ((unint64_t)v39 >= v13 || *v39 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_91:
        *((_DWORD *)this + 28) = v17 | 0x20;
        v40 = *((_QWORD *)this + 6);
        if (!v40)
        {
          v40 = operator new();
          *(_DWORD *)(v40 + 28) = 0;
          *(_DWORD *)(v40 + 32) = 0;
          *(_QWORD *)(v40 + 8) = 0;
          *(_QWORD *)(v40 + 16) = 0;
          *(_QWORD *)v40 = &off_1E25BD748;
          *(_BYTE *)(v40 + 24) = 0;
          *((_QWORD *)this + 6) = v40;
        }
        v86 = 0;
        v41 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v41;
          *((_QWORD *)a2 + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)a2 + 14);
        v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvTime::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvTime *)v40, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v44 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v26)
          *((_DWORD *)a2 + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_105:
        *((_DWORD *)this + 28) |= 0x40u;
        v47 = *((_QWORD *)this + 7);
        if (!v47)
        {
          v47 = operator new();
          *(_DWORD *)(v47 + 28) = 0;
          *(_DWORD *)(v47 + 32) = 0;
          *(_QWORD *)(v47 + 8) = 0;
          *(_QWORD *)(v47 + 16) = 0;
          *(_QWORD *)v47 = &off_1E25BAD18;
          *(_BYTE *)(v47 + 24) = 0;
          *((_QWORD *)this + 7) = v47;
        }
        v86 = 0;
        v48 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v48;
          *((_QWORD *)a2 + 1) = v48 + 1;
        }
        v49 = *((_DWORD *)a2 + 14);
        v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)v47, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v51 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v51, 1);
        v52 = v51 - 1;
        if (v52 < 0 == v26)
          *((_DWORD *)a2 + 14) = v52;
        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 1;
LABEL_119:
        *((_DWORD *)this + 28) |= 0x80u;
        v54 = *((_QWORD *)this + 8);
        if (!v54)
        {
          v54 = operator new();
          *(_QWORD *)v54 = &off_1E25BA598;
          *(_DWORD *)(v54 + 44) = 0;
          *(_DWORD *)(v54 + 48) = 0;
          *(_OWORD *)(v54 + 8) = 0u;
          *(_OWORD *)(v54 + 24) = 0u;
          *(_BYTE *)(v54 + 40) = 0;
          *((_QWORD *)this + 8) = v54;
        }
        v86 = 0;
        v55 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v55;
          *((_QWORD *)a2 + 1) = v55 + 1;
        }
        v56 = *((_DWORD *)a2 + 14);
        v57 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v56 + 1;
        if (v56 >= v57)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *)v54, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v58 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v58, 1);
        v59 = v58 - 1;
        if (v59 < 0 == v26)
          *((_DWORD *)a2 + 14) = v59;
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_133:
        *((_DWORD *)this + 28) |= 0x100u;
        v61 = *((_QWORD *)this + 9);
        if (!v61)
        {
          v61 = operator new();
          *(_QWORD *)v61 = &off_1E25BC320;
          *(_QWORD *)(v61 + 88) = 0;
          *(_QWORD *)(v61 + 96) = 0;
          *(_DWORD *)(v61 + 104) = 0;
          *(_OWORD *)(v61 + 8) = 0u;
          *(_OWORD *)(v61 + 24) = 0u;
          *(_OWORD *)(v61 + 40) = 0u;
          *(_OWORD *)(v61 + 56) = 0u;
          *(_QWORD *)(v61 + 72) = 0;
          *(_QWORD *)(v61 + 80) = v7;
          *(_QWORD *)(v61 + 112) = 0;
          *((_QWORD *)this + 9) = v61;
        }
        v86 = 0;
        v62 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v62;
          *((_QWORD *)a2 + 1) = v62 + 1;
        }
        v63 = *((_DWORD *)a2 + 14);
        v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension *)v61, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v65 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v65, 1);
        v66 = v65 - 1;
        if (v66 < 0 == v26)
          *((_DWORD *)a2 + 14) = v66;
        v67 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 != 85)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 1;
LABEL_147:
        v86 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v86) & 1) == 0)
          return 0;
        *((_DWORD *)this + 20) = v86;
        *((_DWORD *)this + 28) |= 0x200u;
        v68 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v68 >= v18 || *v68 != 88)
          continue;
        v19 = v68 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_151:
        v86 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86);
          if (!(_DWORD)result)
            return result;
          v69 = v86;
        }
        else
        {
          v69 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v69 <= 4)
        {
          *((_DWORD *)this + 28) |= 0x400u;
          *((_DWORD *)this + 21) = v69;
        }
        v70 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v70 >= *((_QWORD *)a2 + 2) || *v70 != 98)
          continue;
        *((_QWORD *)a2 + 1) = v70 + 1;
LABEL_161:
        *((_DWORD *)this + 28) |= 0x800u;
        v71 = *((_QWORD *)this + 11);
        if (!v71)
        {
          v71 = operator new();
          *(_DWORD *)(v71 + 28) = 0;
          *(_DWORD *)(v71 + 32) = 0;
          *(_QWORD *)(v71 + 8) = 0;
          *(_QWORD *)(v71 + 16) = 0;
          *(_QWORD *)v71 = &off_1E25BAD18;
          *(_BYTE *)(v71 + 24) = 0;
          *((_QWORD *)this + 11) = v71;
        }
        v86 = 0;
        v72 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v72 >= *((_QWORD *)a2 + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v72;
          *((_QWORD *)a2 + 1) = v72 + 1;
        }
        v73 = *((_DWORD *)a2 + 14);
        v74 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v73 + 1;
        if (v73 >= v74)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffset *)v71, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v75 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v75, 1);
        v76 = v75 - 1;
        if (v76 < 0 == v26)
          *((_DWORD *)a2 + 14) = v76;
        v77 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v77 >= v20 || *v77 != 104)
          continue;
        v21 = v77 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_175:
        v86 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86);
          if (!(_DWORD)result)
            return result;
          v78 = v86;
          v79 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v78 = *v21;
          v79 = v21 + 1;
          *((_QWORD *)a2 + 1) = v79;
        }
        *((_BYTE *)this + 104) = v78 != 0;
        v22 = *((_DWORD *)this + 28) | 0x1000;
        *((_DWORD *)this + 28) = v22;
        if ((unint64_t)v79 >= v20 || *v79 != 114)
          continue;
        *((_QWORD *)a2 + 1) = v79 + 1;
LABEL_183:
        *((_DWORD *)this + 28) = v22 | 0x2000;
        v80 = *((_QWORD *)this + 12);
        if (!v80)
        {
          v80 = operator new();
          *(_DWORD *)(v80 + 28) = 0;
          *(_DWORD *)(v80 + 32) = 0;
          *(_QWORD *)(v80 + 8) = 0;
          *(_QWORD *)(v80 + 16) = 0;
          *(_QWORD *)v80 = &off_1E25BD040;
          *(_WORD *)(v80 + 24) = 0;
          *((_QWORD *)this + 12) = v80;
        }
        v86 = 0;
        v81 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v81 >= *((_QWORD *)a2 + 2) || *v81 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v86))return 0;
        }
        else
        {
          v86 = *v81;
          *((_QWORD *)a2 + 1) = v81 + 1;
        }
        v82 = *((_DWORD *)a2 + 14);
        v83 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v82 + 1;
        if (v82 >= v83)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *)v80, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v84 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v84, 1);
        v85 = v84 - 1;
        if (v85 < 0 == v26)
          *((_DWORD *)a2 + 14) = v85;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 5u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 6u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_41;
        v17 = *((_DWORD *)this + 28);
        goto LABEL_91;
      case 7u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_105;
        goto LABEL_41;
      case 8u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_119;
        goto LABEL_41;
      case 9u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_133;
        goto LABEL_41;
      case 0xAu:
        v10 = TagFallback & 7;
        if (v10 == 5)
          goto LABEL_147;
        goto LABEL_41;
      case 0xBu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_151;
      case 0xCu:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_161;
        goto LABEL_41;
      case 0xDu:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_41;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_175;
      case 0xEu:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_41;
        v22 = *((_DWORD *)this + 28);
        goto LABEL_183;
      default:
        v10 = TagFallback & 7;
LABEL_41:
        if (v10 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 112);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 112);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_25:
  v9 = *(_QWORD *)(v5 + 48);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_28:
  v10 = *(_QWORD *)(v5 + 56);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_34;
  }
LABEL_31:
  v11 = *(_QWORD *)(v5 + 64);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_37;
  }
LABEL_34:
  v12 = *(_QWORD *)(v5 + 72);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
LABEL_42:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 104), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 112) & 0x2000) == 0)
      return this;
    goto LABEL_43;
  }
LABEL_39:
  v13 = *(_QWORD *)(v5 + 88);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 112);
  if ((v6 & 0x1000) != 0)
    goto LABEL_42;
LABEL_14:
  if ((v6 & 0x2000) == 0)
    return this;
LABEL_43:
  v14 = *(_QWORD *)(v5 + 96);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 96);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v14, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking *v27;

  v1 = this;
  v2 = *(_DWORD *)(this + 112);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_52;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(this + 8);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                              + 8);
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    this = 1;
  v3 = (v6 + this + 1);
  v2 = *(_DWORD *)(v1 + 112);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v7 = *(_QWORD *)(v1 + 16);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SyncState::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      this = 1;
    v3 = (v3 + v9 + this + 1);
    v2 = *(_DWORD *)(v1 + 112);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 24));
    v3 = (v3 + this + 1);
    v2 = *(_DWORD *)(v1 + 112);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_27;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 32));
  v3 = (v3 + this + 1);
  v2 = *(_DWORD *)(v1 + 112);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 40));
  v3 = (v3 + this + 1);
  v2 = *(_DWORD *)(v1 + 112);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_37;
  }
LABEL_28:
  v10 = *(_QWORD *)(v1 + 48);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 48);
  }
  v11 = *(unsigned __int8 *)(v10 + 32);
  if (*(_BYTE *)(v10 + 32))
  {
    v12 = (v11 << 31 >> 31) & 9;
    if ((v11 & 2) != 0)
      v12 += 9;
    if ((v11 & 4) != 0)
      v11 = v12 + 2;
    else
      v11 = v12;
  }
  *(_DWORD *)(v10 + 28) = v11;
  v3 = (v3 + v11 + 2);
  v2 = *(_DWORD *)(v1 + 112);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0)
      goto LABEL_52;
    goto LABEL_46;
  }
LABEL_37:
  v13 = *(_QWORD *)(v1 + 56);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 56);
  }
  v14 = *(unsigned __int8 *)(v13 + 32);
  if (*(_BYTE *)(v13 + 32))
  {
    v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0)
      v15 += 9;
    if ((v14 & 4) != 0)
      v14 = v15 + 2;
    else
      v14 = v15;
  }
  *(_DWORD *)(v13 + 28) = v14;
  v3 = (v3 + v14 + 2);
  v2 = *(_DWORD *)(v1 + 112);
  if ((v2 & 0x80) != 0)
  {
LABEL_46:
    v16 = *(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking **)(v1 + 64);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v16 = *(CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                          + 64);
    }
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::PhaseTracking::ByteSize(v16);
    v18 = (int)v17;
    if (v17 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    else
      this = 1;
    v3 = (v3 + v18 + this + 1);
    v2 = *(_DWORD *)(v1 + 112);
  }
LABEL_52:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v19 = *(_QWORD *)(v1 + 72);
      if (!v19)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
        v19 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 72);
      }
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementExtension::ByteSize(v19);
      v21 = (int)v20;
      if (v20 >= 0x80)
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      else
        this = 1;
      LODWORD(v3) = v3 + v21 + this + 1;
      v2 = *(_DWORD *)(v1 + 112);
    }
    if ((v2 & 0x200) != 0)
      LODWORD(v3) = v3 + 5;
    if ((v2 & 0x400) != 0)
    {
      this = *(unsigned int *)(v1 + 84);
      if ((this & 0x80000000) != 0)
      {
        v22 = 11;
      }
      else if (this >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
        v22 = this + 1;
        v2 = *(_DWORD *)(v1 + 112);
      }
      else
      {
        v22 = 2;
      }
      LODWORD(v3) = v22 + v3;
    }
    if ((v2 & 0x800) != 0)
    {
      v23 = *(_QWORD *)(v1 + 88);
      if (!v23)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v23 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_ + 88);
      }
      v24 = *(unsigned __int8 *)(v23 + 32);
      v25 = (v24 << 31 >> 31) & 9;
      if ((v24 & 2) != 0)
        v25 += 9;
      if ((v24 & 4) != 0)
        v25 += 2;
      if (*(_BYTE *)(v23 + 32))
        v26 = v25;
      else
        v26 = 0;
      *(_DWORD *)(v23 + 28) = v26;
      LODWORD(v3) = v3 + v26 + 2;
      v2 = *(_DWORD *)(v1 + 112);
    }
    if ((v2 & 0x1000) != 0)
      v3 = (v3 + 2);
    else
      v3 = v3;
    if ((v2 & 0x2000) != 0)
    {
      v27 = *(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking **)(v1 + 96);
      if (!v27)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
        v27 = *(CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking **)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement::default_instance_
                                                                                               + 96);
      }
      v3 = v3
         + CoreNavigation::CLP::LogEntry::PrivateData::FrequencyOffsetFromPhaseTracking::ByteSize(v27)
         + 2;
    }
  }
  *(_DWORD *)(v1 + 108) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Measurement::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Measurement::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this, const CoreNavigation::CLP::LogEntry::PrivateData::Measurement *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Measurement::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::Measurement::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Measurement *this, CoreNavigation::CLP::LogEntry::PrivateData::Measurement *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  float result;
  uint64_t v14;
  uint64_t v15;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)this + 3);
    v5 = *((_QWORD *)a2 + 3);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 3) = v5;
    *((_QWORD *)a2 + 2) = v3;
    *((_QWORD *)a2 + 3) = v4;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_QWORD *)this + 5);
    v8 = *((_QWORD *)this + 6);
    v9 = *((_QWORD *)a2 + 6);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)this + 6) = v9;
    *((_QWORD *)a2 + 5) = v7;
    *((_QWORD *)a2 + 6) = v8;
    v10 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v10;
    v11 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v11;
    v12 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v12;
    result = *((float *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((float *)a2 + 20) = result;
    LODWORD(v12) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v12;
    v14 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v14;
    LOBYTE(v14) = *((_BYTE *)this + 104);
    *((_BYTE *)this + 104) = *((_BYTE *)a2 + 104);
    *((_BYTE *)a2 + 104) = v14;
    v15 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v15;
    LODWORD(v15) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v15;
    LODWORD(v15) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v15;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Measurement::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Measurement");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::ReceiverClockModel(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BBD80;
  *((_BYTE *)this + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergeFrom(this, a2);
  return this;
}

void sub_18D144A10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *a2)
{
  float result;
  int v5;
  char v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      result = *((float *)a2 + 2);
      *((_DWORD *)this + 8) |= 1u;
      *((float *)this + 2) = result;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((float *)a2 + 3);
    *((_DWORD *)this + 8) |= 2u;
    *((float *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((float *)a2 + 4);
    *((_DWORD *)this + 8) |= 4u;
    *((float *)this + 4) = result;
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((float *)a2 + 5);
    *((_DWORD *)this + 8) |= 8u;
    *((float *)this + 5) = result;
    if ((*((_DWORD *)a2 + 8) & 0x10) == 0)
      return result;
LABEL_9:
    v6 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 8) |= 0x10u;
    *((_BYTE *)this + 24) = v6;
  }
  return result;
}

void sub_18D144B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::~ReceiverClockModel(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this)
{
  *(_QWORD *)this = &off_1E25BBD80;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::~ReceiverClockModel(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::New(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BBD80;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  unsigned __int8 *v14;
  uint64_t result;
  unsigned int v16;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_29;
        v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v16) & 1) == 0)
          return 0;
        *((_DWORD *)this + 2) = v16;
        *((_DWORD *)this + 8) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_29;
LABEL_14:
        v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v16) & 1) == 0)
          return 0;
        *((_DWORD *)this + 3) = v16;
        *((_DWORD *)this + 8) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v16) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v16;
        *((_DWORD *)this + 8) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v16) & 1) != 0)
        {
          *((_DWORD *)this + 5) = v16;
          *((_DWORD *)this + 8) |= 8u;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v11 < v10 && *v11 == 40)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
LABEL_33:
            v16 = 0;
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
              if (!(_DWORD)result)
                return result;
              v13 = v16;
              v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v10 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v13 = *v12;
              v14 = (unsigned __int8 *)(v12 + 1);
              *((_QWORD *)a2 + 1) = v14;
            }
            *((_BYTE *)this + 24) = v13 != 0;
            *((_DWORD *)this + 8) |= 0x10u;
            if (v14 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_19;
        goto LABEL_29;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_24;
        goto LABEL_29;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_33;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0)
      v2 += 5;
    if ((v1 & 4) != 0)
      v2 += 5;
    if ((v1 & 8) != 0)
      v2 += 5;
    if ((v1 & 0x10) != 0)
      v1 = v2 + 2;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *this, CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *a2)
{
  int v2;
  int v3;
  int v4;
  float result;
  char v6;
  int v7;
  int v8;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    result = *((float *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((float *)a2 + 5) = result;
    v6 = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v6;
    v7 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v7;
    v8 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ReceiverClockModel");
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::ReceiverClockCorrections(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *a2)
{
  *(_QWORD *)this = &off_1E25BCA28;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergeFrom(this, a2);
  return this;
}

void sub_18D145190(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((double *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0)
      return result;
LABEL_9:
    result = *((double *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((double *)this + 5) = result;
  }
  return result;
}

void sub_18D1452B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::~ReceiverClockCorrections(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  *(_QWORD *)this = &off_1E25BCA28;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::~ReceiverClockCorrections(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::New(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BCA28;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 52))
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_34;
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v12;
        *((_DWORD *)this + 13) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_34;
LABEL_14:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v12;
        *((_DWORD *)this + 13) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v12;
        *((_DWORD *)this + 13) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 4) = v12;
        *((_DWORD *)this + 13) |= 8u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_29:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 5) = v12;
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_34;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_29;
        goto LABEL_34;
      default:
        v6 = TagFallback & 7;
LABEL_34:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 52);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v4 + 40), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  if ((*(_DWORD *)(v4 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v4 + 40), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 52);
  if (*((_BYTE *)this + 52))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v2 += 9;
    if ((v1 & 0x10) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 12) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *this, CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  int v7;
  int v8;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    result = *((double *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((double *)a2 + 5) = result;
    v7 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v7;
    v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ReceiverClockCorrections");
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  double result;

  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::ReceiverToGpsTimeConversion(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *a2)
{
  *(_QWORD *)this = &off_1E25BCE60;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergeFrom(this, a2);
  return this;
}

void sub_18D1458F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(result) = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 4) = LODWORD(result);
    v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    LODWORD(result) = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 5) = LODWORD(result);
    v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 10) |= 8u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 10) & 0x10) == 0)
      return result;
LABEL_9:
    LODWORD(result) = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 8) = LODWORD(result);
  }
  return result;
}

void sub_18D145A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::~ReceiverToGpsTimeConversion(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  *(_QWORD *)this = &off_1E25BCE60;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::~ReceiverToGpsTimeConversion(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::New(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BCE60;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  unsigned int v15[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        *(_QWORD *)v15 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v15);
          if (!(_DWORD)result)
            return result;
          v9 = *(_QWORD *)v15;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 21)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
LABEL_27:
        v15[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v15) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v15[0];
        *((_DWORD *)this + 10) |= 2u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_31:
        v15[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v15) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v15[0];
        *((_DWORD *)this + 10) |= 4u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_35:
        *(_QWORD *)v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v15) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v15;
        *((_DWORD *)this + 10) |= 8u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_39:
        v15[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v15) & 1) != 0)
        {
          *((_DWORD *)this + 8) = v15[0];
          *((_DWORD *)this + 10) |= 0x10u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_31;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_35;
        goto LABEL_19;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
        goto LABEL_39;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 32), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 40) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 32), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 40) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 9) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *this, CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    result = *((float *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((float *)a2 + 8) = result;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ReceiverToGpsTimeConversion");
}

double CoreNavigation::CLP::LogEntry::PrivateData::Clock::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::Clock *CoreNavigation::CLP::LogEntry::PrivateData::Clock::Clock(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this, const CoreNavigation::CLP::LogEntry::PrivateData::Clock *a2)
{
  *(_QWORD *)this = &off_1E25BD568;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergeFrom(this, a2);
  return this;
}

void sub_18D14609C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this, const CoreNavigation::CLP::LogEntry::PrivateData::Clock *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Clock *v3;
  double result;
  int v5;
  uint64_t v6;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *v12;
  _BYTE v13[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 44) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    *((_DWORD *)v3 + 11) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *)*((_QWORD *)v3 + 2);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)operator new();
      v7 = this;
      *((_DWORD *)this + 7) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BBD80;
      *((_BYTE *)this + 24) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *)*((_QWORD *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel **)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                                                                    + 16);
    }
    *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergeFrom(v7, v8);
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  v6 = *((_QWORD *)a2 + 1);
  *((_DWORD *)v3 + 11) |= 1u;
  *((_QWORD *)v3 + 1) = v6;
  v5 = *((_DWORD *)a2 + 11);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_15:
  *((_DWORD *)v3 + 11) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *)*((_QWORD *)v3 + 3);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)operator new();
    v9 = this;
    *(_QWORD *)this = &off_1E25BCA28;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 40) = 0u;
    *((_QWORD *)v3 + 3) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *)*((_QWORD *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections **)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                                                                         + 24);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergeFrom(v9, v10);
  if ((*((_DWORD *)a2 + 11) & 8) != 0)
  {
LABEL_20:
    *((_DWORD *)v3 + 11) |= 8u;
    v11 = (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *)*((_QWORD *)v3 + 4);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25BCE60;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_DWORD *)this + 10) = 0;
      *((_QWORD *)v3 + 4) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *)*((_QWORD *)a2 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                                                                              + 32);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18D1462B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Clock::~Clock(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  *(_QWORD *)this = &off_1E25BD568;
  CoreNavigation::CLP::LogEntry::PrivateData::Clock::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Clock::~Clock(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Clock::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Clock *)CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Clock::New(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BD568;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  LOBYTE(v1) = *(_BYTE *)(this + 44);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 32))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_BYTE *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 32) = 0;
        v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 52))
        {
          *(_QWORD *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 52) = 0;
        v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 40))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 32) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 40) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        v11 = *((_DWORD *)this + 11) | 1;
        *((_DWORD *)this + 11) = v11;
        if ((unint64_t)v10 < v8 && *v10 == 18)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        v11 = *((_DWORD *)this + 11);
LABEL_26:
        *((_DWORD *)this + 11) = v11 | 2;
        v13 = *((_QWORD *)this + 2);
        if (!v13)
        {
          v13 = operator new();
          *(_DWORD *)(v13 + 28) = 0;
          *(_DWORD *)(v13 + 32) = 0;
          *(_QWORD *)(v13 + 8) = 0;
          *(_QWORD *)(v13 + 16) = 0;
          *(_QWORD *)v13 = &off_1E25BBD80;
          *(_BYTE *)(v13 + 24) = 0;
          *((_QWORD *)this + 2) = v13;
        }
        v34 = 0;
        v14 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0;
        }
        else
        {
          v34 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)a2 + 14);
        v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *)v13, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v17 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)a2 + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_40:
        *((_DWORD *)this + 11) |= 4u;
        v21 = *((_QWORD *)this + 3);
        if (!v21)
        {
          v21 = operator new();
          *(_QWORD *)v21 = &off_1E25BCA28;
          *(_OWORD *)(v21 + 8) = 0u;
          *(_OWORD *)(v21 + 24) = 0u;
          *(_OWORD *)(v21 + 40) = 0u;
          *((_QWORD *)this + 3) = v21;
        }
        v35 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))return 0;
        }
        else
        {
          v35 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *)v21, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v18)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_54:
        *((_DWORD *)this + 11) |= 8u;
        v28 = *((_QWORD *)this + 4);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)v28 = &off_1E25BCE60;
          *(_OWORD *)(v28 + 8) = 0u;
          *(_OWORD *)(v28 + 24) = 0u;
          *(_DWORD *)(v28 + 40) = 0;
          *((_QWORD *)this + 4) = v28;
        }
        v36 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
        }
        else
        {
          v36 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v18)
          *((_DWORD *)a2 + 14) = v33;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_40;
        goto LABEL_18;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        goto LABEL_54;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    goto LABEL_13;
  }
LABEL_10:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_13:
    v9 = *(_QWORD *)(v5 + 32);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  int v2;
  uint64_t v3;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *v4;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *v5;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  int v9;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_22;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 11);
    if ((v2 & 2) == 0)
      goto LABEL_10;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_10;
  }
  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel *)*((_QWORD *)this + 2);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel **)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                                                            + 16);
  }
  v3 = v3 + CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockModel::ByteSize(v4) + 2;
  v2 = *((_DWORD *)this + 11);
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_22;
    goto LABEL_16;
  }
  v5 = (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections *)*((_QWORD *)this + 3);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections **)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                                                                  + 24);
  }
  v3 = v3
     + CoreNavigation::CLP::LogEntry::PrivateData::ReceiverClockCorrections::ByteSize(v5)
     + 2;
  if ((*((_DWORD *)this + 11) & 8) != 0)
  {
LABEL_16:
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion *)*((_QWORD *)this + 4);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v6 = *(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::Clock::default_instance_
                                                                                       + 32);
    }
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverToGpsTimeConversion::ByteSize(v6);
    v8 = (int)v7;
    if (v7 >= 0x80)
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
    else
      v9 = 1;
    v3 = (v3 + v8 + v9 + 1);
  }
LABEL_22:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Clock::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Clock::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this, const CoreNavigation::CLP::LogEntry::PrivateData::Clock *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Clock *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Clock *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Clock::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Clock *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    v3 = *(_QWORD *)(this + 16);
    v4 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(this + 16) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Clock::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Clock");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MeasurementReport(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this, const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BB6F0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MergeFrom(this, a2);
  return this;
}

void sub_18D146C7C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this, const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::Measurement *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::Clock *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::Clock *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Measurement **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25BA0E8;
        *(_DWORD *)(v11 + 108) = 0;
        *(_DWORD *)(v11 + 112) = 0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 56) = 0u;
        *(_OWORD *)(v11 + 72) = 0u;
        *(_OWORD *)(v11 + 88) = 0u;
        *(_BYTE *)(v11 + 104) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)v4;
      *(_QWORD *)v4 = &off_1E25BD568;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *(_QWORD *)(v4 + 40) = 0;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::Clock *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Clock **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_
                                                                        + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D146E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::~MeasurementReport(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BB6F0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::~MeasurementReport(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *)CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::New(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BB6F0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    this = *(_QWORD *)(this + 8);
    if (this)
      this = CoreNavigation::CLP::LogEntry::PrivateData::Clock::Clear(this);
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BD568;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_QWORD *)(v8 + 40) = 0;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Clock::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::Clock *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E25BA0E8;
          *(_DWORD *)(v19 + 108) = 0;
          *(_DWORD *)(v19 + 112) = 0;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *(_OWORD *)(v19 + 40) = 0u;
          *(_OWORD *)(v19 + 56) = 0u;
          *(_OWORD *)(v19 + 72) = 0u;
          *(_OWORD *)(v19 + 88) = 0u;
          *(_BYTE *)(v19 + 104) = 0;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(_QWORD *)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Measurement::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::Measurement *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  int v2;
  CoreNavigation::CLP::LogEntry::PrivateData::Clock *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = (CoreNavigation::CLP::LogEntry::PrivateData::Clock *)*((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v3 = *(CoreNavigation::CLP::LogEntry::PrivateData::Clock **)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::default_instance_
                                                                 + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Clock::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  v7 = *((_DWORD *)this + 6);
  v8 = (v7 + v2);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Measurement::ByteSize(*(_QWORD *)(*((_QWORD *)this + 2) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this, const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *this, CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReport::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MeasurementReport");
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::Wgs84Ecef(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this, const CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *a2)
{
  *(_QWORD *)this = &off_1E25BDC70;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergeFrom(this, a2);
  return this;
}

void sub_18D147688(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this, const CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D14776C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::~Wgs84Ecef(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  *(_QWORD *)this = &off_1E25BDC70;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::~Wgs84Ecef(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::New(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDC70;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this, const CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *this, CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Wgs84Ecef");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::SvBandCorrections(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *a2)
{
  *(_QWORD *)this = &off_1E25BB9C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergeFrom(this, a2);
  return this;
}

void sub_18D147C68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *a2)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 6);
      if (v5 >= 0xD)
        __assert_rtn("set_band", "CoreNavigationCLPGnssMeasApi.pb.h", 10571, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 6) = v5;
      v4 = *((_DWORD *)a2 + 11);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 11) |= 2u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0)
          goto LABEL_10;
        goto LABEL_14;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 11) |= 4u;
    *((_QWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_10:
      if ((v4 & 0x10) == 0)
        return;
LABEL_15:
      v9 = *((_DWORD *)a2 + 7);
      if (v9 >= 3)
        __assert_rtn("set_ionospheric_model", "CoreNavigationCLPGnssMeasApi.pb.h", 10660, "::CoreNavigation::CLP::LogEntry::PrivateData::IonosphericCorrectionSource_IsValid(value)");
      *((_DWORD *)this + 11) |= 0x10u;
      *((_DWORD *)this + 7) = v9;
      return;
    }
LABEL_14:
    v8 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((_QWORD *)this + 4) = v8;
    if ((*((_DWORD *)a2 + 11) & 0x10) == 0)
      return;
    goto LABEL_15;
  }
}

void sub_18D147DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::~SvBandCorrections(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  *(_QWORD *)this = &off_1E25BB9C0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::~SvBandCorrections(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::New(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BB9C0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  uint64_t result;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  unsigned int v16;
  unsigned int v17[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v17[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!(_DWORD)result)
            return result;
          v8 = v17[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 0xC)
        {
          *((_DWORD *)this + 11) |= 1u;
          *((_DWORD *)this + 6) = v8;
        }
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 < *((_QWORD *)a2 + 2) && *v12 == 17)
        {
          *((_QWORD *)a2 + 1) = v12 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_19;
LABEL_30:
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v17;
        *((_DWORD *)this + 11) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_34:
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v17;
        *((_DWORD *)this + 11) |= 4u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_38:
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) != 0)
        {
          *((_QWORD *)this + 4) = *(_QWORD *)v17;
          *((_DWORD *)this + 11) |= 8u;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v15 < v9 && *v15 == 40)
          {
            v10 = v15 + 1;
            *((_QWORD *)a2 + 1) = v10;
LABEL_42:
            v17[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
              if (!(_DWORD)result)
                return result;
              v16 = v17[0];
            }
            else
            {
              v16 = *v10;
              *((_QWORD *)a2 + 1) = v10 + 1;
            }
            if (v16 <= 2)
            {
              *((_DWORD *)this + 11) |= 0x10u;
              *((_DWORD *)this + 7) = v16;
            }
            if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_34;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_38;
        goto LABEL_19;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 24), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 44) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 11);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 0x10) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if ((v6 & 0x80000000) != 0)
      {
        v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      }
      else
      {
        v7 = 2;
      }
      v4 = (v7 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *this, CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  int v6;
  int v7;
  int v8;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
    v7 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
    v8 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SvBandCorrections");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::SvPositionAtTime(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *a2)
{
  *(_QWORD *)this = &off_1E25BB240;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergeFrom(this, a2);
  return this;
}

void sub_18D1484B4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)v3 + 7) |= 1u;
      *((double *)v3 + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)v3 + 7) |= 2u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *)*((_QWORD *)v3 + 2);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BDC70;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 2) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *)*((_QWORD *)a2 + 2);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef **)(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_
                                                                             + 16);
      }
      return CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergeFrom(v6, v7);
    }
  }
  return result;
}

void sub_18D1485D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::~SvPositionAtTime(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BB240;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *)CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::~SvPositionAtTime(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *)CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::New(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BB240;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 28);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  int v7;
  _BYTE *v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  uint64_t result;
  unint64_t v17;
  unsigned int v18;

  while (1)
  {
    do
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 == 1)
          break;
        if (TagFallback >> 3 == 2)
        {
          v6 = TagFallback & 7;
          if (v6 == 2)
          {
            v7 = *((_DWORD *)this + 7);
            goto LABEL_15;
          }
        }
        else
        {
          v6 = TagFallback & 7;
        }
LABEL_21:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
      v6 = TagFallback & 7;
      if (v6 != 1)
        goto LABEL_21;
      v17 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v17) & 1) == 0)
        return 0;
      *((_QWORD *)this + 1) = v17;
      v7 = *((_DWORD *)this + 7) | 1;
      *((_DWORD *)this + 7) = v7;
      v8 = (_BYTE *)*((_QWORD *)a2 + 1);
    }
    while ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 18);
    *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_15:
    *((_DWORD *)this + 7) = v7 | 2;
    v9 = *((_QWORD *)this + 2);
    if (!v9)
    {
      v9 = operator new();
      *(_QWORD *)v9 = &off_1E25BDC70;
      *(_OWORD *)(v9 + 8) = 0u;
      *(_OWORD *)(v9 + 24) = 0u;
      *((_QWORD *)this + 2) = v9;
    }
    v18 = 0;
    v10 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))
        return 0;
    }
    else
    {
      v18 = *v10;
      *((_QWORD *)a2 + 1) = v10 + 1;
    }
    v11 = *((_DWORD *)a2 + 14);
    v12 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v11 + 1;
    if (v11 >= v12)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::Wgs84Ecef *)v9, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v13 = *((_DWORD *)a2 + 14);
    v14 = __OFSUB__(v13, 1);
    v15 = v13 - 1;
    if (v15 < 0 == v14)
      *((_DWORD *)a2 + 14) = v15;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    if ((*(_DWORD *)(v5 + 28) & 2) == 0)
      return this;
  }
  else if ((v6 & 2) == 0)
  {
    return this;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_ + 16);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  v2 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      v4 = *((_QWORD *)this + 2);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::default_instance_ + 16);
      }
      v5 = *(unsigned __int8 *)(v4 + 36);
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v6 += 9;
      if (*(_BYTE *)(v4 + 36))
        v7 = v6;
      else
        v7 = 0;
      *(_DWORD *)(v4 + 32) = v7;
      v3 = (v3 | 2) + v7;
    }
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 6) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *this, CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *a2)
{
  double result;
  uint64_t v3;

  if (a2 != this)
  {
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SvPositionAtTime");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::SharedCtor(_QWORD *this)
{
  this[9] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::PolynomialOrbit(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this, const CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *a2)
{
  *(_QWORD *)this = &off_1E25BAF70;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergeFrom(this, a2);
  return this;
}

void sub_18D148C04(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *((_QWORD *)v1 + 7);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)v1 + 5);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8000313F17);
  v5 = *((_QWORD *)v1 + 3);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this, const CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *a2)
{
  double result;
  int v5;
  int v6;
  int v7;
  int v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    sub_18D09EC0C((_DWORD *)this + 6, *((_DWORD *)this + 8) + v5);
    memcpy((void *)(*((_QWORD *)this + 3) + 8 * *((int *)this + 8)), *((const void **)a2 + 3), 8 * *((int *)a2 + 8));
    *((_DWORD *)this + 8) += *((_DWORD *)a2 + 8);
  }
  v6 = *((_DWORD *)a2 + 12);
  if (v6)
  {
    sub_18D09EC0C((_DWORD *)this + 10, *((_DWORD *)this + 12) + v6);
    memcpy((void *)(*((_QWORD *)this + 5) + 8 * *((int *)this + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  v7 = *((_DWORD *)a2 + 16);
  if (v7)
  {
    sub_18D09EC0C((_DWORD *)this + 14, *((_DWORD *)this + 16) + v7);
    memcpy((void *)(*((_QWORD *)this + 7) + 8 * *((int *)this + 16)), *((const void **)a2 + 7), 8 * *((int *)a2 + 16));
    *((_DWORD *)this + 16) += *((_DWORD *)a2 + 16);
  }
  LOBYTE(v8) = *((_BYTE *)a2 + 76);
  if ((_BYTE)v8)
  {
    if ((*((_BYTE *)a2 + 76) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 19) |= 1u;
      *((double *)this + 1) = result;
      v8 = *((_DWORD *)a2 + 19);
    }
    if ((v8 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 19) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D148DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::~PolynomialOrbit(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_1E25BAF70;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  v2 = *((_QWORD *)this + 7);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8000313F17);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)this + 3);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::~PolynomialOrbit(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::New(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BAF70;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_QWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 76))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  signed int v17;
  int v18;
  int i;
  uint64_t v20;
  int v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  signed int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  signed int v39;
  int v40;
  int v41;
  uint64_t v42;
  _BYTE *v43;
  _DWORD *v44;
  _DWORD *v45;
  unint64_t v46[6];

  v4 = (_DWORD *)((char *)this + 56);
  v44 = (_DWORD *)((char *)this + 24);
  v45 = (_DWORD *)((char *)this + 40);
LABEL_2:
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_31;
        v46[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v46) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v46[0];
        *((_DWORD *)this + 19) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_31;
LABEL_15:
        v46[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v46) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v46[0];
        *((_DWORD *)this + 19) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 33)
          goto LABEL_34;
        continue;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_35;
        if (v7 != 2)
          goto LABEL_31;
        result = sub_18D0C7FD4(a2, v44);
        if (!(_DWORD)result)
          return result;
        while (2)
        {
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2))
          {
            v21 = *v9;
            if (v21 == 33)
            {
LABEL_34:
              *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_35:
              v46[0] = 0;
              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v46) & 1) == 0)
                return 0;
              v11 = v46[0];
              v12 = *((_DWORD *)this + 8);
              if (v12 == *((_DWORD *)this + 9))
              {
                sub_18D09EC0C(v44, v12 + 1);
                v12 = *((_DWORD *)this + 8);
              }
              v13 = *((_QWORD *)this + 3);
              v14 = v12 + 1;
              *((_DWORD *)this + 8) = v12 + 1;
              *(_QWORD *)(v13 + 8 * v12) = v11;
              v15 = *((_QWORD *)a2 + 1);
              v16 = *((_DWORD *)a2 + 4) - v15;
              if (v16 >= 1)
              {
                v17 = v16 / 9u;
                v18 = v17 >= *((_DWORD *)this + 9) - v14 ? *((_DWORD *)this + 9) - v14 : v17;
                if (v18 >= 1)
                {
                  for (i = 0; i != v18; ++i)
                  {
                    if (*(_BYTE *)v15 != 33)
                      goto LABEL_49;
                    v20 = *(_QWORD *)(v15 + 1);
                    if (v14 >= *((_DWORD *)this + 9))
                    {
                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v46);
                      v14 = *((_DWORD *)this + 8);
                      v13 = *((_QWORD *)this + 3);
                    }
                    *((_DWORD *)this + 8) = v14 + 1;
                    *(_QWORD *)(v13 + 8 * v14) = v20;
                    v15 += 9;
                    ++v14;
                  }
                  i = v18;
LABEL_49:
                  if (i)
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                  continue;
                }
              }
              continue;
            }
            if (v21 == 41)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_55:
                v46[0] = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v46) & 1) == 0)
                  return 0;
                v22 = v46[0];
                v23 = *((_DWORD *)this + 12);
                if (v23 == *((_DWORD *)this + 13))
                {
                  sub_18D09EC0C(v45, v23 + 1);
                  v23 = *((_DWORD *)this + 12);
                }
                v24 = *((_QWORD *)this + 5);
                v25 = v23 + 1;
                *((_DWORD *)this + 12) = v23 + 1;
                *(_QWORD *)(v24 + 8 * v23) = v22;
                v26 = *((_QWORD *)a2 + 1);
                v27 = *((_DWORD *)a2 + 4) - v26;
                if (v27 >= 1)
                {
                  v28 = v27 / 9u;
                  v29 = v28 >= *((_DWORD *)this + 13) - v25 ? *((_DWORD *)this + 13) - v25 : v28;
                  if (v29 >= 1)
                  {
                    v30 = 0;
                    while (*(_BYTE *)v26 == 41)
                    {
                      v31 = *(_QWORD *)(v26 + 1);
                      if (v25 >= *((_DWORD *)this + 13))
                      {
                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v46);
                        v25 = *((_DWORD *)this + 12);
                        v24 = *((_QWORD *)this + 5);
                      }
                      *((_DWORD *)this + 12) = v25 + 1;
                      *(_QWORD *)(v24 + 8 * v25) = v31;
                      ++v30;
                      v26 += 9;
                      ++v25;
                      if (v29 == v30)
                      {
                        v30 = v29;
                        break;
                      }
                    }
                    if (v30)
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                  }
                }
LABEL_71:
                v9 = (_BYTE *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v9 >= *((_QWORD *)a2 + 2))
                  goto LABEL_2;
                v32 = *v9;
              }
              while (v32 == 41);
              if (v32 == 49)
                goto LABEL_74;
            }
          }
          goto LABEL_2;
        }
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_55;
        if (v7 != 2)
          goto LABEL_31;
        result = sub_18D0C7FD4(a2, v45);
        if (!(_DWORD)result)
          return result;
        goto LABEL_71;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_75;
        if (v7 == 2)
        {
          result = sub_18D0C7FD4(a2, v4);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v9 = (_BYTE *)*((_QWORD *)a2 + 1);
            v43 = (_BYTE *)*((_QWORD *)a2 + 2);
            if (v9 >= v43 || *v9 != 49)
              break;
LABEL_74:
            *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_75:
            v46[0] = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v46) & 1) == 0)
              return 0;
            v33 = v46[0];
            v34 = *((_DWORD *)this + 16);
            if (v34 == *((_DWORD *)this + 17))
            {
              sub_18D09EC0C(v4, v34 + 1);
              v34 = *((_DWORD *)this + 16);
            }
            v35 = *((_QWORD *)this + 7);
            v36 = v34 + 1;
            *((_DWORD *)this + 16) = v34 + 1;
            *(_QWORD *)(v35 + 8 * v34) = v33;
            v37 = *((_QWORD *)a2 + 1);
            v38 = *((_DWORD *)a2 + 4) - v37;
            if (v38 >= 1)
            {
              v39 = v38 / 9u;
              v40 = v39 >= *((_DWORD *)this + 17) - v36 ? *((_DWORD *)this + 17) - v36 : v39;
              if (v40 >= 1)
              {
                v41 = 0;
                while (*(_BYTE *)v37 == 49)
                {
                  v42 = *(_QWORD *)(v37 + 1);
                  if (v36 >= *((_DWORD *)this + 17))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v46);
                    v36 = *((_DWORD *)this + 16);
                    v35 = *((_QWORD *)this + 7);
                  }
                  *((_DWORD *)this + 16) = v36 + 1;
                  *(_QWORD *)(v35 + 8 * v36) = v42;
                  ++v41;
                  v37 += 9;
                  ++v36;
                  if (v40 == v41)
                  {
                    v41 = v40;
                    break;
                  }
                }
                if (v41)
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
          if (v9 == v43 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_31:
        if (v7 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      default:
        v7 = TagFallback & 7;
        goto LABEL_31;
    }
  }
}

void sub_18D149534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = this;
  v5 = *(_DWORD *)(this + 76);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 76);
  }
  if ((v5 & 2) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if (*(int *)(v4 + 32) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(*(_QWORD *)(v4 + 24) + 8 * v6++), a3);
    while (v6 < *(int *)(v4 + 32));
  }
  if (*(int *)(v4 + 48) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(*(_QWORD *)(v4 + 40) + 8 * v7++), a3);
    while (v7 < *(int *)(v4 + 48));
  }
  if (*(int *)(v4 + 64) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(*(_QWORD *)(v4 + 56) + 8 * v8++), a3);
    while (v8 < *(int *)(v4 + 64));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  v1 = *((unsigned __int8 *)this + 76);
  v2 = (v1 << 31 >> 31) & 9;
  if ((v1 & 2) != 0)
    v2 += 9;
  if (*((_BYTE *)this + 76))
    v3 = v2;
  else
    v3 = 0;
  v4 = (9 * (*((_DWORD *)this + 12) + *((_DWORD *)this + 8) + *((_DWORD *)this + 16)) + v3);
  *((_DWORD *)this + 18) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this, const CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::Swap(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *this, CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    v5 = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 3) = v4;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = v5;
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    v8 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 5) = v7;
    v9 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = v8;
    *((_QWORD *)a2 + 6) = v9;
    v10 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    result = *((double *)a2 + 8);
    *((_QWORD *)a2 + 7) = v10;
    v12 = *((_QWORD *)this + 8);
    *((double *)this + 8) = result;
    *((_QWORD *)a2 + 8) = v12;
    LODWORD(v10) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v10;
    LODWORD(v10) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v10;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PolynomialOrbit");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  result = 0.0;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_QWORD *)this + 12) = 0;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SvInfo(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *a2)
{
  *(_QWORD *)this = &off_1E25BD6D0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 0;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 108) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D1498BC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t *v2;

  sub_18D09ECA4(v1 + 13);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *v29;
  const CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v38;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvId *v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v45);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime **)(*((_QWORD *)a2 + 3) + 8 * v4);
      v6 = *((_DWORD *)this + 9);
      v7 = *((int *)this + 8);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)((char *)this + 24));
          v6 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v6 + 1;
        v9 = (CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *)operator new();
        *(_QWORD *)v9 = &off_1E25BB240;
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *((_QWORD *)v9 + 3) = 0;
        v10 = *((_QWORD *)this + 3);
        v11 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 3);
        *((_DWORD *)this + 8) = v7 + 1;
        v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime **)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 8));
  }
  v12 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)((char *)this + 104));
  if (*((int *)a2 + 28) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections **)(*((_QWORD *)a2 + 13) + 8 * v13);
      v15 = *((_DWORD *)this + 29);
      v16 = *((int *)this + 28);
      if ((int)v16 >= v15)
      {
        if (v15 == *((_DWORD *)this + 30))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)((char *)this + 104));
          v15 = *((_DWORD *)this + 29);
        }
        *((_DWORD *)this + 29) = v15 + 1;
        v18 = operator new();
        *(_QWORD *)v18 = &off_1E25BB9C0;
        *(_OWORD *)(v18 + 8) = 0u;
        *(_OWORD *)(v18 + 24) = 0u;
        *(_QWORD *)(v18 + 40) = 0;
        v19 = *((_QWORD *)this + 13);
        v20 = *((int *)this + 28);
        *((_DWORD *)this + 28) = v20 + 1;
        *(_QWORD *)(v19 + 8 * v20) = v18;
      }
      else
      {
        v17 = *((_QWORD *)this + 13);
        *((_DWORD *)this + 28) = v16 + 1;
        v18 = *(_QWORD *)(v17 + 8 * v16);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *)v18, v14);
      ++v13;
    }
    while (v13 < *((int *)a2 + 28));
  }
  v21 = *((_DWORD *)a2 + 43);
  if (!(_BYTE)v21)
    goto LABEL_28;
  if ((v21 & 1) != 0)
  {
    *((_DWORD *)this + 43) |= 1u;
    v38 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)this + 1);
    if (!v38)
    {
      v12 = operator new();
      v38 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)v12;
      *(_QWORD *)(v12 + 8) = 0;
      *(_QWORD *)(v12 + 16) = 0;
      *(_QWORD *)v12 = &off_1E25BD478;
      *(_DWORD *)(v12 + 24) = 0;
      *((_QWORD *)this + 1) = v12;
    }
    v39 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)a2 + 1);
    if (!v39)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v12);
      v39 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_
                                                                       + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(v38, v39);
    v21 = *((_DWORD *)a2 + 43);
    if ((v21 & 2) == 0)
    {
LABEL_22:
      if ((v21 & 4) == 0)
        goto LABEL_23;
      goto LABEL_80;
    }
  }
  else if ((v21 & 2) == 0)
  {
    goto LABEL_22;
  }
  v40 = *((_QWORD *)a2 + 2);
  *((_DWORD *)this + 43) |= 2u;
  *((_QWORD *)this + 2) = v40;
  v21 = *((_DWORD *)a2 + 43);
  if ((v21 & 4) == 0)
  {
LABEL_23:
    if ((v21 & 0x10) == 0)
      goto LABEL_24;
    goto LABEL_82;
  }
LABEL_80:
  v41 = *((_DWORD *)a2 + 14);
  if (v41 >= 7)
    __assert_rtn("set_position_source", "CoreNavigationCLPGnssMeasApi.pb.h", 10942, "::CoreNavigation::CLP::LogEntry::PrivateData::SvPositionSource_IsValid(value)");
  *((_DWORD *)this + 43) |= 4u;
  *((_DWORD *)this + 14) = v41;
  v21 = *((_DWORD *)a2 + 43);
  if ((v21 & 0x10) == 0)
  {
LABEL_24:
    if ((v21 & 0x20) == 0)
      goto LABEL_25;
LABEL_83:
    v43 = *((_QWORD *)a2 + 8);
    *((_DWORD *)this + 43) |= 0x20u;
    *((_QWORD *)this + 8) = v43;
    v21 = *((_DWORD *)a2 + 43);
    if ((v21 & 0x40) == 0)
    {
LABEL_26:
      if ((v21 & 0x80) == 0)
        goto LABEL_28;
      goto LABEL_27;
    }
    goto LABEL_84;
  }
LABEL_82:
  v42 = *((_QWORD *)a2 + 6);
  *((_DWORD *)this + 43) |= 0x10u;
  *((_QWORD *)this + 6) = v42;
  v21 = *((_DWORD *)a2 + 43);
  if ((v21 & 0x20) != 0)
    goto LABEL_83;
LABEL_25:
  if ((v21 & 0x40) == 0)
    goto LABEL_26;
LABEL_84:
  v44 = *((_QWORD *)a2 + 9);
  *((_DWORD *)this + 43) |= 0x40u;
  *((_QWORD *)this + 9) = v44;
  v21 = *((_DWORD *)a2 + 43);
  if ((v21 & 0x80) != 0)
  {
LABEL_27:
    v22 = *((_DWORD *)a2 + 15);
    *((_DWORD *)this + 43) |= 0x80u;
    *((_DWORD *)this + 15) = v22;
    v21 = *((_DWORD *)a2 + 43);
  }
LABEL_28:
  if ((v21 & 0xFF00) != 0)
  {
    if ((v21 & 0x100) != 0)
    {
      v23 = *((_DWORD *)a2 + 20);
      *((_DWORD *)this + 43) |= 0x100u;
      *((_DWORD *)this + 20) = v23;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x200) != 0)
    {
      v24 = *((_DWORD *)a2 + 21);
      if (v24 >= 5)
        __assert_rtn("set_over_the_air_from_sv_health_l1", "CoreNavigationCLPGnssMeasApi.pb.h", 11100, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x200u;
      *((_DWORD *)this + 21) = v24;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x400) != 0)
    {
      v25 = *((_DWORD *)a2 + 22);
      if (v25 >= 5)
        __assert_rtn("set_over_the_air_from_other_sv_health_l1", "CoreNavigationCLPGnssMeasApi.pb.h", 11123, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x400u;
      *((_DWORD *)this + 22) = v25;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x800) != 0)
    {
      v26 = *((_DWORD *)a2 + 23);
      if (v26 >= 5)
        __assert_rtn("set_assistance_file_health_l1", "CoreNavigationCLPGnssMeasApi.pb.h", 11146, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x800u;
      *((_DWORD *)this + 23) = v26;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x1000) != 0)
    {
      v27 = *((_DWORD *)a2 + 24);
      if (v27 >= 5)
        __assert_rtn("set_ms_based_health_l1", "CoreNavigationCLPGnssMeasApi.pb.h", 11169, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x1000u;
      *((_DWORD *)this + 24) = v27;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x2000) != 0)
    {
      v28 = *((_DWORD *)a2 + 25);
      if (v28 >= 5)
        __assert_rtn("set_integrity_health_l1", "CoreNavigationCLPGnssMeasApi.pb.h", 11192, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x2000u;
      *((_DWORD *)this + 25) = v28;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x8000) != 0)
    {
      *((_DWORD *)this + 43) |= 0x8000u;
      v29 = (CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *)*((_QWORD *)this + 16);
      if (!v29)
      {
        v12 = operator new();
        v29 = (CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *)v12;
        *(_QWORD *)v12 = &off_1E25BAF70;
        *(_OWORD *)(v12 + 8) = 0u;
        *(_OWORD *)(v12 + 24) = 0u;
        *(_OWORD *)(v12 + 40) = 0u;
        *(_OWORD *)(v12 + 56) = 0u;
        *(_QWORD *)(v12 + 72) = 0;
        *((_QWORD *)this + 16) = v12;
      }
      v30 = (const CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *)*((_QWORD *)a2 + 16);
      if (!v30)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v12);
        v30 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit **)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_
                                                                                    + 128);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergeFrom(v29, v30);
      v21 = *((_DWORD *)a2 + 43);
    }
  }
  if ((v21 & 0xFF0000) != 0)
  {
    if ((v21 & 0x10000) != 0)
    {
      v31 = *((_DWORD *)a2 + 34);
      if (v31 >= 5)
        __assert_rtn("set_over_the_air_from_sv_health_l5", "CoreNavigationCLPGnssMeasApi.pb.h", 11282, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x10000u;
      *((_DWORD *)this + 34) = v31;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x20000) != 0)
    {
      v32 = *((_DWORD *)a2 + 35);
      if (v32 >= 5)
        __assert_rtn("set_over_the_air_from_other_sv_health_l5", "CoreNavigationCLPGnssMeasApi.pb.h", 11305, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x20000u;
      *((_DWORD *)this + 35) = v32;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x40000) != 0)
    {
      v33 = *((_DWORD *)a2 + 36);
      if (v33 >= 5)
        __assert_rtn("set_assistance_file_health_l5", "CoreNavigationCLPGnssMeasApi.pb.h", 11328, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x40000u;
      *((_DWORD *)this + 36) = v33;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x80000) != 0)
    {
      v34 = *((_DWORD *)a2 + 37);
      if (v34 >= 5)
        __assert_rtn("set_ms_based_health_l5", "CoreNavigationCLPGnssMeasApi.pb.h", 11351, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x80000u;
      *((_DWORD *)this + 37) = v34;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x100000) != 0)
    {
      v35 = *((_DWORD *)a2 + 40);
      if (v35 >= 5)
        __assert_rtn("set_integrity_health_l5", "CoreNavigationCLPGnssMeasApi.pb.h", 11374, "::CoreNavigation::CLP::LogEntry::PrivateData::SvHealthIndication_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x100000u;
      *((_DWORD *)this + 40) = v35;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x200000) != 0)
    {
      v36 = *((_QWORD *)a2 + 19);
      *((_DWORD *)this + 43) |= 0x200000u;
      *((_QWORD *)this + 19) = v36;
      v21 = *((_DWORD *)a2 + 43);
    }
    if ((v21 & 0x400000) != 0)
    {
      v37 = *((_DWORD *)a2 + 41);
      if (v37 >= 4)
        __assert_rtn("set_sv_reference_point", "CoreNavigationCLPGnssMeasApi.pb.h", 11419, "::CoreNavigation::CLP::LogEntry::PrivateData::SvReferencePoint_IsValid(value)");
      *((_DWORD *)this + 43) |= 0x400000u;
      *((_DWORD *)this + 41) = v37;
    }
  }
}

void sub_18D14A020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::~SvInfo(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  *(_QWORD *)this = &off_1E25BD6D0;
  CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 13);
  sub_18D09ECA4((uint64_t *)this + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::~SvInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 16);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 168) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BD6D0;
  result = 0.0;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 108) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  v2 = *(_DWORD *)(this + 172);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SvId::Clear(this);
        v2 = *(_DWORD *)(v1 + 172);
      }
    }
    *(_QWORD *)(v1 + 16) = 0;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 80) = 0;
    *(_QWORD *)(v1 + 88) = 0;
    *(_QWORD *)(v1 + 96) = 0;
    if ((v2 & 0x8000) != 0)
    {
      v3 = *(_QWORD *)(v1 + 128);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 76))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 32) = 0;
        *(_DWORD *)(v3 + 48) = 0;
        *(_DWORD *)(v3 + 64) = 0;
        *(_DWORD *)(v3 + 76) = 0;
        v2 = *(_DWORD *)(v1 + 172);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 152) = 0u;
    *(_OWORD *)(v1 + 136) = 0u;
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 112) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 112));
  }
  *(_DWORD *)(v1 + 112) = 0;
  *(_DWORD *)(v1 + 172) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  unsigned __int8 *v34;
  char *v35;
  unsigned int v36;
  uint64_t result;
  int v38;
  int v39;
  int v40;
  BOOL v41;
  int v42;
  _BYTE *v43;
  _BYTE *v44;
  unsigned int v45;
  _BYTE *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  unsigned int v64;
  _BYTE *v65;
  unsigned int v66;
  _BYTE *v67;
  unsigned int v68;
  _BYTE *v69;
  unsigned int v70;
  _BYTE *v71;
  unsigned int v72;
  unsigned __int8 *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  int v89;
  int v90;
  int v91;
  unsigned __int8 *v92;
  unsigned int v93;
  unsigned __int8 *v94;
  unsigned int v95;
  unsigned __int8 *v96;
  unsigned int v97;
  unsigned __int8 *v98;
  unsigned int v99;
  unsigned __int8 *v100;
  unsigned int v101;
  unsigned __int8 *v102;
  unsigned int v103[2];

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)((char *)this + 24);
  v5 = (CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *)((char *)this + 104);
LABEL_2:
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_62;
        *((_DWORD *)this + 43) |= 1u;
        v9 = *((_QWORD *)this + 1);
        if (!v9)
        {
          v9 = operator new();
          *(_QWORD *)(v9 + 8) = 0;
          *(_QWORD *)(v9 + 16) = 0;
          *(_QWORD *)v9 = &off_1E25BD478;
          *(_DWORD *)(v9 + 24) = 0;
          *((_QWORD *)this + 1) = v9;
        }
        v103[0] = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103))return 0;
        }
        else
        {
          v103[0] = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v38 = *((_DWORD *)a2 + 14);
        v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvId *)v9, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v40 = *((_DWORD *)a2 + 14);
        v41 = __OFSUB__(v40, 1);
        v42 = v40 - 1;
        if (v42 < 0 == v41)
          *((_DWORD *)a2 + 14) = v42;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
        goto LABEL_86;
      case 2u:
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_62;
LABEL_86:
        *(_QWORD *)v103 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v103) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v103;
        *((_DWORD *)this + 43) |= 2u;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v44 >= v11 || *v44 != 24)
          continue;
        v12 = v44 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_90:
        v103[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v45 = v103[0];
        }
        else
        {
          v45 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v45 <= 6)
        {
          *((_DWORD *)this + 43) |= 4u;
          *((_DWORD *)this + 14) = v45;
        }
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 != 34)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_100:
          v47 = *((_DWORD *)this + 9);
          v48 = *((int *)this + 8);
          if ((int)v48 >= v47)
          {
            if (v47 == *((_DWORD *)this + 10))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v47 = *((_DWORD *)this + 9);
            }
            *((_DWORD *)this + 9) = v47 + 1;
            v50 = (CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime *)operator new();
            *(_QWORD *)v50 = &off_1E25BB240;
            *((_QWORD *)v50 + 1) = 0;
            *((_QWORD *)v50 + 2) = 0;
            *((_QWORD *)v50 + 3) = 0;
            v51 = *((_QWORD *)this + 3);
            v52 = *((int *)this + 8);
            *((_DWORD *)this + 8) = v52 + 1;
            *(_QWORD *)(v51 + 8 * v52) = v50;
          }
          else
          {
            v49 = *((_QWORD *)this + 3);
            *((_DWORD *)this + 8) = v48 + 1;
            v50 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime **)(v49 + 8 * v48);
          }
          v103[0] = 0;
          v53 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103))return 0;
          }
          else
          {
            v103[0] = *v53;
            *((_QWORD *)a2 + 1) = v53 + 1;
          }
          v54 = *((_DWORD *)a2 + 14);
          v55 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v54 + 1;
          if (v54 >= v55)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::MergePartialFromCodedStream(v50, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v56 = *((_DWORD *)a2 + 14);
          v41 = __OFSUB__(v56, 1);
          v57 = v56 - 1;
          if (v57 < 0 == v41)
            *((_DWORD *)a2 + 14) = v57;
          v46 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v46 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v58 = *v46;
        }
        while (v58 == 34);
        if (v58 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_118:
        *(_QWORD *)v103 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v103) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v103;
        *((_DWORD *)this + 43) |= 0x10u;
        v59 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v59 >= *((_QWORD *)a2 + 2) || *v59 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v59 + 1;
LABEL_122:
        *(_QWORD *)v103 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v103) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v103;
        *((_DWORD *)this + 43) |= 0x20u;
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_126:
        *(_QWORD *)v103 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v103) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v103;
        *((_DWORD *)this + 43) |= 0x40u;
        v61 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v61 >= *((_QWORD *)a2 + 2) || *v61 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v61 + 1;
LABEL_130:
        v103[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103) & 1) == 0)
          return 0;
        *((_DWORD *)this + 15) = v103[0];
        *((_DWORD *)this + 43) |= 0x80u;
        v62 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 != 77)
          continue;
        *((_QWORD *)a2 + 1) = v62 + 1;
LABEL_134:
        v103[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v103) & 1) == 0)
          return 0;
        *((_DWORD *)this + 20) = v103[0];
        *((_DWORD *)this + 43) |= 0x100u;
        v63 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v63 >= v13 || *v63 != 80)
          continue;
        v14 = v63 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_138:
        v103[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v64 = v103[0];
        }
        else
        {
          v64 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v64 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x200u;
          *((_DWORD *)this + 21) = v64;
        }
        v65 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v65 >= v15 || *v65 != 88)
          continue;
        v16 = v65 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_148:
        v103[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v66 = v103[0];
        }
        else
        {
          v66 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v66 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x400u;
          *((_DWORD *)this + 22) = v66;
        }
        v67 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v67 >= v17 || *v67 != 96)
          continue;
        v18 = v67 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_158:
        v103[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v68 = v103[0];
        }
        else
        {
          v68 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v68 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x800u;
          *((_DWORD *)this + 23) = v68;
        }
        v69 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v69 >= v19 || *v69 != 104)
          continue;
        v20 = v69 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_168:
        v103[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v70 = v103[0];
        }
        else
        {
          v70 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        if (v70 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x1000u;
          *((_DWORD *)this + 24) = v70;
        }
        v71 = (_BYTE *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v71 >= v21 || *v71 != 112)
          continue;
        v22 = v71 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_178:
        v103[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v72 = v103[0];
        }
        else
        {
          v72 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        if (v72 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x2000u;
          *((_DWORD *)this + 25) = v72;
        }
        v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v73 >= *((_QWORD *)a2 + 2) || *v73 != 122)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v73 + 1;
LABEL_188:
          v74 = *((_DWORD *)this + 29);
          v75 = *((int *)this + 28);
          if ((int)v75 >= v74)
          {
            if (v74 == *((_DWORD *)this + 30))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              v74 = *((_DWORD *)this + 29);
            }
            *((_DWORD *)this + 29) = v74 + 1;
            v77 = operator new();
            *(_QWORD *)v77 = &off_1E25BB9C0;
            *(_OWORD *)(v77 + 8) = 0u;
            *(_OWORD *)(v77 + 24) = 0u;
            *(_QWORD *)(v77 + 40) = 0;
            v78 = *((_QWORD *)this + 13);
            v79 = *((int *)this + 28);
            *((_DWORD *)this + 28) = v79 + 1;
            *(_QWORD *)(v78 + 8 * v79) = v77;
          }
          else
          {
            v76 = *((_QWORD *)this + 13);
            *((_DWORD *)this + 28) = v75 + 1;
            v77 = *(_QWORD *)(v76 + 8 * v75);
          }
          v103[0] = 0;
          v80 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v80 >= *((_QWORD *)a2 + 2) || *v80 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103))return 0;
          }
          else
          {
            v103[0] = *v80;
            *((_QWORD *)a2 + 1) = v80 + 1;
          }
          v81 = *((_DWORD *)a2 + 14);
          v82 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v81 + 1;
          if (v81 >= v82)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections *)v77, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v83 = *((_DWORD *)a2 + 14);
          v41 = __OFSUB__(v83, 1);
          v84 = v83 - 1;
          if (v84 < 0 == v41)
            *((_DWORD *)a2 + 14) = v84;
          v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v85 = *((_QWORD *)a2 + 2);
        }
        while ((unint64_t)v73 < v85 && *v73 == 122);
        if ((int)v85 - (int)v73 < 2 || *v73 != 130 || v73[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v73 + 2;
LABEL_208:
        *((_DWORD *)this + 43) |= 0x8000u;
        v86 = *((_QWORD *)this + 16);
        if (!v86)
        {
          v86 = operator new();
          *(_QWORD *)v86 = &off_1E25BAF70;
          *(_OWORD *)(v86 + 8) = 0u;
          *(_OWORD *)(v86 + 24) = 0u;
          *(_OWORD *)(v86 + 40) = 0u;
          *(_OWORD *)(v86 + 56) = 0u;
          *(_QWORD *)(v86 + 72) = 0;
          *((_QWORD *)this + 16) = v86;
        }
        v103[0] = 0;
        v87 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v87 >= *((_QWORD *)a2 + 2) || *v87 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103))return 0;
        }
        else
        {
          v103[0] = *v87;
          *((_QWORD *)a2 + 1) = v87 + 1;
        }
        v88 = *((_DWORD *)a2 + 14);
        v89 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v88 + 1;
        if (v88 >= v89)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *)v86, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v90 = *((_DWORD *)a2 + 14);
        v41 = __OFSUB__(v90, 1);
        v91 = v90 - 1;
        if (v91 < 0 == v41)
          *((_DWORD *)a2 + 14) = v91;
        v92 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        if ((int)v23 - (int)v92 <= 1 || *v92 != 144 || v92[1] != 1)
          continue;
        v24 = (char *)(v92 + 2);
        *((_QWORD *)a2 + 1) = v24;
LABEL_223:
        v103[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v93 = v103[0];
        }
        else
        {
          v93 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        if (v93 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x10000u;
          *((_DWORD *)this + 34) = v93;
        }
        v94 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        if ((int)v25 - (int)v94 < 2 || *v94 != 152 || v94[1] != 1)
          continue;
        v26 = (char *)(v94 + 2);
        *((_QWORD *)a2 + 1) = v26;
LABEL_234:
        v103[0] = 0;
        if ((unint64_t)v26 >= v25 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v95 = v103[0];
        }
        else
        {
          v95 = *v26;
          *((_QWORD *)a2 + 1) = v26 + 1;
        }
        if (v95 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x20000u;
          *((_DWORD *)this + 35) = v95;
        }
        v96 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v27 = *((_QWORD *)a2 + 2);
        if ((int)v27 - (int)v96 < 2 || *v96 != 160 || v96[1] != 1)
          continue;
        v28 = (char *)(v96 + 2);
        *((_QWORD *)a2 + 1) = v28;
LABEL_245:
        v103[0] = 0;
        if ((unint64_t)v28 >= v27 || *v28 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v97 = v103[0];
        }
        else
        {
          v97 = *v28;
          *((_QWORD *)a2 + 1) = v28 + 1;
        }
        if (v97 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x40000u;
          *((_DWORD *)this + 36) = v97;
        }
        v98 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        if ((int)v29 - (int)v98 < 2 || *v98 != 168 || v98[1] != 1)
          continue;
        v30 = (char *)(v98 + 2);
        *((_QWORD *)a2 + 1) = v30;
LABEL_256:
        v103[0] = 0;
        if ((unint64_t)v30 >= v29 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v99 = v103[0];
        }
        else
        {
          v99 = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        if (v99 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x80000u;
          *((_DWORD *)this + 37) = v99;
        }
        v100 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        if ((int)v31 - (int)v100 < 2 || *v100 != 176 || v100[1] != 1)
          continue;
        v32 = (char *)(v100 + 2);
        *((_QWORD *)a2 + 1) = v32;
LABEL_267:
        v103[0] = 0;
        if ((unint64_t)v32 >= v31 || *v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
          if (!(_DWORD)result)
            return result;
          v101 = v103[0];
        }
        else
        {
          v101 = *v32;
          *((_QWORD *)a2 + 1) = v32 + 1;
        }
        if (v101 <= 4)
        {
          *((_DWORD *)this + 43) |= 0x100000u;
          *((_DWORD *)this + 40) = v101;
        }
        v102 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v102 < 2 || *v102 != 185 || v102[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v102 + 2;
LABEL_56:
        *(_QWORD *)v103 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v103) & 1) != 0)
        {
          *((_QWORD *)this + 19) = *(_QWORD *)v103;
          *((_DWORD *)this + 43) |= 0x200000u;
          v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v33 = *((_QWORD *)a2 + 2);
          if ((int)v33 - (int)v34 >= 2 && *v34 == 192 && v34[1] == 1)
          {
            v35 = (char *)(v34 + 2);
            *((_QWORD *)a2 + 1) = v35;
LABEL_66:
            v103[0] = 0;
            if ((unint64_t)v35 >= v33 || *v35 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v103);
              if (!(_DWORD)result)
                return result;
              v36 = v103[0];
            }
            else
            {
              v36 = *v35;
              *((_QWORD *)a2 + 1) = v35 + 1;
            }
            if (v36 <= 3)
            {
              *((_DWORD *)this + 43) |= 0x400000u;
              *((_DWORD *)this + 41) = v36;
            }
            if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_90;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_100;
        goto LABEL_62;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_118;
        goto LABEL_62;
      case 6u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_122;
        goto LABEL_62;
      case 7u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_126;
        goto LABEL_62;
      case 8u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_130;
        goto LABEL_62;
      case 9u:
        v8 = TagFallback & 7;
        if (v8 == 5)
          goto LABEL_134;
        goto LABEL_62;
      case 0xAu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_138;
      case 0xBu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_148;
      case 0xCu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_158;
      case 0xDu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_168;
      case 0xEu:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_178;
      case 0xFu:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_188;
        goto LABEL_62;
      case 0x10u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_208;
        goto LABEL_62;
      case 0x12u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_223;
      case 0x13u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v25 = *((_QWORD *)a2 + 2);
        goto LABEL_234;
      case 0x14u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v28 = (char *)*((_QWORD *)a2 + 1);
        v27 = *((_QWORD *)a2 + 2);
        goto LABEL_245;
      case 0x15u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v30 = (char *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_256;
      case 0x16u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v32 = (char *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        goto LABEL_267;
      case 0x17u:
        v8 = TagFallback & 7;
        if (v8 == 1)
          goto LABEL_56;
        goto LABEL_62;
      case 0x18u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_62;
        v35 = (char *)*((_QWORD *)a2 + 1);
        v33 = *((_QWORD *)a2 + 2);
        goto LABEL_66;
      default:
        v8 = TagFallback & 7;
LABEL_62:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 172);
  if ((v6 & 1) != 0)
  {
    v11 = *(_QWORD *)(this + 8);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    v6 = *(_DWORD *)(v5 + 172);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 172) & 4) != 0)
LABEL_4:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
LABEL_5:
  if (*(int *)(v5 + 32) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(*(_QWORD *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x10) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 48), a3);
    v8 = *(_DWORD *)(v5 + 172);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_10;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x40) == 0)
  {
LABEL_11:
    if ((v8 & 0x80) == 0)
      goto LABEL_12;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x80) == 0)
  {
LABEL_12:
    if ((v8 & 0x100) == 0)
      goto LABEL_13;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 60), a3);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x100) == 0)
  {
LABEL_13:
    if ((v8 & 0x200) == 0)
      goto LABEL_14;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 80), a3);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x200) == 0)
  {
LABEL_14:
    if ((v8 & 0x400) == 0)
      goto LABEL_15;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x400) == 0)
  {
LABEL_15:
    if ((v8 & 0x800) == 0)
      goto LABEL_16;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x800) == 0)
  {
LABEL_16:
    if ((v8 & 0x1000) == 0)
      goto LABEL_17;
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 92), (uint64_t)a2, a4);
  v8 = *(_DWORD *)(v5 + 172);
  if ((v8 & 0x1000) == 0)
  {
LABEL_17:
    if ((v8 & 0x2000) == 0)
      goto LABEL_19;
    goto LABEL_18;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 172) & 0x2000) != 0)
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
LABEL_19:
  if (*(int *)(v5 + 112) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_QWORD *)(*(_QWORD *)(v5 + 104) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 112));
  }
  v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x8000) != 0)
  {
    v12 = *(_QWORD *)(v5 + 128);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_ + 128);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v12, a2, a4);
    v10 = *(_DWORD *)(v5 + 172);
    if ((v10 & 0x10000) == 0)
    {
LABEL_24:
      if ((v10 & 0x20000) == 0)
        goto LABEL_25;
      goto LABEL_50;
    }
  }
  else if ((v10 & 0x10000) == 0)
  {
    goto LABEL_24;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 136), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x20000) == 0)
  {
LABEL_25:
    if ((v10 & 0x40000) == 0)
      goto LABEL_26;
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x40000) == 0)
  {
LABEL_26:
    if ((v10 & 0x80000) == 0)
      goto LABEL_27;
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 144), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x80000) == 0)
  {
LABEL_27:
    if ((v10 & 0x100000) == 0)
      goto LABEL_28;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 148), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x100000) == 0)
  {
LABEL_28:
    if ((v10 & 0x200000) == 0)
      goto LABEL_29;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 172);
  if ((v10 & 0x200000) == 0)
  {
LABEL_29:
    if ((v10 & 0x400000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 164), (uint64_t)a2, a4);
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(double *)(v5 + 152), a3);
  if ((*(_DWORD *)(v5 + 172) & 0x400000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(unsigned int *)(v5 + 164), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  int v2;
  int v3;
  int v4;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  int v47;

  v2 = *((_DWORD *)this + 43);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_
                                                                  + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v9 = v3 + 9;
    else
      v9 = v3;
    if ((v2 & 4) != 0)
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
      if ((v10 & 0x80000000) != 0)
      {
        v11 = 10;
      }
      else if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        v2 = *((_DWORD *)this + 43);
      }
      else
      {
        v11 = 1;
      }
      v9 += v11 + 1;
    }
    v12 = v9 + 9;
    if ((v2 & 0x10) == 0)
      v12 = v9;
    if ((v2 & 0x20) != 0)
      v12 += 9;
    if ((v2 & 0x40) != 0)
      v12 += 9;
    if ((v2 & 0x80) != 0)
      v4 = v12 + 5;
    else
      v4 = v12;
  }
  else
  {
    v4 = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
      v4 += 5;
    if ((v2 & 0x200) != 0)
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
      if ((v13 & 0x80000000) != 0)
      {
        v14 = 10;
      }
      else if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        v2 = *((_DWORD *)this + 43);
      }
      else
      {
        v14 = 1;
      }
      v4 += v14 + 1;
      if ((v2 & 0x400) == 0)
      {
LABEL_35:
        if ((v2 & 0x800) == 0)
          goto LABEL_36;
        goto LABEL_52;
      }
    }
    else if ((v2 & 0x400) == 0)
    {
      goto LABEL_35;
    }
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 10;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v16 = 1;
    }
    v4 += v16 + 1;
    if ((v2 & 0x800) == 0)
    {
LABEL_36:
      if ((v2 & 0x1000) == 0)
        goto LABEL_37;
      goto LABEL_58;
    }
LABEL_52:
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 23);
    if ((v17 & 0x80000000) != 0)
    {
      v18 = 10;
    }
    else if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v18 = 1;
    }
    v4 += v18 + 1;
    if ((v2 & 0x1000) == 0)
    {
LABEL_37:
      if ((v2 & 0x2000) == 0)
        goto LABEL_38;
      goto LABEL_64;
    }
LABEL_58:
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
    if ((v19 & 0x80000000) != 0)
    {
      v20 = 10;
    }
    else if (v19 >= 0x80)
    {
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v20 = 1;
    }
    v4 += v20 + 1;
    if ((v2 & 0x2000) == 0)
    {
LABEL_38:
      if ((v2 & 0x8000) == 0)
        goto LABEL_76;
LABEL_70:
      v23 = (CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit *)*((_QWORD *)this + 16);
      if (!v23)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
        v23 = *(CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit **)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::default_instance_
                                                                              + 128);
      }
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::PolynomialOrbit::ByteSize(v23);
      v25 = (int)v24;
      if (v24 >= 0x80)
        v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
      else
        v26 = 1;
      v4 += v25 + v26 + 2;
      v2 = *((_DWORD *)this + 43);
      goto LABEL_76;
    }
LABEL_64:
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 25);
    if ((v21 & 0x80000000) != 0)
    {
      v22 = 10;
    }
    else if (v21 >= 0x80)
    {
      v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v22 = 1;
    }
    v4 += v22 + 1;
    if ((v2 & 0x8000) == 0)
      goto LABEL_76;
    goto LABEL_70;
  }
LABEL_76:
  if ((v2 & 0xFF0000) == 0)
    goto LABEL_122;
  if ((v2 & 0x10000) != 0)
  {
    v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 34);
    if ((v27 & 0x80000000) != 0)
    {
      v28 = 10;
    }
    else if (v27 >= 0x80)
    {
      v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v28 = 1;
    }
    v4 += v28 + 2;
    if ((v2 & 0x20000) == 0)
    {
LABEL_79:
      if ((v2 & 0x40000) == 0)
        goto LABEL_80;
      goto LABEL_95;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
  if ((v29 & 0x80000000) != 0)
  {
    v30 = 10;
  }
  else if (v29 >= 0x80)
  {
    v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    v2 = *((_DWORD *)this + 43);
  }
  else
  {
    v30 = 1;
  }
  v4 += v30 + 2;
  if ((v2 & 0x40000) == 0)
  {
LABEL_80:
    if ((v2 & 0x80000) == 0)
      goto LABEL_81;
LABEL_101:
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 37);
    if ((v33 & 0x80000000) != 0)
    {
      v34 = 12;
    }
    else if (v33 >= 0x80)
    {
      v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33) + 2;
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v34 = 3;
    }
    v4 += v34;
    if ((v2 & 0x100000) == 0)
      goto LABEL_113;
    goto LABEL_107;
  }
LABEL_95:
  v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 36);
  if ((v31 & 0x80000000) != 0)
  {
    v32 = 12;
  }
  else if (v31 >= 0x80)
  {
    v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31) + 2;
    v2 = *((_DWORD *)this + 43);
  }
  else
  {
    v32 = 3;
  }
  v4 += v32;
  if ((v2 & 0x80000) != 0)
    goto LABEL_101;
LABEL_81:
  if ((v2 & 0x100000) != 0)
  {
LABEL_107:
    v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
    if ((v35 & 0x80000000) != 0)
    {
      v36 = 12;
    }
    else if (v35 >= 0x80)
    {
      v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35) + 2;
      v2 = *((_DWORD *)this + 43);
    }
    else
    {
      v36 = 3;
    }
    v4 += v36;
  }
LABEL_113:
  if ((v2 & 0x200000) != 0)
    v4 += 10;
  if ((v2 & 0x400000) != 0)
  {
    v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 41);
    if ((v37 & 0x80000000) != 0)
    {
      v38 = 12;
    }
    else if (v37 >= 0x80)
    {
      v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37) + 2;
    }
    else
    {
      v38 = 3;
    }
    v4 += v38;
  }
LABEL_122:
  v39 = *((_DWORD *)this + 8);
  v40 = v39 + v4;
  if (v39 >= 1)
  {
    v41 = 0;
    do
      v40 += CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::SvPositionAtTime **)(*((_QWORD *)this + 3) + 8 * v41++))
           + 1;
    while (v41 < *((int *)this + 8));
  }
  v42 = *((_DWORD *)this + 28);
  v43 = (v42 + v40);
  if (v42 >= 1)
  {
    v44 = 0;
    do
    {
      v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::SvBandCorrections **)(*((_QWORD *)this + 13) + 8 * v44));
      v46 = (int)v45;
      if (v45 >= 0x80)
        v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
      else
        v47 = 1;
      v43 = (v46 + v43 + v47);
      ++v44;
    }
    while (v44 < *((int *)this + 28));
  }
  *((_DWORD *)this + 42) = v43;
  return v43;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::SvInfo *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  double result;

  if (a2 != this)
  {
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v6 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v6;
    v7 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v7;
    v8 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v8;
    LODWORD(v8) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v8;
    LODWORD(v8) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v8;
    v9 = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v9;
    v10 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
    v11 = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v11;
    v12 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v12;
    v13 = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v13;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v14 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v14;
    LODWORD(v14) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v14;
    LODWORD(v14) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v14;
    LODWORD(v14) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v14;
    LODWORD(v14) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v14;
    LODWORD(v14) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v14;
    result = *((double *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((double *)a2 + 19) = result;
    LODWORD(v14) = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v14;
    LODWORD(v14) = *((_DWORD *)this + 43);
    *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
    *((_DWORD *)a2 + 43) = v14;
    LODWORD(v14) = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v14;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SvInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SvInfo");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::ReceiverBandCorrections(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *a2)
{
  *(_QWORD *)this = &off_1E25BC8C0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergeFrom(this, a2);
  return this;
}

void sub_18D14BBA4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *a2)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 4);
    if (v6 >= 0xD)
      __assert_rtn("set_band", "CoreNavigationCLPGnssMeasApi.pb.h", 11446, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    *((_DWORD *)this + 8) |= 1u;
    *((_DWORD *)this + 4) = v6;
    v5 = *((_DWORD *)a2 + 8);
  }
  if ((v5 & 2) == 0)
  {
    if ((v5 & 4) == 0)
      goto LABEL_9;
LABEL_13:
    LODWORD(v4) = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 8) |= 4u;
    *((_DWORD *)this + 5) = v4;
    if ((*((_DWORD *)a2 + 8) & 8) == 0)
      return *(float *)&v4;
    goto LABEL_10;
  }
  v4 = *((_QWORD *)a2 + 1);
  *((_DWORD *)this + 8) |= 2u;
  *((_QWORD *)this + 1) = v4;
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0)
    goto LABEL_13;
LABEL_9:
  if ((v5 & 8) != 0)
  {
LABEL_10:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 6) = v4;
  }
  return *(float *)&v4;
}

void sub_18D14BCCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::~ReceiverBandCorrections(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this)
{
  *(_QWORD *)this = &off_1E25BC8C0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::~ReceiverBandCorrections(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::New(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BC8C0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  uint64_t result;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  unsigned int v13[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_17;
        v13[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v13);
          if (!(_DWORD)result)
            return result;
          v8 = v13[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 0xC)
        {
          *((_DWORD *)this + 8) |= 1u;
          *((_DWORD *)this + 4) = v8;
        }
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_17;
LABEL_27:
        *(_QWORD *)v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v13) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v13;
        *((_DWORD *)this + 8) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_31:
        v13[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v13) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v13[0];
        *((_DWORD *)this + 8) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_35:
        v13[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v13) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v13[0];
          *((_DWORD *)this + 8) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_31;
        goto LABEL_17;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_17;
        goto LABEL_35;
      default:
        v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 8);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *))(*(_QWORD *)this
                                                                                                  + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *this, CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *a2)
{
  int v2;
  uint64_t v3;
  float result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    LODWORD(v3) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    v5 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    v6 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ReceiverBandCorrections");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::LeapSecondChange(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this, const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BB1C8;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergeFrom(this, a2);
  return this;
}

void sub_18D14C2C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this, const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 6) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 4) = v6;
    }
  }
}

void sub_18D14C37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::~LeapSecondChange(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this)
{
  *(_QWORD *)this = &off_1E25BB1C8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::~LeapSecondChange(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::New(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BB1C8;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  char *v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_16;
      v10 = (char *)*((_QWORD *)a2 + 1);
      v8 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (!(_DWORD)result)
          return result;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v4 = *v10;
        v11 = v10 + 1;
        *((_QWORD *)a2 + 1) = v11;
      }
      *((_DWORD *)this + 6) |= 1u;
      if ((unint64_t)v11 < v8 && *v11 == 16)
      {
        v9 = v11 + 1;
        *((_QWORD *)a2 + 1) = v9;
LABEL_24:
        v15 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!(_DWORD)result)
            return result;
          v12 = v15;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v9;
          v13 = (unsigned __int8 *)(v9 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 4) = v12;
        *((_DWORD *)this + 6) |= 2u;
        if (v13 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_16:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  uint64_t v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v3;
  int v4;

  if (*((_BYTE *)this + 24))
  {
    if (((_BYTE)this[3] & 1) != 0)
    {
      v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
      if (((_DWORD)this[3] & 2) == 0)
        goto LABEL_13;
    }
    else
    {
      v2 = 0;
      if (((_BYTE)this[3] & 2) == 0)
        goto LABEL_13;
    }
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v3 & 0x80000000) != 0)
    {
      v4 = 11;
    }
    else if (v3 >= 0x80)
    {
      v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else
    {
      v4 = 2;
    }
    v2 = (v4 + v2);
  }
  else
  {
    v2 = 0;
  }
LABEL_13:
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this, const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.LeapSecondChange");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::LeapSecondInfo(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *a2)
{
  *(_QWORD *)this = &off_1E25BA868;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D14C854(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v3;
  int v4;
  int v5;
  unsigned int v6;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *v8;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)v3 + 7) |= 1u;
      *((_DWORD *)v3 + 2) = v5;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 5)
        __assert_rtn("set_change_knowledge", "CoreNavigationCLPGnssMeasApi.pb.h", 11609, "::CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChangeKnowledge_IsValid(value)");
      *((_DWORD *)v3 + 7) |= 2u;
      *((_DWORD *)v3 + 3) = v6;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 4) != 0)
    {
      *((_DWORD *)v3 + 7) |= 4u;
      v7 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *)*((_QWORD *)v3 + 2);
      if (!v7)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)operator new();
        v7 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BB1C8;
        *((_DWORD *)this + 6) = 0;
        *((_QWORD *)v3 + 2) = this;
      }
      v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *)*((_QWORD *)a2 + 2);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange **)(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_
                                                                                    + 16);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergeFrom(v7, v8);
    }
  }
}

void sub_18D14C9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::~LeapSecondInfo(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BA868;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::~LeapSecondInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BA868;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 28);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  uint64_t result;
  unsigned int v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  BOOL v21;
  int v22;
  unsigned int v23;
  unsigned int v24;

  v4 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v10 = (char *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
            if (!(_DWORD)result)
              return result;
            v11 = (_BYTE *)*((_QWORD *)a2 + 1);
            v9 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v4 = *v10;
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
          }
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_27;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_19;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_27:
        v23 = 0;
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!(_DWORD)result)
            return result;
          v14 = v23;
        }
        else
        {
          v14 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v14 <= 4)
        {
          *((_DWORD *)this + 7) |= 2u;
          *((_DWORD *)this + 3) = v14;
        }
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 26)
        {
          *((_QWORD *)a2 + 1) = v15 + 1;
          goto LABEL_37;
        }
      }
      if (v7 != 3)
      {
        v8 = TagFallback & 7;
        goto LABEL_19;
      }
      v8 = TagFallback & 7;
      if (v8 == 2)
        break;
LABEL_19:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_37:
    *((_DWORD *)this + 7) |= 4u;
    v16 = *((_QWORD *)this + 2);
    if (!v16)
    {
      v16 = operator new();
      *(_QWORD *)(v16 + 8) = 0;
      *(_QWORD *)(v16 + 16) = 0;
      *(_QWORD *)v16 = &off_1E25BB1C8;
      *(_DWORD *)(v16 + 24) = 0;
      *((_QWORD *)this + 2) = v16;
    }
    v24 = 0;
    v17 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))
        return 0;
    }
    else
    {
      v24 = *v17;
      *((_QWORD *)a2 + 1) = v17 + 1;
    }
    v18 = *((_DWORD *)a2 + 14);
    v19 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v18 + 1;
    if (v18 >= v19)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange *)v16, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v20 = *((_DWORD *)a2 + 14);
    v21 = __OFSUB__(v20, 1);
    v22 = v20 - 1;
    if (v22 < 0 == v21)
      *((_DWORD *)a2 + 14) = v22;
    if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      result = 1;
      *((_BYTE *)a2 + 36) = 1;
      return result;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[7];
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_6:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
    if ((v5[7] & 4) == 0)
      return this;
    goto LABEL_7;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
  v6 = v5[7];
  if ((v6 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_7:
  v7 = *((_QWORD *)v5 + 2);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_ + 16);
  }
  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream **v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_23;
  }
  if ((*((_BYTE *)this + 28) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 7);
      if ((v2 & 2) == 0)
        goto LABEL_16;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_16;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 28) & 2) == 0)
      goto LABEL_16;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 7);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream **)*((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v7 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream ***)(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::default_instance_
                                                                              + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondChange::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v3 = (v3 + v9 + v10 + 1);
  }
LABEL_23:
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *a2)
{
  int v2;
  int v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.LeapSecondInfo");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::GpsToUtcConversion(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *a2)
{
  *(_QWORD *)this = &off_1E25BBC90;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergeFrom(this, a2);
  return this;
}

void sub_18D14D0FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0)
      return result;
LABEL_8:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18D14D200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::~GpsToUtcConversion(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  *(_QWORD *)this = &off_1E25BBC90;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::~GpsToUtcConversion(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::New(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BBC90;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  uint64_t result;
  _BYTE *v12;
  _BYTE *v13;
  unint64_t v14;

  v4 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 11) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_26;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_18;
LABEL_26:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v14) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v14;
        *((_DWORD *)this + 11) |= 2u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_30:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v14) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v14;
        *((_DWORD *)this + 11) |= 4u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_34:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v14) & 1) != 0)
        {
          *((_QWORD *)this + 4) = v14;
          *((_DWORD *)this + 11) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_30;
        goto LABEL_18;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_18;
        goto LABEL_34;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 44) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 11);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 10) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *this, CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GpsToUtcConversion");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::GpsTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *a2)
{
  *(_QWORD *)this = &off_1E25BA070;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D14D7DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *v3;
  double result;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 6);
      *((_DWORD *)v3 + 8) |= 1u;
      *((_DWORD *)v3 + 6) = v6;
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 8) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BA868;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_
                                                                                + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_14:
      *((_DWORD *)v3 + 8) |= 4u;
      v9 = (CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *)*((_QWORD *)v3 + 2);
      if (!v9)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *)operator new();
        v9 = this;
        *(_QWORD *)this = &off_1E25BBC90;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v3 + 2) = this;
      }
      v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *)*((_QWORD *)a2 + 2);
      if (!v10)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
        v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_
                                                                                       + 16);
      }
      return CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergeFrom(v9, v10);
    }
  }
  return result;
}

void sub_18D14D974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::~GpsTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this)
{
  *(_QWORD *)this = &off_1E25BA070;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::~GpsTimeInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *)CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BA070;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 32);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(this);
        v2 = *(_DWORD *)(v1 + 32);
      }
    }
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 44))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 44) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  int v12;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;

  v4 = (unsigned int *)((char *)this + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v10 = (char *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
            if (!(_DWORD)result)
              return result;
            v11 = (_BYTE *)*((_QWORD *)a2 + 1);
            v9 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v4 = *v10;
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
          }
          v12 = *((_DWORD *)this + 8) | 1;
          *((_DWORD *)this + 8) = v12;
          if ((unint64_t)v11 < v9 && *v11 == 18)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_19;
        v12 = *((_DWORD *)this + 8);
LABEL_27:
        *((_DWORD *)this + 8) = v12 | 2;
        v14 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)this + 1);
        if (!v14)
        {
          v14 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)operator new();
          *(_QWORD *)v14 = &off_1E25BA868;
          *((_QWORD *)v14 + 1) = 0;
          *((_QWORD *)v14 + 2) = 0;
          *((_QWORD *)v14 + 3) = 0;
          *((_QWORD *)this + 1) = v14;
        }
        v28 = 0;
        v15 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0;
        }
        else
        {
          v28 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergePartialFromCodedStream(v14, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v18 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v18, 1);
        v20 = v18 - 1;
        if (v20 < 0 == v19)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 < *((_QWORD *)a2 + 2) && *v21 == 26)
        {
          *((_QWORD *)a2 + 1) = v21 + 1;
          goto LABEL_41;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_19;
LABEL_41:
      *((_DWORD *)this + 8) |= 4u;
      v22 = *((_QWORD *)this + 2);
      if (!v22)
      {
        v22 = operator new();
        *(_QWORD *)v22 = &off_1E25BBC90;
        *(_OWORD *)(v22 + 8) = 0u;
        *(_OWORD *)(v22 + 24) = 0u;
        *(_QWORD *)(v22 + 40) = 0;
        *((_QWORD *)this + 2) = v22;
      }
      v29 = 0;
      v23 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))
          return 0;
      }
      else
      {
        v29 = *v23;
        *((_QWORD *)a2 + 1) = v23 + 1;
      }
      v24 = *((_DWORD *)a2 + 14);
      v25 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v24 + 1;
      if (v24 >= v25)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *)v22, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v26 = *((_DWORD *)a2 + 14);
      v19 = __OFSUB__(v26, 1);
      v27 = v26 - 1;
      if (v27 < 0 == v19)
        *((_DWORD *)a2 + 14) = v27;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = this[8];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[6], (uint64_t)a2, a4);
    v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((v5[8] & 4) != 0)
  {
LABEL_9:
    v8 = *((_QWORD *)v5 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_ + 16);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_23;
  }
  if ((*((_BYTE *)this + 32) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 32) & 2) == 0)
      goto LABEL_16;
LABEL_10:
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_
                                                                          + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = (v3 + v7 + v8 + 1);
    v2 = *((_DWORD *)this + 8);
    goto LABEL_16;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v4 >= 0x80)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
    v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  v3 = 2;
  if ((v2 & 2) != 0)
    goto LABEL_10;
LABEL_16:
  if ((v2 & 4) != 0)
  {
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::default_instance_
                                                                              + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GpsToUtcConversion::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 = (v3 + v11 + v12 + 1);
  }
LABEL_23:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo *)this)
  {
    v2 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GpsTimeInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GpsTimeInfo");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::GlonassSubsecondConversion(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *a2)
{
  *(_QWORD *)this = &off_1E25BCD70;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergeFrom(this, a2);
  return this;
}

void sub_18D14E188(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D14E244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::~GlonassSubsecondConversion(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this)
{
  *(_QWORD *)this = &off_1E25BCD70;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::~GlonassSubsecondConversion(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::New(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BCD70;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  v4 = (unint64_t *)((char *)this + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 7) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_16;
LABEL_24:
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
        return 0;
      *((_QWORD *)this + 2) = v12;
      *((_DWORD *)this + 7) |= 2u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_16:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *this, CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *a2)
{
  uint64_t v2;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GlonassSubsecondConversion");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  double result;

  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::GlonassTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *a2)
{
  *(_QWORD *)this = &off_1E25BAE80;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D14E6E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *v3;
  double result;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v12;
  _BYTE v13[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 2);
    *((_DWORD *)v3 + 10) |= 1u;
    *((_DWORD *)v3 + 2) = v6;
    v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_12:
      v8 = *((_DWORD *)a2 + 8);
      if (v8 >= 6)
        __assert_rtn("set_leap_second_deprecated", "CoreNavigationCLPGnssMeasApi.pb.h", 11972, "::CoreNavigation::CLP::LogEntry::PrivateData::GlonassLeapSecondDeprecated_IsValid(value)");
      *((_DWORD *)v3 + 10) |= 4u;
      *((_DWORD *)v3 + 8) = v8;
      v5 = *((_DWORD *)a2 + 10);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0)
          return result;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
  else if ((*((_BYTE *)a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  v7 = *((_DWORD *)a2 + 3);
  *((_DWORD *)v3 + 10) |= 2u;
  *((_DWORD *)v3 + 3) = v7;
  v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 4) != 0)
    goto LABEL_12;
LABEL_7:
  if ((v5 & 8) == 0)
    goto LABEL_8;
LABEL_14:
  *((_DWORD *)v3 + 10) |= 8u;
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)v3 + 2);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *)operator new();
    v9 = this;
    *(_QWORD *)this = &off_1E25BCD70;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_
                                                                                           + 16);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergeFrom(v9, v10);
  if ((*((_DWORD *)a2 + 10) & 0x10) != 0)
  {
LABEL_19:
    *((_DWORD *)v3 + 10) |= 0x10u;
    v11 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)v3 + 3);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25BCD70;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 3) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)a2 + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_
                                                                                             + 24);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18D14E8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::~GlonassTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  *(_QWORD *)this = &off_1E25BAE80;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::~GlonassTimeInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BAE80;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(this + 40);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_DWORD *)(this + 32) = 0;
    if ((v1 & 8) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        v1 = *(_DWORD *)(this + 40);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  char *v12;
  char *v13;
  uint64_t result;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;

  v4 = (unsigned int *)((char *)this + 8);
  v5 = (unsigned int *)((char *)this + 12);
  while (2)
  {
    v6 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v6 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v10;
          v11 = v10 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v11 < v9 && *v11 == 16)
        {
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_28:
        if ((unint64_t)v12 >= v9 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v12;
          v15 = v12 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v15 >= v9 || *v15 != 24)
          continue;
        v13 = v15 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_36:
        v32 = 0;
        if ((unint64_t)v13 >= v9 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!(_DWORD)result)
            return result;
          v16 = v32;
        }
        else
        {
          v16 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        if (v16 <= 5)
        {
          *((_DWORD *)this + 10) |= 4u;
          *((_DWORD *)this + 8) = v16;
        }
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_46:
        *((_DWORD *)this + 10) |= 8u;
        v18 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)this + 2);
        if (!v18)
        {
          v18 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)operator new();
          *(_QWORD *)v18 = &off_1E25BCD70;
          *((_QWORD *)v18 + 1) = 0;
          *((_QWORD *)v18 + 2) = 0;
          *((_QWORD *)v18 + 3) = 0;
          *((_QWORD *)this + 2) = v18;
        }
        v33 = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33))return 0;
        }
        else
        {
          v33 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergePartialFromCodedStream(v18, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_60:
        *((_DWORD *)this + 10) |= 0x10u;
        v26 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)this + 3);
        if (!v26)
        {
          v26 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)operator new();
          *(_QWORD *)v26 = &off_1E25BCD70;
          *((_QWORD *)v26 + 1) = 0;
          *((_QWORD *)v26 + 2) = 0;
          *((_QWORD *)v26 + 3) = 0;
          *((_QWORD *)this + 3) = v26;
        }
        v34 = 0;
        v27 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0;
        }
        else
        {
          v34 = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)a2 + 14);
        v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 < v29)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::MergePartialFromCodedStream(v26, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v30 = *((_DWORD *)a2 + 14);
              v23 = __OFSUB__(v30, 1);
              v31 = v30 - 1;
              if (v31 < 0 == v23)
                *((_DWORD *)a2 + 14) = v31;
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_36;
      case 4u:
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_46;
        goto LABEL_20;
      case 5u:
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_20;
        goto LABEL_60;
      default:
        v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = this[10];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[8], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    goto LABEL_13;
  }
LABEL_10:
  v7 = *((_QWORD *)v5 + 2);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_ + 16);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
  if ((v5[10] & 0x10) != 0)
  {
LABEL_13:
    v8 = *((_QWORD *)v5 + 3);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_ + 24);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_36;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 10);
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v6 = 2;
  }
  v3 = (v6 + v3);
LABEL_14:
  if ((v2 & 4) != 0)
  {
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v8 = 2;
    }
    v3 = (v8 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_16:
      if ((v2 & 0x10) == 0)
        goto LABEL_36;
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)this + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
    v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_
                                                                                    + 16);
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::ByteSize(v9);
  v11 = (int)v10;
  if (v10 >= 0x80)
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  else
    v12 = 1;
  v3 = (v3 + v11 + v12 + 1);
  if ((*((_DWORD *)this + 10) & 0x10) != 0)
  {
LABEL_30:
    v13 = (CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion *)*((_QWORD *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(0);
      v13 = *(CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::default_instance_
                                                                                       + 24);
    }
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GlonassSubsecondConversion::ByteSize(v13);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v16 = 1;
    v3 = (v3 + v15 + v16 + 1);
  }
LABEL_36:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    v5 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    LODWORD(v6) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GlonassTimeInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GlonassTimeInfo");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::SubSecondConversion(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *a2)
{
  *(_QWORD *)this = &off_1E25BC140;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(this, a2);
  return this;
}

void sub_18D14F2A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D14F38C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::~SubSecondConversion(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  *(_QWORD *)this = &off_1E25BC140;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::~SubSecondConversion(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::New(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC140;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  unint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t result;
  _BYTE *v13;
  unint64_t v14;

  v4 = (unint64_t *)((char *)this + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v5 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v5 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v8 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_19;
          v10 = (char *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 >= v9 || *v10 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
            if (!(_DWORD)result)
              return result;
            v11 = (_BYTE *)*((_QWORD *)a2 + 1);
            v9 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v4 = *v10;
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
          }
          *((_DWORD *)this + 9) |= 1u;
          if ((unint64_t)v11 < v9 && *v11 == 17)
          {
            *((_QWORD *)a2 + 1) = v11 + 1;
            goto LABEL_27;
          }
        }
        if (v7 != 2)
          break;
        v8 = TagFallback & 7;
        if (v8 != 1)
          goto LABEL_19;
LABEL_27:
        v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v14) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v14;
        *((_DWORD *)this + 9) |= 2u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 < *((_QWORD *)a2 + 2) && *v13 == 25)
        {
          *((_QWORD *)a2 + 1) = v13 + 1;
          goto LABEL_31;
        }
      }
      if (v7 != 3)
        break;
      v8 = TagFallback & 7;
      if (v8 != 1)
        goto LABEL_19;
LABEL_31:
      v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v14) & 1) == 0)
        return 0;
      *((_QWORD *)this + 3) = v14;
      *((_DWORD *)this + 9) |= 4u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_19:
    if (v8 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 36) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 8) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this, const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *this, CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SubSecondConversion");
}

double CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this)
{
  double result;

  *((_DWORD *)this + 14) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::BeidouTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *a2)
{
  *(_QWORD *)this = &off_1E25BA688;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D14F8E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *v3;
  double result;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v8;
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v12;
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v14;
  CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v15;
  const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *v16;
  _BYTE v17[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 56);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 56) & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 14) |= 1u;
    *((_DWORD *)v3 + 12) = v6;
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_17;
    }
  }
  else if ((*((_BYTE *)a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 14) |= 2u;
  v7 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)v3 + 1);
  if (!v7)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *)operator new();
    v7 = this;
    *(_QWORD *)this = &off_1E25BA868;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 1) = this;
  }
  v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)a2 + 1);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_
                                                                              + 8);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergeFrom(v7, v8);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
LABEL_22:
    *((_DWORD *)v3 + 14) |= 8u;
    v11 = (CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)v3 + 3);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25BC140;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 3) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)a2 + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_
                                                                                      + 24);
    }
    result = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(v11, v12);
    v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return result;
      goto LABEL_32;
    }
    goto LABEL_27;
  }
LABEL_17:
  *((_DWORD *)v3 + 14) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)v3 + 2);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *)operator new();
    v9 = this;
    *(_QWORD *)this = &off_1E25BC140;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 2) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_
                                                                                    + 16);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(v9, v10);
  v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) != 0)
    goto LABEL_22;
LABEL_8:
  if ((v5 & 0x10) == 0)
    goto LABEL_9;
LABEL_27:
  *((_DWORD *)v3 + 14) |= 0x10u;
  v13 = (CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)v3 + 4);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *)operator new();
    v13 = this;
    *(_QWORD *)this = &off_1E25BC140;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 4) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_
                                                                                    + 32);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(v13, v14);
  if ((*((_DWORD *)a2 + 14) & 0x20) != 0)
  {
LABEL_32:
    *((_DWORD *)v3 + 14) |= 0x20u;
    v15 = (CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)v3 + 5);
    if (!v15)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *)operator new();
      v15 = this;
      *(_QWORD *)this = &off_1E25BC140;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 5) = this;
    }
    v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)*((_QWORD *)a2 + 5);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
      v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion **)(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_
                                                                                      + 40);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergeFrom(v15, v16);
  }
  return result;
}

void sub_18D14FBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::~BeidouTimeInfo(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this)
{
  *(_QWORD *)this = &off_1E25BA688;
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::~BeidouTimeInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *)CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA688;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 56);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 48) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::Clear(this);
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 8) != 0)
    {
      v4 = *(_QWORD *)(v1 + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v5 = *(_QWORD *)(v1 + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      v6 = *(_QWORD *)(v1 + 40);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 36))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_QWORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BeidouTimeInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  int v11;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;

  v4 = (unsigned int *)((char *)this + 48);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        v11 = *((_DWORD *)this + 14) | 1;
        *((_DWORD *)this + 14) = v11;
        if ((unint64_t)v10 < v8 && *v10 == 18)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        v11 = *((_DWORD *)this + 14);
LABEL_30:
        *((_DWORD *)this + 14) = v11 | 2;
        v13 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)*((_QWORD *)this + 1);
        if (!v13)
        {
          v13 = (CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo *)operator new();
          *(_QWORD *)v13 = &off_1E25BA868;
          *((_QWORD *)v13 + 1) = 0;
          *((_QWORD *)v13 + 2) = 0;
          *((_QWORD *)v13 + 3) = 0;
          *((_QWORD *)this + 1) = v13;
        }
        v48 = 0;
        v14 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0;
        }
        else
        {
          v48 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)a2 + 14);
        v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::LeapSecondInfo::MergePartialFromCodedStream(v13, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v17 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)a2 + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_44:
        *((_DWORD *)this + 14) |= 4u;
        v21 = *((_QWORD *)this + 2);
        if (!v21)
        {
          v21 = operator new();
          *(_QWORD *)v21 = &off_1E25BC140;
          *(_OWORD *)(v21 + 8) = 0u;
          *(_OWORD *)(v21 + 24) = 0u;
          *((_QWORD *)this + 2) = v21;
        }
        v48 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0;
        }
        else
        {
          v48 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)v21, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v18)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_58:
        *((_DWORD *)this + 14) |= 8u;
        v28 = *((_QWORD *)this + 3);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)v28 = &off_1E25BC140;
          *(_OWORD *)(v28 + 8) = 0u;
          *(_OWORD *)(v28 + 24) = 0u;
          *((_QWORD *)this + 3) = v28;
        }
        v48 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0;
        }
        else
        {
          v48 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v18)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_72:
        *((_DWORD *)this + 14) |= 0x10u;
        v35 = *((_QWORD *)this + 4);
        if (!v35)
        {
          v35 = operator new();
          *(_QWORD *)v35 = &off_1E25BC140;
          *(_OWORD *)(v35 + 8) = 0u;
          *(_OWORD *)(v35 + 24) = 0u;
          *((_QWORD *)this + 4) = v35;
        }
        v48 = 0;
        v36 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0;
        }
        else
        {
          v48 = *v36;
          *((_QWORD *)a2 + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)a2 + 14);
        v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)v35, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v39 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v18)
          *((_DWORD *)a2 + 14) = v40;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_86:
        *((_DWORD *)this + 14) |= 0x20u;
        v42 = *((_QWORD *)this + 5);
        if (!v42)
        {
          v42 = operator new();
          *(_QWORD *)v42 = &off_1E25BC140;
          *(_OWORD *)(v42 + 8) = 0u;
          *(_OWORD *)(v42 + 24) = 0u;
          *((_QWORD *)this + 5) = v42;
        }
        v48 = 0;
        v43 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v48))return 0;
        }
        else
        {
          v48 = *v43;
          *((_QWORD *)a2 + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)a2 + 14);
        v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SubSecondConversion *)v42, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v46 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v18)
          *((_DWORD *)a2 + 14) = v47;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_44;
        goto LABEL_22;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_58;
        goto LABEL_22;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_72;
        goto LABEL_22;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        goto LABEL_86;
      default:
        v7 = TagFallback & 7;
LABEL_22:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

